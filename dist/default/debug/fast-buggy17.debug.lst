

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 24 12:04:43 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    89  0000                     
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	opt stack 0
    93  001000  00                 	db	0
    94  001001                     exp@coeff:
    95                           	opt stack 0
    96  001001  00                 	db	0
    97  001002  80                 	db	128
    98  001003  3F                 	db	63
    99  001004  72                 	db	114
   100  001005  31                 	db	49
   101  001006  3F                 	db	63
   102  001007  FE                 	db	254
   103  001008  75                 	db	117
   104  001009  3E                 	db	62
   105  00100A  58                 	db	88
   106  00100B  63                 	db	99
   107  00100C  3D                 	db	61
   108  00100D  95                 	db	149
   109  00100E  1D                 	db	29
   110  00100F  3C                 	db	60
   111  001010  C5                 	db	197
   112  001011  AE                 	db	174
   113  001012  3A                 	db	58
   114  001013  79                 	db	121
   115  001014  21                 	db	33
   116  001015  39                 	db	57
   117  001016  94                 	db	148
   118  001017  80                 	db	128
   119  001018  37                 	db	55
   120  001019  93                 	db	147
   121  00101A  A7                 	db	167
   122  00101B  35                 	db	53
   123  00101C  56                 	db	86
   124  00101D  15                 	db	21
   125  00101E  34                 	db	52
   126  00101F                     __end_ofexp@coeff:
   127                           	opt stack 0
   128  00101F                     log@coeff:
   129                           	opt stack 0
   130  00101F  00                 	db	0
   131  001020  00                 	db	0
   132  001021  00                 	db	0
   133  001022  00                 	db	0
   134  001023  80                 	db	128
   135  001024  3F                 	db	63
   136  001025  F0                 	db	240
   137  001026  FF                 	db	255
   138  001027  BE                 	db	190
   139  001028  E2                 	db	226
   140  001029  A9                 	db	169
   141  00102A  3E                 	db	62
   142  00102B  83                 	db	131
   143  00102C  76                 	db	118
   144  00102D  BE                 	db	190
   145  00102E  AE                 	db	174
   146  00102F  2B                 	db	43
   147  001030  3E                 	db	62
   148  001031  3C                 	db	60
   149  001032  C3                 	db	195
   150  001033  BD                 	db	189
   151  001034  D2                 	db	210
   152  001035  13                 	db	19
   153  001036  3D                 	db	61
   154  001037  78                 	db	120
   155  001038  D3                 	db	211
   156  001039  BB                 	db	187
   157  00103A                     __end_oflog@coeff:
   158                           	opt stack 0
   159  00103A  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           	psect	nvBANK0
   162  0000D9                     __pnvBANK0:
   163                           	opt stack 0
   164  0000D9                     _convert_cm:
   165                           	opt stack 0
   166  0000D9                     	ds	3
   167  0000DC                     _convert_in:
   168                           	opt stack 0
   169  0000DC                     	ds	3
   170  0000                     _CCP4CON	set	3955
   171  0000                     _CCP5CON	set	3952
   172  0000                     _CCPR4L	set	3956
   173  0000                     _CCPR5L	set	3953
   174  0000                     _LATDbits	set	3980
   175  0000                     _LATE	set	3981
   176  0000                     _LATEbits	set	3981
   177  0000                     _LATJ	set	3985
   178  0000                     _LATJbits	set	3985
   179  0000                     _PORTBbits	set	3969
   180  0000                     _PR4	set	3959
   181  0000                     _T4CONbits	set	3958
   182  0000                     _TRISA	set	3986
   183  0000                     _TRISB	set	3987
   184  0000                     _TRISC	set	3988
   185  0000                     _TRISD	set	3989
   186  0000                     _TRISE	set	3990
   187  0000                     _TRISG	set	3992
   188  0000                     _TRISGbits	set	3992
   189  0000                     _TRISJ	set	3994
   190  0000                     _ADCON0	set	4034
   191  0000                     _ADCON0bits	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ADCON2	set	4032
   194  0000                     _ADRESH	set	4036
   195  0000                     _ADRESL	set	4035
   196  0000                     _IPR1bits	set	3999
   197  0000                     _PIE1bits	set	3997
   198  0000                     _PIR1bits	set	3998
   199  0000                     _PR2	set	4043
   200  0000                     _RCONbits	set	4048
   201  0000                     _T1CONbits	set	4045
   202  0000                     _T2CON	set	4042
   203  0000                     _T2CONbits	set	4042
   204  0000                     _T3CONbits	set	4017
   205  0000                     _TMR1H	set	4047
   206  0000                     _TMR1L	set	4046
   207  0000                     _TMR2	set	4044
   208  0000                     _T0CON	set	4053
   209  0000                     _T0CONbits	set	4053
   210  0000                     _TMR0H	set	4055
   211  0000                     _TMR0L	set	4054
   212  0000                     _INTCON2bits	set	4081
   213  0000                     _INTCONbits	set	4082
   214                           
   215                           ; #config settings
   216  0000                     
   217                           	psect	cinit
   218  002D90                     __pcinit:
   219                           	opt stack 0
   220  002D90                     start_initialization:
   221                           	opt stack 0
   222  002D90                     __initialization:
   223                           	opt stack 0
   224                           
   225                           ; Clear objects allocated to BANK0 (26 bytes)
   226  002D90  EE00  F0BF         	lfsr	0,__pbssBANK0
   227  002D94  0E1A               	movlw	26
   228  002D96                     clear_0:
   229  002D96  6AEE               	clrf	postinc0,c
   230  002D98  06E8               	decf	wreg,f,c
   231  002D9A  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to COMRAM (31 bytes)
   234  002D9C  EE00  F028         	lfsr	0,__pbssCOMRAM
   235  002DA0  0E1F               	movlw	31
   236  002DA2                     clear_1:
   237  002DA2  6AEE               	clrf	postinc0,c
   238  002DA4  06E8               	decf	wreg,f,c
   239  002DA6  E1FD               	bnz	clear_1
   240  002DA8                     end_of_initialization:
   241                           	opt stack 0
   242  002DA8                     __end_of__initialization:
   243                           	opt stack 0
   244  002DA8  0100               	movlb	0
   245  002DAA  EF71  F00A         	goto	_main	;jump to C main() function
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           
   249                           	psect	bssCOMRAM
   250  000028                     __pbssCOMRAM:
   251                           	opt stack 0
   252  000028                     _sensor_readings_raw:
   253                           	opt stack 0
   254  000028                     	ds	10
   255  000032                     _SystemClock:
   256                           	opt stack 0
   257  000032                     	ds	6
   258  000038                     _millisecond_COUNT:
   259                           	opt stack 0
   260  000038                     	ds	2
   261  00003A                     _sensor_threshold:
   262                           	opt stack 0
   263  00003A                     	ds	2
   264  00003C                     _echo_acq_done:
   265                           	opt stack 0
   266  00003C                     	ds	1
   267  00003D                     _line_mode:
   268                           	opt stack 0
   269  00003D                     	ds	1
   270  00003E                     _second_rollover_flag:
   271                           	opt stack 0
   272  00003E                     	ds	1
   273  00003F                     _sensor_acq_done:
   274                           	opt stack 0
   275  00003F                     	ds	1
   276  000040                     _sensor_acq_index:
   277                           	opt stack 0
   278  000040                     	ds	1
   279  000041                     _system_clock_enable:
   280                           	opt stack 0
   281  000041                     	ds	1
   282  000042                     _sensor_status:
   283                           	opt stack 0
   284  000042                     	ds	5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	bssBANK0
   289  0000BF                     __pbssBANK0:
   290                           	opt stack 0
   291  0000BF                     _sensor_offsets:
   292                           	opt stack 0
   293  0000BF                     	ds	10
   294  0000C9                     _sensor_readings_normalised:
   295                           	opt stack 0
   296  0000C9                     	ds	10
   297  0000D3                     _PID_output:
   298                           	opt stack 0
   299  0000D3                     	ds	2
   300  0000D5                     _errno:
   301                           	opt stack 0
   302  0000D5                     	ds	2
   303  0000D7                     _PID_error:
   304                           	opt stack 0
   305  0000D7                     	ds	2
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	cstackBANK0
   310  000060                     __pcstackBANK0:
   311                           	opt stack 0
   312  000060                     ??_SetChanADC:
   313  000060                     ??_Delay10KTCYx:
   314  000060                     ??_NormaliseSensorReadings:
   315  000060                     ??_CalculateSensorStatuses:
   316  000060                     ?_ReadTimer1:
   317                           	opt stack 0
   318  000060                     ?_ReadMillis:
   319                           	opt stack 0
   320  000060                     ?_CalculateSensorError:
   321                           	opt stack 0
   322  000060                     ?___wmul:
   323                           	opt stack 0
   324  000060                     ?___ftpack:
   325                           	opt stack 0
   326  000060                     ?_frexp:
   327                           	opt stack 0
   328  000060                     ?___ftneg:
   329                           	opt stack 0
   330  000060                     OpenADC@config2:
   331                           	opt stack 0
   332  000060                     OpenPWM4@period:
   333                           	opt stack 0
   334  000060                     OpenPWM5@period:
   335                           	opt stack 0
   336  000060                     OpenTimer0@config:
   337                           	opt stack 0
   338  000060                     OpenTimer2@config:
   339                           	opt stack 0
   340  000060                     Delay1TCYx@unit:
   341                           	opt stack 0
   342  000060                     CalculateSensorError@sum:
   343                           	opt stack 0
   344  000060                     DisplaySensorStatuses@status_array:
   345                           	opt stack 0
   346  000060                     SetDCPWM4@dutycycle:
   347                           	opt stack 0
   348  000060                     SetDCPWM5@dutycycle:
   349                           	opt stack 0
   350  000060                     WriteTimer0@timer0:
   351                           	opt stack 0
   352  000060                     ___wmul@multiplier:
   353                           	opt stack 0
   354  000060                     ConfigureUltrasound@echo_to_cm:
   355                           	opt stack 0
   356  000060                     ___ftpack@arg:
   357                           	opt stack 0
   358  000060                     ___ftge@ff1:
   359                           	opt stack 0
   360  000060                     ___ftneg@f1:
   361                           	opt stack 0
   362  000060                     frexp@value:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x0
   366  000060                     	ds	1
   367  000061                     OpenADC@portconfig:
   368                           	opt stack 0
   369  000061                     SetChanADC@channel:
   370                           	opt stack 0
   371  000061                     Delay10KTCYx@unit:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x1
   375  000061                     	ds	1
   376  000062                     ??_SetDCPWM5:
   377  000062                     ??_SetDCPWM4:
   378  000062                     ??_OpenADC:
   379  000062                     ??_DisplaySensorStatuses:
   380  000062                     SetADCChannel@channel:
   381                           	opt stack 0
   382  000062                     WriteTimer0@timer:
   383                           	opt stack 0
   384  000062                     ReadTimer1@timer:
   385                           	opt stack 0
   386  000062                     ___wmul@multiplicand:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x2
   390  000062                     	ds	1
   391  000063                     ??_CalibrateSensors:
   392  000063                     CalculateSensorStatuses@index:
   393                           	opt stack 0
   394  000063                     ___ftpack@exp:
   395                           	opt stack 0
   396  000063                     frexp@eptr:
   397                           	opt stack 0
   398  000063                     ConfigureUltrasound@echo_to_in:
   399                           	opt stack 0
   400  000063                     ___ftge@ff2:
   401                           	opt stack 0
   402                           
   403                           ; 3 bytes @ 0x3
   404  000063                     	ds	1
   405  000064                     ?_ReadEchoLength:
   406                           	opt stack 0
   407  000064                     NormaliseSensorReadings@index:
   408                           	opt stack 0
   409  000064                     DisplaySensorStatuses@index:
   410                           	opt stack 0
   411  000064                     OpenADC@config:
   412                           	opt stack 0
   413  000064                     ___ftpack@sign:
   414                           	opt stack 0
   415  000064                     SetDCPWM4@DCycle:
   416                           	opt stack 0
   417  000064                     SetDCPWM5@DCycle:
   418                           	opt stack 0
   419  000064                     ___wmul@product:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x4
   423  000064                     	ds	1
   424  000065                     ??___ftpack:
   425  000065                     ??_frexp:
   426  000065                     CalibrateSensors@index:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x5
   430  000065                     	ds	1
   431  000066                     ??___ftge:
   432  000066                     SetDCMotorL@duty_cycle:
   433                           	opt stack 0
   434  000066                     SetDCMotorR@duty_cycle:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x6
   438  000066                     	ds	2
   439  000068                     ?___ftdiv:
   440                           	opt stack 0
   441  000068                     ?___awtoft:
   442                           	opt stack 0
   443  000068                     ?___lbtoft:
   444                           	opt stack 0
   445  000068                     ?___lltoft:
   446                           	opt stack 0
   447  000068                     ___awtoft@c:
   448                           	opt stack 0
   449  000068                     ___ftdiv@f1:
   450                           	opt stack 0
   451  000068                     ___lltoft@c:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x8
   455  000068                     	ds	3
   456  00006B                     ___awtoft@sign:
   457                           	opt stack 0
   458  00006B                     ___lbtoft@c:
   459                           	opt stack 0
   460  00006B                     ___ftdiv@f2:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0xB
   464  00006B                     	ds	1
   465  00006C                     ??___lltoft:
   466  00006C                     ?___ftmul:
   467                           	opt stack 0
   468  00006C                     ___ftmul@f1:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0xC
   472  00006C                     	ds	2
   473  00006E                     ??___ftdiv:
   474                           
   475                           ; 0 bytes @ 0xE
   476  00006E                     	ds	1
   477  00006F                     ___ftmul@f2:
   478                           	opt stack 0
   479                           
   480                           ; 3 bytes @ 0xF
   481  00006F                     	ds	1
   482  000070                     ___lltoft@exp:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x10
   486  000070                     	ds	1
   487  000071                     ___ftdiv@cntr:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x11
   491  000071                     	ds	1
   492  000072                     ??___ftmul:
   493  000072                     ___ftdiv@f3:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x12
   497  000072                     	ds	3
   498  000075                     ___ftdiv@exp:
   499                           	opt stack 0
   500  000075                     ___ftmul@exp:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x15
   504  000075                     	ds	1
   505  000076                     ___ftdiv@sign:
   506                           	opt stack 0
   507  000076                     ___ftmul@f3_as_product:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x16
   511  000076                     	ds	3
   512  000079                     ___ftmul@cntr:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x19
   516  000079                     	ds	1
   517  00007A                     ___ftmul@sign:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x1A
   521  00007A                     	ds	1
   522  00007B                     ?___ftadd:
   523                           	opt stack 0
   524  00007B                     ?___fttol:
   525                           	opt stack 0
   526  00007B                     ___ftadd@f1:
   527                           	opt stack 0
   528  00007B                     ___fttol@f1:
   529                           	opt stack 0
   530                           
   531                           ; 3 bytes @ 0x1B
   532  00007B                     	ds	3
   533  00007E                     ___ftadd@f2:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0x1E
   537  00007E                     	ds	1
   538  00007F                     ??___fttol:
   539                           
   540                           ; 0 bytes @ 0x1F
   541  00007F                     	ds	2
   542  000081                     ??___ftadd:
   543                           
   544                           ; 0 bytes @ 0x21
   545  000081                     	ds	3
   546  000084                     ___ftadd@sign:
   547                           	opt stack 0
   548  000084                     ___fttol@sign1:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x24
   552  000084                     	ds	1
   553  000085                     ___ftadd@exp2:
   554                           	opt stack 0
   555  000085                     ___fttol@lval:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x25
   559  000085                     	ds	1
   560  000086                     ___ftadd@exp1:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x26
   564  000086                     	ds	1
   565  000087                     ?___ftsub:
   566                           	opt stack 0
   567  000087                     ?_eval_poly:
   568                           	opt stack 0
   569  000087                     ___ftsub@f1:
   570                           	opt stack 0
   571  000087                     eval_poly@x:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x27
   575  000087                     	ds	2
   576  000089                     ___fttol@exp1:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x29
   580  000089                     	ds	1
   581  00008A                     ?___altoft:
   582                           	opt stack 0
   583  00008A                     eval_poly@d:
   584                           	opt stack 0
   585  00008A                     ___ftsub@f2:
   586                           	opt stack 0
   587  00008A                     ___altoft@c:
   588                           	opt stack 0
   589                           
   590                           ; 4 bytes @ 0x2A
   591  00008A                     	ds	2
   592  00008C                     eval_poly@n:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x2C
   596  00008C                     	ds	1
   597  00008D                     
   598                           ; 0 bytes @ 0x2D
   599  00008D                     	ds	1
   600  00008E                     ??_eval_poly:
   601  00008E                     ??___altoft:
   602                           
   603                           ; 0 bytes @ 0x2E
   604  00008E                     	ds	2
   605  000090                     eval_poly@res:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x30
   609  000090                     	ds	2
   610  000092                     ___altoft@exp:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x32
   614  000092                     	ds	1
   615  000093                     ?_log:
   616                           	opt stack 0
   617  000093                     ?_ldexp:
   618                           	opt stack 0
   619  000093                     ___altoft@sign:
   620                           	opt stack 0
   621  000093                     ldexp@value:
   622                           	opt stack 0
   623  000093                     log@x:
   624                           	opt stack 0
   625                           
   626                           ; 3 bytes @ 0x33
   627  000093                     	ds	1
   628  000094                     ?_floor:
   629                           	opt stack 0
   630  000094                     floor@x:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x34
   634  000094                     	ds	2
   635  000096                     ldexp@newexp:
   636                           	opt stack 0
   637  000096                     log@exponent:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x36
   641  000096                     	ds	1
   642  000097                     floor@i:
   643                           	opt stack 0
   644                           
   645                           ; 3 bytes @ 0x37
   646  000097                     	ds	1
   647  000098                     ??_ldexp:
   648                           
   649                           ; 0 bytes @ 0x38
   650  000098                     	ds	2
   651  00009A                     floor@expon:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x3A
   655  00009A                     	ds	2
   656  00009C                     ?_exp:
   657                           	opt stack 0
   658  00009C                     exp@x:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x3C
   662  00009C                     	ds	3
   663  00009F                     _exp$2852:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x3F
   667  00009F                     	ds	3
   668  0000A2                     exp@exponent:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x42
   672  0000A2                     	ds	2
   673  0000A4                     exp@sign:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x44
   677  0000A4                     	ds	1
   678  0000A5                     ?_pow:
   679                           	opt stack 0
   680  0000A5                     pow@x:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0x45
   684  0000A5                     	ds	3
   685  0000A8                     pow@y:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x48
   689  0000A8                     	ds	3
   690  0000AB                     _pow$2850:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x4B
   694  0000AB                     	ds	3
   695  0000AE                     _pow$2851:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x4E
   699  0000AE                     	ds	3
   700  0000B1                     pow@sign:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x51
   704  0000B1                     	ds	1
   705  0000B2                     pow@yi:
   706                           	opt stack 0
   707                           
   708                           ; 4 bytes @ 0x52
   709  0000B2                     	ds	4
   710  0000B6                     _CalculateSensorSums$2849:
   711                           	opt stack 0
   712                           
   713                           ; 3 bytes @ 0x56
   714  0000B6                     	ds	3
   715  0000B9                     CalculateSensorSums@sum:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x59
   719  0000B9                     	ds	1
   720  0000BA                     CalculateSensorSums@index:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x5A
   724  0000BA                     	ds	1
   725  0000BB                     CalibrateLine@sum:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x5B
   729  0000BB                     	ds	1
   730  0000BC                     main@sensor_sum_ptr:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x5C
   734  0000BC                     	ds	2
   735  0000BE                     main@sensor_sum:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x5E
   739  0000BE                     	ds	1
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           
   743                           	psect	cstackCOMRAM
   744  000001                     __pcstackCOMRAM:
   745                           	opt stack 0
   746  000001                     ??i1_SetChanADC:
   747  000001                     ?_ReadADC:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x0
   751  000001                     	ds	1
   752  000002                     i1SetChanADC@channel:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x1
   756  000002                     	ds	1
   757  000003                     ??_ReadADC:
   758  000003                     i1SetADCChannel@channel:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x2
   762  000003                     	ds	2
   763  000005                     ??_isrLP:
   764                           
   765                           ; 0 bytes @ 0x4
   766  000005                     	ds	17
   767  000016                     WriteTimer1@timer1:
   768                           	opt stack 0
   769  000016                     i2WriteTimer0@timer0:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x15
   773  000016                     	ds	2
   774  000018                     WriteTimer1@timer:
   775                           	opt stack 0
   776  000018                     i2WriteTimer0@timer:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x17
   780  000018                     	ds	2
   781  00001A                     ??_isrHP:
   782                           
   783                           ; 0 bytes @ 0x19
   784  00001A                     	ds	14
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 564 in file "FastBuggy17_Main_Code.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  sensor_sum_p    2   92[BANK0 ] PTR unsigned char 
   798 ;;		 -> main@sensor_sum(1), 
   799 ;;  sensor_sum      1   94[BANK0 ] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;		None               void
   802 ;; Registers used:
   803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;Total ram usage:        3 bytes
   814 ;; Hardware stack levels required when called:   13
   815 ;; This function calls:
   816 ;;		_BusyDistanceAcq
   817 ;;		_BusySensorAcq
   818 ;;		_CalculateSensorError
   819 ;;		_CalculateSensorStatuses
   820 ;;		_CalculateSensorSums
   821 ;;		_CalibrateLine
   822 ;;		_CalibrateSensors
   823 ;;		_ChangeMode
   824 ;;		_ConfigureADC
   825 ;;		_ConfigureBuggyIO
   826 ;;		_ConfigureInterrupts
   827 ;;		_ConfigurePWM
   828 ;;		_ConfigureTimer0
   829 ;;		_ConfigureTimer2
   830 ;;		_ConfigureUltrasound
   831 ;;		_Delay10KTCYx
   832 ;;		_DisplaySensorStatuses
   833 ;;		_EnableMotors
   834 ;;		_EnableSensorLEDS
   835 ;;		_GetDistance
   836 ;;		_GetSensorReadings
   837 ;;		_NormaliseSensorReadings
   838 ;;		_ReadEchoLength
   839 ;;		_ReadMillis
   840 ;;		_ResetMillis
   841 ;;		_SetDCMotorL
   842 ;;		_SetDCMotorR
   843 ;;		_SetDirectionForward
   844 ;;		_SetUnipolar
   845 ;;		_StopMotors
   846 ;;		___wmul
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text0
   853  0014E2                     __ptext0:
   854                           	opt stack 0
   855  0014E2                     _main:
   856                           	opt stack 18
   857                           
   858                           ;FastBuggy17_Main_Code.c: 567: unsigned char sensor_sum;
   859                           ;FastBuggy17_Main_Code.c: 570: unsigned char *sensor_sum_ptr;
   860                           ;FastBuggy17_Main_Code.c: 571: sensor_sum_ptr = &sensor_sum;
   861                           
   862                           ;incstack = 0
   863  0014E2  0EBE               	movlw	low main@sensor_sum
   864  0014E4  0100               	movlb	0	; () banked
   865  0014E6  6FBC               	movwf	main@sensor_sum_ptr& (0+255),b
   866  0014E8  0E00               	movlw	high main@sensor_sum
   867  0014EA  0100               	movlb	0	; () banked
   868  0014EC  6FBD               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
   869                           
   870                           ; BSR set to: 0
   871                           ;FastBuggy17_Main_Code.c: 573: ConfigureUltrasound(0.0137, 0.054);
   872  0014EE  0E76               	movlw	118
   873  0014F0  0100               	movlb	0	; () banked
   874  0014F2  6F60               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
   875  0014F4  0E60               	movlw	96
   876  0014F6  0100               	movlb	0	; () banked
   877  0014F8  6F61               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
   878  0014FA  0E3C               	movlw	60
   879  0014FC  0100               	movlb	0	; () banked
   880  0014FE  6F62               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
   881  001500  0E2F               	movlw	47
   882  001502  0100               	movlb	0	; () banked
   883  001504  6F63               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
   884  001506  0E5D               	movlw	93
   885  001508  0100               	movlb	0	; () banked
   886  00150A  6F64               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
   887  00150C  0E3D               	movlw	61
   888  00150E  0100               	movlb	0	; () banked
   889  001510  6F65               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
   890  001512  EC04  F017         	call	_ConfigureUltrasound	;wreg free
   891                           
   892                           ;FastBuggy17_Main_Code.c: 574: ConfigureBuggyIO();
   893  001516  EC11  F017         	call	_ConfigureBuggyIO	;wreg free
   894                           
   895                           ;FastBuggy17_Main_Code.c: 575: ConfigureInterrupts();
   896  00151A  EC4B  F017         	call	_ConfigureInterrupts	;wreg free
   897                           
   898                           ;FastBuggy17_Main_Code.c: 576: ConfigureTimer0();
   899  00151E  EC2A  F017         	call	_ConfigureTimer0	;wreg free
   900                           
   901                           ;FastBuggy17_Main_Code.c: 577: ConfigureTimer2();
   902  001522  ECD7  F017         	call	_ConfigureTimer2	;wreg free
   903                           
   904                           ;FastBuggy17_Main_Code.c: 578: ConfigurePWM();
   905  001526  ECCB  F017         	call	_ConfigurePWM	;wreg free
   906                           
   907                           ;FastBuggy17_Main_Code.c: 579: ConfigureADC();
   908  00152A  EC55  F017         	call	_ConfigureADC	;wreg free
   909                           
   910                           ;FastBuggy17_Main_Code.c: 581: EnableSensorLEDS();
   911  00152E  ECE1  F017         	call	_EnableSensorLEDS	;wreg free
   912                           
   913                           ;FastBuggy17_Main_Code.c: 583: line_mode = 0;
   914  001532  0E00               	movlw	0
   915  001534  6E3D               	movwf	_line_mode,c
   916                           
   917                           ;FastBuggy17_Main_Code.c: 585: PID_error = 0;
   918  001536  0E00               	movlw	0
   919  001538  0100               	movlb	0	; () banked
   920  00153A  6FD8               	movwf	(_PID_error+1)& (0+255),b
   921  00153C  0E00               	movlw	0
   922  00153E  6FD7               	movwf	_PID_error& (0+255),b
   923                           
   924                           ; BSR set to: 0
   925                           ;FastBuggy17_Main_Code.c: 586: PID_output = 0;
   926  001540  0E00               	movlw	0
   927  001542  0100               	movlb	0	; () banked
   928  001544  6FD4               	movwf	(_PID_output+1)& (0+255),b
   929  001546  0E00               	movlw	0
   930  001548  6FD3               	movwf	_PID_output& (0+255),b
   931                           
   932                           ; BSR set to: 0
   933                           ;FastBuggy17_Main_Code.c: 588: LATJ = 0x00;
   934  00154A  0E00               	movlw	0
   935  00154C  6E91               	movwf	3985,c	;volatile
   936                           
   937                           ;FastBuggy17_Main_Code.c: 590: ResetMillis();
   938  00154E  EC1E  F017         	call	_ResetMillis	;wreg free
   939                           
   940                           ;FastBuggy17_Main_Code.c: 593: while(PORTBbits.RB1 == 0) {
   941  001552  D013               	goto	l4452
   942  001554                     l4442:
   943                           
   944                           ;FastBuggy17_Main_Code.c: 595: CalibrateSensors();
   945  001554  EC19  F015         	call	_CalibrateSensors	;wreg free
   946                           
   947                           ;FastBuggy17_Main_Code.c: 596: Delay10KTCYx(10);
   948  001558  0E0A               	movlw	10
   949  00155A  ECE6  F016         	call	_Delay10KTCYx
   950                           
   951                           ;FastBuggy17_Main_Code.c: 598: if(ReadMillis() >= 100) {
   952  00155E  ECD2  F017         	call	_ReadMillis	;wreg free
   953  001562  0100               	movlb	0	; () banked
   954  001564  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
   955  001566  E105               	bnz	u3910
   956  001568  0E64               	movlw	100
   957  00156A  0100               	movlb	0	; () banked
   958  00156C  5D60               	subwf	?_ReadMillis& (0+255),w,b
   959  00156E  A0D8               	btfss	status,0,c
   960  001570  D004               	goto	l4452
   961  001572                     u3910:
   962                           
   963                           ; BSR set to: 0
   964                           ;FastBuggy17_Main_Code.c: 599: LATJbits.LATJ0 ^= 1;
   965  001572  7091               	btg	3985,0,c	;volatile
   966                           
   967                           ; BSR set to: 0
   968                           ;FastBuggy17_Main_Code.c: 600: ResetMillis();
   969  001574  EC1E  F017         	call	_ResetMillis	;wreg free
   970  001578  D000               	goto	l4452
   971  00157A                     l4452:
   972  00157A  A281               	btfss	3969,1,c	;volatile
   973  00157C  D7EB               	goto	l4442
   974                           
   975                           ;FastBuggy17_Main_Code.c: 601: }
   976                           ;FastBuggy17_Main_Code.c: 603: }
   977                           ;FastBuggy17_Main_Code.c: 605: ChangeMode();
   978  00157E  EC56  F016         	call	_ChangeMode	;wreg free
   979                           
   980                           ;FastBuggy17_Main_Code.c: 606: ResetMillis();
   981  001582  EC1E  F017         	call	_ResetMillis	;wreg free
   982                           
   983                           ;FastBuggy17_Main_Code.c: 609: while(PORTBbits.RB1 == 0) {
   984  001586  D00E               	goto	l4462
   985  001588                     l4456:
   986                           
   987                           ;FastBuggy17_Main_Code.c: 610: if(ReadMillis() >= 100) {
   988  001588  ECD2  F017         	call	_ReadMillis	;wreg free
   989  00158C  0100               	movlb	0	; () banked
   990  00158E  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
   991  001590  E105               	bnz	u3930
   992  001592  0E64               	movlw	100
   993  001594  0100               	movlb	0	; () banked
   994  001596  5D60               	subwf	?_ReadMillis& (0+255),w,b
   995  001598  A0D8               	btfss	status,0,c
   996  00159A  D004               	goto	l4462
   997  00159C                     u3930:
   998                           
   999                           ; BSR set to: 0
  1000                           ;FastBuggy17_Main_Code.c: 611: LATJbits.LATJ0 ^= 1;
  1001  00159C  7091               	btg	3985,0,c	;volatile
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;FastBuggy17_Main_Code.c: 612: ResetMillis();
  1005  00159E  EC1E  F017         	call	_ResetMillis	;wreg free
  1006  0015A2  D000               	goto	l4462
  1007  0015A4                     l4462:
  1008  0015A4  A281               	btfss	3969,1,c	;volatile
  1009  0015A6  D7F0               	goto	l4456
  1010                           
  1011                           ;FastBuggy17_Main_Code.c: 613: }
  1012                           ;FastBuggy17_Main_Code.c: 614: }
  1013                           ;FastBuggy17_Main_Code.c: 616: CalibrateLine();
  1014  0015A8  EC22  F014         	call	_CalibrateLine	;wreg free
  1015                           
  1016                           ;FastBuggy17_Main_Code.c: 618: LATJ = 0x00;
  1017  0015AC  0E00               	movlw	0
  1018  0015AE  6E91               	movwf	3985,c	;volatile
  1019                           
  1020                           ;FastBuggy17_Main_Code.c: 620: while(PORTBbits.RB1 == 0) {
  1021  0015B0  D00E               	goto	l4474
  1022  0015B2                     l4468:
  1023                           
  1024                           ;FastBuggy17_Main_Code.c: 621: if(ReadMillis() >= 100) {
  1025  0015B2  ECD2  F017         	call	_ReadMillis	;wreg free
  1026  0015B6  0100               	movlb	0	; () banked
  1027  0015B8  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
  1028  0015BA  E105               	bnz	u3950
  1029  0015BC  0E64               	movlw	100
  1030  0015BE  0100               	movlb	0	; () banked
  1031  0015C0  5D60               	subwf	?_ReadMillis& (0+255),w,b
  1032  0015C2  A0D8               	btfss	status,0,c
  1033  0015C4  D004               	goto	l4474
  1034  0015C6                     u3950:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;FastBuggy17_Main_Code.c: 622: LATJbits.LATJ0 ^= 1;
  1038  0015C6  7091               	btg	3985,0,c	;volatile
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;FastBuggy17_Main_Code.c: 623: ResetMillis();
  1042  0015C8  EC1E  F017         	call	_ResetMillis	;wreg free
  1043  0015CC  D000               	goto	l4474
  1044  0015CE                     l4474:
  1045  0015CE  A281               	btfss	3969,1,c	;volatile
  1046  0015D0  D7F0               	goto	l4468
  1047                           
  1048                           ;FastBuggy17_Main_Code.c: 624: }
  1049                           ;FastBuggy17_Main_Code.c: 626: }
  1050                           ;FastBuggy17_Main_Code.c: 628: ChangeMode();
  1051  0015D2  EC56  F016         	call	_ChangeMode	;wreg free
  1052                           
  1053                           ;FastBuggy17_Main_Code.c: 630: SetUnipolar();
  1054  0015D6  ECDB  F017         	call	_SetUnipolar	;wreg free
  1055                           
  1056                           ;FastBuggy17_Main_Code.c: 631: SetDCMotorL(500);
  1057  0015DA  0E01               	movlw	1
  1058  0015DC  0100               	movlb	0	; () banked
  1059  0015DE  6F67               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1060  0015E0  0EF4               	movlw	244
  1061  0015E2  6F66               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1062  0015E4  ECC4  F017         	call	_SetDCMotorL	;wreg free
  1063                           
  1064                           ;FastBuggy17_Main_Code.c: 632: SetDCMotorR(500);
  1065  0015E8  0E01               	movlw	1
  1066  0015EA  0100               	movlb	0	; () banked
  1067  0015EC  6F67               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1068  0015EE  0EF4               	movlw	244
  1069  0015F0  6F66               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1070  0015F2  ECBD  F017         	call	_SetDCMotorR	;wreg free
  1071                           
  1072                           ;FastBuggy17_Main_Code.c: 633: EnableMotors();
  1073  0015F6  ECE4  F017         	call	_EnableMotors	;wreg free
  1074                           
  1075                           ;FastBuggy17_Main_Code.c: 634: SetDirectionForward();
  1076  0015FA  ECDE  F017         	call	_SetDirectionForward	;wreg free
  1077  0015FE  D000               	goto	l4488
  1078  001600                     l4488:
  1079                           
  1080                           ;FastBuggy17_Main_Code.c: 640: GetSensorReadings();
  1081  001600  EC35  F017         	call	_GetSensorReadings	;wreg free
  1082                           
  1083                           ;FastBuggy17_Main_Code.c: 642: while(BusySensorAcq());
  1084  001604  D000               	goto	l4490
  1085  001606                     l4490:
  1086  001606  ECA5  F017         	call	_BusySensorAcq	;wreg free
  1087  00160A  0900               	iorlw	0
  1088  00160C  A4D8               	btfss	status,2,c
  1089  00160E  D7FB               	goto	l4490
  1090                           
  1091                           ;FastBuggy17_Main_Code.c: 644: NormaliseSensorReadings();
  1092  001610  ECDE  F014         	call	_NormaliseSensorReadings	;wreg free
  1093                           
  1094                           ;FastBuggy17_Main_Code.c: 646: CalculateSensorStatuses();
  1095  001614  EC3A  F011         	call	_CalculateSensorStatuses	;wreg free
  1096                           
  1097                           ;FastBuggy17_Main_Code.c: 647: sensor_sum = CalculateSensorSums();
  1098  001618  EC3E  F013         	call	_CalculateSensorSums	;wreg free
  1099  00161C  0100               	movlb	0	; () banked
  1100  00161E  6FBE               	movwf	main@sensor_sum& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;FastBuggy17_Main_Code.c: 649: GetDistance();
  1104  001620  EC68  F017         	call	_GetDistance	;wreg free
  1105                           
  1106                           ;FastBuggy17_Main_Code.c: 652: PID_error = CalculateSensorError(sensor_sum_ptr);
  1107  001624  C0BC  F060         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1108  001628  C0BD  F061         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1109  00162C  EC8D  F012         	call	_CalculateSensorError	;wreg free
  1110  001630  C060  F0D7         	movff	?_CalculateSensorError,_PID_error
  1111  001634  C061  F0D8         	movff	?_CalculateSensorError+1,_PID_error+1
  1112                           
  1113                           ;FastBuggy17_Main_Code.c: 653: PID_output = 10 * PID_error;
  1114  001638  C0D7  F060         	movff	_PID_error,___wmul@multiplier
  1115  00163C  C0D8  F061         	movff	_PID_error+1,___wmul@multiplier+1
  1116  001640  0E00               	movlw	0
  1117  001642  0100               	movlb	0	; () banked
  1118  001644  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1119  001646  0E0A               	movlw	10
  1120  001648  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1121  00164A  EC0A  F016         	call	___wmul	;wreg free
  1122  00164E  C060  F0D3         	movff	?___wmul,_PID_output
  1123  001652  C061  F0D4         	movff	?___wmul+1,_PID_output+1
  1124                           
  1125                           ;FastBuggy17_Main_Code.c: 659: DisplaySensorStatuses(sensor_status);
  1126  001656  0E42               	movlw	low _sensor_status
  1127  001658  0100               	movlb	0	; () banked
  1128  00165A  6F60               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1129  00165C  0E00               	movlw	high _sensor_status
  1130  00165E  0100               	movlb	0	; () banked
  1131  001660  6F61               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1132  001662  EC52  F015         	call	_DisplaySensorStatuses	;wreg free
  1133                           
  1134                           ;FastBuggy17_Main_Code.c: 665: if(BusyDistanceAcq() == 0) {
  1135  001666  ECAD  F017         	call	_BusyDistanceAcq	;wreg free
  1136  00166A  0900               	iorlw	0
  1137  00166C  A4D8               	btfss	status,2,c
  1138  00166E  D00E               	goto	l4510
  1139                           
  1140                           ;FastBuggy17_Main_Code.c: 666: if(ReadEchoLength() <= 1200) {
  1141  001670  EC95  F017         	call	_ReadEchoLength	;wreg free
  1142  001674  0EB1               	movlw	177
  1143  001676  0100               	movlb	0	; () banked
  1144  001678  5D64               	subwf	?_ReadEchoLength& (0+255),w,b
  1145  00167A  0E04               	movlw	4
  1146  00167C  0100               	movlb	0	; () banked
  1147  00167E  5965               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1148  001680  B0D8               	btfsc	status,0,c
  1149  001682  D004               	goto	l4510
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;FastBuggy17_Main_Code.c: 667: StopMotors();
  1153  001684  ECD7  F016         	call	_StopMotors	;wreg free
  1154  001688  D7FF               	goto	l418
  1155  00168A  D000               	goto	l4510
  1156  00168C                     l4510:
  1157                           
  1158                           ;FastBuggy17_Main_Code.c: 669: }
  1159                           ;FastBuggy17_Main_Code.c: 671: }
  1160                           ;FastBuggy17_Main_Code.c: 674: ResetMillis();
  1161  00168C  EC1E  F017         	call	_ResetMillis	;wreg free
  1162                           
  1163                           ;FastBuggy17_Main_Code.c: 675: while(ReadMillis() < 5);
  1164  001690  D000               	goto	l4512
  1165  001692                     l4512:
  1166  001692  ECD2  F017         	call	_ReadMillis	;wreg free
  1167  001696  0100               	movlb	0	; () banked
  1168  001698  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
  1169  00169A  E107               	bnz	l4514
  1170  00169C  0E05               	movlw	5
  1171  00169E  0100               	movlb	0	; () banked
  1172  0016A0  5D60               	subwf	?_ReadMillis& (0+255),w,b
  1173  0016A2  B0D8               	btfsc	status,0,c
  1174  0016A4  D002               	goto	l4514
  1175  0016A6  D7F5               	goto	l4512
  1176  0016A8  D000               	goto	l4514
  1177  0016AA                     l4514:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;FastBuggy17_Main_Code.c: 676: LATJ = 0x00;
  1181  0016AA  0E00               	movlw	0
  1182  0016AC  6E91               	movwf	3985,c	;volatile
  1183                           
  1184                           ; BSR set to: 0
  1185  0016AE  D7A8               	goto	l4488
  1186                           
  1187                           ; BSR set to: 0
  1188                           
  1189                           ; BSR set to: 0
  1190  0016B0  EF70  F000         	goto	start
  1191  0016B4                     __end_of_main:
  1192                           	opt stack 0
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _StopMotors *****************
  1198 ;; Defined at:
  1199 ;;		line 93 in file "Motors.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    8
  1220 ;; This function calls:
  1221 ;;		_SetDCMotorL
  1222 ;;		_SetDCMotorR
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text1
  1229  002DAE                     __ptext1:
  1230                           	opt stack 0
  1231  002DAE                     _StopMotors:
  1232                           	opt stack 22
  1233                           
  1234                           ;Motors.c: 95: SetDCMotorR(500);
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;incstack = 0
  1238  002DAE  0E01               	movlw	1
  1239  002DB0  0100               	movlb	0	; () banked
  1240  002DB2  6F67               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1241  002DB4  0EF4               	movlw	244
  1242  002DB6  6F66               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1243  002DB8  ECBD  F017         	call	_SetDCMotorR	;wreg free
  1244                           
  1245                           ;Motors.c: 96: SetDCMotorL(500);
  1246  002DBC  0E01               	movlw	1
  1247  002DBE  0100               	movlb	0	; () banked
  1248  002DC0  6F67               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1249  002DC2  0EF4               	movlw	244
  1250  002DC4  6F66               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1251  002DC6  ECC4  F017         	call	_SetDCMotorL	;wreg free
  1252  002DCA  0012               	return		;funcret
  1253  002DCC                     __end_of_StopMotors:
  1254                           	opt stack 0
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _SetDCMotorR *****************
  1260 ;; Defined at:
  1261 ;;		line 10 in file "Motors.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  duty_cycle      2    6[BANK0 ] unsigned int 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        2 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    7
  1282 ;; This function calls:
  1283 ;;		_SetDCPWM4
  1284 ;; This function is called by:
  1285 ;;		_StopMotors
  1286 ;;		_main
  1287 ;;		_SetDCMotorPID
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text2
  1292  002F7A                     __ptext2:
  1293                           	opt stack 0
  1294  002F7A                     _SetDCMotorR:
  1295                           	opt stack 22
  1296                           
  1297                           ;Motors.c: 12: SetDCPWM4(duty_cycle);
  1298                           
  1299                           ;incstack = 0
  1300  002F7A  C066  F060         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  1301  002F7E  C067  F061         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  1302  002F82  ECC6  F015         	call	_SetDCPWM4	;wreg free
  1303  002F86  0012               	return		;funcret
  1304  002F88                     __end_of_SetDCMotorR:
  1305                           	opt stack 0
  1306                           postinc0	equ	0xFEE
  1307                           wreg	equ	0xFE8
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _SetDCPWM4 *****************
  1311 ;; Defined at:
  1312 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  1317 ;; Return value:  Size  Location     Type
  1318 ;;		None               void
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;Total ram usage:        6 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    6
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_SetDCMotorR
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  002B8C                     __ptext3:
  1342                           	opt stack 0
  1343  002B8C                     _SetDCPWM4:
  1344                           	opt stack 22
  1345                           
  1346                           ;incstack = 0
  1347  002B8C  C060  F062         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  1348  002B90  C061  F063         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  1349  002B94  0E06               	movlw	6
  1350  002B96                     u3485:
  1351  002B96  90D8               	bcf	status,0,c
  1352  002B98  0100               	movlb	0	; () banked
  1353  002B9A  3762               	rlcf	??_SetDCPWM4& (0+255),f,b
  1354  002B9C  3763               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  1355  002B9E  2EE8               	decfsz	wreg,f,c
  1356  002BA0  D7FA               	goto	u3485
  1357  002BA2  C062  F064         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  1358  002BA6  C063  F065         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  1359                           
  1360                           ; BSR set to: 0
  1361  002BAA  C065  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  1362  002BAE  C064  F062         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  1363  002BB2  0100               	movlb	0	; () banked
  1364  002BB4  90D8               	bcf	status,0,c
  1365  002BB6  3362               	rrcf	??_SetDCPWM4& (0+255),f,b
  1366  002BB8  0100               	movlb	0	; () banked
  1367  002BBA  90D8               	bcf	status,0,c
  1368  002BBC  3362               	rrcf	??_SetDCPWM4& (0+255),f,b
  1369  002BBE  0E30               	movlw	48
  1370  002BC0  0100               	movlb	0	; () banked
  1371  002BC2  1762               	andwf	??_SetDCPWM4& (0+255),f,b
  1372  002BC4  5073               	movf	3955,w,c	;volatile
  1373  002BC6  0BCF               	andlw	207
  1374  002BC8  0100               	movlb	0	; () banked
  1375  002BCA  1162               	iorwf	??_SetDCPWM4& (0+255),w,b
  1376  002BCC  6E73               	movwf	3955,c	;volatile
  1377                           
  1378                           ; BSR set to: 0
  1379  002BCE  0012               	return		;funcret
  1380  002BD0                     __end_of_SetDCPWM4:
  1381                           	opt stack 0
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function _SetDCMotorL *****************
  1387 ;; Defined at:
  1388 ;;		line 4 in file "Motors.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  duty_cycle      2    6[BANK0 ] unsigned int 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;		None               void
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;Total ram usage:        2 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    7
  1409 ;; This function calls:
  1410 ;;		_SetDCPWM5
  1411 ;; This function is called by:
  1412 ;;		_StopMotors
  1413 ;;		_main
  1414 ;;		_SetDCMotorPID
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text4
  1419  002F88                     __ptext4:
  1420                           	opt stack 0
  1421  002F88                     _SetDCMotorL:
  1422                           	opt stack 22
  1423                           
  1424                           ;Motors.c: 6: SetDCPWM5(duty_cycle);
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;incstack = 0
  1428  002F88  C066  F060         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  1429  002F8C  C067  F061         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  1430  002F90  ECE8  F015         	call	_SetDCPWM5	;wreg free
  1431  002F94  0012               	return		;funcret
  1432  002F96                     __end_of_SetDCMotorL:
  1433                           	opt stack 0
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _SetDCPWM5 *****************
  1439 ;; Defined at:
  1440 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  1445 ;; Return value:  Size  Location     Type
  1446 ;;		None               void
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        6 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    6
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_SetDCMotorL
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text5
  1469  002BD0                     __ptext5:
  1470                           	opt stack 0
  1471  002BD0                     _SetDCPWM5:
  1472                           	opt stack 22
  1473                           
  1474                           ;incstack = 0
  1475  002BD0  C060  F062         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  1476  002BD4  C061  F063         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  1477  002BD8  0E06               	movlw	6
  1478  002BDA                     u3475:
  1479  002BDA  90D8               	bcf	status,0,c
  1480  002BDC  0100               	movlb	0	; () banked
  1481  002BDE  3762               	rlcf	??_SetDCPWM5& (0+255),f,b
  1482  002BE0  3763               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  1483  002BE2  2EE8               	decfsz	wreg,f,c
  1484  002BE4  D7FA               	goto	u3475
  1485  002BE6  C062  F064         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  1486  002BEA  C063  F065         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  1487                           
  1488                           ; BSR set to: 0
  1489  002BEE  C065  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  1490  002BF2  C064  F062         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  1491  002BF6  0100               	movlb	0	; () banked
  1492  002BF8  90D8               	bcf	status,0,c
  1493  002BFA  3362               	rrcf	??_SetDCPWM5& (0+255),f,b
  1494  002BFC  0100               	movlb	0	; () banked
  1495  002BFE  90D8               	bcf	status,0,c
  1496  002C00  3362               	rrcf	??_SetDCPWM5& (0+255),f,b
  1497  002C02  0E30               	movlw	48
  1498  002C04  0100               	movlb	0	; () banked
  1499  002C06  1762               	andwf	??_SetDCPWM5& (0+255),f,b
  1500  002C08  5070               	movf	3952,w,c	;volatile
  1501  002C0A  0BCF               	andlw	207
  1502  002C0C  0100               	movlb	0	; () banked
  1503  002C0E  1162               	iorwf	??_SetDCPWM5& (0+255),w,b
  1504  002C10  6E70               	movwf	3952,c	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507  002C12  0012               	return		;funcret
  1508  002C14                     __end_of_SetDCPWM5:
  1509                           	opt stack 0
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _SetUnipolar *****************
  1515 ;; Defined at:
  1516 ;;		line 86 in file "Motors.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;		None               void
  1523 ;; Registers used:
  1524 ;;		None
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    6
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text6
  1545  002FB6                     __ptext6:
  1546                           	opt stack 0
  1547  002FB6                     _SetUnipolar:
  1548                           	opt stack 24
  1549                           
  1550                           ;Motors.c: 88: LATDbits.LATD2 = 0;
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;incstack = 0
  1554  002FB6  948C               	bcf	3980,2,c	;volatile
  1555                           
  1556                           ;Motors.c: 89: LATDbits.LATD0 = 0;
  1557  002FB8  908C               	bcf	3980,0,c	;volatile
  1558  002FBA  0012               	return		;funcret
  1559  002FBC                     __end_of_SetUnipolar:
  1560                           	opt stack 0
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _SetDirectionForward *****************
  1566 ;; Defined at:
  1567 ;;		line 29 in file "Motors.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		None
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    6
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text7
  1596  002FBC                     __ptext7:
  1597                           	opt stack 0
  1598  002FBC                     _SetDirectionForward:
  1599                           	opt stack 24
  1600                           
  1601                           ;Motors.c: 31: LATDbits.LATD1 = 1;
  1602                           
  1603                           ;incstack = 0
  1604  002FBC  828C               	bsf	3980,1,c	;volatile
  1605                           
  1606                           ;Motors.c: 32: LATDbits.LATD3 = 1;
  1607  002FBE  868C               	bsf	3980,3,c	;volatile
  1608  002FC0  0012               	return		;funcret
  1609  002FC2                     __end_of_SetDirectionForward:
  1610                           	opt stack 0
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _ResetMillis *****************
  1616 ;; Defined at:
  1617 ;;		line 15 in file "MillisecondTimer.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;		None               void
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    7
  1638 ;; This function calls:
  1639 ;;		_WriteTimer0
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text8
  1646  002E3C                     __ptext8:
  1647                           	opt stack 0
  1648  002E3C                     _ResetMillis:
  1649                           	opt stack 23
  1650                           
  1651                           ;MillisecondTimer.c: 17: WriteTimer0(63036);
  1652                           
  1653                           ;incstack = 0
  1654  002E3C  0EF6               	movlw	246
  1655  002E3E  0100               	movlb	0	; () banked
  1656  002E40  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  1657  002E42  0E3C               	movlw	60
  1658  002E44  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  1659  002E46  EC71  F017         	call	_WriteTimer0	;wreg free
  1660                           
  1661                           ;MillisecondTimer.c: 18: millisecond_COUNT = 0;
  1662  002E4A  0E00               	movlw	0
  1663  002E4C  6E39               	movwf	_millisecond_COUNT+1,c	;volatile
  1664  002E4E  0E00               	movlw	0
  1665  002E50  6E38               	movwf	_millisecond_COUNT,c	;volatile
  1666  002E52  0012               	return		;funcret
  1667  002E54                     __end_of_ResetMillis:
  1668                           	opt stack 0
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function _ReadMillis *****************
  1674 ;; Defined at:
  1675 ;;		line 7 in file "MillisecondTimer.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  2    0[BANK0 ] unsigned int 
  1682 ;; Registers used:
  1683 ;;		None
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:        2 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    6
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text9
  1704  002FA4                     __ptext9:
  1705                           	opt stack 0
  1706  002FA4                     _ReadMillis:
  1707                           	opt stack 24
  1708                           
  1709                           ;MillisecondTimer.c: 9: return (millisecond_COUNT);
  1710                           
  1711                           ;incstack = 0
  1712  002FA4  C038  F060         	movff	_millisecond_COUNT,?_ReadMillis	;volatile
  1713  002FA8  C039  F061         	movff	_millisecond_COUNT+1,?_ReadMillis+1	;volatile
  1714  002FAC  0012               	return		;funcret
  1715  002FAE                     __end_of_ReadMillis:
  1716                           	opt stack 0
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _ReadEchoLength *****************
  1722 ;; Defined at:
  1723 ;;		line 48 in file "Ultrasound.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    4[BANK0 ] unsigned int 
  1730 ;; Registers used:
  1731 ;;		cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        2 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    7
  1744 ;; This function calls:
  1745 ;;		_ReadTimer1
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text10
  1752  002F2A                     __ptext10:
  1753                           	opt stack 0
  1754  002F2A                     _ReadEchoLength:
  1755                           	opt stack 23
  1756                           
  1757                           ;Ultrasound.c: 50: return (ReadTimer1());
  1758                           
  1759                           ;incstack = 0
  1760  002F2A  EC5F  F017         	call	_ReadTimer1	;wreg free
  1761  002F2E  C060  F064         	movff	?_ReadTimer1,?_ReadEchoLength
  1762  002F32  C061  F065         	movff	?_ReadTimer1+1,?_ReadEchoLength+1
  1763  002F36  D000               	goto	l37
  1764  002F38                     l37:
  1765  002F38  0012               	return		;funcret
  1766  002F3A                     __end_of_ReadEchoLength:
  1767                           	opt stack 0
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           status	equ	0xFD8
  1771                           
  1772 ;; *************** function _ReadTimer1 *****************
  1773 ;; Defined at:
  1774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  timer           2    2[BANK0 ] struct Timers
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2    0[BANK0 ] unsigned int 
  1781 ;; Registers used:
  1782 ;;		None
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        4 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    6
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_ReadEchoLength
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text11
  1803  002EBE                     __ptext11:
  1804                           	opt stack 0
  1805  002EBE                     _ReadTimer1:
  1806                           	opt stack 23
  1807                           
  1808                           ;incstack = 0
  1809  002EBE  CFCE F062          	movff	4046,ReadTimer1@timer	;volatile
  1810  002EC2  CFCF F063          	movff	4047,ReadTimer1@timer+1	;volatile
  1811  002EC6  C062  F060         	movff	ReadTimer1@timer,?_ReadTimer1
  1812  002ECA  C063  F061         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  1813  002ECE  0012               	return		;funcret
  1814  002ED0                     __end_of_ReadTimer1:
  1815                           	opt stack 0
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function _GetDistance *****************
  1821 ;; Defined at:
  1822 ;;		line 30 in file "Ultrasound.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;		None               void
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    7
  1843 ;; This function calls:
  1844 ;;		_Delay1TCYx
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text12
  1851  002ED0                     __ptext12:
  1852                           	opt stack 0
  1853  002ED0                     _GetDistance:
  1854                           	opt stack 23
  1855                           
  1856                           ;Ultrasound.c: 32: LATEbits.LATE5 = 1;
  1857                           
  1858                           ;incstack = 0
  1859  002ED0  8A8D               	bsf	3981,5,c	;volatile
  1860                           
  1861                           ;Ultrasound.c: 33: Delay1TCYx(25);
  1862  002ED2  0E19               	movlw	25
  1863  002ED4  EC9D  F017         	call	_Delay1TCYx
  1864                           
  1865                           ;Ultrasound.c: 34: LATEbits.LATE5 = 0;
  1866  002ED8  9A8D               	bcf	3981,5,c	;volatile
  1867                           
  1868                           ;Ultrasound.c: 35: INTCONbits.RBIE = 1;
  1869  002EDA  86F2               	bsf	intcon,3,c	;volatile
  1870                           
  1871                           ;Ultrasound.c: 36: echo_acq_done = 0;
  1872  002EDC  0E00               	movlw	0
  1873  002EDE  6E3C               	movwf	_echo_acq_done,c
  1874  002EE0  0012               	return		;funcret
  1875  002EE2                     __end_of_GetDistance:
  1876                           	opt stack 0
  1877                           intcon	equ	0xFF2
  1878                           postinc0	equ	0xFEE
  1879                           wreg	equ	0xFE8
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _Delay1TCYx *****************
  1883 ;; Defined at:
  1884 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  unit            1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  unit            1    0[BANK0 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    6
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_GetDistance
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text13
  1913  002F3A                     __ptext13:
  1914                           	opt stack 0
  1915  002F3A                     _Delay1TCYx:
  1916                           	opt stack 23
  1917                           
  1918                           ;incstack = 0
  1919                           ;Delay1TCYx@unit stored from wreg
  1920  002F3A  0100               	movlb	0	; () banked
  1921  002F3C  6F60               	movwf	Delay1TCYx@unit& (0+255),b
  1922  002F3E                     l846:
  1923                           
  1924                           ; BSR set to: 0
  1925  002F3E  F000               	nop	
  1926  002F40  0100               	movlb	0	; () banked
  1927  002F42  2F60               	decfsz	Delay1TCYx@unit& (0+255),f,b
  1928  002F44  D7FC               	goto	l846
  1929  002F46  D000               	goto	l848
  1930  002F48                     l848:
  1931                           
  1932                           ; BSR set to: 0
  1933  002F48  0012               	return		;funcret
  1934  002F4A                     __end_of_Delay1TCYx:
  1935                           	opt stack 0
  1936                           intcon	equ	0xFF2
  1937                           postinc0	equ	0xFEE
  1938                           wreg	equ	0xFE8
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _EnableSensorLEDS *****************
  1942 ;; Defined at:
  1943 ;;		line 424 in file "FastBuggy17_Main_Code.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, status,2
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    6
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text14
  1972  002FC2                     __ptext14:
  1973                           	opt stack 0
  1974  002FC2                     _EnableSensorLEDS:
  1975                           	opt stack 24
  1976                           
  1977                           ;FastBuggy17_Main_Code.c: 426: LATE = 0x1F;
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;incstack = 0
  1981  002FC2  0E1F               	movlw	31
  1982  002FC4  6E8D               	movwf	3981,c	;volatile
  1983  002FC6  0012               	return		;funcret
  1984  002FC8                     __end_of_EnableSensorLEDS:
  1985                           	opt stack 0
  1986                           intcon	equ	0xFF2
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           status	equ	0xFD8
  1990                           
  1991 ;; *************** function _EnableMotors *****************
  1992 ;; Defined at:
  1993 ;;		line 67 in file "Motors.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;		None               void
  2000 ;; Registers used:
  2001 ;;		None
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    6
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text15
  2022  002FC8                     __ptext15:
  2023                           	opt stack 0
  2024  002FC8                     _EnableMotors:
  2025                           	opt stack 24
  2026                           
  2027                           ;Motors.c: 69: LATDbits.LATD4 = 1;
  2028                           
  2029                           ;incstack = 0
  2030  002FC8  888C               	bsf	3980,4,c	;volatile
  2031  002FCA  0012               	return		;funcret
  2032  002FCC                     __end_of_EnableMotors:
  2033                           	opt stack 0
  2034                           intcon	equ	0xFF2
  2035                           postinc0	equ	0xFEE
  2036                           wreg	equ	0xFE8
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function _ConfigureUltrasound *****************
  2040 ;; Defined at:
  2041 ;;		line 8 in file "Ultrasound.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  echo_to_cm      3    0[BANK0 ] float 
  2044 ;;  echo_to_in      3    3[BANK0 ] float 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;		None               void
  2049 ;; Registers used:
  2050 ;;		None
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2056 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;Total ram usage:        6 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    6
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text16
  2071  002E08                     __ptext16:
  2072                           	opt stack 0
  2073  002E08                     _ConfigureUltrasound:
  2074                           	opt stack 24
  2075                           
  2076                           ;Ultrasound.c: 9: convert_cm = echo_to_cm;
  2077                           
  2078                           ;incstack = 0
  2079  002E08  C060  F0D9         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
  2080  002E0C  C061  F0DA         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
  2081  002E10  C062  F0DB         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
  2082                           
  2083                           ;Ultrasound.c: 10: convert_in = echo_to_in;
  2084  002E14  C063  F0DC         	movff	ConfigureUltrasound@echo_to_in,_convert_in
  2085  002E18  C064  F0DD         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
  2086  002E1C  C065  F0DE         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
  2087  002E20  0012               	return		;funcret
  2088  002E22                     __end_of_ConfigureUltrasound:
  2089                           	opt stack 0
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _ConfigureTimer2 *****************
  2096 ;; Defined at:
  2097 ;;		line 155 in file "FastBuggy17_Main_Code.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    7
  2118 ;; This function calls:
  2119 ;;		_OpenTimer2
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text17
  2126  002FAE                     __ptext17:
  2127                           	opt stack 0
  2128  002FAE                     _ConfigureTimer2:
  2129                           	opt stack 23
  2130                           
  2131                           ;FastBuggy17_Main_Code.c: 157: OpenTimer2(0b01111111
  2132                           ;FastBuggy17_Main_Code.c: 158: & 0b11111100
  2133                           ;FastBuggy17_Main_Code.c: 159: & 0b10000111
  2134                           ;FastBuggy17_Main_Code.c: 160: & 0b10110111);
  2135                           
  2136                           ;incstack = 0
  2137  002FAE  0E04               	movlw	4
  2138  002FB0  ECB7  F016         	call	_OpenTimer2
  2139  002FB4  0012               	return		;funcret
  2140  002FB6                     __end_of_ConfigureTimer2:
  2141                           	opt stack 0
  2142                           intcon	equ	0xFF2
  2143                           postinc0	equ	0xFEE
  2144                           wreg	equ	0xFE8
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _OpenTimer2 *****************
  2148 ;; Defined at:
  2149 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  config          1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  config          1    0[BANK0 ] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        1 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    6
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_ConfigureTimer2
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text18
  2178  002D6E                     __ptext18:
  2179                           	opt stack 0
  2180  002D6E                     _OpenTimer2:
  2181                           	opt stack 23
  2182                           
  2183                           ;incstack = 0
  2184                           ;OpenTimer2@config stored from wreg
  2185  002D6E  0100               	movlb	0	; () banked
  2186  002D70  6F60               	movwf	OpenTimer2@config& (0+255),b
  2187                           
  2188                           ; BSR set to: 0
  2189  002D72  0100               	movlb	0	; () banked
  2190  002D74  5160               	movf	OpenTimer2@config& (0+255),w,b
  2191  002D76  0BFB               	andlw	251
  2192  002D78  6ECA               	movwf	4042,c	;volatile
  2193                           
  2194                           ; BSR set to: 0
  2195  002D7A  0E00               	movlw	0
  2196  002D7C  6ECC               	movwf	4044,c	;volatile
  2197                           
  2198                           ; BSR set to: 0
  2199  002D7E  929E               	bcf	3998,1,c	;volatile
  2200                           
  2201                           ; BSR set to: 0
  2202  002D80  0100               	movlb	0	; () banked
  2203  002D82  AF60               	btfss	OpenTimer2@config& (0+255),7,b
  2204  002D84  D002               	goto	l580
  2205                           
  2206                           ; BSR set to: 0
  2207  002D86  829D               	bsf	3997,1,c	;volatile
  2208  002D88  D001               	goto	l581
  2209  002D8A                     l580:
  2210                           
  2211                           ; BSR set to: 0
  2212  002D8A  929D               	bcf	3997,1,c	;volatile
  2213  002D8C                     l581:
  2214                           
  2215                           ; BSR set to: 0
  2216  002D8C  84CA               	bsf	4042,2,c	;volatile
  2217                           
  2218                           ; BSR set to: 0
  2219  002D8E  0012               	return		;funcret
  2220  002D90                     __end_of_OpenTimer2:
  2221                           	opt stack 0
  2222                           intcon	equ	0xFF2
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _ConfigureTimer0 *****************
  2228 ;; Defined at:
  2229 ;;		line 123 in file "FastBuggy17_Main_Code.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    7
  2250 ;; This function calls:
  2251 ;;		_OpenTimer0
  2252 ;;		_WriteTimer0
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text19
  2259  002E54                     __ptext19:
  2260                           	opt stack 0
  2261  002E54                     _ConfigureTimer0:
  2262                           	opt stack 23
  2263                           
  2264                           ;FastBuggy17_Main_Code.c: 125: OpenTimer0(0b11111111
  2265                           ;FastBuggy17_Main_Code.c: 126: & 0b10111111
  2266                           ;FastBuggy17_Main_Code.c: 127: & 0b11011111
  2267                           ;FastBuggy17_Main_Code.c: 128: & 0b11111111);
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;incstack = 0
  2271  002E54  0E9F               	movlw	159
  2272  002E56  EC7E  F016         	call	_OpenTimer0
  2273                           
  2274                           ;FastBuggy17_Main_Code.c: 132: WriteTimer0(63036);
  2275  002E5A  0EF6               	movlw	246
  2276  002E5C  0100               	movlb	0	; () banked
  2277  002E5E  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  2278  002E60  0E3C               	movlw	60
  2279  002E62  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  2280  002E64  EC71  F017         	call	_WriteTimer0	;wreg free
  2281  002E68  0012               	return		;funcret
  2282  002E6A                     __end_of_ConfigureTimer0:
  2283                           	opt stack 0
  2284                           intcon	equ	0xFF2
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _WriteTimer0 *****************
  2290 ;; Defined at:
  2291 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  timer0          2    0[BANK0 ] unsigned int 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  timer           2    2[BANK0 ] struct Timers
  2296 ;; Return value:  Size  Location     Type
  2297 ;;		None               void
  2298 ;; Registers used:
  2299 ;;		None
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;Total ram usage:        4 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    6
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_ResetMillis
  2316 ;;		_ConfigureTimer0
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text20
  2321  002EE2                     __ptext20:
  2322                           	opt stack 0
  2323  002EE2                     _WriteTimer0:
  2324                           	opt stack 23
  2325                           
  2326                           ;incstack = 0
  2327  002EE2  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2328  002EE6  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2329  002EEA  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2330  002EEE  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2331  002EF2  0012               	return		;funcret
  2332  002EF4                     __end_of_WriteTimer0:
  2333                           	opt stack 0
  2334                           intcon	equ	0xFF2
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _OpenTimer0 *****************
  2340 ;; Defined at:
  2341 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  config          1    wreg     unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  config          1    0[BANK0 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;Total ram usage:        1 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    6
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_ConfigureTimer0
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text21
  2370  002CFC                     __ptext21:
  2371                           	opt stack 0
  2372  002CFC                     _OpenTimer0:
  2373                           	opt stack 23
  2374                           
  2375                           ;incstack = 0
  2376                           ;OpenTimer0@config stored from wreg
  2377  002CFC  0100               	movlb	0	; () banked
  2378  002CFE  6F60               	movwf	OpenTimer0@config& (0+255),b
  2379                           
  2380                           ; BSR set to: 0
  2381  002D00  0100               	movlb	0	; () banked
  2382  002D02  5160               	movf	OpenTimer0@config& (0+255),w,b
  2383  002D04  0B7F               	andlw	127
  2384  002D06  6ED5               	movwf	4053,c	;volatile
  2385                           
  2386                           ; BSR set to: 0
  2387  002D08  0E00               	movlw	0
  2388  002D0A  6ED7               	movwf	4055,c	;volatile
  2389                           
  2390                           ; BSR set to: 0
  2391  002D0C  0E00               	movlw	0
  2392  002D0E  6ED6               	movwf	4054,c	;volatile
  2393                           
  2394                           ; BSR set to: 0
  2395  002D10  94F2               	bcf	intcon,2,c	;volatile
  2396                           
  2397                           ; BSR set to: 0
  2398  002D12  0100               	movlb	0	; () banked
  2399  002D14  AF60               	btfss	OpenTimer0@config& (0+255),7,b
  2400  002D16  D002               	goto	l525
  2401                           
  2402                           ; BSR set to: 0
  2403  002D18  8AF2               	bsf	intcon,5,c	;volatile
  2404  002D1A  D001               	goto	l526
  2405  002D1C                     l525:
  2406                           
  2407                           ; BSR set to: 0
  2408  002D1C  9AF2               	bcf	intcon,5,c	;volatile
  2409  002D1E                     l526:
  2410                           
  2411                           ; BSR set to: 0
  2412  002D1E  8ED5               	bsf	4053,7,c	;volatile
  2413                           
  2414                           ; BSR set to: 0
  2415  002D20  0012               	return		;funcret
  2416  002D22                     __end_of_OpenTimer0:
  2417                           	opt stack 0
  2418                           intcon	equ	0xFF2
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _ConfigurePWM *****************
  2424 ;; Defined at:
  2425 ;;		line 173 in file "FastBuggy17_Main_Code.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;		None               void
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    7
  2446 ;; This function calls:
  2447 ;;		_OpenPWM4
  2448 ;;		_OpenPWM5
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text22
  2455  002F96                     __ptext22:
  2456                           	opt stack 0
  2457  002F96                     _ConfigurePWM:
  2458                           	opt stack 23
  2459                           
  2460                           ;FastBuggy17_Main_Code.c: 175: OpenPWM4(130);
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;incstack = 0
  2464  002F96  0E82               	movlw	130
  2465  002F98  ECA4  F016         	call	_OpenPWM4
  2466                           
  2467                           ;FastBuggy17_Main_Code.c: 176: OpenPWM5(130);
  2468  002F9C  0E82               	movlw	130
  2469  002F9E  EC91  F016         	call	_OpenPWM5
  2470  002FA2  0012               	return		;funcret
  2471  002FA4                     __end_of_ConfigurePWM:
  2472                           	opt stack 0
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _OpenPWM5 *****************
  2479 ;; Defined at:
  2480 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  period          1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  period          1    0[BANK0 ] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg, status,2
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    6
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_ConfigurePWM
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text23
  2509  002D22                     __ptext23:
  2510                           	opt stack 0
  2511  002D22                     _OpenPWM5:
  2512                           	opt stack 23
  2513                           
  2514                           ;incstack = 0
  2515                           ;OpenPWM5@period stored from wreg
  2516  002D22  0100               	movlb	0	; () banked
  2517  002D24  6F60               	movwf	OpenPWM5@period& (0+255),b
  2518                           
  2519                           ; BSR set to: 0
  2520  002D26  0E0C               	movlw	12
  2521  002D28  6E70               	movwf	3952,c	;volatile
  2522                           
  2523                           ; BSR set to: 0
  2524  002D2A  ACB1               	btfss	4017,6,c	;volatile
  2525                           
  2526                           ; BSR set to: 0
  2527  002D2C  B6B1               	btfsc	4017,3,c	;volatile
  2528  002D2E  D005               	goto	l503
  2529                           
  2530                           ; BSR set to: 0
  2531  002D30  94CA               	bcf	4042,2,c	;volatile
  2532                           
  2533                           ; BSR set to: 0
  2534  002D32  C060  FFCB         	movff	OpenPWM5@period,4043	;volatile
  2535                           
  2536                           ; BSR set to: 0
  2537  002D36  84CA               	bsf	4042,2,c	;volatile
  2538  002D38  D005               	goto	l4136
  2539  002D3A                     l503:
  2540                           
  2541                           ; BSR set to: 0
  2542  002D3A  9476               	bcf	3958,2,c	;volatile
  2543                           
  2544                           ; BSR set to: 0
  2545  002D3C  C060  FF77         	movff	OpenPWM5@period,3959	;volatile
  2546                           
  2547                           ; BSR set to: 0
  2548  002D40  8476               	bsf	3958,2,c	;volatile
  2549  002D42  D000               	goto	l4136
  2550  002D44                     l4136:
  2551                           
  2552                           ; BSR set to: 0
  2553  002D44  9898               	bcf	3992,4,c	;volatile
  2554                           
  2555                           ; BSR set to: 0
  2556  002D46  0012               	return		;funcret
  2557  002D48                     __end_of_OpenPWM5:
  2558                           	opt stack 0
  2559                           intcon	equ	0xFF2
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _OpenPWM4 *****************
  2565 ;; Defined at:
  2566 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  period          1    wreg     unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  period          1    0[BANK0 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, status,2
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    6
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_ConfigurePWM
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text24
  2595  002D48                     __ptext24:
  2596                           	opt stack 0
  2597  002D48                     _OpenPWM4:
  2598                           	opt stack 23
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;incstack = 0
  2602                           ;OpenPWM4@period stored from wreg
  2603  002D48  0100               	movlb	0	; () banked
  2604  002D4A  6F60               	movwf	OpenPWM4@period& (0+255),b
  2605                           
  2606                           ; BSR set to: 0
  2607  002D4C  0E0C               	movlw	12
  2608  002D4E  6E73               	movwf	3955,c	;volatile
  2609                           
  2610                           ; BSR set to: 0
  2611  002D50  9698               	bcf	3992,3,c	;volatile
  2612                           
  2613                           ; BSR set to: 0
  2614  002D52  ACB1               	btfss	4017,6,c	;volatile
  2615                           
  2616                           ; BSR set to: 0
  2617  002D54  B6B1               	btfsc	4017,3,c	;volatile
  2618  002D56  D005               	goto	l477
  2619                           
  2620                           ; BSR set to: 0
  2621  002D58  94CA               	bcf	4042,2,c	;volatile
  2622                           
  2623                           ; BSR set to: 0
  2624  002D5A  C060  FFCB         	movff	OpenPWM4@period,4043	;volatile
  2625                           
  2626                           ; BSR set to: 0
  2627  002D5E  84CA               	bsf	4042,2,c	;volatile
  2628  002D60  D005               	goto	l479
  2629  002D62                     l477:
  2630                           
  2631                           ; BSR set to: 0
  2632  002D62  9476               	bcf	3958,2,c	;volatile
  2633                           
  2634                           ; BSR set to: 0
  2635  002D64  C060  FF77         	movff	OpenPWM4@period,3959	;volatile
  2636                           
  2637                           ; BSR set to: 0
  2638  002D68  8476               	bsf	3958,2,c	;volatile
  2639  002D6A  D000               	goto	l479
  2640  002D6C                     l479:
  2641                           
  2642                           ; BSR set to: 0
  2643  002D6C  0012               	return		;funcret
  2644  002D6E                     __end_of_OpenPWM4:
  2645                           	opt stack 0
  2646                           intcon	equ	0xFF2
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _ConfigureInterrupts *****************
  2652 ;; Defined at:
  2653 ;;		line 72 in file "FastBuggy17_Main_Code.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		None
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    6
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text25
  2682  002E96                     __ptext25:
  2683                           	opt stack 0
  2684  002E96                     _ConfigureInterrupts:
  2685                           	opt stack 24
  2686                           
  2687                           ;FastBuggy17_Main_Code.c: 74: INTCONbits.GIE = 1;
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;incstack = 0
  2691  002E96  8EF2               	bsf	intcon,7,c	;volatile
  2692                           
  2693                           ;FastBuggy17_Main_Code.c: 75: INTCONbits.PEIE = 1;
  2694  002E98  8CF2               	bsf	intcon,6,c	;volatile
  2695                           
  2696                           ;FastBuggy17_Main_Code.c: 76: RCONbits.IPEN = 1;
  2697  002E9A  8ED0               	bsf	4048,7,c	;volatile
  2698                           
  2699                           ;FastBuggy17_Main_Code.c: 98: INTCONbits.TMR0IE = 1;
  2700  002E9C  8AF2               	bsf	intcon,5,c	;volatile
  2701                           
  2702                           ;FastBuggy17_Main_Code.c: 99: INTCONbits.TMR0IF = 0;
  2703  002E9E  94F2               	bcf	intcon,2,c	;volatile
  2704                           
  2705                           ;FastBuggy17_Main_Code.c: 100: INTCON2bits.TMR0IP = 1;
  2706  002EA0  84F1               	bsf	intcon2,2,c	;volatile
  2707                           
  2708                           ;FastBuggy17_Main_Code.c: 109: PIE1bits.ADIE = 0;
  2709  002EA2  9C9D               	bcf	3997,6,c	;volatile
  2710                           
  2711                           ;FastBuggy17_Main_Code.c: 110: PIR1bits.ADIF = 0;
  2712  002EA4  9C9E               	bcf	3998,6,c	;volatile
  2713                           
  2714                           ;FastBuggy17_Main_Code.c: 111: IPR1bits.ADIP = 0;
  2715  002EA6  9C9F               	bcf	3999,6,c	;volatile
  2716  002EA8  0012               	return		;funcret
  2717  002EAA                     __end_of_ConfigureInterrupts:
  2718                           	opt stack 0
  2719                           intcon	equ	0xFF2
  2720                           intcon2	equ	0xFF1
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _ConfigureBuggyIO *****************
  2726 ;; Defined at:
  2727 ;;		line 196 in file "FastBuggy17_Main_Code.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, status,2
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    6
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text26
  2756  002E22                     __ptext26:
  2757                           	opt stack 0
  2758  002E22                     _ConfigureBuggyIO:
  2759                           	opt stack 24
  2760                           
  2761                           ;FastBuggy17_Main_Code.c: 199: TRISA = 0xFF;
  2762                           
  2763                           ;incstack = 0
  2764  002E22  6892               	setf	3986,c	;volatile
  2765                           
  2766                           ;FastBuggy17_Main_Code.c: 202: TRISB = 0xFF;
  2767  002E24  6893               	setf	3987,c	;volatile
  2768                           
  2769                           ;FastBuggy17_Main_Code.c: 205: TRISC = 0xBF;
  2770  002E26  0EBF               	movlw	191
  2771  002E28  6E94               	movwf	3988,c	;volatile
  2772                           
  2773                           ;FastBuggy17_Main_Code.c: 208: TRISD = 0xE0;
  2774  002E2A  0EE0               	movlw	224
  2775  002E2C  6E95               	movwf	3989,c	;volatile
  2776                           
  2777                           ;FastBuggy17_Main_Code.c: 211: TRISE = 0x80;
  2778  002E2E  0E80               	movlw	128
  2779  002E30  6E96               	movwf	3990,c	;volatile
  2780                           
  2781                           ;FastBuggy17_Main_Code.c: 214: TRISG = 0xE7;
  2782  002E32  0EE7               	movlw	231
  2783  002E34  6E98               	movwf	3992,c	;volatile
  2784                           
  2785                           ;FastBuggy17_Main_Code.c: 217: TRISJ = 0x00;
  2786  002E36  0E00               	movlw	0
  2787  002E38  6E9A               	movwf	3994,c	;volatile
  2788  002E3A  0012               	return		;funcret
  2789  002E3C                     __end_of_ConfigureBuggyIO:
  2790                           	opt stack 0
  2791                           intcon	equ	0xFF2
  2792                           intcon2	equ	0xFF1
  2793                           postinc0	equ	0xFEE
  2794                           wreg	equ	0xFE8
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _ConfigureADC *****************
  2798 ;; Defined at:
  2799 ;;		line 222 in file "FastBuggy17_Main_Code.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;		None               void
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    7
  2820 ;; This function calls:
  2821 ;;		_OpenADC
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text27
  2828  002EAA                     __ptext27:
  2829                           	opt stack 0
  2830  002EAA                     _ConfigureADC:
  2831                           	opt stack 23
  2832                           
  2833                           ;FastBuggy17_Main_Code.c: 224: OpenADC(0b10011111
  2834                           ;FastBuggy17_Main_Code.c: 225: & 0b11111111
  2835                           ;FastBuggy17_Main_Code.c: 226: & 0b11110101,
  2836                           ;FastBuggy17_Main_Code.c: 227: 0b10000111
  2837                           ;FastBuggy17_Main_Code.c: 228: & 0b01111111
  2838                           ;FastBuggy17_Main_Code.c: 229: & 0b11111110
  2839                           ;FastBuggy17_Main_Code.c: 230: & 0b11111101,
  2840                           ;FastBuggy17_Main_Code.c: 231: 9);
  2841                           
  2842                           ;incstack = 0
  2843  002EAA  0E04               	movlw	4
  2844  002EAC  0100               	movlb	0	; () banked
  2845  002EAE  6F60               	movwf	OpenADC@config2& (0+255),b
  2846  002EB0  0E09               	movlw	9
  2847  002EB2  0100               	movlb	0	; () banked
  2848  002EB4  6F61               	movwf	OpenADC@portconfig& (0+255),b
  2849  002EB6  0E95               	movlw	149
  2850  002EB8  ECA0  F014         	call	_OpenADC
  2851  002EBC  0012               	return		;funcret
  2852  002EBE                     __end_of_ConfigureADC:
  2853                           	opt stack 0
  2854                           intcon	equ	0xFF2
  2855                           intcon2	equ	0xFF1
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _OpenADC *****************
  2861 ;; Defined at:
  2862 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  config          1    wreg     unsigned char 
  2865 ;;  config2         1    0[BANK0 ] unsigned char 
  2866 ;;  portconfig      1    1[BANK0 ] unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  config          1    4[BANK0 ] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;		None               void
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        5 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    6
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_ConfigureADC
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text28
  2893  002940                     __ptext28:
  2894                           	opt stack 0
  2895  002940                     _OpenADC:
  2896                           	opt stack 23
  2897                           
  2898                           ;incstack = 0
  2899                           ;OpenADC@config stored from wreg
  2900  002940  0100               	movlb	0	; () banked
  2901  002942  6F64               	movwf	OpenADC@config& (0+255),b
  2902                           
  2903                           ; BSR set to: 0
  2904  002944  0E00               	movlw	0
  2905  002946  6EC2               	movwf	4034,c	;volatile
  2906  002948  0E00               	movlw	0
  2907  00294A  6EC0               	movwf	4032,c	;volatile
  2908                           
  2909                           ; BSR set to: 0
  2910  00294C  0100               	movlb	0	; () banked
  2911  00294E  90D8               	bcf	status,0,c
  2912  002950  3160               	rrcf	OpenADC@config2& (0+255),w,b
  2913  002952  0B3C               	andlw	60
  2914  002954  6EC2               	movwf	4034,c	;volatile
  2915                           
  2916                           ; BSR set to: 0
  2917  002956  C060  F062         	movff	OpenADC@config2,??_OpenADC
  2918  00295A  0100               	movlb	0	; () banked
  2919  00295C  3B62               	swapf	??_OpenADC& (0+255),f,b
  2920  00295E  0EF0               	movlw	240
  2921  002960  1762               	andwf	??_OpenADC& (0+255),f,b
  2922  002962  0E30               	movlw	48
  2923  002964  0100               	movlb	0	; () banked
  2924  002966  1762               	andwf	??_OpenADC& (0+255),f,b
  2925  002968  0100               	movlb	0	; () banked
  2926  00296A  5161               	movf	OpenADC@portconfig& (0+255),w,b
  2927  00296C  0B0F               	andlw	15
  2928  00296E  0100               	movlb	0	; () banked
  2929  002970  1162               	iorwf	??_OpenADC& (0+255),w,b
  2930  002972  6EC1               	movwf	4033,c	;volatile
  2931                           
  2932                           ; BSR set to: 0
  2933  002974  C064  F062         	movff	OpenADC@config,??_OpenADC
  2934  002978  0100               	movlb	0	; () banked
  2935  00297A  90D8               	bcf	status,0,c
  2936  00297C  3762               	rlcf	??_OpenADC& (0+255),f,b
  2937  00297E  0100               	movlb	0	; () banked
  2938  002980  90D8               	bcf	status,0,c
  2939  002982  3762               	rlcf	??_OpenADC& (0+255),f,b
  2940  002984  0E38               	movlw	56
  2941  002986  0100               	movlb	0	; () banked
  2942  002988  1762               	andwf	??_OpenADC& (0+255),f,b
  2943  00298A  C064  F063         	movff	OpenADC@config,??_OpenADC+1
  2944  00298E  0100               	movlb	0	; () banked
  2945  002990  3B63               	swapf	(??_OpenADC+1)& (0+255),f,b
  2946  002992  0E0F               	movlw	15
  2947  002994  1763               	andwf	(??_OpenADC+1)& (0+255),f,b
  2948  002996  0E07               	movlw	7
  2949  002998  0100               	movlb	0	; () banked
  2950  00299A  1763               	andwf	(??_OpenADC+1)& (0+255),f,b
  2951  00299C  0100               	movlb	0	; () banked
  2952  00299E  5164               	movf	OpenADC@config& (0+255),w,b
  2953  0029A0  0B80               	andlw	128
  2954  0029A2  0100               	movlb	0	; () banked
  2955  0029A4  1163               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2956  0029A6  0100               	movlb	0	; () banked
  2957  0029A8  1162               	iorwf	??_OpenADC& (0+255),w,b
  2958  0029AA  6EC0               	movwf	4032,c	;volatile
  2959                           
  2960                           ; BSR set to: 0
  2961  0029AC  0100               	movlb	0	; () banked
  2962  0029AE  AF60               	btfss	OpenADC@config2& (0+255),7,b
  2963  0029B0  D003               	goto	l447
  2964                           
  2965                           ; BSR set to: 0
  2966  0029B2  9C9E               	bcf	3998,6,c	;volatile
  2967  0029B4  8C9D               	bsf	3997,6,c	;volatile
  2968  0029B6  8CF2               	bsf	intcon,6,c	;volatile
  2969  0029B8                     l447:
  2970                           
  2971                           ; BSR set to: 0
  2972  0029B8  80C2               	bsf	4034,0,c	;volatile
  2973                           
  2974                           ; BSR set to: 0
  2975  0029BA  0012               	return		;funcret
  2976  0029BC                     __end_of_OpenADC:
  2977                           	opt stack 0
  2978                           intcon	equ	0xFF2
  2979                           intcon2	equ	0xFF1
  2980                           postinc0	equ	0xFEE
  2981                           wreg	equ	0xFE8
  2982                           status	equ	0xFD8
  2983                           
  2984 ;; *************** function _ChangeMode *****************
  2985 ;; Defined at:
  2986 ;;		line 500 in file "FastBuggy17_Main_Code.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;		None               void
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    7
  3007 ;; This function calls:
  3008 ;;		_Delay10KTCYx
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text29
  3015  002CAC                     __ptext29:
  3016                           	opt stack 0
  3017  002CAC                     _ChangeMode:
  3018                           	opt stack 23
  3019                           
  3020                           ;FastBuggy17_Main_Code.c: 501: LATJ = 0x00;
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;incstack = 0
  3024  002CAC  0E00               	movlw	0
  3025  002CAE  6E91               	movwf	3985,c	;volatile
  3026                           
  3027                           ;FastBuggy17_Main_Code.c: 502: LATJ = 0x1F;
  3028  002CB0  0E1F               	movlw	31
  3029  002CB2  6E91               	movwf	3985,c	;volatile
  3030                           
  3031                           ;FastBuggy17_Main_Code.c: 503: Delay10KTCYx(125);
  3032  002CB4  0E7D               	movlw	125
  3033  002CB6  ECE6  F016         	call	_Delay10KTCYx
  3034                           
  3035                           ;FastBuggy17_Main_Code.c: 504: LATJ = 0x00;
  3036  002CBA  0E00               	movlw	0
  3037  002CBC  6E91               	movwf	3985,c	;volatile
  3038                           
  3039                           ;FastBuggy17_Main_Code.c: 505: Delay10KTCYx(125);
  3040  002CBE  0E7D               	movlw	125
  3041  002CC0  ECE6  F016         	call	_Delay10KTCYx
  3042                           
  3043                           ;FastBuggy17_Main_Code.c: 506: LATJ = 0x1F;
  3044  002CC4  0E1F               	movlw	31
  3045  002CC6  6E91               	movwf	3985,c	;volatile
  3046                           
  3047                           ;FastBuggy17_Main_Code.c: 507: Delay10KTCYx(125);
  3048  002CC8  0E7D               	movlw	125
  3049  002CCA  ECE6  F016         	call	_Delay10KTCYx
  3050                           
  3051                           ;FastBuggy17_Main_Code.c: 508: LATJ = 0x00;
  3052  002CCE  0E00               	movlw	0
  3053  002CD0  6E91               	movwf	3985,c	;volatile
  3054  002CD2  0012               	return		;funcret
  3055  002CD4                     __end_of_ChangeMode:
  3056                           	opt stack 0
  3057                           intcon	equ	0xFF2
  3058                           intcon2	equ	0xFF1
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _Delay10KTCYx *****************
  3064 ;; Defined at:
  3065 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  unit            1    wreg     unsigned char 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  unit            1    1[BANK0 ] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;		None               void
  3072 ;; Registers used:
  3073 ;;		wreg
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;Total ram usage:        2 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    6
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_ChangeMode
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text30
  3095  002DCC                     __ptext30:
  3096                           	opt stack 0
  3097  002DCC                     _Delay10KTCYx:
  3098                           	opt stack 24
  3099                           
  3100                           ;incstack = 0
  3101                           ;Delay10KTCYx@unit stored from wreg
  3102  002DCC  0100               	movlb	0	; () banked
  3103  002DCE  6F61               	movwf	Delay10KTCYx@unit& (0+255),b
  3104  002DD0                     
  3105                           ; BSR set to: 0
  3106  002DD0  0E0D               	movlw	13
  3107  002DD2  0100               	movlb	0	; () banked
  3108  002DD4  6F60               	movwf	??_Delay10KTCYx& (0+255),b
  3109  002DD6  0EFC               	movlw	252
  3110  002DD8                     u4017:
  3111  002DD8  2EE8               	decfsz	wreg,f,c
  3112  002DDA  D7FE               	goto	u4017
  3113  002DDC  2F60               	decfsz	??_Delay10KTCYx& (0+255),f,b
  3114  002DDE  D7FC               	goto	u4017
  3115  002DE0  0100               	movlb	0	; () banked
  3116  002DE2  2F61               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  3117  002DE4  D7F5               	goto	l4240
  3118  002DE6  D000               	goto	l841
  3119  002DE8                     l841:
  3120                           
  3121                           ; BSR set to: 0
  3122  002DE8  0012               	return		;funcret
  3123  002DEA                     __end_of_Delay10KTCYx:
  3124                           	opt stack 0
  3125                           intcon	equ	0xFF2
  3126                           intcon2	equ	0xFF1
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function _CalibrateSensors *****************
  3132 ;; Defined at:
  3133 ;;		line 438 in file "FastBuggy17_Main_Code.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  index           1    5[BANK0 ] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;		None               void
  3140 ;; Registers used:
  3141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        3 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    9
  3154 ;; This function calls:
  3155 ;;		_BusySensorAcq
  3156 ;;		_GetSensorReadings
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text31
  3163  002A32                     __ptext31:
  3164                           	opt stack 0
  3165  002A32                     _CalibrateSensors:
  3166                           	opt stack 21
  3167                           
  3168                           ;FastBuggy17_Main_Code.c: 439: unsigned char index;
  3169                           ;FastBuggy17_Main_Code.c: 441: GetSensorReadings();
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;incstack = 0
  3173  002A32  EC35  F017         	call	_GetSensorReadings	;wreg free
  3174                           
  3175                           ;FastBuggy17_Main_Code.c: 443: while(BusySensorAcq());
  3176  002A36  D000               	goto	l4346
  3177  002A38                     l4346:
  3178  002A38  ECA5  F017         	call	_BusySensorAcq	;wreg free
  3179  002A3C  0900               	iorlw	0
  3180  002A3E  A4D8               	btfss	status,2,c
  3181  002A40  D7FB               	goto	l4346
  3182                           
  3183                           ;FastBuggy17_Main_Code.c: 445: for(index = 0; index < 5; index++) {
  3184  002A42  0E00               	movlw	0
  3185  002A44  0100               	movlb	0	; () banked
  3186  002A46  6F65               	movwf	CalibrateSensors@index& (0+255),b
  3187  002A48                     l4350:
  3188                           
  3189                           ; BSR set to: 0
  3190  002A48  0E04               	movlw	4
  3191  002A4A  0100               	movlb	0	; () banked
  3192  002A4C  6565               	cpfsgt	CalibrateSensors@index& (0+255),b
  3193  002A4E  D001               	goto	l4354
  3194                           
  3195                           ; BSR set to: 0
  3196  002A50  D028               	goto	l370
  3197  002A52                     l4354:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;FastBuggy17_Main_Code.c: 447: sensor_offsets[index] = sensor_readings_raw[2] - sensor_r
      +                          eadings_raw[index];
  3201  002A52  0100               	movlb	0	; () banked
  3202  002A54  5165               	movf	CalibrateSensors@index& (0+255),w,b
  3203  002A56  0D02               	mullw	2
  3204  002A58  0E28               	movlw	low _sensor_readings_raw
  3205  002A5A  24F3               	addwf	prodl,w,c
  3206  002A5C  6ED9               	movwf	fsr2l,c
  3207  002A5E  0E00               	movlw	high _sensor_readings_raw
  3208  002A60  20F4               	addwfc	prodh,w,c
  3209  002A62  6EDA               	movwf	fsr2h,c
  3210  002A64  CFDE F063          	movff	postinc2,??_CalibrateSensors
  3211  002A68  CFDD F064          	movff	postdec2,??_CalibrateSensors+1
  3212  002A6C  0100               	movlb	0	; () banked
  3213  002A6E  1F63               	comf	??_CalibrateSensors& (0+255),f,b
  3214  002A70  1F64               	comf	(??_CalibrateSensors+1)& (0+255),f,b
  3215  002A72  4B63               	infsnz	??_CalibrateSensors& (0+255),f,b
  3216  002A74  2B64               	incf	(??_CalibrateSensors+1)& (0+255),f,b
  3217  002A76  502C               	movf	_sensor_readings_raw+4,w,c	;volatile
  3218  002A78  0100               	movlb	0	; () banked
  3219  002A7A  2763               	addwf	??_CalibrateSensors& (0+255),f,b
  3220  002A7C  502D               	movf	_sensor_readings_raw+5,w,c	;volatile
  3221  002A7E  0100               	movlb	0	; () banked
  3222  002A80  2364               	addwfc	(??_CalibrateSensors+1)& (0+255),f,b
  3223  002A82  0100               	movlb	0	; () banked
  3224  002A84  5165               	movf	CalibrateSensors@index& (0+255),w,b
  3225  002A86  0D02               	mullw	2
  3226  002A88  0EBF               	movlw	low _sensor_offsets
  3227  002A8A  24F3               	addwf	prodl,w,c
  3228  002A8C  6ED9               	movwf	fsr2l,c
  3229  002A8E  0E00               	movlw	high _sensor_offsets
  3230  002A90  20F4               	addwfc	prodh,w,c
  3231  002A92  6EDA               	movwf	fsr2h,c
  3232  002A94  C063  FFDE         	movff	??_CalibrateSensors,postinc2
  3233  002A98  C064  FFDD         	movff	??_CalibrateSensors+1,postdec2
  3234                           
  3235                           ; BSR set to: 0
  3236  002A9C  0100               	movlb	0	; () banked
  3237  002A9E  2B65               	incf	CalibrateSensors@index& (0+255),f,b
  3238  002AA0  D7D3               	goto	l4350
  3239  002AA2                     l370:
  3240                           
  3241                           ; BSR set to: 0
  3242  002AA2  0012               	return		;funcret
  3243  002AA4                     __end_of_CalibrateSensors:
  3244                           	opt stack 0
  3245                           prodh	equ	0xFF4
  3246                           prodl	equ	0xFF3
  3247                           intcon	equ	0xFF2
  3248                           intcon2	equ	0xFF1
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           postinc2	equ	0xFDE
  3252                           postdec2	equ	0xFDD
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _CalibrateLine *****************
  3258 ;; Defined at:
  3259 ;;		line 454 in file "FastBuggy17_Main_Code.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  sum             1   91[BANK0 ] unsigned char 
  3264 ;;  index           1    0        unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;		None               void
  3267 ;; Registers used:
  3268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:        1 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:   12
  3281 ;; This function calls:
  3282 ;;		_BusySensorAcq
  3283 ;;		_CalculateSensorStatuses
  3284 ;;		_CalculateSensorSums
  3285 ;;		_DisplaySensorStatuses
  3286 ;;		_GetSensorReadings
  3287 ;;		_NormaliseSensorReadings
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text32
  3294  002844                     __ptext32:
  3295                           	opt stack 0
  3296  002844                     _CalibrateLine:
  3297                           	opt stack 18
  3298                           
  3299                           ;FastBuggy17_Main_Code.c: 455: unsigned char index, sum;
  3300                           ;FastBuggy17_Main_Code.c: 457: sensor_threshold = 600;
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;incstack = 0
  3304  002844  0E02               	movlw	2
  3305  002846  6E3B               	movwf	_sensor_threshold+1,c
  3306  002848  0E58               	movlw	88
  3307  00284A  6E3A               	movwf	_sensor_threshold,c
  3308                           
  3309                           ;FastBuggy17_Main_Code.c: 459: LATJ = 0x00;
  3310  00284C  0E00               	movlw	0
  3311  00284E  6E91               	movwf	3985,c	;volatile
  3312                           
  3313                           ;FastBuggy17_Main_Code.c: 468: GetSensorReadings();
  3314  002850  EC35  F017         	call	_GetSensorReadings	;wreg free
  3315                           
  3316                           ;FastBuggy17_Main_Code.c: 470: while(BusySensorAcq());
  3317  002854  D000               	goto	l4364
  3318  002856                     l4364:
  3319  002856  ECA5  F017         	call	_BusySensorAcq	;wreg free
  3320  00285A  0900               	iorlw	0
  3321  00285C  A4D8               	btfss	status,2,c
  3322  00285E  D7FB               	goto	l4364
  3323                           
  3324                           ;FastBuggy17_Main_Code.c: 472: NormaliseSensorReadings();
  3325  002860  ECDE  F014         	call	_NormaliseSensorReadings	;wreg free
  3326                           
  3327                           ;FastBuggy17_Main_Code.c: 474: CalculateSensorStatuses();
  3328  002864  EC3A  F011         	call	_CalculateSensorStatuses	;wreg free
  3329                           
  3330                           ;FastBuggy17_Main_Code.c: 476: sum = CalculateSensorSums();
  3331  002868  EC3E  F013         	call	_CalculateSensorSums	;wreg free
  3332  00286C  0100               	movlb	0	; () banked
  3333  00286E  6FBB               	movwf	CalibrateLine@sum& (0+255),b
  3334                           
  3335                           ;FastBuggy17_Main_Code.c: 478: while(sum != 4) {
  3336  002870  D012               	goto	l4378
  3337  002872                     l4370:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;FastBuggy17_Main_Code.c: 479: sensor_threshold--;
  3341  002872  063A               	decf	_sensor_threshold,f,c
  3342  002874  A0D8               	btfss	status,0,c
  3343  002876  063B               	decf	_sensor_threshold+1,f,c
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;FastBuggy17_Main_Code.c: 481: CalculateSensorStatuses();
  3347  002878  EC3A  F011         	call	_CalculateSensorStatuses	;wreg free
  3348                           
  3349                           ;FastBuggy17_Main_Code.c: 483: sum = CalculateSensorSums();
  3350  00287C  EC3E  F013         	call	_CalculateSensorSums	;wreg free
  3351  002880  0100               	movlb	0	; () banked
  3352  002882  6FBB               	movwf	CalibrateLine@sum& (0+255),b
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;FastBuggy17_Main_Code.c: 485: DisplaySensorStatuses(sensor_status);
  3356  002884  0E42               	movlw	low _sensor_status
  3357  002886  0100               	movlb	0	; () banked
  3358  002888  6F60               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  3359  00288A  0E00               	movlw	high _sensor_status
  3360  00288C  0100               	movlb	0	; () banked
  3361  00288E  6F61               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  3362  002890  EC52  F015         	call	_DisplaySensorStatuses	;wreg free
  3363  002894  D000               	goto	l4378
  3364  002896                     l4378:
  3365  002896  0E04               	movlw	4
  3366  002898  0100               	movlb	0	; () banked
  3367  00289A  19BB               	xorwf	CalibrateLine@sum& (0+255),w,b
  3368  00289C  A4D8               	btfss	status,2,c
  3369  00289E  D7E9               	goto	l4370
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;FastBuggy17_Main_Code.c: 487: }
  3373                           ;FastBuggy17_Main_Code.c: 489: if(line_mode == 1) {
  3374                           
  3375                           ; BSR set to: 0
  3376  0028A0  043D               	decf	_line_mode,w,c
  3377  0028A2  A4D8               	btfss	status,2,c
  3378  0028A4  D005               	goto	l4384
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;FastBuggy17_Main_Code.c: 490: sensor_threshold =- 10;
  3382  0028A6  0EFF               	movlw	255
  3383  0028A8  6E3B               	movwf	_sensor_threshold+1,c
  3384  0028AA  0EF6               	movlw	246
  3385  0028AC  6E3A               	movwf	_sensor_threshold,c
  3386                           
  3387                           ;FastBuggy17_Main_Code.c: 491: }
  3388  0028AE  D008               	goto	l382
  3389  0028B0                     l4384:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;FastBuggy17_Main_Code.c: 492: else if(line_mode == 0) {
  3393  0028B0  503D               	movf	_line_mode,w,c
  3394  0028B2  A4D8               	btfss	status,2,c
  3395  0028B4  D005               	goto	l382
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;FastBuggy17_Main_Code.c: 493: sensor_threshold += 10;
  3399  0028B6  0E0A               	movlw	10
  3400  0028B8  263A               	addwf	_sensor_threshold,f,c
  3401  0028BA  0E00               	movlw	0
  3402  0028BC  223B               	addwfc	_sensor_threshold+1,f,c
  3403                           
  3404                           ; BSR set to: 0
  3405  0028BE  D000               	goto	l382
  3406  0028C0                     l382:
  3407                           
  3408                           ; BSR set to: 0
  3409  0028C0  0012               	return		;funcret
  3410  0028C2                     __end_of_CalibrateLine:
  3411                           	opt stack 0
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           intcon2	equ	0xFF1
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function _NormaliseSensorReadings *****************
  3425 ;; Defined at:
  3426 ;;		line 325 in file "FastBuggy17_Main_Code.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  index           1    4[BANK0 ] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;		None               void
  3433 ;; Registers used:
  3434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;Total ram usage:        5 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    6
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_CalibrateLine
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text33
  3456  0029BC                     __ptext33:
  3457                           	opt stack 0
  3458  0029BC                     _NormaliseSensorReadings:
  3459                           	opt stack 24
  3460                           
  3461                           ;FastBuggy17_Main_Code.c: 326: unsigned char index;
  3462                           ;FastBuggy17_Main_Code.c: 328: for(index = 0; index < 5; index++) {
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;incstack = 0
  3466  0029BC  0E00               	movlw	0
  3467  0029BE  0100               	movlb	0	; () banked
  3468  0029C0  6F64               	movwf	NormaliseSensorReadings@index& (0+255),b
  3469  0029C2                     l4164:
  3470                           
  3471                           ; BSR set to: 0
  3472  0029C2  0E04               	movlw	4
  3473  0029C4  0100               	movlb	0	; () banked
  3474  0029C6  6564               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  3475  0029C8  D001               	goto	l4168
  3476                           
  3477                           ; BSR set to: 0
  3478  0029CA  D032               	goto	l317
  3479  0029CC                     l4168:
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;FastBuggy17_Main_Code.c: 330: sensor_readings_normalised[index] = sensor_readings_raw[i
      +                          ndex] + sensor_offsets[index];
  3483  0029CC  0100               	movlb	0	; () banked
  3484  0029CE  5164               	movf	NormaliseSensorReadings@index& (0+255),w,b
  3485  0029D0  0D02               	mullw	2
  3486  0029D2  0EBF               	movlw	low _sensor_offsets
  3487  0029D4  24F3               	addwf	prodl,w,c
  3488  0029D6  6ED9               	movwf	fsr2l,c
  3489  0029D8  0E00               	movlw	high _sensor_offsets
  3490  0029DA  20F4               	addwfc	prodh,w,c
  3491  0029DC  6EDA               	movwf	fsr2h,c
  3492  0029DE  CFDE F060          	movff	postinc2,??_NormaliseSensorReadings
  3493  0029E2  CFDD F061          	movff	postdec2,??_NormaliseSensorReadings+1
  3494  0029E6  0100               	movlb	0	; () banked
  3495  0029E8  5164               	movf	NormaliseSensorReadings@index& (0+255),w,b
  3496  0029EA  0D02               	mullw	2
  3497  0029EC  0E28               	movlw	low _sensor_readings_raw
  3498  0029EE  24F3               	addwf	prodl,w,c
  3499  0029F0  6ED9               	movwf	fsr2l,c
  3500  0029F2  0E00               	movlw	high _sensor_readings_raw
  3501  0029F4  20F4               	addwfc	prodh,w,c
  3502  0029F6  6EDA               	movwf	fsr2h,c
  3503  0029F8  CFDE F062          	movff	postinc2,??_NormaliseSensorReadings+2
  3504  0029FC  CFDD F063          	movff	postdec2,??_NormaliseSensorReadings+3
  3505  002A00  0100               	movlb	0	; () banked
  3506  002A02  5160               	movf	??_NormaliseSensorReadings& (0+255),w,b
  3507  002A04  0100               	movlb	0	; () banked
  3508  002A06  2762               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  3509  002A08  0100               	movlb	0	; () banked
  3510  002A0A  5161               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  3511  002A0C  0100               	movlb	0	; () banked
  3512  002A0E  2363               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  3513  002A10  0100               	movlb	0	; () banked
  3514  002A12  5164               	movf	NormaliseSensorReadings@index& (0+255),w,b
  3515  002A14  0D02               	mullw	2
  3516  002A16  0EC9               	movlw	low _sensor_readings_normalised
  3517  002A18  24F3               	addwf	prodl,w,c
  3518  002A1A  6ED9               	movwf	fsr2l,c
  3519  002A1C  0E00               	movlw	high _sensor_readings_normalised
  3520  002A1E  20F4               	addwfc	prodh,w,c
  3521  002A20  6EDA               	movwf	fsr2h,c
  3522  002A22  C062  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  3523  002A26  C063  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  3524                           
  3525                           ; BSR set to: 0
  3526  002A2A  0100               	movlb	0	; () banked
  3527  002A2C  2B64               	incf	NormaliseSensorReadings@index& (0+255),f,b
  3528  002A2E  D7C9               	goto	l4164
  3529  002A30                     l317:
  3530                           
  3531                           ; BSR set to: 0
  3532  002A30  0012               	return		;funcret
  3533  002A32                     __end_of_NormaliseSensorReadings:
  3534                           	opt stack 0
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           intcon2	equ	0xFF1
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _GetSensorReadings *****************
  3548 ;; Defined at:
  3549 ;;		line 307 in file "FastBuggy17_Main_Code.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;		None               void
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    8
  3570 ;; This function calls:
  3571 ;;		_ConvertADC
  3572 ;;		_SetADCChannel
  3573 ;; This function is called by:
  3574 ;;		_CalibrateSensors
  3575 ;;		_CalibrateLine
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text34
  3581  002E6A                     __ptext34:
  3582                           	opt stack 0
  3583  002E6A                     _GetSensorReadings:
  3584                           	opt stack 22
  3585                           
  3586                           ;FastBuggy17_Main_Code.c: 309: sensor_acq_index = 0;
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;incstack = 0
  3590  002E6A  0E00               	movlw	0
  3591  002E6C  6E40               	movwf	_sensor_acq_index,c	;volatile
  3592                           
  3593                           ;FastBuggy17_Main_Code.c: 310: sensor_acq_done = 0;
  3594  002E6E  0E00               	movlw	0
  3595  002E70  6E3F               	movwf	_sensor_acq_done,c	;volatile
  3596                           
  3597                           ;FastBuggy17_Main_Code.c: 311: SetADCChannel(sensor_acq_index);
  3598  002E72  5040               	movf	_sensor_acq_index,w,c	;volatile
  3599  002E74  ECC3  F010         	call	_SetADCChannel
  3600                           
  3601                           ;FastBuggy17_Main_Code.c: 312: ConvertADC();
  3602  002E78  ECE6  F017         	call	_ConvertADC	;wreg free
  3603                           
  3604                           ;FastBuggy17_Main_Code.c: 313: PIE1bits.ADIE = 1;
  3605  002E7C  8C9D               	bsf	3997,6,c	;volatile
  3606  002E7E  0012               	return		;funcret
  3607  002E80                     __end_of_GetSensorReadings:
  3608                           	opt stack 0
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           intcon2	equ	0xFF1
  3613                           postinc0	equ	0xFEE
  3614                           wreg	equ	0xFE8
  3615                           postinc2	equ	0xFDE
  3616                           postdec2	equ	0xFDD
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _SetADCChannel *****************
  3622 ;; Defined at:
  3623 ;;		line 249 in file "FastBuggy17_Main_Code.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  channel         1    wreg     unsigned char 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  channel         1    2[BANK0 ] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;		None               void
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;Total ram usage:        1 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    7
  3644 ;; This function calls:
  3645 ;;		_SetChanADC
  3646 ;; This function is called by:
  3647 ;;		_GetSensorReadings
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text35
  3652  002186                     __ptext35:
  3653                           	opt stack 0
  3654  002186                     _SetADCChannel:
  3655                           	opt stack 22
  3656                           
  3657                           ;incstack = 0
  3658                           ;SetADCChannel@channel stored from wreg
  3659  002186  0100               	movlb	0	; () banked
  3660  002188  6F62               	movwf	SetADCChannel@channel& (0+255),b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;FastBuggy17_Main_Code.c: 251: switch (channel) {
  3664  00218A  D040               	goto	l4022
  3665  00218C                     l3988:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;FastBuggy17_Main_Code.c: 253: SetChanADC(0b10000111);
  3669  00218C  0E87               	movlw	135
  3670  00218E  ECF5  F016         	call	_SetChanADC
  3671                           
  3672                           ;FastBuggy17_Main_Code.c: 254: break;
  3673  002192  D06F               	goto	l306
  3674  002194                     l3990:
  3675                           
  3676                           ;FastBuggy17_Main_Code.c: 256: SetChanADC(0b10001111);
  3677  002194  0E8F               	movlw	143
  3678  002196  ECF5  F016         	call	_SetChanADC
  3679                           
  3680                           ;FastBuggy17_Main_Code.c: 257: break;
  3681  00219A  D06B               	goto	l306
  3682  00219C                     l3992:
  3683                           
  3684                           ;FastBuggy17_Main_Code.c: 259: SetChanADC(0b10010111);
  3685  00219C  0E97               	movlw	151
  3686  00219E  ECF5  F016         	call	_SetChanADC
  3687                           
  3688                           ;FastBuggy17_Main_Code.c: 260: break;
  3689  0021A2  D067               	goto	l306
  3690  0021A4                     l3994:
  3691                           
  3692                           ;FastBuggy17_Main_Code.c: 262: SetChanADC(0b10011111);
  3693  0021A4  0E9F               	movlw	159
  3694  0021A6  ECF5  F016         	call	_SetChanADC
  3695                           
  3696                           ;FastBuggy17_Main_Code.c: 263: break;
  3697  0021AA  D063               	goto	l306
  3698  0021AC                     l3996:
  3699                           
  3700                           ;FastBuggy17_Main_Code.c: 265: SetChanADC(0b10100111);
  3701  0021AC  0EA7               	movlw	167
  3702  0021AE  ECF5  F016         	call	_SetChanADC
  3703                           
  3704                           ;FastBuggy17_Main_Code.c: 266: break;
  3705  0021B2  D05F               	goto	l306
  3706  0021B4                     l3998:
  3707                           
  3708                           ;FastBuggy17_Main_Code.c: 268: SetChanADC(0b10101111);
  3709  0021B4  0EAF               	movlw	175
  3710  0021B6  ECF5  F016         	call	_SetChanADC
  3711                           
  3712                           ;FastBuggy17_Main_Code.c: 269: break;
  3713  0021BA  D05B               	goto	l306
  3714  0021BC                     l4000:
  3715                           
  3716                           ;FastBuggy17_Main_Code.c: 271: SetChanADC(0b10110111);
  3717  0021BC  0EB7               	movlw	183
  3718  0021BE  ECF5  F016         	call	_SetChanADC
  3719                           
  3720                           ;FastBuggy17_Main_Code.c: 272: break;
  3721  0021C2  D057               	goto	l306
  3722  0021C4                     l4002:
  3723                           
  3724                           ;FastBuggy17_Main_Code.c: 274: SetChanADC(0b10111111);
  3725  0021C4  0EBF               	movlw	191
  3726  0021C6  ECF5  F016         	call	_SetChanADC
  3727                           
  3728                           ;FastBuggy17_Main_Code.c: 275: break;
  3729  0021CA  D053               	goto	l306
  3730  0021CC                     l4004:
  3731                           
  3732                           ;FastBuggy17_Main_Code.c: 277: SetChanADC(0b11000111);
  3733  0021CC  0EC7               	movlw	199
  3734  0021CE  ECF5  F016         	call	_SetChanADC
  3735                           
  3736                           ;FastBuggy17_Main_Code.c: 278: break;
  3737  0021D2  D04F               	goto	l306
  3738  0021D4                     l4006:
  3739                           
  3740                           ;FastBuggy17_Main_Code.c: 280: SetChanADC(0b11001111);
  3741  0021D4  0ECF               	movlw	207
  3742  0021D6  ECF5  F016         	call	_SetChanADC
  3743                           
  3744                           ;FastBuggy17_Main_Code.c: 281: break;
  3745  0021DA  D04B               	goto	l306
  3746  0021DC                     l4008:
  3747                           
  3748                           ;FastBuggy17_Main_Code.c: 283: SetChanADC(0b11010111);
  3749  0021DC  0ED7               	movlw	215
  3750  0021DE  ECF5  F016         	call	_SetChanADC
  3751                           
  3752                           ;FastBuggy17_Main_Code.c: 284: break;
  3753  0021E2  D047               	goto	l306
  3754  0021E4                     l4010:
  3755                           
  3756                           ;FastBuggy17_Main_Code.c: 286: SetChanADC(0b11011111);
  3757  0021E4  0EDF               	movlw	223
  3758  0021E6  ECF5  F016         	call	_SetChanADC
  3759                           
  3760                           ;FastBuggy17_Main_Code.c: 287: break;
  3761  0021EA  D043               	goto	l306
  3762  0021EC                     l4012:
  3763                           
  3764                           ;FastBuggy17_Main_Code.c: 289: SetChanADC(0b11100111);
  3765  0021EC  0EE7               	movlw	231
  3766  0021EE  ECF5  F016         	call	_SetChanADC
  3767                           
  3768                           ;FastBuggy17_Main_Code.c: 290: break;
  3769  0021F2  D03F               	goto	l306
  3770  0021F4                     l4014:
  3771                           
  3772                           ;FastBuggy17_Main_Code.c: 292: SetChanADC(0b11101111);
  3773  0021F4  0EEF               	movlw	239
  3774  0021F6  ECF5  F016         	call	_SetChanADC
  3775                           
  3776                           ;FastBuggy17_Main_Code.c: 293: break;
  3777  0021FA  D03B               	goto	l306
  3778  0021FC                     l4016:
  3779                           
  3780                           ;FastBuggy17_Main_Code.c: 295: SetChanADC(0b11110111);
  3781  0021FC  0EF7               	movlw	247
  3782  0021FE  ECF5  F016         	call	_SetChanADC
  3783                           
  3784                           ;FastBuggy17_Main_Code.c: 296: break;
  3785  002202  D037               	goto	l306
  3786  002204                     l4018:
  3787                           
  3788                           ;FastBuggy17_Main_Code.c: 298: SetChanADC(0b11111111);
  3789  002204  0EFF               	movlw	255
  3790  002206  ECF5  F016         	call	_SetChanADC
  3791                           
  3792                           ;FastBuggy17_Main_Code.c: 302: }
  3793                           
  3794                           ;FastBuggy17_Main_Code.c: 301: break;
  3795                           
  3796                           ;FastBuggy17_Main_Code.c: 300: default:
  3797                           
  3798                           ;FastBuggy17_Main_Code.c: 299: break;
  3799  00220A  D033               	goto	l306
  3800  00220C                     l4022:
  3801  00220C  0100               	movlb	0	; () banked
  3802  00220E  5162               	movf	SetADCChannel@channel& (0+255),w,b
  3803                           
  3804                           ; Switch size 1, requested type "space"
  3805                           ; Number of cases is 16, Range of values is 0 to 15
  3806                           ; switch strategies available:
  3807                           ; Name         Instructions Cycles
  3808                           ; simple_byte           49    25 (average)
  3809                           ;	Chosen strategy is simple_byte
  3810  002210  0A00               	xorlw	0	; case 0
  3811  002212  B4D8               	btfsc	status,2,c
  3812  002214  D7BB               	goto	l3988
  3813  002216  0A01               	xorlw	1	; case 1
  3814  002218  B4D8               	btfsc	status,2,c
  3815  00221A  D7BC               	goto	l3990
  3816  00221C  0A03               	xorlw	3	; case 2
  3817  00221E  B4D8               	btfsc	status,2,c
  3818  002220  D7BD               	goto	l3992
  3819  002222  0A01               	xorlw	1	; case 3
  3820  002224  B4D8               	btfsc	status,2,c
  3821  002226  D7BE               	goto	l3994
  3822  002228  0A07               	xorlw	7	; case 4
  3823  00222A  B4D8               	btfsc	status,2,c
  3824  00222C  D7BF               	goto	l3996
  3825  00222E  0A01               	xorlw	1	; case 5
  3826  002230  B4D8               	btfsc	status,2,c
  3827  002232  D7C0               	goto	l3998
  3828  002234  0A03               	xorlw	3	; case 6
  3829  002236  B4D8               	btfsc	status,2,c
  3830  002238  D7C1               	goto	l4000
  3831  00223A  0A01               	xorlw	1	; case 7
  3832  00223C  B4D8               	btfsc	status,2,c
  3833  00223E  D7C2               	goto	l4002
  3834  002240  0A0F               	xorlw	15	; case 8
  3835  002242  B4D8               	btfsc	status,2,c
  3836  002244  D7C3               	goto	l4004
  3837  002246  0A01               	xorlw	1	; case 9
  3838  002248  B4D8               	btfsc	status,2,c
  3839  00224A  D7C4               	goto	l4006
  3840  00224C  0A03               	xorlw	3	; case 10
  3841  00224E  B4D8               	btfsc	status,2,c
  3842  002250  D7C5               	goto	l4008
  3843  002252  0A01               	xorlw	1	; case 11
  3844  002254  B4D8               	btfsc	status,2,c
  3845  002256  D7C6               	goto	l4010
  3846  002258  0A07               	xorlw	7	; case 12
  3847  00225A  B4D8               	btfsc	status,2,c
  3848  00225C  D7C7               	goto	l4012
  3849  00225E  0A01               	xorlw	1	; case 13
  3850  002260  B4D8               	btfsc	status,2,c
  3851  002262  D7C8               	goto	l4014
  3852  002264  0A03               	xorlw	3	; case 14
  3853  002266  B4D8               	btfsc	status,2,c
  3854  002268  D7C9               	goto	l4016
  3855  00226A  0A01               	xorlw	1	; case 15
  3856  00226C  B4D8               	btfsc	status,2,c
  3857  00226E  D7CA               	goto	l4018
  3858  002270  D000               	goto	l306
  3859  002272                     l306:
  3860  002272  0012               	return		;funcret
  3861  002274                     __end_of_SetADCChannel:
  3862                           	opt stack 0
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           intcon2	equ	0xFF1
  3867                           postinc0	equ	0xFEE
  3868                           wreg	equ	0xFE8
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _SetChanADC *****************
  3876 ;; Defined at:
  3877 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  channel         1    wreg     unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  channel         1    1[BANK0 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:        2 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    6
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_SetADCChannel
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text36
  3906  002DEA                     __ptext36:
  3907                           	opt stack 0
  3908  002DEA                     _SetChanADC:
  3909                           	opt stack 22
  3910                           
  3911                           ;incstack = 0
  3912                           ;SetChanADC@channel stored from wreg
  3913  002DEA  0100               	movlb	0	; () banked
  3914  002DEC  6F61               	movwf	SetChanADC@channel& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917  002DEE  CFC2 F060          	movff	4034,??_SetChanADC	;volatile
  3918  002DF2  0EC3               	movlw	195
  3919  002DF4  0100               	movlb	0	; () banked
  3920  002DF6  1760               	andwf	??_SetChanADC& (0+255),f,b
  3921  002DF8  0100               	movlb	0	; () banked
  3922  002DFA  90D8               	bcf	status,0,c
  3923  002DFC  3161               	rrcf	SetChanADC@channel& (0+255),w,b
  3924  002DFE  0B3C               	andlw	60
  3925  002E00  0100               	movlb	0	; () banked
  3926  002E02  1160               	iorwf	??_SetChanADC& (0+255),w,b
  3927  002E04  6EC2               	movwf	4034,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930  002E06  0012               	return		;funcret
  3931  002E08                     __end_of_SetChanADC:
  3932                           	opt stack 0
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           intcon2	equ	0xFF1
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           postinc2	equ	0xFDE
  3940                           postdec2	equ	0xFDD
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945 ;; *************** function _ConvertADC *****************
  3946 ;; Defined at:
  3947 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		None
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    6
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_GetSensorReadings
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text37
  3976  002FCC                     __ptext37:
  3977                           	opt stack 0
  3978  002FCC                     _ConvertADC:
  3979                           	opt stack 23
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;incstack = 0
  3983  002FCC  82C2               	bsf	4034,1,c	;volatile
  3984  002FCE  0012               	return		;funcret
  3985  002FD0                     __end_of_ConvertADC:
  3986                           	opt stack 0
  3987                           prodh	equ	0xFF4
  3988                           prodl	equ	0xFF3
  3989                           intcon	equ	0xFF2
  3990                           intcon2	equ	0xFF1
  3991                           postinc0	equ	0xFEE
  3992                           wreg	equ	0xFE8
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _DisplaySensorStatuses *****************
  4000 ;; Defined at:
  4001 ;;		line 414 in file "FastBuggy17_Main_Code.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  status_array    2    0[BANK0 ] PTR const unsigned char 
  4004 ;;		 -> sensor_status(5), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  index           1    4[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;		None               void
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;Total ram usage:        5 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    6
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_CalibrateLine
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text38
  4032  002AA4                     __ptext38:
  4033                           	opt stack 0
  4034  002AA4                     _DisplaySensorStatuses:
  4035                           	opt stack 24
  4036                           
  4037                           ;FastBuggy17_Main_Code.c: 415: unsigned char index;
  4038                           ;FastBuggy17_Main_Code.c: 417: for (index = 0; index < 5; index++) {
  4039                           
  4040                           ;incstack = 0
  4041  002AA4  0E00               	movlw	0
  4042  002AA6  0100               	movlb	0	; () banked
  4043  002AA8  6F64               	movwf	DisplaySensorStatuses@index& (0+255),b
  4044  002AAA                     l4230:
  4045                           
  4046                           ; BSR set to: 0
  4047  002AAA  0E04               	movlw	4
  4048  002AAC  0100               	movlb	0	; () banked
  4049  002AAE  6564               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  4050  002AB0  D001               	goto	l4234
  4051                           
  4052                           ; BSR set to: 0
  4053  002AB2  D01F               	goto	l356
  4054  002AB4                     l4234:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;FastBuggy17_Main_Code.c: 418: LATJ ^= *(status_array + index) << index;
  4058  002AB4  C064  F062         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  4059  002AB8  0100               	movlb	0	; () banked
  4060  002ABA  5164               	movf	DisplaySensorStatuses@index& (0+255),w,b
  4061  002ABC  0D01               	mullw	1
  4062  002ABE  50F3               	movf	prodl,w,c
  4063  002AC0  0100               	movlb	0	; () banked
  4064  002AC2  2560               	addwf	DisplaySensorStatuses@status_array& (0+255),w,b
  4065  002AC4  6ED9               	movwf	fsr2l,c
  4066  002AC6  50F4               	movf	prodh,w,c
  4067  002AC8  0100               	movlb	0	; () banked
  4068  002ACA  2161               	addwfc	(DisplaySensorStatuses@status_array+1)& (0+255),w,b
  4069  002ACC  6EDA               	movwf	fsr2h,c
  4070  002ACE  50DF               	movf	indf2,w,c
  4071  002AD0  0100               	movlb	0	; () banked
  4072  002AD2  6F63               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  4073  002AD4  0100               	movlb	0	; () banked
  4074  002AD6  2B62               	incf	??_DisplaySensorStatuses& (0+255),f,b
  4075  002AD8  D003               	goto	u3774
  4076  002ADA                     u3775:
  4077  002ADA  0100               	movlb	0	; () banked
  4078  002ADC  90D8               	bcf	status,0,c
  4079  002ADE  3763               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  4080  002AE0                     u3774:
  4081  002AE0  0100               	movlb	0	; () banked
  4082  002AE2  2F62               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  4083  002AE4  D7FA               	goto	u3775
  4084  002AE6  0100               	movlb	0	; () banked
  4085  002AE8  5163               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  4086  002AEA  1A91               	xorwf	3985,f,c	;volatile
  4087                           
  4088                           ; BSR set to: 0
  4089  002AEC  0100               	movlb	0	; () banked
  4090  002AEE  2B64               	incf	DisplaySensorStatuses@index& (0+255),f,b
  4091  002AF0  D7DC               	goto	l4230
  4092  002AF2                     l356:
  4093                           
  4094                           ; BSR set to: 0
  4095  002AF2  0012               	return		;funcret
  4096  002AF4                     __end_of_DisplaySensorStatuses:
  4097                           	opt stack 0
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           intcon2	equ	0xFF1
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _CalculateSensorSums *****************
  4112 ;; Defined at:
  4113 ;;		line 370 in file "FastBuggy17_Main_Code.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  index           1   90[BANK0 ] unsigned char 
  4118 ;;  sum             1   89[BANK0 ] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      unsigned char 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;Total ram usage:        5 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:   11
  4135 ;; This function calls:
  4136 ;;		___ftmul
  4137 ;;		___fttol
  4138 ;;		___lbtoft
  4139 ;;		_pow
  4140 ;; This function is called by:
  4141 ;;		_CalibrateLine
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text39
  4147  00267C                     __ptext39:
  4148                           	opt stack 0
  4149  00267C                     _CalculateSensorSums:
  4150                           	opt stack 18
  4151                           
  4152                           ;FastBuggy17_Main_Code.c: 371: unsigned char index, sum = 0;
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;incstack = 0
  4156  00267C  0E00               	movlw	0
  4157  00267E  0100               	movlb	0	; () banked
  4158  002680  6FB9               	movwf	CalculateSensorSums@sum& (0+255),b
  4159                           
  4160                           ;FastBuggy17_Main_Code.c: 373: for(index = 0; index < 5; index++) {
  4161  002682  0E00               	movlw	0
  4162  002684  0100               	movlb	0	; () banked
  4163  002686  6FBA               	movwf	CalculateSensorSums@index& (0+255),b
  4164  002688                     l4212:
  4165                           
  4166                           ; BSR set to: 0
  4167  002688  0E04               	movlw	4
  4168  00268A  0100               	movlb	0	; () banked
  4169  00268C  65BA               	cpfsgt	CalculateSensorSums@index& (0+255),b
  4170  00268E  D001               	goto	l4216
  4171                           
  4172                           ; BSR set to: 0
  4173  002690  D044               	goto	l4224
  4174  002692                     l4216:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;FastBuggy17_Main_Code.c: 375: sum += (unsigned char) (sensor_status[index] * pow(2, ind
      +                          ex));
  4178  002692  0100               	movlb	0	; () banked
  4179  002694  51BA               	movf	CalculateSensorSums@index& (0+255),w,b
  4180  002696  EC3E  F016         	call	___lbtoft
  4181  00269A  C068  F0A8         	movff	?___lbtoft,pow@y
  4182  00269E  C069  F0A9         	movff	?___lbtoft+1,pow@y+1
  4183  0026A2  C06A  F0AA         	movff	?___lbtoft+2,pow@y+2
  4184  0026A6  0E00               	movlw	0
  4185  0026A8  0100               	movlb	0	; () banked
  4186  0026AA  6FA5               	movwf	pow@x& (0+255),b
  4187  0026AC  0E00               	movlw	0
  4188  0026AE  0100               	movlb	0	; () banked
  4189  0026B0  6FA6               	movwf	(pow@x+1)& (0+255),b
  4190  0026B2  0E40               	movlw	64
  4191  0026B4  0100               	movlb	0	; () banked
  4192  0026B6  6FA7               	movwf	(pow@x+2)& (0+255),b
  4193  0026B8  EC5A  F00B         	call	_pow	;wreg free
  4194  0026BC  C0A5  F0B6         	movff	?_pow,_CalculateSensorSums$2849
  4195  0026C0  C0A6  F0B7         	movff	?_pow+1,_CalculateSensorSums$2849+1
  4196  0026C4  C0A7  F0B8         	movff	?_pow+2,_CalculateSensorSums$2849+2
  4197                           
  4198                           ;FastBuggy17_Main_Code.c: 375: sum += (unsigned char) (sensor_status[index] * pow(2, ind
      +                          ex));
  4199  0026C8  C0B6  F06F         	movff	_CalculateSensorSums$2849,___ftmul@f2
  4200  0026CC  C0B7  F070         	movff	_CalculateSensorSums$2849+1,___ftmul@f2+1
  4201  0026D0  C0B8  F071         	movff	_CalculateSensorSums$2849+2,___ftmul@f2+2
  4202  0026D4  0100               	movlb	0	; () banked
  4203  0026D6  51BA               	movf	CalculateSensorSums@index& (0+255),w,b
  4204  0026D8  0D01               	mullw	1
  4205  0026DA  0E42               	movlw	low _sensor_status
  4206  0026DC  24F3               	addwf	prodl,w,c
  4207  0026DE  6ED9               	movwf	fsr2l,c
  4208  0026E0  0E00               	movlw	high _sensor_status
  4209  0026E2  20F4               	addwfc	prodh,w,c
  4210  0026E4  6EDA               	movwf	fsr2h,c
  4211  0026E6  50DF               	movf	indf2,w,c
  4212  0026E8  EC3E  F016         	call	___lbtoft
  4213  0026EC  C068  F06C         	movff	?___lbtoft,___ftmul@f1
  4214  0026F0  C069  F06D         	movff	?___lbtoft+1,___ftmul@f1+1
  4215  0026F4  C06A  F06E         	movff	?___lbtoft+2,___ftmul@f1+2
  4216  0026F8  EC27  F00C         	call	___ftmul	;wreg free
  4217  0026FC  C06C  F07B         	movff	?___ftmul,___fttol@f1
  4218  002700  C06D  F07C         	movff	?___ftmul+1,___fttol@f1+1
  4219  002704  C06E  F07D         	movff	?___ftmul+2,___fttol@f1+2
  4220  002708  EC16  F00E         	call	___fttol	;wreg free
  4221  00270C  0100               	movlb	0	; () banked
  4222  00270E  517B               	movf	?___fttol& (0+255),w,b
  4223  002710  0100               	movlb	0	; () banked
  4224  002712  27B9               	addwf	CalculateSensorSums@sum& (0+255),f,b
  4225                           
  4226                           ; BSR set to: 0
  4227  002714  0100               	movlb	0	; () banked
  4228  002716  2BBA               	incf	CalculateSensorSums@index& (0+255),f,b
  4229  002718  D7B7               	goto	l4212
  4230  00271A                     l4224:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;FastBuggy17_Main_Code.c: 377: }
  4234                           ;FastBuggy17_Main_Code.c: 379: return(sum);
  4235  00271A  0100               	movlb	0	; () banked
  4236  00271C  51B9               	movf	CalculateSensorSums@sum& (0+255),w,b
  4237  00271E  D000               	goto	l336
  4238  002720                     l336:
  4239                           
  4240                           ; BSR set to: 0
  4241  002720  0012               	return		;funcret
  4242  002722                     __end_of_CalculateSensorSums:
  4243                           	opt stack 0
  4244                           prodh	equ	0xFF4
  4245                           prodl	equ	0xFF3
  4246                           intcon	equ	0xFF2
  4247                           intcon2	equ	0xFF1
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           indf2	equ	0xFDF
  4251                           postinc2	equ	0xFDE
  4252                           postdec2	equ	0xFDD
  4253                           fsr2h	equ	0xFDA
  4254                           fsr2l	equ	0xFD9
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function _pow *****************
  4258 ;; Defined at:
  4259 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  x               3   69[BANK0 ] unsigned char 
  4262 ;;  y               3   72[BANK0 ] unsigned char 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  yi              4   82[BANK0 ] unsigned long 
  4265 ;;  sign            1   81[BANK0 ] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  3   69[BANK0 ] unsigned char 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4275 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;Total ram usage:       17 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:   10
  4282 ;; This function calls:
  4283 ;;		___ftge
  4284 ;;		___ftmul
  4285 ;;		___ftneg
  4286 ;;		___fttol
  4287 ;;		___lltoft
  4288 ;;		_exp
  4289 ;;		_log
  4290 ;; This function is called by:
  4291 ;;		_CalculateSensorSums
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           	psect	text40
  4296  0016B4                     __ptext40:
  4297                           	opt stack 0
  4298  0016B4                     _pow:
  4299                           	opt stack 18
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;incstack = 0
  4303  0016B4  0E00               	movlw	0
  4304  0016B6  0100               	movlb	0	; () banked
  4305  0016B8  6FB1               	movwf	pow@sign& (0+255),b
  4306                           
  4307                           ; BSR set to: 0
  4308  0016BA  0100               	movlb	0	; () banked
  4309  0016BC  51A5               	movf	pow@x& (0+255),w,b
  4310  0016BE  0100               	movlb	0	; () banked
  4311  0016C0  11A6               	iorwf	(pow@x+1)& (0+255),w,b
  4312  0016C2  0100               	movlb	0	; () banked
  4313  0016C4  11A7               	iorwf	(pow@x+2)& (0+255),w,b
  4314  0016C6  A4D8               	btfss	status,2,c
  4315  0016C8  D016               	goto	l4036
  4316                           
  4317                           ; BSR set to: 0
  4318  0016CA  0E00               	movlw	0
  4319  0016CC  0100               	movlb	0	; () banked
  4320  0016CE  6F60               	movwf	___ftge@ff1& (0+255),b
  4321  0016D0  0E00               	movlw	0
  4322  0016D2  0100               	movlb	0	; () banked
  4323  0016D4  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  4324  0016D6  0E00               	movlw	0
  4325  0016D8  0100               	movlb	0	; () banked
  4326  0016DA  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  4327  0016DC  C0A8  F063         	movff	pow@y,___ftge@ff2
  4328  0016E0  C0A9  F064         	movff	pow@y+1,___ftge@ff2+1
  4329  0016E4  C0AA  F065         	movff	pow@y+2,___ftge@ff2+2
  4330  0016E8  EC26  F012         	call	___ftge	;wreg free
  4331  0016EC  0100               	movlb	0	; () banked
  4332  0016EE  A0D8               	btfss	status,0,c
  4333  0016F0  D045               	goto	L3
  4334  0016F2  D03F               	goto	u3530
  4335                           
  4336                           ; BSR set to: 0
  4337                           
  4338                           ; BSR set to: 0
  4339                           
  4340                           ; BSR set to: 0
  4341  0016F4  D0AB               	goto	l1186
  4342  0016F6                     l4036:
  4343                           
  4344                           ; BSR set to: 0
  4345  0016F6  0100               	movlb	0	; () banked
  4346  0016F8  51A8               	movf	pow@y& (0+255),w,b
  4347  0016FA  0100               	movlb	0	; () banked
  4348  0016FC  11A9               	iorwf	(pow@y+1)& (0+255),w,b
  4349  0016FE  0100               	movlb	0	; () banked
  4350  001700  11AA               	iorwf	(pow@y+2)& (0+255),w,b
  4351  001702  A4D8               	btfss	status,2,c
  4352  001704  D009               	goto	l4042
  4353                           
  4354                           ; BSR set to: 0
  4355  001706  0E00               	movlw	0
  4356  001708  0100               	movlb	0	; () banked
  4357  00170A  6FA5               	movwf	?_pow& (0+255),b
  4358  00170C  0E80               	movlw	128
  4359  00170E  0100               	movlb	0	; () banked
  4360  001710  6FA6               	movwf	(?_pow+1)& (0+255),b
  4361  001712  0E3F               	movlw	63
  4362  001714  D03A               	goto	L2
  4363                           
  4364                           ; BSR set to: 0
  4365  001716  D09A               	goto	l1186
  4366  001718                     l4042:
  4367                           
  4368                           ; BSR set to: 0
  4369  001718  0100               	movlb	0	; () banked
  4370  00171A  AFA7               	btfss	(pow@x+2)& (0+255),7,b
  4371  00171C  D04D               	goto	l4054
  4372                           
  4373                           ; BSR set to: 0
  4374  00171E  C0A8  F07B         	movff	pow@y,___fttol@f1
  4375  001722  C0A9  F07C         	movff	pow@y+1,___fttol@f1+1
  4376  001726  C0AA  F07D         	movff	pow@y+2,___fttol@f1+2
  4377  00172A  EC16  F00E         	call	___fttol	;wreg free
  4378  00172E  C07B  F0B2         	movff	?___fttol,pow@yi
  4379  001732  C07C  F0B3         	movff	?___fttol+1,pow@yi+1
  4380  001736  C07D  F0B4         	movff	?___fttol+2,pow@yi+2
  4381  00173A  C07E  F0B5         	movff	?___fttol+3,pow@yi+3
  4382  00173E  C0B2  F068         	movff	pow@yi,___lltoft@c
  4383  001742  C0B3  F069         	movff	pow@yi+1,___lltoft@c+1
  4384  001746  C0B4  F06A         	movff	pow@yi+2,___lltoft@c+2
  4385  00174A  C0B5  F06B         	movff	pow@yi+3,___lltoft@c+3
  4386  00174E  ECE2  F013         	call	___lltoft	;wreg free
  4387  001752  0100               	movlb	0	; () banked
  4388  001754  51A8               	movf	pow@y& (0+255),w,b
  4389  001756  0100               	movlb	0	; () banked
  4390  001758  1968               	xorwf	?___lltoft& (0+255),w,b
  4391  00175A  E10B               	bnz	u3530
  4392  00175C  0100               	movlb	0	; () banked
  4393  00175E  51A9               	movf	(pow@y+1)& (0+255),w,b
  4394  001760  0100               	movlb	0	; () banked
  4395  001762  1969               	xorwf	(?___lltoft+1)& (0+255),w,b
  4396  001764  E106               	bnz	u3530
  4397  001766  0100               	movlb	0	; () banked
  4398  001768  51AA               	movf	(pow@y+2)& (0+255),w,b
  4399  00176A  0100               	movlb	0	; () banked
  4400  00176C  196A               	xorwf	(?___lltoft+2)& (0+255),w,b
  4401  00176E  B4D8               	btfsc	status,2,c
  4402  001770  D00F               	goto	l4050
  4403  001772                     u3530:
  4404                           
  4405                           ; BSR set to: 0
  4406  001772  0E00               	movlw	0
  4407  001774  0100               	movlb	0	; () banked
  4408  001776  6FD6               	movwf	(_errno+1)& (0+255),b
  4409  001778  0E21               	movlw	33
  4410  00177A  6FD5               	movwf	_errno& (0+255),b
  4411  00177C                     L3:
  4412  00177C  0E00               	movlw	0
  4413  00177E  0100               	movlb	0	; () banked
  4414  001780  6FA5               	movwf	?_pow& (0+255),b
  4415  001782  0E00               	movlw	0
  4416  001784  0100               	movlb	0	; () banked
  4417  001786  6FA6               	movwf	(?_pow+1)& (0+255),b
  4418  001788  0E00               	movlw	0
  4419  00178A                     L2:
  4420  00178A  0100               	movlb	0	; () banked
  4421  00178C  6FA7               	movwf	(?_pow+2)& (0+255),b
  4422                           
  4423                           ; BSR set to: 0
  4424  00178E  D05E               	goto	l1186
  4425  001790                     l4050:
  4426                           
  4427                           ; BSR set to: 0
  4428  001790  0100               	movlb	0	; () banked
  4429  001792  51B2               	movf	pow@yi& (0+255),w,b
  4430  001794  0B01               	andlw	1
  4431  001796  0100               	movlb	0	; () banked
  4432  001798  6FB1               	movwf	pow@sign& (0+255),b
  4433                           
  4434                           ; BSR set to: 0
  4435  00179A  C0A5  F060         	movff	pow@x,___ftneg@f1
  4436  00179E  C0A6  F061         	movff	pow@x+1,___ftneg@f1+1
  4437  0017A2  C0A7  F062         	movff	pow@x+2,___ftneg@f1+2
  4438  0017A6  EC26  F016         	call	___ftneg	;wreg free
  4439  0017AA  C060  F0A5         	movff	?___ftneg,pow@x
  4440  0017AE  C061  F0A6         	movff	?___ftneg+1,pow@x+1
  4441  0017B2  C062  F0A7         	movff	?___ftneg+2,pow@x+2
  4442  0017B6  D000               	goto	l4054
  4443  0017B8                     l4054:
  4444  0017B8  C0A5  F093         	movff	pow@x,log@x
  4445  0017BC  C0A6  F094         	movff	pow@x+1,log@x+1
  4446  0017C0  C0A7  F095         	movff	pow@x+2,log@x+2
  4447  0017C4  EC76  F00D         	call	_log	;wreg free
  4448  0017C8  C093  F0AB         	movff	?_log,_pow$2850
  4449  0017CC  C094  F0AC         	movff	?_log+1,_pow$2850+1
  4450  0017D0  C095  F0AD         	movff	?_log+2,_pow$2850+2
  4451  0017D4  C0AB  F06C         	movff	_pow$2850,___ftmul@f1
  4452  0017D8  C0AC  F06D         	movff	_pow$2850+1,___ftmul@f1+1
  4453  0017DC  C0AD  F06E         	movff	_pow$2850+2,___ftmul@f1+2
  4454  0017E0  C0A8  F06F         	movff	pow@y,___ftmul@f2
  4455  0017E4  C0A9  F070         	movff	pow@y+1,___ftmul@f2+1
  4456  0017E8  C0AA  F071         	movff	pow@y+2,___ftmul@f2+2
  4457  0017EC  EC27  F00C         	call	___ftmul	;wreg free
  4458  0017F0  C06C  F0AE         	movff	?___ftmul,_pow$2851
  4459  0017F4  C06D  F0AF         	movff	?___ftmul+1,_pow$2851+1
  4460  0017F8  C06E  F0B0         	movff	?___ftmul+2,_pow$2851+2
  4461  0017FC  C0AE  F09C         	movff	_pow$2851,exp@x
  4462  001800  C0AF  F09D         	movff	_pow$2851+1,exp@x+1
  4463  001804  C0B0  F09E         	movff	_pow$2851+2,exp@x+2
  4464  001808  EC5D  F009         	call	_exp	;wreg free
  4465  00180C  C09C  F0A5         	movff	?_exp,pow@x
  4466  001810  C09D  F0A6         	movff	?_exp+1,pow@x+1
  4467  001814  C09E  F0A7         	movff	?_exp+2,pow@x+2
  4468  001818  0100               	movlb	0	; () banked
  4469  00181A  51B1               	movf	pow@sign& (0+255),w,b
  4470  00181C  0100               	movlb	0	; () banked
  4471  00181E  B4D8               	btfsc	status,2,c
  4472  001820  D00F               	goto	l1190
  4473                           
  4474                           ; BSR set to: 0
  4475  001822  C0A5  F060         	movff	pow@x,___ftneg@f1
  4476  001826  C0A6  F061         	movff	pow@x+1,___ftneg@f1+1
  4477  00182A  C0A7  F062         	movff	pow@x+2,___ftneg@f1+2
  4478  00182E  EC26  F016         	call	___ftneg	;wreg free
  4479  001832  C060  F0A5         	movff	?___ftneg,?_pow
  4480  001836  C061  F0A6         	movff	?___ftneg+1,?_pow+1
  4481  00183A  C062  F0A7         	movff	?___ftneg+2,?_pow+2
  4482  00183E  D006               	goto	l1186
  4483  001840                     l1190:
  4484                           
  4485                           ; BSR set to: 0
  4486  001840  C0A5  F0A5         	movff	pow@x,?_pow
  4487  001844  C0A6  F0A6         	movff	pow@x+1,?_pow+1
  4488  001848  C0A7  F0A7         	movff	pow@x+2,?_pow+2
  4489  00184C                     l1186:
  4490  00184C  0012               	return		;funcret
  4491  00184E                     __end_of_pow:
  4492                           	opt stack 0
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           intcon	equ	0xFF2
  4496                           intcon2	equ	0xFF1
  4497                           postinc0	equ	0xFEE
  4498                           wreg	equ	0xFE8
  4499                           indf2	equ	0xFDF
  4500                           postinc2	equ	0xFDE
  4501                           postdec2	equ	0xFDD
  4502                           fsr2h	equ	0xFDA
  4503                           fsr2l	equ	0xFD9
  4504                           status	equ	0xFD8
  4505                           
  4506 ;; *************** function _log *****************
  4507 ;; Defined at:
  4508 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  x               3   51[BANK0 ] unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  exponent        2   54[BANK0 ] int 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  3   51[BANK0 ] int 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4522 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;Total ram usage:        5 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    9
  4529 ;; This function calls:
  4530 ;;		___awtoft
  4531 ;;		___ftadd
  4532 ;;		___ftmul
  4533 ;;		_eval_poly
  4534 ;;		_frexp
  4535 ;; This function is called by:
  4536 ;;		_pow
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text41
  4541  001AEC                     __ptext41:
  4542                           	opt stack 0
  4543  001AEC                     _log:
  4544                           	opt stack 18
  4545                           
  4546                           ;incstack = 0
  4547  001AEC  0100               	movlb	0	; () banked
  4548  001AEE  AF95               	btfss	(log@x+2)& (0+255),7,b
  4549  001AF0  D006               	goto	l3918
  4550                           
  4551                           ; BSR set to: 0
  4552  001AF2  0E00               	movlw	0
  4553  001AF4  0100               	movlb	0	; () banked
  4554  001AF6  6FD6               	movwf	(_errno+1)& (0+255),b
  4555  001AF8  0E21               	movlw	33
  4556  001AFA  D00D               	goto	L4
  4557                           
  4558                           ; BSR set to: 0
  4559  001AFC  D096               	goto	l1248
  4560  001AFE                     l3918:
  4561                           
  4562                           ; BSR set to: 0
  4563  001AFE  0100               	movlb	0	; () banked
  4564  001B00  5193               	movf	log@x& (0+255),w,b
  4565  001B02  0100               	movlb	0	; () banked
  4566  001B04  1194               	iorwf	(log@x+1)& (0+255),w,b
  4567  001B06  0100               	movlb	0	; () banked
  4568  001B08  1195               	iorwf	(log@x+2)& (0+255),w,b
  4569  001B0A  A4D8               	btfss	status,2,c
  4570  001B0C  D00F               	goto	l3924
  4571                           
  4572                           ; BSR set to: 0
  4573  001B0E  0E00               	movlw	0
  4574  001B10  0100               	movlb	0	; () banked
  4575  001B12  6FD6               	movwf	(_errno+1)& (0+255),b
  4576  001B14  0E22               	movlw	34
  4577  001B16                     L4:
  4578  001B16  6FD5               	movwf	_errno& (0+255),b
  4579  001B18  0E00               	movlw	0
  4580  001B1A  0100               	movlb	0	; () banked
  4581  001B1C  6F93               	movwf	?_log& (0+255),b
  4582  001B1E  0E00               	movlw	0
  4583  001B20  0100               	movlb	0	; () banked
  4584  001B22  6F94               	movwf	(?_log+1)& (0+255),b
  4585  001B24  0E00               	movlw	0
  4586  001B26  0100               	movlb	0	; () banked
  4587  001B28  6F95               	movwf	(?_log+2)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590  001B2A  D07F               	goto	l1248
  4591  001B2C                     l3924:
  4592                           
  4593                           ; BSR set to: 0
  4594  001B2C  0E00               	movlw	0
  4595  001B2E  0100               	movlb	0	; () banked
  4596  001B30  6F6F               	movwf	___ftmul@f2& (0+255),b
  4597  001B32  0E00               	movlw	0
  4598  001B34  0100               	movlb	0	; () banked
  4599  001B36  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4600  001B38  0E40               	movlw	64
  4601  001B3A  0100               	movlb	0	; () banked
  4602  001B3C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4603  001B3E  0E96               	movlw	low log@exponent
  4604  001B40  0100               	movlb	0	; () banked
  4605  001B42  6F63               	movwf	frexp@eptr& (0+255),b
  4606  001B44  0E00               	movlw	high log@exponent
  4607  001B46  0100               	movlb	0	; () banked
  4608  001B48  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  4609  001B4A  C093  F060         	movff	log@x,frexp@value
  4610  001B4E  C094  F061         	movff	log@x+1,frexp@value+1
  4611  001B52  C095  F062         	movff	log@x+2,frexp@value+2
  4612  001B56  ECE7  F012         	call	_frexp	;wreg free
  4613  001B5A  C060  F06C         	movff	?_frexp,___ftmul@f1
  4614  001B5E  C061  F06D         	movff	?_frexp+1,___ftmul@f1+1
  4615  001B62  C062  F06E         	movff	?_frexp+2,___ftmul@f1+2
  4616  001B66  EC27  F00C         	call	___ftmul	;wreg free
  4617  001B6A  C06C  F07B         	movff	?___ftmul,___ftadd@f1
  4618  001B6E  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
  4619  001B72  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
  4620  001B76  0E00               	movlw	0
  4621  001B78  0100               	movlb	0	; () banked
  4622  001B7A  6F7E               	movwf	___ftadd@f2& (0+255),b
  4623  001B7C  0E80               	movlw	128
  4624  001B7E  0100               	movlb	0	; () banked
  4625  001B80  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
  4626  001B82  0EBF               	movlw	191
  4627  001B84  0100               	movlb	0	; () banked
  4628  001B86  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
  4629  001B88  EC1E  F008         	call	___ftadd	;wreg free
  4630  001B8C  C07B  F093         	movff	?___ftadd,log@x
  4631  001B90  C07C  F094         	movff	?___ftadd+1,log@x+1
  4632  001B94  C07D  F095         	movff	?___ftadd+2,log@x+2
  4633  001B98  0100               	movlb	0	; () banked
  4634  001B9A  0796               	decf	log@exponent& (0+255),f,b
  4635  001B9C  A0D8               	btfss	status,0,c
  4636  001B9E  0797               	decf	(log@exponent+1)& (0+255),f,b
  4637                           
  4638                           ; BSR set to: 0
  4639  001BA0  C093  F087         	movff	log@x,eval_poly@x
  4640  001BA4  C094  F088         	movff	log@x+1,eval_poly@x+1
  4641  001BA8  C095  F089         	movff	log@x+2,eval_poly@x+2
  4642  001BAC  0E1F               	movlw	low log@coeff
  4643  001BAE  0100               	movlb	0	; () banked
  4644  001BB0  6F8A               	movwf	eval_poly@d& (0+255),b
  4645  001BB2  0E10               	movlw	high log@coeff
  4646  001BB4  0100               	movlb	0	; () banked
  4647  001BB6  6F8B               	movwf	(eval_poly@d+1)& (0+255),b
  4648  001BB8  0E00               	movlw	0
  4649  001BBA  0100               	movlb	0	; () banked
  4650  001BBC  6F8D               	movwf	(eval_poly@n+1)& (0+255),b
  4651  001BBE  0E08               	movlw	8
  4652  001BC0  6F8C               	movwf	eval_poly@n& (0+255),b
  4653  001BC2  EC48  F010         	call	_eval_poly	;wreg free
  4654  001BC6  C087  F093         	movff	?_eval_poly,log@x
  4655  001BCA  C088  F094         	movff	?_eval_poly+1,log@x+1
  4656  001BCE  C089  F095         	movff	?_eval_poly+2,log@x+2
  4657  001BD2  0E72               	movlw	114
  4658  001BD4  0100               	movlb	0	; () banked
  4659  001BD6  6F6F               	movwf	___ftmul@f2& (0+255),b
  4660  001BD8  0E31               	movlw	49
  4661  001BDA  0100               	movlb	0	; () banked
  4662  001BDC  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4663  001BDE  0E3F               	movlw	63
  4664  001BE0  0100               	movlb	0	; () banked
  4665  001BE2  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4666  001BE4  C096  F068         	movff	log@exponent,___awtoft@c
  4667  001BE8  C097  F069         	movff	log@exponent+1,___awtoft@c+1
  4668  001BEC  ECA2  F015         	call	___awtoft	;wreg free
  4669  001BF0  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4670  001BF4  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4671  001BF8  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4672  001BFC  EC27  F00C         	call	___ftmul	;wreg free
  4673  001C00  C06C  F07B         	movff	?___ftmul,___ftadd@f1
  4674  001C04  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
  4675  001C08  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
  4676  001C0C  C093  F07E         	movff	log@x,___ftadd@f2
  4677  001C10  C094  F07F         	movff	log@x+1,___ftadd@f2+1
  4678  001C14  C095  F080         	movff	log@x+2,___ftadd@f2+2
  4679  001C18  EC1E  F008         	call	___ftadd	;wreg free
  4680  001C1C  C07B  F093         	movff	?___ftadd,?_log
  4681  001C20  C07C  F094         	movff	?___ftadd+1,?_log+1
  4682  001C24  C07D  F095         	movff	?___ftadd+2,?_log+2
  4683  001C28  D000               	goto	l1248
  4684  001C2A                     l1248:
  4685  001C2A  0012               	return		;funcret
  4686  001C2C                     __end_of_log:
  4687                           	opt stack 0
  4688                           prodh	equ	0xFF4
  4689                           prodl	equ	0xFF3
  4690                           intcon	equ	0xFF2
  4691                           intcon2	equ	0xFF1
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           indf2	equ	0xFDF
  4695                           postinc2	equ	0xFDE
  4696                           postdec2	equ	0xFDD
  4697                           fsr2h	equ	0xFDA
  4698                           fsr2l	equ	0xFD9
  4699                           status	equ	0xFD8
  4700                           
  4701 ;; *************** function _exp *****************
  4702 ;; Defined at:
  4703 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  x               3   60[BANK0 ] int 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  exponent        2   66[BANK0 ] int 
  4708 ;;  sign            1   68[BANK0 ] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  3   60[BANK0 ] unsigned char 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4718 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;Total ram usage:        9 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    9
  4725 ;; This function calls:
  4726 ;;		___awtoft
  4727 ;;		___ftdiv
  4728 ;;		___ftge
  4729 ;;		___ftmul
  4730 ;;		___ftneg
  4731 ;;		___ftsub
  4732 ;;		___fttol
  4733 ;;		_eval_poly
  4734 ;;		_floor
  4735 ;;		_ldexp
  4736 ;; This function is called by:
  4737 ;;		_pow
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text42
  4742  0012BA                     __ptext42:
  4743                           	opt stack 0
  4744  0012BA                     _exp:
  4745                           	opt stack 18
  4746                           
  4747                           ;incstack = 0
  4748  0012BA  0100               	movlb	0	; () banked
  4749  0012BC  519C               	movf	exp@x& (0+255),w,b
  4750  0012BE  0100               	movlb	0	; () banked
  4751  0012C0  119D               	iorwf	(exp@x+1)& (0+255),w,b
  4752  0012C2  0100               	movlb	0	; () banked
  4753  0012C4  119E               	iorwf	(exp@x+2)& (0+255),w,b
  4754  0012C6  A4D8               	btfss	status,2,c
  4755  0012C8  D009               	goto	l3940
  4756                           
  4757                           ; BSR set to: 0
  4758  0012CA  0E00               	movlw	0
  4759  0012CC  0100               	movlb	0	; () banked
  4760  0012CE  6F9C               	movwf	?_exp& (0+255),b
  4761  0012D0  0E80               	movlw	128
  4762  0012D2  0100               	movlb	0	; () banked
  4763  0012D4  6F9D               	movwf	(?_exp+1)& (0+255),b
  4764  0012D6  0E3F               	movlw	63
  4765  0012D8  D03D               	goto	L6
  4766                           
  4767                           ; BSR set to: 0
  4768  0012DA  D102               	goto	l1206
  4769  0012DC                     l3940:
  4770                           
  4771                           ; BSR set to: 0
  4772  0012DC  0E72               	movlw	114
  4773  0012DE  0100               	movlb	0	; () banked
  4774  0012E0  6F60               	movwf	___ftge@ff1& (0+255),b
  4775  0012E2  0E31               	movlw	49
  4776  0012E4  0100               	movlb	0	; () banked
  4777  0012E6  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  4778  0012E8  0E44               	movlw	68
  4779  0012EA  0100               	movlb	0	; () banked
  4780  0012EC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  4781  0012EE  C09C  F063         	movff	exp@x,___ftge@ff2
  4782  0012F2  C09D  F064         	movff	exp@x+1,___ftge@ff2+1
  4783  0012F6  C09E  F065         	movff	exp@x+2,___ftge@ff2+2
  4784  0012FA  EC26  F012         	call	___ftge	;wreg free
  4785  0012FE  0100               	movlb	0	; () banked
  4786  001300  B0D8               	btfsc	status,0,c
  4787  001302  D00E               	goto	l3946
  4788                           
  4789                           ; BSR set to: 0
  4790  001304  0E00               	movlw	0
  4791  001306  0100               	movlb	0	; () banked
  4792  001308  6FD6               	movwf	(_errno+1)& (0+255),b
  4793  00130A  0E22               	movlw	34
  4794  00130C  6FD5               	movwf	_errno& (0+255),b
  4795  00130E  0EFF               	movlw	255
  4796  001310  0100               	movlb	0	; () banked
  4797  001312  6F9C               	movwf	?_exp& (0+255),b
  4798  001314  0E7F               	movlw	127
  4799  001316  0100               	movlb	0	; () banked
  4800  001318  6F9D               	movwf	(?_exp+1)& (0+255),b
  4801  00131A  0E7F               	movlw	127
  4802  00131C  D01B               	goto	L6
  4803                           
  4804                           ; BSR set to: 0
  4805  00131E  D0E0               	goto	l1206
  4806  001320                     l3946:
  4807                           
  4808                           ; BSR set to: 0
  4809  001320  C09C  F060         	movff	exp@x,___ftge@ff1
  4810  001324  C09D  F061         	movff	exp@x+1,___ftge@ff1+1
  4811  001328  C09E  F062         	movff	exp@x+2,___ftge@ff1+2
  4812  00132C  0E49               	movlw	73
  4813  00132E  0100               	movlb	0	; () banked
  4814  001330  6F63               	movwf	___ftge@ff2& (0+255),b
  4815  001332  0E3A               	movlw	58
  4816  001334  0100               	movlb	0	; () banked
  4817  001336  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4818  001338  0EC4               	movlw	196
  4819  00133A  0100               	movlb	0	; () banked
  4820  00133C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  4821  00133E  EC26  F012         	call	___ftge	;wreg free
  4822  001342  0100               	movlb	0	; () banked
  4823  001344  B0D8               	btfsc	status,0,c
  4824  001346  D009               	goto	l3952
  4825                           
  4826                           ; BSR set to: 0
  4827  001348  0E00               	movlw	0
  4828  00134A  0100               	movlb	0	; () banked
  4829  00134C  6FD6               	movwf	(_errno+1)& (0+255),b
  4830  00134E  0E22               	movlw	34
  4831  001350  6FD5               	movwf	_errno& (0+255),b
  4832  001352  D09F               	goto	l3970
  4833  001354                     L6:
  4834  001354  0100               	movlb	0	; () banked
  4835  001356  6F9E               	movwf	(?_exp+2)& (0+255),b
  4836                           
  4837                           ; BSR set to: 0
  4838  001358  D0C3               	goto	l1206
  4839  00135A                     l3952:
  4840                           
  4841                           ; BSR set to: 0
  4842  00135A  0100               	movlb	0	; () banked
  4843  00135C  AF9E               	btfss	(exp@x+2)& (0+255),7,b
  4844  00135E  D002               	goto	u3420
  4845  001360  0E01               	movlw	1
  4846  001362  D001               	goto	u3430
  4847  001364                     u3420:
  4848  001364  0E00               	movlw	0
  4849  001366                     u3430:
  4850  001366  0100               	movlb	0	; () banked
  4851  001368  6FA4               	movwf	exp@sign& (0+255),b
  4852                           
  4853                           ; BSR set to: 0
  4854  00136A  0100               	movlb	0	; () banked
  4855  00136C  51A4               	movf	exp@sign& (0+255),w,b
  4856  00136E  0100               	movlb	0	; () banked
  4857  001370  B4D8               	btfsc	status,2,c
  4858  001372  D00E               	goto	l1209
  4859                           
  4860                           ; BSR set to: 0
  4861  001374  C09C  F060         	movff	exp@x,___ftneg@f1
  4862  001378  C09D  F061         	movff	exp@x+1,___ftneg@f1+1
  4863  00137C  C09E  F062         	movff	exp@x+2,___ftneg@f1+2
  4864  001380  EC26  F016         	call	___ftneg	;wreg free
  4865  001384  C060  F09C         	movff	?___ftneg,exp@x
  4866  001388  C061  F09D         	movff	?___ftneg+1,exp@x+1
  4867  00138C  C062  F09E         	movff	?___ftneg+2,exp@x+2
  4868  001390                     l1209:
  4869  001390  C09C  F06C         	movff	exp@x,___ftmul@f1
  4870  001394  C09D  F06D         	movff	exp@x+1,___ftmul@f1+1
  4871  001398  C09E  F06E         	movff	exp@x+2,___ftmul@f1+2
  4872  00139C  0EAA               	movlw	170
  4873  00139E  0100               	movlb	0	; () banked
  4874  0013A0  6F6F               	movwf	___ftmul@f2& (0+255),b
  4875  0013A2  0EB8               	movlw	184
  4876  0013A4  0100               	movlb	0	; () banked
  4877  0013A6  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4878  0013A8  0E3F               	movlw	63
  4879  0013AA  0100               	movlb	0	; () banked
  4880  0013AC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4881  0013AE  EC27  F00C         	call	___ftmul	;wreg free
  4882  0013B2  C06C  F09C         	movff	?___ftmul,exp@x
  4883  0013B6  C06D  F09D         	movff	?___ftmul+1,exp@x+1
  4884  0013BA  C06E  F09E         	movff	?___ftmul+2,exp@x+2
  4885  0013BE  C09C  F094         	movff	exp@x,floor@x
  4886  0013C2  C09D  F095         	movff	exp@x+1,floor@x+1
  4887  0013C6  C09E  F096         	movff	exp@x+2,floor@x+2
  4888  0013CA  ECCA  F00F         	call	_floor	;wreg free
  4889  0013CE  C094  F09F         	movff	?_floor,_exp$2852
  4890  0013D2  C095  F0A0         	movff	?_floor+1,_exp$2852+1
  4891  0013D6  C096  F0A1         	movff	?_floor+2,_exp$2852+2
  4892  0013DA  C09F  F07B         	movff	_exp$2852,___fttol@f1
  4893  0013DE  C0A0  F07C         	movff	_exp$2852+1,___fttol@f1+1
  4894  0013E2  C0A1  F07D         	movff	_exp$2852+2,___fttol@f1+2
  4895  0013E6  EC16  F00E         	call	___fttol	;wreg free
  4896  0013EA  C07B  F0A2         	movff	?___fttol,exp@exponent
  4897  0013EE  C07C  F0A3         	movff	?___fttol+1,exp@exponent+1
  4898  0013F2  C09C  F087         	movff	exp@x,___ftsub@f1
  4899  0013F6  C09D  F088         	movff	exp@x+1,___ftsub@f1+1
  4900  0013FA  C09E  F089         	movff	exp@x+2,___ftsub@f1+2
  4901  0013FE  C0A2  F068         	movff	exp@exponent,___awtoft@c
  4902  001402  C0A3  F069         	movff	exp@exponent+1,___awtoft@c+1
  4903  001406  ECA2  F015         	call	___awtoft	;wreg free
  4904  00140A  C068  F08A         	movff	?___awtoft,___ftsub@f2
  4905  00140E  C069  F08B         	movff	?___awtoft+1,___ftsub@f2+1
  4906  001412  C06A  F08C         	movff	?___awtoft+2,___ftsub@f2+2
  4907  001416  EC7A  F015         	call	___ftsub	;wreg free
  4908  00141A  C087  F09C         	movff	?___ftsub,exp@x
  4909  00141E  C088  F09D         	movff	?___ftsub+1,exp@x+1
  4910  001422  C089  F09E         	movff	?___ftsub+2,exp@x+2
  4911  001426  C09C  F087         	movff	exp@x,eval_poly@x
  4912  00142A  C09D  F088         	movff	exp@x+1,eval_poly@x+1
  4913  00142E  C09E  F089         	movff	exp@x+2,eval_poly@x+2
  4914  001432  0E01               	movlw	low exp@coeff
  4915  001434  0100               	movlb	0	; () banked
  4916  001436  6F8A               	movwf	eval_poly@d& (0+255),b
  4917  001438  0E10               	movlw	high exp@coeff
  4918  00143A  0100               	movlb	0	; () banked
  4919  00143C  6F8B               	movwf	(eval_poly@d+1)& (0+255),b
  4920  00143E  0E00               	movlw	0
  4921  001440  0100               	movlb	0	; () banked
  4922  001442  6F8D               	movwf	(eval_poly@n+1)& (0+255),b
  4923  001444  0E09               	movlw	9
  4924  001446  6F8C               	movwf	eval_poly@n& (0+255),b
  4925  001448  EC48  F010         	call	_eval_poly	;wreg free
  4926  00144C  C087  F093         	movff	?_eval_poly,ldexp@value
  4927  001450  C088  F094         	movff	?_eval_poly+1,ldexp@value+1
  4928  001454  C089  F095         	movff	?_eval_poly+2,ldexp@value+2
  4929  001458  C0A2  F096         	movff	exp@exponent,ldexp@newexp
  4930  00145C  C0A3  F097         	movff	exp@exponent+1,ldexp@newexp+1
  4931  001460  EC3F  F00F         	call	_ldexp	;wreg free
  4932  001464  C093  F09C         	movff	?_ldexp,exp@x
  4933  001468  C094  F09D         	movff	?_ldexp+1,exp@x+1
  4934  00146C  C095  F09E         	movff	?_ldexp+2,exp@x+2
  4935  001470  0100               	movlb	0	; () banked
  4936  001472  51A4               	movf	exp@sign& (0+255),w,b
  4937  001474  0100               	movlb	0	; () banked
  4938  001476  B4D8               	btfsc	status,2,c
  4939  001478  D02D               	goto	l1210
  4940                           
  4941                           ; BSR set to: 0
  4942  00147A  0100               	movlb	0	; () banked
  4943  00147C  299C               	incf	exp@x& (0+255),w,b
  4944  00147E  E112               	bnz	l3974
  4945  001480  0E7F               	movlw	127
  4946  001482  0100               	movlb	0	; () banked
  4947  001484  199D               	xorwf	(exp@x+1)& (0+255),w,b
  4948  001486  E10E               	bnz	l3974
  4949  001488  0E7F               	movlw	127
  4950  00148A  0100               	movlb	0	; () banked
  4951  00148C  199E               	xorwf	(exp@x+2)& (0+255),w,b
  4952  00148E  A4D8               	btfss	status,2,c
  4953  001490  D009               	goto	l3974
  4954  001492                     l3970:
  4955                           
  4956                           ; BSR set to: 0
  4957  001492  0E00               	movlw	0
  4958  001494  0100               	movlb	0	; () banked
  4959  001496  6F9C               	movwf	?_exp& (0+255),b
  4960  001498  0E00               	movlw	0
  4961  00149A  0100               	movlb	0	; () banked
  4962  00149C  6F9D               	movwf	(?_exp+1)& (0+255),b
  4963  00149E  0E00               	movlw	0
  4964  0014A0  D759               	goto	L6
  4965                           
  4966                           ; BSR set to: 0
  4967  0014A2  D01E               	goto	l1206
  4968  0014A4                     l3974:
  4969                           
  4970                           ; BSR set to: 0
  4971  0014A4  0E00               	movlw	0
  4972  0014A6  0100               	movlb	0	; () banked
  4973  0014A8  6F68               	movwf	___ftdiv@f1& (0+255),b
  4974  0014AA  0E80               	movlw	128
  4975  0014AC  0100               	movlb	0	; () banked
  4976  0014AE  6F69               	movwf	(___ftdiv@f1+1)& (0+255),b
  4977  0014B0  0E3F               	movlw	63
  4978  0014B2  0100               	movlb	0	; () banked
  4979  0014B4  6F6A               	movwf	(___ftdiv@f1+2)& (0+255),b
  4980  0014B6  C09C  F06B         	movff	exp@x,___ftdiv@f2
  4981  0014BA  C09D  F06C         	movff	exp@x+1,___ftdiv@f2+1
  4982  0014BE  C09E  F06D         	movff	exp@x+2,___ftdiv@f2+2
  4983  0014C2  ECD5  F00C         	call	___ftdiv	;wreg free
  4984  0014C6  C068  F09C         	movff	?___ftdiv,?_exp
  4985  0014CA  C069  F09D         	movff	?___ftdiv+1,?_exp+1
  4986  0014CE  C06A  F09E         	movff	?___ftdiv+2,?_exp+2
  4987  0014D2  D006               	goto	l1206
  4988  0014D4                     l1210:
  4989                           
  4990                           ; BSR set to: 0
  4991  0014D4  C09C  F09C         	movff	exp@x,?_exp
  4992  0014D8  C09D  F09D         	movff	exp@x+1,?_exp+1
  4993  0014DC  C09E  F09E         	movff	exp@x+2,?_exp+2
  4994  0014E0                     l1206:
  4995  0014E0  0012               	return		;funcret
  4996  0014E2                     __end_of_exp:
  4997                           	opt stack 0
  4998                           prodh	equ	0xFF4
  4999                           prodl	equ	0xFF3
  5000                           intcon	equ	0xFF2
  5001                           intcon2	equ	0xFF1
  5002                           postinc0	equ	0xFEE
  5003                           wreg	equ	0xFE8
  5004                           indf2	equ	0xFDF
  5005                           postinc2	equ	0xFDE
  5006                           postdec2	equ	0xFDD
  5007                           fsr2h	equ	0xFDA
  5008                           fsr2l	equ	0xFD9
  5009                           status	equ	0xFD8
  5010                           
  5011 ;; *************** function _ldexp *****************
  5012 ;; Defined at:
  5013 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  value           3   51[BANK0 ] unsigned char 
  5016 ;;  newexp          2   54[BANK0 ] int 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  3   51[BANK0 ] int 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5028 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;Total ram usage:        7 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    6
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_exp
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text43
  5043  001E7E                     __ptext43:
  5044                           	opt stack 0
  5045  001E7E                     _ldexp:
  5046                           	opt stack 20
  5047                           
  5048                           ;incstack = 0
  5049  001E7E  0100               	movlb	0	; () banked
  5050  001E80  5193               	movf	ldexp@value& (0+255),w,b
  5051  001E82  0100               	movlb	0	; () banked
  5052  001E84  1194               	iorwf	(ldexp@value+1)& (0+255),w,b
  5053  001E86  0100               	movlb	0	; () banked
  5054  001E88  1195               	iorwf	(ldexp@value+2)& (0+255),w,b
  5055  001E8A  A4D8               	btfss	status,2,c
  5056  001E8C  D002               	goto	l2846
  5057  001E8E  D02A               	goto	L7
  5058                           
  5059                           ; BSR set to: 0
  5060                           
  5061                           ; BSR set to: 0
  5062  001E90  D080               	goto	l1230
  5063  001E92                     l2846:
  5064                           
  5065                           ; BSR set to: 0
  5066  001E92  0100               	movlb	0	; () banked
  5067  001E94  5195               	movf	(ldexp@value+2)& (0+255),w,b
  5068  001E96  0B7F               	andlw	127
  5069  001E98  0100               	movlb	0	; () banked
  5070  001E9A  6F98               	movwf	??_ldexp& (0+255),b
  5071  001E9C  6B99               	clrf	(??_ldexp+1)& (0+255),b
  5072  001E9E  90D8               	bcf	status,0,c
  5073  001EA0  0100               	movlb	0	; () banked
  5074  001EA2  3798               	rlcf	??_ldexp& (0+255),f,b
  5075  001EA4  3799               	rlcf	(??_ldexp+1)& (0+255),f,b
  5076  001EA6  0100               	movlb	0	; () banked
  5077  001EA8  5198               	movf	??_ldexp& (0+255),w,b
  5078  001EAA  0100               	movlb	0	; () banked
  5079  001EAC  2796               	addwf	ldexp@newexp& (0+255),f,b
  5080  001EAE  0100               	movlb	0	; () banked
  5081  001EB0  5199               	movf	(??_ldexp+1)& (0+255),w,b
  5082  001EB2  0100               	movlb	0	; () banked
  5083  001EB4  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5084  001EB6  0100               	movlb	0	; () banked
  5085  001EB8  AF94               	btfss	(ldexp@value+1)& (0+255),7,b
  5086  001EBA  D004               	goto	u2080
  5087  001EBC  0100               	movlb	0	; () banked
  5088  001EBE  6B98               	clrf	??_ldexp& (0+255),b
  5089  001EC0  2B98               	incf	??_ldexp& (0+255),f,b
  5090  001EC2  D002               	goto	u2088
  5091  001EC4                     u2080:
  5092  001EC4  0100               	movlb	0	; () banked
  5093  001EC6  6B98               	clrf	??_ldexp& (0+255),b
  5094  001EC8                     u2088:
  5095  001EC8  0100               	movlb	0	; () banked
  5096  001ECA  5198               	movf	??_ldexp& (0+255),w,b
  5097  001ECC  0100               	movlb	0	; () banked
  5098  001ECE  2796               	addwf	ldexp@newexp& (0+255),f,b
  5099  001ED0  0E00               	movlw	0
  5100  001ED2  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5101  001ED4  0100               	movlb	0	; () banked
  5102  001ED6  AF97               	btfss	(ldexp@newexp+1)& (0+255),7,b
  5103  001ED8  D00F               	goto	l2854
  5104                           
  5105                           ; BSR set to: 0
  5106  001EDA  0E00               	movlw	0
  5107  001EDC  0100               	movlb	0	; () banked
  5108  001EDE  6FD6               	movwf	(_errno+1)& (0+255),b
  5109  001EE0  0E22               	movlw	34
  5110  001EE2  6FD5               	movwf	_errno& (0+255),b
  5111  001EE4                     L7:
  5112  001EE4  0E00               	movlw	0
  5113  001EE6  0100               	movlb	0	; () banked
  5114  001EE8  6F93               	movwf	?_ldexp& (0+255),b
  5115  001EEA  0E00               	movlw	0
  5116  001EEC  0100               	movlb	0	; () banked
  5117  001EEE  6F94               	movwf	(?_ldexp+1)& (0+255),b
  5118  001EF0  0E00               	movlw	0
  5119  001EF2  D022               	goto	L9
  5120                           
  5121                           ; BSR set to: 0
  5122  001EF4  D04E               	goto	l1230
  5123                           
  5124                           ; BSR set to: 0
  5125  001EF6  D046               	goto	l2872
  5126  001EF8                     l2854:
  5127                           
  5128                           ; BSR set to: 0
  5129  001EF8  0100               	movlb	0	; () banked
  5130  001EFA  BF97               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  5131  001EFC  D021               	goto	l2870
  5132  001EFE  0100               	movlb	0	; () banked
  5133  001F00  0597               	decf	(ldexp@newexp+1)& (0+255),w,b
  5134  001F02  A0D8               	btfss	status,0,c
  5135  001F04  D01D               	goto	l2870
  5136                           
  5137                           ; BSR set to: 0
  5138  001F06  0E00               	movlw	0
  5139  001F08  0100               	movlb	0	; () banked
  5140  001F0A  6FD6               	movwf	(_errno+1)& (0+255),b
  5141  001F0C  0E22               	movlw	34
  5142  001F0E  6FD5               	movwf	_errno& (0+255),b
  5143                           
  5144                           ; BSR set to: 0
  5145  001F10  0100               	movlb	0	; () banked
  5146  001F12  AF95               	btfss	(ldexp@value+2)& (0+255),7,b
  5147  001F14  D00A               	goto	l2866
  5148                           
  5149                           ; BSR set to: 0
  5150  001F16  0EFF               	movlw	255
  5151  001F18  0100               	movlb	0	; () banked
  5152  001F1A  6F93               	movwf	?_ldexp& (0+255),b
  5153  001F1C  0E7F               	movlw	127
  5154  001F1E  0100               	movlb	0	; () banked
  5155  001F20  6F94               	movwf	(?_ldexp+1)& (0+255),b
  5156  001F22  0EFF               	movlw	255
  5157  001F24  D009               	goto	L9
  5158                           
  5159                           ; BSR set to: 0
  5160  001F26  D035               	goto	l1230
  5161                           
  5162                           ; BSR set to: 0
  5163  001F28  D02D               	goto	l2872
  5164  001F2A                     l2866:
  5165                           
  5166                           ; BSR set to: 0
  5167  001F2A  0EFF               	movlw	255
  5168  001F2C  0100               	movlb	0	; () banked
  5169  001F2E  6F93               	movwf	?_ldexp& (0+255),b
  5170  001F30  0E7F               	movlw	127
  5171  001F32  0100               	movlb	0	; () banked
  5172  001F34  6F94               	movwf	(?_ldexp+1)& (0+255),b
  5173  001F36  0E7F               	movlw	127
  5174  001F38                     L9:
  5175  001F38  0100               	movlb	0	; () banked
  5176  001F3A  6F95               	movwf	(?_ldexp+2)& (0+255),b
  5177                           
  5178                           ; BSR set to: 0
  5179  001F3C  D02A               	goto	l1230
  5180                           
  5181                           ; BSR set to: 0
  5182  001F3E  D022               	goto	l2872
  5183  001F40                     l2870:
  5184                           
  5185                           ; BSR set to: 0
  5186  001F40  0100               	movlb	0	; () banked
  5187  001F42  3597               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  5188  001F44  3197               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  5189  001F46  0100               	movlb	0	; () banked
  5190  001F48  6F99               	movwf	(??_ldexp+1)& (0+255),b
  5191  001F4A  0100               	movlb	0	; () banked
  5192  001F4C  3196               	rrcf	ldexp@newexp& (0+255),w,b
  5193  001F4E  0100               	movlb	0	; () banked
  5194  001F50  6F98               	movwf	??_ldexp& (0+255),b
  5195  001F52  0100               	movlb	0	; () banked
  5196  001F54  5195               	movf	(ldexp@value+2)& (0+255),w,b
  5197  001F56  0100               	movlb	0	; () banked
  5198  001F58  1998               	xorwf	??_ldexp& (0+255),w,b
  5199  001F5A  0B80               	andlw	-128
  5200  001F5C  1998               	xorwf	??_ldexp& (0+255),w,b
  5201  001F5E  0100               	movlb	0	; () banked
  5202  001F60  6F95               	movwf	(ldexp@value+2)& (0+255),b
  5203  001F62  C096  F098         	movff	ldexp@newexp,??_ldexp
  5204  001F66  0E01               	movlw	1
  5205  001F68  0100               	movlb	0	; () banked
  5206  001F6A  1798               	andwf	??_ldexp& (0+255),f,b
  5207  001F6C  0100               	movlb	0	; () banked
  5208  001F6E  3398               	rrcf	??_ldexp& (0+255),f,b
  5209  001F70  3398               	rrcf	??_ldexp& (0+255),f,b
  5210  001F72  0100               	movlb	0	; () banked
  5211  001F74  5194               	movf	(ldexp@value+1)& (0+255),w,b
  5212  001F76  0100               	movlb	0	; () banked
  5213  001F78  1998               	xorwf	??_ldexp& (0+255),w,b
  5214  001F7A  0B7F               	andlw	-129
  5215  001F7C  1998               	xorwf	??_ldexp& (0+255),w,b
  5216  001F7E  0100               	movlb	0	; () banked
  5217  001F80  6F94               	movwf	(ldexp@value+1)& (0+255),b
  5218                           
  5219                           ; BSR set to: 0
  5220  001F82  D000               	goto	l2872
  5221  001F84                     l2872:
  5222                           
  5223                           ; BSR set to: 0
  5224  001F84  C093  F093         	movff	ldexp@value,?_ldexp
  5225  001F88  C094  F094         	movff	ldexp@value+1,?_ldexp+1
  5226  001F8C  C095  F095         	movff	ldexp@value+2,?_ldexp+2
  5227  001F90  D000               	goto	l1230
  5228  001F92                     l1230:
  5229                           
  5230                           ; BSR set to: 0
  5231  001F92  0012               	return		;funcret
  5232  001F94                     __end_of_ldexp:
  5233                           	opt stack 0
  5234                           prodh	equ	0xFF4
  5235                           prodl	equ	0xFF3
  5236                           intcon	equ	0xFF2
  5237                           intcon2	equ	0xFF1
  5238                           postinc0	equ	0xFEE
  5239                           wreg	equ	0xFE8
  5240                           indf2	equ	0xFDF
  5241                           postinc2	equ	0xFDE
  5242                           postdec2	equ	0xFDD
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _floor *****************
  5248 ;; Defined at:
  5249 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  x               3   52[BANK0 ] int 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  i               3   55[BANK0 ] int 
  5254 ;;  expon           2   58[BANK0 ] int 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  3   52[BANK0 ] int 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        8 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    8
  5271 ;; This function calls:
  5272 ;;		___altoft
  5273 ;;		___ftadd
  5274 ;;		___ftge
  5275 ;;		___fttol
  5276 ;;		_frexp
  5277 ;; This function is called by:
  5278 ;;		_exp
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text44
  5283  001F94                     __ptext44:
  5284                           	opt stack 0
  5285  001F94                     _floor:
  5286                           	opt stack 18
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;incstack = 0
  5290  001F94  C094  F060         	movff	floor@x,frexp@value
  5291  001F98  C095  F061         	movff	floor@x+1,frexp@value+1
  5292  001F9C  C096  F062         	movff	floor@x+2,frexp@value+2
  5293  001FA0  0E9A               	movlw	low floor@expon
  5294  001FA2  0100               	movlb	0	; () banked
  5295  001FA4  6F63               	movwf	frexp@eptr& (0+255),b
  5296  001FA6  0E00               	movlw	high floor@expon
  5297  001FA8  0100               	movlb	0	; () banked
  5298  001FAA  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  5299  001FAC  ECE7  F012         	call	_frexp	;wreg free
  5300  001FB0  0100               	movlb	0	; () banked
  5301  001FB2  AF9B               	btfss	(floor@expon+1)& (0+255),7,b
  5302  001FB4  D016               	goto	l3884
  5303                           
  5304                           ; BSR set to: 0
  5305  001FB6  0100               	movlb	0	; () banked
  5306  001FB8  AF96               	btfss	(floor@x+2)& (0+255),7,b
  5307  001FBA  D009               	goto	l3880
  5308                           
  5309                           ; BSR set to: 0
  5310  001FBC  0E00               	movlw	0
  5311  001FBE  0100               	movlb	0	; () banked
  5312  001FC0  6F94               	movwf	?_floor& (0+255),b
  5313  001FC2  0E80               	movlw	128
  5314  001FC4  0100               	movlb	0	; () banked
  5315  001FC6  6F95               	movwf	(?_floor+1)& (0+255),b
  5316  001FC8  0EBF               	movlw	191
  5317  001FCA  D008               	goto	L10
  5318                           
  5319                           ; BSR set to: 0
  5320  001FCC  D060               	goto	l1218
  5321  001FCE                     l3880:
  5322                           
  5323                           ; BSR set to: 0
  5324  001FCE  0E00               	movlw	0
  5325  001FD0  0100               	movlb	0	; () banked
  5326  001FD2  6F94               	movwf	?_floor& (0+255),b
  5327  001FD4  0E00               	movlw	0
  5328  001FD6  0100               	movlb	0	; () banked
  5329  001FD8  6F95               	movwf	(?_floor+1)& (0+255),b
  5330  001FDA  0E00               	movlw	0
  5331  001FDC                     L10:
  5332  001FDC  0100               	movlb	0	; () banked
  5333  001FDE  6F96               	movwf	(?_floor+2)& (0+255),b
  5334                           
  5335                           ; BSR set to: 0
  5336  001FE0  D056               	goto	l1218
  5337  001FE2                     l3884:
  5338                           
  5339                           ; BSR set to: 0
  5340  001FE2  0100               	movlb	0	; () banked
  5341  001FE4  519B               	movf	(floor@expon+1)& (0+255),w,b
  5342  001FE6  E105               	bnz	u3330
  5343  001FE8  0E15               	movlw	21
  5344  001FEA  0100               	movlb	0	; () banked
  5345  001FEC  5D9A               	subwf	floor@expon& (0+255),w,b
  5346  001FEE  A0D8               	btfss	status,0,c
  5347  001FF0  D007               	goto	l3888
  5348  001FF2                     u3330:
  5349                           
  5350                           ; BSR set to: 0
  5351  001FF2  C094  F094         	movff	floor@x,?_floor
  5352  001FF6  C095  F095         	movff	floor@x+1,?_floor+1
  5353  001FFA  C096  F096         	movff	floor@x+2,?_floor+2
  5354  001FFE  D047               	goto	l1218
  5355  002000                     l3888:
  5356                           
  5357                           ; BSR set to: 0
  5358  002000  C094  F07B         	movff	floor@x,___fttol@f1
  5359  002004  C095  F07C         	movff	floor@x+1,___fttol@f1+1
  5360  002008  C096  F07D         	movff	floor@x+2,___fttol@f1+2
  5361  00200C  EC16  F00E         	call	___fttol	;wreg free
  5362  002010  C07B  F08A         	movff	?___fttol,___altoft@c
  5363  002014  C07C  F08B         	movff	?___fttol+1,___altoft@c+1
  5364  002018  C07D  F08C         	movff	?___fttol+2,___altoft@c+2
  5365  00201C  C07E  F08D         	movff	?___fttol+3,___altoft@c+3
  5366  002020  EC91  F013         	call	___altoft	;wreg free
  5367  002024  C08A  F097         	movff	?___altoft,floor@i
  5368  002028  C08B  F098         	movff	?___altoft+1,floor@i+1
  5369  00202C  C08C  F099         	movff	?___altoft+2,floor@i+2
  5370  002030  C094  F060         	movff	floor@x,___ftge@ff1
  5371  002034  C095  F061         	movff	floor@x+1,___ftge@ff1+1
  5372  002038  C096  F062         	movff	floor@x+2,___ftge@ff1+2
  5373  00203C  C097  F063         	movff	floor@i,___ftge@ff2
  5374  002040  C098  F064         	movff	floor@i+1,___ftge@ff2+1
  5375  002044  C099  F065         	movff	floor@i+2,___ftge@ff2+2
  5376  002048  EC26  F012         	call	___ftge	;wreg free
  5377  00204C  0100               	movlb	0	; () banked
  5378  00204E  B0D8               	btfsc	status,0,c
  5379  002050  D018               	goto	l1220
  5380                           
  5381                           ; BSR set to: 0
  5382  002052  C097  F07B         	movff	floor@i,___ftadd@f1
  5383  002056  C098  F07C         	movff	floor@i+1,___ftadd@f1+1
  5384  00205A  C099  F07D         	movff	floor@i+2,___ftadd@f1+2
  5385  00205E  0E00               	movlw	0
  5386  002060  0100               	movlb	0	; () banked
  5387  002062  6F7E               	movwf	___ftadd@f2& (0+255),b
  5388  002064  0E80               	movlw	128
  5389  002066  0100               	movlb	0	; () banked
  5390  002068  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
  5391  00206A  0EBF               	movlw	191
  5392  00206C  0100               	movlb	0	; () banked
  5393  00206E  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
  5394  002070  EC1E  F008         	call	___ftadd	;wreg free
  5395  002074  C07B  F094         	movff	?___ftadd,?_floor
  5396  002078  C07C  F095         	movff	?___ftadd+1,?_floor+1
  5397  00207C  C07D  F096         	movff	?___ftadd+2,?_floor+2
  5398  002080  D006               	goto	l1218
  5399  002082                     l1220:
  5400                           
  5401                           ; BSR set to: 0
  5402  002082  C097  F094         	movff	floor@i,?_floor
  5403  002086  C098  F095         	movff	floor@i+1,?_floor+1
  5404  00208A  C099  F096         	movff	floor@i+2,?_floor+2
  5405  00208E                     l1218:
  5406  00208E  0012               	return		;funcret
  5407  002090                     __end_of_floor:
  5408                           	opt stack 0
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           intcon	equ	0xFF2
  5412                           intcon2	equ	0xFF1
  5413                           postinc0	equ	0xFEE
  5414                           wreg	equ	0xFE8
  5415                           indf2	equ	0xFDF
  5416                           postinc2	equ	0xFDE
  5417                           postdec2	equ	0xFDD
  5418                           fsr2h	equ	0xFDA
  5419                           fsr2l	equ	0xFD9
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _frexp *****************
  5423 ;; Defined at:
  5424 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  value           3    0[BANK0 ] int 
  5427 ;;  eptr            2    3[BANK0 ] PTR int 
  5428 ;;		 -> log@exponent(2), floor@expon(2), 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  3    0[BANK0 ] PTR int 
  5433 ;; Registers used:
  5434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5440 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;Total ram usage:        7 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    6
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_floor
  5451 ;;		_log
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text45
  5456  0025CE                     __ptext45:
  5457                           	opt stack 0
  5458  0025CE                     _frexp:
  5459                           	opt stack 20
  5460                           
  5461                           ;incstack = 0
  5462  0025CE  0100               	movlb	0	; () banked
  5463  0025D0  5160               	movf	frexp@value& (0+255),w,b
  5464  0025D2  0100               	movlb	0	; () banked
  5465  0025D4  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  5466  0025D6  0100               	movlb	0	; () banked
  5467  0025D8  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  5468  0025DA  A4D8               	btfss	status,2,c
  5469  0025DC  D012               	goto	l3788
  5470                           
  5471                           ; BSR set to: 0
  5472  0025DE  C063  FFD9         	movff	frexp@eptr,fsr2l
  5473  0025E2  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  5474  0025E6  0E00               	movlw	0
  5475  0025E8  6EDE               	movwf	postinc2,c
  5476  0025EA  0E00               	movlw	0
  5477  0025EC  6EDD               	movwf	postdec2,c
  5478                           
  5479                           ; BSR set to: 0
  5480  0025EE  0E00               	movlw	0
  5481  0025F0  0100               	movlb	0	; () banked
  5482  0025F2  6F60               	movwf	?_frexp& (0+255),b
  5483  0025F4  0E00               	movlw	0
  5484  0025F6  0100               	movlb	0	; () banked
  5485  0025F8  6F61               	movwf	(?_frexp+1)& (0+255),b
  5486  0025FA  0E00               	movlw	0
  5487  0025FC  0100               	movlb	0	; () banked
  5488  0025FE  6F62               	movwf	(?_frexp+2)& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491  002600  D03C               	goto	l1226
  5492  002602                     l3788:
  5493                           
  5494                           ; BSR set to: 0
  5495  002602  0100               	movlb	0	; () banked
  5496  002604  5162               	movf	(frexp@value+2)& (0+255),w,b
  5497  002606  0B7F               	andlw	127
  5498  002608  0100               	movlb	0	; () banked
  5499  00260A  6F65               	movwf	??_frexp& (0+255),b
  5500  00260C  6B66               	clrf	(??_frexp+1)& (0+255),b
  5501  00260E  90D8               	bcf	status,0,c
  5502  002610  0100               	movlb	0	; () banked
  5503  002612  3765               	rlcf	??_frexp& (0+255),f,b
  5504  002614  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  5505  002616  C063  FFD9         	movff	frexp@eptr,fsr2l
  5506  00261A  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  5507  00261E  C065  FFDE         	movff	??_frexp,postinc2
  5508  002622  C066  FFDD         	movff	??_frexp+1,postdec2
  5509  002626  0100               	movlb	0	; () banked
  5510  002628  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  5511  00262A  D004               	goto	u3220
  5512  00262C  0100               	movlb	0	; () banked
  5513  00262E  6B65               	clrf	??_frexp& (0+255),b
  5514  002630  2B65               	incf	??_frexp& (0+255),f,b
  5515  002632  D002               	goto	u3228
  5516  002634                     u3220:
  5517  002634  0100               	movlb	0	; () banked
  5518  002636  6B65               	clrf	??_frexp& (0+255),b
  5519  002638                     u3228:
  5520  002638  0100               	movlb	0	; () banked
  5521  00263A  5165               	movf	??_frexp& (0+255),w,b
  5522  00263C  C063  FFD9         	movff	frexp@eptr,fsr2l
  5523  002640  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  5524  002644  12DE               	iorwf	postinc2,f,c
  5525  002646  0E00               	movlw	0
  5526  002648  12DD               	iorwf	postdec2,f,c
  5527                           
  5528                           ; BSR set to: 0
  5529  00264A  C063  FFD9         	movff	frexp@eptr,fsr2l
  5530  00264E  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  5531  002652  0E82               	movlw	130
  5532  002654  26DE               	addwf	postinc2,f,c
  5533  002656  0EFF               	movlw	255
  5534  002658  22DD               	addwfc	postdec2,f,c
  5535                           
  5536                           ; BSR set to: 0
  5537  00265A  8162               	bsf	(frexp@value+2)& (0+255),0,b
  5538  00265C  8362               	bsf	(frexp@value+2)& (0+255),1,b
  5539  00265E  8562               	bsf	(frexp@value+2)& (0+255),2,b
  5540  002660  8762               	bsf	(frexp@value+2)& (0+255),3,b
  5541  002662  8962               	bsf	(frexp@value+2)& (0+255),4,b
  5542  002664  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  5543  002666  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  5544                           
  5545                           ; BSR set to: 0
  5546  002668  0100               	movlb	0	; () banked
  5547  00266A  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  5548                           
  5549                           ; BSR set to: 0
  5550  00266C  C060  F060         	movff	frexp@value,?_frexp
  5551  002670  C061  F061         	movff	frexp@value+1,?_frexp+1
  5552  002674  C062  F062         	movff	frexp@value+2,?_frexp+2
  5553  002678  D000               	goto	l1226
  5554  00267A                     l1226:
  5555                           
  5556                           ; BSR set to: 0
  5557  00267A  0012               	return		;funcret
  5558  00267C                     __end_of_frexp:
  5559                           	opt stack 0
  5560                           prodh	equ	0xFF4
  5561                           prodl	equ	0xFF3
  5562                           intcon	equ	0xFF2
  5563                           intcon2	equ	0xFF1
  5564                           postinc0	equ	0xFEE
  5565                           wreg	equ	0xFE8
  5566                           indf2	equ	0xFDF
  5567                           postinc2	equ	0xFDE
  5568                           postdec2	equ	0xFDD
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function ___fttol *****************
  5574 ;; Defined at:
  5575 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  f1              3   27[BANK0 ] float 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  lval            4   37[BANK0 ] unsigned long 
  5580 ;;  exp1            1   41[BANK0 ] unsigned char 
  5581 ;;  sign1           1   36[BANK0 ] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  4   27[BANK0 ] long 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;Total ram usage:       15 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    6
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_CalculateSensorSums
  5602 ;;		_pow
  5603 ;;		_exp
  5604 ;;		_floor
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text46
  5609  001C2C                     __ptext46:
  5610                           	opt stack 0
  5611  001C2C                     ___fttol:
  5612                           	opt stack 19
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;incstack = 0
  5616  001C2C  C07D  F07F         	movff	___fttol@f1+2,??___fttol
  5617  001C30  0100               	movlb	0	; () banked
  5618  001C32  6B80               	clrf	(??___fttol+1)& (0+255),b
  5619  001C34  6B81               	clrf	(??___fttol+2)& (0+255),b
  5620  001C36  0100               	movlb	0	; () banked
  5621  001C38  357C               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5622  001C3A  0100               	movlb	0	; () banked
  5623  001C3C  377F               	rlcf	??___fttol& (0+255),f,b
  5624  001C3E  E301               	bnc	u1841
  5625  001C40  8180               	bsf	(??___fttol+1)& (0+255),0,b
  5626  001C42                     u1841:
  5627  001C42  0100               	movlb	0	; () banked
  5628  001C44  517F               	movf	??___fttol& (0+255),w,b
  5629  001C46  0100               	movlb	0	; () banked
  5630  001C48  6F89               	movwf	___fttol@exp1& (0+255),b
  5631  001C4A  0100               	movlb	0	; () banked
  5632  001C4C  5189               	movf	___fttol@exp1& (0+255),w,b
  5633  001C4E  A4D8               	btfss	status,2,c
  5634  001C50  D002               	goto	l2680
  5635  001C52  D051               	goto	l2704
  5636                           
  5637                           ; BSR set to: 0
  5638                           
  5639                           ; BSR set to: 0
  5640  001C54  D083               	goto	l1046
  5641  001C56                     l2680:
  5642                           
  5643                           ; BSR set to: 0
  5644  001C56  0E17               	movlw	23
  5645  001C58  0100               	movlb	0	; () banked
  5646  001C5A  6F7F               	movwf	??___fttol& (0+255),b
  5647  001C5C  C07B  F080         	movff	___fttol@f1,??___fttol+1
  5648  001C60  C07C  F081         	movff	___fttol@f1+1,??___fttol+2
  5649  001C64  C07D  F082         	movff	___fttol@f1+2,??___fttol+3
  5650  001C68  0100               	movlb	0	; () banked
  5651  001C6A  297F               	incf	??___fttol& (0+255),w,b
  5652  001C6C  0100               	movlb	0	; () banked
  5653  001C6E  6F83               	movwf	(??___fttol+4)& (0+255),b
  5654  001C70  D005               	goto	u1860
  5655  001C72                     u1865:
  5656  001C72  0100               	movlb	0	; () banked
  5657  001C74  90D8               	bcf	status,0,c
  5658  001C76  3382               	rrcf	(??___fttol+3)& (0+255),f,b
  5659  001C78  3381               	rrcf	(??___fttol+2)& (0+255),f,b
  5660  001C7A  3380               	rrcf	(??___fttol+1)& (0+255),f,b
  5661  001C7C                     u1860:
  5662  001C7C  0100               	movlb	0	; () banked
  5663  001C7E  2F83               	decfsz	(??___fttol+4)& (0+255),f,b
  5664  001C80  D7F8               	goto	u1865
  5665  001C82  0100               	movlb	0	; () banked
  5666  001C84  5180               	movf	(??___fttol+1)& (0+255),w,b
  5667  001C86  0100               	movlb	0	; () banked
  5668  001C88  6F84               	movwf	___fttol@sign1& (0+255),b
  5669                           
  5670                           ; BSR set to: 0
  5671  001C8A  0100               	movlb	0	; () banked
  5672  001C8C  8F7C               	bsf	(___fttol@f1+1)& (0+255),7,b
  5673                           
  5674                           ; BSR set to: 0
  5675  001C8E  0EFF               	movlw	255
  5676  001C90  0100               	movlb	0	; () banked
  5677  001C92  177B               	andwf	___fttol@f1& (0+255),f,b
  5678  001C94  0EFF               	movlw	255
  5679  001C96  0100               	movlb	0	; () banked
  5680  001C98  177C               	andwf	(___fttol@f1+1)& (0+255),f,b
  5681  001C9A  0E00               	movlw	0
  5682  001C9C  0100               	movlb	0	; () banked
  5683  001C9E  177D               	andwf	(___fttol@f1+2)& (0+255),f,b
  5684                           
  5685                           ; BSR set to: 0
  5686  001CA0  0100               	movlb	0	; () banked
  5687  001CA2  517B               	movf	___fttol@f1& (0+255),w,b
  5688  001CA4  0100               	movlb	0	; () banked
  5689  001CA6  6F85               	movwf	___fttol@lval& (0+255),b
  5690  001CA8  0100               	movlb	0	; () banked
  5691  001CAA  517C               	movf	(___fttol@f1+1)& (0+255),w,b
  5692  001CAC  0100               	movlb	0	; () banked
  5693  001CAE  6F86               	movwf	(___fttol@lval+1)& (0+255),b
  5694  001CB0  0100               	movlb	0	; () banked
  5695  001CB2  517D               	movf	(___fttol@f1+2)& (0+255),w,b
  5696  001CB4  0100               	movlb	0	; () banked
  5697  001CB6  6F87               	movwf	(___fttol@lval+2)& (0+255),b
  5698  001CB8  0100               	movlb	0	; () banked
  5699  001CBA  6B88               	clrf	(___fttol@lval+3)& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702  001CBC  0E8E               	movlw	142
  5703  001CBE  0100               	movlb	0	; () banked
  5704  001CC0  5F89               	subwf	___fttol@exp1& (0+255),f,b
  5705                           
  5706                           ; BSR set to: 0
  5707  001CC2  0100               	movlb	0	; () banked
  5708  001CC4  AF89               	btfss	___fttol@exp1& (0+255),7,b
  5709  001CC6  D013               	goto	l2702
  5710                           
  5711                           ; BSR set to: 0
  5712  001CC8  0100               	movlb	0	; () banked
  5713  001CCA  5189               	movf	___fttol@exp1& (0+255),w,b
  5714  001CCC  0A80               	xorlw	128
  5715  001CCE  0F8F               	addlw	143
  5716  001CD0  B0D8               	btfsc	status,0,c
  5717  001CD2  D003               	goto	l2698
  5718  001CD4  D010               	goto	l2704
  5719                           
  5720                           ; BSR set to: 0
  5721                           
  5722                           ; BSR set to: 0
  5723  001CD6  D042               	goto	l1046
  5724                           
  5725                           ; BSR set to: 0
  5726  001CD8  D000               	goto	l2698
  5727  001CDA                     l2698:
  5728                           
  5729                           ; BSR set to: 0
  5730  001CDA  0100               	movlb	0	; () banked
  5731  001CDC  90D8               	bcf	status,0,c
  5732  001CDE  3388               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5733  001CE0  3387               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5734  001CE2  3386               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5735  001CE4  3385               	rrcf	___fttol@lval& (0+255),f,b
  5736                           
  5737                           ; BSR set to: 0
  5738  001CE6  0100               	movlb	0	; () banked
  5739  001CE8  3F89               	incfsz	___fttol@exp1& (0+255),f,b
  5740  001CEA  D7F7               	goto	l2698
  5741                           
  5742                           ; BSR set to: 0
  5743  001CEC  D01F               	goto	l2712
  5744  001CEE                     l2702:
  5745                           
  5746                           ; BSR set to: 0
  5747  001CEE  0E17               	movlw	23
  5748  001CF0  0100               	movlb	0	; () banked
  5749  001CF2  6589               	cpfsgt	___fttol@exp1& (0+255),b
  5750  001CF4  D014               	goto	l2710
  5751  001CF6                     l2704:
  5752                           
  5753                           ; BSR set to: 0
  5754  001CF6  0E00               	movlw	0
  5755  001CF8  0100               	movlb	0	; () banked
  5756  001CFA  6F7B               	movwf	?___fttol& (0+255),b
  5757  001CFC  0E00               	movlw	0
  5758  001CFE  6F7C               	movwf	(?___fttol+1)& (0+255),b
  5759  001D00  0E00               	movlw	0
  5760  001D02  6F7D               	movwf	(?___fttol+2)& (0+255),b
  5761  001D04  0E00               	movlw	0
  5762  001D06  6F7E               	movwf	(?___fttol+3)& (0+255),b
  5763                           
  5764                           ; BSR set to: 0
  5765  001D08  D029               	goto	l1046
  5766                           
  5767                           ; BSR set to: 0
  5768  001D0A  D009               	goto	l2710
  5769  001D0C                     l2708:
  5770                           
  5771                           ; BSR set to: 0
  5772  001D0C  0100               	movlb	0	; () banked
  5773  001D0E  90D8               	bcf	status,0,c
  5774  001D10  3785               	rlcf	___fttol@lval& (0+255),f,b
  5775  001D12  3786               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5776  001D14  3787               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5777  001D16  3788               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5778  001D18  0100               	movlb	0	; () banked
  5779  001D1A  0789               	decf	___fttol@exp1& (0+255),f,b
  5780  001D1C  D000               	goto	l2710
  5781  001D1E                     l2710:
  5782                           
  5783                           ; BSR set to: 0
  5784  001D1E  0100               	movlb	0	; () banked
  5785  001D20  5189               	movf	___fttol@exp1& (0+255),w,b
  5786  001D22  0100               	movlb	0	; () banked
  5787  001D24  B4D8               	btfsc	status,2,c
  5788  001D26  D002               	goto	l2712
  5789  001D28  D7F1               	goto	l2708
  5790                           
  5791                           ; BSR set to: 0
  5792  001D2A  D000               	goto	l2712
  5793  001D2C                     l2712:
  5794                           
  5795                           ; BSR set to: 0
  5796  001D2C  0100               	movlb	0	; () banked
  5797  001D2E  5184               	movf	___fttol@sign1& (0+255),w,b
  5798  001D30  0100               	movlb	0	; () banked
  5799  001D32  B4D8               	btfsc	status,2,c
  5800  001D34  D00A               	goto	l2716
  5801                           
  5802                           ; BSR set to: 0
  5803  001D36  0100               	movlb	0	; () banked
  5804  001D38  1F88               	comf	(___fttol@lval+3)& (0+255),f,b
  5805  001D3A  1F87               	comf	(___fttol@lval+2)& (0+255),f,b
  5806  001D3C  1F86               	comf	(___fttol@lval+1)& (0+255),f,b
  5807  001D3E  6D85               	negf	___fttol@lval& (0+255),b
  5808  001D40  0E00               	movlw	0
  5809  001D42  2386               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5810  001D44  2387               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5811  001D46  2388               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5812  001D48  D000               	goto	l2716
  5813  001D4A                     l2716:
  5814                           
  5815                           ; BSR set to: 0
  5816  001D4A  C085  F07B         	movff	___fttol@lval,?___fttol
  5817  001D4E  C086  F07C         	movff	___fttol@lval+1,?___fttol+1
  5818  001D52  C087  F07D         	movff	___fttol@lval+2,?___fttol+2
  5819  001D56  C088  F07E         	movff	___fttol@lval+3,?___fttol+3
  5820  001D5A  D000               	goto	l1046
  5821  001D5C                     l1046:
  5822                           
  5823                           ; BSR set to: 0
  5824  001D5C  0012               	return		;funcret
  5825  001D5E                     __end_of___fttol:
  5826                           	opt stack 0
  5827                           prodh	equ	0xFF4
  5828                           prodl	equ	0xFF3
  5829                           intcon	equ	0xFF2
  5830                           intcon2	equ	0xFF1
  5831                           postinc0	equ	0xFEE
  5832                           wreg	equ	0xFE8
  5833                           indf2	equ	0xFDF
  5834                           postinc2	equ	0xFDE
  5835                           postdec2	equ	0xFDD
  5836                           fsr2h	equ	0xFDA
  5837                           fsr2l	equ	0xFD9
  5838                           status	equ	0xFD8
  5839                           
  5840 ;; *************** function ___ftge *****************
  5841 ;; Defined at:
  5842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  ff1             3    0[BANK0 ] float 
  5845 ;;  ff2             3    3[BANK0 ] float 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;		None
  5848 ;; Return value:  Size  Location     Type
  5849 ;;		None               void
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5857 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;Total ram usage:        9 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    6
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_pow
  5868 ;;		_exp
  5869 ;;		_floor
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text47
  5874  00244C                     __ptext47:
  5875                           	opt stack 0
  5876  00244C                     ___ftge:
  5877                           	opt stack 19
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;incstack = 0
  5881  00244C  0100               	movlb	0	; () banked
  5882  00244E  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5883  002450  D01E               	goto	l3766
  5884                           
  5885                           ; BSR set to: 0
  5886  002452  C060  F066         	movff	___ftge@ff1,??___ftge
  5887  002456  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  5888  00245A  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  5889  00245E  0100               	movlb	0	; () banked
  5890  002460  1F66               	comf	??___ftge& (0+255),f,b
  5891  002462  1F67               	comf	(??___ftge+1)& (0+255),f,b
  5892  002464  1F68               	comf	(??___ftge+2)& (0+255),f,b
  5893  002466  2B66               	incf	??___ftge& (0+255),f,b
  5894  002468  0E00               	movlw	0
  5895  00246A  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  5896  00246C  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  5897  00246E  0E00               	movlw	0
  5898  002470  0100               	movlb	0	; () banked
  5899  002472  2566               	addwf	??___ftge& (0+255),w,b
  5900  002474  0100               	movlb	0	; () banked
  5901  002476  6F60               	movwf	___ftge@ff1& (0+255),b
  5902  002478  0E00               	movlw	0
  5903  00247A  0100               	movlb	0	; () banked
  5904  00247C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  5905  00247E  0100               	movlb	0	; () banked
  5906  002480  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  5907  002482  0E80               	movlw	128
  5908  002484  0100               	movlb	0	; () banked
  5909  002486  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  5910  002488  0100               	movlb	0	; () banked
  5911  00248A  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  5912  00248C  D000               	goto	l3766
  5913  00248E                     l3766:
  5914                           
  5915                           ; BSR set to: 0
  5916  00248E  0100               	movlb	0	; () banked
  5917  002490  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5918  002492  D01E               	goto	l3770
  5919                           
  5920                           ; BSR set to: 0
  5921  002494  C063  F066         	movff	___ftge@ff2,??___ftge
  5922  002498  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  5923  00249C  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  5924  0024A0  0100               	movlb	0	; () banked
  5925  0024A2  1F66               	comf	??___ftge& (0+255),f,b
  5926  0024A4  1F67               	comf	(??___ftge+1)& (0+255),f,b
  5927  0024A6  1F68               	comf	(??___ftge+2)& (0+255),f,b
  5928  0024A8  2B66               	incf	??___ftge& (0+255),f,b
  5929  0024AA  0E00               	movlw	0
  5930  0024AC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  5931  0024AE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  5932  0024B0  0E00               	movlw	0
  5933  0024B2  0100               	movlb	0	; () banked
  5934  0024B4  2566               	addwf	??___ftge& (0+255),w,b
  5935  0024B6  0100               	movlb	0	; () banked
  5936  0024B8  6F63               	movwf	___ftge@ff2& (0+255),b
  5937  0024BA  0E00               	movlw	0
  5938  0024BC  0100               	movlb	0	; () banked
  5939  0024BE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  5940  0024C0  0100               	movlb	0	; () banked
  5941  0024C2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5942  0024C4  0E80               	movlw	128
  5943  0024C6  0100               	movlb	0	; () banked
  5944  0024C8  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  5945  0024CA  0100               	movlb	0	; () banked
  5946  0024CC  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5947  0024CE  D000               	goto	l3770
  5948  0024D0                     l3770:
  5949                           
  5950                           ; BSR set to: 0
  5951  0024D0  0E00               	movlw	0
  5952  0024D2  0100               	movlb	0	; () banked
  5953  0024D4  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  5954  0024D6  0E00               	movlw	0
  5955  0024D8  0100               	movlb	0	; () banked
  5956  0024DA  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5957  0024DC  0E80               	movlw	128
  5958  0024DE  0100               	movlb	0	; () banked
  5959  0024E0  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5960                           
  5961                           ; BSR set to: 0
  5962  0024E2  0E00               	movlw	0
  5963  0024E4  0100               	movlb	0	; () banked
  5964  0024E6  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  5965  0024E8  0E00               	movlw	0
  5966  0024EA  0100               	movlb	0	; () banked
  5967  0024EC  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5968  0024EE  0E80               	movlw	128
  5969  0024F0  0100               	movlb	0	; () banked
  5970  0024F2  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5971  0024F4  0100               	movlb	0	; () banked
  5972  0024F6  5163               	movf	___ftge@ff2& (0+255),w,b
  5973  0024F8  0100               	movlb	0	; () banked
  5974  0024FA  5D60               	subwf	___ftge@ff1& (0+255),w,b
  5975  0024FC  0100               	movlb	0	; () banked
  5976  0024FE  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  5977  002500  0100               	movlb	0	; () banked
  5978  002502  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5979  002504  0100               	movlb	0	; () banked
  5980  002506  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  5981  002508  0100               	movlb	0	; () banked
  5982  00250A  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5983  00250C  B0D8               	btfsc	status,0,c
  5984  00250E  D002               	goto	l3776
  5985                           
  5986                           ; BSR set to: 0
  5987  002510  90D8               	bcf	status,0,c
  5988  002512  D002               	goto	l1019
  5989  002514                     l3776:
  5990                           
  5991                           ; BSR set to: 0
  5992  002514  80D8               	bsf	status,0,c
  5993                           
  5994                           ; BSR set to: 0
  5995  002516  D000               	goto	l1019
  5996  002518                     l1019:
  5997                           
  5998                           ; BSR set to: 0
  5999  002518  0012               	return		;funcret
  6000  00251A                     __end_of___ftge:
  6001                           	opt stack 0
  6002                           prodh	equ	0xFF4
  6003                           prodl	equ	0xFF3
  6004                           intcon	equ	0xFF2
  6005                           intcon2	equ	0xFF1
  6006                           postinc0	equ	0xFEE
  6007                           wreg	equ	0xFE8
  6008                           indf2	equ	0xFDF
  6009                           postinc2	equ	0xFDE
  6010                           postdec2	equ	0xFDD
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function ___altoft *****************
  6016 ;; Defined at:
  6017 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  c               4   42[BANK0 ] long 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  sign            1   51[BANK0 ] unsigned char 
  6022 ;;  exp             1   50[BANK0 ] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  3   42[BANK0 ] float 
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;Total ram usage:       10 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    7
  6039 ;; This function calls:
  6040 ;;		___ftpack
  6041 ;; This function is called by:
  6042 ;;		_floor
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text48
  6047  002722                     __ptext48:
  6048                           	opt stack 0
  6049  002722                     ___altoft:
  6050                           	opt stack 18
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;incstack = 0
  6054  002722  0E00               	movlw	0
  6055  002724  0100               	movlb	0	; () banked
  6056  002726  6F93               	movwf	___altoft@sign& (0+255),b
  6057  002728  0E8E               	movlw	142
  6058  00272A  0100               	movlb	0	; () banked
  6059  00272C  6F92               	movwf	___altoft@exp& (0+255),b
  6060                           
  6061                           ; BSR set to: 0
  6062  00272E  0100               	movlb	0	; () banked
  6063  002730  AF8D               	btfss	(___altoft@c+3)& (0+255),7,b
  6064  002732  D016               	goto	l3638
  6065                           
  6066                           ; BSR set to: 0
  6067  002734  0100               	movlb	0	; () banked
  6068  002736  1F8D               	comf	(___altoft@c+3)& (0+255),f,b
  6069  002738  1F8C               	comf	(___altoft@c+2)& (0+255),f,b
  6070  00273A  1F8B               	comf	(___altoft@c+1)& (0+255),f,b
  6071  00273C  6D8A               	negf	___altoft@c& (0+255),b
  6072  00273E  0E00               	movlw	0
  6073  002740  238B               	addwfc	(___altoft@c+1)& (0+255),f,b
  6074  002742  238C               	addwfc	(___altoft@c+2)& (0+255),f,b
  6075  002744  238D               	addwfc	(___altoft@c+3)& (0+255),f,b
  6076                           
  6077                           ; BSR set to: 0
  6078  002746  0E01               	movlw	1
  6079  002748  0100               	movlb	0	; () banked
  6080  00274A  6F93               	movwf	___altoft@sign& (0+255),b
  6081                           
  6082                           ; BSR set to: 0
  6083  00274C  D009               	goto	l3638
  6084  00274E                     l3636:
  6085                           
  6086                           ; BSR set to: 0
  6087  00274E  0100               	movlb	0	; () banked
  6088  002750  90D8               	bcf	status,0,c
  6089  002752  338D               	rrcf	(___altoft@c+3)& (0+255),f,b
  6090  002754  338C               	rrcf	(___altoft@c+2)& (0+255),f,b
  6091  002756  338B               	rrcf	(___altoft@c+1)& (0+255),f,b
  6092  002758  338A               	rrcf	___altoft@c& (0+255),f,b
  6093  00275A  0100               	movlb	0	; () banked
  6094  00275C  2B92               	incf	___altoft@exp& (0+255),f,b
  6095  00275E  D000               	goto	l3638
  6096  002760                     l3638:
  6097                           
  6098                           ; BSR set to: 0
  6099  002760  0E00               	movlw	0
  6100  002762  0100               	movlb	0	; () banked
  6101  002764  158A               	andwf	___altoft@c& (0+255),w,b
  6102  002766  0100               	movlb	0	; () banked
  6103  002768  6F8E               	movwf	??___altoft& (0+255),b
  6104  00276A  0E00               	movlw	0
  6105  00276C  0100               	movlb	0	; () banked
  6106  00276E  158B               	andwf	(___altoft@c+1)& (0+255),w,b
  6107  002770  0100               	movlb	0	; () banked
  6108  002772  6F8F               	movwf	(??___altoft+1)& (0+255),b
  6109  002774  0E00               	movlw	0
  6110  002776  0100               	movlb	0	; () banked
  6111  002778  158C               	andwf	(___altoft@c+2)& (0+255),w,b
  6112  00277A  0100               	movlb	0	; () banked
  6113  00277C  6F90               	movwf	(??___altoft+2)& (0+255),b
  6114  00277E  0EFF               	movlw	255
  6115  002780  0100               	movlb	0	; () banked
  6116  002782  158D               	andwf	(___altoft@c+3)& (0+255),w,b
  6117  002784  0100               	movlb	0	; () banked
  6118  002786  6F91               	movwf	(??___altoft+3)& (0+255),b
  6119  002788  0100               	movlb	0	; () banked
  6120  00278A  518E               	movf	??___altoft& (0+255),w,b
  6121  00278C  0100               	movlb	0	; () banked
  6122  00278E  118F               	iorwf	(??___altoft+1)& (0+255),w,b
  6123  002790  0100               	movlb	0	; () banked
  6124  002792  1190               	iorwf	(??___altoft+2)& (0+255),w,b
  6125  002794  0100               	movlb	0	; () banked
  6126  002796  1191               	iorwf	(??___altoft+3)& (0+255),w,b
  6127  002798  A4D8               	btfss	status,2,c
  6128  00279A  D7D9               	goto	l3636
  6129                           
  6130                           ; BSR set to: 0
  6131                           
  6132                           ; BSR set to: 0
  6133  00279C  C08A  F060         	movff	___altoft@c,___ftpack@arg
  6134  0027A0  C08B  F061         	movff	___altoft@c+1,___ftpack@arg+1
  6135  0027A4  C08C  F062         	movff	___altoft@c+2,___ftpack@arg+2
  6136  0027A8  C092  F063         	movff	___altoft@exp,___ftpack@exp
  6137  0027AC  C093  F064         	movff	___altoft@sign,___ftpack@sign
  6138  0027B0  ECAF  F00E         	call	___ftpack	;wreg free
  6139  0027B4  C060  F08A         	movff	?___ftpack,?___altoft
  6140  0027B8  C061  F08B         	movff	?___ftpack+1,?___altoft+1
  6141  0027BC  C062  F08C         	movff	?___ftpack+2,?___altoft+2
  6142  0027C0  D000               	goto	l713
  6143  0027C2                     l713:
  6144  0027C2  0012               	return		;funcret
  6145  0027C4                     __end_of___altoft:
  6146                           	opt stack 0
  6147                           prodh	equ	0xFF4
  6148                           prodl	equ	0xFF3
  6149                           intcon	equ	0xFF2
  6150                           intcon2	equ	0xFF1
  6151                           postinc0	equ	0xFEE
  6152                           wreg	equ	0xFE8
  6153                           indf2	equ	0xFDF
  6154                           postinc2	equ	0xFDE
  6155                           postdec2	equ	0xFDD
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function _eval_poly *****************
  6161 ;; Defined at:
  6162 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  x               3   39[BANK0 ] float 
  6165 ;;  d               2   42[BANK0 ] PTR const 
  6166 ;;		 -> log@coeff(27), exp@coeff(30), 
  6167 ;;  n               2   44[BANK0 ] int 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  res             3   48[BANK0 ] int 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  3   39[BANK0 ] int 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6179 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;Total ram usage:       12 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    8
  6186 ;; This function calls:
  6187 ;;		___ftadd
  6188 ;;		___ftmul
  6189 ;;		___wmul
  6190 ;; This function is called by:
  6191 ;;		_exp
  6192 ;;		_log
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text49
  6197  002090                     __ptext49:
  6198                           	opt stack 0
  6199  002090                     _eval_poly:
  6200                           	opt stack 18
  6201                           
  6202                           ;incstack = 0
  6203  002090  C08C  F060         	movff	eval_poly@n,___wmul@multiplier
  6204  002094  C08D  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  6205  002098  0E00               	movlw	0
  6206  00209A  0100               	movlb	0	; () banked
  6207  00209C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6208  00209E  0E03               	movlw	3
  6209  0020A0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6210  0020A2  EC0A  F016         	call	___wmul	;wreg free
  6211  0020A6  C08A  F08E         	movff	eval_poly@d,??_eval_poly
  6212  0020AA  C08B  F08F         	movff	eval_poly@d+1,??_eval_poly+1
  6213  0020AE  0100               	movlb	0	; () banked
  6214  0020B0  5160               	movf	?___wmul& (0+255),w,b
  6215  0020B2  0100               	movlb	0	; () banked
  6216  0020B4  278E               	addwf	??_eval_poly& (0+255),f,b
  6217  0020B6  0100               	movlb	0	; () banked
  6218  0020B8  5161               	movf	(?___wmul+1)& (0+255),w,b
  6219  0020BA  0100               	movlb	0	; () banked
  6220  0020BC  238F               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6221  0020BE  C08E  FFF6         	movff	??_eval_poly,tblptrl
  6222  0020C2  C08F  FFF7         	movff	??_eval_poly+1,tblptrh
  6223  0020C6                     	if	0	;tblptru may be non-zero
  6224  0020C6                     	endif
  6225  0020C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6226  0020C6  0E00               	movlw	low (__mediumconst shr (0+16))
  6227  0020C8  6EF8               	movwf	tblptru,c
  6228  0020CA                     	endif
  6229  0020CA  0009               	tblrd		*+
  6230  0020CC  CFF5 F090          	movff	tablat,eval_poly@res
  6231  0020D0  0009               	tblrd		*+
  6232  0020D2  CFF5 F091          	movff	tablat,eval_poly@res+1
  6233  0020D6  000A               	tblrd		*-
  6234  0020D8  CFF5 F092          	movff	tablat,eval_poly@res+2
  6235  0020DC  D047               	goto	l3898
  6236  0020DE                     l3896:
  6237                           
  6238                           ; BSR set to: 0
  6239  0020DE  C090  F06F         	movff	eval_poly@res,___ftmul@f2
  6240  0020E2  C091  F070         	movff	eval_poly@res+1,___ftmul@f2+1
  6241  0020E6  C092  F071         	movff	eval_poly@res+2,___ftmul@f2+2
  6242  0020EA  C087  F06C         	movff	eval_poly@x,___ftmul@f1
  6243  0020EE  C088  F06D         	movff	eval_poly@x+1,___ftmul@f1+1
  6244  0020F2  C089  F06E         	movff	eval_poly@x+2,___ftmul@f1+2
  6245  0020F6  EC27  F00C         	call	___ftmul	;wreg free
  6246  0020FA  C06C  F07B         	movff	?___ftmul,___ftadd@f1
  6247  0020FE  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
  6248  002102  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
  6249  002106  0E00               	movlw	0
  6250  002108  0100               	movlb	0	; () banked
  6251  00210A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6252  00210C  0E03               	movlw	3
  6253  00210E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6254  002110  0100               	movlb	0	; () banked
  6255  002112  078C               	decf	eval_poly@n& (0+255),f,b
  6256  002114  A0D8               	btfss	status,0,c
  6257  002116  078D               	decf	(eval_poly@n+1)& (0+255),f,b
  6258  002118  C08C  F060         	movff	eval_poly@n,___wmul@multiplier
  6259  00211C  C08D  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  6260  002120  EC0A  F016         	call	___wmul	;wreg free
  6261  002124  C08A  F08E         	movff	eval_poly@d,??_eval_poly
  6262  002128  C08B  F08F         	movff	eval_poly@d+1,??_eval_poly+1
  6263  00212C  0100               	movlb	0	; () banked
  6264  00212E  5160               	movf	?___wmul& (0+255),w,b
  6265  002130  0100               	movlb	0	; () banked
  6266  002132  278E               	addwf	??_eval_poly& (0+255),f,b
  6267  002134  0100               	movlb	0	; () banked
  6268  002136  5161               	movf	(?___wmul+1)& (0+255),w,b
  6269  002138  0100               	movlb	0	; () banked
  6270  00213A  238F               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6271  00213C  C08E  FFF6         	movff	??_eval_poly,tblptrl
  6272  002140  C08F  FFF7         	movff	??_eval_poly+1,tblptrh
  6273  002144                     	if	0	;tblptru may be non-zero
  6274  002144                     	endif
  6275  002144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6276  002144  0E00               	movlw	low (__mediumconst shr (0+16))
  6277  002146  6EF8               	movwf	tblptru,c
  6278  002148                     	endif
  6279  002148  0009               	tblrd		*+
  6280  00214A  CFF5 F07E          	movff	tablat,___ftadd@f2
  6281  00214E  0009               	tblrd		*+
  6282  002150  CFF5 F07F          	movff	tablat,___ftadd@f2+1
  6283  002154  000A               	tblrd		*-
  6284  002156  CFF5 F080          	movff	tablat,___ftadd@f2+2
  6285  00215A  EC1E  F008         	call	___ftadd	;wreg free
  6286  00215E  C07B  F090         	movff	?___ftadd,eval_poly@res
  6287  002162  C07C  F091         	movff	?___ftadd+1,eval_poly@res+1
  6288  002166  C07D  F092         	movff	?___ftadd+2,eval_poly@res+2
  6289  00216A  D000               	goto	l3898
  6290  00216C                     l3898:
  6291  00216C  0100               	movlb	0	; () banked
  6292  00216E  518C               	movf	eval_poly@n& (0+255),w,b
  6293  002170  0100               	movlb	0	; () banked
  6294  002172  118D               	iorwf	(eval_poly@n+1)& (0+255),w,b
  6295  002174  A4D8               	btfss	status,2,c
  6296  002176  D7B3               	goto	l3896
  6297                           
  6298                           ; BSR set to: 0
  6299  002178  C090  F087         	movff	eval_poly@res,?_eval_poly
  6300  00217C  C091  F088         	movff	eval_poly@res+1,?_eval_poly+1
  6301  002180  C092  F089         	movff	eval_poly@res+2,?_eval_poly+2
  6302                           
  6303                           ; BSR set to: 0
  6304  002184  0012               	return		;funcret
  6305  002186                     __end_of_eval_poly:
  6306                           	opt stack 0
  6307                           tblptru	equ	0xFF8
  6308                           tblptrh	equ	0xFF7
  6309                           tblptrl	equ	0xFF6
  6310                           tablat	equ	0xFF5
  6311                           prodh	equ	0xFF4
  6312                           prodl	equ	0xFF3
  6313                           intcon	equ	0xFF2
  6314                           intcon2	equ	0xFF1
  6315                           postinc0	equ	0xFEE
  6316                           wreg	equ	0xFE8
  6317                           indf2	equ	0xFDF
  6318                           postinc2	equ	0xFDE
  6319                           postdec2	equ	0xFDD
  6320                           fsr2h	equ	0xFDA
  6321                           fsr2l	equ	0xFD9
  6322                           status	equ	0xFD8
  6323                           
  6324 ;; *************** function ___wmul *****************
  6325 ;; Defined at:
  6326 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6329 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  product         2    4[BANK0 ] unsigned int 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2    0[BANK0 ] unsigned int 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0, prodl, prodh
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6341 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;Total ram usage:        6 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    6
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_main
  6352 ;;		_eval_poly
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text50
  6357  002C14                     __ptext50:
  6358                           	opt stack 0
  6359  002C14                     ___wmul:
  6360                           	opt stack 24
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;incstack = 0
  6364  002C14  0100               	movlb	0	; () banked
  6365  002C16  5160               	movf	___wmul@multiplier& (0+255),w,b
  6366  002C18  0100               	movlb	0	; () banked
  6367  002C1A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6368  002C1C  CFF3 F064          	movff	prodl,___wmul@product
  6369  002C20  CFF4 F065          	movff	prodh,___wmul@product+1
  6370  002C24  0100               	movlb	0	; () banked
  6371  002C26  5160               	movf	___wmul@multiplier& (0+255),w,b
  6372  002C28  0100               	movlb	0	; () banked
  6373  002C2A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6374  002C2C  50F3               	movf	prodl,w,c
  6375  002C2E  0100               	movlb	0	; () banked
  6376  002C30  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6377  002C32  0100               	movlb	0	; () banked
  6378  002C34  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6379  002C36  0100               	movlb	0	; () banked
  6380  002C38  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6381  002C3A  50F3               	movf	prodl,w,c
  6382  002C3C  0100               	movlb	0	; () banked
  6383  002C3E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6384                           
  6385                           ; BSR set to: 0
  6386  002C40  C064  F060         	movff	___wmul@product,?___wmul
  6387  002C44  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6388  002C48  D000               	goto	l616
  6389  002C4A                     l616:
  6390                           
  6391                           ; BSR set to: 0
  6392  002C4A  0012               	return		;funcret
  6393  002C4C                     __end_of___wmul:
  6394                           	opt stack 0
  6395                           tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           prodh	equ	0xFF4
  6400                           prodl	equ	0xFF3
  6401                           intcon	equ	0xFF2
  6402                           intcon2	equ	0xFF1
  6403                           postinc0	equ	0xFEE
  6404                           wreg	equ	0xFE8
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function ___ftmul *****************
  6413 ;; Defined at:
  6414 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  f1              3   12[BANK0 ] float 
  6417 ;;  f2              3   15[BANK0 ] float 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  6420 ;;  sign            1   26[BANK0 ] unsigned char 
  6421 ;;  cntr            1   25[BANK0 ] unsigned char 
  6422 ;;  exp             1   21[BANK0 ] unsigned char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  3   12[BANK0 ] float 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6432 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;Total ram usage:       15 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    7
  6439 ;; This function calls:
  6440 ;;		___ftpack
  6441 ;; This function is called by:
  6442 ;;		_CalculateSensorSums
  6443 ;;		_pow
  6444 ;;		_exp
  6445 ;;		_log
  6446 ;;		_eval_poly
  6447 ;;		_ConvertDistanceCM
  6448 ;;		_ConvertDistanceIN
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text51
  6453  00184E                     __ptext51:
  6454                           	opt stack 0
  6455  00184E                     ___ftmul:
  6456                           	opt stack 18
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;incstack = 0
  6460  00184E  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
  6461  001852  0100               	movlb	0	; () banked
  6462  001854  6B73               	clrf	(??___ftmul+1)& (0+255),b
  6463  001856  6B74               	clrf	(??___ftmul+2)& (0+255),b
  6464  001858  0100               	movlb	0	; () banked
  6465  00185A  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6466  00185C  0100               	movlb	0	; () banked
  6467  00185E  3772               	rlcf	??___ftmul& (0+255),f,b
  6468  001860  E301               	bnc	u3121
  6469  001862  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  6470  001864                     u3121:
  6471  001864  0100               	movlb	0	; () banked
  6472  001866  5172               	movf	??___ftmul& (0+255),w,b
  6473  001868  0100               	movlb	0	; () banked
  6474  00186A  6F75               	movwf	___ftmul@exp& (0+255),b
  6475  00186C  0100               	movlb	0	; () banked
  6476  00186E  5175               	movf	___ftmul@exp& (0+255),w,b
  6477  001870  A4D8               	btfss	status,2,c
  6478  001872  D002               	goto	l3720
  6479  001874  D014               	goto	l3722
  6480                           
  6481                           ; BSR set to: 0
  6482                           
  6483                           ; BSR set to: 0
  6484  001876  D098               	goto	l1025
  6485  001878                     l3720:
  6486                           
  6487                           ; BSR set to: 0
  6488  001878  C071  F072         	movff	___ftmul@f2+2,??___ftmul
  6489  00187C  0100               	movlb	0	; () banked
  6490  00187E  6B73               	clrf	(??___ftmul+1)& (0+255),b
  6491  001880  6B74               	clrf	(??___ftmul+2)& (0+255),b
  6492  001882  0100               	movlb	0	; () banked
  6493  001884  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6494  001886  0100               	movlb	0	; () banked
  6495  001888  3772               	rlcf	??___ftmul& (0+255),f,b
  6496  00188A  E301               	bnc	u3141
  6497  00188C  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  6498  00188E                     u3141:
  6499  00188E  0100               	movlb	0	; () banked
  6500  001890  5172               	movf	??___ftmul& (0+255),w,b
  6501  001892  0100               	movlb	0	; () banked
  6502  001894  6F7A               	movwf	___ftmul@sign& (0+255),b
  6503  001896  0100               	movlb	0	; () banked
  6504  001898  517A               	movf	___ftmul@sign& (0+255),w,b
  6505  00189A  A4D8               	btfss	status,2,c
  6506  00189C  D00A               	goto	l3726
  6507  00189E                     l3722:
  6508                           
  6509                           ; BSR set to: 0
  6510  00189E  0E00               	movlw	0
  6511  0018A0  0100               	movlb	0	; () banked
  6512  0018A2  6F6C               	movwf	?___ftmul& (0+255),b
  6513  0018A4  0E00               	movlw	0
  6514  0018A6  0100               	movlb	0	; () banked
  6515  0018A8  6F6D               	movwf	(?___ftmul+1)& (0+255),b
  6516  0018AA  0E00               	movlw	0
  6517  0018AC  0100               	movlb	0	; () banked
  6518  0018AE  6F6E               	movwf	(?___ftmul+2)& (0+255),b
  6519                           
  6520                           ; BSR set to: 0
  6521  0018B0  D07B               	goto	l1025
  6522  0018B2                     l3726:
  6523                           
  6524                           ; BSR set to: 0
  6525  0018B2  0100               	movlb	0	; () banked
  6526  0018B4  517A               	movf	___ftmul@sign& (0+255),w,b
  6527  0018B6  0F7B               	addlw	123
  6528  0018B8  0100               	movlb	0	; () banked
  6529  0018BA  2775               	addwf	___ftmul@exp& (0+255),f,b
  6530                           
  6531                           ; BSR set to: 0
  6532  0018BC  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
  6533  0018C0  0100               	movlb	0	; () banked
  6534  0018C2  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  6535  0018C4  0100               	movlb	0	; () banked
  6536  0018C6  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
  6537  0018C8  0E80               	movlw	128
  6538  0018CA  0100               	movlb	0	; () banked
  6539  0018CC  177A               	andwf	___ftmul@sign& (0+255),f,b
  6540                           
  6541                           ; BSR set to: 0
  6542  0018CE  0100               	movlb	0	; () banked
  6543  0018D0  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6544                           
  6545                           ; BSR set to: 0
  6546  0018D2  0100               	movlb	0	; () banked
  6547  0018D4  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6548                           
  6549                           ; BSR set to: 0
  6550  0018D6  0EFF               	movlw	255
  6551  0018D8  0100               	movlb	0	; () banked
  6552  0018DA  176F               	andwf	___ftmul@f2& (0+255),f,b
  6553  0018DC  0EFF               	movlw	255
  6554  0018DE  0100               	movlb	0	; () banked
  6555  0018E0  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6556  0018E2  0E00               	movlw	0
  6557  0018E4  0100               	movlb	0	; () banked
  6558  0018E6  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6559                           
  6560                           ; BSR set to: 0
  6561  0018E8  0E00               	movlw	0
  6562  0018EA  0100               	movlb	0	; () banked
  6563  0018EC  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
  6564  0018EE  0E00               	movlw	0
  6565  0018F0  0100               	movlb	0	; () banked
  6566  0018F2  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6567  0018F4  0E00               	movlw	0
  6568  0018F6  0100               	movlb	0	; () banked
  6569  0018F8  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6570                           
  6571                           ; BSR set to: 0
  6572  0018FA  0E07               	movlw	7
  6573  0018FC  0100               	movlb	0	; () banked
  6574  0018FE  6F79               	movwf	___ftmul@cntr& (0+255),b
  6575  001900  D000               	goto	l3740
  6576  001902                     l3740:
  6577                           
  6578                           ; BSR set to: 0
  6579  001902  0100               	movlb	0	; () banked
  6580  001904  A16C               	btfss	___ftmul@f1& (0+255),0,b
  6581  001906  D00D               	goto	l3744
  6582                           
  6583                           ; BSR set to: 0
  6584  001908  0100               	movlb	0	; () banked
  6585  00190A  516F               	movf	___ftmul@f2& (0+255),w,b
  6586  00190C  0100               	movlb	0	; () banked
  6587  00190E  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6588  001910  0100               	movlb	0	; () banked
  6589  001912  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  6590  001914  0100               	movlb	0	; () banked
  6591  001916  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6592  001918  0100               	movlb	0	; () banked
  6593  00191A  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  6594  00191C  0100               	movlb	0	; () banked
  6595  00191E  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6596  001920  D000               	goto	l3744
  6597  001922                     l3744:
  6598                           
  6599                           ; BSR set to: 0
  6600  001922  0100               	movlb	0	; () banked
  6601  001924  90D8               	bcf	status,0,c
  6602  001926  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6603  001928  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6604  00192A  336C               	rrcf	___ftmul@f1& (0+255),f,b
  6605  00192C  0100               	movlb	0	; () banked
  6606  00192E  90D8               	bcf	status,0,c
  6607  001930  376F               	rlcf	___ftmul@f2& (0+255),f,b
  6608  001932  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6609  001934  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6610                           
  6611                           ; BSR set to: 0
  6612  001936  0100               	movlb	0	; () banked
  6613  001938  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  6614  00193A  D7E3               	goto	l3740
  6615  00193C  D000               	goto	l3748
  6616  00193E                     l3748:
  6617                           
  6618                           ; BSR set to: 0
  6619  00193E  0E09               	movlw	9
  6620  001940  0100               	movlb	0	; () banked
  6621  001942  6F79               	movwf	___ftmul@cntr& (0+255),b
  6622  001944  D000               	goto	l3750
  6623  001946                     l3750:
  6624                           
  6625                           ; BSR set to: 0
  6626  001946  0100               	movlb	0	; () banked
  6627  001948  A16C               	btfss	___ftmul@f1& (0+255),0,b
  6628  00194A  D00D               	goto	l3754
  6629                           
  6630                           ; BSR set to: 0
  6631  00194C  0100               	movlb	0	; () banked
  6632  00194E  516F               	movf	___ftmul@f2& (0+255),w,b
  6633  001950  0100               	movlb	0	; () banked
  6634  001952  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6635  001954  0100               	movlb	0	; () banked
  6636  001956  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  6637  001958  0100               	movlb	0	; () banked
  6638  00195A  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6639  00195C  0100               	movlb	0	; () banked
  6640  00195E  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  6641  001960  0100               	movlb	0	; () banked
  6642  001962  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6643  001964  D000               	goto	l3754
  6644  001966                     l3754:
  6645                           
  6646                           ; BSR set to: 0
  6647  001966  0100               	movlb	0	; () banked
  6648  001968  90D8               	bcf	status,0,c
  6649  00196A  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6650  00196C  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6651  00196E  336C               	rrcf	___ftmul@f1& (0+255),f,b
  6652  001970  0100               	movlb	0	; () banked
  6653  001972  90D8               	bcf	status,0,c
  6654  001974  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6655  001976  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6656  001978  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6657                           
  6658                           ; BSR set to: 0
  6659  00197A  0100               	movlb	0	; () banked
  6660  00197C  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  6661  00197E  D7E3               	goto	l3750
  6662  001980  D000               	goto	l3758
  6663  001982                     l3758:
  6664                           
  6665                           ; BSR set to: 0
  6666  001982  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  6667  001986  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6668  00198A  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6669  00198E  C075  F063         	movff	___ftmul@exp,___ftpack@exp
  6670  001992  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
  6671  001996  ECAF  F00E         	call	___ftpack	;wreg free
  6672  00199A  C060  F06C         	movff	?___ftpack,?___ftmul
  6673  00199E  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
  6674  0019A2  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
  6675  0019A6  D000               	goto	l1025
  6676  0019A8                     l1025:
  6677  0019A8  0012               	return		;funcret
  6678  0019AA                     __end_of___ftmul:
  6679                           	opt stack 0
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           intcon2	equ	0xFF1
  6688                           postinc0	equ	0xFEE
  6689                           wreg	equ	0xFE8
  6690                           indf2	equ	0xFDF
  6691                           postinc2	equ	0xFDE
  6692                           postdec2	equ	0xFDD
  6693                           fsr2h	equ	0xFDA
  6694                           fsr2l	equ	0xFD9
  6695                           status	equ	0xFD8
  6696                           
  6697 ;; *************** function ___ftsub *****************
  6698 ;; Defined at:
  6699 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  f1              3   39[BANK0 ] float 
  6702 ;;  f2              3   42[BANK0 ] float 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  3   39[BANK0 ] float 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6714 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;Total ram usage:        6 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    8
  6721 ;; This function calls:
  6722 ;;		___ftadd
  6723 ;; This function is called by:
  6724 ;;		_exp
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text52
  6729  002AF4                     __ptext52:
  6730                           	opt stack 0
  6731  002AF4                     ___ftsub:
  6732                           	opt stack 18
  6733                           
  6734                           ;incstack = 0
  6735  002AF4  0100               	movlb	0	; () banked
  6736  002AF6  518A               	movf	___ftsub@f2& (0+255),w,b
  6737  002AF8  0100               	movlb	0	; () banked
  6738  002AFA  118B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6739  002AFC  0100               	movlb	0	; () banked
  6740  002AFE  118C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6741  002B00  B4D8               	btfsc	status,2,c
  6742  002B02  D00A               	goto	l3850
  6743                           
  6744                           ; BSR set to: 0
  6745  002B04  0E00               	movlw	0
  6746  002B06  0100               	movlb	0	; () banked
  6747  002B08  1B8A               	xorwf	___ftsub@f2& (0+255),f,b
  6748  002B0A  0E00               	movlw	0
  6749  002B0C  0100               	movlb	0	; () banked
  6750  002B0E  1B8B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6751  002B10  0E80               	movlw	128
  6752  002B12  0100               	movlb	0	; () banked
  6753  002B14  1B8C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6754  002B16  D000               	goto	l3850
  6755  002B18                     l3850:
  6756                           
  6757                           ; BSR set to: 0
  6758  002B18  C087  F07B         	movff	___ftsub@f1,___ftadd@f1
  6759  002B1C  C088  F07C         	movff	___ftsub@f1+1,___ftadd@f1+1
  6760  002B20  C089  F07D         	movff	___ftsub@f1+2,___ftadd@f1+2
  6761  002B24  C08A  F07E         	movff	___ftsub@f2,___ftadd@f2
  6762  002B28  C08B  F07F         	movff	___ftsub@f2+1,___ftadd@f2+1
  6763  002B2C  C08C  F080         	movff	___ftsub@f2+2,___ftadd@f2+2
  6764  002B30  EC1E  F008         	call	___ftadd	;wreg free
  6765  002B34  C07B  F087         	movff	?___ftadd,?___ftsub
  6766  002B38  C07C  F088         	movff	?___ftadd+1,?___ftsub+1
  6767  002B3C  C07D  F089         	movff	?___ftadd+2,?___ftsub+2
  6768  002B40  D000               	goto	l1042
  6769  002B42                     l1042:
  6770  002B42  0012               	return		;funcret
  6771  002B44                     __end_of___ftsub:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           intcon2	equ	0xFF1
  6781                           postinc0	equ	0xFEE
  6782                           wreg	equ	0xFE8
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790 ;; *************** function ___ftadd *****************
  6791 ;; Defined at:
  6792 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  f1              3   27[BANK0 ] float 
  6795 ;;  f2              3   30[BANK0 ] float 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  exp1            1   38[BANK0 ] unsigned char 
  6798 ;;  exp2            1   37[BANK0 ] unsigned char 
  6799 ;;  sign            1   36[BANK0 ] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  3   27[BANK0 ] float 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2, status,0, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6809 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;Total ram usage:       12 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    7
  6816 ;; This function calls:
  6817 ;;		___ftpack
  6818 ;; This function is called by:
  6819 ;;		___ftsub
  6820 ;;		_floor
  6821 ;;		_log
  6822 ;;		_eval_poly
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text53
  6827  00103C                     __ptext53:
  6828                           	opt stack 0
  6829  00103C                     ___ftadd:
  6830                           	opt stack 18
  6831                           
  6832                           ;incstack = 0
  6833  00103C  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
  6834  001040  0100               	movlb	0	; () banked
  6835  001042  6B82               	clrf	(??___ftadd+1)& (0+255),b
  6836  001044  6B83               	clrf	(??___ftadd+2)& (0+255),b
  6837  001046  0100               	movlb	0	; () banked
  6838  001048  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6839  00104A  0100               	movlb	0	; () banked
  6840  00104C  3781               	rlcf	??___ftadd& (0+255),f,b
  6841  00104E  E301               	bnc	u2911
  6842  001050  8182               	bsf	(??___ftadd+1)& (0+255),0,b
  6843  001052                     u2911:
  6844  001052  0100               	movlb	0	; () banked
  6845  001054  5181               	movf	??___ftadd& (0+255),w,b
  6846  001056  0100               	movlb	0	; () banked
  6847  001058  6F86               	movwf	___ftadd@exp1& (0+255),b
  6848  00105A  C080  F081         	movff	___ftadd@f2+2,??___ftadd
  6849  00105E  0100               	movlb	0	; () banked
  6850  001060  6B82               	clrf	(??___ftadd+1)& (0+255),b
  6851  001062  6B83               	clrf	(??___ftadd+2)& (0+255),b
  6852  001064  0100               	movlb	0	; () banked
  6853  001066  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6854  001068  0100               	movlb	0	; () banked
  6855  00106A  3781               	rlcf	??___ftadd& (0+255),f,b
  6856  00106C  E301               	bnc	u2921
  6857  00106E  8182               	bsf	(??___ftadd+1)& (0+255),0,b
  6858  001070                     u2921:
  6859  001070  0100               	movlb	0	; () banked
  6860  001072  5181               	movf	??___ftadd& (0+255),w,b
  6861  001074  0100               	movlb	0	; () banked
  6862  001076  6F85               	movwf	___ftadd@exp2& (0+255),b
  6863                           
  6864                           ; BSR set to: 0
  6865  001078  0100               	movlb	0	; () banked
  6866  00107A  5186               	movf	___ftadd@exp1& (0+255),w,b
  6867  00107C  0100               	movlb	0	; () banked
  6868  00107E  B4D8               	btfsc	status,2,c
  6869  001080  D011               	goto	l978
  6870                           
  6871                           ; BSR set to: 0
  6872  001082  0100               	movlb	0	; () banked
  6873  001084  5185               	movf	___ftadd@exp2& (0+255),w,b
  6874  001086  0100               	movlb	0	; () banked
  6875  001088  5D86               	subwf	___ftadd@exp1& (0+255),w,b
  6876  00108A  B0D8               	btfsc	status,0,c
  6877  00108C  D012               	goto	l3652
  6878                           
  6879                           ; BSR set to: 0
  6880  00108E  0100               	movlb	0	; () banked
  6881  001090  5186               	movf	___ftadd@exp1& (0+255),w,b
  6882  001092  0800               	sublw	0
  6883  001094  0100               	movlb	0	; () banked
  6884  001096  2585               	addwf	___ftadd@exp2& (0+255),w,b
  6885  001098  0100               	movlb	0	; () banked
  6886  00109A  6F81               	movwf	??___ftadd& (0+255),b
  6887  00109C  0E18               	movlw	24
  6888  00109E  0100               	movlb	0	; () banked
  6889  0010A0  6581               	cpfsgt	??___ftadd& (0+255),b
  6890  0010A2  D007               	goto	l3652
  6891  0010A4                     l978:
  6892                           
  6893                           ; BSR set to: 0
  6894  0010A4  C07E  F07B         	movff	___ftadd@f2,?___ftadd
  6895  0010A8  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
  6896  0010AC  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
  6897  0010B0  D103               	goto	l979
  6898  0010B2                     l3652:
  6899                           
  6900                           ; BSR set to: 0
  6901  0010B2  0100               	movlb	0	; () banked
  6902  0010B4  5185               	movf	___ftadd@exp2& (0+255),w,b
  6903  0010B6  0100               	movlb	0	; () banked
  6904  0010B8  B4D8               	btfsc	status,2,c
  6905  0010BA  D011               	goto	l982
  6906                           
  6907                           ; BSR set to: 0
  6908  0010BC  0100               	movlb	0	; () banked
  6909  0010BE  5186               	movf	___ftadd@exp1& (0+255),w,b
  6910  0010C0  0100               	movlb	0	; () banked
  6911  0010C2  5D85               	subwf	___ftadd@exp2& (0+255),w,b
  6912  0010C4  B0D8               	btfsc	status,0,c
  6913  0010C6  D012               	goto	l3658
  6914                           
  6915                           ; BSR set to: 0
  6916  0010C8  0100               	movlb	0	; () banked
  6917  0010CA  5185               	movf	___ftadd@exp2& (0+255),w,b
  6918  0010CC  0800               	sublw	0
  6919  0010CE  0100               	movlb	0	; () banked
  6920  0010D0  2586               	addwf	___ftadd@exp1& (0+255),w,b
  6921  0010D2  0100               	movlb	0	; () banked
  6922  0010D4  6F81               	movwf	??___ftadd& (0+255),b
  6923  0010D6  0E18               	movlw	24
  6924  0010D8  0100               	movlb	0	; () banked
  6925  0010DA  6581               	cpfsgt	??___ftadd& (0+255),b
  6926  0010DC  D007               	goto	l3658
  6927  0010DE                     l982:
  6928                           
  6929                           ; BSR set to: 0
  6930  0010DE  C07B  F07B         	movff	___ftadd@f1,?___ftadd
  6931  0010E2  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
  6932  0010E6  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
  6933  0010EA  D0E6               	goto	l979
  6934  0010EC                     l3658:
  6935                           
  6936                           ; BSR set to: 0
  6937  0010EC  0E06               	movlw	6
  6938  0010EE  0100               	movlb	0	; () banked
  6939  0010F0  6F84               	movwf	___ftadd@sign& (0+255),b
  6940                           
  6941                           ; BSR set to: 0
  6942  0010F2  0100               	movlb	0	; () banked
  6943  0010F4  AF7D               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6944  0010F6  D003               	goto	l3664
  6945                           
  6946                           ; BSR set to: 0
  6947  0010F8  0100               	movlb	0	; () banked
  6948  0010FA  8F84               	bsf	___ftadd@sign& (0+255),7,b
  6949  0010FC  D000               	goto	l3664
  6950  0010FE                     l3664:
  6951                           
  6952                           ; BSR set to: 0
  6953  0010FE  0100               	movlb	0	; () banked
  6954  001100  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6955  001102  D002               	goto	l984
  6956                           
  6957                           ; BSR set to: 0
  6958  001104  0100               	movlb	0	; () banked
  6959  001106  8D84               	bsf	___ftadd@sign& (0+255),6,b
  6960  001108                     l984:
  6961                           
  6962                           ; BSR set to: 0
  6963  001108  0100               	movlb	0	; () banked
  6964  00110A  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6965                           
  6966                           ; BSR set to: 0
  6967  00110C  0EFF               	movlw	255
  6968  00110E  0100               	movlb	0	; () banked
  6969  001110  177B               	andwf	___ftadd@f1& (0+255),f,b
  6970  001112  0EFF               	movlw	255
  6971  001114  0100               	movlb	0	; () banked
  6972  001116  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6973  001118  0E00               	movlw	0
  6974  00111A  0100               	movlb	0	; () banked
  6975  00111C  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6976  00111E  0100               	movlb	0	; () banked
  6977  001120  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6978                           
  6979                           ; BSR set to: 0
  6980  001122  0EFF               	movlw	255
  6981  001124  0100               	movlb	0	; () banked
  6982  001126  177E               	andwf	___ftadd@f2& (0+255),f,b
  6983  001128  0EFF               	movlw	255
  6984  00112A  0100               	movlb	0	; () banked
  6985  00112C  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6986  00112E  0E00               	movlw	0
  6987  001130  0100               	movlb	0	; () banked
  6988  001132  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6989                           
  6990                           ; BSR set to: 0
  6991  001134  0100               	movlb	0	; () banked
  6992  001136  5185               	movf	___ftadd@exp2& (0+255),w,b
  6993  001138  0100               	movlb	0	; () banked
  6994  00113A  5D86               	subwf	___ftadd@exp1& (0+255),w,b
  6995  00113C  B0D8               	btfsc	status,0,c
  6996  00113E  D028               	goto	l3684
  6997  001140                     l3674:
  6998                           
  6999                           ; BSR set to: 0
  7000  001140  0100               	movlb	0	; () banked
  7001  001142  90D8               	bcf	status,0,c
  7002  001144  377E               	rlcf	___ftadd@f2& (0+255),f,b
  7003  001146  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7004  001148  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7005  00114A  0100               	movlb	0	; () banked
  7006  00114C  0785               	decf	___ftadd@exp2& (0+255),f,b
  7007                           
  7008                           ; BSR set to: 0
  7009  00114E  0100               	movlb	0	; () banked
  7010  001150  5186               	movf	___ftadd@exp1& (0+255),w,b
  7011  001152  0100               	movlb	0	; () banked
  7012  001154  1985               	xorwf	___ftadd@exp2& (0+255),w,b
  7013  001156  B4D8               	btfsc	status,2,c
  7014  001158  D013               	goto	l3682
  7015                           
  7016                           ; BSR set to: 0
  7017  00115A  0100               	movlb	0	; () banked
  7018  00115C  0784               	decf	___ftadd@sign& (0+255),f,b
  7019  00115E  C084  F081         	movff	___ftadd@sign,??___ftadd
  7020  001162  0E07               	movlw	7
  7021  001164  0100               	movlb	0	; () banked
  7022  001166  1781               	andwf	??___ftadd& (0+255),f,b
  7023  001168  B4D8               	btfsc	status,2,c
  7024  00116A  D00A               	goto	l3682
  7025  00116C  D7E9               	goto	l3674
  7026                           
  7027                           ; BSR set to: 0
  7028                           
  7029                           ; BSR set to: 0
  7030  00116E  D008               	goto	l3682
  7031  001170                     l3680:
  7032                           
  7033                           ; BSR set to: 0
  7034  001170  0100               	movlb	0	; () banked
  7035  001172  90D8               	bcf	status,0,c
  7036  001174  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7037  001176  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7038  001178  337B               	rrcf	___ftadd@f1& (0+255),f,b
  7039  00117A  0100               	movlb	0	; () banked
  7040  00117C  2B86               	incf	___ftadd@exp1& (0+255),f,b
  7041  00117E  D000               	goto	l3682
  7042  001180                     l3682:
  7043                           
  7044                           ; BSR set to: 0
  7045  001180  0100               	movlb	0	; () banked
  7046  001182  5185               	movf	___ftadd@exp2& (0+255),w,b
  7047  001184  0100               	movlb	0	; () banked
  7048  001186  1986               	xorwf	___ftadd@exp1& (0+255),w,b
  7049  001188  B4D8               	btfsc	status,2,c
  7050  00118A  D030               	goto	l993
  7051  00118C  D7F1               	goto	l3680
  7052                           
  7053                           ; BSR set to: 0
  7054  00118E  D02E               	goto	l993
  7055  001190                     l3684:
  7056                           
  7057                           ; BSR set to: 0
  7058  001190  0100               	movlb	0	; () banked
  7059  001192  5186               	movf	___ftadd@exp1& (0+255),w,b
  7060  001194  0100               	movlb	0	; () banked
  7061  001196  5D85               	subwf	___ftadd@exp2& (0+255),w,b
  7062  001198  B0D8               	btfsc	status,0,c
  7063  00119A  D028               	goto	l993
  7064  00119C                     l3686:
  7065                           
  7066                           ; BSR set to: 0
  7067  00119C  0100               	movlb	0	; () banked
  7068  00119E  90D8               	bcf	status,0,c
  7069  0011A0  377B               	rlcf	___ftadd@f1& (0+255),f,b
  7070  0011A2  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7071  0011A4  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7072  0011A6  0100               	movlb	0	; () banked
  7073  0011A8  0786               	decf	___ftadd@exp1& (0+255),f,b
  7074                           
  7075                           ; BSR set to: 0
  7076  0011AA  0100               	movlb	0	; () banked
  7077  0011AC  5186               	movf	___ftadd@exp1& (0+255),w,b
  7078  0011AE  0100               	movlb	0	; () banked
  7079  0011B0  1985               	xorwf	___ftadd@exp2& (0+255),w,b
  7080  0011B2  B4D8               	btfsc	status,2,c
  7081  0011B4  D013               	goto	l3694
  7082                           
  7083                           ; BSR set to: 0
  7084  0011B6  0100               	movlb	0	; () banked
  7085  0011B8  0784               	decf	___ftadd@sign& (0+255),f,b
  7086  0011BA  C084  F081         	movff	___ftadd@sign,??___ftadd
  7087  0011BE  0E07               	movlw	7
  7088  0011C0  0100               	movlb	0	; () banked
  7089  0011C2  1781               	andwf	??___ftadd& (0+255),f,b
  7090  0011C4  B4D8               	btfsc	status,2,c
  7091  0011C6  D00A               	goto	l3694
  7092  0011C8  D7E9               	goto	l3686
  7093                           
  7094                           ; BSR set to: 0
  7095                           
  7096                           ; BSR set to: 0
  7097  0011CA  D008               	goto	l3694
  7098  0011CC                     l3692:
  7099                           
  7100                           ; BSR set to: 0
  7101  0011CC  0100               	movlb	0	; () banked
  7102  0011CE  90D8               	bcf	status,0,c
  7103  0011D0  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7104  0011D2  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7105  0011D4  337E               	rrcf	___ftadd@f2& (0+255),f,b
  7106  0011D6  0100               	movlb	0	; () banked
  7107  0011D8  2B85               	incf	___ftadd@exp2& (0+255),f,b
  7108  0011DA  D000               	goto	l3694
  7109  0011DC                     l3694:
  7110                           
  7111                           ; BSR set to: 0
  7112  0011DC  0100               	movlb	0	; () banked
  7113  0011DE  5185               	movf	___ftadd@exp2& (0+255),w,b
  7114  0011E0  0100               	movlb	0	; () banked
  7115  0011E2  1986               	xorwf	___ftadd@exp1& (0+255),w,b
  7116  0011E4  B4D8               	btfsc	status,2,c
  7117  0011E6  D002               	goto	l993
  7118  0011E8  D7F1               	goto	l3692
  7119                           
  7120                           ; BSR set to: 0
  7121  0011EA  D000               	goto	l993
  7122  0011EC                     l993:
  7123                           
  7124                           ; BSR set to: 0
  7125  0011EC  0100               	movlb	0	; () banked
  7126  0011EE  AF84               	btfss	___ftadd@sign& (0+255),7,b
  7127  0011F0  D012               	goto	l1002
  7128                           
  7129                           ; BSR set to: 0
  7130  0011F2  0EFF               	movlw	255
  7131  0011F4  0100               	movlb	0	; () banked
  7132  0011F6  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
  7133  0011F8  0EFF               	movlw	255
  7134  0011FA  0100               	movlb	0	; () banked
  7135  0011FC  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7136  0011FE  0EFF               	movlw	255
  7137  001200  0100               	movlb	0	; () banked
  7138  001202  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7139  001204  0E01               	movlw	1
  7140  001206  0100               	movlb	0	; () banked
  7141  001208  277B               	addwf	___ftadd@f1& (0+255),f,b
  7142  00120A  0E00               	movlw	0
  7143  00120C  0100               	movlb	0	; () banked
  7144  00120E  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7145  001210  0E00               	movlw	0
  7146  001212  0100               	movlb	0	; () banked
  7147  001214  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7148  001216                     l1002:
  7149                           
  7150                           ; BSR set to: 0
  7151  001216  0100               	movlb	0	; () banked
  7152  001218  AD84               	btfss	___ftadd@sign& (0+255),6,b
  7153  00121A  D013               	goto	l3700
  7154                           
  7155                           ; BSR set to: 0
  7156  00121C  0EFF               	movlw	255
  7157  00121E  0100               	movlb	0	; () banked
  7158  001220  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
  7159  001222  0EFF               	movlw	255
  7160  001224  0100               	movlb	0	; () banked
  7161  001226  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7162  001228  0EFF               	movlw	255
  7163  00122A  0100               	movlb	0	; () banked
  7164  00122C  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7165  00122E  0E01               	movlw	1
  7166  001230  0100               	movlb	0	; () banked
  7167  001232  277E               	addwf	___ftadd@f2& (0+255),f,b
  7168  001234  0E00               	movlw	0
  7169  001236  0100               	movlb	0	; () banked
  7170  001238  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7171  00123A  0E00               	movlw	0
  7172  00123C  0100               	movlb	0	; () banked
  7173  00123E  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7174  001240  D000               	goto	l3700
  7175  001242                     l3700:
  7176                           
  7177                           ; BSR set to: 0
  7178  001242  0E00               	movlw	0
  7179  001244  0100               	movlb	0	; () banked
  7180  001246  6F84               	movwf	___ftadd@sign& (0+255),b
  7181                           
  7182                           ; BSR set to: 0
  7183  001248  0100               	movlb	0	; () banked
  7184  00124A  517B               	movf	___ftadd@f1& (0+255),w,b
  7185  00124C  0100               	movlb	0	; () banked
  7186  00124E  277E               	addwf	___ftadd@f2& (0+255),f,b
  7187  001250  0100               	movlb	0	; () banked
  7188  001252  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
  7189  001254  0100               	movlb	0	; () banked
  7190  001256  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7191  001258  0100               	movlb	0	; () banked
  7192  00125A  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
  7193  00125C  0100               	movlb	0	; () banked
  7194  00125E  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7195                           
  7196                           ; BSR set to: 0
  7197  001260  0100               	movlb	0	; () banked
  7198  001262  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7199  001264  D016               	goto	l3710
  7200                           
  7201                           ; BSR set to: 0
  7202  001266  0EFF               	movlw	255
  7203  001268  0100               	movlb	0	; () banked
  7204  00126A  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
  7205  00126C  0EFF               	movlw	255
  7206  00126E  0100               	movlb	0	; () banked
  7207  001270  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7208  001272  0EFF               	movlw	255
  7209  001274  0100               	movlb	0	; () banked
  7210  001276  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7211  001278  0E01               	movlw	1
  7212  00127A  0100               	movlb	0	; () banked
  7213  00127C  277E               	addwf	___ftadd@f2& (0+255),f,b
  7214  00127E  0E00               	movlw	0
  7215  001280  0100               	movlb	0	; () banked
  7216  001282  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7217  001284  0E00               	movlw	0
  7218  001286  0100               	movlb	0	; () banked
  7219  001288  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7220                           
  7221                           ; BSR set to: 0
  7222  00128A  0E01               	movlw	1
  7223  00128C  0100               	movlb	0	; () banked
  7224  00128E  6F84               	movwf	___ftadd@sign& (0+255),b
  7225  001290  D000               	goto	l3710
  7226  001292                     l3710:
  7227                           
  7228                           ; BSR set to: 0
  7229  001292  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
  7230  001296  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  7231  00129A  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  7232  00129E  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
  7233  0012A2  C084  F064         	movff	___ftadd@sign,___ftpack@sign
  7234  0012A6  ECAF  F00E         	call	___ftpack	;wreg free
  7235  0012AA  C060  F07B         	movff	?___ftpack,?___ftadd
  7236  0012AE  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
  7237  0012B2  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
  7238  0012B6  D000               	goto	l979
  7239  0012B8                     l979:
  7240  0012B8  0012               	return		;funcret
  7241  0012BA                     __end_of___ftadd:
  7242                           	opt stack 0
  7243                           tblptru	equ	0xFF8
  7244                           tblptrh	equ	0xFF7
  7245                           tblptrl	equ	0xFF6
  7246                           tablat	equ	0xFF5
  7247                           prodh	equ	0xFF4
  7248                           prodl	equ	0xFF3
  7249                           intcon	equ	0xFF2
  7250                           intcon2	equ	0xFF1
  7251                           postinc0	equ	0xFEE
  7252                           wreg	equ	0xFE8
  7253                           indf2	equ	0xFDF
  7254                           postinc2	equ	0xFDE
  7255                           postdec2	equ	0xFDD
  7256                           fsr2h	equ	0xFDA
  7257                           fsr2l	equ	0xFD9
  7258                           status	equ	0xFD8
  7259                           
  7260 ;; *************** function ___ftneg *****************
  7261 ;; Defined at:
  7262 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  f1              3    0[BANK0 ] float 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;		None
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  3    0[BANK0 ] float 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7276 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;Total ram usage:        3 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    6
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_pow
  7287 ;;		_exp
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text54
  7292  002C4C                     __ptext54:
  7293                           	opt stack 0
  7294  002C4C                     ___ftneg:
  7295                           	opt stack 20
  7296                           
  7297                           ;incstack = 0
  7298  002C4C  0100               	movlb	0	; () banked
  7299  002C4E  5160               	movf	___ftneg@f1& (0+255),w,b
  7300  002C50  0100               	movlb	0	; () banked
  7301  002C52  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  7302  002C54  0100               	movlb	0	; () banked
  7303  002C56  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  7304  002C58  B4D8               	btfsc	status,2,c
  7305  002C5A  D009               	goto	l1035
  7306                           
  7307                           ; BSR set to: 0
  7308  002C5C  0E00               	movlw	0
  7309  002C5E  0100               	movlb	0	; () banked
  7310  002C60  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  7311  002C62  0E00               	movlw	0
  7312  002C64  0100               	movlb	0	; () banked
  7313  002C66  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  7314  002C68  0E80               	movlw	128
  7315  002C6A  0100               	movlb	0	; () banked
  7316  002C6C  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  7317  002C6E                     l1035:
  7318                           
  7319                           ; BSR set to: 0
  7320  002C6E  C060  F060         	movff	___ftneg@f1,?___ftneg
  7321  002C72  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  7322  002C76  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  7323                           
  7324                           ; BSR set to: 0
  7325  002C7A  0012               	return		;funcret
  7326  002C7C                     __end_of___ftneg:
  7327                           	opt stack 0
  7328                           tblptru	equ	0xFF8
  7329                           tblptrh	equ	0xFF7
  7330                           tblptrl	equ	0xFF6
  7331                           tablat	equ	0xFF5
  7332                           prodh	equ	0xFF4
  7333                           prodl	equ	0xFF3
  7334                           intcon	equ	0xFF2
  7335                           intcon2	equ	0xFF1
  7336                           postinc0	equ	0xFEE
  7337                           wreg	equ	0xFE8
  7338                           indf2	equ	0xFDF
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345 ;; *************** function ___ftdiv *****************
  7346 ;; Defined at:
  7347 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  f1              3    8[BANK0 ] float 
  7350 ;;  f2              3   11[BANK0 ] float 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  f3              3   18[BANK0 ] float 
  7353 ;;  sign            1   22[BANK0 ] unsigned char 
  7354 ;;  exp             1   21[BANK0 ] unsigned char 
  7355 ;;  cntr            1   17[BANK0 ] unsigned char 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  3    8[BANK0 ] float 
  7358 ;; Registers used:
  7359 ;;		wreg, status,2, status,0, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7365 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;Total ram usage:       15 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:    7
  7372 ;; This function calls:
  7373 ;;		___ftpack
  7374 ;; This function is called by:
  7375 ;;		_exp
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text55
  7380  0019AA                     __ptext55:
  7381                           	opt stack 0
  7382  0019AA                     ___ftdiv:
  7383                           	opt stack 19
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;incstack = 0
  7387  0019AA  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  7388  0019AE  0100               	movlb	0	; () banked
  7389  0019B0  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  7390  0019B2  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  7391  0019B4  0100               	movlb	0	; () banked
  7392  0019B6  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7393  0019B8  0100               	movlb	0	; () banked
  7394  0019BA  376E               	rlcf	??___ftdiv& (0+255),f,b
  7395  0019BC  E301               	bnc	u3231
  7396  0019BE  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  7397  0019C0                     u3231:
  7398  0019C0  0100               	movlb	0	; () banked
  7399  0019C2  516E               	movf	??___ftdiv& (0+255),w,b
  7400  0019C4  0100               	movlb	0	; () banked
  7401  0019C6  6F75               	movwf	___ftdiv@exp& (0+255),b
  7402  0019C8  0100               	movlb	0	; () banked
  7403  0019CA  5175               	movf	___ftdiv@exp& (0+255),w,b
  7404  0019CC  A4D8               	btfss	status,2,c
  7405  0019CE  D002               	goto	l3806
  7406  0019D0  D014               	goto	l3808
  7407                           
  7408                           ; BSR set to: 0
  7409                           
  7410                           ; BSR set to: 0
  7411  0019D2  D08B               	goto	l1010
  7412  0019D4                     l3806:
  7413                           
  7414                           ; BSR set to: 0
  7415  0019D4  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  7416  0019D8  0100               	movlb	0	; () banked
  7417  0019DA  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  7418  0019DC  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  7419  0019DE  0100               	movlb	0	; () banked
  7420  0019E0  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7421  0019E2  0100               	movlb	0	; () banked
  7422  0019E4  376E               	rlcf	??___ftdiv& (0+255),f,b
  7423  0019E6  E301               	bnc	u3251
  7424  0019E8  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  7425  0019EA                     u3251:
  7426  0019EA  0100               	movlb	0	; () banked
  7427  0019EC  516E               	movf	??___ftdiv& (0+255),w,b
  7428  0019EE  0100               	movlb	0	; () banked
  7429  0019F0  6F76               	movwf	___ftdiv@sign& (0+255),b
  7430  0019F2  0100               	movlb	0	; () banked
  7431  0019F4  5176               	movf	___ftdiv@sign& (0+255),w,b
  7432  0019F6  A4D8               	btfss	status,2,c
  7433  0019F8  D00A               	goto	l3812
  7434  0019FA                     l3808:
  7435                           
  7436                           ; BSR set to: 0
  7437  0019FA  0E00               	movlw	0
  7438  0019FC  0100               	movlb	0	; () banked
  7439  0019FE  6F68               	movwf	?___ftdiv& (0+255),b
  7440  001A00  0E00               	movlw	0
  7441  001A02  0100               	movlb	0	; () banked
  7442  001A04  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  7443  001A06  0E00               	movlw	0
  7444  001A08  0100               	movlb	0	; () banked
  7445  001A0A  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  7446                           
  7447                           ; BSR set to: 0
  7448  001A0C  D06E               	goto	l1010
  7449  001A0E                     l3812:
  7450                           
  7451                           ; BSR set to: 0
  7452  001A0E  0E00               	movlw	0
  7453  001A10  0100               	movlb	0	; () banked
  7454  001A12  6F72               	movwf	___ftdiv@f3& (0+255),b
  7455  001A14  0E00               	movlw	0
  7456  001A16  0100               	movlb	0	; () banked
  7457  001A18  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  7458  001A1A  0E00               	movlw	0
  7459  001A1C  0100               	movlb	0	; () banked
  7460  001A1E  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  7461                           
  7462                           ; BSR set to: 0
  7463  001A20  0100               	movlb	0	; () banked
  7464  001A22  5176               	movf	___ftdiv@sign& (0+255),w,b
  7465  001A24  0F89               	addlw	137
  7466  001A26  0100               	movlb	0	; () banked
  7467  001A28  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  7468                           
  7469                           ; BSR set to: 0
  7470  001A2A  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  7471                           
  7472                           ; BSR set to: 0
  7473  001A2E  0100               	movlb	0	; () banked
  7474  001A30  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7475  001A32  0100               	movlb	0	; () banked
  7476  001A34  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  7477                           
  7478                           ; BSR set to: 0
  7479  001A36  0E80               	movlw	128
  7480  001A38  0100               	movlb	0	; () banked
  7481  001A3A  1776               	andwf	___ftdiv@sign& (0+255),f,b
  7482                           
  7483                           ; BSR set to: 0
  7484  001A3C  0100               	movlb	0	; () banked
  7485  001A3E  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7486                           
  7487                           ; BSR set to: 0
  7488  001A40  0EFF               	movlw	255
  7489  001A42  0100               	movlb	0	; () banked
  7490  001A44  1768               	andwf	___ftdiv@f1& (0+255),f,b
  7491  001A46  0EFF               	movlw	255
  7492  001A48  0100               	movlb	0	; () banked
  7493  001A4A  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7494  001A4C  0E00               	movlw	0
  7495  001A4E  0100               	movlb	0	; () banked
  7496  001A50  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7497                           
  7498                           ; BSR set to: 0
  7499  001A52  0100               	movlb	0	; () banked
  7500  001A54  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  7501                           
  7502                           ; BSR set to: 0
  7503  001A56  0EFF               	movlw	255
  7504  001A58  0100               	movlb	0	; () banked
  7505  001A5A  176B               	andwf	___ftdiv@f2& (0+255),f,b
  7506  001A5C  0EFF               	movlw	255
  7507  001A5E  0100               	movlb	0	; () banked
  7508  001A60  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  7509  001A62  0E00               	movlw	0
  7510  001A64  0100               	movlb	0	; () banked
  7511  001A66  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  7512                           
  7513                           ; BSR set to: 0
  7514  001A68  0E18               	movlw	24
  7515  001A6A  0100               	movlb	0	; () banked
  7516  001A6C  6F71               	movwf	___ftdiv@cntr& (0+255),b
  7517  001A6E  D000               	goto	l3832
  7518  001A70                     l3832:
  7519                           
  7520                           ; BSR set to: 0
  7521  001A70  0100               	movlb	0	; () banked
  7522  001A72  90D8               	bcf	status,0,c
  7523  001A74  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  7524  001A76  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  7525  001A78  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  7526                           
  7527                           ; BSR set to: 0
  7528  001A7A  0100               	movlb	0	; () banked
  7529  001A7C  516B               	movf	___ftdiv@f2& (0+255),w,b
  7530  001A7E  0100               	movlb	0	; () banked
  7531  001A80  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  7532  001A82  0100               	movlb	0	; () banked
  7533  001A84  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7534  001A86  0100               	movlb	0	; () banked
  7535  001A88  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  7536  001A8A  0100               	movlb	0	; () banked
  7537  001A8C  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7538  001A8E  0100               	movlb	0	; () banked
  7539  001A90  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  7540  001A92  A0D8               	btfss	status,0,c
  7541  001A94  D00E               	goto	l1013
  7542                           
  7543                           ; BSR set to: 0
  7544  001A96  0100               	movlb	0	; () banked
  7545  001A98  516B               	movf	___ftdiv@f2& (0+255),w,b
  7546  001A9A  0100               	movlb	0	; () banked
  7547  001A9C  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  7548  001A9E  0100               	movlb	0	; () banked
  7549  001AA0  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  7550  001AA2  0100               	movlb	0	; () banked
  7551  001AA4  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  7552  001AA6  0100               	movlb	0	; () banked
  7553  001AA8  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7554  001AAA  0100               	movlb	0	; () banked
  7555  001AAC  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  7556                           
  7557                           ; BSR set to: 0
  7558  001AAE  0100               	movlb	0	; () banked
  7559  001AB0  8172               	bsf	___ftdiv@f3& (0+255),0,b
  7560  001AB2                     l1013:
  7561                           
  7562                           ; BSR set to: 0
  7563  001AB2  0100               	movlb	0	; () banked
  7564  001AB4  90D8               	bcf	status,0,c
  7565  001AB6  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  7566  001AB8  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  7567  001ABA  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  7568                           
  7569                           ; BSR set to: 0
  7570  001ABC  0100               	movlb	0	; () banked
  7571  001ABE  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  7572  001AC0  D7D7               	goto	l3832
  7573  001AC2  D000               	goto	l3842
  7574  001AC4                     l3842:
  7575                           
  7576                           ; BSR set to: 0
  7577  001AC4  C072  F060         	movff	___ftdiv@f3,___ftpack@arg
  7578  001AC8  C073  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7579  001ACC  C074  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7580  001AD0  C075  F063         	movff	___ftdiv@exp,___ftpack@exp
  7581  001AD4  C076  F064         	movff	___ftdiv@sign,___ftpack@sign
  7582  001AD8  ECAF  F00E         	call	___ftpack	;wreg free
  7583  001ADC  C060  F068         	movff	?___ftpack,?___ftdiv
  7584  001AE0  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
  7585  001AE4  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
  7586  001AE8  D000               	goto	l1010
  7587  001AEA                     l1010:
  7588  001AEA  0012               	return		;funcret
  7589  001AEC                     __end_of___ftdiv:
  7590                           	opt stack 0
  7591                           tblptru	equ	0xFF8
  7592                           tblptrh	equ	0xFF7
  7593                           tblptrl	equ	0xFF6
  7594                           tablat	equ	0xFF5
  7595                           prodh	equ	0xFF4
  7596                           prodl	equ	0xFF3
  7597                           intcon	equ	0xFF2
  7598                           intcon2	equ	0xFF1
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           indf2	equ	0xFDF
  7602                           postinc2	equ	0xFDE
  7603                           postdec2	equ	0xFDD
  7604                           fsr2h	equ	0xFDA
  7605                           fsr2l	equ	0xFD9
  7606                           status	equ	0xFD8
  7607                           
  7608 ;; *************** function ___awtoft *****************
  7609 ;; Defined at:
  7610 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  c               2    8[BANK0 ] int 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  sign            1   11[BANK0 ] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  3    8[BANK0 ] float 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7624 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;Total ram usage:        4 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    7
  7631 ;; This function calls:
  7632 ;;		___ftpack
  7633 ;; This function is called by:
  7634 ;;		_exp
  7635 ;;		_log
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text56
  7640  002B44                     __ptext56:
  7641                           	opt stack 0
  7642  002B44                     ___awtoft:
  7643                           	opt stack 19
  7644                           
  7645                           ;incstack = 0
  7646  002B44  0E00               	movlw	0
  7647  002B46  0100               	movlb	0	; () banked
  7648  002B48  6F6B               	movwf	___awtoft@sign& (0+255),b
  7649                           
  7650                           ; BSR set to: 0
  7651  002B4A  0100               	movlb	0	; () banked
  7652  002B4C  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  7653  002B4E  D009               	goto	l3862
  7654                           
  7655                           ; BSR set to: 0
  7656  002B50  0100               	movlb	0	; () banked
  7657  002B52  6D68               	negf	___awtoft@c& (0+255),b
  7658  002B54  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  7659  002B56  B0D8               	btfsc	status,0,c
  7660  002B58  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  7661                           
  7662                           ; BSR set to: 0
  7663  002B5A  0E01               	movlw	1
  7664  002B5C  0100               	movlb	0	; () banked
  7665  002B5E  6F6B               	movwf	___awtoft@sign& (0+255),b
  7666  002B60  D000               	goto	l3862
  7667  002B62                     l3862:
  7668                           
  7669                           ; BSR set to: 0
  7670  002B62  C068  F060         	movff	___awtoft@c,___ftpack@arg
  7671  002B66  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  7672  002B6A  0100               	movlb	0	; () banked
  7673  002B6C  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  7674  002B6E  0E8E               	movlw	142
  7675  002B70  0100               	movlb	0	; () banked
  7676  002B72  6F63               	movwf	___ftpack@exp& (0+255),b
  7677  002B74  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  7678  002B78  ECAF  F00E         	call	___ftpack	;wreg free
  7679  002B7C  C060  F068         	movff	?___ftpack,?___awtoft
  7680  002B80  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  7681  002B84  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  7682  002B88  D000               	goto	l834
  7683  002B8A                     l834:
  7684  002B8A  0012               	return		;funcret
  7685  002B8C                     __end_of___awtoft:
  7686                           	opt stack 0
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           postinc0	equ	0xFEE
  7696                           wreg	equ	0xFE8
  7697                           indf2	equ	0xFDF
  7698                           postinc2	equ	0xFDE
  7699                           postdec2	equ	0xFDD
  7700                           fsr2h	equ	0xFDA
  7701                           fsr2l	equ	0xFD9
  7702                           status	equ	0xFD8
  7703                           
  7704 ;; *************** function ___lltoft *****************
  7705 ;; Defined at:
  7706 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  c               4    8[BANK0 ] unsigned long 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  exp             1   16[BANK0 ] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  3    8[BANK0 ] float 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7722 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;Total ram usage:        9 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    7
  7727 ;; This function calls:
  7728 ;;		___ftpack
  7729 ;; This function is called by:
  7730 ;;		_pow
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text57
  7735  0027C4                     __ptext57:
  7736                           	opt stack 0
  7737  0027C4                     ___lltoft:
  7738                           	opt stack 20
  7739                           
  7740                           ;incstack = 0
  7741  0027C4  0E8E               	movlw	142
  7742  0027C6  0100               	movlb	0	; () banked
  7743  0027C8  6F70               	movwf	___lltoft@exp& (0+255),b
  7744  0027CA  D009               	goto	l3906
  7745  0027CC                     l3904:
  7746                           
  7747                           ; BSR set to: 0
  7748  0027CC  0100               	movlb	0	; () banked
  7749  0027CE  90D8               	bcf	status,0,c
  7750  0027D0  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7751  0027D2  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7752  0027D4  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7753  0027D6  3368               	rrcf	___lltoft@c& (0+255),f,b
  7754  0027D8  0100               	movlb	0	; () banked
  7755  0027DA  2B70               	incf	___lltoft@exp& (0+255),f,b
  7756  0027DC  D000               	goto	l3906
  7757  0027DE                     l3906:
  7758                           
  7759                           ; BSR set to: 0
  7760  0027DE  0E00               	movlw	0
  7761  0027E0  0100               	movlb	0	; () banked
  7762  0027E2  1568               	andwf	___lltoft@c& (0+255),w,b
  7763  0027E4  0100               	movlb	0	; () banked
  7764  0027E6  6F6C               	movwf	??___lltoft& (0+255),b
  7765  0027E8  0E00               	movlw	0
  7766  0027EA  0100               	movlb	0	; () banked
  7767  0027EC  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  7768  0027EE  0100               	movlb	0	; () banked
  7769  0027F0  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  7770  0027F2  0E00               	movlw	0
  7771  0027F4  0100               	movlb	0	; () banked
  7772  0027F6  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  7773  0027F8  0100               	movlb	0	; () banked
  7774  0027FA  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  7775  0027FC  0EFF               	movlw	255
  7776  0027FE  0100               	movlb	0	; () banked
  7777  002800  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  7778  002802  0100               	movlb	0	; () banked
  7779  002804  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  7780  002806  0100               	movlb	0	; () banked
  7781  002808  516C               	movf	??___lltoft& (0+255),w,b
  7782  00280A  0100               	movlb	0	; () banked
  7783  00280C  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  7784  00280E  0100               	movlb	0	; () banked
  7785  002810  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  7786  002812  0100               	movlb	0	; () banked
  7787  002814  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
  7788  002816  A4D8               	btfss	status,2,c
  7789  002818  D7D9               	goto	l3904
  7790                           
  7791                           ; BSR set to: 0
  7792                           
  7793                           ; BSR set to: 0
  7794  00281A  C068  F060         	movff	___lltoft@c,___ftpack@arg
  7795  00281E  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  7796  002822  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  7797  002826  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  7798  00282A  0E00               	movlw	0
  7799  00282C  0100               	movlb	0	; () banked
  7800  00282E  6F64               	movwf	___ftpack@sign& (0+255),b
  7801  002830  ECAF  F00E         	call	___ftpack	;wreg free
  7802  002834  C060  F068         	movff	?___ftpack,?___lltoft
  7803  002838  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  7804  00283C  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  7805  002840  D000               	goto	l1115
  7806  002842                     l1115:
  7807  002842  0012               	return		;funcret
  7808  002844                     __end_of___lltoft:
  7809                           	opt stack 0
  7810                           tblptru	equ	0xFF8
  7811                           tblptrh	equ	0xFF7
  7812                           tblptrl	equ	0xFF6
  7813                           tablat	equ	0xFF5
  7814                           prodh	equ	0xFF4
  7815                           prodl	equ	0xFF3
  7816                           intcon	equ	0xFF2
  7817                           intcon2	equ	0xFF1
  7818                           postinc0	equ	0xFEE
  7819                           wreg	equ	0xFE8
  7820                           indf2	equ	0xFDF
  7821                           postinc2	equ	0xFDE
  7822                           postdec2	equ	0xFDD
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function ___lbtoft *****************
  7828 ;; Defined at:
  7829 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  c               1    wreg     unsigned char 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;  c               1   11[BANK0 ] unsigned char 
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  3    8[BANK0 ] float 
  7836 ;; Registers used:
  7837 ;;		wreg, status,2, status,0, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7843 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;Total ram usage:        4 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:    7
  7850 ;; This function calls:
  7851 ;;		___ftpack
  7852 ;; This function is called by:
  7853 ;;		_CalculateSensorSums
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text58
  7858  002C7C                     __ptext58:
  7859                           	opt stack 0
  7860  002C7C                     ___lbtoft:
  7861                           	opt stack 21
  7862                           
  7863                           ;incstack = 0
  7864                           ;___lbtoft@c stored from wreg
  7865  002C7C  0100               	movlb	0	; () banked
  7866  002C7E  6F6B               	movwf	___lbtoft@c& (0+255),b
  7867                           
  7868                           ; BSR set to: 0
  7869  002C80  0100               	movlb	0	; () banked
  7870  002C82  516B               	movf	___lbtoft@c& (0+255),w,b
  7871  002C84  0100               	movlb	0	; () banked
  7872  002C86  6F60               	movwf	___ftpack@arg& (0+255),b
  7873  002C88  6B61               	clrf	(___ftpack@arg+1)& (0+255),b
  7874  002C8A  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  7875  002C8C  0E8E               	movlw	142
  7876  002C8E  0100               	movlb	0	; () banked
  7877  002C90  6F63               	movwf	___ftpack@exp& (0+255),b
  7878  002C92  0E00               	movlw	0
  7879  002C94  0100               	movlb	0	; () banked
  7880  002C96  6F64               	movwf	___ftpack@sign& (0+255),b
  7881  002C98  ECAF  F00E         	call	___ftpack	;wreg free
  7882  002C9C  C060  F068         	movff	?___ftpack,?___lbtoft
  7883  002CA0  C061  F069         	movff	?___ftpack+1,?___lbtoft+1
  7884  002CA4  C062  F06A         	movff	?___ftpack+2,?___lbtoft+2
  7885  002CA8  D000               	goto	l1082
  7886  002CAA                     l1082:
  7887  002CAA  0012               	return		;funcret
  7888  002CAC                     __end_of___lbtoft:
  7889                           	opt stack 0
  7890                           tblptru	equ	0xFF8
  7891                           tblptrh	equ	0xFF7
  7892                           tblptrl	equ	0xFF6
  7893                           tablat	equ	0xFF5
  7894                           prodh	equ	0xFF4
  7895                           prodl	equ	0xFF3
  7896                           intcon	equ	0xFF2
  7897                           intcon2	equ	0xFF1
  7898                           postinc0	equ	0xFEE
  7899                           wreg	equ	0xFE8
  7900                           indf2	equ	0xFDF
  7901                           postinc2	equ	0xFDE
  7902                           postdec2	equ	0xFDD
  7903                           fsr2h	equ	0xFDA
  7904                           fsr2l	equ	0xFD9
  7905                           status	equ	0xFD8
  7906                           
  7907 ;; *************** function ___ftpack *****************
  7908 ;; Defined at:
  7909 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  arg             3    0[BANK0 ] unsigned um
  7912 ;;  exp             1    3[BANK0 ] unsigned char 
  7913 ;;  sign            1    4[BANK0 ] unsigned char 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  3    0[BANK0 ] float 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7925 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;Total ram usage:        8 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    6
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		___altoft
  7936 ;;		___awtoft
  7937 ;;		___ftadd
  7938 ;;		___ftdiv
  7939 ;;		___ftmul
  7940 ;;		___lbtoft
  7941 ;;		___lltoft
  7942 ;;		___lwtoft
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text59
  7947  001D5E                     __ptext59:
  7948                           	opt stack 0
  7949  001D5E                     ___ftpack:
  7950                           	opt stack 18
  7951                           
  7952                           ;incstack = 0
  7953  001D5E  0100               	movlb	0	; () banked
  7954  001D60  5163               	movf	___ftpack@exp& (0+255),w,b
  7955  001D62  0100               	movlb	0	; () banked
  7956  001D64  B4D8               	btfsc	status,2,c
  7957  001D66  D008               	goto	l3590
  7958                           
  7959                           ; BSR set to: 0
  7960  001D68  0100               	movlb	0	; () banked
  7961  001D6A  5160               	movf	___ftpack@arg& (0+255),w,b
  7962  001D6C  0100               	movlb	0	; () banked
  7963  001D6E  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  7964  001D70  0100               	movlb	0	; () banked
  7965  001D72  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  7966  001D74  A4D8               	btfss	status,2,c
  7967  001D76  D013               	goto	l3596
  7968  001D78                     l3590:
  7969                           
  7970                           ; BSR set to: 0
  7971  001D78  0E00               	movlw	0
  7972  001D7A  0100               	movlb	0	; () banked
  7973  001D7C  6F60               	movwf	?___ftpack& (0+255),b
  7974  001D7E  0E00               	movlw	0
  7975  001D80  0100               	movlb	0	; () banked
  7976  001D82  6F61               	movwf	(?___ftpack+1)& (0+255),b
  7977  001D84  0E00               	movlw	0
  7978  001D86  0100               	movlb	0	; () banked
  7979  001D88  6F62               	movwf	(?___ftpack+2)& (0+255),b
  7980                           
  7981                           ; BSR set to: 0
  7982  001D8A  D078               	goto	l938
  7983                           
  7984                           ; BSR set to: 0
  7985  001D8C  D008               	goto	l3596
  7986  001D8E                     l3594:
  7987                           
  7988                           ; BSR set to: 0
  7989  001D8E  0100               	movlb	0	; () banked
  7990  001D90  2B63               	incf	___ftpack@exp& (0+255),f,b
  7991  001D92  0100               	movlb	0	; () banked
  7992  001D94  90D8               	bcf	status,0,c
  7993  001D96  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  7994  001D98  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  7995  001D9A  3360               	rrcf	___ftpack@arg& (0+255),f,b
  7996  001D9C  D000               	goto	l3596
  7997  001D9E                     l3596:
  7998                           
  7999                           ; BSR set to: 0
  8000  001D9E  0E00               	movlw	0
  8001  001DA0  0100               	movlb	0	; () banked
  8002  001DA2  1560               	andwf	___ftpack@arg& (0+255),w,b
  8003  001DA4  0100               	movlb	0	; () banked
  8004  001DA6  6F65               	movwf	??___ftpack& (0+255),b
  8005  001DA8  0E00               	movlw	0
  8006  001DAA  0100               	movlb	0	; () banked
  8007  001DAC  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8008  001DAE  0100               	movlb	0	; () banked
  8009  001DB0  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8010  001DB2  0EFE               	movlw	254
  8011  001DB4  0100               	movlb	0	; () banked
  8012  001DB6  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8013  001DB8  0100               	movlb	0	; () banked
  8014  001DBA  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8015  001DBC  0100               	movlb	0	; () banked
  8016  001DBE  5165               	movf	??___ftpack& (0+255),w,b
  8017  001DC0  0100               	movlb	0	; () banked
  8018  001DC2  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8019  001DC4  0100               	movlb	0	; () banked
  8020  001DC6  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8021  001DC8  B4D8               	btfsc	status,2,c
  8022  001DCA  D013               	goto	l3602
  8023  001DCC  D7E0               	goto	l3594
  8024                           
  8025                           ; BSR set to: 0
  8026  001DCE  D011               	goto	l3602
  8027  001DD0                     l3598:
  8028                           
  8029                           ; BSR set to: 0
  8030  001DD0  0100               	movlb	0	; () banked
  8031  001DD2  2B63               	incf	___ftpack@exp& (0+255),f,b
  8032                           
  8033                           ; BSR set to: 0
  8034  001DD4  0E01               	movlw	1
  8035  001DD6  0100               	movlb	0	; () banked
  8036  001DD8  2760               	addwf	___ftpack@arg& (0+255),f,b
  8037  001DDA  0E00               	movlw	0
  8038  001DDC  0100               	movlb	0	; () banked
  8039  001DDE  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8040  001DE0  0E00               	movlw	0
  8041  001DE2  0100               	movlb	0	; () banked
  8042  001DE4  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8043  001DE6  0100               	movlb	0	; () banked
  8044  001DE8  90D8               	bcf	status,0,c
  8045  001DEA  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8046  001DEC  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8047  001DEE  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8048  001DF0  D000               	goto	l3602
  8049  001DF2                     l3602:
  8050                           
  8051                           ; BSR set to: 0
  8052  001DF2  0E00               	movlw	0
  8053  001DF4  0100               	movlb	0	; () banked
  8054  001DF6  1560               	andwf	___ftpack@arg& (0+255),w,b
  8055  001DF8  0100               	movlb	0	; () banked
  8056  001DFA  6F65               	movwf	??___ftpack& (0+255),b
  8057  001DFC  0E00               	movlw	0
  8058  001DFE  0100               	movlb	0	; () banked
  8059  001E00  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8060  001E02  0100               	movlb	0	; () banked
  8061  001E04  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8062  001E06  0EFF               	movlw	255
  8063  001E08  0100               	movlb	0	; () banked
  8064  001E0A  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8065  001E0C  0100               	movlb	0	; () banked
  8066  001E0E  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8067  001E10  0100               	movlb	0	; () banked
  8068  001E12  5165               	movf	??___ftpack& (0+255),w,b
  8069  001E14  0100               	movlb	0	; () banked
  8070  001E16  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8071  001E18  0100               	movlb	0	; () banked
  8072  001E1A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8073  001E1C  B4D8               	btfsc	status,2,c
  8074  001E1E  D00A               	goto	l3606
  8075  001E20  D7D7               	goto	l3598
  8076                           
  8077                           ; BSR set to: 0
  8078  001E22  D008               	goto	l3606
  8079  001E24                     l3604:
  8080                           
  8081                           ; BSR set to: 0
  8082  001E24  0100               	movlb	0	; () banked
  8083  001E26  0763               	decf	___ftpack@exp& (0+255),f,b
  8084  001E28  0100               	movlb	0	; () banked
  8085  001E2A  90D8               	bcf	status,0,c
  8086  001E2C  3760               	rlcf	___ftpack@arg& (0+255),f,b
  8087  001E2E  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8088  001E30  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8089  001E32  D000               	goto	l3606
  8090  001E34                     l3606:
  8091                           
  8092                           ; BSR set to: 0
  8093  001E34  0100               	movlb	0	; () banked
  8094  001E36  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8095  001E38  D005               	goto	l949
  8096                           
  8097                           ; BSR set to: 0
  8098  001E3A  0E02               	movlw	2
  8099  001E3C  0100               	movlb	0	; () banked
  8100  001E3E  6163               	cpfslt	___ftpack@exp& (0+255),b
  8101  001E40  D7F1               	goto	l3604
  8102  001E42  D000               	goto	l949
  8103  001E44                     l949:
  8104                           
  8105                           ; BSR set to: 0
  8106  001E44  0100               	movlb	0	; () banked
  8107  001E46  B163               	btfsc	___ftpack@exp& (0+255),0,b
  8108  001E48  D003               	goto	l3612
  8109                           
  8110                           ; BSR set to: 0
  8111  001E4A  0100               	movlb	0	; () banked
  8112  001E4C  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8113  001E4E  D000               	goto	l3612
  8114  001E50                     l3612:
  8115                           
  8116                           ; BSR set to: 0
  8117  001E50  0100               	movlb	0	; () banked
  8118  001E52  90D8               	bcf	status,0,c
  8119  001E54  3363               	rrcf	___ftpack@exp& (0+255),f,b
  8120  001E56  0100               	movlb	0	; () banked
  8121  001E58  5163               	movf	___ftpack@exp& (0+255),w,b
  8122  001E5A  0100               	movlb	0	; () banked
  8123  001E5C  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8124                           
  8125                           ; BSR set to: 0
  8126  001E5E  0100               	movlb	0	; () banked
  8127  001E60  5164               	movf	___ftpack@sign& (0+255),w,b
  8128  001E62  0100               	movlb	0	; () banked
  8129  001E64  B4D8               	btfsc	status,2,c
  8130  001E66  D003               	goto	l3618
  8131                           
  8132                           ; BSR set to: 0
  8133  001E68  0100               	movlb	0	; () banked
  8134  001E6A  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8135  001E6C  D000               	goto	l3618
  8136  001E6E                     l3618:
  8137                           
  8138                           ; BSR set to: 0
  8139  001E6E  C060  F060         	movff	___ftpack@arg,?___ftpack
  8140  001E72  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  8141  001E76  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  8142  001E7A  D000               	goto	l938
  8143  001E7C                     l938:
  8144                           
  8145                           ; BSR set to: 0
  8146  001E7C  0012               	return		;funcret
  8147  001E7E                     __end_of___ftpack:
  8148                           	opt stack 0
  8149                           tblptru	equ	0xFF8
  8150                           tblptrh	equ	0xFF7
  8151                           tblptrl	equ	0xFF6
  8152                           tablat	equ	0xFF5
  8153                           prodh	equ	0xFF4
  8154                           prodl	equ	0xFF3
  8155                           intcon	equ	0xFF2
  8156                           intcon2	equ	0xFF1
  8157                           postinc0	equ	0xFEE
  8158                           wreg	equ	0xFE8
  8159                           indf2	equ	0xFDF
  8160                           postinc2	equ	0xFDE
  8161                           postdec2	equ	0xFDD
  8162                           fsr2h	equ	0xFDA
  8163                           fsr2l	equ	0xFD9
  8164                           status	equ	0xFD8
  8165                           
  8166 ;; *************** function _CalculateSensorStatuses *****************
  8167 ;; Defined at:
  8168 ;;		line 337 in file "FastBuggy17_Main_Code.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;  index           1    3[BANK0 ] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;		None               void
  8175 ;; Registers used:
  8176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;Total ram usage:        4 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    6
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_CalibrateLine
  8193 ;;		_main
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text60
  8198  002274                     __ptext60:
  8199                           	opt stack 0
  8200  002274                     _CalculateSensorStatuses:
  8201                           	opt stack 23
  8202                           
  8203                           ;FastBuggy17_Main_Code.c: 338: unsigned char index;
  8204                           ;FastBuggy17_Main_Code.c: 341: if(line_mode == 1) {
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;incstack = 0
  8208  002274  043D               	decf	_line_mode,w,c
  8209  002276  A4D8               	btfss	status,2,c
  8210  002278  D038               	goto	l4192
  8211                           
  8212                           ;FastBuggy17_Main_Code.c: 342: for(index = 0; index < 5; index++) {
  8213  00227A  0E00               	movlw	0
  8214  00227C  0100               	movlb	0	; () banked
  8215  00227E  6F63               	movwf	CalculateSensorStatuses@index& (0+255),b
  8216  002280                     l4178:
  8217                           
  8218                           ; BSR set to: 0
  8219  002280  0E04               	movlw	4
  8220  002282  0100               	movlb	0	; () banked
  8221  002284  6563               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  8222  002286  D001               	goto	l4182
  8223                           
  8224                           ; BSR set to: 0
  8225  002288  D06B               	goto	l331
  8226  00228A                     l4182:
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;FastBuggy17_Main_Code.c: 344: if(sensor_readings_normalised[index] > sensor_threshold) 
      +                          {
  8230  00228A  0100               	movlb	0	; () banked
  8231  00228C  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8232  00228E  0D02               	mullw	2
  8233  002290  0EC9               	movlw	low _sensor_readings_normalised
  8234  002292  24F3               	addwf	prodl,w,c
  8235  002294  6ED9               	movwf	fsr2l,c
  8236  002296  0E00               	movlw	high _sensor_readings_normalised
  8237  002298  20F4               	addwfc	prodh,w,c
  8238  00229A  6EDA               	movwf	fsr2h,c
  8239  00229C  50DE               	movf	postinc2,w,c
  8240  00229E  5C3A               	subwf	_sensor_threshold,w,c
  8241  0022A0  503B               	movf	_sensor_threshold+1,w,c
  8242  0022A2  0A80               	xorlw	128
  8243  0022A4  0100               	movlb	0	; () banked
  8244  0022A6  6F62               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  8245  0022A8  50DE               	movf	postinc2,w,c
  8246  0022AA  0A80               	xorlw	128
  8247  0022AC  0100               	movlb	0	; () banked
  8248  0022AE  5962               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  8249  0022B0  B0D8               	btfsc	status,0,c
  8250  0022B2  D00B               	goto	l4186
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;FastBuggy17_Main_Code.c: 345: sensor_status[index] = 1;
  8254  0022B4  0100               	movlb	0	; () banked
  8255  0022B6  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8256  0022B8  0D01               	mullw	1
  8257  0022BA  0E42               	movlw	low _sensor_status
  8258  0022BC  24F3               	addwf	prodl,w,c
  8259  0022BE  6ED9               	movwf	fsr2l,c
  8260  0022C0  0E00               	movlw	high _sensor_status
  8261  0022C2  20F4               	addwfc	prodh,w,c
  8262  0022C4  6EDA               	movwf	fsr2h,c
  8263  0022C6  0E01               	movlw	1
  8264  0022C8  D00A               	goto	L11
  8265  0022CA                     l4186:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;FastBuggy17_Main_Code.c: 347: else {
  8269                           ;FastBuggy17_Main_Code.c: 348: sensor_status[index] = 0;
  8270  0022CA  0100               	movlb	0	; () banked
  8271  0022CC  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8272  0022CE  0D01               	mullw	1
  8273  0022D0  0E42               	movlw	low _sensor_status
  8274  0022D2  24F3               	addwf	prodl,w,c
  8275  0022D4  6ED9               	movwf	fsr2l,c
  8276  0022D6  0E00               	movlw	high _sensor_status
  8277  0022D8  20F4               	addwfc	prodh,w,c
  8278  0022DA  6EDA               	movwf	fsr2h,c
  8279  0022DC  0E00               	movlw	0
  8280  0022DE                     L11:
  8281  0022DE  6EDF               	movwf	indf2,c
  8282  0022E0  D000               	goto	l4188
  8283  0022E2                     l4188:
  8284                           
  8285                           ; BSR set to: 0
  8286  0022E2  0100               	movlb	0	; () banked
  8287  0022E4  2B63               	incf	CalculateSensorStatuses@index& (0+255),f,b
  8288  0022E6  D7CC               	goto	l4178
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;FastBuggy17_Main_Code.c: 349: }
  8292                           ;FastBuggy17_Main_Code.c: 350: }
  8293                           ;FastBuggy17_Main_Code.c: 351: }
  8294                           
  8295                           ; BSR set to: 0
  8296  0022E8  D03B               	goto	l331
  8297  0022EA                     l4192:
  8298                           
  8299                           ;FastBuggy17_Main_Code.c: 352: else if(line_mode == 0) {
  8300  0022EA  503D               	movf	_line_mode,w,c
  8301  0022EC  A4D8               	btfss	status,2,c
  8302  0022EE  D038               	goto	l331
  8303                           
  8304                           ;FastBuggy17_Main_Code.c: 354: for(index = 0; index < 5; index++) {
  8305  0022F0  0E00               	movlw	0
  8306  0022F2  0100               	movlb	0	; () banked
  8307  0022F4  6F63               	movwf	CalculateSensorStatuses@index& (0+255),b
  8308  0022F6                     l4196:
  8309                           
  8310                           ; BSR set to: 0
  8311  0022F6  0E04               	movlw	4
  8312  0022F8  0100               	movlb	0	; () banked
  8313  0022FA  6563               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  8314  0022FC  D001               	goto	l4200
  8315                           
  8316                           ; BSR set to: 0
  8317  0022FE  D030               	goto	l331
  8318  002300                     l4200:
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;FastBuggy17_Main_Code.c: 356: if(sensor_readings_normalised[index] < sensor_threshold) 
      +                          {
  8322  002300  0100               	movlb	0	; () banked
  8323  002302  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8324  002304  0D02               	mullw	2
  8325  002306  0EC9               	movlw	low _sensor_readings_normalised
  8326  002308  24F3               	addwf	prodl,w,c
  8327  00230A  6ED9               	movwf	fsr2l,c
  8328  00230C  0E00               	movlw	high _sensor_readings_normalised
  8329  00230E  20F4               	addwfc	prodh,w,c
  8330  002310  6EDA               	movwf	fsr2h,c
  8331  002312  503A               	movf	_sensor_threshold,w,c
  8332  002314  5CDE               	subwf	postinc2,w,c
  8333  002316  50DE               	movf	postinc2,w,c
  8334  002318  0A80               	xorlw	128
  8335  00231A  0100               	movlb	0	; () banked
  8336  00231C  6F62               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  8337  00231E  503B               	movf	_sensor_threshold+1,w,c
  8338  002320  0A80               	xorlw	128
  8339  002322  0100               	movlb	0	; () banked
  8340  002324  5962               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  8341  002326  B0D8               	btfsc	status,0,c
  8342  002328  D00B               	goto	l4204
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;FastBuggy17_Main_Code.c: 357: sensor_status[index] = 1;
  8346  00232A  0100               	movlb	0	; () banked
  8347  00232C  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8348  00232E  0D01               	mullw	1
  8349  002330  0E42               	movlw	low _sensor_status
  8350  002332  24F3               	addwf	prodl,w,c
  8351  002334  6ED9               	movwf	fsr2l,c
  8352  002336  0E00               	movlw	high _sensor_status
  8353  002338  20F4               	addwfc	prodh,w,c
  8354  00233A  6EDA               	movwf	fsr2h,c
  8355  00233C  0E01               	movlw	1
  8356  00233E  D00A               	goto	L12
  8357  002340                     l4204:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;FastBuggy17_Main_Code.c: 359: else {
  8361                           ;FastBuggy17_Main_Code.c: 360: sensor_status[index] = 0;
  8362  002340  0100               	movlb	0	; () banked
  8363  002342  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8364  002344  0D01               	mullw	1
  8365  002346  0E42               	movlw	low _sensor_status
  8366  002348  24F3               	addwf	prodl,w,c
  8367  00234A  6ED9               	movwf	fsr2l,c
  8368  00234C  0E00               	movlw	high _sensor_status
  8369  00234E  20F4               	addwfc	prodh,w,c
  8370  002350  6EDA               	movwf	fsr2h,c
  8371  002352  0E00               	movlw	0
  8372  002354                     L12:
  8373  002354  6EDF               	movwf	indf2,c
  8374  002356  D000               	goto	l4206
  8375  002358                     l4206:
  8376                           
  8377                           ; BSR set to: 0
  8378  002358  0100               	movlb	0	; () banked
  8379  00235A  2B63               	incf	CalculateSensorStatuses@index& (0+255),f,b
  8380  00235C  D7CC               	goto	l4196
  8381                           
  8382                           ; BSR set to: 0
  8383                           
  8384                           ; BSR set to: 0
  8385                           
  8386                           ; BSR set to: 0
  8387  00235E  D000               	goto	l331
  8388  002360                     l331:
  8389  002360  0012               	return		;funcret
  8390  002362                     __end_of_CalculateSensorStatuses:
  8391                           	opt stack 0
  8392                           tblptru	equ	0xFF8
  8393                           tblptrh	equ	0xFF7
  8394                           tblptrl	equ	0xFF6
  8395                           tablat	equ	0xFF5
  8396                           prodh	equ	0xFF4
  8397                           prodl	equ	0xFF3
  8398                           intcon	equ	0xFF2
  8399                           intcon2	equ	0xFF1
  8400                           postinc0	equ	0xFEE
  8401                           wreg	equ	0xFE8
  8402                           indf2	equ	0xFDF
  8403                           postinc2	equ	0xFDE
  8404                           postdec2	equ	0xFDD
  8405                           fsr2h	equ	0xFDA
  8406                           fsr2l	equ	0xFD9
  8407                           status	equ	0xFD8
  8408                           
  8409 ;; *************** function _BusySensorAcq *****************
  8410 ;; Defined at:
  8411 ;;		line 318 in file "FastBuggy17_Main_Code.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      unsigned char 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    6
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_CalibrateSensors
  8436 ;;		_CalibrateLine
  8437 ;;		_main
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text61
  8442  002F4A                     __ptext61:
  8443                           	opt stack 0
  8444  002F4A                     _BusySensorAcq:
  8445                           	opt stack 23
  8446                           
  8447                           ;FastBuggy17_Main_Code.c: 320: return (!sensor_acq_done);
  8448                           
  8449                           ;incstack = 0
  8450  002F4A  503F               	movf	_sensor_acq_done,w,c	;volatile
  8451  002F4C  A4D8               	btfss	status,2,c
  8452  002F4E  D002               	goto	u3620
  8453  002F50  0E01               	movlw	1
  8454  002F52  D002               	goto	l312
  8455  002F54                     u3620:
  8456  002F54  0E00               	movlw	0
  8457  002F56  D000               	goto	l312
  8458  002F58                     l312:
  8459  002F58  0012               	return		;funcret
  8460  002F5A                     __end_of_BusySensorAcq:
  8461                           	opt stack 0
  8462                           tblptru	equ	0xFF8
  8463                           tblptrh	equ	0xFF7
  8464                           tblptrl	equ	0xFF6
  8465                           tablat	equ	0xFF5
  8466                           prodh	equ	0xFF4
  8467                           prodl	equ	0xFF3
  8468                           intcon	equ	0xFF2
  8469                           intcon2	equ	0xFF1
  8470                           postinc0	equ	0xFEE
  8471                           wreg	equ	0xFE8
  8472                           indf2	equ	0xFDF
  8473                           postinc2	equ	0xFDE
  8474                           postdec2	equ	0xFDD
  8475                           fsr2h	equ	0xFDA
  8476                           fsr2l	equ	0xFD9
  8477                           status	equ	0xFD8
  8478                           
  8479 ;; *************** function _CalculateSensorError *****************
  8480 ;; Defined at:
  8481 ;;		line 384 in file "FastBuggy17_Main_Code.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  sum             2    0[BANK0 ] PTR const unsigned char 
  8484 ;;		 -> main@sensor_sum(1), 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  2    0[BANK0 ] int 
  8489 ;; Registers used:
  8490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;Total ram usage:        2 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    6
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text62
  8511  00251A                     __ptext62:
  8512                           	opt stack 0
  8513  00251A                     _CalculateSensorError:
  8514                           	opt stack 24
  8515                           
  8516                           ;FastBuggy17_Main_Code.c: 386: switch(*sum) {
  8517                           
  8518                           ;incstack = 0
  8519  00251A  D031               	goto	l4336
  8520  00251C                     l4302:
  8521                           
  8522                           ;FastBuggy17_Main_Code.c: 388: return(16);
  8523  00251C  0E00               	movlw	0
  8524  00251E  0100               	movlb	0	; () banked
  8525  002520  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8526  002522  0E10               	movlw	16
  8527  002524  D051               	goto	L20
  8528                           
  8529                           ; BSR set to: 0
  8530  002526  D052               	goto	l341
  8531  002528                     l4306:
  8532                           
  8533                           ;FastBuggy17_Main_Code.c: 390: return(9);
  8534  002528  0E00               	movlw	0
  8535  00252A  0100               	movlb	0	; () banked
  8536  00252C  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8537  00252E  0E09               	movlw	9
  8538  002530  D04B               	goto	L20
  8539                           
  8540                           ; BSR set to: 0
  8541  002532  D04C               	goto	l341
  8542  002534                     l4310:
  8543                           
  8544                           ;FastBuggy17_Main_Code.c: 392: return(4);
  8545  002534  0E00               	movlw	0
  8546  002536  0100               	movlb	0	; () banked
  8547  002538  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8548  00253A  0E04               	movlw	4
  8549  00253C  D045               	goto	L20
  8550                           
  8551                           ; BSR set to: 0
  8552  00253E  D046               	goto	l341
  8553  002540                     l4314:
  8554                           
  8555                           ;FastBuggy17_Main_Code.c: 394: return(1);
  8556  002540  0E00               	movlw	0
  8557  002542  0100               	movlb	0	; () banked
  8558  002544  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8559  002546  0E01               	movlw	1
  8560  002548  D03F               	goto	L20
  8561                           
  8562                           ; BSR set to: 0
  8563  00254A  D040               	goto	l341
  8564                           
  8565                           ; BSR set to: 0
  8566                           
  8567                           ;FastBuggy17_Main_Code.c: 395: case(4) :
  8568  00254C  D039               	goto	l4338
  8569                           
  8570                           ; BSR set to: 0
  8571                           
  8572                           ;FastBuggy17_Main_Code.c: 396: return(0);
  8573  00254E  D03E               	goto	l341
  8574  002550                     l346:
  8575                           
  8576                           ;FastBuggy17_Main_Code.c: 398: return(-1);
  8577  002550  0100               	movlb	0	; () banked
  8578  002552  6960               	setf	?_CalculateSensorError& (0+255),b
  8579  002554  6961               	setf	(?_CalculateSensorError+1)& (0+255),b
  8580  002556  D03A               	goto	l341
  8581  002558                     l4322:
  8582                           
  8583                           ;FastBuggy17_Main_Code.c: 400: return(-4);
  8584  002558  0EFF               	movlw	255
  8585  00255A  0100               	movlb	0	; () banked
  8586  00255C  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8587  00255E  0EFC               	movlw	252
  8588  002560  D033               	goto	L20
  8589                           
  8590                           ; BSR set to: 0
  8591  002562  D034               	goto	l341
  8592  002564                     l4326:
  8593                           
  8594                           ;FastBuggy17_Main_Code.c: 402: return(-9);
  8595  002564  0EFF               	movlw	255
  8596  002566  0100               	movlb	0	; () banked
  8597  002568  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8598  00256A  0EF7               	movlw	247
  8599  00256C  D02D               	goto	L20
  8600                           
  8601                           ; BSR set to: 0
  8602  00256E  D02E               	goto	l341
  8603  002570                     l4330:
  8604                           
  8605                           ;FastBuggy17_Main_Code.c: 404: return(-16);
  8606  002570  0EFF               	movlw	255
  8607  002572  0100               	movlb	0	; () banked
  8608  002574  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8609  002576  0EF0               	movlw	240
  8610  002578  D027               	goto	L20
  8611                           
  8612                           ; BSR set to: 0
  8613  00257A  D028               	goto	l341
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;FastBuggy17_Main_Code.c: 407: }
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;FastBuggy17_Main_Code.c: 406: break;
  8620                           
  8621                           ;FastBuggy17_Main_Code.c: 405: default :
  8622  00257C  D021               	goto	l4338
  8623  00257E                     l4336:
  8624  00257E  C060  FFD9         	movff	CalculateSensorError@sum,fsr2l
  8625  002582  C061  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
  8626  002586  50DF               	movf	indf2,w,c
  8627                           
  8628                           ; Switch size 1, requested type "space"
  8629                           ; Number of cases is 9, Range of values is 1 to 24
  8630                           ; switch strategies available:
  8631                           ; Name         Instructions Cycles
  8632                           ; simple_byte           28    15 (average)
  8633                           ;	Chosen strategy is simple_byte
  8634  002588  0A01               	xorlw	1	; case 1
  8635  00258A  B4D8               	btfsc	status,2,c
  8636  00258C  D7F1               	goto	l4330
  8637  00258E  0A03               	xorlw	3	; case 2
  8638  002590  B4D8               	btfsc	status,2,c
  8639  002592  D7E2               	goto	l4322
  8640  002594  0A01               	xorlw	1	; case 3
  8641  002596  B4D8               	btfsc	status,2,c
  8642  002598  D7E5               	goto	l4326
  8643  00259A  0A07               	xorlw	7	; case 4
  8644  00259C  B4D8               	btfsc	status,2,c
  8645  00259E  D010               	goto	l4338
  8646  0025A0  0A02               	xorlw	2	; case 6
  8647  0025A2  B4D8               	btfsc	status,2,c
  8648  0025A4  D7D5               	goto	l346
  8649  0025A6  0A0E               	xorlw	14	; case 8
  8650  0025A8  B4D8               	btfsc	status,2,c
  8651  0025AA  D7C4               	goto	l4310
  8652  0025AC  0A04               	xorlw	4	; case 12
  8653  0025AE  B4D8               	btfsc	status,2,c
  8654  0025B0  D7C7               	goto	l4314
  8655  0025B2  0A1C               	xorlw	28	; case 16
  8656  0025B4  B4D8               	btfsc	status,2,c
  8657  0025B6  D7B2               	goto	l4302
  8658  0025B8  0A08               	xorlw	8	; case 24
  8659  0025BA  B4D8               	btfsc	status,2,c
  8660  0025BC  D7B5               	goto	l4306
  8661  0025BE  D000               	goto	l4338
  8662  0025C0                     l4338:
  8663                           
  8664                           ;FastBuggy17_Main_Code.c: 409: return(0);
  8665  0025C0  0E00               	movlw	0
  8666  0025C2  0100               	movlb	0	; () banked
  8667  0025C4  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  8668  0025C6  0E00               	movlw	0
  8669  0025C8                     L20:
  8670  0025C8  6F60               	movwf	?_CalculateSensorError& (0+255),b
  8671  0025CA  D000               	goto	l341
  8672  0025CC                     l341:
  8673                           
  8674                           ; BSR set to: 0
  8675  0025CC  0012               	return		;funcret
  8676  0025CE                     __end_of_CalculateSensorError:
  8677                           	opt stack 0
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           intcon2	equ	0xFF1
  8686                           postinc0	equ	0xFEE
  8687                           wreg	equ	0xFE8
  8688                           indf2	equ	0xFDF
  8689                           postinc2	equ	0xFDE
  8690                           postdec2	equ	0xFDD
  8691                           fsr2h	equ	0xFDA
  8692                           fsr2l	equ	0xFD9
  8693                           status	equ	0xFD8
  8694                           
  8695 ;; *************** function _BusyDistanceAcq *****************
  8696 ;; Defined at:
  8697 ;;		line 41 in file "Ultrasound.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;		None
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      unsigned char 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;Total ram usage:        0 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:    6
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_main
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text63
  8726  002F5A                     __ptext63:
  8727                           	opt stack 0
  8728  002F5A                     _BusyDistanceAcq:
  8729                           	opt stack 24
  8730                           
  8731                           ;Ultrasound.c: 43: return (!echo_acq_done);
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;incstack = 0
  8735  002F5A  503C               	movf	_echo_acq_done,w,c
  8736  002F5C  A4D8               	btfss	status,2,c
  8737  002F5E  D002               	goto	u3790
  8738  002F60  0E01               	movlw	1
  8739  002F62  D002               	goto	l34
  8740  002F64                     u3790:
  8741  002F64  0E00               	movlw	0
  8742  002F66  D000               	goto	l34
  8743  002F68                     l34:
  8744  002F68  0012               	return		;funcret
  8745  002F6A                     __end_of_BusyDistanceAcq:
  8746                           	opt stack 0
  8747                           tblptru	equ	0xFF8
  8748                           tblptrh	equ	0xFF7
  8749                           tblptrl	equ	0xFF6
  8750                           tablat	equ	0xFF5
  8751                           prodh	equ	0xFF4
  8752                           prodl	equ	0xFF3
  8753                           intcon	equ	0xFF2
  8754                           intcon2	equ	0xFF1
  8755                           postinc0	equ	0xFEE
  8756                           wreg	equ	0xFE8
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           fsr2h	equ	0xFDA
  8761                           fsr2l	equ	0xFD9
  8762                           status	equ	0xFD8
  8763                           
  8764 ;; *************** function _isrLP *****************
  8765 ;; Defined at:
  8766 ;;		line 533 in file "FastBuggy17_Main_Code.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;		None               void
  8773 ;; Registers used:
  8774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;Total ram usage:       17 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    5
  8787 ;; This function calls:
  8788 ;;		_ReadADC
  8789 ;;		i1_ConvertADC
  8790 ;;		i1_SetADCChannel
  8791 ;; This function is called by:
  8792 ;;		Interrupt level 1
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	intcodelo
  8797  000018                     __pintcodelo:
  8798                           	opt stack 0
  8799  000018                     _isrLP:
  8800                           	opt stack 18
  8801                           
  8802                           ;incstack = 0
  8803  000018  CFD8 F005          	movff	status,??_isrLP
  8804  00001C  CFE8 F006          	movff	wreg,??_isrLP+1
  8805  000020  CFE0 F007          	movff	bsr,??_isrLP+2
  8806  000024  CFFA F008          	movff	pclath,??_isrLP+3
  8807  000028  CFFB F009          	movff	pclatu,??_isrLP+4
  8808  00002C  CFE9 F00A          	movff	fsr0l,??_isrLP+5
  8809  000030  CFEA F00B          	movff	fsr0h,??_isrLP+6
  8810  000034  CFE1 F00C          	movff	fsr1l,??_isrLP+7
  8811  000038  CFE2 F00D          	movff	fsr1h,??_isrLP+8
  8812  00003C  CFD9 F00E          	movff	fsr2l,??_isrLP+9
  8813  000040  CFDA F00F          	movff	fsr2h,??_isrLP+10
  8814  000044  CFF3 F010          	movff	prodl,??_isrLP+11
  8815  000048  CFF4 F011          	movff	prodh,??_isrLP+12
  8816  00004C  CFF6 F012          	movff	tblptrl,??_isrLP+13
  8817  000050  CFF7 F013          	movff	tblptrh,??_isrLP+14
  8818  000054  CFF8 F014          	movff	tblptru,??_isrLP+15
  8819  000058  CFF5 F015          	movff	tablat,??_isrLP+16
  8820                           
  8821                           ;FastBuggy17_Main_Code.c: 548: if (PIR1bits.ADIF == 1) {
  8822  00005C  AC9E               	btfss	3998,6,c	;volatile
  8823  00005E  D01D               	goto	i1l396
  8824                           
  8825                           ;FastBuggy17_Main_Code.c: 549: PIR1bits.ADIF = 0;
  8826  000060  9C9E               	bcf	3998,6,c	;volatile
  8827                           
  8828                           ;FastBuggy17_Main_Code.c: 550: if (sensor_acq_index < 5) {
  8829  000062  0E05               	movlw	5
  8830  000064  6040               	cpfslt	_sensor_acq_index,c	;volatile
  8831  000066  D015               	goto	i1l3480
  8832                           
  8833                           ;FastBuggy17_Main_Code.c: 551: *(sensor_readings_raw + sensor_acq_index) = ReadADC();
  8834  000068  ECB5  F017         	call	_ReadADC	;wreg free
  8835  00006C  5040               	movf	_sensor_acq_index,w,c	;volatile
  8836  00006E  0D02               	mullw	2
  8837  000070  0E28               	movlw	low _sensor_readings_raw
  8838  000072  24F3               	addwf	prodl,w,c
  8839  000074  6ED9               	movwf	fsr2l,c
  8840  000076  0E00               	movlw	high _sensor_readings_raw
  8841  000078  20F4               	addwfc	prodh,w,c
  8842  00007A  6EDA               	movwf	fsr2h,c
  8843  00007C  C001  FFDE         	movff	?_ReadADC,postinc2
  8844  000080  C002  FFDD         	movff	?_ReadADC+1,postdec2
  8845                           
  8846                           ;FastBuggy17_Main_Code.c: 552: sensor_acq_index++;
  8847  000084  2A40               	incf	_sensor_acq_index,f,c	;volatile
  8848                           
  8849                           ;FastBuggy17_Main_Code.c: 553: SetADCChannel(sensor_acq_index);
  8850  000086  5040               	movf	_sensor_acq_index,w,c	;volatile
  8851  000088  ECB1  F011         	call	i1_SetADCChannel
  8852                           
  8853                           ;FastBuggy17_Main_Code.c: 554: ConvertADC();
  8854  00008C  ECE8  F017         	call	i1_ConvertADC	;wreg free
  8855                           
  8856                           ;FastBuggy17_Main_Code.c: 555: } else {
  8857  000090  D004               	goto	i1l396
  8858  000092                     i1l3480:
  8859                           
  8860                           ;FastBuggy17_Main_Code.c: 556: sensor_acq_done = 1;
  8861  000092  0E01               	movlw	1
  8862  000094  6E3F               	movwf	_sensor_acq_done,c	;volatile
  8863                           
  8864                           ;FastBuggy17_Main_Code.c: 557: PIE1bits.ADIE = 0;
  8865  000096  9C9D               	bcf	3997,6,c	;volatile
  8866  000098  D000               	goto	i1l396
  8867  00009A                     i1l396:
  8868  00009A  C015  FFF5         	movff	??_isrLP+16,tablat
  8869  00009E  C014  FFF8         	movff	??_isrLP+15,tblptru
  8870  0000A2  C013  FFF7         	movff	??_isrLP+14,tblptrh
  8871  0000A6  C012  FFF6         	movff	??_isrLP+13,tblptrl
  8872  0000AA  C011  FFF4         	movff	??_isrLP+12,prodh
  8873  0000AE  C010  FFF3         	movff	??_isrLP+11,prodl
  8874  0000B2  C00F  FFDA         	movff	??_isrLP+10,fsr2h
  8875  0000B6  C00E  FFD9         	movff	??_isrLP+9,fsr2l
  8876  0000BA  C00D  FFE2         	movff	??_isrLP+8,fsr1h
  8877  0000BE  C00C  FFE1         	movff	??_isrLP+7,fsr1l
  8878  0000C2  C00B  FFEA         	movff	??_isrLP+6,fsr0h
  8879  0000C6  C00A  FFE9         	movff	??_isrLP+5,fsr0l
  8880  0000CA  C009  FFFB         	movff	??_isrLP+4,pclatu
  8881  0000CE  C008  FFFA         	movff	??_isrLP+3,pclath
  8882  0000D2  C007  FFE0         	movff	??_isrLP+2,bsr
  8883  0000D6  C006  FFE8         	movff	??_isrLP+1,wreg
  8884  0000DA  C005  FFD8         	movff	??_isrLP,status
  8885  0000DE  0010               	retfie	
  8886  0000E0                     __end_of_isrLP:
  8887                           	opt stack 0
  8888                           pclatu	equ	0xFFB
  8889                           pclath	equ	0xFFA
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           intcon	equ	0xFF2
  8897                           intcon2	equ	0xFF1
  8898                           postinc0	equ	0xFEE
  8899                           fsr0h	equ	0xFEA
  8900                           fsr0l	equ	0xFE9
  8901                           wreg	equ	0xFE8
  8902                           fsr1h	equ	0xFE2
  8903                           fsr1l	equ	0xFE1
  8904                           bsr	equ	0xFE0
  8905                           indf2	equ	0xFDF
  8906                           postinc2	equ	0xFDE
  8907                           postdec2	equ	0xFDD
  8908                           fsr2h	equ	0xFDA
  8909                           fsr2l	equ	0xFD9
  8910                           status	equ	0xFD8
  8911                           
  8912 ;; *************** function i1_SetADCChannel *****************
  8913 ;; Defined at:
  8914 ;;		line 249 in file "FastBuggy17_Main_Code.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  channel         1    wreg     unsigned char 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  channel         1    2[COMRAM] unsigned char 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;		None               void
  8921 ;; Registers used:
  8922 ;;		wreg, status,2, status,0, cstack
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;Total ram usage:        1 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    4
  8935 ;; This function calls:
  8936 ;;		i1_SetChanADC
  8937 ;; This function is called by:
  8938 ;;		_isrLP
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text65
  8943  002362                     __ptext65:
  8944                           	opt stack 0
  8945  002362                     i1_SetADCChannel:
  8946                           	opt stack 18
  8947                           
  8948                           ;incstack = 0
  8949                           ;i1SetADCChannel@channel stored from wreg
  8950  002362  6E03               	movwf	i1SetADCChannel@channel,c
  8951                           
  8952                           ;FastBuggy17_Main_Code.c: 251: switch (channel) {
  8953  002364  D040               	goto	i1l3434
  8954  002366                     i1l3400:
  8955                           
  8956                           ;FastBuggy17_Main_Code.c: 253: SetChanADC(0b10000111);
  8957  002366  0E87               	movlw	135
  8958  002368  EC40  F017         	call	i1_SetChanADC
  8959                           
  8960                           ;FastBuggy17_Main_Code.c: 254: break;
  8961  00236C  D06E               	goto	i1l306
  8962  00236E                     i1l3402:
  8963                           
  8964                           ;FastBuggy17_Main_Code.c: 256: SetChanADC(0b10001111);
  8965  00236E  0E8F               	movlw	143
  8966  002370  EC40  F017         	call	i1_SetChanADC
  8967                           
  8968                           ;FastBuggy17_Main_Code.c: 257: break;
  8969  002374  D06A               	goto	i1l306
  8970  002376                     i1l3404:
  8971                           
  8972                           ;FastBuggy17_Main_Code.c: 259: SetChanADC(0b10010111);
  8973  002376  0E97               	movlw	151
  8974  002378  EC40  F017         	call	i1_SetChanADC
  8975                           
  8976                           ;FastBuggy17_Main_Code.c: 260: break;
  8977  00237C  D066               	goto	i1l306
  8978  00237E                     i1l3406:
  8979                           
  8980                           ;FastBuggy17_Main_Code.c: 262: SetChanADC(0b10011111);
  8981  00237E  0E9F               	movlw	159
  8982  002380  EC40  F017         	call	i1_SetChanADC
  8983                           
  8984                           ;FastBuggy17_Main_Code.c: 263: break;
  8985  002384  D062               	goto	i1l306
  8986  002386                     i1l3408:
  8987                           
  8988                           ;FastBuggy17_Main_Code.c: 265: SetChanADC(0b10100111);
  8989  002386  0EA7               	movlw	167
  8990  002388  EC40  F017         	call	i1_SetChanADC
  8991                           
  8992                           ;FastBuggy17_Main_Code.c: 266: break;
  8993  00238C  D05E               	goto	i1l306
  8994  00238E                     i1l3410:
  8995                           
  8996                           ;FastBuggy17_Main_Code.c: 268: SetChanADC(0b10101111);
  8997  00238E  0EAF               	movlw	175
  8998  002390  EC40  F017         	call	i1_SetChanADC
  8999                           
  9000                           ;FastBuggy17_Main_Code.c: 269: break;
  9001  002394  D05A               	goto	i1l306
  9002  002396                     i1l3412:
  9003                           
  9004                           ;FastBuggy17_Main_Code.c: 271: SetChanADC(0b10110111);
  9005  002396  0EB7               	movlw	183
  9006  002398  EC40  F017         	call	i1_SetChanADC
  9007                           
  9008                           ;FastBuggy17_Main_Code.c: 272: break;
  9009  00239C  D056               	goto	i1l306
  9010  00239E                     i1l3414:
  9011                           
  9012                           ;FastBuggy17_Main_Code.c: 274: SetChanADC(0b10111111);
  9013  00239E  0EBF               	movlw	191
  9014  0023A0  EC40  F017         	call	i1_SetChanADC
  9015                           
  9016                           ;FastBuggy17_Main_Code.c: 275: break;
  9017  0023A4  D052               	goto	i1l306
  9018  0023A6                     i1l3416:
  9019                           
  9020                           ;FastBuggy17_Main_Code.c: 277: SetChanADC(0b11000111);
  9021  0023A6  0EC7               	movlw	199
  9022  0023A8  EC40  F017         	call	i1_SetChanADC
  9023                           
  9024                           ;FastBuggy17_Main_Code.c: 278: break;
  9025  0023AC  D04E               	goto	i1l306
  9026  0023AE                     i1l3418:
  9027                           
  9028                           ;FastBuggy17_Main_Code.c: 280: SetChanADC(0b11001111);
  9029  0023AE  0ECF               	movlw	207
  9030  0023B0  EC40  F017         	call	i1_SetChanADC
  9031                           
  9032                           ;FastBuggy17_Main_Code.c: 281: break;
  9033  0023B4  D04A               	goto	i1l306
  9034  0023B6                     i1l3420:
  9035                           
  9036                           ;FastBuggy17_Main_Code.c: 283: SetChanADC(0b11010111);
  9037  0023B6  0ED7               	movlw	215
  9038  0023B8  EC40  F017         	call	i1_SetChanADC
  9039                           
  9040                           ;FastBuggy17_Main_Code.c: 284: break;
  9041  0023BC  D046               	goto	i1l306
  9042  0023BE                     i1l3422:
  9043                           
  9044                           ;FastBuggy17_Main_Code.c: 286: SetChanADC(0b11011111);
  9045  0023BE  0EDF               	movlw	223
  9046  0023C0  EC40  F017         	call	i1_SetChanADC
  9047                           
  9048                           ;FastBuggy17_Main_Code.c: 287: break;
  9049  0023C4  D042               	goto	i1l306
  9050  0023C6                     i1l3424:
  9051                           
  9052                           ;FastBuggy17_Main_Code.c: 289: SetChanADC(0b11100111);
  9053  0023C6  0EE7               	movlw	231
  9054  0023C8  EC40  F017         	call	i1_SetChanADC
  9055                           
  9056                           ;FastBuggy17_Main_Code.c: 290: break;
  9057  0023CC  D03E               	goto	i1l306
  9058  0023CE                     i1l3426:
  9059                           
  9060                           ;FastBuggy17_Main_Code.c: 292: SetChanADC(0b11101111);
  9061  0023CE  0EEF               	movlw	239
  9062  0023D0  EC40  F017         	call	i1_SetChanADC
  9063                           
  9064                           ;FastBuggy17_Main_Code.c: 293: break;
  9065  0023D4  D03A               	goto	i1l306
  9066  0023D6                     i1l3428:
  9067                           
  9068                           ;FastBuggy17_Main_Code.c: 295: SetChanADC(0b11110111);
  9069  0023D6  0EF7               	movlw	247
  9070  0023D8  EC40  F017         	call	i1_SetChanADC
  9071                           
  9072                           ;FastBuggy17_Main_Code.c: 296: break;
  9073  0023DC  D036               	goto	i1l306
  9074  0023DE                     i1l3430:
  9075                           
  9076                           ;FastBuggy17_Main_Code.c: 298: SetChanADC(0b11111111);
  9077  0023DE  0EFF               	movlw	255
  9078  0023E0  EC40  F017         	call	i1_SetChanADC
  9079                           
  9080                           ;FastBuggy17_Main_Code.c: 302: }
  9081                           
  9082                           ;FastBuggy17_Main_Code.c: 301: break;
  9083                           
  9084                           ;FastBuggy17_Main_Code.c: 300: default:
  9085                           
  9086                           ;FastBuggy17_Main_Code.c: 299: break;
  9087  0023E4  D032               	goto	i1l306
  9088  0023E6                     i1l3434:
  9089  0023E6  5003               	movf	i1SetADCChannel@channel,w,c
  9090                           
  9091                           ; Switch size 1, requested type "space"
  9092                           ; Number of cases is 16, Range of values is 0 to 15
  9093                           ; switch strategies available:
  9094                           ; Name         Instructions Cycles
  9095                           ; simple_byte           49    25 (average)
  9096                           ;	Chosen strategy is simple_byte
  9097  0023E8  0A00               	xorlw	0	; case 0
  9098  0023EA  B4D8               	btfsc	status,2,c
  9099  0023EC  D7BC               	goto	i1l3400
  9100  0023EE  0A01               	xorlw	1	; case 1
  9101  0023F0  B4D8               	btfsc	status,2,c
  9102  0023F2  D7BD               	goto	i1l3402
  9103  0023F4  0A03               	xorlw	3	; case 2
  9104  0023F6  B4D8               	btfsc	status,2,c
  9105  0023F8  D7BE               	goto	i1l3404
  9106  0023FA  0A01               	xorlw	1	; case 3
  9107  0023FC  B4D8               	btfsc	status,2,c
  9108  0023FE  D7BF               	goto	i1l3406
  9109  002400  0A07               	xorlw	7	; case 4
  9110  002402  B4D8               	btfsc	status,2,c
  9111  002404  D7C0               	goto	i1l3408
  9112  002406  0A01               	xorlw	1	; case 5
  9113  002408  B4D8               	btfsc	status,2,c
  9114  00240A  D7C1               	goto	i1l3410
  9115  00240C  0A03               	xorlw	3	; case 6
  9116  00240E  B4D8               	btfsc	status,2,c
  9117  002410  D7C2               	goto	i1l3412
  9118  002412  0A01               	xorlw	1	; case 7
  9119  002414  B4D8               	btfsc	status,2,c
  9120  002416  D7C3               	goto	i1l3414
  9121  002418  0A0F               	xorlw	15	; case 8
  9122  00241A  B4D8               	btfsc	status,2,c
  9123  00241C  D7C4               	goto	i1l3416
  9124  00241E  0A01               	xorlw	1	; case 9
  9125  002420  B4D8               	btfsc	status,2,c
  9126  002422  D7C5               	goto	i1l3418
  9127  002424  0A03               	xorlw	3	; case 10
  9128  002426  B4D8               	btfsc	status,2,c
  9129  002428  D7C6               	goto	i1l3420
  9130  00242A  0A01               	xorlw	1	; case 11
  9131  00242C  B4D8               	btfsc	status,2,c
  9132  00242E  D7C7               	goto	i1l3422
  9133  002430  0A07               	xorlw	7	; case 12
  9134  002432  B4D8               	btfsc	status,2,c
  9135  002434  D7C8               	goto	i1l3424
  9136  002436  0A01               	xorlw	1	; case 13
  9137  002438  B4D8               	btfsc	status,2,c
  9138  00243A  D7C9               	goto	i1l3426
  9139  00243C  0A03               	xorlw	3	; case 14
  9140  00243E  B4D8               	btfsc	status,2,c
  9141  002440  D7CA               	goto	i1l3428
  9142  002442  0A01               	xorlw	1	; case 15
  9143  002444  B4D8               	btfsc	status,2,c
  9144  002446  D7CB               	goto	i1l3430
  9145  002448  D000               	goto	i1l306
  9146  00244A                     i1l306:
  9147  00244A  0012               	return		;funcret
  9148  00244C                     __end_ofi1_SetADCChannel:
  9149                           	opt stack 0
  9150                           pclatu	equ	0xFFB
  9151                           pclath	equ	0xFFA
  9152                           tblptru	equ	0xFF8
  9153                           tblptrh	equ	0xFF7
  9154                           tblptrl	equ	0xFF6
  9155                           tablat	equ	0xFF5
  9156                           prodh	equ	0xFF4
  9157                           prodl	equ	0xFF3
  9158                           intcon	equ	0xFF2
  9159                           intcon2	equ	0xFF1
  9160                           postinc0	equ	0xFEE
  9161                           fsr0h	equ	0xFEA
  9162                           fsr0l	equ	0xFE9
  9163                           wreg	equ	0xFE8
  9164                           fsr1h	equ	0xFE2
  9165                           fsr1l	equ	0xFE1
  9166                           bsr	equ	0xFE0
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           postdec2	equ	0xFDD
  9170                           fsr2h	equ	0xFDA
  9171                           fsr2l	equ	0xFD9
  9172                           status	equ	0xFD8
  9173                           
  9174 ;; *************** function i1_SetChanADC *****************
  9175 ;; Defined at:
  9176 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  channel         1    wreg     unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  channel         1    1[COMRAM] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;		None               void
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;Total ram usage:        2 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    3
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		i1_SetADCChannel
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text66
  9205  002E80                     __ptext66:
  9206                           	opt stack 0
  9207  002E80                     i1_SetChanADC:
  9208                           	opt stack 18
  9209                           
  9210                           ;incstack = 0
  9211                           ;i1SetChanADC@channel stored from wreg
  9212  002E80  6E02               	movwf	i1SetChanADC@channel,c
  9213  002E82  CFC2 F001          	movff	4034,??i1_SetChanADC	;volatile
  9214  002E86  0EC3               	movlw	195
  9215  002E88  1601               	andwf	??i1_SetChanADC,f,c
  9216  002E8A  90D8               	bcf	status,0,c
  9217  002E8C  3002               	rrcf	i1SetChanADC@channel,w,c
  9218  002E8E  0B3C               	andlw	60
  9219  002E90  1001               	iorwf	??i1_SetChanADC,w,c
  9220  002E92  6EC2               	movwf	4034,c	;volatile
  9221  002E94  0012               	return		;funcret
  9222  002E96                     __end_ofi1_SetChanADC:
  9223                           	opt stack 0
  9224                           pclatu	equ	0xFFB
  9225                           pclath	equ	0xFFA
  9226                           tblptru	equ	0xFF8
  9227                           tblptrh	equ	0xFF7
  9228                           tblptrl	equ	0xFF6
  9229                           tablat	equ	0xFF5
  9230                           prodh	equ	0xFF4
  9231                           prodl	equ	0xFF3
  9232                           intcon	equ	0xFF2
  9233                           intcon2	equ	0xFF1
  9234                           postinc0	equ	0xFEE
  9235                           fsr0h	equ	0xFEA
  9236                           fsr0l	equ	0xFE9
  9237                           wreg	equ	0xFE8
  9238                           fsr1h	equ	0xFE2
  9239                           fsr1l	equ	0xFE1
  9240                           bsr	equ	0xFE0
  9241                           indf2	equ	0xFDF
  9242                           postinc2	equ	0xFDE
  9243                           postdec2	equ	0xFDD
  9244                           fsr2h	equ	0xFDA
  9245                           fsr2l	equ	0xFD9
  9246                           status	equ	0xFD8
  9247                           
  9248 ;; *************** function i1_ConvertADC *****************
  9249 ;; Defined at:
  9250 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;		None               void
  9257 ;; Registers used:
  9258 ;;		None
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    3
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_isrLP
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           	psect	text67
  9279  002FD0                     __ptext67:
  9280                           	opt stack 0
  9281  002FD0                     i1_ConvertADC:
  9282                           	opt stack 19
  9283                           
  9284                           ;incstack = 0
  9285  002FD0  82C2               	bsf	4034,1,c	;volatile
  9286  002FD2  0012               	return		;funcret
  9287  002FD4                     __end_ofi1_ConvertADC:
  9288                           	opt stack 0
  9289                           pclatu	equ	0xFFB
  9290                           pclath	equ	0xFFA
  9291                           tblptru	equ	0xFF8
  9292                           tblptrh	equ	0xFF7
  9293                           tblptrl	equ	0xFF6
  9294                           tablat	equ	0xFF5
  9295                           prodh	equ	0xFF4
  9296                           prodl	equ	0xFF3
  9297                           intcon	equ	0xFF2
  9298                           intcon2	equ	0xFF1
  9299                           postinc0	equ	0xFEE
  9300                           fsr0h	equ	0xFEA
  9301                           fsr0l	equ	0xFE9
  9302                           wreg	equ	0xFE8
  9303                           fsr1h	equ	0xFE2
  9304                           fsr1l	equ	0xFE1
  9305                           bsr	equ	0xFE0
  9306                           indf2	equ	0xFDF
  9307                           postinc2	equ	0xFDE
  9308                           postdec2	equ	0xFDD
  9309                           fsr2h	equ	0xFDA
  9310                           fsr2l	equ	0xFD9
  9311                           status	equ	0xFD8
  9312                           
  9313 ;; *************** function _ReadADC *****************
  9314 ;; Defined at:
  9315 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;		None
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;		None
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  2    0[COMRAM] int 
  9322 ;; Registers used:
  9323 ;;		wreg, status,2
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;Total ram usage:        4 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:    3
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_isrLP
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text68
  9344  002F6A                     __ptext68:
  9345                           	opt stack 0
  9346  002F6A                     _ReadADC:
  9347                           	opt stack 19
  9348                           
  9349                           ;incstack = 0
  9350  002F6A  50C4               	movf	4036,w,c	;volatile
  9351  002F6C  6E03               	movwf	??_ReadADC& (0+255),c
  9352  002F6E  50C3               	movf	4035,w,c	;volatile
  9353  002F70  6E01               	movwf	?_ReadADC,c
  9354  002F72  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  9355  002F76  D000               	goto	i1l455
  9356  002F78                     i1l455:
  9357  002F78  0012               	return		;funcret
  9358  002F7A                     __end_of_ReadADC:
  9359                           	opt stack 0
  9360                           pclatu	equ	0xFFB
  9361                           pclath	equ	0xFFA
  9362                           tblptru	equ	0xFF8
  9363                           tblptrh	equ	0xFF7
  9364                           tblptrl	equ	0xFF6
  9365                           tablat	equ	0xFF5
  9366                           prodh	equ	0xFF4
  9367                           prodl	equ	0xFF3
  9368                           intcon	equ	0xFF2
  9369                           intcon2	equ	0xFF1
  9370                           postinc0	equ	0xFEE
  9371                           fsr0h	equ	0xFEA
  9372                           fsr0l	equ	0xFE9
  9373                           wreg	equ	0xFE8
  9374                           fsr1h	equ	0xFE2
  9375                           fsr1l	equ	0xFE1
  9376                           bsr	equ	0xFE0
  9377                           indf2	equ	0xFDF
  9378                           postinc2	equ	0xFDE
  9379                           postdec2	equ	0xFDD
  9380                           fsr2h	equ	0xFDA
  9381                           fsr2l	equ	0xFD9
  9382                           status	equ	0xFD8
  9383                           
  9384 ;; *************** function _isrHP *****************
  9385 ;; Defined at:
  9386 ;;		line 512 in file "FastBuggy17_Main_Code.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;		None               void
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;Total ram usage:       14 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    2
  9407 ;; This function calls:
  9408 ;;		_MillisecondTimerISR
  9409 ;;		_UltrasoundISR
  9410 ;; This function is called by:
  9411 ;;		Interrupt level 2
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	intcode
  9416  000008                     __pintcode:
  9417                           	opt stack 0
  9418  000008                     _isrHP:
  9419                           	opt stack 18
  9420                           
  9421                           ;incstack = 0
  9422  000008  CFFA F01A          	movff	pclath,??_isrHP
  9423  00000C  CFFB F01B          	movff	pclatu,??_isrHP+1
  9424  000010  CFE9 F01C          	movff	fsr0l,??_isrHP+2
  9425  000014  ED61  F014         	call	int_func,f	;refresh shadow registers
  9426                           pclatu	equ	0xFFB
  9427                           pclath	equ	0xFFA
  9428                           tblptru	equ	0xFF8
  9429                           tblptrh	equ	0xFF7
  9430                           tblptrl	equ	0xFF6
  9431                           tablat	equ	0xFF5
  9432                           prodh	equ	0xFF4
  9433                           prodl	equ	0xFF3
  9434                           intcon	equ	0xFF2
  9435                           intcon2	equ	0xFF1
  9436                           postinc0	equ	0xFEE
  9437                           fsr0h	equ	0xFEA
  9438                           fsr0l	equ	0xFE9
  9439                           wreg	equ	0xFE8
  9440                           fsr1h	equ	0xFE2
  9441                           fsr1l	equ	0xFE1
  9442                           bsr	equ	0xFE0
  9443                           indf2	equ	0xFDF
  9444                           postinc2	equ	0xFDE
  9445                           postdec2	equ	0xFDD
  9446                           fsr2h	equ	0xFDA
  9447                           fsr2l	equ	0xFD9
  9448                           status	equ	0xFD8
  9449                           
  9450                           	psect	intcode_body
  9451  0028C2                     __pintcode_body:
  9452                           	opt stack 18
  9453  0028C2                     int_func:
  9454                           	opt stack 18
  9455  0028C2  0006               	pop		; remove dummy address from shadow register refresh
  9456  0028C4  CFEA F01D          	movff	fsr0h,??_isrHP+3
  9457  0028C8  CFE1 F01E          	movff	fsr1l,??_isrHP+4
  9458  0028CC  CFE2 F01F          	movff	fsr1h,??_isrHP+5
  9459  0028D0  CFD9 F020          	movff	fsr2l,??_isrHP+6
  9460  0028D4  CFDA F021          	movff	fsr2h,??_isrHP+7
  9461  0028D8  CFF3 F022          	movff	prodl,??_isrHP+8
  9462  0028DC  CFF4 F023          	movff	prodh,??_isrHP+9
  9463  0028E0  CFF6 F024          	movff	tblptrl,??_isrHP+10
  9464  0028E4  CFF7 F025          	movff	tblptrh,??_isrHP+11
  9465  0028E8  CFF8 F026          	movff	tblptru,??_isrHP+12
  9466  0028EC  CFF5 F027          	movff	tablat,??_isrHP+13
  9467                           
  9468                           ;FastBuggy17_Main_Code.c: 515: if (INTCONbits.TMR0IF == 1) {
  9469  0028F0  A4F2               	btfss	intcon,2,c	;volatile
  9470  0028F2  D004               	goto	i2l4418
  9471                           
  9472                           ;FastBuggy17_Main_Code.c: 516: INTCONbits.TMR0IF = 0;
  9473  0028F4  94F2               	bcf	intcon,2,c	;volatile
  9474                           
  9475                           ;FastBuggy17_Main_Code.c: 518: MillisecondTimerISR();
  9476  0028F6  EC83  F017         	call	_MillisecondTimerISR	;wreg free
  9477  0028FA  D000               	goto	i2l4418
  9478  0028FC                     i2l4418:
  9479                           
  9480                           ;FastBuggy17_Main_Code.c: 522: }
  9481                           ;FastBuggy17_Main_Code.c: 525: if (INTCONbits.RBIF == 1) {
  9482  0028FC  A0F2               	btfss	intcon,0,c	;volatile
  9483  0028FE  D003               	goto	i2l390
  9484                           
  9485                           ;FastBuggy17_Main_Code.c: 526: UltrasoundISR();
  9486  002900  EC6A  F016         	call	_UltrasoundISR	;wreg free
  9487  002904  D000               	goto	i2l390
  9488  002906                     i2l390:
  9489  002906  C027  FFF5         	movff	??_isrHP+13,tablat
  9490  00290A  C026  FFF8         	movff	??_isrHP+12,tblptru
  9491  00290E  C025  FFF7         	movff	??_isrHP+11,tblptrh
  9492  002912  C024  FFF6         	movff	??_isrHP+10,tblptrl
  9493  002916  C023  FFF4         	movff	??_isrHP+9,prodh
  9494  00291A  C022  FFF3         	movff	??_isrHP+8,prodl
  9495  00291E  C021  FFDA         	movff	??_isrHP+7,fsr2h
  9496  002922  C020  FFD9         	movff	??_isrHP+6,fsr2l
  9497  002926  C01F  FFE2         	movff	??_isrHP+5,fsr1h
  9498  00292A  C01E  FFE1         	movff	??_isrHP+4,fsr1l
  9499  00292E  C01D  FFEA         	movff	??_isrHP+3,fsr0h
  9500  002932  C01C  FFE9         	movff	??_isrHP+2,fsr0l
  9501  002936  C01B  FFFB         	movff	??_isrHP+1,pclatu
  9502  00293A  C01A  FFFA         	movff	??_isrHP,pclath
  9503  00293E  0011               	retfie		f
  9504  002940                     __end_of_isrHP:
  9505                           	opt stack 0
  9506                           pclatu	equ	0xFFB
  9507                           pclath	equ	0xFFA
  9508                           tblptru	equ	0xFF8
  9509                           tblptrh	equ	0xFF7
  9510                           tblptrl	equ	0xFF6
  9511                           tablat	equ	0xFF5
  9512                           prodh	equ	0xFF4
  9513                           prodl	equ	0xFF3
  9514                           intcon	equ	0xFF2
  9515                           intcon2	equ	0xFF1
  9516                           postinc0	equ	0xFEE
  9517                           fsr0h	equ	0xFEA
  9518                           fsr0l	equ	0xFE9
  9519                           wreg	equ	0xFE8
  9520                           fsr1h	equ	0xFE2
  9521                           fsr1l	equ	0xFE1
  9522                           bsr	equ	0xFE0
  9523                           indf2	equ	0xFDF
  9524                           postinc2	equ	0xFDE
  9525                           postdec2	equ	0xFDD
  9526                           fsr2h	equ	0xFDA
  9527                           fsr2l	equ	0xFD9
  9528                           status	equ	0xFD8
  9529                           
  9530 ;; *************** function _UltrasoundISR *****************
  9531 ;; Defined at:
  9532 ;;		line 15 in file "Ultrasound.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;		None               void
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;Total ram usage:        0 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    1
  9553 ;; This function calls:
  9554 ;;		_WriteTimer1
  9555 ;; This function is called by:
  9556 ;;		_isrHP
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text70
  9561  002CD4                     __ptext70:
  9562                           	opt stack 0
  9563  002CD4                     _UltrasoundISR:
  9564                           	opt stack 18
  9565                           
  9566                           ;Ultrasound.c: 16: INTCONbits.RBIE = 0;
  9567                           
  9568                           ;incstack = 0
  9569  002CD4  96F2               	bcf	intcon,3,c	;volatile
  9570                           
  9571                           ;Ultrasound.c: 17: if (PORTBbits.RB4 == 1) {
  9572  002CD6  A881               	btfss	3969,4,c	;volatile
  9573  002CD8  D008               	goto	i2l3234
  9574                           
  9575                           ;Ultrasound.c: 18: T1CONbits.TMR1ON = 1;
  9576  002CDA  80CD               	bsf	4045,0,c	;volatile
  9577                           
  9578                           ;Ultrasound.c: 19: WriteTimer1(0);
  9579  002CDC  0E00               	movlw	0
  9580  002CDE  6E17               	movwf	WriteTimer1@timer1+1,c
  9581  002CE0  0E00               	movlw	0
  9582  002CE2  6E16               	movwf	WriteTimer1@timer1,c
  9583  002CE4  EC7A  F017         	call	_WriteTimer1	;wreg free
  9584  002CE8  D000               	goto	i2l3234
  9585  002CEA                     i2l3234:
  9586                           
  9587                           ;Ultrasound.c: 20: }
  9588                           ;Ultrasound.c: 21: if (PORTBbits.RB4 == 0) {
  9589  002CEA  B881               	btfsc	3969,4,c	;volatile
  9590  002CEC  D004               	goto	i2l3240
  9591                           
  9592                           ;Ultrasound.c: 22: T1CONbits.TMR1ON = 0;
  9593  002CEE  90CD               	bcf	4045,0,c	;volatile
  9594                           
  9595                           ;Ultrasound.c: 23: echo_acq_done = 1;
  9596  002CF0  0E01               	movlw	1
  9597  002CF2  6E3C               	movwf	_echo_acq_done,c
  9598  002CF4  D000               	goto	i2l3240
  9599  002CF6                     i2l3240:
  9600                           
  9601                           ;Ultrasound.c: 24: }
  9602                           ;Ultrasound.c: 25: INTCONbits.RBIE = 1;
  9603  002CF6  86F2               	bsf	intcon,3,c	;volatile
  9604                           
  9605                           ;Ultrasound.c: 26: INTCONbits.RBIF = 0;
  9606  002CF8  90F2               	bcf	intcon,0,c	;volatile
  9607  002CFA  0012               	return		;funcret
  9608  002CFC                     __end_of_UltrasoundISR:
  9609                           	opt stack 0
  9610                           pclatu	equ	0xFFB
  9611                           pclath	equ	0xFFA
  9612                           tblptru	equ	0xFF8
  9613                           tblptrh	equ	0xFF7
  9614                           tblptrl	equ	0xFF6
  9615                           tablat	equ	0xFF5
  9616                           prodh	equ	0xFF4
  9617                           prodl	equ	0xFF3
  9618                           intcon	equ	0xFF2
  9619                           intcon2	equ	0xFF1
  9620                           postinc0	equ	0xFEE
  9621                           fsr0h	equ	0xFEA
  9622                           fsr0l	equ	0xFE9
  9623                           wreg	equ	0xFE8
  9624                           fsr1h	equ	0xFE2
  9625                           fsr1l	equ	0xFE1
  9626                           bsr	equ	0xFE0
  9627                           indf2	equ	0xFDF
  9628                           postinc2	equ	0xFDE
  9629                           postdec2	equ	0xFDD
  9630                           fsr2h	equ	0xFDA
  9631                           fsr2l	equ	0xFD9
  9632                           status	equ	0xFD8
  9633                           
  9634 ;; *************** function _WriteTimer1 *****************
  9635 ;; Defined at:
  9636 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  timer1          2   21[COMRAM] unsigned int 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  timer           2   23[COMRAM] struct Timers
  9641 ;; Return value:  Size  Location     Type
  9642 ;;		None               void
  9643 ;; Registers used:
  9644 ;;		None
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;Total ram usage:        4 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_UltrasoundISR
  9660 ;;		_ConfigureTimer1
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text71
  9665  002EF4                     __ptext71:
  9666                           	opt stack 0
  9667  002EF4                     _WriteTimer1:
  9668                           	opt stack 18
  9669                           
  9670                           ;incstack = 0
  9671  002EF4  C016  F018         	movff	WriteTimer1@timer1,WriteTimer1@timer
  9672  002EF8  C017  F019         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  9673  002EFC  C019  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  9674  002F00  C018  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  9675  002F04  0012               	return		;funcret
  9676  002F06                     __end_of_WriteTimer1:
  9677                           	opt stack 0
  9678                           pclatu	equ	0xFFB
  9679                           pclath	equ	0xFFA
  9680                           tblptru	equ	0xFF8
  9681                           tblptrh	equ	0xFF7
  9682                           tblptrl	equ	0xFF6
  9683                           tablat	equ	0xFF5
  9684                           prodh	equ	0xFF4
  9685                           prodl	equ	0xFF3
  9686                           intcon	equ	0xFF2
  9687                           intcon2	equ	0xFF1
  9688                           postinc0	equ	0xFEE
  9689                           fsr0h	equ	0xFEA
  9690                           fsr0l	equ	0xFE9
  9691                           wreg	equ	0xFE8
  9692                           fsr1h	equ	0xFE2
  9693                           fsr1l	equ	0xFE1
  9694                           bsr	equ	0xFE0
  9695                           indf2	equ	0xFDF
  9696                           postinc2	equ	0xFDE
  9697                           postdec2	equ	0xFDD
  9698                           fsr2h	equ	0xFDA
  9699                           fsr2l	equ	0xFD9
  9700                           status	equ	0xFD8
  9701                           
  9702 ;; *************** function _MillisecondTimerISR *****************
  9703 ;; Defined at:
  9704 ;;		line 22 in file "MillisecondTimer.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;		None               void
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;Total ram usage:        0 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    1
  9725 ;; This function calls:
  9726 ;;		i2_WriteTimer0
  9727 ;; This function is called by:
  9728 ;;		_isrHP
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text72
  9733  002F06                     __ptext72:
  9734                           	opt stack 0
  9735  002F06                     _MillisecondTimerISR:
  9736                           	opt stack 18
  9737                           
  9738                           ;MillisecondTimer.c: 24: WriteTimer0(63036);
  9739                           
  9740                           ;incstack = 0
  9741  002F06  0EF6               	movlw	246
  9742  002F08  6E17               	movwf	i2WriteTimer0@timer0+1,c
  9743  002F0A  0E3C               	movlw	60
  9744  002F0C  6E16               	movwf	i2WriteTimer0@timer0,c
  9745  002F0E  EC8C  F017         	call	i2_WriteTimer0	;wreg free
  9746                           
  9747                           ;MillisecondTimer.c: 25: millisecond_COUNT++;
  9748  002F12  4A38               	infsnz	_millisecond_COUNT,f,c	;volatile
  9749  002F14  2A39               	incf	_millisecond_COUNT+1,f,c	;volatile
  9750  002F16  0012               	return		;funcret
  9751  002F18                     __end_of_MillisecondTimerISR:
  9752                           	opt stack 0
  9753                           pclatu	equ	0xFFB
  9754                           pclath	equ	0xFFA
  9755                           tblptru	equ	0xFF8
  9756                           tblptrh	equ	0xFF7
  9757                           tblptrl	equ	0xFF6
  9758                           tablat	equ	0xFF5
  9759                           prodh	equ	0xFF4
  9760                           prodl	equ	0xFF3
  9761                           intcon	equ	0xFF2
  9762                           intcon2	equ	0xFF1
  9763                           postinc0	equ	0xFEE
  9764                           fsr0h	equ	0xFEA
  9765                           fsr0l	equ	0xFE9
  9766                           wreg	equ	0xFE8
  9767                           fsr1h	equ	0xFE2
  9768                           fsr1l	equ	0xFE1
  9769                           bsr	equ	0xFE0
  9770                           indf2	equ	0xFDF
  9771                           postinc2	equ	0xFDE
  9772                           postdec2	equ	0xFDD
  9773                           fsr2h	equ	0xFDA
  9774                           fsr2l	equ	0xFD9
  9775                           status	equ	0xFD8
  9776                           
  9777 ;; *************** function i2_WriteTimer0 *****************
  9778 ;; Defined at:
  9779 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  timer0          2   21[COMRAM] unsigned int 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  WriteTimer0     2   23[COMRAM] struct Timers
  9784 ;; Return value:  Size  Location     Type
  9785 ;;		None               void
  9786 ;; Registers used:
  9787 ;;		None
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9797 ;;Total ram usage:        4 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_MillisecondTimerISR
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text73
  9807  002F18                     __ptext73:
  9808                           	opt stack 0
  9809  002F18                     i2_WriteTimer0:
  9810                           	opt stack 18
  9811                           
  9812                           ;incstack = 0
  9813  002F18  C016  F018         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  9814  002F1C  C017  F019         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  9815  002F20  C019  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  9816  002F24  C018  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  9817  002F28  0012               	return		;funcret
  9818  002F2A                     __end_ofi2_WriteTimer0:
  9819                           	opt stack 0
  9820                           pclatu	equ	0xFFB
  9821                           pclath	equ	0xFFA
  9822                           tblptru	equ	0xFF8
  9823                           tblptrh	equ	0xFF7
  9824                           tblptrl	equ	0xFF6
  9825                           tablat	equ	0xFF5
  9826                           prodh	equ	0xFF4
  9827                           prodl	equ	0xFF3
  9828                           intcon	equ	0xFF2
  9829                           intcon2	equ	0xFF1
  9830                           postinc0	equ	0xFEE
  9831                           fsr0h	equ	0xFEA
  9832                           fsr0l	equ	0xFE9
  9833                           wreg	equ	0xFE8
  9834                           fsr1h	equ	0xFE2
  9835                           fsr1l	equ	0xFE1
  9836                           bsr	equ	0xFE0
  9837                           indf2	equ	0xFDF
  9838                           postinc2	equ	0xFDE
  9839                           postdec2	equ	0xFDD
  9840                           fsr2h	equ	0xFDA
  9841                           fsr2l	equ	0xFD9
  9842                           status	equ	0xFD8
  9843                           pclatu	equ	0xFFB
  9844                           pclath	equ	0xFFA
  9845                           tblptru	equ	0xFF8
  9846                           tblptrh	equ	0xFF7
  9847                           tblptrl	equ	0xFF6
  9848                           tablat	equ	0xFF5
  9849                           prodh	equ	0xFF4
  9850                           prodl	equ	0xFF3
  9851                           intcon	equ	0xFF2
  9852                           intcon2	equ	0xFF1
  9853                           postinc0	equ	0xFEE
  9854                           fsr0h	equ	0xFEA
  9855                           fsr0l	equ	0xFE9
  9856                           wreg	equ	0xFE8
  9857                           fsr1h	equ	0xFE2
  9858                           fsr1l	equ	0xFE1
  9859                           bsr	equ	0xFE0
  9860                           indf2	equ	0xFDF
  9861                           postinc2	equ	0xFDE
  9862                           postdec2	equ	0xFDD
  9863                           fsr2h	equ	0xFDA
  9864                           fsr2l	equ	0xFD9
  9865                           status	equ	0xFD8
  9866                           
  9867                           	psect	rparam
  9868  0000                     pclatu	equ	0xFFB
  9869                           pclath	equ	0xFFA
  9870                           tblptru	equ	0xFF8
  9871                           tblptrh	equ	0xFF7
  9872                           tblptrl	equ	0xFF6
  9873                           tablat	equ	0xFF5
  9874                           prodh	equ	0xFF4
  9875                           prodl	equ	0xFF3
  9876                           intcon	equ	0xFF2
  9877                           intcon2	equ	0xFF1
  9878                           postinc0	equ	0xFEE
  9879                           fsr0h	equ	0xFEA
  9880                           fsr0l	equ	0xFE9
  9881                           wreg	equ	0xFE8
  9882                           fsr1h	equ	0xFE2
  9883                           fsr1l	equ	0xFE1
  9884                           bsr	equ	0xFE0
  9885                           indf2	equ	0xFDF
  9886                           postinc2	equ	0xFDE
  9887                           postdec2	equ	0xFDD
  9888                           fsr2h	equ	0xFDA
  9889                           fsr2l	equ	0xFD9
  9890                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         57
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      70
    BANK0           160     95     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK0[1]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    _isrLP->_ReadADC
    i1_SetADCChannel->i1_SetChanADC

Critical Paths under _main in BANK0

    _main->_CalibrateLine
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _ResetMillis->_WriteTimer0
    _ReadEchoLength->_ReadTimer1
    _GetDistance->_Delay1TCYx
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _ChangeMode->_Delay10KTCYx
    _CalibrateLine->_CalculateSensorSums
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _CalculateSensorSums->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  148540
                                             92 BANK0      3     3      0
                    _BusyDistanceAcq
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                      _CalibrateLine
                   _CalibrateSensors
                         _ChangeMode
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer2
                _ConfigureUltrasound
                       _Delay10KTCYx
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                        _GetDistance
                  _GetSensorReadings
            _NormaliseSensorReadings
                     _ReadEchoLength
                         _ReadMillis
                        _ResetMillis
                        _SetDCMotorL
                        _SetDCMotorR
                _SetDirectionForward
                        _SetUnipolar
                         _StopMotors
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0     910
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     455
                                              6 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     455
                                              6 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis                                          0     0      0     262
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2      71
                                              4 BANK0      2     0      2
                         _ReadTimer1
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      71
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     192
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     324
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     262
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ChangeMode                                           0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CalibrateSensors                                     3     3      0     192
                                              3 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (1) _CalibrateLine                                        2     2      0   72149
                                             91 BANK0      1     1      0
                      _BusySensorAcq
            _CalculateSensorStatuses
                _CalculateSensorSums
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     161
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (2) _SetADCChannel                                        1     1      0      62
                                              2 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplaySensorStatuses                                5     3      2     291
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CalculateSensorSums                                  5     5      0   71276
                                             86 BANK0      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   64352
                                             69 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   21117
                                             51 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   34751
                                             60 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     354
                                             51 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3    8951
                                             52 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     582
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     464
                                             27 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     718
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2529
                                             42 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7    9459
                                             39 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     622
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    3968
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    4541
                                             39 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             12     6      6    4225
                                             27 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     260
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    2900
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    2523
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2427
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    2291
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2260
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _CalculateSensorStatuses                              4     4      0     322
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isrLP                                               17    17      0      44
                                              4 COMRAM    17    17      0
                            _ReadADC
                       i1_ConvertADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (9) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (10) i1_SetChanADC                                        2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     305
                                             25 COMRAM    14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     174
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (13) _WriteTimer1                                         4     2      2     174
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _CalibrateLine
     _BusySensorAcq
     _CalculateSensorStatuses
     _CalculateSensorSums
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
         _exp (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
             _frexp
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
     _DisplaySensorStatuses
     _GetSensorReadings
       _ConvertADC
       _SetADCChannel
         _SetChanADC
     _NormaliseSensorReadings
   _CalibrateSensors
     _BusySensorAcq
     _GetSensorReadings
       _ConvertADC
       _SetADCChannel
         _SetChanADC
   _ChangeMode
     _Delay10KTCYx
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
   _Delay10KTCYx
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _NormaliseSensorReadings
   _ReadEchoLength
     _ReadTimer1
   _ReadMillis
   _ResetMillis
     _WriteTimer0
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___wmul

 _isrLP (ROOT)
   _ReadADC
   i1_ConvertADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      7F       5       79.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      46       1       73.7%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5       6        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 24 12:04:43 2017

                     ___altoft@exp 0092                      ___altoft@sign 0093  
                               l34 2F68                                 l37 2F38  
                               bsr 000FE0                ___wmul@multiplicand 0062  
                      __CFG_BORV$0 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
              __end_of_GetDistance 2EE2                       ___ftadd@exp1 0086  
                     ___ftadd@exp2 0085                       __CFG_CP6$OFF 000000  
                     __CFG_CP7$OFF 000000                       ___ftadd@sign 0084  
                              l312 2F58                                l306 2272  
                              l331 2360                                l341 25CC  
                              l317 2A30                                l503 2D3A  
                              l336 2720                                l346 2550  
                              l370 2AA2                                l418 1688  
                              l356 2AF2                                l525 2D1C  
                              l382 28C0                                l526 2D1E  
                              l447 29B8                                l616 2C4A  
                              l713 27C2                                l580 2D8A  
                              l477 2D62                                l581 2D8C  
                              l479 2D6C                                l841 2DE8  
                              l834 2B8A                                l846 2F3E  
                              l848 2F48                                l938 1E7C  
                              l949 1E44                                l982 10DE  
                              l984 1108                                l993 11EC  
                              l978 10A4                                l979 12B8  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                              _PR4 000F77                       __CFG_CPD$OFF 000000  
             __size_of_WriteTimer0 0012               __size_of_WriteTimer1 0012  
                              _exp 12BA                                _log 1AEC  
                              _pow 16B4                      _SetADCChannel 2186  
                              prod 000FF3                                wreg 000FE8  
      __end_of_CalculateSensorSums 2722                       __CFG_MODE$MC 000000  
        ??_CalculateSensorStatuses 0060                    ReadTimer1@timer 0062  
                     __CFG_LVP$OFF 000000                       ___ftdiv@cntr 0071  
                       _Delay1TCYx 2F3A                       ___ftdiv@sign 0076  
                     __CFG_WDT$OFF 000000                               l1010 1AEA  
                             l1002 1216                         _ChangeMode 2CAC  
                             l1013 1AB2                               l1025 19A8  
                             l1042 2B42                               l1210 14D4  
                             l1115 2842                               l1035 2C6E  
                             l1019 2518                               l1220 2082  
                             l1046 1D5C                               l1230 1F92  
                             l1206 14E0                               l1209 1390  
                             l1082 2CAA                               l1226 267A  
                             l1218 208E                               l1190 1840  
                             l1248 1C2A                               l4000 21BC  
                             l1186 184C                               l4010 21E4  
                             l4002 21C4                               l4012 21EC  
                             l4004 21CC                               l4014 21F4  
                             l4006 21D4                               l4022 220C  
                             l4200 2300                               l4016 21FC  
                             l4008 21DC                               l4050 1790  
                             l4042 1718                               l4018 2204  
                             l4204 2340                               l4036 16F6  
                             l4212 2688                               l4310 2534  
                             l4302 251C                               l4206 2358  
                             l2710 1D1E                               l2702 1CEE  
                             l4054 17B8                               l4230 2AAA  
                             l2704 1CF6                               l2712 1D2C  
                             l4224 271A                               l4216 2692  
                             l4240 2DD0                               l4136 2D44  
                             l4330 2570                               l4322 2558  
                             l4314 2540                               l4306 2528  
                             l3602 1DF2                               l4234 2AB4  
                             l3612 1E50                               l3604 1E24  
                             l3700 1242                               l2716 1D4A  
                             l2708 1D0C                               l4164 29C2  
                             l4326 2564                               l4182 228A  
                             l3606 1E34                               l3710 1292  
                             l4350 2A48                               l4510 168C  
                             l4336 257E                               l4192 22EA  
                             l3720 1878                               l2680 1C56  
                             l4168 29CC                               l4512 1692  
                             l4338 25C0                               l4186 22CA  
                             l4178 2280                               l3618 1E6E  
                             l3722 189E                               l4370 2872  
                             l4354 2A52                               l4346 2A38  
                             l4514 16AA                               l4442 1554  
                             l4196 22F6                               l4188 22E2  
                             l3812 1A0E                               l3652 10B2  
                             l3740 1902                               l3636 274E  
                             l4364 2856                               l4452 157A  
                             l3590 1D78                               l3806 19D4  
                             l3750 1946                               l3726 18B2  
                             l3638 2760                               l2870 1F40  
                             l2854 1EF8                               l2846 1E92  
                             l4462 15A4                               l3904 27CC  
                             l3832 1A70                               l3808 19FA  
                             l3680 1170                               l3664 10FE  
                             l3744 1922                               l2872 1F84  
                             l4384 28B0                               l4456 1588  
                             l3594 1D8E                               l3906 27DE  
                             l3842 1AC4                               l3682 1180  
                             l3674 1140                               l3658 10EC  
                             l3850 2B18                               l3754 1966  
                             l3770 24D0                               l2698 1CDA  
                             l2866 1F2A                               l4378 2896  
                             l4490 1606                               l4474 15CE  
                             l3596 1D9E                               l3692 11CC  
                             l3684 1190                               l3748 193E  
                             l3940 12DC                               l3924 1B2C  
                             l4468 15B2                               l3598 1DD0  
                             l3862 2B62                               l3694 11DC  
                             l3686 119C                               l3758 1982  
                             l3766 248E                               l3918 1AFE  
                             l3776 2514                               l3880 1FCE  
                             l3952 135A                               l4488 1600  
                             l3970 1492                               l3946 1320  
                             l3788 2602                               l3884 1FE2  
                             ?_exp 009C                               ?_log 0093  
                             l3974 14A4                               l3990 2194  
                             l3896 20DE                               l3888 2000  
                             l3992 219C                               l3898 216C  
                             l3994 21A4                               l3996 21AC  
                             l3988 218C                               l3998 21B4  
                             ?_pow 00A5                               u2080 1EC4  
                             u3121 1864                               _LATE 000F8D  
                             u3220 2634                               u3141 188E  
                             _LATJ 000F91                               u3231 19C0  
                             u2088 1EC8                               u4017 2DD8  
                             u3330 1FF2                               u3251 19EA  
                             u3228 2638                               u3420 1364  
                             u3430 1366                               u1841 1C42  
                             u3530 1772                               u3620 2F54  
                             u1860 1C7C                               u2911 1052  
                             u2921 1070                               u1865 1C72  
                             u3475 2BDA                               u3485 2B96  
                             u3910 1572                               u3930 159C  
                             u3790 2F64                               u3774 2AE0  
                             u3950 15C6                               u3775 2ADA  
                  _BusyDistanceAcq 2F5A                               _TMR2 000FCC  
        __size_of_ConfigureBuggyIO 001A                               _main 14E2  
         __end_of_EnableSensorLEDS 2FC8            _NormaliseSensorReadings 29BC  
                     ___ftpack@arg 0060                       ___ftpack@exp 0063  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               exp@x 009C  
                             log@x 0093             __size_ofi2_WriteTimer0 0012  
                             pclat 000FFA                               pow@x 00A5  
                             pow@y 00A8                               prodh 000FF4  
                             prodl 000FF3                               start 00E0  
                    __CFG_IESO$OFF 000000                _ConfigureInterrupts 2E96  
                    _BusySensorAcq 2F4A       __end_of_CalculateSensorError 25CE  
             __end_of_EnableMotors 2FCC                      __CFG_MCLRE$ON 000000  
                     ___ftmul@cntr 0079                       ___param_bank 000010  
                     ___ftmul@sign 007A                    __end_of_ReadADC 2F7A  
                  __end_of_OpenADC 29BC                       ___fttol@exp1 0089  
                            ??_exp 009F                              ??_log 0096  
                     ___fttol@lval 0085                              ??_pow 00AB  
                    ??_SetDCMotorL 0068                      ??_SetDCMotorR 0068  
            _DisplaySensorStatuses 2AA4                      __CFG_WAIT$OFF 000000  
                   _ReadEchoLength 2F2A                              ?_main 0001  
                  __end_of___ftadd 12BA                    __end_of___ftdiv 1AEC  
                  __end_of___ftneg 2C7C                    __end_of___ftmul 19AA  
                            _T0CON 000FD5                    __end_of___ftsub 2B44  
                  __end_of___fttol 1D5E                              _T2CON 000FCA  
                            i1l306 244A                              i1l455 2F78  
                            i1l396 009A                     ?_SetADCChannel 0001  
                            i2l390 2906                      _UltrasoundISR 2CD4  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                              _TRISG 000F98  
                            _TRISJ 000F9A               ?_ConfigureInterrupts 0001  
            __size_of_Delay10KTCYx 001E                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                      __CFG_WRT5$OFF 000000  
                     ___lltoft@exp 0070                      __CFG_WRT6$OFF 000000  
                    __CFG_WRT7$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                     __CFG_EBTR5$OFF 000000  
                   __CFG_EBTR6$OFF 000000                     __CFG_EBTR7$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                    ___awtoft@sign 006B                              _floor 1F94  
                            _isrHP 0008                              _ldexp 1E7E  
                            _isrLP 0018                              _frexp 25CE  
                            _errno 00D5                      ___ftpack@sign 0064  
                       _ConvertADC 2FCC                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              pow@yi 00B2  
                            status 000FD8                     ?_BusySensorAcq 0001  
                      exp@exponent 00A2                  _millisecond_COUNT 0038  
                  _ConfigureTimer0 2E54                    _ConfigureTimer2 2FAE  
                      ldexp@newexp 0096                    __initialization 2D90  
                      log@exponent 0096                        _GetDistance 2ED0  
                       _ReadMillis 2FA4                 main@sensor_sum_ptr 00BC  
                     __end_of_main 16B4                         _ReadTimer1 2EBE  
                     _Delay10KTCYx 2DCC             __end_of_ReadEchoLength 2F3A  
                 __end_of_OpenPWM4 2D6E                   __end_of_OpenPWM5 2D48  
                           ??_main 00BC               __end_of_ConfigureADC 2EBE  
                    ___fttol@sign1 0084                     ?_UltrasoundISR 0001  
                    i2_WriteTimer0 2F18               __end_of_ConfigurePWM 2FA4  
                    __activetblptr 000003              ??_ConfigureInterrupts 0060  
                       _SetChanADC 2DEA                _ConfigureUltrasound 2E08  
          __end_of_BusyDistanceAcq 2F6A                __end_of_SetDCMotorL 2F96  
              __end_of_SetDCMotorR 2F88                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           ?_floor 0094                             ?_isrHP 0001  
                           ?_ldexp 0093                             ?_isrLP 0001  
                           ?_frexp 0060                   __end_of___altoft 27C4  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                      ?_Delay1TCYx 0001                      ??_SetUnipolar 0060  
           __size_of_CalibrateLine 007E                             _CCPR4L 000F74  
                           _CCPR5L 000F71                        ?_ChangeMode 0001  
                  i1_SetADCChannel 2362                   __end_of___awtoft 2B8C  
                 __end_of___ftpack 1E7E          ??_NormaliseSensorReadings 0060  
                    ??_ResetMillis 0064                   __end_of___lbtoft 2CAC  
                 __end_of___lltoft 2844                             i1l3400 2366  
                           i1l3410 238E                             i1l3402 236E  
                           i1l3420 23B6                             i1l3412 2396  
                           i1l3404 2376                             i1l3430 23DE  
                           i1l3422 23BE                             i1l3414 239E  
                           i1l3406 237E                             i1l3424 23C6  
                           i1l3416 23A6                             i1l3408 2386  
                           i1l3426 23CE                             i1l3418 23AE  
                           i1l3434 23E6                             i1l3428 23D6  
                  __CFG_BBSIZ$BB2K 000000                             i1l3480 0092  
                           i2l3240 2CF6                         _OpenTimer0 2CFC  
                           i2l3234 2CEA                         _OpenTimer2 2D6E  
                           i2l4418 28FC                 __size_of_SetDCPWM4 0044  
               __size_of_SetDCPWM5 0044                          ??_ReadADC 0003  
             ?_ConfigureUltrasound 0060                   _CalibrateSensors 2A32  
              _SetDirectionForward 2FBC                          ??_OpenADC 0062  
           CalculateSensorSums@sum 00B9         _sensor_readings_normalised 00C9  
                   __CFG_XINST$OFF 000000                             ___ftge 244C  
                           ___wmul 2C14                _sensor_readings_raw 0028  
           ?_DisplaySensorStatuses 0060                          ??___ftadd 0081  
                        ??___ftdiv 006E                          ??___ftneg 0063  
                        ??___ftmul 0072                          ??___ftsub 008D  
                        ??___fttol 007F                   OpenTimer0@config 0060  
                  ?_ReadEchoLength 0064                   OpenTimer2@config 0060  
                           clear_0 2D96                             clear_1 2DA2  
                  ??_SetADCChannel 0062                     ?i2_WriteTimer0 0016  
                           floor@i 0097                             floor@x 0094  
            ___ftmul@f3_as_product 0076               ?_SetDirectionForward 0001  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
             _CalculateSensorError 251A                        ?_ConvertADC 0001  
          __end_of_ConfigureTimer0 2E6A                   __end_ofexp@coeff 101F  
          __end_of_ConfigureTimer2 2FB6                   _ConfigureBuggyIO 2E22  
                 __end_oflog@coeff 103A                         __accesstop 0060  
          __end_of__initialization 2DA8                         ___altoft@c 008A  
            __size_of_EnableMotors 0004                    ??_BusySensorAcq 0060  
                       ___ftadd@f1 007B                         ___ftadd@f2 007E  
                       _StopMotors 2DAE                         ___ftge@ff1 0060  
                       ___ftge@ff2 0063              ??_ConfigureUltrasound 0066  
    ConfigureUltrasound@echo_to_cm 0060      ConfigureUltrasound@echo_to_in 0063  
                     eval_poly@res 0090                      ___rparam_used 000001  
                       ___ftdiv@f1 0068                         ___ftdiv@f2 006B  
                       ___ftdiv@f3 0072                __end_of_SetUnipolar 2FBC  
                       ___ftneg@f1 0060                __end_of_ResetMillis 2E54  
                       ___awtoft@c 0068                         ___lbtoft@c 006B  
                       ___ftmul@f1 006C                         ___ftmul@f2 006F  
                       ___ftsub@f1 0087                         ___ftsub@f2 008A  
                       ___fttol@f1 007B                     __pcstackCOMRAM 0001  
                      ?_ReadMillis 0060                      _CalibrateLine 2844  
                      ?_ReadTimer1 0060                         ___lltoft@c 0068  
                    __end_of_floor 2090                      __end_of_isrHP 2940  
                    __end_of_ldexp 1F94                      __end_of_isrLP 00E0  
                    __end_of_frexp 267C                __size_of_Delay1TCYx 0010  
              __size_of_ChangeMode 0028                    ??_UltrasoundISR 001A  
                      _SetDCMotorL 2F88                        _SetDCMotorR 2F7A  
                __end_of_SetDCPWM4 2BD0                  __end_of_SetDCPWM5 2C14  
            ??_SetDirectionForward 0060                i1SetChanADC@channel 0002  
                      ?_SetChanADC 0001            __end_ofi1_SetADCChannel 244C  
                  _sensor_acq_done 003F        __end_of_MillisecondTimerISR 2F18  
     CalculateSensorStatuses@index 0063                   ?_BusyDistanceAcq 0001  
            ?_CalculateSensorError 0060                       _EnableMotors 2FC8  
                          ??_floor 0097                            ??_isrHP 001A  
                          ??_ldexp 0098                            ??_isrLP 0005  
                          ??_frexp 0065                         __pbssBANK0 00BF  
                      ?_OpenTimer0 0001                        ?_OpenTimer2 0001  
               __size_of_eval_poly 00F6                  ?_EnableSensorLEDS 0001  
                        ?_OpenPWM4 0001                          ?_OpenPWM5 0001  
               ??_EnableSensorLEDS 0060            CalculateSensorError@sum 0060  
                   ?_CalibrateLine 0001                            ?___ftge 0060  
            __size_of_ConfigureADC 0014                            ?___wmul 0060  
            __size_of_ConfigurePWM 000E                    ??i2_WriteTimer0 0018  
                          _CCP4CON 000F73                            _CCP5CON 000F70  
                 WriteTimer0@timer 0062                          ?___altoft 008A  
                 WriteTimer1@timer 0018                      ??_WriteTimer0 0062  
                    ??_WriteTimer1 0018                __size_of_ConvertADC 0004  
                        ?___awtoft 0068                          ?___ftpack 0060  
                        ?___lbtoft 0068                          ?___lltoft 0068  
              __size_of_ReadMillis 000A                        _SetUnipolar 2FB6  
              __size_of_ReadTimer1 0012                        _ResetMillis 2E3C  
                 ?_ConfigureTimer0 0001                   ?_ConfigureTimer2 0001  
                       _convert_cm 00D9                         _convert_in 00DC  
     __size_of_CalculateSensorSums 00A6                        ?_StopMotors 0001  
                     _ConfigureADC 2EAA                            _ReadADC 2F6A  
                     _ConfigurePWM 2F96                i2WriteTimer0@timer0 0016  
                       ??_OpenPWM4 0060                         ??_OpenPWM5 0060  
                          _OpenADC 2940                            __Hparam 0000  
              __size_of_SetChanADC 001E                            __Lparam 0000  
                     ?_GetDistance 0001                    __size_of___ftge 00CE  
                          ___ftadd 103C                            ___ftdiv 19AA  
                          ___ftneg 2C4C                    __size_of___wmul 0038  
                          ___ftmul 184E                            ___ftsub 2AF4  
                          ___fttol 1C2C                      ?i1_ConvertADC 0001  
                     __psmallconst 1000                         ??___altoft 008E  
                  __CFG_STVREN$OFF 000000                            __pcinit 2D90  
                       ??___awtoft 006B                         ??___ftpack 0065  
                       ??___lbtoft 006B                  __end_of_eval_poly 2186  
                          __ramtop 1000                __size_of_OpenTimer0 0026  
              __size_of_OpenTimer2 0022                         ??___lltoft 006C  
                          __ptext0 14E2                            __ptext1 2DAE  
                          __ptext2 2F7A                            __ptext3 2B8C  
                          __ptext4 2F88                            __ptext5 2BD0  
                          __ptext6 2FB6                            __ptext7 2FBC  
                          __ptext8 2E3C                            __ptext9 2FA4  
                        _T0CONbits 000FD5           ?_CalculateSensorStatuses 0001  
                        _T1CONbits 000FCD                          _T2CONbits 000FCA  
         __end_of_CalibrateSensors 2AA4                       __size_of_exp 0228  
                     __size_of_log 0140             ??_CalculateSensorError 0062  
                     __size_of_pow 019A                   ?i1_SetADCChannel 0001  
                        _T3CONbits 000FB1                          _T4CONbits 000F76  
              __end_of_WriteTimer0 2EF4                __end_of_WriteTimer1 2F06  
            CalibrateSensors@index 0065                       ??_Delay1TCYx 0060  
                   OpenADC@config2 0060                       ??_ChangeMode 0062  
                   __pintcode_body 28C2                  _GetSensorReadings 2E6A  
             end_of_initialization 2DA8                            exp@sign 00A4  
                   main@sensor_sum 00BE                 ?_GetSensorReadings 0001  
                          int_func 28C2                      ?i1_SetChanADC 0001  
                  ??_CalibrateLine 00BB            ??_DisplaySensorStatuses 0062  
                          pow@sign 00B1                   ??_ReadEchoLength 0066  
              ??_GetSensorReadings 0063                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
                   ??i1_ConvertADC 0001                          _PID_error 00D7  
      __end_of_ConfigureInterrupts 2EAA                 __end_of_Delay1TCYx 2F4A  
         __end_of_ConfigureBuggyIO 2E3C                 __end_of_ChangeMode 2CD4  
                        _PORTBbits 000F81                __size_of_StopMotors 001E  
                        _TRISGbits 000F98          __end_of_GetSensorReadings 2E80  
                     ??_ConvertADC 0060                        ___ftdiv@exp 0075  
                   ??i1_SetChanADC 0001             i1SetADCChannel@channel 0003  
                 CalibrateLine@sum 00BB                        ___ftmul@exp 0075  
            SetDCMotorL@duty_cycle 0066                       ??_ReadMillis 0062  
                     ??_ReadTimer1 0062               _second_rollover_flag 003E  
  __end_of_CalculateSensorStatuses 2362                     __end_of___ftge 251A  
                   __end_of___wmul 2C4C                       ?_SetDCMotorL 0066  
                     ?_SetDCMotorR 0066                        _WriteTimer0 2EE2  
                      _WriteTimer1 2EF4                 __end_of_ConvertADC 2FD0  
                       floor@expon 009A              __end_of_SetADCChannel 2274  
                     ??_SetChanADC 0060                start_initialization 2D90  
         ?_NormaliseSensorReadings 0001                         eval_poly@d 008A  
                       eval_poly@n 008C                         eval_poly@x 0087  
                       ldexp@value 0093                          _SetDCPWM4 2B8C  
                        _SetDCPWM5 2BD0                        __end_of_exp 14E2  
                      __end_of_log 1C2C                        __end_of_pow 184E  
                  SetDCPWM4@DCycle 0064        __end_of_ConfigureUltrasound 2E22  
                  SetDCPWM5@DCycle 0064                 __end_of_ReadMillis 2FAE  
                     ??_OpenTimer0 0060                       ??_OpenTimer2 0060  
                    _echo_acq_done 003C                 __end_of_ReadTimer1 2ED0  
                       frexp@value 0060                        _SystemClock 0032  
                 _sensor_acq_index 0040              __end_of_BusySensorAcq 2F5A  
             SetADCChannel@channel 0062  DisplaySensorStatuses@status_array 0060  
               __end_of_SetChanADC 2E08                  __size_of_OpenPWM4 0026  
                __size_of_OpenPWM5 0026                           ??___ftge 0066  
                         ??___wmul 0064        __end_of_SetDirectionForward 2FC2  
                 __CFG_LPT1OSC$OFF 000000               __size_of_GetDistance 0012  
        __size_of_EnableSensorLEDS 0006                _CalculateSensorSums 267C  
            __end_of_UltrasoundISR 2CFC                 __end_of_OpenTimer0 2D22  
               __end_of_OpenTimer2 2D90                  __size_of___altoft 00A2  
                __size_of___awtoft 0048                  __size_of___ftpack 0120  
                __size_of___lbtoft 0030                  __size_of___lltoft 0080  
                      __pbssCOMRAM 0028                      __pcstackBANK0 0060  
                       ?_SetDCPWM4 0060                         ?_SetDCPWM5 0060  
       __size_of_GetSensorReadings 0016                       ?_SetUnipolar 0001  
             __end_ofi1_ConvertADC 2FD4                       ?_ResetMillis 0001  
     __size_of_MillisecondTimerISR 0012           __size_of_BusyDistanceAcq 0010  
             ?_CalculateSensorSums 0001                       ??_StopMotors 0068  
                         ?_ReadADC 0001                          __pnvBANK0 00D9  
                OpenADC@portconfig 0061                           ?_OpenADC 0060  
                   _sensor_offsets 00BF                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                           ?___ftadd 007B  
                         ?___ftdiv 0068                           ?___ftneg 0060  
                         ?___ftmul 006C                           ?___ftsub 0087  
                         ?___fttol 007B                      ?_Delay10KTCYx 0001  
                      __pintcodelo 0018              __end_ofi2_WriteTimer0 2F2A  
  __end_of_NormaliseSensorReadings 2A32                   _sensor_threshold 003A  
                      __smallconst 1000                  WriteTimer0@timer0 0060  
             __end_ofi1_SetChanADC 2E96                  WriteTimer1@timer1 0016  
                        _eval_poly 2090                 i2WriteTimer0@timer 0018  
               __end_of_StopMotors 2DCC                  ?_CalibrateSensors 0001  
               ??_CalibrateSensors 0063                          _line_mode 003D  
                   __size_of_floor 00FC                     __size_of_isrHP 2938  
                   __size_of_ldexp 0116                     __size_of_isrLP 00C8  
                   __size_of_frexp 00AE              ??_CalculateSensorSums 00B6  
 __size_of_CalculateSensorStatuses 00EE                     ___wmul@product 0064  
                    OpenADC@config 0064                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LATJbits 000F91  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
       DisplaySensorStatuses@index 0064                           _PIR1bits 000F9E  
            __CFG_DATABW$DATA16BIT 000000     __size_of_DisplaySensorStatuses 0050  
                         _RCONbits 000FD0           __size_of_ConfigureTimer0 0016  
         __size_of_ConfigureTimer2 0008      __end_of_DisplaySensorStatuses 2AF4  
                 __CFG_WDTPS$32768 000000                     ??_Delay10KTCYx 0060  
            SetDCMotorR@duty_cycle 0066                  __CFG_ECCPMX$PORTH 000000  
                       _ADCON0bits 000FC2                  ?_ConfigureBuggyIO 0001  
                ___wmul@multiplier 0060               __size_of_SetDCMotorL 000E  
             __size_of_SetDCMotorR 000E                 ??_ConfigureBuggyIO 0060  
                       ?_eval_poly 0087                        ??_SetDCPWM4 0062  
                      ??_SetDCPWM5 0062                   Delay10KTCYx@unit 0061  
    __size_of_CalculateSensorError 00B4           CalculateSensorSums@index 00BA  
                      _INTCON2bits 000FF1           __size_ofi1_SetADCChannel 00EA  
                        frexp@eptr 0063                           _OpenPWM4 2D48  
                         _OpenPWM5 2D22                   __size_of_ReadADC 0010  
                         __Hrparam 0000                   __size_of_OpenADC 007C  
                         __Lrparam 0000                  ??_BusyDistanceAcq 0060  
            __end_of_CalibrateLine 28C2           _CalculateSensorSums$2849 00B6  
                 __size_of___ftadd 027E                   __size_of___ftdiv 0142  
                 __size_of___ftneg 0030                           ___altoft 2722  
                 __size_of___ftmul 015C                   __size_of___ftsub 0050  
                 __size_of___fttol 0132                       ?_WriteTimer0 0060  
                     ?_WriteTimer1 0016                           ___awtoft 2B44  
                         ___ftpack 1D5E                           ___lbtoft 2C7C  
                 _EnableSensorLEDS 2FC2                           ___lltoft 27C4  
              _system_clock_enable 0041                           _exp$2852 009F  
     __size_of_ConfigureInterrupts 0014              __size_ofi1_ConvertADC 0004  
                    ?_EnableMotors 0001                 SetDCPWM4@dutycycle 0060  
                   OpenPWM4@period 0060                           __ptext10 2F2A  
                         __ptext11 2EBE                           __ptext20 2EE2  
                         __ptext12 2ED0                           __ptext21 2CFC  
                         __ptext13 2F3A                           __ptext30 2DCC  
                         __ptext22 2F96                           __ptext14 2FC2  
                    _sensor_status 0042                           __ptext31 2A32  
                         __ptext23 2D22                           __ptext15 2FC8  
                         __ptext40 16B4                           __ptext32 2844  
                         __ptext24 2D48                           __ptext16 2E08  
                         __ptext41 1AEC                           __ptext33 29BC  
                         __ptext25 2E96                           __ptext17 2FAE  
                         __ptext50 2C14                           __ptext42 12BA  
                         __ptext34 2E6A                           __ptext26 2E22  
                         __ptext18 2D6E                           __ptext51 184E  
                         __ptext43 1E7E                           __ptext35 2186  
                         __ptext27 2EAA                           __ptext19 2E54  
                         __ptext60 2274                           __ptext52 2AF4  
                         __ptext44 1F94                           __ptext36 2DEA  
                         __ptext28 2940                           __ptext61 2F4A  
                         __ptext53 103C                           __ptext45 25CE  
                         __ptext37 2FCC                           __ptext29 2CAC  
                         __ptext70 2CD4                           __ptext62 251A  
                         __ptext54 2C4C                           __ptext46 1C2C  
                         __ptext38 2AA4                           __ptext71 2EF4  
                         __ptext63 2F5A                           __ptext55 19AA  
                         __ptext47 244C                           __ptext39 267C  
                         __ptext72 2F06                           __ptext56 2B44  
                         __ptext48 2722                           __ptext73 2F18  
                         __ptext65 2362                           __ptext57 27C4  
                         __ptext49 2090                           __ptext66 2E80  
                         __ptext58 2C7C                           __ptext67 2FD0  
                         __ptext59 1D5E                           __ptext68 2F6A  
                   OpenPWM5@period 0060                           _pow$2850 00AB  
                         _pow$2851 00AE                 SetDCPWM5@dutycycle 0060  
             __size_of_SetUnipolar 0006                      __size_of_main 01D2  
             __size_of_ResetMillis 0018                     Delay1TCYx@unit 0060  
 __size_of_NormaliseSensorReadings 0076              __size_ofi1_SetChanADC 0016  
                     i1_ConvertADC 2FD0                _MillisecondTimerISR 2F06  
                ??_ConfigureTimer0 0064                  ??_ConfigureTimer2 0061  
                         exp@coeff 1001            __size_of_ReadEchoLength 0010  
                         log@coeff 101F              __CFG_ADDRBW$ADDR20BIT 000000  
     NormaliseSensorReadings@index 0064                         _INTCONbits 000FF2  
                      ??_eval_poly 008E                     ??_EnableMotors 0060  
             __end_of_Delay10KTCYx 2DEA               ?_MillisecondTimerISR 0001  
                         intlevel1 0000                           intlevel2 0000  
          _CalculateSensorStatuses 2274                      ?_ConfigureADC 0001  
                    ?_ConfigurePWM 0001                  SetChanADC@channel 0061  
     __size_of_ConfigureUltrasound 001A                       i1_SetChanADC 2E80  
           __size_of_SetADCChannel 00EE                  ??i1_SetADCChannel 0003  
                    ??_GetDistance 0061                         _PID_output 00D3  
     __size_of_SetDirectionForward 0006             __size_of_BusySensorAcq 0010  
            ??_MillisecondTimerISR 001A                     ??_ConfigureADC 0065  
                   ??_ConfigurePWM 0061             __size_of_UltrasoundISR 0028  
        __size_of_CalibrateSensors 0072  
