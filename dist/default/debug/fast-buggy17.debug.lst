

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Apr 23 21:21:31 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	text108,global,reloc=2,class=CODE,delta=1
   124                           	psect	text109,global,reloc=2,class=CODE,delta=1
   125                           	psect	text110,global,reloc=2,class=CODE,delta=1
   126                           	psect	text111,global,reloc=2,class=CODE,delta=1
   127                           	psect	text112,global,reloc=2,class=CODE,delta=1
   128                           	psect	text113,global,reloc=2,class=CODE,delta=1
   129                           	psect	text114,global,reloc=2,class=CODE,delta=1
   130                           	psect	text115,global,reloc=2,class=CODE,delta=1
   131                           	psect	text116,global,reloc=2,class=CODE,delta=1
   132                           	psect	text117,global,reloc=2,class=CODE,delta=1
   133                           	psect	text118,global,reloc=2,class=CODE,delta=1
   134                           	psect	text119,global,reloc=2,class=CODE,delta=1
   135                           	psect	text120,global,reloc=2,class=CODE,delta=1
   136                           	psect	text121,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   138                           	psect	text123,global,reloc=2,class=CODE,delta=1
   139                           	psect	text124,global,reloc=2,class=CODE,delta=1
   140                           	psect	text125,global,reloc=2,class=CODE,delta=1
   141                           	psect	text126,global,reloc=2,class=CODE,delta=1
   142                           	psect	text127,global,reloc=2,class=CODE,delta=1
   143                           	psect	text128,global,reloc=2,class=CODE,delta=1
   144                           	psect	text129,global,reloc=2,class=CODE,delta=1
   145                           	psect	text130,global,reloc=2,class=CODE,delta=1
   146                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   147                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   148                           	psect	text132,global,reloc=2,class=CODE,delta=1
   149                           	psect	text133,global,reloc=2,class=CODE,delta=1
   150                           	psect	text134,global,reloc=2,class=CODE,delta=1
   151                           	psect	text135,global,reloc=2,class=CODE,delta=1
   152                           	psect	text136,global,reloc=2,class=CODE,delta=1
   153                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   154                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   155  0000                     
   156                           	psect	smallconst
   157  001000                     __psmallconst:
   158                           	opt stack 0
   159  001000  00                 	db	0
   160  001001                     exp@coeff:
   161                           	opt stack 0
   162  001001  00                 	db	0
   163  001002  80                 	db	128
   164  001003  3F                 	db	63
   165  001004  72                 	db	114
   166  001005  31                 	db	49
   167  001006  3F                 	db	63
   168  001007  FE                 	db	254
   169  001008  75                 	db	117
   170  001009  3E                 	db	62
   171  00100A  58                 	db	88
   172  00100B  63                 	db	99
   173  00100C  3D                 	db	61
   174  00100D  95                 	db	149
   175  00100E  1D                 	db	29
   176  00100F  3C                 	db	60
   177  001010  C5                 	db	197
   178  001011  AE                 	db	174
   179  001012  3A                 	db	58
   180  001013  79                 	db	121
   181  001014  21                 	db	33
   182  001015  39                 	db	57
   183  001016  94                 	db	148
   184  001017  80                 	db	128
   185  001018  37                 	db	55
   186  001019  93                 	db	147
   187  00101A  A7                 	db	167
   188  00101B  35                 	db	53
   189  00101C  56                 	db	86
   190  00101D  15                 	db	21
   191  00101E  34                 	db	52
   192  00101F                     __end_ofexp@coeff:
   193                           	opt stack 0
   194  00101F                     log@coeff:
   195                           	opt stack 0
   196  00101F  00                 	db	0
   197  001020  00                 	db	0
   198  001021  00                 	db	0
   199  001022  00                 	db	0
   200  001023  80                 	db	128
   201  001024  3F                 	db	63
   202  001025  F0                 	db	240
   203  001026  FF                 	db	255
   204  001027  BE                 	db	190
   205  001028  E2                 	db	226
   206  001029  A9                 	db	169
   207  00102A  3E                 	db	62
   208  00102B  83                 	db	131
   209  00102C  76                 	db	118
   210  00102D  BE                 	db	190
   211  00102E  AE                 	db	174
   212  00102F  2B                 	db	43
   213  001030  3E                 	db	62
   214  001031  3C                 	db	60
   215  001032  C3                 	db	195
   216  001033  BD                 	db	189
   217  001034  D2                 	db	210
   218  001035  13                 	db	19
   219  001036  3D                 	db	61
   220  001037  78                 	db	120
   221  001038  D3                 	db	211
   222  001039  BB                 	db	187
   223  00103A                     __end_oflog@coeff:
   224                           	opt stack 0
   225  00103A  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           	psect	nvBANK0
   228  0000EB                     __pnvBANK0:
   229                           	opt stack 0
   230  0000EB                     _convert_cm:
   231                           	opt stack 0
   232  0000EB                     	ds	3
   233  0000EE                     _sensor_threshold_ptr:
   234                           	opt stack 0
   235  0000EE                     	ds	2
   236                           
   237                           	psect	nvBANK1
   238  000164                     __pnvBANK1:
   239                           	opt stack 0
   240  000164                     _convert_in:
   241                           	opt stack 0
   242  000164                     	ds	3
   243  0000                     _CCP4CON	set	3955
   244  0000                     _CCP5CON	set	3952
   245  0000                     _CCPR4L	set	3956
   246  0000                     _CCPR5L	set	3953
   247  0000                     _LATDbits	set	3980
   248  0000                     _LATE	set	3981
   249  0000                     _LATEbits	set	3981
   250  0000                     _LATHbits	set	3984
   251  0000                     _LATJ	set	3985
   252  0000                     _PORTBbits	set	3969
   253  0000                     _PORTHbits	set	3975
   254  0000                     _PR4	set	3959
   255  0000                     _SPBRGH1	set	3967
   256  0000                     _T4CONbits	set	3958
   257  0000                     _TRISA	set	3986
   258  0000                     _TRISB	set	3987
   259  0000                     _TRISC	set	3988
   260  0000                     _TRISCbits	set	3988
   261  0000                     _TRISD	set	3989
   262  0000                     _TRISE	set	3990
   263  0000                     _TRISG	set	3992
   264  0000                     _TRISGbits	set	3992
   265  0000                     _TRISHbits	set	3993
   266  0000                     _TRISJ	set	3994
   267  0000                     _ADCON0	set	4034
   268  0000                     _ADCON0bits	set	4034
   269  0000                     _ADCON1	set	4033
   270  0000                     _ADCON2	set	4032
   271  0000                     _ADRESH	set	4036
   272  0000                     _ADRESL	set	4035
   273  0000                     _EEADR	set	4009
   274  0000                     _EEADRH	set	4010
   275  0000                     _EECON1bits	set	4006
   276  0000                     _EECON2	set	4007
   277  0000                     _EEDATA	set	4008
   278  0000                     _IPR1bits	set	3999
   279  0000                     _PIE1bits	set	3997
   280  0000                     _PIR1bits	set	3998
   281  0000                     _PR2	set	4043
   282  0000                     _RCONbits	set	4048
   283  0000                     _RCREG1	set	4014
   284  0000                     _RCSTA1	set	4011
   285  0000                     _RCSTA1bits	set	4011
   286  0000                     _SPBRG1	set	4015
   287  0000                     _T1CON	set	4045
   288  0000                     _T1CONbits	set	4045
   289  0000                     _T2CON	set	4042
   290  0000                     _T2CONbits	set	4042
   291  0000                     _T3CONbits	set	4017
   292  0000                     _TMR1H	set	4047
   293  0000                     _TMR1L	set	4046
   294  0000                     _TMR2	set	4044
   295  0000                     _TXREG1	set	4013
   296  0000                     _TXSTA1	set	4012
   297  0000                     _TXSTA1bits	set	4012
   298  0000                     _T0CON	set	4053
   299  0000                     _T0CONbits	set	4053
   300  0000                     _TMR0H	set	4055
   301  0000                     _TMR0L	set	4054
   302  0000                     _INTCON2bits	set	4081
   303  0000                     _INTCON3bits	set	4080
   304  0000                     _INTCONbits	set	4082
   305                           
   306                           ; #config settings
   307  0000                     
   308                           	psect	cinit
   309  0043A2                     __pcinit:
   310                           	opt stack 0
   311  0043A2                     start_initialization:
   312                           	opt stack 0
   313  0043A2                     __initialization:
   314                           	opt stack 0
   315                           
   316                           ; Clear objects allocated to BANK1 (60 bytes)
   317  0043A2  EE01  F000         	lfsr	0,__pbssBANK1
   318  0043A6  0E3C               	movlw	60
   319  0043A8                     clear_0:
   320  0043A8  6AEE               	clrf	postinc0,c
   321  0043AA  06E8               	decf	wreg,f,c
   322  0043AC  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BANK0 (32 bytes)
   325  0043AE  EE00  F0CB         	lfsr	0,__pbssBANK0
   326  0043B2  0E20               	movlw	32
   327  0043B4                     clear_1:
   328  0043B4  6AEE               	clrf	postinc0,c
   329  0043B6  06E8               	decf	wreg,f,c
   330  0043B8  E1FD               	bnz	clear_1
   331                           
   332                           ; Clear objects allocated to COMRAM (42 bytes)
   333  0043BA  EE00  F001         	lfsr	0,__pbssCOMRAM
   334  0043BE  0E2A               	movlw	42
   335  0043C0                     clear_2:
   336  0043C0  6AEE               	clrf	postinc0,c
   337  0043C2  06E8               	decf	wreg,f,c
   338  0043C4  E1FD               	bnz	clear_2
   339  0043C6                     end_of_initialization:
   340                           	opt stack 0
   341  0043C6                     __end_of__initialization:
   342                           	opt stack 0
   343  0043C6  0100               	movlb	0
   344  0043C8  EF1E  F008         	goto	_main	;jump to C main() function
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	bssCOMRAM
   349  000001                     __pbssCOMRAM:
   350                           	opt stack 0
   351  000001                     _SystemClock:
   352                           	opt stack 0
   353  000001                     	ds	6
   354  000007                     _DCmotorL:
   355                           	opt stack 0
   356  000007                     	ds	2
   357  000009                     _DCmotorR:
   358                           	opt stack 0
   359  000009                     	ds	2
   360  00000B                     _echo_time:
   361                           	opt stack 0
   362  00000B                     	ds	2
   363  00000D                     _millisecond_COUNT0:
   364                           	opt stack 0
   365  00000D                     	ds	2
   366  00000F                     _millisecond_COUNT1:
   367                           	opt stack 0
   368  00000F                     	ds	2
   369  000011                     _millisecond_COUNT2:
   370                           	opt stack 0
   371  000011                     	ds	2
   372  000013                     _RxCharacter:
   373                           	opt stack 0
   374  000013                     	ds	1
   375  000014                     _Rx_chars_received:
   376                           	opt stack 0
   377  000014                     	ds	1
   378  000015                     _Rx_complete:
   379                           	opt stack 0
   380  000015                     	ds	1
   381  000016                     _Rx_msg_length:
   382                           	opt stack 0
   383  000016                     	ds	1
   384  000017                     _TxCharacter:
   385                           	opt stack 0
   386  000017                     	ds	1
   387  000018                     _Tx_complete:
   388                           	opt stack 0
   389  000018                     	ds	1
   390  000019                     _USART1_Status:
   391                           	opt stack 0
   392  000019                     	ds	1
   393  00001A                     _echo_acq_done:
   394                           	opt stack 0
   395  00001A                     	ds	1
   396  00001B                     _get_Rx_index:
   397                           	opt stack 0
   398  00001B                     	ds	1
   399  00001C                     _get_Tx_index:
   400                           	opt stack 0
   401  00001C                     	ds	1
   402  00001D                     _put_Rx_index:
   403                           	opt stack 0
   404  00001D                     	ds	1
   405  00001E                     _put_Tx_index:
   406                           	opt stack 0
   407  00001E                     	ds	1
   408  00001F                     _second_rollover_flag:
   409                           	opt stack 0
   410  00001F                     	ds	1
   411  000020                     _sensor_acq_done:
   412                           	opt stack 0
   413  000020                     	ds	1
   414  000021                     _sensor_acq_index:
   415                           	opt stack 0
   416  000021                     	ds	1
   417  000022                     _system_clock_enable:
   418                           	opt stack 0
   419  000022                     	ds	1
   420  000023                     _sensor_status:
   421                           	opt stack 0
   422  000023                     	ds	5
   423  000028                     _sensor_threshold:
   424                           	opt stack 0
   425  000028                     	ds	2
   426  00002A                     _line_mode:
   427                           	opt stack 0
   428  00002A                     	ds	1
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           
   432                           	psect	bssBANK0
   433  0000CB                     __pbssBANK0:
   434                           	opt stack 0
   435  0000CB                     _sensor_readings_raw:
   436                           	opt stack 0
   437  0000CB                     	ds	10
   438  0000D5                     _PID_Kd:
   439                           	opt stack 0
   440  0000D5                     	ds	2
   441  0000D7                     _PID_Ki:
   442                           	opt stack 0
   443  0000D7                     	ds	2
   444  0000D9                     _PID_Kp:
   445                           	opt stack 0
   446  0000D9                     	ds	2
   447  0000DB                     _PID_error:
   448                           	opt stack 0
   449  0000DB                     	ds	2
   450  0000DD                     _PID_output:
   451                           	opt stack 0
   452  0000DD                     	ds	2
   453  0000DF                     _errno:
   454                           	opt stack 0
   455  0000DF                     	ds	2
   456  0000E1                     _sensor_offsets:
   457                           	opt stack 0
   458  0000E1                     	ds	10
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           
   462                           	psect	bssBANK1
   463  000100                     __pbssBANK1:
   464                           	opt stack 0
   465  000100                     _Rx_buffer:
   466                           	opt stack 0
   467  000100                     	ds	25
   468  000119                     _Tx_buffer:
   469                           	opt stack 0
   470  000119                     	ds	25
   471  000132                     _sensor_readings_normalised:
   472                           	opt stack 0
   473  000132                     	ds	10
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           
   477                           	psect	cstackBANK1
   478  00013C                     __pcstackBANK1:
   479                           	opt stack 0
   480  00013C                     ??_main:
   481                           
   482                           ; 0 bytes @ 0x0
   483  00013C                     	ds	4
   484  000140                     main@loop_count:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x4
   488  000140                     	ds	1
   489  000141                     main@sensor_sum_ptr:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x5
   493  000141                     	ds	2
   494  000143                     main@line_mode_ptr:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x7
   498  000143                     	ds	2
   499  000145                     main@battery_current_ptr:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503  000145                     	ds	2
   504  000147                     main@battery_current_acc_ptr:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508  000147                     	ds	2
   509  000149                     main@Kp_stored:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0xD
   513  000149                     	ds	2
   514  00014B                     main@Kd_stored:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xF
   518  00014B                     	ds	2
   519  00014D                     main@Ki_stored:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x11
   523  00014D                     	ds	2
   524  00014F                     main@find_line_flag:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x13
   528  00014F                     	ds	1
   529  000150                     main@wall_detected_flag:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x14
   533  000150                     	ds	1
   534  000151                     main@battery_current:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x15
   538  000151                     	ds	2
   539  000153                     main@D_temp:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x17
   543  000153                     	ds	2
   544  000155                     main@I_temp:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x19
   548  000155                     	ds	2
   549  000157                     main@send_battery_stats_flag:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x1B
   553  000157                     	ds	1
   554  000158                     main@battery_voltage_ptr:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x1C
   558  000158                     	ds	2
   559  00015A                     main@battery_current_acc:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x1E
   563  00015A                     	ds	4
   564  00015E                     main@stop_flag:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x22
   568  00015E                     	ds	1
   569  00015F                     main@command_msg:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x23
   573  00015F                     	ds	1
   574  000160                     main@battery_voltage:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x24
   578  000160                     	ds	2
   579  000162                     main@line_end_flag:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x26
   583  000162                     	ds	1
   584  000163                     main@sensor_sum:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x27
   588  000163                     	ds	1
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           
   592                           	psect	cstackBANK0
   593  000060                     __pcstackBANK0:
   594                           	opt stack 0
   595  000060                     ReadTimer1@timer:
   596                           	opt stack 0
   597  000060                     i2WriteTimer0@timer:
   598                           	opt stack 0
   599  000060                     i2WriteTimer1@timer:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x0
   603  000060                     	ds	2
   604  000062                     ??_isrHP:
   605                           
   606                           ; 0 bytes @ 0x2
   607  000062                     	ds	14
   608  000070                     ??_SetChanADC:
   609  000070                     ??_Delay10KTCYx:
   610  000070                     ??_NormaliseSensorReadings:
   611  000070                     ??_CalculateSensorStatuses:
   612  000070                     ?_ReadMillis2:
   613                           	opt stack 0
   614  000070                     ?_ReadADC:
   615                           	opt stack 0
   616  000070                     ?_ReadEchoLength:
   617                           	opt stack 0
   618  000070                     ?_ReadMillis0:
   619                           	opt stack 0
   620  000070                     ?_ReadMillis1:
   621                           	opt stack 0
   622  000070                     ?_CalculateSensorError:
   623                           	opt stack 0
   624  000070                     ?___wmul:
   625                           	opt stack 0
   626  000070                     ?___awmod:
   627                           	opt stack 0
   628  000070                     ?___ftpack:
   629                           	opt stack 0
   630  000070                     ?_frexp:
   631                           	opt stack 0
   632  000070                     ?___ftneg:
   633                           	opt stack 0
   634  000070                     FlushTxBuf@index:
   635                           	opt stack 0
   636  000070                     FlushRxBuf@index:
   637                           	opt stack 0
   638  000070                     OWReset@result:
   639                           	opt stack 0
   640  000070                     OWWriteBit@b:
   641                           	opt stack 0
   642  000070                     OWReadBit@result:
   643                           	opt stack 0
   644  000070                     OpenADC@config2:
   645                           	opt stack 0
   646  000070                     OpenPWM4@period:
   647                           	opt stack 0
   648  000070                     OpenPWM5@period:
   649                           	opt stack 0
   650  000070                     OpenTimer0@config:
   651                           	opt stack 0
   652  000070                     OpenTimer1@config:
   653                           	opt stack 0
   654  000070                     OpenTimer2@config:
   655                           	opt stack 0
   656  000070                     Read1USART@data:
   657                           	opt stack 0
   658  000070                     Delay1KTCYx@unit:
   659                           	opt stack 0
   660  000070                     Delay1TCYx@unit:
   661                           	opt stack 0
   662  000070                     CalculateSensorError@sum:
   663                           	opt stack 0
   664  000070                     DisplaySensorStatuses@status_array:
   665                           	opt stack 0
   666  000070                     WriteEEPROM@address:
   667                           	opt stack 0
   668  000070                     ReadEEPROM@address:
   669                           	opt stack 0
   670  000070                     SetDCPWM4@dutycycle:
   671                           	opt stack 0
   672  000070                     SetDCPWM5@dutycycle:
   673                           	opt stack 0
   674  000070                     WriteTimer0@timer0:
   675                           	opt stack 0
   676  000070                     WriteTimer1@timer1:
   677                           	opt stack 0
   678  000070                     Open1USART@spbrg:
   679                           	opt stack 0
   680  000070                     ___wmul@multiplier:
   681                           	opt stack 0
   682  000070                     ___awmod@dividend:
   683                           	opt stack 0
   684  000070                     ___ftpack@arg:
   685                           	opt stack 0
   686  000070                     ___ftge@ff1:
   687                           	opt stack 0
   688  000070                     ___ftneg@f1:
   689                           	opt stack 0
   690  000070                     frexp@value:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x10
   694  000070                     	ds	1
   695  000071                     OWWriteByte@byte:
   696                           	opt stack 0
   697  000071                     OWReadByte@result:
   698                           	opt stack 0
   699  000071                     OpenADC@portconfig:
   700                           	opt stack 0
   701  000071                     SetChanADC@channel:
   702                           	opt stack 0
   703  000071                     Delay10KTCYx@unit:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x11
   707  000071                     	ds	1
   708  000072                     ??_OpenADC:
   709  000072                     ??_ReadADC:
   710  000072                     ??_SetDCPWM5:
   711  000072                     ??_SetDCPWM4:
   712  000072                     ??_DisplaySensorStatuses:
   713  000072                     ?_ReadIntEEPROM:
   714                           	opt stack 0
   715  000072                     SetADCChannel@channel:
   716                           	opt stack 0
   717  000072                     WriteEEPROM@data:
   718                           	opt stack 0
   719  000072                     OWWriteByte@i:
   720                           	opt stack 0
   721  000072                     OWReadByte@i:
   722                           	opt stack 0
   723  000072                     Open1USART@config:
   724                           	opt stack 0
   725  000072                     ReadIntEEPROM@address:
   726                           	opt stack 0
   727  000072                     ReadCharEEPROM@address:
   728                           	opt stack 0
   729  000072                     WriteTimer0@timer:
   730                           	opt stack 0
   731  000072                     WriteTimer1@timer:
   732                           	opt stack 0
   733  000072                     ___wmul@multiplicand:
   734                           	opt stack 0
   735  000072                     ___awmod@divisor:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x12
   739  000072                     	ds	1
   740  000073                     ??_CalibrateOffsets:
   741  000073                     ?_ReadVoltage:
   742                           	opt stack 0
   743  000073                     ?_ReadCurrent:
   744                           	opt stack 0
   745  000073                     ?_ReadAccumulatedCurrent:
   746                           	opt stack 0
   747  000073                     CalculateSensorStatuses@index:
   748                           	opt stack 0
   749  000073                     ___ftpack@exp:
   750                           	opt stack 0
   751  000073                     WriteIntEEPROM@address:
   752                           	opt stack 0
   753  000073                     WriteCharEEPROM@address:
   754                           	opt stack 0
   755  000073                     frexp@eptr:
   756                           	opt stack 0
   757  000073                     ___ftge@ff2:
   758                           	opt stack 0
   759                           
   760                           ; 3 bytes @ 0x13
   761  000073                     	ds	1
   762  000074                     ??_ReadIntEEPROM:
   763  000074                     NormaliseSensorReadings@index:
   764                           	opt stack 0
   765  000074                     DisplaySensorStatuses@index:
   766                           	opt stack 0
   767  000074                     OpenADC@config:
   768                           	opt stack 0
   769  000074                     ___awmod@counter:
   770                           	opt stack 0
   771  000074                     ___ftpack@sign:
   772                           	opt stack 0
   773  000074                     SetDCPWM4@DCycle:
   774                           	opt stack 0
   775  000074                     SetDCPWM5@DCycle:
   776                           	opt stack 0
   777  000074                     ___wmul@product:
   778                           	opt stack 0
   779  000074                     ConfigureUltrasound@echo_to_cm:
   780                           	opt stack 0
   781                           
   782                           ; 3 bytes @ 0x14
   783  000074                     	ds	1
   784  000075                     ??_ReadVoltage:
   785  000075                     ??_ReadCurrent:
   786  000075                     ??___ftpack:
   787  000075                     ??_frexp:
   788  000075                     CalibrateOffsets@index:
   789                           	opt stack 0
   790  000075                     WriteCharEEPROM@data:
   791                           	opt stack 0
   792  000075                     ___awmod@sign:
   793                           	opt stack 0
   794  000075                     WriteIntEEPROM@data:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x15
   798  000075                     	ds	1
   799  000076                     ??_PutCharRxBuf:
   800  000076                     ??_GetCharRxBuf:
   801  000076                     ??_PutCharTxBuf:
   802  000076                     ??___ftge:
   803  000076                     SetDCMotorL@duty_cycle:
   804                           	opt stack 0
   805  000076                     SetDCMotorR@duty_cycle:
   806                           	opt stack 0
   807  000076                     ReadCurrent@result:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x16
   811  000076                     	ds	1
   812  000077                     ??_ReadAccumulatedCurrent:
   813  000077                     PutCharTxBuf@ch:
   814                           	opt stack 0
   815  000077                     PutCharRxBuf@ch:
   816                           	opt stack 0
   817  000077                     GetCharRxBuf@ch:
   818                           	opt stack 0
   819  000077                     ReadIntEEPROM@data:
   820                           	opt stack 0
   821  000077                     ConfigureUltrasound@echo_to_in:
   822                           	opt stack 0
   823                           
   824                           ; 3 bytes @ 0x17
   825  000077                     	ds	1
   826  000078                     ?___ftdiv:
   827                           	opt stack 0
   828  000078                     ?___awtoft:
   829                           	opt stack 0
   830  000078                     ?___lbtoft:
   831                           	opt stack 0
   832  000078                     ?___lltoft:
   833                           	opt stack 0
   834  000078                     SendStatus@status_code:
   835                           	opt stack 0
   836  000078                     SetDCMotorPID@PIDoutput:
   837                           	opt stack 0
   838  000078                     SendLineMode@line_mode:
   839                           	opt stack 0
   840  000078                     SendOffsets@offsets_array:
   841                           	opt stack 0
   842  000078                     SendThreshold@sensor_threshold:
   843                           	opt stack 0
   844  000078                     SendDefaultPIDValues@Kp:
   845                           	opt stack 0
   846  000078                     SendStoredPIDValues@Kp:
   847                           	opt stack 0
   848  000078                     SendCurrentPIDValues@Kp:
   849                           	opt stack 0
   850  000078                     SendBattVoltageInitial@reading:
   851                           	opt stack 0
   852  000078                     SendBattVoltage@reading:
   853                           	opt stack 0
   854  000078                     SendBattCurrent@reading:
   855                           	opt stack 0
   856  000078                     SendBattCurrentAcc@reading:
   857                           	opt stack 0
   858  000078                     ReadVoltage@result:
   859                           	opt stack 0
   860  000078                     ___awtoft@c:
   861                           	opt stack 0
   862  000078                     ___ftdiv@f1:
   863                           	opt stack 0
   864  000078                     ___lltoft@c:
   865                           	opt stack 0
   866                           
   867                           ; 4 bytes @ 0x18
   868  000078                     	ds	1
   869  000079                     ??_SetPIDValues:
   870                           
   871                           ; 0 bytes @ 0x19
   872  000079                     	ds	1
   873  00007A                     ??_SendOffsets:
   874  00007A                     ??_SendThreshold:
   875  00007A                     ??_SendBattVoltageInitial:
   876  00007A                     ??_SetDCMotorPID:
   877  00007A                     ??_SendBattVoltage:
   878  00007A                     ??_SendBattCurrent:
   879  00007A                     ??_SendBattCurrentAcc:
   880  00007A                     SendDefaultPIDValues@Kd:
   881                           	opt stack 0
   882  00007A                     SendStoredPIDValues@Kd:
   883                           	opt stack 0
   884  00007A                     SendCurrentPIDValues@Kd:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x1A
   888  00007A                     	ds	1
   889  00007B                     ___awtoft@sign:
   890                           	opt stack 0
   891  00007B                     ___lbtoft@c:
   892                           	opt stack 0
   893  00007B                     ___ftdiv@f2:
   894                           	opt stack 0
   895                           
   896                           ; 3 bytes @ 0x1B
   897  00007B                     	ds	1
   898  00007C                     ??___lltoft:
   899  00007C                     ?___ftmul:
   900                           	opt stack 0
   901  00007C                     SetPIDValues@char_index:
   902                           	opt stack 0
   903  00007C                     SendOffsets@index:
   904                           	opt stack 0
   905  00007C                     SendDefaultPIDValues@Ki:
   906                           	opt stack 0
   907  00007C                     SendStoredPIDValues@Ki:
   908                           	opt stack 0
   909  00007C                     SendCurrentPIDValues@Ki:
   910                           	opt stack 0
   911  00007C                     ___ftmul@f1:
   912                           	opt stack 0
   913  00007C                     ReadAccumulatedCurrent@result:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x1C
   917  00007C                     	ds	1
   918  00007D                     ??_GenerateCalibration:
   919  00007D                     
   920                           ; 0 bytes @ 0x1D
   921  00007D                     	ds	1
   922  00007E                     ??___ftdiv:
   923                           
   924                           ; 0 bytes @ 0x1E
   925  00007E                     	ds	1
   926  00007F                     GenerateCalibration@index:
   927                           	opt stack 0
   928  00007F                     ___ftmul@f2:
   929                           	opt stack 0
   930                           
   931                           ; 3 bytes @ 0x1F
   932  00007F                     	ds	1
   933  000080                     ??_LoadCalibration:
   934  000080                     ___lltoft@exp:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x20
   938  000080                     	ds	1
   939  000081                     ___ftdiv@cntr:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x21
   943  000081                     	ds	1
   944  000082                     ??___ftmul:
   945  000082                     LoadCalibration@index:
   946                           	opt stack 0
   947  000082                     ___ftdiv@f3:
   948                           	opt stack 0
   949                           
   950                           ; 3 bytes @ 0x22
   951  000082                     	ds	3
   952  000085                     ___ftdiv@exp:
   953                           	opt stack 0
   954  000085                     ___ftmul@exp:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x25
   958  000085                     	ds	1
   959  000086                     ___ftdiv@sign:
   960                           	opt stack 0
   961  000086                     ___ftmul@f3_as_product:
   962                           	opt stack 0
   963                           
   964                           ; 3 bytes @ 0x26
   965  000086                     	ds	3
   966  000089                     ___ftmul@cntr:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x29
   970  000089                     	ds	1
   971  00008A                     ___ftmul@sign:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x2A
   975  00008A                     	ds	1
   976  00008B                     ?___ftadd:
   977                           	opt stack 0
   978  00008B                     ?___fttol:
   979                           	opt stack 0
   980  00008B                     ___ftadd@f1:
   981                           	opt stack 0
   982  00008B                     ___fttol@f1:
   983                           	opt stack 0
   984                           
   985                           ; 3 bytes @ 0x2B
   986  00008B                     	ds	3
   987  00008E                     ___ftadd@f2:
   988                           	opt stack 0
   989                           
   990                           ; 3 bytes @ 0x2E
   991  00008E                     	ds	1
   992  00008F                     ??___fttol:
   993                           
   994                           ; 0 bytes @ 0x2F
   995  00008F                     	ds	2
   996  000091                     ??___ftadd:
   997                           
   998                           ; 0 bytes @ 0x31
   999  000091                     	ds	3
  1000  000094                     ___ftadd@sign:
  1001                           	opt stack 0
  1002  000094                     ___fttol@sign1:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x34
  1006  000094                     	ds	1
  1007  000095                     ___ftadd@exp2:
  1008                           	opt stack 0
  1009  000095                     ___fttol@lval:
  1010                           	opt stack 0
  1011                           
  1012                           ; 4 bytes @ 0x35
  1013  000095                     	ds	1
  1014  000096                     ___ftadd@exp1:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x36
  1018  000096                     	ds	1
  1019  000097                     ?___ftsub:
  1020                           	opt stack 0
  1021  000097                     ?_eval_poly:
  1022                           	opt stack 0
  1023  000097                     ___ftsub@f1:
  1024                           	opt stack 0
  1025  000097                     eval_poly@x:
  1026                           	opt stack 0
  1027                           
  1028                           ; 3 bytes @ 0x37
  1029  000097                     	ds	2
  1030  000099                     ___fttol@exp1:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x39
  1034  000099                     	ds	1
  1035  00009A                     ?___altoft:
  1036                           	opt stack 0
  1037  00009A                     eval_poly@d:
  1038                           	opt stack 0
  1039  00009A                     ___ftsub@f2:
  1040                           	opt stack 0
  1041  00009A                     ___altoft@c:
  1042                           	opt stack 0
  1043                           
  1044                           ; 4 bytes @ 0x3A
  1045  00009A                     	ds	2
  1046  00009C                     eval_poly@n:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x3C
  1050  00009C                     	ds	1
  1051  00009D                     
  1052                           ; 0 bytes @ 0x3D
  1053  00009D                     	ds	1
  1054  00009E                     ??_eval_poly:
  1055  00009E                     ??___altoft:
  1056                           
  1057                           ; 0 bytes @ 0x3E
  1058  00009E                     	ds	2
  1059  0000A0                     eval_poly@res:
  1060                           	opt stack 0
  1061                           
  1062                           ; 3 bytes @ 0x40
  1063  0000A0                     	ds	2
  1064  0000A2                     ___altoft@exp:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0x42
  1068  0000A2                     	ds	1
  1069  0000A3                     ?_log:
  1070                           	opt stack 0
  1071  0000A3                     ?_ldexp:
  1072                           	opt stack 0
  1073  0000A3                     ___altoft@sign:
  1074                           	opt stack 0
  1075  0000A3                     ldexp@value:
  1076                           	opt stack 0
  1077  0000A3                     log@x:
  1078                           	opt stack 0
  1079                           
  1080                           ; 3 bytes @ 0x43
  1081  0000A3                     	ds	1
  1082  0000A4                     ?_floor:
  1083                           	opt stack 0
  1084  0000A4                     floor@x:
  1085                           	opt stack 0
  1086                           
  1087                           ; 3 bytes @ 0x44
  1088  0000A4                     	ds	2
  1089  0000A6                     ldexp@newexp:
  1090                           	opt stack 0
  1091  0000A6                     log@exponent:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x46
  1095  0000A6                     	ds	1
  1096  0000A7                     floor@i:
  1097                           	opt stack 0
  1098                           
  1099                           ; 3 bytes @ 0x47
  1100  0000A7                     	ds	1
  1101  0000A8                     ??_ldexp:
  1102                           
  1103                           ; 0 bytes @ 0x48
  1104  0000A8                     	ds	2
  1105  0000AA                     floor@expon:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x4A
  1109  0000AA                     	ds	2
  1110  0000AC                     ?_exp:
  1111                           	opt stack 0
  1112  0000AC                     exp@x:
  1113                           	opt stack 0
  1114                           
  1115                           ; 3 bytes @ 0x4C
  1116  0000AC                     	ds	3
  1117  0000AF                     _exp$3813:
  1118                           	opt stack 0
  1119                           
  1120                           ; 3 bytes @ 0x4F
  1121  0000AF                     	ds	3
  1122  0000B2                     exp@exponent:
  1123                           	opt stack 0
  1124                           
  1125                           ; 2 bytes @ 0x52
  1126  0000B2                     	ds	2
  1127  0000B4                     exp@sign:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x54
  1131  0000B4                     	ds	1
  1132  0000B5                     ?_pow:
  1133                           	opt stack 0
  1134  0000B5                     pow@x:
  1135                           	opt stack 0
  1136                           
  1137                           ; 3 bytes @ 0x55
  1138  0000B5                     	ds	3
  1139  0000B8                     pow@y:
  1140                           	opt stack 0
  1141                           
  1142                           ; 3 bytes @ 0x58
  1143  0000B8                     	ds	3
  1144  0000BB                     _pow$3811:
  1145                           	opt stack 0
  1146                           
  1147                           ; 3 bytes @ 0x5B
  1148  0000BB                     	ds	3
  1149  0000BE                     _pow$3812:
  1150                           	opt stack 0
  1151                           
  1152                           ; 3 bytes @ 0x5E
  1153  0000BE                     	ds	3
  1154  0000C1                     pow@sign:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x61
  1158  0000C1                     	ds	1
  1159  0000C2                     pow@yi:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x62
  1163  0000C2                     	ds	4
  1164  0000C6                     _CalculateSensorSums$3810:
  1165                           	opt stack 0
  1166                           
  1167                           ; 3 bytes @ 0x66
  1168  0000C6                     	ds	3
  1169  0000C9                     CalculateSensorSums@sum:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x69
  1173  0000C9                     	ds	1
  1174  0000CA                     CalculateSensorSums@index:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x6A
  1178  0000CA                     	ds	1
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           
  1182                           	psect	cstackCOMRAM
  1183  00002B                     __pcstackCOMRAM:
  1184                           	opt stack 0
  1185  00002B                     ??i1_SetChanADC:
  1186  00002B                     ?i1_ReadADC:
  1187                           	opt stack 0
  1188  00002B                     ?i1___awmod:
  1189                           	opt stack 0
  1190  00002B                     Write1USART@data:
  1191                           	opt stack 0
  1192  00002B                     i1___awmod@dividend:
  1193                           	opt stack 0
  1194                           
  1195                           ; 2 bytes @ 0x0
  1196  00002B                     	ds	1
  1197  00002C                     i1SetChanADC@channel:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0x1
  1201  00002C                     	ds	1
  1202  00002D                     ??i1_ReadADC:
  1203  00002D                     i1SetADCChannel@channel:
  1204                           	opt stack 0
  1205  00002D                     i1___awmod@divisor:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x2
  1209  00002D                     	ds	2
  1210  00002F                     i1___awmod@counter:
  1211                           	opt stack 0
  1212                           
  1213                           ; 1 bytes @ 0x4
  1214  00002F                     	ds	1
  1215  000030                     i1___awmod@sign:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x5
  1219  000030                     	ds	1
  1220  000031                     ??_GetCharTxBuf:
  1221                           
  1222                           ; 0 bytes @ 0x6
  1223  000031                     	ds	1
  1224  000032                     GetCharTxBuf@ch:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0x7
  1228  000032                     	ds	1
  1229  000033                     ??_isrLP:
  1230                           
  1231                           ; 0 bytes @ 0x8
  1232  000033                     	ds	17
  1233  000044                     ?_ReadTimer1:
  1234                           	opt stack 0
  1235  000044                     i2WriteTimer0@timer0:
  1236                           	opt stack 0
  1237  000044                     i2WriteTimer1@timer1:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x19
  1241  000044                     	ds	2
  1242  000046                     postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           
  1245                           ; 0 bytes @ 0x1B
  1246 ;;
  1247 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1248 ;;
  1249 ;; *************** function _main *****************
  1250 ;; Defined at:
  1251 ;;		line 785 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  battery_curr    4   30[BANK1 ] unsigned long 
  1256 ;;  battery_volt    2   36[BANK1 ] unsigned int 
  1257 ;;  battery_volt    2   28[BANK1 ] PTR unsigned int 
  1258 ;;		 -> main@battery_voltage(2), 
  1259 ;;  I_temp          2   25[BANK1 ] int 
  1260 ;;  D_temp          2   23[BANK1 ] int 
  1261 ;;  battery_curr    2   21[BANK1 ] unsigned int 
  1262 ;;  Ki_stored       2   17[BANK1 ] int 
  1263 ;;  Kd_stored       2   15[BANK1 ] int 
  1264 ;;  Kp_stored       2   13[BANK1 ] int 
  1265 ;;  battery_curr    2   11[BANK1 ] PTR unsigned long 
  1266 ;;		 -> main@battery_current_acc(4), 
  1267 ;;  battery_curr    2    9[BANK1 ] PTR unsigned int 
  1268 ;;		 -> main@battery_current(2), 
  1269 ;;  line_mode_pt    2    7[BANK1 ] PTR unsigned char 
  1270 ;;		 -> line_mode(1), 
  1271 ;;  sensor_sum_p    2    5[BANK1 ] PTR unsigned char 
  1272 ;;		 -> main@sensor_sum(1), 
  1273 ;;  echo_length     2    0        unsigned int 
  1274 ;;  sensor_sum      1   39[BANK1 ] unsigned char 
  1275 ;;  line_end_fla    1   38[BANK1 ] unsigned char 
  1276 ;;  command_msg     1   35[BANK1 ] unsigned char 
  1277 ;;  stop_flag       1   34[BANK1 ] unsigned char 
  1278 ;;  send_battery    1   27[BANK1 ] unsigned char 
  1279 ;;  wall_detecte    1   20[BANK1 ] unsigned char 
  1280 ;;  find_line_fl    1   19[BANK1 ] unsigned char 
  1281 ;;  loop_count      1    4[BANK1 ] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;		None               void
  1284 ;; Registers used:
  1285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;Total ram usage:       40 bytes
  1296 ;; Hardware stack levels required when called:   13
  1297 ;; This function calls:
  1298 ;;		_BusyDistanceAcq
  1299 ;;		_BusySensorAcq
  1300 ;;		_CalculateSensorError
  1301 ;;		_CalculateSensorStatuses
  1302 ;;		_CalculateSensorSums
  1303 ;;		_CommandAvailable
  1304 ;;		_ConfigureADC
  1305 ;;		_ConfigureBuggyIO
  1306 ;;		_ConfigureInterrupts
  1307 ;;		_ConfigurePWM
  1308 ;;		_ConfigureTimer0
  1309 ;;		_ConfigureTimer1
  1310 ;;		_ConfigureTimer2
  1311 ;;		_ConfigureUltrasound
  1312 ;;		_ConfigureWireless
  1313 ;;		_Delay10KTCYx
  1314 ;;		_Delay1KTCYx
  1315 ;;		_DisableMotors
  1316 ;;		_DisplaySensorStatuses
  1317 ;;		_EnableMotors
  1318 ;;		_EnableSensorLEDS
  1319 ;;		_FlashLEDS
  1320 ;;		_GenerateCalibration
  1321 ;;		_GetCommand
  1322 ;;		_GetDistance
  1323 ;;		_GetSensorReadings
  1324 ;;		_LoadCalibration
  1325 ;;		_LoadPIDValues
  1326 ;;		_NormaliseSensorReadings
  1327 ;;		_PB1pressed
  1328 ;;		_PB2pressed
  1329 ;;		_ReadAccumulatedCurrent
  1330 ;;		_ReadCurrent
  1331 ;;		_ReadEchoLength
  1332 ;;		_ReadIntEEPROM
  1333 ;;		_ReadMillis0
  1334 ;;		_ReadMillis1
  1335 ;;		_ReadMillis2
  1336 ;;		_ReadVoltage
  1337 ;;		_ResetAccumulatedCurrent
  1338 ;;		_ResetMillis0
  1339 ;;		_ResetMillis1
  1340 ;;		_ResetMillis2
  1341 ;;		_SendBattCurrent
  1342 ;;		_SendBattCurrentAcc
  1343 ;;		_SendBattVoltage
  1344 ;;		_SendBattVoltageInitial
  1345 ;;		_SendCurrentPIDValues
  1346 ;;		_SendDefaultPIDValues
  1347 ;;		_SendLineMode
  1348 ;;		_SendStatus
  1349 ;;		_SendStoredPIDValues
  1350 ;;		_SetDCMotorL
  1351 ;;		_SetDCMotorPID
  1352 ;;		_SetDCMotorR
  1353 ;;		_SetDirectionForward
  1354 ;;		_SetForwardsMotorR
  1355 ;;		_SetPIDValues
  1356 ;;		_SetReverseMotorL
  1357 ;;		_SetUnipolar
  1358 ;;		_StopMotors
  1359 ;;		___wmul
  1360 ;; This function is called by:
  1361 ;;		Startup code after reset
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text0
  1366  00103C                     __ptext0:
  1367                           	opt stack 0
  1368  00103C                     _main:
  1369                           	opt stack 18
  1370                           
  1371                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 788: unsigned char sensor_sum, loop_count = 0, st
      +                          op_flag, find_line_flag, line_end_flag, wall_detected_flag, send_battery_stats_flag, com
      +                          mand_msg;
  1372                           
  1373                           ;incstack = 0
  1374  00103C  0E00               	movlw	0
  1375  00103E  0101               	movlb	1	; () banked
  1376  001040  6F40               	movwf	main@loop_count& (0+255),b
  1377                           
  1378                           ; BSR set to: 1
  1379                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 789: unsigned int echo_length, battery_voltage, b
      +                          attery_current;
  1380                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 790: unsigned long int battery_current_acc;
  1381                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 791: int D_temp, I_temp;
  1382                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 794: unsigned char *sensor_sum_ptr, *line_mode_pt
      +                          r;
  1383                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 795: sensor_sum_ptr = &sensor_sum;
  1384  001042  0E63               	movlw	low main@sensor_sum
  1385  001044  0101               	movlb	1	; () banked
  1386  001046  6F41               	movwf	main@sensor_sum_ptr& (0+255),b
  1387  001048  0E01               	movlw	high main@sensor_sum
  1388  00104A  0101               	movlb	1	; () banked
  1389  00104C  6F42               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 796: line_mode_ptr = &line_mode;
  1393  00104E  0E2A               	movlw	low _line_mode
  1394  001050  0101               	movlb	1	; () banked
  1395  001052  6F43               	movwf	main@line_mode_ptr& (0+255),b
  1396  001054  0E00               	movlw	high _line_mode
  1397  001056  0101               	movlb	1	; () banked
  1398  001058  6F44               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1399                           
  1400                           ; BSR set to: 1
  1401                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 798: unsigned int *battery_voltage_ptr, *battery_
      +                          current_ptr;
  1402                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 799: unsigned long int *battery_current_acc_ptr;
  1403                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 801: battery_voltage_ptr = &battery_voltage;
  1404  00105A  0E60               	movlw	low main@battery_voltage
  1405  00105C  0101               	movlb	1	; () banked
  1406  00105E  6F58               	movwf	main@battery_voltage_ptr& (0+255),b
  1407  001060  0E01               	movlw	high main@battery_voltage
  1408  001062  0101               	movlb	1	; () banked
  1409  001064  6F59               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1410                           
  1411                           ; BSR set to: 1
  1412                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 802: battery_current_ptr = &battery_current;
  1413  001066  0E51               	movlw	low main@battery_current
  1414  001068  0101               	movlb	1	; () banked
  1415  00106A  6F45               	movwf	main@battery_current_ptr& (0+255),b
  1416  00106C  0E01               	movlw	high main@battery_current
  1417  00106E  0101               	movlb	1	; () banked
  1418  001070  6F46               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 803: battery_current_acc_ptr = &battery_current_a
      +                          cc;
  1422  001072  0E5A               	movlw	low main@battery_current_acc
  1423  001074  0101               	movlb	1	; () banked
  1424  001076  6F47               	movwf	main@battery_current_acc_ptr& (0+255),b
  1425  001078  0E01               	movlw	high main@battery_current_acc
  1426  00107A  0101               	movlb	1	; () banked
  1427  00107C  6F48               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 805: sensor_threshold_ptr = &sensor_threshold;
  1431  00107E  0E28               	movlw	low _sensor_threshold
  1432  001080  0100               	movlb	0	; () banked
  1433  001082  6FEE               	movwf	_sensor_threshold_ptr& (0+255),b
  1434  001084  0E00               	movlw	high _sensor_threshold
  1435  001086  0100               	movlb	0	; () banked
  1436  001088  6FEF               	movwf	(_sensor_threshold_ptr+1)& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 807: ConfigureUltrasound(0.0137, 0.054);
  1440  00108A  0E76               	movlw	118
  1441  00108C  0100               	movlb	0	; () banked
  1442  00108E  6F74               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1443  001090  0E60               	movlw	96
  1444  001092  0100               	movlb	0	; () banked
  1445  001094  6F75               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1446  001096  0E3C               	movlw	60
  1447  001098  0100               	movlb	0	; () banked
  1448  00109A  6F76               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1449  00109C  0E2F               	movlw	47
  1450  00109E  0100               	movlb	0	; () banked
  1451  0010A0  6F77               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1452  0010A2  0E5D               	movlw	93
  1453  0010A4  0100               	movlb	0	; () banked
  1454  0010A6  6F78               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1455  0010A8  0E3D               	movlw	61
  1456  0010AA  0100               	movlb	0	; () banked
  1457  0010AC  6F79               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1458  0010AE  ECFA  F021         	call	_ConfigureUltrasound	;wreg free
  1459                           
  1460                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 808: ConfigureBuggyIO();
  1461  0010B2  ECCE  F022         	call	_ConfigureBuggyIO	;wreg free
  1462                           
  1463                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 809: ConfigureInterrupts();
  1464  0010B6  EC0E  F022         	call	_ConfigureInterrupts	;wreg free
  1465                           
  1466                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 810: ConfigureTimer0();
  1467  0010BA  EC0A  F023         	call	_ConfigureTimer0	;wreg free
  1468                           
  1469                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 811: ConfigureTimer1();
  1470  0010BE  ECE8  F022         	call	_ConfigureTimer1	;wreg free
  1471                           
  1472                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 812: ConfigureTimer2();
  1473  0010C2  ECFD  F023         	call	_ConfigureTimer2	;wreg free
  1474                           
  1475                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 813: ConfigurePWM();
  1476  0010C6  ECCB  F023         	call	_ConfigurePWM	;wreg free
  1477                           
  1478                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 814: ConfigureADC();
  1479  0010CA  EC3F  F023         	call	_ConfigureADC	;wreg free
  1480                           
  1481                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 815: ConfigureWireless();
  1482  0010CE  ECBF  F022         	call	_ConfigureWireless	;wreg free
  1483                           
  1484                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 817: DisableMotors();
  1485  0010D2  EC12  F024         	call	_DisableMotors	;wreg free
  1486                           
  1487                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 819: Delay10KTCYx(100);
  1488  0010D6  0E64               	movlw	100
  1489  0010D8  ECA1  F022         	call	_Delay10KTCYx
  1490                           
  1491                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 821: battery_voltage = ReadVoltage();
  1492  0010DC  EC13  F01D         	call	_ReadVoltage	;wreg free
  1493  0010E0  C073  F160         	movff	?_ReadVoltage,main@battery_voltage
  1494  0010E4  C074  F161         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1495                           
  1496                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 823: SendStatus(0x00);
  1497  0010E8  0E00               	movlw	0
  1498  0010EA  EC38  F020         	call	_SendStatus
  1499                           
  1500                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 825: SendBattVoltageInitial(battery_voltage_ptr);
  1501  0010EE  C158  F078         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1502  0010F2  C159  F079         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1503  0010F6  EC48  F01D         	call	_SendBattVoltageInitial	;wreg free
  1504                           
  1505                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 828: LATJ = 0x1F;
  1506  0010FA  0E1F               	movlw	31
  1507  0010FC  6E91               	movwf	3985,c	;volatile
  1508                           
  1509                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 829: SendStatus(0x01);
  1510  0010FE  0E01               	movlw	1
  1511  001100  EC38  F020         	call	_SendStatus
  1512  001104  D000               	goto	l8142
  1513  001106                     l8142:
  1514                           
  1515                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 832: if(PB1pressed() == 1) {
  1516  001106  EC42  F01E         	call	_PB1pressed	;wreg free
  1517  00110A  06E8               	decf	wreg,f,c
  1518  00110C  A4D8               	btfss	status,2,c
  1519  00110E  D003               	goto	l8148
  1520                           
  1521                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 833: line_mode = 0;
  1522  001110  0E00               	movlw	0
  1523  001112  D007               	goto	L1
  1524                           
  1525                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 835: }
  1526                           
  1527                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 834: break;
  1528  001114  D7F8               	goto	l8142
  1529  001116                     l8148:
  1530                           
  1531                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 836: else if(PB2pressed() == 1) {
  1532  001116  ECE4  F01D         	call	_PB2pressed	;wreg free
  1533  00111A  06E8               	decf	wreg,f,c
  1534  00111C  A4D8               	btfss	status,2,c
  1535  00111E  D7F3               	goto	l8142
  1536                           
  1537                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 837: line_mode = 1;
  1538  001120  0E01               	movlw	1
  1539  001122                     L1:
  1540  001122  6E2A               	movwf	_line_mode,c
  1541                           
  1542                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 838: break;
  1543  001124  D001               	goto	l8152
  1544  001126  D7EF               	goto	l8142
  1545  001128                     l8152:
  1546                           
  1547                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 839: }
  1548                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 840: }
  1549                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 842: SendLineMode(line_mode_ptr);
  1550  001128  C143  F078         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1551  00112C  C144  F079         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1552  001130  ECFD  F01F         	call	_SendLineMode	;wreg free
  1553                           
  1554                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 843: FlashLEDS();
  1555  001134  ECE6  F021         	call	_FlashLEDS	;wreg free
  1556                           
  1557                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 845: EnableSensorLEDS();
  1558  001138  EC07  F024         	call	_EnableSensorLEDS	;wreg free
  1559                           
  1560                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 848: LATJ = 0x0F;
  1561  00113C  0E0F               	movlw	15
  1562  00113E  6E91               	movwf	3985,c	;volatile
  1563                           
  1564                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 849: SendStatus(0x02);
  1565  001140  0E02               	movlw	2
  1566  001142  EC38  F020         	call	_SendStatus
  1567  001146  D000               	goto	l8162
  1568  001148                     l8162:
  1569                           
  1570                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 852: if(PB1pressed() == 1) {
  1571  001148  EC42  F01E         	call	_PB1pressed	;wreg free
  1572  00114C  06E8               	decf	wreg,f,c
  1573  00114E  A4D8               	btfss	status,2,c
  1574  001150  D006               	goto	l8170
  1575                           
  1576                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 853: FlashLEDS();
  1577  001152  ECE6  F021         	call	_FlashLEDS	;wreg free
  1578                           
  1579                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 854: GenerateCalibration();
  1580  001156  ECD0  F012         	call	_GenerateCalibration	;wreg free
  1581                           
  1582                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 855: break;
  1583  00115A  D00C               	goto	l8176
  1584                           
  1585                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 856: }
  1586  00115C  D7F5               	goto	l8162
  1587  00115E                     l8170:
  1588                           
  1589                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 857: else if(PB2pressed() == 1) {
  1590  00115E  ECE4  F01D         	call	_PB2pressed	;wreg free
  1591  001162  06E8               	decf	wreg,f,c
  1592  001164  A4D8               	btfss	status,2,c
  1593  001166  D7F0               	goto	l8162
  1594                           
  1595                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 858: FlashLEDS();
  1596  001168  ECE6  F021         	call	_FlashLEDS	;wreg free
  1597                           
  1598                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 859: LoadCalibration();
  1599  00116C  EC4D  F00E         	call	_LoadCalibration	;wreg free
  1600                           
  1601                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 860: break;
  1602  001170  D001               	goto	l8176
  1603  001172  D7EA               	goto	l8162
  1604  001174                     l8176:
  1605                           
  1606                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 861: }
  1607                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 863: }
  1608                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 865: FlashLEDS();
  1609  001174  ECE6  F021         	call	_FlashLEDS	;wreg free
  1610                           
  1611                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 868: LATJ = 0x03;
  1612  001178  0E03               	movlw	3
  1613  00117A  6E91               	movwf	3985,c	;volatile
  1614                           
  1615                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 869: SendStatus(0x05);
  1616  00117C  0E05               	movlw	5
  1617  00117E  EC38  F020         	call	_SendStatus
  1618                           
  1619                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 871: SendDefaultPIDValues(20, 0, 0);
  1620  001182  0E00               	movlw	0
  1621  001184  0100               	movlb	0	; () banked
  1622  001186  6F79               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1623  001188  0E14               	movlw	20
  1624  00118A  6F78               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1625  00118C  0E00               	movlw	0
  1626  00118E  0100               	movlb	0	; () banked
  1627  001190  6F7B               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1628  001192  0E00               	movlw	0
  1629  001194  6F7A               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1630  001196  0E00               	movlw	0
  1631  001198  0100               	movlb	0	; () banked
  1632  00119A  6F7D               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1633  00119C  0E00               	movlw	0
  1634  00119E  6F7C               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1635  0011A0  ECA9  F01C         	call	_SendDefaultPIDValues	;wreg free
  1636                           
  1637                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 873: int Kp_stored, Kd_stored, Ki_stored;
  1638                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 875: Kp_stored = ReadIntEEPROM(0x0011);
  1639  0011A4  0E00               	movlw	0
  1640  0011A6  0100               	movlb	0	; () banked
  1641  0011A8  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1642  0011AA  0E11               	movlw	17
  1643  0011AC  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  1644  0011AE  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  1645  0011B2  C072  F149         	movff	?_ReadIntEEPROM,main@Kp_stored
  1646  0011B6  C073  F14A         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1647                           
  1648                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 876: Kd_stored = ReadIntEEPROM(0x0013);
  1649  0011BA  0E00               	movlw	0
  1650  0011BC  0100               	movlb	0	; () banked
  1651  0011BE  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1652  0011C0  0E13               	movlw	19
  1653  0011C2  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  1654  0011C4  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  1655  0011C8  C072  F14B         	movff	?_ReadIntEEPROM,main@Kd_stored
  1656  0011CC  C073  F14C         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1657                           
  1658                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 877: Ki_stored = ReadIntEEPROM(0x0015);
  1659  0011D0  0E00               	movlw	0
  1660  0011D2  0100               	movlb	0	; () banked
  1661  0011D4  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1662  0011D6  0E15               	movlw	21
  1663  0011D8  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  1664  0011DA  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  1665  0011DE  C072  F14D         	movff	?_ReadIntEEPROM,main@Ki_stored
  1666  0011E2  C073  F14E         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1667                           
  1668                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 879: SendStoredPIDValues(Kp_stored, Kd_stored, Ki
      +                          _stored);
  1669  0011E6  C149  F078         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1670  0011EA  C14A  F079         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1671  0011EE  C14B  F07A         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1672  0011F2  C14C  F07B         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1673  0011F6  C14D  F07C         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1674  0011FA  C14E  F07D         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1675  0011FE  EC74  F01C         	call	_SendStoredPIDValues	;wreg free
  1676  001202  D000               	goto	l8192
  1677  001204                     l8192:
  1678                           
  1679                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 882: if(PB1pressed() == 1) {
  1680  001204  EC42  F01E         	call	_PB1pressed	;wreg free
  1681  001208  06E8               	decf	wreg,f,c
  1682  00120A  A4D8               	btfss	status,2,c
  1683  00120C  D008               	goto	l8202
  1684                           
  1685                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 883: FlashLEDS();
  1686  00120E  ECE6  F021         	call	_FlashLEDS	;wreg free
  1687                           
  1688                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 884: LATJ = 0x03;
  1689  001212  0E03               	movlw	3
  1690  001214  6E91               	movwf	3985,c	;volatile
  1691                           
  1692                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 885: SetPIDValues();
  1693  001216  ECBE  F00F         	call	_SetPIDValues	;wreg free
  1694                           
  1695                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 886: break;
  1696  00121A  D00E               	goto	l8210
  1697                           
  1698                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 887: }
  1699  00121C  D7F3               	goto	l8192
  1700  00121E                     l8202:
  1701                           
  1702                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 888: else if(PB2pressed() == 1) {
  1703  00121E  ECE4  F01D         	call	_PB2pressed	;wreg free
  1704  001222  06E8               	decf	wreg,f,c
  1705  001224  A4D8               	btfss	status,2,c
  1706  001226  D7EE               	goto	l8192
  1707                           
  1708                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 889: FlashLEDS();
  1709  001228  ECE6  F021         	call	_FlashLEDS	;wreg free
  1710                           
  1711                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 890: LATJ = 0x03;
  1712  00122C  0E03               	movlw	3
  1713  00122E  6E91               	movwf	3985,c	;volatile
  1714                           
  1715                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 891: LoadPIDValues();
  1716  001230  ECF9  F014         	call	_LoadPIDValues	;wreg free
  1717                           
  1718                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 892: break;
  1719  001234  D001               	goto	l8210
  1720  001236  D7E6               	goto	l8192
  1721  001238                     l8210:
  1722                           
  1723                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 893: }
  1724                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 894: }
  1725                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 896: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki)
      +                          ;
  1726  001238  C0D9  F078         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1727  00123C  C0DA  F079         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1728  001240  C0D5  F07A         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1729  001244  C0D6  F07B         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1730  001248  C0D7  F07C         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1731  00124C  C0D8  F07D         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1732  001250  ECDE  F01C         	call	_SendCurrentPIDValues	;wreg free
  1733  001254  D000               	goto	l8212
  1734  001256                     l8212:
  1735                           
  1736                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 902: FlashLEDS();
  1737  001256  ECE6  F021         	call	_FlashLEDS	;wreg free
  1738                           
  1739                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 904: LATJ = 0x01;
  1740  00125A  0E01               	movlw	1
  1741  00125C  6E91               	movwf	3985,c	;volatile
  1742                           
  1743                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 905: SendStatus(0x08);
  1744  00125E  0E08               	movlw	8
  1745  001260  EC38  F020         	call	_SendStatus
  1746  001264  D000               	goto	l8218
  1747  001266                     l8218:
  1748                           
  1749                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 908: if(PB1pressed() == 1) {
  1750  001266  EC42  F01E         	call	_PB1pressed	;wreg free
  1751  00126A  06E8               	decf	wreg,f,c
  1752  00126C  B4D8               	btfsc	status,2,c
  1753  00126E  D00F               	goto	l8228
  1754  001270  D001               	goto	l8222
  1755                           
  1756                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 909: break;
  1757  001272  D00D               	goto	l8228
  1758  001274                     l8222:
  1759                           
  1760                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 910: }
  1761                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 911: if(CommandAvailable() == 1 && GetCommand() =
      +                          = 0x02) {
  1762  001274  ECBD  F023         	call	_CommandAvailable	;wreg free
  1763  001278  06E8               	decf	wreg,f,c
  1764  00127A  A4D8               	btfss	status,2,c
  1765  00127C  D7F4               	goto	l8218
  1766  00127E  ECF9  F023         	call	_GetCommand	;wreg free
  1767  001282  0A02               	xorlw	2
  1768  001284  B4D8               	btfsc	status,2,c
  1769  001286  D003               	goto	l8228
  1770  001288  D7EE               	goto	l8218
  1771                           
  1772                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 912: break;
  1773  00128A  D001               	goto	l8228
  1774  00128C  D7EC               	goto	l8218
  1775  00128E                     l8228:
  1776                           
  1777                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 913: }
  1778                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 914: }
  1779                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 917: PID_error = 0;
  1780  00128E  0E00               	movlw	0
  1781  001290  0100               	movlb	0	; () banked
  1782  001292  6FDC               	movwf	(_PID_error+1)& (0+255),b
  1783  001294  0E00               	movlw	0
  1784  001296  6FDB               	movwf	_PID_error& (0+255),b
  1785                           
  1786                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 918: PID_output = 0;
  1787  001298  0E00               	movlw	0
  1788  00129A  0100               	movlb	0	; () banked
  1789  00129C  6FDE               	movwf	(_PID_output+1)& (0+255),b
  1790  00129E  0E00               	movlw	0
  1791  0012A0  6FDD               	movwf	_PID_output& (0+255),b
  1792                           
  1793                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 919: D_temp = 0;
  1794  0012A2  0E00               	movlw	0
  1795  0012A4  0101               	movlb	1	; () banked
  1796  0012A6  6F54               	movwf	(main@D_temp+1)& (0+255),b
  1797  0012A8  0E00               	movlw	0
  1798  0012AA  6F53               	movwf	main@D_temp& (0+255),b
  1799                           
  1800                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 920: I_temp = 0;
  1801  0012AC  0E00               	movlw	0
  1802  0012AE  0101               	movlb	1	; () banked
  1803  0012B0  6F56               	movwf	(main@I_temp+1)& (0+255),b
  1804  0012B2  0E00               	movlw	0
  1805  0012B4  6F55               	movwf	main@I_temp& (0+255),b
  1806                           
  1807                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 922: stop_flag = 0;
  1808  0012B6  0E00               	movlw	0
  1809  0012B8  0101               	movlb	1	; () banked
  1810  0012BA  6F5E               	movwf	main@stop_flag& (0+255),b
  1811                           
  1812                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 923: find_line_flag = 0;
  1813  0012BC  0E00               	movlw	0
  1814  0012BE  0101               	movlb	1	; () banked
  1815  0012C0  6F4F               	movwf	main@find_line_flag& (0+255),b
  1816                           
  1817                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 924: line_end_flag = 0;
  1818  0012C2  0E00               	movlw	0
  1819  0012C4  0101               	movlb	1	; () banked
  1820  0012C6  6F62               	movwf	main@line_end_flag& (0+255),b
  1821                           
  1822                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 925: wall_detected_flag = 0;
  1823  0012C8  0E00               	movlw	0
  1824  0012CA  0101               	movlb	1	; () banked
  1825  0012CC  6F50               	movwf	main@wall_detected_flag& (0+255),b
  1826                           
  1827                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 926: send_battery_stats_flag = 0;
  1828  0012CE  0E00               	movlw	0
  1829  0012D0  0101               	movlb	1	; () banked
  1830  0012D2  6F57               	movwf	main@send_battery_stats_flag& (0+255),b
  1831                           
  1832                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 928: LATJ = 0x00;
  1833  0012D4  0E00               	movlw	0
  1834  0012D6  6E91               	movwf	3985,c	;volatile
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 930: FlashLEDS();
  1838  0012D8  ECE6  F021         	call	_FlashLEDS	;wreg free
  1839                           
  1840                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 931: SendStatus(0x09);
  1841  0012DC  0E09               	movlw	9
  1842  0012DE  EC38  F020         	call	_SendStatus
  1843                           
  1844                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 933: ResetAccumulatedCurrent();
  1845  0012E2  EC8F  F021         	call	_ResetAccumulatedCurrent	;wreg free
  1846                           
  1847                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 935: ResetMillis0();
  1848  0012E6  ECD7  F023         	call	_ResetMillis0	;wreg free
  1849                           
  1850                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 936: ResetMillis1();
  1851  0012EA  ECD2  F023         	call	_ResetMillis1	;wreg free
  1852                           
  1853                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 938: SetUnipolar();
  1854  0012EE  EC01  F024         	call	_SetUnipolar	;wreg free
  1855                           
  1856                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 939: StopMotors();
  1857  0012F2  EC92  F022         	call	_StopMotors	;wreg free
  1858                           
  1859                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 940: SetDirectionForward();
  1860  0012F6  EC04  F024         	call	_SetDirectionForward	;wreg free
  1861                           
  1862                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 941: EnableMotors();
  1863  0012FA  EC10  F024         	call	_EnableMotors	;wreg free
  1864                           
  1865                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 943: GetDistance();
  1866  0012FE  EC35  F023         	call	_GetDistance	;wreg free
  1867  001302  D000               	goto	l8250
  1868  001304                     l8250:
  1869                           
  1870                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 949: GetSensorReadings();
  1871  001304  ECF4  F022         	call	_GetSensorReadings	;wreg free
  1872                           
  1873                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 951: while(BusySensorAcq());
  1874  001308  D000               	goto	l8252
  1875  00130A                     l8252:
  1876  00130A  EC8F  F023         	call	_BusySensorAcq	;wreg free
  1877  00130E  0900               	iorlw	0
  1878  001310  A4D8               	btfss	status,2,c
  1879  001312  D7FB               	goto	l8252
  1880                           
  1881                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 953: NormaliseSensorReadings();
  1882  001314  ECC8  F01B         	call	_NormaliseSensorReadings	;wreg free
  1883                           
  1884                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 955: CalculateSensorStatuses();
  1885  001318  ECEF  F015         	call	_CalculateSensorStatuses	;wreg free
  1886                           
  1887                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 956: sensor_sum = CalculateSensorSums();
  1888  00131C  EC91  F019         	call	_CalculateSensorSums	;wreg free
  1889  001320  0101               	movlb	1	; () banked
  1890  001322  6F63               	movwf	main@sensor_sum& (0+255),b
  1891                           
  1892                           ; BSR set to: 1
  1893                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 959: PID_error = CalculateSensorError(sensor_sum_
      +                          ptr);
  1894  001324  C141  F070         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1895  001328  C142  F071         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1896  00132C  EC29  F018         	call	_CalculateSensorError	;wreg free
  1897  001330  C070  F0DB         	movff	?_CalculateSensorError,_PID_error
  1898  001334  C071  F0DC         	movff	?_CalculateSensorError+1,_PID_error+1
  1899                           
  1900                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 960: PID_output = PID_Kp * PID_error + PID_Kd * (
      +                          D_temp - PID_error) + PID_Ki * I_temp;
  1901  001338  C0D9  F070         	movff	_PID_Kp,___wmul@multiplier
  1902  00133C  C0DA  F071         	movff	_PID_Kp+1,___wmul@multiplier+1
  1903  001340  C0DB  F072         	movff	_PID_error,___wmul@multiplicand
  1904  001344  C0DC  F073         	movff	_PID_error+1,___wmul@multiplicand+1
  1905  001348  EC8D  F020         	call	___wmul	;wreg free
  1906  00134C  C070  F13C         	movff	?___wmul,??_main
  1907  001350  C071  F13D         	movff	?___wmul+1,??_main+1
  1908  001354  C0DB  F13E         	movff	_PID_error,??_main+2
  1909  001358  C0DC  F13F         	movff	_PID_error+1,??_main+3
  1910  00135C  0101               	movlb	1	; () banked
  1911  00135E  1F3E               	comf	(??_main+2)& (0+255),f,b
  1912  001360  1F3F               	comf	(??_main+3)& (0+255),f,b
  1913  001362  4B3E               	infsnz	(??_main+2)& (0+255),f,b
  1914  001364  2B3F               	incf	(??_main+3)& (0+255),f,b
  1915  001366  0101               	movlb	1	; () banked
  1916  001368  5153               	movf	main@D_temp& (0+255),w,b
  1917  00136A  0101               	movlb	1	; () banked
  1918  00136C  253E               	addwf	(??_main+2)& (0+255),w,b
  1919  00136E  0100               	movlb	0	; () banked
  1920  001370  6F70               	movwf	___wmul@multiplier& (0+255),b
  1921  001372  0101               	movlb	1	; () banked
  1922  001374  5154               	movf	(main@D_temp+1)& (0+255),w,b
  1923  001376  0101               	movlb	1	; () banked
  1924  001378  213F               	addwfc	(??_main+3)& (0+255),w,b
  1925  00137A  0100               	movlb	0	; () banked
  1926  00137C  6F71               	movwf	(___wmul@multiplier+1)& (0+255),b
  1927  00137E  C0D5  F072         	movff	_PID_Kd,___wmul@multiplicand
  1928  001382  C0D6  F073         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1929  001386  EC8D  F020         	call	___wmul	;wreg free
  1930  00138A  0100               	movlb	0	; () banked
  1931  00138C  5170               	movf	?___wmul& (0+255),w,b
  1932  00138E  0101               	movlb	1	; () banked
  1933  001390  273C               	addwf	??_main& (0+255),f,b
  1934  001392  0100               	movlb	0	; () banked
  1935  001394  5171               	movf	(?___wmul+1)& (0+255),w,b
  1936  001396  0101               	movlb	1	; () banked
  1937  001398  233D               	addwfc	(??_main+1)& (0+255),f,b
  1938  00139A  C0D7  F070         	movff	_PID_Ki,___wmul@multiplier
  1939  00139E  C0D8  F071         	movff	_PID_Ki+1,___wmul@multiplier+1
  1940  0013A2  C155  F072         	movff	main@I_temp,___wmul@multiplicand
  1941  0013A6  C156  F073         	movff	main@I_temp+1,___wmul@multiplicand+1
  1942  0013AA  EC8D  F020         	call	___wmul	;wreg free
  1943  0013AE  0100               	movlb	0	; () banked
  1944  0013B0  5170               	movf	?___wmul& (0+255),w,b
  1945  0013B2  0101               	movlb	1	; () banked
  1946  0013B4  253C               	addwf	??_main& (0+255),w,b
  1947  0013B6  0100               	movlb	0	; () banked
  1948  0013B8  6FDD               	movwf	_PID_output& (0+255),b
  1949  0013BA  0100               	movlb	0	; () banked
  1950  0013BC  5171               	movf	(?___wmul+1)& (0+255),w,b
  1951  0013BE  0101               	movlb	1	; () banked
  1952  0013C0  213D               	addwfc	(??_main+1)& (0+255),w,b
  1953  0013C2  0100               	movlb	0	; () banked
  1954  0013C4  6FDE               	movwf	(_PID_output+1)& (0+255),b
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 961: D_temp = PID_error;
  1958  0013C6  C0DB  F153         	movff	_PID_error,main@D_temp
  1959  0013CA  C0DC  F154         	movff	_PID_error+1,main@D_temp+1
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 962: I_temp += PID_error;
  1963  0013CE  0100               	movlb	0	; () banked
  1964  0013D0  51DB               	movf	_PID_error& (0+255),w,b
  1965  0013D2  0101               	movlb	1	; () banked
  1966  0013D4  2755               	addwf	main@I_temp& (0+255),f,b
  1967  0013D6  0100               	movlb	0	; () banked
  1968  0013D8  51DC               	movf	(_PID_error+1)& (0+255),w,b
  1969  0013DA  0101               	movlb	1	; () banked
  1970  0013DC  2356               	addwfc	(main@I_temp+1)& (0+255),f,b
  1971                           
  1972                           ; BSR set to: 1
  1973                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 964: SetDCMotorPID(PID_output);
  1974  0013DE  C0DD  F078         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1975  0013E2  C0DE  F079         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1976  0013E6  EC85  F018         	call	_SetDCMotorPID	;wreg free
  1977                           
  1978                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 967: DisplaySensorStatuses(sensor_status);
  1979  0013EA  0E23               	movlw	low _sensor_status
  1980  0013EC  0100               	movlb	0	; () banked
  1981  0013EE  6F70               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1982  0013F0  0E00               	movlw	high _sensor_status
  1983  0013F2  0100               	movlb	0	; () banked
  1984  0013F4  6F71               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1985  0013F6  EC99  F01E         	call	_DisplaySensorStatuses	;wreg free
  1986                           
  1987                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 970: if(BusyDistanceAcq() == 0 && wall_detected_f
      +                          lag == 0) {
  1988  0013FA  EC9F  F023         	call	_BusyDistanceAcq	;wreg free
  1989  0013FE  0900               	iorlw	0
  1990  001400  A4D8               	btfss	status,2,c
  1991  001402  D080               	goto	l8320
  1992  001404  0101               	movlb	1	; () banked
  1993  001406  5150               	movf	main@wall_detected_flag& (0+255),w,b
  1994  001408  0101               	movlb	1	; () banked
  1995  00140A  A4D8               	btfss	status,2,c
  1996  00140C  D07B               	goto	l8320
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 972: if(ReadEchoLength() < 1232) {
  2000  00140E  ECE6  F023         	call	_ReadEchoLength	;wreg free
  2001  001412  0ED0               	movlw	208
  2002  001414  0100               	movlb	0	; () banked
  2003  001416  5D70               	subwf	?_ReadEchoLength& (0+255),w,b
  2004  001418  0E04               	movlw	4
  2005  00141A  0100               	movlb	0	; () banked
  2006  00141C  5971               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  2007  00141E  B0D8               	btfsc	status,0,c
  2008  001420  D06E               	goto	l8318
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 973: wall_detected_flag = 1;
  2012  001422  0E01               	movlw	1
  2013  001424  0101               	movlb	1	; () banked
  2014  001426  6F50               	movwf	main@wall_detected_flag& (0+255),b
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 976: DisableMotors();
  2018  001428  EC12  F024         	call	_DisableMotors	;wreg free
  2019                           
  2020                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 978: PID_error = 0;
  2021  00142C  0E00               	movlw	0
  2022  00142E  0100               	movlb	0	; () banked
  2023  001430  6FDC               	movwf	(_PID_error+1)& (0+255),b
  2024  001432  0E00               	movlw	0
  2025  001434  6FDB               	movwf	_PID_error& (0+255),b
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 979: PID_output = 0;
  2029  001436  0E00               	movlw	0
  2030  001438  0100               	movlb	0	; () banked
  2031  00143A  6FDE               	movwf	(_PID_output+1)& (0+255),b
  2032  00143C  0E00               	movlw	0
  2033  00143E  6FDD               	movwf	_PID_output& (0+255),b
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 980: D_temp = 0;
  2037  001440  0E00               	movlw	0
  2038  001442  0101               	movlb	1	; () banked
  2039  001444  6F54               	movwf	(main@D_temp+1)& (0+255),b
  2040  001446  0E00               	movlw	0
  2041  001448  6F53               	movwf	main@D_temp& (0+255),b
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 981: I_temp = 0;
  2045  00144A  0E00               	movlw	0
  2046  00144C  0101               	movlb	1	; () banked
  2047  00144E  6F56               	movwf	(main@I_temp+1)& (0+255),b
  2048  001450  0E00               	movlw	0
  2049  001452  6F55               	movwf	main@I_temp& (0+255),b
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 983: SetForwardsMotorR();
  2053  001454  EC0C  F024         	call	_SetForwardsMotorR	;wreg free
  2054                           
  2055                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 984: SetReverseMotorL();
  2056  001458  EC0A  F024         	call	_SetReverseMotorL	;wreg free
  2057                           
  2058                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 986: SetDCMotorL(150);
  2059  00145C  0E00               	movlw	0
  2060  00145E  0100               	movlb	0	; () banked
  2061  001460  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2062  001462  0E96               	movlw	150
  2063  001464  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2064  001466  ECB6  F023         	call	_SetDCMotorL	;wreg free
  2065                           
  2066                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 987: SetDCMotorR(275);
  2067  00146A  0E01               	movlw	1
  2068  00146C  0100               	movlb	0	; () banked
  2069  00146E  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2070  001470  0E13               	movlw	19
  2071  001472  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2072  001474  ECAF  F023         	call	_SetDCMotorR	;wreg free
  2073                           
  2074                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 989: EnableMotors();
  2075  001478  EC10  F024         	call	_EnableMotors	;wreg free
  2076                           
  2077                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 991: sensor_sum = 0;
  2078  00147C  0E00               	movlw	0
  2079  00147E  0101               	movlb	1	; () banked
  2080  001480  6F63               	movwf	main@sensor_sum& (0+255),b
  2081                           
  2082                           ; BSR set to: 1
  2083                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 993: ResetMillis0();
  2084  001482  ECD7  F023         	call	_ResetMillis0	;wreg free
  2085                           
  2086                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 994: while(ReadMillis0() < 300);
  2087  001486  D000               	goto	l8300
  2088  001488                     l8300:
  2089  001488  ECE1  F023         	call	_ReadMillis0	;wreg free
  2090  00148C  0E2C               	movlw	44
  2091  00148E  0100               	movlb	0	; () banked
  2092  001490  5D70               	subwf	?_ReadMillis0& (0+255),w,b
  2093  001492  0E01               	movlw	1
  2094  001494  0100               	movlb	0	; () banked
  2095  001496  5971               	subwfb	(?_ReadMillis0+1)& (0+255),w,b
  2096  001498  B0D8               	btfsc	status,0,c
  2097  00149A  D01B               	goto	l8312
  2098  00149C  D7F5               	goto	l8300
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 996: while(sensor_sum == 0) {
  2102  00149E  D019               	goto	l8312
  2103  0014A0                     l8302:
  2104                           
  2105                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 997: GetSensorReadings();
  2106  0014A0  ECF4  F022         	call	_GetSensorReadings	;wreg free
  2107                           
  2108                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 998: while(BusySensorAcq());
  2109  0014A4  D000               	goto	l8304
  2110  0014A6                     l8304:
  2111  0014A6  EC8F  F023         	call	_BusySensorAcq	;wreg free
  2112  0014AA  0900               	iorlw	0
  2113  0014AC  A4D8               	btfss	status,2,c
  2114  0014AE  D7FB               	goto	l8304
  2115                           
  2116                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 999: NormaliseSensorReadings();
  2117  0014B0  ECC8  F01B         	call	_NormaliseSensorReadings	;wreg free
  2118                           
  2119                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1000: CalculateSensorStatuses();
  2120  0014B4  ECEF  F015         	call	_CalculateSensorStatuses	;wreg free
  2121                           
  2122                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1001: sensor_sum = CalculateSensorSums();
  2123  0014B8  EC91  F019         	call	_CalculateSensorSums	;wreg free
  2124  0014BC  0101               	movlb	1	; () banked
  2125  0014BE  6F63               	movwf	main@sensor_sum& (0+255),b
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1002: DisplaySensorStatuses(sensor_status);
  2129  0014C0  0E23               	movlw	low _sensor_status
  2130  0014C2  0100               	movlb	0	; () banked
  2131  0014C4  6F70               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  2132  0014C6  0E00               	movlw	high _sensor_status
  2133  0014C8  0100               	movlb	0	; () banked
  2134  0014CA  6F71               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  2135  0014CC  EC99  F01E         	call	_DisplaySensorStatuses	;wreg free
  2136  0014D0  D000               	goto	l8312
  2137  0014D2                     l8312:
  2138  0014D2  0101               	movlb	1	; () banked
  2139  0014D4  5163               	movf	main@sensor_sum& (0+255),w,b
  2140  0014D6  0101               	movlb	1	; () banked
  2141  0014D8  B4D8               	btfsc	status,2,c
  2142  0014DA  D7E2               	goto	l8302
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1004: }
  2146                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1006: SetDCMotorL(526);
  2147                           
  2148                           ; BSR set to: 1
  2149  0014DC  0E02               	movlw	2
  2150  0014DE  0100               	movlb	0	; () banked
  2151  0014E0  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2152  0014E2  0E0E               	movlw	14
  2153  0014E4  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2154  0014E6  ECB6  F023         	call	_SetDCMotorL	;wreg free
  2155                           
  2156                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1007: SetDCMotorR(526);
  2157  0014EA  0E02               	movlw	2
  2158  0014EC  0100               	movlb	0	; () banked
  2159  0014EE  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2160  0014F0  0E0E               	movlw	14
  2161  0014F2  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2162  0014F4  ECAF  F023         	call	_SetDCMotorR	;wreg free
  2163                           
  2164                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1008: SetDirectionForward();
  2165  0014F8  EC04  F024         	call	_SetDirectionForward	;wreg free
  2166                           
  2167                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1010: }
  2168  0014FC  D003               	goto	l8320
  2169  0014FE                     l8318:
  2170                           
  2171                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1011: else {
  2172                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1012: GetDistance();
  2173  0014FE  EC35  F023         	call	_GetDistance	;wreg free
  2174  001502  D000               	goto	l8320
  2175  001504                     l8320:
  2176                           
  2177                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1013: }
  2178                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1014: }
  2179                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1017: if(sensor_sum == 0 && line_end_flag == 0) {
  2180  001504  0101               	movlb	1	; () banked
  2181  001506  5163               	movf	main@sensor_sum& (0+255),w,b
  2182  001508  0101               	movlb	1	; () banked
  2183  00150A  A4D8               	btfss	status,2,c
  2184  00150C  D00B               	goto	l8328
  2185                           
  2186                           ; BSR set to: 1
  2187  00150E  0101               	movlb	1	; () banked
  2188  001510  5162               	movf	main@line_end_flag& (0+255),w,b
  2189  001512  0101               	movlb	1	; () banked
  2190  001514  A4D8               	btfss	status,2,c
  2191  001516  D006               	goto	l8328
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1018: ResetMillis2();
  2195  001518  ECEB  F023         	call	_ResetMillis2	;wreg free
  2196                           
  2197                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1019: line_end_flag = 1;
  2198  00151C  0E01               	movlw	1
  2199  00151E  0101               	movlb	1	; () banked
  2200  001520  6F62               	movwf	main@line_end_flag& (0+255),b
  2201                           
  2202                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1020: }
  2203  001522  D6F0               	goto	l8250
  2204  001524                     l8328:
  2205                           
  2206                           ; BSR set to: 1
  2207                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1022: else if(sensor_sum == 0 && line_end_flag ==
      +                           1 && ReadMillis2() >= 100) {
  2208  001524  0101               	movlb	1	; () banked
  2209  001526  5163               	movf	main@sensor_sum& (0+255),w,b
  2210  001528  0101               	movlb	1	; () banked
  2211  00152A  A4D8               	btfss	status,2,c
  2212  00152C  D00E               	goto	l8336
  2213                           
  2214                           ; BSR set to: 1
  2215  00152E  0101               	movlb	1	; () banked
  2216  001530  0562               	decf	main@line_end_flag& (0+255),w,b
  2217  001532  A4D8               	btfss	status,2,c
  2218  001534  D00A               	goto	l8336
  2219                           
  2220                           ; BSR set to: 1
  2221  001536  ECF0  F023         	call	_ReadMillis2	;wreg free
  2222  00153A  0100               	movlb	0	; () banked
  2223  00153C  5171               	movf	(?_ReadMillis2+1)& (0+255),w,b
  2224  00153E  E178               	bnz	l8372
  2225  001540  0E64               	movlw	100
  2226  001542  0100               	movlb	0	; () banked
  2227  001544  5D70               	subwf	?_ReadMillis2& (0+255),w,b
  2228  001546  B0D8               	btfsc	status,0,c
  2229  001548  D073               	goto	l8372
  2230  00154A                     l8336:
  2231                           
  2232                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1027: else if(ReadMillis1() >= 1000) {
  2233  00154A  ECDC  F023         	call	_ReadMillis1	;wreg free
  2234  00154E  0EE8               	movlw	232
  2235  001550  0100               	movlb	0	; () banked
  2236  001552  5D70               	subwf	?_ReadMillis1& (0+255),w,b
  2237  001554  0E03               	movlw	3
  2238  001556  0100               	movlb	0	; () banked
  2239  001558  5971               	subwfb	(?_ReadMillis1+1)& (0+255),w,b
  2240  00155A  A0D8               	btfss	status,0,c
  2241  00155C  D020               	goto	l8352
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1028: ResetMillis1();
  2245  00155E  ECD2  F023         	call	_ResetMillis1	;wreg free
  2246                           
  2247                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1029: battery_voltage = ReadVoltage();
  2248  001562  EC13  F01D         	call	_ReadVoltage	;wreg free
  2249  001566  C073  F160         	movff	?_ReadVoltage,main@battery_voltage
  2250  00156A  C074  F161         	movff	?_ReadVoltage+1,main@battery_voltage+1
  2251                           
  2252                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1030: Delay1KTCYx(25);
  2253  00156E  0E19               	movlw	25
  2254  001570  ECFF  F022         	call	_Delay1KTCYx
  2255                           
  2256                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1031: battery_current = ReadCurrent();
  2257  001574  ECE9  F01E         	call	_ReadCurrent	;wreg free
  2258  001578  C073  F151         	movff	?_ReadCurrent,main@battery_current
  2259  00157C  C074  F152         	movff	?_ReadCurrent+1,main@battery_current+1
  2260                           
  2261                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1032: Delay1KTCYx(25);
  2262  001580  0E19               	movlw	25
  2263  001582  ECFF  F022         	call	_Delay1KTCYx
  2264                           
  2265                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1033: battery_current_acc = ReadAccumulatedCurren
      +                          t();
  2266  001586  EC39  F012         	call	_ReadAccumulatedCurrent	;wreg free
  2267  00158A  C073  F15A         	movff	?_ReadAccumulatedCurrent,main@battery_current_acc
  2268  00158E  C074  F15B         	movff	?_ReadAccumulatedCurrent+1,main@battery_current_acc+1
  2269  001592  C075  F15C         	movff	?_ReadAccumulatedCurrent+2,main@battery_current_acc+2
  2270  001596  C076  F15D         	movff	?_ReadAccumulatedCurrent+3,main@battery_current_acc+3
  2271                           
  2272                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1034: send_battery_stats_flag = 1;
  2273  00159A  0E01               	movlw	1
  2274  00159C  D017               	goto	L2
  2275  00159E                     l8352:
  2276                           
  2277                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1037: else if(send_battery_stats_flag == 1) {
  2278  00159E  0101               	movlb	1	; () banked
  2279  0015A0  0557               	decf	main@send_battery_stats_flag& (0+255),w,b
  2280  0015A2  A4D8               	btfss	status,2,c
  2281  0015A4  D016               	goto	l8358
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1038: SendBattVoltage(battery_voltage_ptr);
  2285  0015A6  C158  F078         	movff	main@battery_voltage_ptr,SendBattVoltage@reading
  2286  0015AA  C159  F079         	movff	main@battery_voltage_ptr+1,SendBattVoltage@reading+1
  2287  0015AE  EC7C  F01D         	call	_SendBattVoltage	;wreg free
  2288                           
  2289                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1040: SendBattCurrent(battery_current_ptr);
  2290  0015B2  C145  F078         	movff	main@battery_current_ptr,SendBattCurrent@reading
  2291  0015B6  C146  F079         	movff	main@battery_current_ptr+1,SendBattCurrent@reading+1
  2292  0015BA  ECB0  F01D         	call	_SendBattCurrent	;wreg free
  2293                           
  2294                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1042: SendBattCurrentAcc(battery_current_acc_ptr)
      +                          ;
  2295  0015BE  C147  F078         	movff	main@battery_current_acc_ptr,SendBattCurrentAcc@reading
  2296  0015C2  C148  F079         	movff	main@battery_current_acc_ptr+1,SendBattCurrentAcc@reading+1
  2297  0015C6  EC52  F017         	call	_SendBattCurrentAcc	;wreg free
  2298                           
  2299                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1043: send_battery_stats_flag = 0;
  2300  0015CA  0E00               	movlw	0
  2301  0015CC                     L2:
  2302  0015CC  0101               	movlb	1	; () banked
  2303  0015CE  6F57               	movwf	main@send_battery_stats_flag& (0+255),b
  2304                           
  2305                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1044: }
  2306  0015D0  D699               	goto	l8250
  2307  0015D2                     l8358:
  2308                           
  2309                           ; BSR set to: 1
  2310                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1047: else if(CommandAvailable() == 1) {
  2311  0015D2  ECBD  F023         	call	_CommandAvailable	;wreg free
  2312  0015D6  06E8               	decf	wreg,f,c
  2313  0015D8  A4D8               	btfss	status,2,c
  2314  0015DA  D014               	goto	l8370
  2315                           
  2316                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1048: command_msg = GetCommand();
  2317  0015DC  ECF9  F023         	call	_GetCommand	;wreg free
  2318  0015E0  0101               	movlb	1	; () banked
  2319  0015E2  6F5F               	movwf	main@command_msg& (0+255),b
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1049: if(command_msg == 0x03) {
  2323  0015E4  0E03               	movlw	3
  2324  0015E6  0101               	movlb	1	; () banked
  2325  0015E8  195F               	xorwf	main@command_msg& (0+255),w,b
  2326  0015EA  A4D8               	btfss	status,2,c
  2327  0015EC  D004               	goto	l8366
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1050: find_line_flag = 1;
  2331  0015EE  0E01               	movlw	1
  2332  0015F0  0101               	movlb	1	; () banked
  2333  0015F2  6F4F               	movwf	main@find_line_flag& (0+255),b
  2334                           
  2335                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1051: }
  2336  0015F4  D687               	goto	l8250
  2337  0015F6                     l8366:
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1052: else if(command_msg == 0x04) {
  2341  0015F6  0E04               	movlw	4
  2342  0015F8  0101               	movlb	1	; () banked
  2343  0015FA  195F               	xorwf	main@command_msg& (0+255),w,b
  2344  0015FC  A4D8               	btfss	status,2,c
  2345  0015FE  D682               	goto	l8250
  2346  001600  D017               	goto	l8372
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1054: }
  2350                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1056: }
  2351                           
  2352                           ; BSR set to: 1
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1053: stop_flag = 1;
  2356  001602  D680               	goto	l8250
  2357  001604                     l8370:
  2358                           
  2359                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1059: else if(PB1pressed() == 1 | PB2pressed() ==
      +                           1) {
  2360  001604  ECE4  F01D         	call	_PB2pressed	;wreg free
  2361  001608  06E8               	decf	wreg,f,c
  2362  00160A  A4D8               	btfss	status,2,c
  2363  00160C  D002               	goto	u8500
  2364  00160E  0E01               	movlw	1
  2365  001610  D001               	goto	u8502
  2366  001612                     u8500:
  2367  001612  0E00               	movlw	0
  2368  001614                     u8502:
  2369  001614  0101               	movlb	1	; () banked
  2370  001616  6F3C               	movwf	??_main& (0+255),b
  2371  001618  EC42  F01E         	call	_PB1pressed	;wreg free
  2372  00161C  06E8               	decf	wreg,f,c
  2373  00161E  A4D8               	btfss	status,2,c
  2374  001620  D002               	goto	u8510
  2375  001622  0E01               	movlw	1
  2376  001624  D001               	goto	u8512
  2377  001626                     u8510:
  2378  001626  0E00               	movlw	0
  2379  001628                     u8512:
  2380  001628  0101               	movlb	1	; () banked
  2381  00162A  113C               	iorwf	??_main& (0+255),w,b
  2382  00162C  A0E8               	btfss	wreg,0,c
  2383  00162E  D004               	goto	l8374
  2384  001630                     l8372:
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1060: stop_flag = 1;
  2388  001630  0E01               	movlw	1
  2389  001632  0101               	movlb	1	; () banked
  2390  001634  6F5E               	movwf	main@stop_flag& (0+255),b
  2391                           
  2392                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1061: }
  2393  001636  D666               	goto	l8250
  2394  001638                     l8374:
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1064: else if(find_line_flag == 1) {
  2398  001638  0101               	movlb	1	; () banked
  2399  00163A  054F               	decf	main@find_line_flag& (0+255),w,b
  2400  00163C  B4D8               	btfsc	status,2,c
  2401  00163E  D662               	goto	l8250
  2402  001640  D001               	goto	l8378
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1067: }
  2406  001642  D660               	goto	l8250
  2407  001644                     l8378:
  2408                           
  2409                           ; BSR set to: 1
  2410                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1070: else if(stop_flag == 1) {
  2411  001644  0101               	movlb	1	; () banked
  2412  001646  055E               	decf	main@stop_flag& (0+255),w,b
  2413  001648  A4D8               	btfss	status,2,c
  2414  00164A  D65C               	goto	l8250
  2415                           
  2416                           ; BSR set to: 1
  2417                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1071: StopMotors();
  2418  00164C  EC92  F022         	call	_StopMotors	;wreg free
  2419                           
  2420                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 1072: break;
  2421  001650  D602               	goto	l8212
  2422  001652  D658               	goto	l8250
  2423  001654  D600               	goto	l8212
  2424  001656  EF76  F000         	goto	start
  2425  00165A                     __end_of_main:
  2426                           	opt stack 0
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _StopMotors *****************
  2432 ;; Defined at:
  2433 ;;		line 128 in file "Motors.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    9
  2454 ;; This function calls:
  2455 ;;		_SetDCMotorL
  2456 ;;		_SetDCMotorR
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text1
  2463  004524                     __ptext1:
  2464                           	opt stack 0
  2465  004524                     _StopMotors:
  2466                           	opt stack 21
  2467                           
  2468                           ;Motors.c: 130: SetDCMotorR(526);
  2469                           
  2470                           ;incstack = 0
  2471  004524  0E02               	movlw	2
  2472  004526  0100               	movlb	0	; () banked
  2473  004528  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2474  00452A  0E0E               	movlw	14
  2475  00452C  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2476  00452E  ECAF  F023         	call	_SetDCMotorR	;wreg free
  2477                           
  2478                           ;Motors.c: 131: SetDCMotorL(526);
  2479  004532  0E02               	movlw	2
  2480  004534  0100               	movlb	0	; () banked
  2481  004536  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2482  004538  0E0E               	movlw	14
  2483  00453A  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2484  00453C  ECB6  F023         	call	_SetDCMotorL	;wreg free
  2485  004540  0012               	return		;funcret
  2486  004542                     __end_of_StopMotors:
  2487                           	opt stack 0
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           status	equ	0xFD8
  2491                           
  2492 ;; *************** function _SetUnipolar *****************
  2493 ;; Defined at:
  2494 ;;		line 121 in file "Motors.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;		None               void
  2501 ;; Registers used:
  2502 ;;		None
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    7
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text2
  2523  004802                     __ptext2:
  2524                           	opt stack 0
  2525  004802                     _SetUnipolar:
  2526                           	opt stack 23
  2527                           
  2528                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2529                           
  2530                           ;incstack = 0
  2531  004802  908C               	bcf	3980,0,c	;volatile
  2532                           
  2533                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2534  004804  948C               	bcf	3980,2,c	;volatile
  2535  004806  0012               	return		;funcret
  2536  004808                     __end_of_SetUnipolar:
  2537                           	opt stack 0
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _SetReverseMotorL *****************
  2543 ;; Defined at:
  2544 ;;		line 96 in file "Motors.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		None
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    7
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text3
  2573  004814                     __ptext3:
  2574                           	opt stack 0
  2575  004814                     _SetReverseMotorL:
  2576                           	opt stack 23
  2577                           
  2578                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2579                           
  2580                           ;incstack = 0
  2581  004814  968C               	bcf	3980,3,c	;volatile
  2582  004816  0012               	return		;funcret
  2583  004818                     __end_of_SetReverseMotorL:
  2584                           	opt stack 0
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _SetForwardsMotorR *****************
  2590 ;; Defined at:
  2591 ;;		line 78 in file "Motors.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		None
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    7
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text4
  2620  004818                     __ptext4:
  2621                           	opt stack 0
  2622  004818                     _SetForwardsMotorR:
  2623                           	opt stack 23
  2624                           
  2625                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2626                           
  2627                           ;incstack = 0
  2628  004818  828C               	bsf	3980,1,c	;volatile
  2629  00481A  0012               	return		;funcret
  2630  00481C                     __end_of_SetForwardsMotorR:
  2631                           	opt stack 0
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _SetDirectionForward *****************
  2637 ;; Defined at:
  2638 ;;		line 64 in file "Motors.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;		None               void
  2645 ;; Registers used:
  2646 ;;		None
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    7
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text5
  2667  004808                     __ptext5:
  2668                           	opt stack 0
  2669  004808                     _SetDirectionForward:
  2670                           	opt stack 23
  2671                           
  2672                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2673                           
  2674                           ;incstack = 0
  2675  004808  868C               	bsf	3980,3,c	;volatile
  2676                           
  2677                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2678  00480A  828C               	bsf	3980,1,c	;volatile
  2679  00480C  0012               	return		;funcret
  2680  00480E                     __end_of_SetDirectionForward:
  2681                           	opt stack 0
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _SetDCMotorPID *****************
  2687 ;; Defined at:
  2688 ;;		line 47 in file "Motors.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  PIDoutput       2   24[BANK0 ] int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;		None               void
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;Total ram usage:        4 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    9
  2709 ;; This function calls:
  2710 ;;		_SetDCMotorL
  2711 ;;		_SetDCMotorR
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text6
  2718  00310A                     __ptext6:
  2719                           	opt stack 0
  2720  00310A                     _SetDCMotorPID:
  2721                           	opt stack 21
  2722                           
  2723                           ;Motors.c: 49: if(PIDoutput <= 0) {
  2724                           
  2725                           ;incstack = 0
  2726  00310A  0100               	movlb	0	; () banked
  2727  00310C  BF79               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2728  00310E  D007               	goto	l8004
  2729  003110  0100               	movlb	0	; () banked
  2730  003112  5179               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2731  003114  E121               	bnz	l8006
  2732  003116  0100               	movlb	0	; () banked
  2733  003118  0578               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2734  00311A  B0D8               	btfsc	status,0,c
  2735  00311C  D01D               	goto	l8006
  2736  00311E                     l8004:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;Motors.c: 50: SetDCMotorL(375 - PIDoutput);
  2740  00311E  C078  F07A         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2741  003122  C079  F07B         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2742  003126  0100               	movlb	0	; () banked
  2743  003128  1F7A               	comf	??_SetDCMotorPID& (0+255),f,b
  2744  00312A  1F7B               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2745  00312C  4B7A               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2746  00312E  2B7B               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2747  003130  0E77               	movlw	119
  2748  003132  0100               	movlb	0	; () banked
  2749  003134  257A               	addwf	??_SetDCMotorPID& (0+255),w,b
  2750  003136  0100               	movlb	0	; () banked
  2751  003138  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2752  00313A  0E01               	movlw	1
  2753  00313C  0100               	movlb	0	; () banked
  2754  00313E  217B               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2755  003140  0100               	movlb	0	; () banked
  2756  003142  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2757  003144  ECB6  F023         	call	_SetDCMotorL	;wreg free
  2758                           
  2759                           ;Motors.c: 51: SetDCMotorR(375);
  2760  003148  0E01               	movlw	1
  2761  00314A  0100               	movlb	0	; () banked
  2762  00314C  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2763  00314E  0E77               	movlw	119
  2764  003150  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2765  003152  ECAF  F023         	call	_SetDCMotorR	;wreg free
  2766                           
  2767                           ;Motors.c: 52: }
  2768  003156  D033               	goto	l606
  2769  003158                     l8006:
  2770                           
  2771                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2772  003158  0100               	movlb	0	; () banked
  2773  00315A  BF79               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2774  00315C  D01B               	goto	l8010
  2775  00315E  0100               	movlb	0	; () banked
  2776  003160  5179               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2777  003162  E104               	bnz	u8060
  2778  003164  0100               	movlb	0	; () banked
  2779  003166  0578               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2780  003168  A0D8               	btfss	status,0,c
  2781  00316A  D014               	goto	l8010
  2782  00316C                     u8060:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;Motors.c: 54: SetDCMotorL(375);
  2786  00316C  0E01               	movlw	1
  2787  00316E  0100               	movlb	0	; () banked
  2788  003170  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2789  003172  0E77               	movlw	119
  2790  003174  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2791  003176  ECB6  F023         	call	_SetDCMotorL	;wreg free
  2792                           
  2793                           ;Motors.c: 55: SetDCMotorR(375 + PIDoutput);
  2794  00317A  0E77               	movlw	119
  2795  00317C  0100               	movlb	0	; () banked
  2796  00317E  2578               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2797  003180  0100               	movlb	0	; () banked
  2798  003182  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2799  003184  0E01               	movlw	1
  2800  003186  0100               	movlb	0	; () banked
  2801  003188  2179               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2802  00318A  0100               	movlb	0	; () banked
  2803  00318C  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2804  00318E  ECAF  F023         	call	_SetDCMotorR	;wreg free
  2805                           
  2806                           ;Motors.c: 56: }
  2807  003192  D015               	goto	l606
  2808  003194                     l8010:
  2809                           
  2810                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2811  003194  0100               	movlb	0	; () banked
  2812  003196  5178               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2813  003198  0100               	movlb	0	; () banked
  2814  00319A  1179               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2815  00319C  A4D8               	btfss	status,2,c
  2816  00319E  D00F               	goto	l606
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;Motors.c: 58: SetDCMotorL(375);
  2820  0031A0  0E01               	movlw	1
  2821  0031A2  0100               	movlb	0	; () banked
  2822  0031A4  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2823  0031A6  0E77               	movlw	119
  2824  0031A8  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2825  0031AA  ECB6  F023         	call	_SetDCMotorL	;wreg free
  2826                           
  2827                           ;Motors.c: 59: SetDCMotorR(375);
  2828  0031AE  0E01               	movlw	1
  2829  0031B0  0100               	movlb	0	; () banked
  2830  0031B2  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2831  0031B4  0E77               	movlw	119
  2832  0031B6  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2833  0031B8  ECAF  F023         	call	_SetDCMotorR	;wreg free
  2834  0031BC  D000               	goto	l606
  2835  0031BE                     l606:
  2836  0031BE  0012               	return		;funcret
  2837  0031C0                     __end_of_SetDCMotorPID:
  2838                           	opt stack 0
  2839                           postinc0	equ	0xFEE
  2840                           wreg	equ	0xFE8
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _SetDCMotorR *****************
  2844 ;; Defined at:
  2845 ;;		line 19 in file "Motors.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        2 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    8
  2866 ;; This function calls:
  2867 ;;		_SetDCPWM4
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;;		_SetDCMotorPID
  2871 ;;		_StopMotors
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text7
  2876  00475E                     __ptext7:
  2877                           	opt stack 0
  2878  00475E                     _SetDCMotorR:
  2879                           	opt stack 21
  2880                           
  2881                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2882                           
  2883                           ;incstack = 0
  2884  00475E  C076  F070         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2885  004762  C077  F071         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2886  004766  EC57  F01F         	call	_SetDCPWM4	;wreg free
  2887  00476A  0012               	return		;funcret
  2888  00476C                     __end_of_SetDCMotorR:
  2889                           	opt stack 0
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _SetDCPWM4 *****************
  2895 ;; Defined at:
  2896 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:        6 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    7
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_SetDCMotorR
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text8
  2925  003EAE                     __ptext8:
  2926                           	opt stack 0
  2927  003EAE                     _SetDCPWM4:
  2928                           	opt stack 21
  2929                           
  2930                           ;incstack = 0
  2931  003EAE  C070  F072         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2932  003EB2  C071  F073         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2933  003EB6  0E06               	movlw	6
  2934  003EB8                     u7125:
  2935  003EB8  90D8               	bcf	status,0,c
  2936  003EBA  0100               	movlb	0	; () banked
  2937  003EBC  3772               	rlcf	??_SetDCPWM4& (0+255),f,b
  2938  003EBE  3773               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2939  003EC0  2EE8               	decfsz	wreg,f,c
  2940  003EC2  D7FA               	goto	u7125
  2941  003EC4  C072  F074         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  2942  003EC8  C073  F075         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  2943                           
  2944                           ; BSR set to: 0
  2945  003ECC  C075  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  2946  003ED0  C074  F072         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  2947  003ED4  0100               	movlb	0	; () banked
  2948  003ED6  90D8               	bcf	status,0,c
  2949  003ED8  3372               	rrcf	??_SetDCPWM4& (0+255),f,b
  2950  003EDA  0100               	movlb	0	; () banked
  2951  003EDC  90D8               	bcf	status,0,c
  2952  003EDE  3372               	rrcf	??_SetDCPWM4& (0+255),f,b
  2953  003EE0  0E30               	movlw	48
  2954  003EE2  0100               	movlb	0	; () banked
  2955  003EE4  1772               	andwf	??_SetDCPWM4& (0+255),f,b
  2956  003EE6  5073               	movf	3955,w,c	;volatile
  2957  003EE8  0BCF               	andlw	207
  2958  003EEA  0100               	movlb	0	; () banked
  2959  003EEC  1172               	iorwf	??_SetDCPWM4& (0+255),w,b
  2960  003EEE  6E73               	movwf	3955,c	;volatile
  2961                           
  2962                           ; BSR set to: 0
  2963  003EF0  0012               	return		;funcret
  2964  003EF2                     __end_of_SetDCPWM4:
  2965                           	opt stack 0
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _SetDCMotorL *****************
  2971 ;; Defined at:
  2972 ;;		line 6 in file "Motors.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;		None               void
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:        2 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    8
  2993 ;; This function calls:
  2994 ;;		_SetDCPWM5
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;;		_SetDCMotorPID
  2998 ;;		_StopMotors
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text9
  3003  00476C                     __ptext9:
  3004                           	opt stack 0
  3005  00476C                     _SetDCMotorL:
  3006                           	opt stack 21
  3007                           
  3008                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;incstack = 0
  3012  00476C  C076  F070         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  3013  004770  C077  F071         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  3014  004774  EC79  F01F         	call	_SetDCPWM5	;wreg free
  3015  004778  0012               	return		;funcret
  3016  00477A                     __end_of_SetDCMotorL:
  3017                           	opt stack 0
  3018                           postinc0	equ	0xFEE
  3019                           wreg	equ	0xFE8
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function _SetDCPWM5 *****************
  3023 ;; Defined at:
  3024 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;Total ram usage:        6 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    7
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_SetDCMotorL
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text10
  3053  003EF2                     __ptext10:
  3054                           	opt stack 0
  3055  003EF2                     _SetDCPWM5:
  3056                           	opt stack 21
  3057                           
  3058                           ;incstack = 0
  3059  003EF2  C070  F072         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  3060  003EF6  C071  F073         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  3061  003EFA  0E06               	movlw	6
  3062  003EFC                     u7115:
  3063  003EFC  90D8               	bcf	status,0,c
  3064  003EFE  0100               	movlb	0	; () banked
  3065  003F00  3772               	rlcf	??_SetDCPWM5& (0+255),f,b
  3066  003F02  3773               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  3067  003F04  2EE8               	decfsz	wreg,f,c
  3068  003F06  D7FA               	goto	u7115
  3069  003F08  C072  F074         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  3070  003F0C  C073  F075         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  3071                           
  3072                           ; BSR set to: 0
  3073  003F10  C075  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  3074  003F14  C074  F072         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  3075  003F18  0100               	movlb	0	; () banked
  3076  003F1A  90D8               	bcf	status,0,c
  3077  003F1C  3372               	rrcf	??_SetDCPWM5& (0+255),f,b
  3078  003F1E  0100               	movlb	0	; () banked
  3079  003F20  90D8               	bcf	status,0,c
  3080  003F22  3372               	rrcf	??_SetDCPWM5& (0+255),f,b
  3081  003F24  0E30               	movlw	48
  3082  003F26  0100               	movlb	0	; () banked
  3083  003F28  1772               	andwf	??_SetDCPWM5& (0+255),f,b
  3084  003F2A  5070               	movf	3952,w,c	;volatile
  3085  003F2C  0BCF               	andlw	207
  3086  003F2E  0100               	movlb	0	; () banked
  3087  003F30  1172               	iorwf	??_SetDCPWM5& (0+255),w,b
  3088  003F32  6E70               	movwf	3952,c	;volatile
  3089                           
  3090                           ; BSR set to: 0
  3091  003F34  0012               	return		;funcret
  3092  003F36                     __end_of_SetDCPWM5:
  3093                           	opt stack 0
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _SendStoredPIDValues *****************
  3099 ;; Defined at:
  3100 ;;		line 223 in file "Wireless.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  Kp              2   24[BANK0 ] int 
  3103 ;;  Kd              2   26[BANK0 ] int 
  3104 ;;  Ki              2   28[BANK0 ] int 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;		None               void
  3109 ;; Registers used:
  3110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3116 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;Total ram usage:        6 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    9
  3123 ;; This function calls:
  3124 ;;		_BusyTx
  3125 ;;		_FlushTxBuf
  3126 ;;		_PutCharTxBuf
  3127 ;;		_StartTx
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text11
  3134  0038E8                     __ptext11:
  3135                           	opt stack 0
  3136  0038E8                     _SendStoredPIDValues:
  3137                           	opt stack 21
  3138                           
  3139                           ;Wireless.c: 224: while(BusyTx());
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;incstack = 0
  3143  0038E8  D000               	goto	l7956
  3144  0038EA                     l7956:
  3145  0038EA  EC87  F023         	call	_BusyTx	;wreg free
  3146  0038EE  0900               	iorlw	0
  3147  0038F0  A4D8               	btfss	status,2,c
  3148  0038F2  D7FB               	goto	l7956
  3149                           
  3150                           ;Wireless.c: 225: FlushTxBuf();
  3151  0038F4  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3152                           
  3153                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3154  0038F8  0EAA               	movlw	170
  3155  0038FA  ECBC  F01F         	call	_PutCharTxBuf
  3156                           
  3157                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3158  0038FE  0E42               	movlw	66
  3159  003900  ECBC  F01F         	call	_PutCharTxBuf
  3160                           
  3161                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3162  003904  0100               	movlb	0	; () banked
  3163  003906  5179               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3164  003908  ECBC  F01F         	call	_PutCharTxBuf
  3165                           
  3166                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3167  00390C  0100               	movlb	0	; () banked
  3168  00390E  5178               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3169  003910  ECBC  F01F         	call	_PutCharTxBuf
  3170                           
  3171                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3172  003914  0100               	movlb	0	; () banked
  3173  003916  517B               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3174  003918  ECBC  F01F         	call	_PutCharTxBuf
  3175                           
  3176                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3177  00391C  0100               	movlb	0	; () banked
  3178  00391E  517A               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3179  003920  ECBC  F01F         	call	_PutCharTxBuf
  3180                           
  3181                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3182  003924  0100               	movlb	0	; () banked
  3183  003926  517D               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3184  003928  ECBC  F01F         	call	_PutCharTxBuf
  3185                           
  3186                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3187  00392C  0100               	movlb	0	; () banked
  3188  00392E  517C               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3189  003930  ECBC  F01F         	call	_PutCharTxBuf
  3190                           
  3191                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3192  003934  0E0D               	movlw	13
  3193  003936  ECBC  F01F         	call	_PutCharTxBuf
  3194                           
  3195                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3196  00393A  0E0A               	movlw	10
  3197  00393C  ECBC  F01F         	call	_PutCharTxBuf
  3198                           
  3199                           ;Wireless.c: 239: while (BusyTx());
  3200  003940  D000               	goto	l7960
  3201  003942                     l7960:
  3202  003942  EC87  F023         	call	_BusyTx	;wreg free
  3203  003946  0900               	iorlw	0
  3204  003948  A4D8               	btfss	status,2,c
  3205  00394A  D7FB               	goto	l7960
  3206                           
  3207                           ;Wireless.c: 240: StartTx();
  3208  00394C  ECF5  F023         	call	_StartTx	;wreg free
  3209  003950  0012               	return		;funcret
  3210  003952                     __end_of_SendStoredPIDValues:
  3211                           	opt stack 0
  3212                           postinc0	equ	0xFEE
  3213                           wreg	equ	0xFE8
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _SendLineMode *****************
  3217 ;; Defined at:
  3218 ;;		line 152 in file "Wireless.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3221 ;;		 -> line_mode(1), 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;		None               void
  3226 ;; Registers used:
  3227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    9
  3240 ;; This function calls:
  3241 ;;		_BusyTx
  3242 ;;		_FlushTxBuf
  3243 ;;		_PutCharTxBuf
  3244 ;;		_StartTx
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text12
  3251  003FFA                     __ptext12:
  3252                           	opt stack 0
  3253  003FFA                     _SendLineMode:
  3254                           	opt stack 21
  3255                           
  3256                           ;Wireless.c: 153: while(BusyTx());
  3257                           
  3258                           ;incstack = 0
  3259  003FFA  D000               	goto	l7938
  3260  003FFC                     l7938:
  3261  003FFC  EC87  F023         	call	_BusyTx	;wreg free
  3262  004000  0900               	iorlw	0
  3263  004002  A4D8               	btfss	status,2,c
  3264  004004  D7FB               	goto	l7938
  3265                           
  3266                           ;Wireless.c: 154: FlushTxBuf();
  3267  004006  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3268                           
  3269                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3270  00400A  0EAA               	movlw	170
  3271  00400C  ECBC  F01F         	call	_PutCharTxBuf
  3272                           
  3273                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3274  004010  0E11               	movlw	17
  3275  004012  ECBC  F01F         	call	_PutCharTxBuf
  3276                           
  3277                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3278  004016  C078  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3279  00401A  C079  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3280  00401E  50DF               	movf	indf2,w,c
  3281  004020  ECBC  F01F         	call	_PutCharTxBuf
  3282                           
  3283                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3284  004024  0E0D               	movlw	13
  3285  004026  ECBC  F01F         	call	_PutCharTxBuf
  3286                           
  3287                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3288  00402A  0E0A               	movlw	10
  3289  00402C  ECBC  F01F         	call	_PutCharTxBuf
  3290                           
  3291                           ;Wireless.c: 162: StartTx();
  3292  004030  ECF5  F023         	call	_StartTx	;wreg free
  3293  004034  0012               	return		;funcret
  3294  004036                     __end_of_SendLineMode:
  3295                           	opt stack 0
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf2	equ	0xFDF
  3299                           fsr2h	equ	0xFDA
  3300                           fsr2l	equ	0xFD9
  3301                           status	equ	0xFD8
  3302                           
  3303 ;; *************** function _SendDefaultPIDValues *****************
  3304 ;; Defined at:
  3305 ;;		line 203 in file "Wireless.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  Kp              2   24[BANK0 ] int 
  3308 ;;  Kd              2   26[BANK0 ] int 
  3309 ;;  Ki              2   28[BANK0 ] int 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3321 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;Total ram usage:        6 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    9
  3328 ;; This function calls:
  3329 ;;		_BusyTx
  3330 ;;		_FlushTxBuf
  3331 ;;		_PutCharTxBuf
  3332 ;;		_StartTx
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text13
  3339  003952                     __ptext13:
  3340                           	opt stack 0
  3341  003952                     _SendDefaultPIDValues:
  3342                           	opt stack 21
  3343                           
  3344                           ;Wireless.c: 204: while(BusyTx());
  3345                           
  3346                           ;incstack = 0
  3347  003952  D000               	goto	l7946
  3348  003954                     l7946:
  3349  003954  EC87  F023         	call	_BusyTx	;wreg free
  3350  003958  0900               	iorlw	0
  3351  00395A  A4D8               	btfss	status,2,c
  3352  00395C  D7FB               	goto	l7946
  3353                           
  3354                           ;Wireless.c: 205: FlushTxBuf();
  3355  00395E  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3356                           
  3357                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3358  003962  0EAA               	movlw	170
  3359  003964  ECBC  F01F         	call	_PutCharTxBuf
  3360                           
  3361                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3362  003968  0E41               	movlw	65
  3363  00396A  ECBC  F01F         	call	_PutCharTxBuf
  3364                           
  3365                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3366  00396E  0100               	movlb	0	; () banked
  3367  003970  5179               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3368  003972  ECBC  F01F         	call	_PutCharTxBuf
  3369                           
  3370                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3371  003976  0100               	movlb	0	; () banked
  3372  003978  5178               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3373  00397A  ECBC  F01F         	call	_PutCharTxBuf
  3374                           
  3375                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3376  00397E  0100               	movlb	0	; () banked
  3377  003980  517B               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3378  003982  ECBC  F01F         	call	_PutCharTxBuf
  3379                           
  3380                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3381  003986  0100               	movlb	0	; () banked
  3382  003988  517A               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3383  00398A  ECBC  F01F         	call	_PutCharTxBuf
  3384                           
  3385                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3386  00398E  0100               	movlb	0	; () banked
  3387  003990  517D               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3388  003992  ECBC  F01F         	call	_PutCharTxBuf
  3389                           
  3390                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3391  003996  0100               	movlb	0	; () banked
  3392  003998  517C               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3393  00399A  ECBC  F01F         	call	_PutCharTxBuf
  3394                           
  3395                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3396  00399E  0E0D               	movlw	13
  3397  0039A0  ECBC  F01F         	call	_PutCharTxBuf
  3398                           
  3399                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3400  0039A4  0E0A               	movlw	10
  3401  0039A6  ECBC  F01F         	call	_PutCharTxBuf
  3402                           
  3403                           ;Wireless.c: 219: while (BusyTx());
  3404  0039AA  D000               	goto	l7950
  3405  0039AC                     l7950:
  3406  0039AC  EC87  F023         	call	_BusyTx	;wreg free
  3407  0039B0  0900               	iorlw	0
  3408  0039B2  A4D8               	btfss	status,2,c
  3409  0039B4  D7FB               	goto	l7950
  3410                           
  3411                           ;Wireless.c: 220: StartTx();
  3412  0039B6  ECF5  F023         	call	_StartTx	;wreg free
  3413  0039BA  0012               	return		;funcret
  3414  0039BC                     __end_of_SendDefaultPIDValues:
  3415                           	opt stack 0
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           indf2	equ	0xFDF
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function _SendCurrentPIDValues *****************
  3424 ;; Defined at:
  3425 ;;		line 243 in file "Wireless.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  Kp              2   24[BANK0 ] int 
  3428 ;;  Kd              2   26[BANK0 ] int 
  3429 ;;  Ki              2   28[BANK0 ] int 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:        6 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    9
  3448 ;; This function calls:
  3449 ;;		_BusyTx
  3450 ;;		_FlushTxBuf
  3451 ;;		_PutCharTxBuf
  3452 ;;		_StartTx
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text14
  3459  0039BC                     __ptext14:
  3460                           	opt stack 0
  3461  0039BC                     _SendCurrentPIDValues:
  3462                           	opt stack 21
  3463                           
  3464                           ;Wireless.c: 244: while(BusyTx());
  3465                           
  3466                           ;incstack = 0
  3467  0039BC  D000               	goto	l7966
  3468  0039BE                     l7966:
  3469  0039BE  EC87  F023         	call	_BusyTx	;wreg free
  3470  0039C2  0900               	iorlw	0
  3471  0039C4  A4D8               	btfss	status,2,c
  3472  0039C6  D7FB               	goto	l7966
  3473                           
  3474                           ;Wireless.c: 245: FlushTxBuf();
  3475  0039C8  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3476                           
  3477                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3478  0039CC  0EAA               	movlw	170
  3479  0039CE  ECBC  F01F         	call	_PutCharTxBuf
  3480                           
  3481                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3482  0039D2  0E43               	movlw	67
  3483  0039D4  ECBC  F01F         	call	_PutCharTxBuf
  3484                           
  3485                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3486  0039D8  0100               	movlb	0	; () banked
  3487  0039DA  5179               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3488  0039DC  ECBC  F01F         	call	_PutCharTxBuf
  3489                           
  3490                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3491  0039E0  0100               	movlb	0	; () banked
  3492  0039E2  5178               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3493  0039E4  ECBC  F01F         	call	_PutCharTxBuf
  3494                           
  3495                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3496  0039E8  0100               	movlb	0	; () banked
  3497  0039EA  517B               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3498  0039EC  ECBC  F01F         	call	_PutCharTxBuf
  3499                           
  3500                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3501  0039F0  0100               	movlb	0	; () banked
  3502  0039F2  517A               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3503  0039F4  ECBC  F01F         	call	_PutCharTxBuf
  3504                           
  3505                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3506  0039F8  0100               	movlb	0	; () banked
  3507  0039FA  517D               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3508  0039FC  ECBC  F01F         	call	_PutCharTxBuf
  3509                           
  3510                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3511  003A00  0100               	movlb	0	; () banked
  3512  003A02  517C               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3513  003A04  ECBC  F01F         	call	_PutCharTxBuf
  3514                           
  3515                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3516  003A08  0E0D               	movlw	13
  3517  003A0A  ECBC  F01F         	call	_PutCharTxBuf
  3518                           
  3519                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3520  003A0E  0E0A               	movlw	10
  3521  003A10  ECBC  F01F         	call	_PutCharTxBuf
  3522                           
  3523                           ;Wireless.c: 259: while (BusyTx());
  3524  003A14  D000               	goto	l7970
  3525  003A16                     l7970:
  3526  003A16  EC87  F023         	call	_BusyTx	;wreg free
  3527  003A1A  0900               	iorlw	0
  3528  003A1C  A4D8               	btfss	status,2,c
  3529  003A1E  D7FB               	goto	l7970
  3530                           
  3531                           ;Wireless.c: 260: StartTx();
  3532  003A20  ECF5  F023         	call	_StartTx	;wreg free
  3533  003A24  0012               	return		;funcret
  3534  003A26                     __end_of_SendCurrentPIDValues:
  3535                           	opt stack 0
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           indf2	equ	0xFDF
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _SendBattVoltageInitial *****************
  3544 ;; Defined at:
  3545 ;;		line 265 in file "Wireless.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3548 ;;		 -> main@battery_voltage(2), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;		None               void
  3553 ;; Registers used:
  3554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:        4 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    9
  3567 ;; This function calls:
  3568 ;;		_BusyTx
  3569 ;;		_FlushTxBuf
  3570 ;;		_PutCharTxBuf
  3571 ;;		_StartTx
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text15
  3578  003A90                     __ptext15:
  3579                           	opt stack 0
  3580  003A90                     _SendBattVoltageInitial:
  3581                           	opt stack 21
  3582                           
  3583                           ;Wireless.c: 266: while(BusyTx());
  3584                           
  3585                           ;incstack = 0
  3586  003A90  D000               	goto	l7928
  3587  003A92                     l7928:
  3588  003A92  EC87  F023         	call	_BusyTx	;wreg free
  3589  003A96  0900               	iorlw	0
  3590  003A98  A4D8               	btfss	status,2,c
  3591  003A9A  D7FB               	goto	l7928
  3592                           
  3593                           ;Wireless.c: 267: FlushTxBuf();
  3594  003A9C  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3595                           
  3596                           ;Wireless.c: 269: PutCharTxBuf(0xAA);
  3597  003AA0  0EAA               	movlw	170
  3598  003AA2  ECBC  F01F         	call	_PutCharTxBuf
  3599                           
  3600                           ;Wireless.c: 270: PutCharTxBuf(0x06);
  3601  003AA6  0E06               	movlw	6
  3602  003AA8  ECBC  F01F         	call	_PutCharTxBuf
  3603                           
  3604                           ;Wireless.c: 272: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  3605  003AAC  C078  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3606  003AB0  C079  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3607  003AB4  CFDE F07A          	movff	postinc2,??_SendBattVoltageInitial
  3608  003AB8  CFDD F07B          	movff	postdec2,??_SendBattVoltageInitial+1
  3609  003ABC  C07B  F07A         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  3610  003AC0  0100               	movlb	0	; () banked
  3611  003AC2  6B7B               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  3612  003AC4  0100               	movlb	0	; () banked
  3613  003AC6  517A               	movf	??_SendBattVoltageInitial& (0+255),w,b
  3614  003AC8  ECBC  F01F         	call	_PutCharTxBuf
  3615                           
  3616                           ;Wireless.c: 273: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  3617  003ACC  C078  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3618  003AD0  C079  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3619  003AD4  50DF               	movf	indf2,w,c
  3620  003AD6  ECBC  F01F         	call	_PutCharTxBuf
  3621                           
  3622                           ;Wireless.c: 275: PutCharTxBuf('\r');
  3623  003ADA  0E0D               	movlw	13
  3624  003ADC  ECBC  F01F         	call	_PutCharTxBuf
  3625                           
  3626                           ;Wireless.c: 276: PutCharTxBuf('\n');
  3627  003AE0  0E0A               	movlw	10
  3628  003AE2  ECBC  F01F         	call	_PutCharTxBuf
  3629                           
  3630                           ;Wireless.c: 277: while (BusyTx());
  3631  003AE6  D000               	goto	l7932
  3632  003AE8                     l7932:
  3633  003AE8  EC87  F023         	call	_BusyTx	;wreg free
  3634  003AEC  0900               	iorlw	0
  3635  003AEE  A4D8               	btfss	status,2,c
  3636  003AF0  D7FB               	goto	l7932
  3637                           
  3638                           ;Wireless.c: 278: StartTx();
  3639  003AF2  ECF5  F023         	call	_StartTx	;wreg free
  3640  003AF6  0012               	return		;funcret
  3641  003AF8                     __end_of_SendBattVoltageInitial:
  3642                           	opt stack 0
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _SendBattVoltage *****************
  3653 ;; Defined at:
  3654 ;;		line 282 in file "Wireless.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3657 ;;		 -> main@battery_voltage(2), 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;Total ram usage:        4 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    9
  3676 ;; This function calls:
  3677 ;;		_BusyTx
  3678 ;;		_FlushTxBuf
  3679 ;;		_PutCharTxBuf
  3680 ;;		_StartTx
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text16
  3687  003AF8                     __ptext16:
  3688                           	opt stack 0
  3689  003AF8                     _SendBattVoltage:
  3690                           	opt stack 21
  3691                           
  3692                           ;Wireless.c: 283: while(BusyTx());
  3693                           
  3694                           ;incstack = 0
  3695  003AF8  D000               	goto	l8054
  3696  003AFA                     l8054:
  3697  003AFA  EC87  F023         	call	_BusyTx	;wreg free
  3698  003AFE  0900               	iorlw	0
  3699  003B00  A4D8               	btfss	status,2,c
  3700  003B02  D7FB               	goto	l8054
  3701                           
  3702                           ;Wireless.c: 284: FlushTxBuf();
  3703  003B04  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3704                           
  3705                           ;Wireless.c: 286: PutCharTxBuf(0xAA);
  3706  003B08  0EAA               	movlw	170
  3707  003B0A  ECBC  F01F         	call	_PutCharTxBuf
  3708                           
  3709                           ;Wireless.c: 287: PutCharTxBuf(0x03);
  3710  003B0E  0E03               	movlw	3
  3711  003B10  ECBC  F01F         	call	_PutCharTxBuf
  3712                           
  3713                           ;Wireless.c: 289: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  3714  003B14  C078  FFD9         	movff	SendBattVoltage@reading,fsr2l
  3715  003B18  C079  FFDA         	movff	SendBattVoltage@reading+1,fsr2h
  3716  003B1C  CFDE F07A          	movff	postinc2,??_SendBattVoltage
  3717  003B20  CFDD F07B          	movff	postdec2,??_SendBattVoltage+1
  3718  003B24  C07B  F07A         	movff	??_SendBattVoltage+1,??_SendBattVoltage
  3719  003B28  0100               	movlb	0	; () banked
  3720  003B2A  6B7B               	clrf	(??_SendBattVoltage+1)& (0+255),b
  3721  003B2C  0100               	movlb	0	; () banked
  3722  003B2E  517A               	movf	??_SendBattVoltage& (0+255),w,b
  3723  003B30  ECBC  F01F         	call	_PutCharTxBuf
  3724                           
  3725                           ;Wireless.c: 290: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  3726  003B34  C078  FFD9         	movff	SendBattVoltage@reading,fsr2l
  3727  003B38  C079  FFDA         	movff	SendBattVoltage@reading+1,fsr2h
  3728  003B3C  50DF               	movf	indf2,w,c
  3729  003B3E  ECBC  F01F         	call	_PutCharTxBuf
  3730                           
  3731                           ;Wireless.c: 292: PutCharTxBuf('\r');
  3732  003B42  0E0D               	movlw	13
  3733  003B44  ECBC  F01F         	call	_PutCharTxBuf
  3734                           
  3735                           ;Wireless.c: 293: PutCharTxBuf('\n');
  3736  003B48  0E0A               	movlw	10
  3737  003B4A  ECBC  F01F         	call	_PutCharTxBuf
  3738                           
  3739                           ;Wireless.c: 294: while (BusyTx());
  3740  003B4E  D000               	goto	l8058
  3741  003B50                     l8058:
  3742  003B50  EC87  F023         	call	_BusyTx	;wreg free
  3743  003B54  0900               	iorlw	0
  3744  003B56  A4D8               	btfss	status,2,c
  3745  003B58  D7FB               	goto	l8058
  3746                           
  3747                           ;Wireless.c: 295: StartTx();
  3748  003B5A  ECF5  F023         	call	_StartTx	;wreg free
  3749  003B5E  0012               	return		;funcret
  3750  003B60                     __end_of_SendBattVoltage:
  3751                           	opt stack 0
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           indf2	equ	0xFDF
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _SendBattCurrentAcc *****************
  3762 ;; Defined at:
  3763 ;;		line 317 in file "Wireless.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  reading         2   24[BANK0 ] PTR const unsigned long 
  3766 ;;		 -> main@battery_current_acc(4), 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;Total ram usage:        6 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    9
  3785 ;; This function calls:
  3786 ;;		_BusyTx
  3787 ;;		_FlushTxBuf
  3788 ;;		_PutCharTxBuf
  3789 ;;		_StartTx
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text17
  3796  002EA4                     __ptext17:
  3797                           	opt stack 0
  3798  002EA4                     _SendBattCurrentAcc:
  3799                           	opt stack 21
  3800                           
  3801                           ;Wireless.c: 318: while(BusyTx());
  3802                           
  3803                           ;incstack = 0
  3804  002EA4  D000               	goto	l8074
  3805  002EA6                     l8074:
  3806  002EA6  EC87  F023         	call	_BusyTx	;wreg free
  3807  002EAA  0900               	iorlw	0
  3808  002EAC  A4D8               	btfss	status,2,c
  3809  002EAE  D7FB               	goto	l8074
  3810                           
  3811                           ;Wireless.c: 319: FlushTxBuf();
  3812  002EB0  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3813                           
  3814                           ;Wireless.c: 321: PutCharTxBuf(0xAA);
  3815  002EB4  0EAA               	movlw	170
  3816  002EB6  ECBC  F01F         	call	_PutCharTxBuf
  3817                           
  3818                           ;Wireless.c: 322: PutCharTxBuf(0x05);
  3819  002EBA  0E05               	movlw	5
  3820  002EBC  ECBC  F01F         	call	_PutCharTxBuf
  3821                           
  3822                           ;Wireless.c: 324: PutCharTxBuf((unsigned char)(*reading >> 24 & 0x000000FF));
  3823  002EC0  C078  FFD9         	movff	SendBattCurrentAcc@reading,fsr2l
  3824  002EC4  C079  FFDA         	movff	SendBattCurrentAcc@reading+1,fsr2h
  3825  002EC8  CFDE F07A          	movff	postinc2,??_SendBattCurrentAcc
  3826  002ECC  CFDE F07B          	movff	postinc2,??_SendBattCurrentAcc+1
  3827  002ED0  CFDE F07C          	movff	postinc2,??_SendBattCurrentAcc+2
  3828  002ED4  CFDE F07D          	movff	postinc2,??_SendBattCurrentAcc+3
  3829  002ED8  0E19               	movlw	25
  3830  002EDA  D006               	goto	u8180
  3831  002EDC                     u8185:
  3832  002EDC  0100               	movlb	0	; () banked
  3833  002EDE  90D8               	bcf	status,0,c
  3834  002EE0  337D               	rrcf	(??_SendBattCurrentAcc+3)& (0+255),f,b
  3835  002EE2  337C               	rrcf	(??_SendBattCurrentAcc+2)& (0+255),f,b
  3836  002EE4  337B               	rrcf	(??_SendBattCurrentAcc+1)& (0+255),f,b
  3837  002EE6  337A               	rrcf	??_SendBattCurrentAcc& (0+255),f,b
  3838  002EE8                     u8180:
  3839  002EE8  2EE8               	decfsz	wreg,f,c
  3840  002EEA  D7F8               	goto	u8185
  3841  002EEC  0100               	movlb	0	; () banked
  3842  002EEE  517A               	movf	??_SendBattCurrentAcc& (0+255),w,b
  3843  002EF0  ECBC  F01F         	call	_PutCharTxBuf
  3844                           
  3845                           ;Wireless.c: 325: PutCharTxBuf((unsigned char)(*reading >> 16 & 0x000000FF));
  3846  002EF4  C078  FFD9         	movff	SendBattCurrentAcc@reading,fsr2l
  3847  002EF8  C079  FFDA         	movff	SendBattCurrentAcc@reading+1,fsr2h
  3848  002EFC  CFDE F07A          	movff	postinc2,??_SendBattCurrentAcc
  3849  002F00  CFDE F07B          	movff	postinc2,??_SendBattCurrentAcc+1
  3850  002F04  CFDE F07C          	movff	postinc2,??_SendBattCurrentAcc+2
  3851  002F08  CFDE F07D          	movff	postinc2,??_SendBattCurrentAcc+3
  3852  002F0C  0E11               	movlw	17
  3853  002F0E  D006               	goto	u8190
  3854  002F10                     u8195:
  3855  002F10  0100               	movlb	0	; () banked
  3856  002F12  90D8               	bcf	status,0,c
  3857  002F14  337D               	rrcf	(??_SendBattCurrentAcc+3)& (0+255),f,b
  3858  002F16  337C               	rrcf	(??_SendBattCurrentAcc+2)& (0+255),f,b
  3859  002F18  337B               	rrcf	(??_SendBattCurrentAcc+1)& (0+255),f,b
  3860  002F1A  337A               	rrcf	??_SendBattCurrentAcc& (0+255),f,b
  3861  002F1C                     u8190:
  3862  002F1C  2EE8               	decfsz	wreg,f,c
  3863  002F1E  D7F8               	goto	u8195
  3864  002F20  0100               	movlb	0	; () banked
  3865  002F22  517A               	movf	??_SendBattCurrentAcc& (0+255),w,b
  3866  002F24  ECBC  F01F         	call	_PutCharTxBuf
  3867                           
  3868                           ;Wireless.c: 326: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x000000FF));
  3869  002F28  C078  FFD9         	movff	SendBattCurrentAcc@reading,fsr2l
  3870  002F2C  C079  FFDA         	movff	SendBattCurrentAcc@reading+1,fsr2h
  3871  002F30  CFDE F07A          	movff	postinc2,??_SendBattCurrentAcc
  3872  002F34  CFDE F07B          	movff	postinc2,??_SendBattCurrentAcc+1
  3873  002F38  CFDE F07C          	movff	postinc2,??_SendBattCurrentAcc+2
  3874  002F3C  CFDE F07D          	movff	postinc2,??_SendBattCurrentAcc+3
  3875  002F40  C07B  F07A         	movff	??_SendBattCurrentAcc+1,??_SendBattCurrentAcc
  3876  002F44  C07C  F07B         	movff	??_SendBattCurrentAcc+2,??_SendBattCurrentAcc+1
  3877  002F48  C07D  F07C         	movff	??_SendBattCurrentAcc+3,??_SendBattCurrentAcc+2
  3878  002F4C  0100               	movlb	0	; () banked
  3879  002F4E  6B7D               	clrf	(??_SendBattCurrentAcc+3)& (0+255),b
  3880  002F50  0100               	movlb	0	; () banked
  3881  002F52  517A               	movf	??_SendBattCurrentAcc& (0+255),w,b
  3882  002F54  ECBC  F01F         	call	_PutCharTxBuf
  3883                           
  3884                           ;Wireless.c: 327: PutCharTxBuf((unsigned char)(*reading & 0x000000FF));
  3885  002F58  C078  FFD9         	movff	SendBattCurrentAcc@reading,fsr2l
  3886  002F5C  C079  FFDA         	movff	SendBattCurrentAcc@reading+1,fsr2h
  3887  002F60  50DF               	movf	indf2,w,c
  3888  002F62  ECBC  F01F         	call	_PutCharTxBuf
  3889                           
  3890                           ;Wireless.c: 329: PutCharTxBuf('\r');
  3891  002F66  0E0D               	movlw	13
  3892  002F68  ECBC  F01F         	call	_PutCharTxBuf
  3893                           
  3894                           ;Wireless.c: 330: PutCharTxBuf('\n');
  3895  002F6C  0E0A               	movlw	10
  3896  002F6E  ECBC  F01F         	call	_PutCharTxBuf
  3897                           
  3898                           ;Wireless.c: 331: while (BusyTx());
  3899  002F72  D000               	goto	l8078
  3900  002F74                     l8078:
  3901  002F74  EC87  F023         	call	_BusyTx	;wreg free
  3902  002F78  0900               	iorlw	0
  3903  002F7A  A4D8               	btfss	status,2,c
  3904  002F7C  D7FB               	goto	l8078
  3905                           
  3906                           ;Wireless.c: 332: StartTx();
  3907  002F7E  ECF5  F023         	call	_StartTx	;wreg free
  3908  002F82  0012               	return		;funcret
  3909  002F84                     __end_of_SendBattCurrentAcc:
  3910                           	opt stack 0
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           indf2	equ	0xFDF
  3914                           postinc2	equ	0xFDE
  3915                           postdec2	equ	0xFDD
  3916                           fsr2h	equ	0xFDA
  3917                           fsr2l	equ	0xFD9
  3918                           status	equ	0xFD8
  3919                           
  3920 ;; *************** function _SendBattCurrent *****************
  3921 ;; Defined at:
  3922 ;;		line 299 in file "Wireless.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3925 ;;		 -> main@battery_current(2), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;		None               void
  3930 ;; Registers used:
  3931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;Total ram usage:        4 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    9
  3944 ;; This function calls:
  3945 ;;		_BusyTx
  3946 ;;		_FlushTxBuf
  3947 ;;		_PutCharTxBuf
  3948 ;;		_StartTx
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text18
  3955  003B60                     __ptext18:
  3956                           	opt stack 0
  3957  003B60                     _SendBattCurrent:
  3958                           	opt stack 21
  3959                           
  3960                           ;Wireless.c: 300: while(BusyTx());
  3961                           
  3962                           ;incstack = 0
  3963  003B60  D000               	goto	l8064
  3964  003B62                     l8064:
  3965  003B62  EC87  F023         	call	_BusyTx	;wreg free
  3966  003B66  0900               	iorlw	0
  3967  003B68  A4D8               	btfss	status,2,c
  3968  003B6A  D7FB               	goto	l8064
  3969                           
  3970                           ;Wireless.c: 301: FlushTxBuf();
  3971  003B6C  ECC5  F020         	call	_FlushTxBuf	;wreg free
  3972                           
  3973                           ;Wireless.c: 303: PutCharTxBuf(0xAA);
  3974  003B70  0EAA               	movlw	170
  3975  003B72  ECBC  F01F         	call	_PutCharTxBuf
  3976                           
  3977                           ;Wireless.c: 304: PutCharTxBuf(0x04);
  3978  003B76  0E04               	movlw	4
  3979  003B78  ECBC  F01F         	call	_PutCharTxBuf
  3980                           
  3981                           ;Wireless.c: 306: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  3982  003B7C  C078  FFD9         	movff	SendBattCurrent@reading,fsr2l
  3983  003B80  C079  FFDA         	movff	SendBattCurrent@reading+1,fsr2h
  3984  003B84  CFDE F07A          	movff	postinc2,??_SendBattCurrent
  3985  003B88  CFDD F07B          	movff	postdec2,??_SendBattCurrent+1
  3986  003B8C  C07B  F07A         	movff	??_SendBattCurrent+1,??_SendBattCurrent
  3987  003B90  0100               	movlb	0	; () banked
  3988  003B92  6B7B               	clrf	(??_SendBattCurrent+1)& (0+255),b
  3989  003B94  0100               	movlb	0	; () banked
  3990  003B96  517A               	movf	??_SendBattCurrent& (0+255),w,b
  3991  003B98  ECBC  F01F         	call	_PutCharTxBuf
  3992                           
  3993                           ;Wireless.c: 307: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  3994  003B9C  C078  FFD9         	movff	SendBattCurrent@reading,fsr2l
  3995  003BA0  C079  FFDA         	movff	SendBattCurrent@reading+1,fsr2h
  3996  003BA4  50DF               	movf	indf2,w,c
  3997  003BA6  ECBC  F01F         	call	_PutCharTxBuf
  3998                           
  3999                           ;Wireless.c: 309: PutCharTxBuf('\r');
  4000  003BAA  0E0D               	movlw	13
  4001  003BAC  ECBC  F01F         	call	_PutCharTxBuf
  4002                           
  4003                           ;Wireless.c: 310: PutCharTxBuf('\n');
  4004  003BB0  0E0A               	movlw	10
  4005  003BB2  ECBC  F01F         	call	_PutCharTxBuf
  4006                           
  4007                           ;Wireless.c: 311: while (BusyTx());
  4008  003BB6  D000               	goto	l8068
  4009  003BB8                     l8068:
  4010  003BB8  EC87  F023         	call	_BusyTx	;wreg free
  4011  003BBC  0900               	iorlw	0
  4012  003BBE  A4D8               	btfss	status,2,c
  4013  003BC0  D7FB               	goto	l8068
  4014                           
  4015                           ;Wireless.c: 312: StartTx();
  4016  003BC2  ECF5  F023         	call	_StartTx	;wreg free
  4017  003BC6  0012               	return		;funcret
  4018  003BC8                     __end_of_SendBattCurrent:
  4019                           	opt stack 0
  4020                           postinc0	equ	0xFEE
  4021                           wreg	equ	0xFE8
  4022                           indf2	equ	0xFDF
  4023                           postinc2	equ	0xFDE
  4024                           postdec2	equ	0xFDD
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function _ResetMillis1 *****************
  4030 ;; Defined at:
  4031 ;;		line 33 in file "MillisecondTimer.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;		None               void
  4038 ;; Registers used:
  4039 ;;		wreg, status,2
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    7
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text19
  4060  0047A4                     __ptext19:
  4061                           	opt stack 0
  4062  0047A4                     _ResetMillis1:
  4063                           	opt stack 23
  4064                           
  4065                           ;MillisecondTimer.c: 35: millisecond_COUNT1 = 0;
  4066                           
  4067                           ;incstack = 0
  4068  0047A4  0E00               	movlw	0
  4069  0047A6  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  4070  0047A8  0E00               	movlw	0
  4071  0047AA  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  4072  0047AC  0012               	return		;funcret
  4073  0047AE                     __end_of_ResetMillis1:
  4074                           	opt stack 0
  4075                           postinc0	equ	0xFEE
  4076                           wreg	equ	0xFE8
  4077                           indf2	equ	0xFDF
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084 ;; *************** function _ResetMillis0 *****************
  4085 ;; Defined at:
  4086 ;;		line 27 in file "MillisecondTimer.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		wreg, status,2
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    7
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text20
  4115  0047AE                     __ptext20:
  4116                           	opt stack 0
  4117  0047AE                     _ResetMillis0:
  4118                           	opt stack 23
  4119                           
  4120                           ;MillisecondTimer.c: 29: millisecond_COUNT0 = 0;
  4121                           
  4122                           ;incstack = 0
  4123  0047AE  0E00               	movlw	0
  4124  0047B0  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  4125  0047B2  0E00               	movlw	0
  4126  0047B4  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  4127  0047B6  0012               	return		;funcret
  4128  0047B8                     __end_of_ResetMillis0:
  4129                           	opt stack 0
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           indf2	equ	0xFDF
  4133                           postinc2	equ	0xFDE
  4134                           postdec2	equ	0xFDD
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8
  4138                           
  4139 ;; *************** function _ResetAccumulatedCurrent *****************
  4140 ;; Defined at:
  4141 ;;		line 103 in file "BatteryLib/ds2781.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        0 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    9
  4162 ;; This function calls:
  4163 ;;		_OWReset
  4164 ;;		_OWWriteByte
  4165 ;; This function is called by:
  4166 ;;		_main
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text21
  4171  00431E                     __ptext21:
  4172                           	opt stack 0
  4173  00431E                     _ResetAccumulatedCurrent:
  4174                           	opt stack 21
  4175                           
  4176                           ;ds2781.c: 105: if( OWReset() == TRUE)
  4177                           
  4178                           ;incstack = 0
  4179  00431E  EC55  F020         	call	_OWReset	;wreg free
  4180  004322  06E8               	decf	wreg,f,c
  4181  004324  A4D8               	btfss	status,2,c
  4182  004326  D010               	goto	l930
  4183                           
  4184                           ;ds2781.c: 106: {
  4185                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  4186  004328  0ECC               	movlw	204
  4187  00432A  ECA5  F021         	call	_OWWriteByte
  4188                           
  4189                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  4190  00432E  0E6C               	movlw	108
  4191  004330  ECA5  F021         	call	_OWWriteByte
  4192                           
  4193                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  4194  004334  0E10               	movlw	16
  4195  004336  ECA5  F021         	call	_OWWriteByte
  4196                           
  4197                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  4198  00433A  0E00               	movlw	0
  4199  00433C  ECA5  F021         	call	_OWWriteByte
  4200                           
  4201                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  4202  004340  0E00               	movlw	0
  4203  004342  ECA5  F021         	call	_OWWriteByte
  4204  004346  D000               	goto	l930
  4205  004348                     l930:
  4206  004348  0012               	return		;funcret
  4207  00434A                     __end_of_ResetAccumulatedCurrent:
  4208                           	opt stack 0
  4209                           postinc0	equ	0xFEE
  4210                           wreg	equ	0xFE8
  4211                           indf2	equ	0xFDF
  4212                           postinc2	equ	0xFDE
  4213                           postdec2	equ	0xFDD
  4214                           fsr2h	equ	0xFDA
  4215                           fsr2l	equ	0xFD9
  4216                           status	equ	0xFD8
  4217                           
  4218 ;; *************** function _ReadVoltage *****************
  4219 ;; Defined at:
  4220 ;;		line 33 in file "BatteryLib/ds2781.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  result          2   24[BANK0 ] unsigned short 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  2   19[BANK0 ] unsigned short 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;Total ram usage:        7 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    9
  4241 ;; This function calls:
  4242 ;;		_OWReadByte
  4243 ;;		_OWReset
  4244 ;;		_OWWriteByte
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text22
  4251  003A26                     __ptext22:
  4252                           	opt stack 0
  4253  003A26                     _ReadVoltage:
  4254                           	opt stack 21
  4255                           
  4256                           ;ds2781.c: 35: WORD result = 0;
  4257                           
  4258                           ;incstack = 0
  4259  003A26  0E00               	movlw	0
  4260  003A28  0100               	movlb	0	; () banked
  4261  003A2A  6F79               	movwf	(ReadVoltage@result+1)& (0+255),b
  4262  003A2C  0E00               	movlw	0
  4263  003A2E  6F78               	movwf	ReadVoltage@result& (0+255),b
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4267  003A30  EC55  F020         	call	_OWReset	;wreg free
  4268  003A34  06E8               	decf	wreg,f,c
  4269  003A36  A4D8               	btfss	status,2,c
  4270  003A38  D017               	goto	l7922
  4271                           
  4272                           ;ds2781.c: 37: {
  4273                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4274  003A3A  0ECC               	movlw	204
  4275  003A3C  ECA5  F021         	call	_OWWriteByte
  4276                           
  4277                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4278  003A40  0E69               	movlw	105
  4279  003A42  ECA5  F021         	call	_OWWriteByte
  4280                           
  4281                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4282  003A46  0E0C               	movlw	12
  4283  003A48  ECA5  F021         	call	_OWWriteByte
  4284                           
  4285                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4286  003A4C  EC71  F020         	call	_OWReadByte	;wreg free
  4287  003A50  0100               	movlb	0	; () banked
  4288  003A52  6F79               	movwf	(ReadVoltage@result+1)& (0+255),b
  4289  003A54  6B78               	clrf	ReadVoltage@result& (0+255),b
  4290                           
  4291                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4292  003A56  EC71  F020         	call	_OWReadByte	;wreg free
  4293  003A5A  0100               	movlb	0	; () banked
  4294  003A5C  6F75               	movwf	??_ReadVoltage& (0+255),b
  4295  003A5E  0100               	movlb	0	; () banked
  4296  003A60  5175               	movf	??_ReadVoltage& (0+255),w,b
  4297  003A62  0100               	movlb	0	; () banked
  4298  003A64  1378               	iorwf	ReadVoltage@result& (0+255),f,b
  4299  003A66  D000               	goto	l7922
  4300  003A68                     l7922:
  4301                           
  4302                           ;ds2781.c: 43: }
  4303                           ;ds2781.c: 44: return (result >> 5);
  4304  003A68  C078  F075         	movff	ReadVoltage@result,??_ReadVoltage
  4305  003A6C  C079  F076         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4306  003A70  0E05               	movlw	5
  4307  003A72  0100               	movlb	0	; () banked
  4308  003A74  6F77               	movwf	(??_ReadVoltage+2)& (0+255),b
  4309  003A76                     u7945:
  4310  003A76  0100               	movlb	0	; () banked
  4311  003A78  90D8               	bcf	status,0,c
  4312  003A7A  3376               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4313  003A7C  3375               	rrcf	??_ReadVoltage& (0+255),f,b
  4314  003A7E  0100               	movlb	0	; () banked
  4315  003A80  2F77               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4316  003A82  D7F9               	goto	u7945
  4317  003A84  C075  F073         	movff	??_ReadVoltage,?_ReadVoltage
  4318  003A88  C076  F074         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4319  003A8C  D000               	goto	l918
  4320  003A8E                     l918:
  4321                           
  4322                           ; BSR set to: 0
  4323  003A8E  0012               	return		;funcret
  4324  003A90                     __end_of_ReadVoltage:
  4325                           	opt stack 0
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           indf2	equ	0xFDF
  4329                           postinc2	equ	0xFDE
  4330                           postdec2	equ	0xFDD
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _ReadMillis1 *****************
  4336 ;; Defined at:
  4337 ;;		line 13 in file "MillisecondTimer.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2   16[BANK0 ] unsigned int 
  4344 ;; Registers used:
  4345 ;;		None
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;Total ram usage:        2 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    7
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text23
  4366  0047B8                     __ptext23:
  4367                           	opt stack 0
  4368  0047B8                     _ReadMillis1:
  4369                           	opt stack 23
  4370                           
  4371                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;incstack = 0
  4375  0047B8  C00F  F070         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  4376  0047BC  C010  F071         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  4377  0047C0  0012               	return		;funcret
  4378  0047C2                     __end_of_ReadMillis1:
  4379                           	opt stack 0
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           indf2	equ	0xFDF
  4383                           postinc2	equ	0xFDE
  4384                           postdec2	equ	0xFDD
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _ReadMillis0 *****************
  4390 ;; Defined at:
  4391 ;;		line 7 in file "MillisecondTimer.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2   16[BANK0 ] unsigned int 
  4398 ;; Registers used:
  4399 ;;		None
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    7
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_main
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text24
  4420  0047C2                     __ptext24:
  4421                           	opt stack 0
  4422  0047C2                     _ReadMillis0:
  4423                           	opt stack 23
  4424                           
  4425                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  4426                           
  4427                           ;incstack = 0
  4428  0047C2  C00D  F070         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  4429  0047C6  C00E  F071         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  4430  0047CA  0012               	return		;funcret
  4431  0047CC                     __end_of_ReadMillis0:
  4432                           	opt stack 0
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442 ;; *************** function _ReadEchoLength *****************
  4443 ;; Defined at:
  4444 ;;		line 68 in file "Ultrasound.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2   16[BANK0 ] unsigned int 
  4451 ;; Registers used:
  4452 ;;		None
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;Total ram usage:        2 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    7
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text25
  4473  0047CC                     __ptext25:
  4474                           	opt stack 0
  4475  0047CC                     _ReadEchoLength:
  4476                           	opt stack 23
  4477                           
  4478                           ;Ultrasound.c: 70: return (echo_time);
  4479                           
  4480                           ;incstack = 0
  4481  0047CC  C00B  F070         	movff	_echo_time,?_ReadEchoLength	;volatile
  4482  0047D0  C00C  F071         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  4483  0047D4  0012               	return		;funcret
  4484  0047D6                     __end_of_ReadEchoLength:
  4485                           	opt stack 0
  4486                           postinc0	equ	0xFEE
  4487                           wreg	equ	0xFE8
  4488                           indf2	equ	0xFDF
  4489                           postinc2	equ	0xFDE
  4490                           postdec2	equ	0xFDD
  4491                           fsr2h	equ	0xFDA
  4492                           fsr2l	equ	0xFD9
  4493                           status	equ	0xFD8
  4494                           
  4495 ;; *************** function _ReadCurrent *****************
  4496 ;; Defined at:
  4497 ;;		line 56 in file "BatteryLib/ds2781.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  result          2   22[BANK0 ] unsigned short 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2   19[BANK0 ] unsigned short 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;Total ram usage:        5 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    9
  4518 ;; This function calls:
  4519 ;;		_OWReadByte
  4520 ;;		_OWReset
  4521 ;;		_OWWriteByte
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text26
  4528  003DD2                     __ptext26:
  4529                           	opt stack 0
  4530  003DD2                     _ReadCurrent:
  4531                           	opt stack 21
  4532                           
  4533                           ;ds2781.c: 58: WORD result = 0;
  4534                           
  4535                           ;incstack = 0
  4536  003DD2  0E00               	movlw	0
  4537  003DD4  0100               	movlb	0	; () banked
  4538  003DD6  6F77               	movwf	(ReadCurrent@result+1)& (0+255),b
  4539  003DD8  0E00               	movlw	0
  4540  003DDA  6F76               	movwf	ReadCurrent@result& (0+255),b
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;ds2781.c: 59: if( OWReset() == TRUE)
  4544  003DDC  EC55  F020         	call	_OWReset	;wreg free
  4545  003DE0  06E8               	decf	wreg,f,c
  4546  003DE2  A4D8               	btfss	status,2,c
  4547  003DE4  D017               	goto	l8038
  4548                           
  4549                           ;ds2781.c: 60: {
  4550                           ;ds2781.c: 61: OWWriteByte( 0xCC );
  4551  003DE6  0ECC               	movlw	204
  4552  003DE8  ECA5  F021         	call	_OWWriteByte
  4553                           
  4554                           ;ds2781.c: 62: OWWriteByte( 0x69 );
  4555  003DEC  0E69               	movlw	105
  4556  003DEE  ECA5  F021         	call	_OWWriteByte
  4557                           
  4558                           ;ds2781.c: 63: OWWriteByte( 0x0E );
  4559  003DF2  0E0E               	movlw	14
  4560  003DF4  ECA5  F021         	call	_OWWriteByte
  4561                           
  4562                           ;ds2781.c: 64: result = ((WORD)OWReadByte() ) << 8;
  4563  003DF8  EC71  F020         	call	_OWReadByte	;wreg free
  4564  003DFC  0100               	movlb	0	; () banked
  4565  003DFE  6F77               	movwf	(ReadCurrent@result+1)& (0+255),b
  4566  003E00  6B76               	clrf	ReadCurrent@result& (0+255),b
  4567                           
  4568                           ;ds2781.c: 65: result |= ((WORD)OWReadByte() );
  4569  003E02  EC71  F020         	call	_OWReadByte	;wreg free
  4570  003E06  0100               	movlb	0	; () banked
  4571  003E08  6F75               	movwf	??_ReadCurrent& (0+255),b
  4572  003E0A  0100               	movlb	0	; () banked
  4573  003E0C  5175               	movf	??_ReadCurrent& (0+255),w,b
  4574  003E0E  0100               	movlb	0	; () banked
  4575  003E10  1376               	iorwf	ReadCurrent@result& (0+255),f,b
  4576  003E12  D000               	goto	l8038
  4577  003E14                     l8038:
  4578                           
  4579                           ;ds2781.c: 66: }
  4580                           ;ds2781.c: 67: return result;
  4581  003E14  C076  F073         	movff	ReadCurrent@result,?_ReadCurrent
  4582  003E18  C077  F074         	movff	ReadCurrent@result+1,?_ReadCurrent+1
  4583  003E1C  D000               	goto	l922
  4584  003E1E                     l922:
  4585  003E1E  0012               	return		;funcret
  4586  003E20                     __end_of_ReadCurrent:
  4587                           	opt stack 0
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           indf2	equ	0xFDF
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _ReadAccumulatedCurrent *****************
  4598 ;; Defined at:
  4599 ;;		line 79 in file "BatteryLib/ds2781.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  result          4   28[BANK0 ] unsigned long 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  4   19[BANK0 ] unsigned long 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;Total ram usage:       13 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    9
  4620 ;; This function calls:
  4621 ;;		_OWReadByte
  4622 ;;		_OWReset
  4623 ;;		_OWWriteByte
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text27
  4630  002472                     __ptext27:
  4631                           	opt stack 0
  4632  002472                     _ReadAccumulatedCurrent:
  4633                           	opt stack 21
  4634                           
  4635                           ;ds2781.c: 81: DWORD result = 0;
  4636                           
  4637                           ;incstack = 0
  4638  002472  0E00               	movlw	0
  4639  002474  0100               	movlb	0	; () banked
  4640  002476  6F7C               	movwf	ReadAccumulatedCurrent@result& (0+255),b
  4641  002478  0E00               	movlw	0
  4642  00247A  6F7D               	movwf	(ReadAccumulatedCurrent@result+1)& (0+255),b
  4643  00247C  0E00               	movlw	0
  4644  00247E  6F7E               	movwf	(ReadAccumulatedCurrent@result+2)& (0+255),b
  4645  002480  0E00               	movlw	0
  4646  002482  6F7F               	movwf	(ReadAccumulatedCurrent@result+3)& (0+255),b
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;ds2781.c: 82: if( OWReset() == TRUE)
  4650  002484  EC55  F020         	call	_OWReset	;wreg free
  4651  002488  06E8               	decf	wreg,f,c
  4652  00248A  A4D8               	btfss	status,2,c
  4653  00248C  D06D               	goto	l8048
  4654                           
  4655                           ;ds2781.c: 83: {
  4656                           ;ds2781.c: 84: OWWriteByte( 0xCC );
  4657  00248E  0ECC               	movlw	204
  4658  002490  ECA5  F021         	call	_OWWriteByte
  4659                           
  4660                           ;ds2781.c: 85: OWWriteByte( 0x69 );
  4661  002494  0E69               	movlw	105
  4662  002496  ECA5  F021         	call	_OWWriteByte
  4663                           
  4664                           ;ds2781.c: 86: OWWriteByte( 0x10 );
  4665  00249A  0E10               	movlw	16
  4666  00249C  ECA5  F021         	call	_OWWriteByte
  4667                           
  4668                           ;ds2781.c: 87: result = ((DWORD)OWReadByte() ) << 24;
  4669  0024A0  EC71  F020         	call	_OWReadByte	;wreg free
  4670  0024A4  0100               	movlb	0	; () banked
  4671  0024A6  6F77               	movwf	??_ReadAccumulatedCurrent& (0+255),b
  4672  0024A8  C077  F078         	movff	??_ReadAccumulatedCurrent,??_ReadAccumulatedCurrent+1
  4673  0024AC  0100               	movlb	0	; () banked
  4674  0024AE  6B79               	clrf	(??_ReadAccumulatedCurrent+2)& (0+255),b
  4675  0024B0  6B7A               	clrf	(??_ReadAccumulatedCurrent+3)& (0+255),b
  4676  0024B2  6B7B               	clrf	(??_ReadAccumulatedCurrent+4)& (0+255),b
  4677  0024B4  C078  F07B         	movff	??_ReadAccumulatedCurrent+1,??_ReadAccumulatedCurrent+4
  4678  0024B8  0100               	movlb	0	; () banked
  4679  0024BA  6B7A               	clrf	(??_ReadAccumulatedCurrent+3)& (0+255),b
  4680  0024BC  6B79               	clrf	(??_ReadAccumulatedCurrent+2)& (0+255),b
  4681  0024BE  6B78               	clrf	(??_ReadAccumulatedCurrent+1)& (0+255),b
  4682  0024C0  C078  F07C         	movff	??_ReadAccumulatedCurrent+1,ReadAccumulatedCurrent@result
  4683  0024C4  C079  F07D         	movff	??_ReadAccumulatedCurrent+2,ReadAccumulatedCurrent@result+1
  4684  0024C8  C07A  F07E         	movff	??_ReadAccumulatedCurrent+3,ReadAccumulatedCurrent@result+2
  4685  0024CC  C07B  F07F         	movff	??_ReadAccumulatedCurrent+4,ReadAccumulatedCurrent@result+3
  4686                           
  4687                           ;ds2781.c: 88: result |= ((DWORD)OWReadByte() ) << 16;
  4688  0024D0  EC71  F020         	call	_OWReadByte	;wreg free
  4689  0024D4  0100               	movlb	0	; () banked
  4690  0024D6  6F77               	movwf	??_ReadAccumulatedCurrent& (0+255),b
  4691  0024D8  C077  F078         	movff	??_ReadAccumulatedCurrent,??_ReadAccumulatedCurrent+1
  4692  0024DC  0100               	movlb	0	; () banked
  4693  0024DE  6B79               	clrf	(??_ReadAccumulatedCurrent+2)& (0+255),b
  4694  0024E0  6B7A               	clrf	(??_ReadAccumulatedCurrent+3)& (0+255),b
  4695  0024E2  6B7B               	clrf	(??_ReadAccumulatedCurrent+4)& (0+255),b
  4696  0024E4  C079  F07B         	movff	??_ReadAccumulatedCurrent+2,??_ReadAccumulatedCurrent+4
  4697  0024E8  C078  F07A         	movff	??_ReadAccumulatedCurrent+1,??_ReadAccumulatedCurrent+3
  4698  0024EC  0100               	movlb	0	; () banked
  4699  0024EE  6B79               	clrf	(??_ReadAccumulatedCurrent+2)& (0+255),b
  4700  0024F0  6B78               	clrf	(??_ReadAccumulatedCurrent+1)& (0+255),b
  4701  0024F2  0100               	movlb	0	; () banked
  4702  0024F4  5178               	movf	(??_ReadAccumulatedCurrent+1)& (0+255),w,b
  4703  0024F6  0100               	movlb	0	; () banked
  4704  0024F8  137C               	iorwf	ReadAccumulatedCurrent@result& (0+255),f,b
  4705  0024FA  0100               	movlb	0	; () banked
  4706  0024FC  5179               	movf	(??_ReadAccumulatedCurrent+2)& (0+255),w,b
  4707  0024FE  0100               	movlb	0	; () banked
  4708  002500  137D               	iorwf	(ReadAccumulatedCurrent@result+1)& (0+255),f,b
  4709  002502  0100               	movlb	0	; () banked
  4710  002504  517A               	movf	(??_ReadAccumulatedCurrent+3)& (0+255),w,b
  4711  002506  0100               	movlb	0	; () banked
  4712  002508  137E               	iorwf	(ReadAccumulatedCurrent@result+2)& (0+255),f,b
  4713  00250A  0100               	movlb	0	; () banked
  4714  00250C  517B               	movf	(??_ReadAccumulatedCurrent+4)& (0+255),w,b
  4715  00250E  0100               	movlb	0	; () banked
  4716  002510  137F               	iorwf	(ReadAccumulatedCurrent@result+3)& (0+255),f,b
  4717                           
  4718                           ;ds2781.c: 89: result |= ((DWORD)OWReadByte() ) << 8;
  4719  002512  EC71  F020         	call	_OWReadByte	;wreg free
  4720  002516  0100               	movlb	0	; () banked
  4721  002518  6F77               	movwf	??_ReadAccumulatedCurrent& (0+255),b
  4722  00251A  C077  F078         	movff	??_ReadAccumulatedCurrent,??_ReadAccumulatedCurrent+1
  4723  00251E  0100               	movlb	0	; () banked
  4724  002520  6B79               	clrf	(??_ReadAccumulatedCurrent+2)& (0+255),b
  4725  002522  6B7A               	clrf	(??_ReadAccumulatedCurrent+3)& (0+255),b
  4726  002524  6B7B               	clrf	(??_ReadAccumulatedCurrent+4)& (0+255),b
  4727  002526  C07A  F07B         	movff	??_ReadAccumulatedCurrent+3,??_ReadAccumulatedCurrent+4
  4728  00252A  C079  F07A         	movff	??_ReadAccumulatedCurrent+2,??_ReadAccumulatedCurrent+3
  4729  00252E  C078  F079         	movff	??_ReadAccumulatedCurrent+1,??_ReadAccumulatedCurrent+2
  4730  002532  0100               	movlb	0	; () banked
  4731  002534  6B78               	clrf	(??_ReadAccumulatedCurrent+1)& (0+255),b
  4732  002536  0100               	movlb	0	; () banked
  4733  002538  5178               	movf	(??_ReadAccumulatedCurrent+1)& (0+255),w,b
  4734  00253A  0100               	movlb	0	; () banked
  4735  00253C  137C               	iorwf	ReadAccumulatedCurrent@result& (0+255),f,b
  4736  00253E  0100               	movlb	0	; () banked
  4737  002540  5179               	movf	(??_ReadAccumulatedCurrent+2)& (0+255),w,b
  4738  002542  0100               	movlb	0	; () banked
  4739  002544  137D               	iorwf	(ReadAccumulatedCurrent@result+1)& (0+255),f,b
  4740  002546  0100               	movlb	0	; () banked
  4741  002548  517A               	movf	(??_ReadAccumulatedCurrent+3)& (0+255),w,b
  4742  00254A  0100               	movlb	0	; () banked
  4743  00254C  137E               	iorwf	(ReadAccumulatedCurrent@result+2)& (0+255),f,b
  4744  00254E  0100               	movlb	0	; () banked
  4745  002550  517B               	movf	(??_ReadAccumulatedCurrent+4)& (0+255),w,b
  4746  002552  0100               	movlb	0	; () banked
  4747  002554  137F               	iorwf	(ReadAccumulatedCurrent@result+3)& (0+255),f,b
  4748                           
  4749                           ;ds2781.c: 90: result |= ((DWORD)OWReadByte() );
  4750  002556  EC71  F020         	call	_OWReadByte	;wreg free
  4751  00255A  0100               	movlb	0	; () banked
  4752  00255C  6F77               	movwf	??_ReadAccumulatedCurrent& (0+255),b
  4753  00255E  0100               	movlb	0	; () banked
  4754  002560  5177               	movf	??_ReadAccumulatedCurrent& (0+255),w,b
  4755  002562  0100               	movlb	0	; () banked
  4756  002564  137C               	iorwf	ReadAccumulatedCurrent@result& (0+255),f,b
  4757  002566  D000               	goto	l8048
  4758  002568                     l8048:
  4759                           
  4760                           ;ds2781.c: 91: }
  4761                           ;ds2781.c: 92: return (result >> 4);
  4762  002568  C07C  F077         	movff	ReadAccumulatedCurrent@result,??_ReadAccumulatedCurrent
  4763  00256C  C07D  F078         	movff	ReadAccumulatedCurrent@result+1,??_ReadAccumulatedCurrent+1
  4764  002570  C07E  F079         	movff	ReadAccumulatedCurrent@result+2,??_ReadAccumulatedCurrent+2
  4765  002574  C07F  F07A         	movff	ReadAccumulatedCurrent@result+3,??_ReadAccumulatedCurrent+3
  4766  002578  0E05               	movlw	5
  4767  00257A  D006               	goto	u8120
  4768  00257C                     u8125:
  4769  00257C  0100               	movlb	0	; () banked
  4770  00257E  90D8               	bcf	status,0,c
  4771  002580  337A               	rrcf	(??_ReadAccumulatedCurrent+3)& (0+255),f,b
  4772  002582  3379               	rrcf	(??_ReadAccumulatedCurrent+2)& (0+255),f,b
  4773  002584  3378               	rrcf	(??_ReadAccumulatedCurrent+1)& (0+255),f,b
  4774  002586  3377               	rrcf	??_ReadAccumulatedCurrent& (0+255),f,b
  4775  002588                     u8120:
  4776  002588  2EE8               	decfsz	wreg,f,c
  4777  00258A  D7F8               	goto	u8125
  4778  00258C  C077  F073         	movff	??_ReadAccumulatedCurrent,?_ReadAccumulatedCurrent
  4779  002590  C078  F074         	movff	??_ReadAccumulatedCurrent+1,?_ReadAccumulatedCurrent+1
  4780  002594  C079  F075         	movff	??_ReadAccumulatedCurrent+2,?_ReadAccumulatedCurrent+2
  4781  002598  C07A  F076         	movff	??_ReadAccumulatedCurrent+3,?_ReadAccumulatedCurrent+3
  4782  00259C  D000               	goto	l926
  4783  00259E                     l926:
  4784                           
  4785                           ; BSR set to: 0
  4786  00259E  0012               	return		;funcret
  4787  0025A0                     __end_of_ReadAccumulatedCurrent:
  4788                           	opt stack 0
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           indf2	equ	0xFDF
  4792                           postinc2	equ	0xFDE
  4793                           postdec2	equ	0xFDD
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _OWWriteByte *****************
  4799 ;; Defined at:
  4800 ;;		line 143 in file "BatteryLib/OneWire.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  byte            1    wreg     unsigned char 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  byte            1   17[BANK0 ] unsigned char 
  4805 ;;  i               1   18[BANK0 ] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;		None               void
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;Total ram usage:        2 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    8
  4822 ;; This function calls:
  4823 ;;		_OWWriteBit
  4824 ;; This function is called by:
  4825 ;;		_ReadVoltage
  4826 ;;		_ReadCurrent
  4827 ;;		_ReadAccumulatedCurrent
  4828 ;;		_ResetAccumulatedCurrent
  4829 ;;		_ReadNetAddress
  4830 ;;		_ReadTemperature
  4831 ;;		_ReadCurrentOffset
  4832 ;;		_WriteCurrentOffset
  4833 ;;		_AdjustCurrentOffset
  4834 ;;		_UpdateControlRegister
  4835 ;;		_ReadRAM
  4836 ;;		_WriteRAM
  4837 ;;		_CopyEEPROM
  4838 ;;		_RecallEEPROM
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text28
  4843  00434A                     __ptext28:
  4844                           	opt stack 0
  4845  00434A                     _OWWriteByte:
  4846                           	opt stack 21
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;incstack = 0
  4850                           ;OWWriteByte@byte stored from wreg
  4851  00434A  0100               	movlb	0	; () banked
  4852  00434C  6F71               	movwf	OWWriteByte@byte& (0+255),b
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;OneWire.c: 145: BYTE i;
  4856                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4857  00434E  0E00               	movlw	0
  4858  004350  0100               	movlb	0	; () banked
  4859  004352  6F72               	movwf	OWWriteByte@i& (0+255),b
  4860  004354                     l7674:
  4861                           
  4862                           ; BSR set to: 0
  4863  004354  0E07               	movlw	7
  4864  004356  0100               	movlb	0	; () banked
  4865  004358  6572               	cpfsgt	OWWriteByte@i& (0+255),b
  4866  00435A  D001               	goto	l7678
  4867                           
  4868                           ; BSR set to: 0
  4869  00435C  D00B               	goto	l1005
  4870  00435E                     l7678:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;OneWire.c: 148: {
  4874                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4875  00435E  0100               	movlb	0	; () banked
  4876  004360  5171               	movf	OWWriteByte@byte& (0+255),w,b
  4877  004362  0B01               	andlw	1
  4878  004364  EC1B  F020         	call	_OWWriteBit
  4879                           
  4880                           ;OneWire.c: 150: byte >>= 1;
  4881  004368  0100               	movlb	0	; () banked
  4882  00436A  90D8               	bcf	status,0,c
  4883  00436C  3371               	rrcf	OWWriteByte@byte& (0+255),f,b
  4884                           
  4885                           ; BSR set to: 0
  4886  00436E  0100               	movlb	0	; () banked
  4887  004370  2B72               	incf	OWWriteByte@i& (0+255),f,b
  4888  004372  D7F0               	goto	l7674
  4889  004374                     l1005:
  4890                           
  4891                           ; BSR set to: 0
  4892  004374  0012               	return		;funcret
  4893  004376                     __end_of_OWWriteByte:
  4894                           	opt stack 0
  4895                           postinc0	equ	0xFEE
  4896                           wreg	equ	0xFE8
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function _OWWriteBit *****************
  4905 ;; Defined at:
  4906 ;;		line 72 in file "BatteryLib/OneWire.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  b               1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  b               1   16[BANK0 ] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;		None               void
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;Total ram usage:        1 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    7
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_OWWriteByte
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text29
  4935  004036                     __ptext29:
  4936                           	opt stack 0
  4937  004036                     _OWWriteBit:
  4938                           	opt stack 21
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;incstack = 0
  4942                           ;OWWriteBit@b stored from wreg
  4943  004036  0100               	movlb	0	; () banked
  4944  004038  6F70               	movwf	OWWriteBit@b& (0+255),b
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;OneWire.c: 74: if (b)
  4948  00403A  0100               	movlb	0	; () banked
  4949  00403C  5170               	movf	OWWriteBit@b& (0+255),w,b
  4950  00403E  0100               	movlb	0	; () banked
  4951  004040  B4D8               	btfsc	status,2,c
  4952  004042  D00A               	goto	l995
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;OneWire.c: 75: {
  4956                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4957  004044  9690               	bcf	3984,3,c	;volatile
  4958                           
  4959                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4960  004046  9699               	bcf	3993,3,c	;volatile
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4964  004048  0E04               	movlw	4
  4965  00404A                     u8687:
  4966  00404A  2EE8               	decfsz	wreg,f,c
  4967  00404C  D7FE               	goto	u8687
  4968                           
  4969                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4970  00404E  8699               	bsf	3993,3,c	;volatile
  4971                           
  4972                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4973  004050  0E35               	movlw	53
  4974  004052                     u8697:
  4975  004052  2EE8               	decfsz	wreg,f,c
  4976  004054  D7FE               	goto	u8697
  4977  004056  D009               	goto	L3
  4978  004058                     l995:
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;OneWire.c: 87: else
  4982                           ;OneWire.c: 88: {
  4983                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4984  004058  9690               	bcf	3984,3,c	;volatile
  4985                           
  4986                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4987  00405A  9699               	bcf	3993,3,c	;volatile
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4991  00405C  0E32               	movlw	50
  4992  00405E                     u8707:
  4993  00405E  2EE8               	decfsz	wreg,f,c
  4994  004060  D7FE               	goto	u8707
  4995                           
  4996                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4997  004062  8699               	bsf	3993,3,c	;volatile
  4998                           
  4999                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  5000  004064  0E08               	movlw	8
  5001  004066                     u8717:
  5002  004066  2EE8               	decfsz	wreg,f,c
  5003  004068  D7FE               	goto	u8717
  5004  00406A                     L3:
  5005  00406A  F000               	nop	
  5006  00406C  D000               	goto	l997
  5007  00406E                     l997:
  5008  00406E  0012               	return		;funcret
  5009  004070                     __end_of_OWWriteBit:
  5010                           	opt stack 0
  5011                           postinc0	equ	0xFEE
  5012                           wreg	equ	0xFE8
  5013                           indf2	equ	0xFDF
  5014                           postinc2	equ	0xFDE
  5015                           postdec2	equ	0xFDD
  5016                           fsr2h	equ	0xFDA
  5017                           fsr2l	equ	0xFD9
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _OWReset *****************
  5021 ;; Defined at:
  5022 ;;		line 41 in file "BatteryLib/OneWire.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  result          1   16[BANK0 ] enum E6350
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      enum E6350
  5029 ;; Registers used:
  5030 ;;		wreg, status,2
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;Total ram usage:        1 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    7
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_ReadVoltage
  5047 ;;		_ReadCurrent
  5048 ;;		_ReadAccumulatedCurrent
  5049 ;;		_ResetAccumulatedCurrent
  5050 ;;		_ReadNetAddress
  5051 ;;		_ReadTemperature
  5052 ;;		_ReadCurrentOffset
  5053 ;;		_WriteCurrentOffset
  5054 ;;		_AdjustCurrentOffset
  5055 ;;		_UpdateControlRegister
  5056 ;;		_ReadRAM
  5057 ;;		_WriteRAM
  5058 ;;		_CopyEEPROM
  5059 ;;		_RecallEEPROM
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text30
  5064  0040AA                     __ptext30:
  5065                           	opt stack 0
  5066  0040AA                     _OWReset:
  5067                           	opt stack 22
  5068                           
  5069                           ;OneWire.c: 43: BOOL result = FALSE;
  5070                           
  5071                           ;incstack = 0
  5072  0040AA  0E00               	movlw	0
  5073  0040AC  0100               	movlb	0	; () banked
  5074  0040AE  6F70               	movwf	OWReset@result& (0+255),b
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  5078  0040B0  9690               	bcf	3984,3,c	;volatile
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  5082  0040B2  9699               	bcf	3993,3,c	;volatile
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  5086  0040B4  0EF0               	movlw	240
  5087  0040B6                     u8727:
  5088  0040B6  D000               	nop2	
  5089  0040B8  2EE8               	decfsz	wreg,f,c
  5090  0040BA  D7FD               	goto	u8727
  5091                           
  5092                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  5093  0040BC  8699               	bsf	3993,3,c	;volatile
  5094                           
  5095                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  5096  0040BE  0E38               	movlw	56
  5097  0040C0                     u8737:
  5098  0040C0  2EE8               	decfsz	wreg,f,c
  5099  0040C2  D7FE               	goto	u8737
  5100  0040C4  D000               	nop2		;nop
  5101                           
  5102                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  5103  0040C6  B690               	btfsc	3984,3,c	;volatile
  5104  0040C8  D004               	goto	l7666
  5105                           
  5106                           ;OneWire.c: 54: {
  5107                           ;OneWire.c: 55: result = TRUE;
  5108  0040CA  0E01               	movlw	1
  5109  0040CC  0100               	movlb	0	; () banked
  5110  0040CE  6F70               	movwf	OWReset@result& (0+255),b
  5111  0040D0  D000               	goto	l7666
  5112  0040D2                     l7666:
  5113                           
  5114                           ;OneWire.c: 56: }
  5115                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  5116  0040D2  0EFD               	movlw	253
  5117  0040D4                     u8747:
  5118  0040D4  F000               	nop	
  5119  0040D6  2EE8               	decfsz	wreg,f,c
  5120  0040D8  D7FD               	goto	u8747
  5121                           
  5122                           ;OneWire.c: 59: return result;
  5123  0040DA  0100               	movlb	0	; () banked
  5124  0040DC  5170               	movf	OWReset@result& (0+255),w,b
  5125  0040DE  D000               	goto	l992
  5126  0040E0                     l992:
  5127                           
  5128                           ; BSR set to: 0
  5129  0040E0  0012               	return		;funcret
  5130  0040E2                     __end_of_OWReset:
  5131                           	opt stack 0
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _OWReadByte *****************
  5142 ;; Defined at:
  5143 ;;		line 163 in file "BatteryLib/OneWire.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  i               1   18[BANK0 ] unsigned char 
  5148 ;;  result          1   17[BANK0 ] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      unsigned char 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;Total ram usage:        2 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    8
  5165 ;; This function calls:
  5166 ;;		_OWReadBit
  5167 ;; This function is called by:
  5168 ;;		_ReadVoltage
  5169 ;;		_ReadCurrent
  5170 ;;		_ReadAccumulatedCurrent
  5171 ;;		_ReadTemperature
  5172 ;;		_ReadCurrentOffset
  5173 ;;		_AdjustCurrentOffset
  5174 ;;		_ReadRAM
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text31
  5179  0040E2                     __ptext31:
  5180                           	opt stack 0
  5181  0040E2                     _OWReadByte:
  5182                           	opt stack 21
  5183                           
  5184                           ;OneWire.c: 165: BYTE i, result=0;
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;incstack = 0
  5188  0040E2  0E00               	movlw	0
  5189  0040E4  0100               	movlb	0	; () banked
  5190  0040E6  6F71               	movwf	OWReadByte@result& (0+255),b
  5191                           
  5192                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  5193  0040E8  0E00               	movlw	0
  5194  0040EA  0100               	movlb	0	; () banked
  5195  0040EC  6F72               	movwf	OWReadByte@i& (0+255),b
  5196  0040EE                     l7688:
  5197                           
  5198                           ; BSR set to: 0
  5199  0040EE  0E07               	movlw	7
  5200  0040F0  0100               	movlb	0	; () banked
  5201  0040F2  6572               	cpfsgt	OWReadByte@i& (0+255),b
  5202  0040F4  D001               	goto	l7692
  5203                           
  5204                           ; BSR set to: 0
  5205  0040F6  D00D               	goto	l7700
  5206  0040F8                     l7692:
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;OneWire.c: 168: {
  5210                           ;OneWire.c: 169: result >>= 1;
  5211  0040F8  0100               	movlb	0	; () banked
  5212  0040FA  90D8               	bcf	status,0,c
  5213  0040FC  3371               	rrcf	OWReadByte@result& (0+255),f,b
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;OneWire.c: 171: if (OWReadBit())
  5217  0040FE  EC47  F021         	call	_OWReadBit	;wreg free
  5218  004102  0900               	iorlw	0
  5219  004104  B4D8               	btfsc	status,2,c
  5220  004106  D002               	goto	l1010
  5221                           
  5222                           ;OneWire.c: 172: result |= 0x80;
  5223  004108  0100               	movlb	0	; () banked
  5224  00410A  8F71               	bsf	OWReadByte@result& (0+255),7,b
  5225  00410C                     l1010:
  5226  00410C  0100               	movlb	0	; () banked
  5227  00410E  2B72               	incf	OWReadByte@i& (0+255),f,b
  5228  004110  D7EE               	goto	l7688
  5229  004112                     l7700:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;OneWire.c: 173: }
  5233                           ;OneWire.c: 174: return result;
  5234  004112  0100               	movlb	0	; () banked
  5235  004114  5171               	movf	OWReadByte@result& (0+255),w,b
  5236  004116  D000               	goto	l1011
  5237  004118                     l1011:
  5238                           
  5239                           ; BSR set to: 0
  5240  004118  0012               	return		;funcret
  5241  00411A                     __end_of_OWReadByte:
  5242                           	opt stack 0
  5243                           postinc0	equ	0xFEE
  5244                           wreg	equ	0xFE8
  5245                           indf2	equ	0xFDF
  5246                           postinc2	equ	0xFDE
  5247                           postdec2	equ	0xFDD
  5248                           fsr2h	equ	0xFDA
  5249                           fsr2l	equ	0xFD9
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function _OWReadBit *****************
  5253 ;; Defined at:
  5254 ;;		line 112 in file "BatteryLib/OneWire.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  result          1   16[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;Total ram usage:        1 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    7
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_OWReadByte
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text32
  5283  00428E                     __ptext32:
  5284                           	opt stack 0
  5285  00428E                     _OWReadBit:
  5286                           	opt stack 21
  5287                           
  5288                           ;OneWire.c: 114: BYTE result;
  5289                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;incstack = 0
  5293  00428E  9690               	bcf	3984,3,c	;volatile
  5294                           
  5295                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  5296  004290  9699               	bcf	3993,3,c	;volatile
  5297                           
  5298                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  5299  004292  0E04               	movlw	4
  5300  004294                     u8757:
  5301  004294  2EE8               	decfsz	wreg,f,c
  5302  004296  D7FE               	goto	u8757
  5303                           
  5304                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  5305  004298  8699               	bsf	3993,3,c	;volatile
  5306                           
  5307                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  5308  00429A  0E08               	movlw	8
  5309  00429C                     u8767:
  5310  00429C  2EE8               	decfsz	wreg,f,c
  5311  00429E  D7FE               	goto	u8767
  5312  0042A0  F000               	nop	
  5313                           
  5314                           ;OneWire.c: 127: result = PORTHbits.RH3;
  5315  0042A2  0E00               	movlw	0
  5316  0042A4  B687               	btfsc	3975,3,c	;volatile
  5317  0042A6  0E01               	movlw	1
  5318  0042A8  0100               	movlb	0	; () banked
  5319  0042AA  6F70               	movwf	OWReadBit@result& (0+255),b
  5320                           
  5321                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  5322  0042AC  0E2D               	movlw	45
  5323  0042AE                     u8777:
  5324  0042AE  2EE8               	decfsz	wreg,f,c
  5325  0042B0  D7FE               	goto	u8777
  5326  0042B2  D000               	nop2		;nop
  5327                           
  5328                           ;OneWire.c: 131: return result & 0x01;
  5329  0042B4  0100               	movlb	0	; () banked
  5330  0042B6  5170               	movf	OWReadBit@result& (0+255),w,b
  5331  0042B8  0B01               	andlw	1
  5332  0042BA  D000               	goto	l1000
  5333  0042BC                     l1000:
  5334                           
  5335                           ; BSR set to: 0
  5336  0042BC  0012               	return		;funcret
  5337  0042BE                     __end_of_OWReadBit:
  5338                           	opt stack 0
  5339                           postinc0	equ	0xFEE
  5340                           wreg	equ	0xFE8
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8
  5347                           
  5348 ;; *************** function _LoadPIDValues *****************
  5349 ;; Defined at:
  5350 ;;		line 691 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;		None               void
  5357 ;; Registers used:
  5358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:   11
  5371 ;; This function calls:
  5372 ;;		_PB1pressed
  5373 ;;		_PB2pressed
  5374 ;;		_ReadCharEEPROM
  5375 ;;		_ReadIntEEPROM
  5376 ;;		_SendStatus
  5377 ;;		_SetPIDValues
  5378 ;;		_WriteCharEEPROM
  5379 ;;		_WriteIntEEPROM
  5380 ;; This function is called by:
  5381 ;;		_main
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text33
  5386  0029F2                     __ptext33:
  5387                           	opt stack 0
  5388  0029F2                     _LoadPIDValues:
  5389                           	opt stack 19
  5390                           
  5391                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 692: SendStatus(0x06);
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;incstack = 0
  5395  0029F2  0E06               	movlw	6
  5396  0029F4  EC38  F020         	call	_SendStatus
  5397  0029F8  D000               	goto	l7856
  5398  0029FA                     l7856:
  5399                           
  5400                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 695: if(PB1pressed() == 1) {
  5401  0029FA  EC42  F01E         	call	_PB1pressed	;wreg free
  5402  0029FE  06E8               	decf	wreg,f,c
  5403  002A00  A4D8               	btfss	status,2,c
  5404  002A02  D03C               	goto	l7870
  5405                           
  5406                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 696: PID_Kp = 20;
  5407  002A04  0E00               	movlw	0
  5408  002A06  0100               	movlb	0	; () banked
  5409  002A08  6FDA               	movwf	(_PID_Kp+1)& (0+255),b
  5410  002A0A  0E14               	movlw	20
  5411  002A0C  6FD9               	movwf	_PID_Kp& (0+255),b
  5412                           
  5413                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 697: PID_Kd = 0;
  5414  002A0E  0E00               	movlw	0
  5415  002A10  0100               	movlb	0	; () banked
  5416  002A12  6FD6               	movwf	(_PID_Kd+1)& (0+255),b
  5417  002A14  0E00               	movlw	0
  5418  002A16  6FD5               	movwf	_PID_Kd& (0+255),b
  5419                           
  5420                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 698: PID_Ki = 0;
  5421  002A18  0E00               	movlw	0
  5422  002A1A  0100               	movlb	0	; () banked
  5423  002A1C  6FD8               	movwf	(_PID_Ki+1)& (0+255),b
  5424  002A1E  0E00               	movlw	0
  5425  002A20  6FD7               	movwf	_PID_Ki& (0+255),b
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 699: WriteIntEEPROM(0x0011, PID_Kp);
  5429  002A22  0E00               	movlw	0
  5430  002A24  0100               	movlb	0	; () banked
  5431  002A26  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5432  002A28  0E11               	movlw	17
  5433  002A2A  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5434  002A2C  C0D9  F075         	movff	_PID_Kp,WriteIntEEPROM@data
  5435  002A30  C0DA  F076         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5436  002A34  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  5437                           
  5438                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 700: WriteIntEEPROM(0x0013, PID_Kd);
  5439  002A38  0E00               	movlw	0
  5440  002A3A  0100               	movlb	0	; () banked
  5441  002A3C  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5442  002A3E  0E13               	movlw	19
  5443  002A40  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5444  002A42  C0D5  F075         	movff	_PID_Kd,WriteIntEEPROM@data
  5445  002A46  C0D6  F076         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5446  002A4A  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  5447                           
  5448                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 701: WriteIntEEPROM(0x0015, PID_Ki);
  5449  002A4E  0E00               	movlw	0
  5450  002A50  0100               	movlb	0	; () banked
  5451  002A52  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5452  002A54  0E15               	movlw	21
  5453  002A56  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5454  002A58  C0D7  F075         	movff	_PID_Ki,WriteIntEEPROM@data
  5455  002A5C  C0D8  F076         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5456  002A60  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  5457                           
  5458                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 703: WriteCharEEPROM(0x10, 1);
  5459  002A64  0E00               	movlw	0
  5460  002A66  0100               	movlb	0	; () banked
  5461  002A68  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5462  002A6A  0E10               	movlw	16
  5463  002A6C  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  5464  002A6E  0E01               	movlw	1
  5465  002A70  0100               	movlb	0	; () banked
  5466  002A72  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  5467  002A74  EC49  F023         	call	_WriteCharEEPROM	;wreg free
  5468                           
  5469                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 704: break;
  5470  002A78  D036               	goto	l399
  5471                           
  5472                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 705: }
  5473  002A7A  D7BF               	goto	l7856
  5474  002A7C                     l7870:
  5475                           
  5476                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 706: else if(PB2pressed() == 1) {
  5477  002A7C  ECE4  F01D         	call	_PB2pressed	;wreg free
  5478  002A80  06E8               	decf	wreg,f,c
  5479  002A82  A4D8               	btfss	status,2,c
  5480  002A84  D7BA               	goto	l7856
  5481                           
  5482                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 707: if(ReadCharEEPROM(0x10) == 0xFF) {
  5483  002A86  0E00               	movlw	0
  5484  002A88  0100               	movlb	0	; () banked
  5485  002A8A  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5486  002A8C  0E10               	movlw	16
  5487  002A8E  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  5488  002A90  EC7F  F023         	call	_ReadCharEEPROM	;wreg free
  5489  002A94  0AFF               	xorlw	255
  5490  002A96  A4D8               	btfss	status,2,c
  5491  002A98  D003               	goto	l7876
  5492                           
  5493                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 708: SetPIDValues();
  5494  002A9A  ECBE  F00F         	call	_SetPIDValues	;wreg free
  5495                           
  5496                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 709: }
  5497  002A9E  D023               	goto	l399
  5498  002AA0                     l7876:
  5499                           
  5500                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 710: else {
  5501                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 711: PID_Kp = ReadIntEEPROM(0x0011);
  5502  002AA0  0E00               	movlw	0
  5503  002AA2  0100               	movlb	0	; () banked
  5504  002AA4  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5505  002AA6  0E11               	movlw	17
  5506  002AA8  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5507  002AAA  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  5508  002AAE  C072  F0D9         	movff	?_ReadIntEEPROM,_PID_Kp
  5509  002AB2  C073  F0DA         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  5510                           
  5511                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 712: PID_Kd = ReadIntEEPROM(0x0013);
  5512  002AB6  0E00               	movlw	0
  5513  002AB8  0100               	movlb	0	; () banked
  5514  002ABA  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5515  002ABC  0E13               	movlw	19
  5516  002ABE  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5517  002AC0  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  5518  002AC4  C072  F0D5         	movff	?_ReadIntEEPROM,_PID_Kd
  5519  002AC8  C073  F0D6         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  5520                           
  5521                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 713: PID_Ki = ReadIntEEPROM(0x0015);
  5522  002ACC  0E00               	movlw	0
  5523  002ACE  0100               	movlb	0	; () banked
  5524  002AD0  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5525  002AD2  0E15               	movlw	21
  5526  002AD4  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5527  002AD6  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  5528  002ADA  C072  F0D7         	movff	?_ReadIntEEPROM,_PID_Ki
  5529  002ADE  C073  F0D8         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5530                           
  5531                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 714: }
  5532                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 715: break;
  5533  002AE2  D001               	goto	l399
  5534  002AE4  D78A               	goto	l7856
  5535  002AE6                     l399:
  5536  002AE6  0012               	return		;funcret
  5537  002AE8                     __end_of_LoadPIDValues:
  5538                           	opt stack 0
  5539                           postinc0	equ	0xFEE
  5540                           wreg	equ	0xFE8
  5541                           indf2	equ	0xFDF
  5542                           postinc2	equ	0xFDE
  5543                           postdec2	equ	0xFDD
  5544                           fsr2h	equ	0xFDA
  5545                           fsr2l	equ	0xFD9
  5546                           status	equ	0xFD8
  5547                           
  5548 ;; *************** function _SetPIDValues *****************
  5549 ;; Defined at:
  5550 ;;		line 659 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  char_index      1   28[BANK0 ] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;		None               void
  5557 ;; Registers used:
  5558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;Total ram usage:        4 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:   10
  5571 ;; This function calls:
  5572 ;;		_FlushRxBuf
  5573 ;;		_GetCharRxBuf
  5574 ;;		_PutCharRxBuf
  5575 ;;		_Read1USART
  5576 ;;		_SendStatus
  5577 ;;		_WriteCharEEPROM
  5578 ;;		_WriteIntEEPROM
  5579 ;; This function is called by:
  5580 ;;		_LoadPIDValues
  5581 ;;		_main
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text34
  5586  001F7C                     __ptext34:
  5587                           	opt stack 0
  5588  001F7C                     _SetPIDValues:
  5589                           	opt stack 20
  5590                           
  5591                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 660: SendStatus(0x07);
  5592                           
  5593                           ;incstack = 0
  5594  001F7C  0E07               	movlw	7
  5595  001F7E  EC38  F020         	call	_SendStatus
  5596                           
  5597                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 662: unsigned char char_index;
  5598                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 664: FlushRxBuf();
  5599  001F82  ECE0  F020         	call	_FlushRxBuf	;wreg free
  5600                           
  5601                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 666: for(char_index = 0; char_index <= 8; char_in
      +                          dex++) {
  5602  001F86  0E00               	movlw	0
  5603  001F88  0100               	movlb	0	; () banked
  5604  001F8A  6F7C               	movwf	SetPIDValues@char_index& (0+255),b
  5605  001F8C                     l7618:
  5606                           
  5607                           ; BSR set to: 0
  5608  001F8C  0E08               	movlw	8
  5609  001F8E  0100               	movlb	0	; () banked
  5610  001F90  657C               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5611  001F92  D002               	goto	l379
  5612                           
  5613                           ; BSR set to: 0
  5614  001F94  D00B               	goto	l7628
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 667: while(!(PIR1bits.RCIF));
  5618  001F96  D000               	goto	l379
  5619  001F98                     l379:
  5620  001F98  AA9E               	btfss	3998,5,c	;volatile
  5621  001F9A  D7FE               	goto	l379
  5622                           
  5623                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 669: PutCharRxBuf(Read1USART());
  5624  001F9C  EC22  F022         	call	_Read1USART	;wreg free
  5625  001FA0  EC9B  F01F         	call	_PutCharRxBuf
  5626  001FA4  0100               	movlb	0	; () banked
  5627  001FA6  2B7C               	incf	SetPIDValues@char_index& (0+255),f,b
  5628  001FA8  D7F1               	goto	l7618
  5629                           
  5630                           ; BSR set to: 0
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 670: }
  5634                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 672: while(GetCharRxBuf() != 0xAA);
  5635                           
  5636                           ; BSR set to: 0
  5637  001FAA  D000               	goto	l7628
  5638  001FAC                     l7628:
  5639  001FAC  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5640  001FB0  0AAA               	xorlw	170
  5641  001FB2  B4D8               	btfsc	status,2,c
  5642  001FB4  D002               	goto	l7630
  5643  001FB6  D7FA               	goto	l7628
  5644                           
  5645                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 673: while(GetCharRxBuf() != 0x01);
  5646  001FB8  D000               	goto	l7630
  5647  001FBA                     l7630:
  5648  001FBA  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5649  001FBE  06E8               	decf	wreg,f,c
  5650  001FC0  A4D8               	btfss	status,2,c
  5651  001FC2  D7FB               	goto	l7630
  5652                           
  5653                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 675: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5654  001FC4  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5655  001FC8  0100               	movlb	0	; () banked
  5656  001FCA  6F79               	movwf	??_SetPIDValues& (0+255),b
  5657  001FCC  0100               	movlb	0	; () banked
  5658  001FCE  5179               	movf	??_SetPIDValues& (0+255),w,b
  5659  001FD0  0100               	movlb	0	; () banked
  5660  001FD2  6F7B               	movwf	(??_SetPIDValues+2)& (0+255),b
  5661  001FD4  6B7A               	clrf	(??_SetPIDValues+1)& (0+255),b
  5662  001FD6  0E00               	movlw	0
  5663  001FD8  0100               	movlb	0	; () banked
  5664  001FDA  157A               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5665  001FDC  0100               	movlb	0	; () banked
  5666  001FDE  6FD9               	movwf	_PID_Kp& (0+255),b
  5667  001FE0  0EFF               	movlw	255
  5668  001FE2  0100               	movlb	0	; () banked
  5669  001FE4  157B               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5670  001FE6  0100               	movlb	0	; () banked
  5671  001FE8  6FDA               	movwf	(_PID_Kp+1)& (0+255),b
  5672                           
  5673                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 676: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5674  001FEA  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5675  001FEE  0100               	movlb	0	; () banked
  5676  001FF0  6F79               	movwf	??_SetPIDValues& (0+255),b
  5677  001FF2  0100               	movlb	0	; () banked
  5678  001FF4  5179               	movf	??_SetPIDValues& (0+255),w,b
  5679  001FF6  0100               	movlb	0	; () banked
  5680  001FF8  13D9               	iorwf	_PID_Kp& (0+255),f,b
  5681                           
  5682                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 678: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5683  001FFA  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5684  001FFE  0100               	movlb	0	; () banked
  5685  002000  6F79               	movwf	??_SetPIDValues& (0+255),b
  5686  002002  0100               	movlb	0	; () banked
  5687  002004  5179               	movf	??_SetPIDValues& (0+255),w,b
  5688  002006  0100               	movlb	0	; () banked
  5689  002008  6F7B               	movwf	(??_SetPIDValues+2)& (0+255),b
  5690  00200A  6B7A               	clrf	(??_SetPIDValues+1)& (0+255),b
  5691  00200C  0E00               	movlw	0
  5692  00200E  0100               	movlb	0	; () banked
  5693  002010  157A               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5694  002012  0100               	movlb	0	; () banked
  5695  002014  6FD5               	movwf	_PID_Kd& (0+255),b
  5696  002016  0EFF               	movlw	255
  5697  002018  0100               	movlb	0	; () banked
  5698  00201A  157B               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5699  00201C  0100               	movlb	0	; () banked
  5700  00201E  6FD6               	movwf	(_PID_Kd+1)& (0+255),b
  5701                           
  5702                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 679: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5703  002020  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5704  002024  0100               	movlb	0	; () banked
  5705  002026  6F79               	movwf	??_SetPIDValues& (0+255),b
  5706  002028  0100               	movlb	0	; () banked
  5707  00202A  5179               	movf	??_SetPIDValues& (0+255),w,b
  5708  00202C  0100               	movlb	0	; () banked
  5709  00202E  13D5               	iorwf	_PID_Kd& (0+255),f,b
  5710                           
  5711                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 681: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5712  002030  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5713  002034  0100               	movlb	0	; () banked
  5714  002036  6F79               	movwf	??_SetPIDValues& (0+255),b
  5715  002038  0100               	movlb	0	; () banked
  5716  00203A  5179               	movf	??_SetPIDValues& (0+255),w,b
  5717  00203C  0100               	movlb	0	; () banked
  5718  00203E  6F7B               	movwf	(??_SetPIDValues+2)& (0+255),b
  5719  002040  6B7A               	clrf	(??_SetPIDValues+1)& (0+255),b
  5720  002042  0E00               	movlw	0
  5721  002044  0100               	movlb	0	; () banked
  5722  002046  157A               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5723  002048  0100               	movlb	0	; () banked
  5724  00204A  6FD7               	movwf	_PID_Ki& (0+255),b
  5725  00204C  0EFF               	movlw	255
  5726  00204E  0100               	movlb	0	; () banked
  5727  002050  157B               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5728  002052  0100               	movlb	0	; () banked
  5729  002054  6FD8               	movwf	(_PID_Ki+1)& (0+255),b
  5730                           
  5731                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 682: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5732  002056  EC34  F01F         	call	_GetCharRxBuf	;wreg free
  5733  00205A  0100               	movlb	0	; () banked
  5734  00205C  6F79               	movwf	??_SetPIDValues& (0+255),b
  5735  00205E  0100               	movlb	0	; () banked
  5736  002060  5179               	movf	??_SetPIDValues& (0+255),w,b
  5737  002062  0100               	movlb	0	; () banked
  5738  002064  13D7               	iorwf	_PID_Ki& (0+255),f,b
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 684: WriteIntEEPROM(0x0011, PID_Kp);
  5742  002066  0E00               	movlw	0
  5743  002068  0100               	movlb	0	; () banked
  5744  00206A  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5745  00206C  0E11               	movlw	17
  5746  00206E  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5747  002070  C0D9  F075         	movff	_PID_Kp,WriteIntEEPROM@data
  5748  002074  C0DA  F076         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5749  002078  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  5750                           
  5751                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 685: WriteIntEEPROM(0x0013, PID_Kd);
  5752  00207C  0E00               	movlw	0
  5753  00207E  0100               	movlb	0	; () banked
  5754  002080  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5755  002082  0E13               	movlw	19
  5756  002084  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5757  002086  C0D5  F075         	movff	_PID_Kd,WriteIntEEPROM@data
  5758  00208A  C0D6  F076         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5759  00208E  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  5760                           
  5761                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 686: WriteIntEEPROM(0x0015, PID_Ki);
  5762  002092  0E00               	movlw	0
  5763  002094  0100               	movlb	0	; () banked
  5764  002096  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5765  002098  0E15               	movlw	21
  5766  00209A  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5767  00209C  C0D7  F075         	movff	_PID_Ki,WriteIntEEPROM@data
  5768  0020A0  C0D8  F076         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5769  0020A4  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  5770                           
  5771                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 688: WriteCharEEPROM(0x0010, 1);
  5772  0020A8  0E00               	movlw	0
  5773  0020AA  0100               	movlb	0	; () banked
  5774  0020AC  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5775  0020AE  0E10               	movlw	16
  5776  0020B0  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  5777  0020B2  0E01               	movlw	1
  5778  0020B4  0100               	movlb	0	; () banked
  5779  0020B6  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  5780  0020B8  EC49  F023         	call	_WriteCharEEPROM	;wreg free
  5781  0020BC  0012               	return		;funcret
  5782  0020BE                     __end_of_SetPIDValues:
  5783                           	opt stack 0
  5784                           postinc0	equ	0xFEE
  5785                           wreg	equ	0xFE8
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           postdec2	equ	0xFDD
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793 ;; *************** function _PutCharRxBuf *****************
  5794 ;; Defined at:
  5795 ;;		line 25 in file "Wireless.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  ch              1    wreg     unsigned char 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  ch              1   23[BANK0 ] unsigned char 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;		None               void
  5802 ;; Registers used:
  5803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    8
  5816 ;; This function calls:
  5817 ;;		___awmod
  5818 ;; This function is called by:
  5819 ;;		_SetPIDValues
  5820 ;;		_WirelessRx_ISR
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text35
  5825  003F36                     __ptext35:
  5826                           	opt stack 0
  5827  003F36                     _PutCharRxBuf:
  5828                           	opt stack 21
  5829                           
  5830                           ;incstack = 0
  5831                           ;PutCharRxBuf@ch stored from wreg
  5832  003F36  0100               	movlb	0	; () banked
  5833  003F38  6F77               	movwf	PutCharRxBuf@ch& (0+255),b
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5837  003F3A  501D               	movf	_put_Rx_index,w,c
  5838  003F3C  0D01               	mullw	1
  5839  003F3E  0E00               	movlw	low _Rx_buffer
  5840  003F40  24F3               	addwf	prodl,w,c
  5841  003F42  6ED9               	movwf	fsr2l,c
  5842  003F44  0E01               	movlw	high _Rx_buffer
  5843  003F46  20F4               	addwfc	prodh,w,c
  5844  003F48  6EDA               	movwf	fsr2h,c
  5845  003F4A  C077  FFDF         	movff	PutCharRxBuf@ch,indf2
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5849  003F4E  C01D  F076         	movff	_put_Rx_index,??_PutCharRxBuf
  5850  003F52  0E01               	movlw	1
  5851  003F54  0100               	movlb	0	; () banked
  5852  003F56  2776               	addwf	??_PutCharRxBuf& (0+255),f,b
  5853  003F58  0100               	movlb	0	; () banked
  5854  003F5A  5176               	movf	??_PutCharRxBuf& (0+255),w,b
  5855  003F5C  0100               	movlb	0	; () banked
  5856  003F5E  6F70               	movwf	___awmod@dividend& (0+255),b
  5857  003F60  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  5858  003F62  0E00               	movlw	0
  5859  003F64  0100               	movlb	0	; () banked
  5860  003F66  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  5861  003F68  0E19               	movlw	25
  5862  003F6A  6F72               	movwf	___awmod@divisor& (0+255),b
  5863  003F6C  ECE0  F018         	call	___awmod	;wreg free
  5864  003F70  0100               	movlb	0	; () banked
  5865  003F72  5170               	movf	?___awmod& (0+255),w,b
  5866  003F74  6E1D               	movwf	_put_Rx_index,c
  5867                           
  5868                           ; BSR set to: 0
  5869  003F76  0012               	return		;funcret
  5870  003F78                     __end_of_PutCharRxBuf:
  5871                           	opt stack 0
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           postinc0	equ	0xFEE
  5875                           wreg	equ	0xFE8
  5876                           indf2	equ	0xFDF
  5877                           postinc2	equ	0xFDE
  5878                           postdec2	equ	0xFDD
  5879                           fsr2h	equ	0xFDA
  5880                           fsr2l	equ	0xFD9
  5881                           status	equ	0xFD8
  5882                           
  5883 ;; *************** function _GetCharRxBuf *****************
  5884 ;; Defined at:
  5885 ;;		line 31 in file "Wireless.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  ch              1   23[BANK0 ] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      unsigned char 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;Total ram usage:        2 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    8
  5906 ;; This function calls:
  5907 ;;		___awmod
  5908 ;; This function is called by:
  5909 ;;		_SetPIDValues
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text36
  5914  003E68                     __ptext36:
  5915                           	opt stack 0
  5916  003E68                     _GetCharRxBuf:
  5917                           	opt stack 21
  5918                           
  5919                           ;Wireless.c: 32: unsigned char ch;
  5920                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;incstack = 0
  5924  003E68  501B               	movf	_get_Rx_index,w,c
  5925  003E6A  0D01               	mullw	1
  5926  003E6C  0E00               	movlw	low _Rx_buffer
  5927  003E6E  24F3               	addwf	prodl,w,c
  5928  003E70  6ED9               	movwf	fsr2l,c
  5929  003E72  0E01               	movlw	high _Rx_buffer
  5930  003E74  20F4               	addwfc	prodh,w,c
  5931  003E76  6EDA               	movwf	fsr2h,c
  5932  003E78  50DF               	movf	indf2,w,c
  5933  003E7A  0100               	movlb	0	; () banked
  5934  003E7C  6F77               	movwf	GetCharRxBuf@ch& (0+255),b
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5938  003E7E  C01B  F076         	movff	_get_Rx_index,??_GetCharRxBuf
  5939  003E82  0E01               	movlw	1
  5940  003E84  0100               	movlb	0	; () banked
  5941  003E86  2776               	addwf	??_GetCharRxBuf& (0+255),f,b
  5942  003E88  0100               	movlb	0	; () banked
  5943  003E8A  5176               	movf	??_GetCharRxBuf& (0+255),w,b
  5944  003E8C  0100               	movlb	0	; () banked
  5945  003E8E  6F70               	movwf	___awmod@dividend& (0+255),b
  5946  003E90  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  5947  003E92  0E00               	movlw	0
  5948  003E94  0100               	movlb	0	; () banked
  5949  003E96  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  5950  003E98  0E19               	movlw	25
  5951  003E9A  6F72               	movwf	___awmod@divisor& (0+255),b
  5952  003E9C  ECE0  F018         	call	___awmod	;wreg free
  5953  003EA0  0100               	movlb	0	; () banked
  5954  003EA2  5170               	movf	?___awmod& (0+255),w,b
  5955  003EA4  6E1B               	movwf	_get_Rx_index,c
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;Wireless.c: 37: return(ch);
  5959  003EA6  0100               	movlb	0	; () banked
  5960  003EA8  5177               	movf	GetCharRxBuf@ch& (0+255),w,b
  5961  003EAA  D000               	goto	l756
  5962  003EAC                     l756:
  5963                           
  5964                           ; BSR set to: 0
  5965  003EAC  0012               	return		;funcret
  5966  003EAE                     __end_of_GetCharRxBuf:
  5967                           	opt stack 0
  5968                           prodh	equ	0xFF4
  5969                           prodl	equ	0xFF3
  5970                           postinc0	equ	0xFEE
  5971                           wreg	equ	0xFE8
  5972                           indf2	equ	0xFDF
  5973                           postinc2	equ	0xFDE
  5974                           postdec2	equ	0xFDD
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function _PB2pressed *****************
  5980 ;; Defined at:
  5981 ;;		line 494 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      unsigned char 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    9
  6002 ;; This function calls:
  6003 ;;		_CommandAvailable
  6004 ;;		_GetCommand
  6005 ;;		_ReadMillis2
  6006 ;;		_ResetMillis2
  6007 ;; This function is called by:
  6008 ;;		_LoadPIDValues
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text37
  6014  003BC8                     __ptext37:
  6015                           	opt stack 0
  6016  003BC8                     _PB2pressed:
  6017                           	opt stack 21
  6018                           
  6019                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 495: if(CommandAvailable() == 1) {
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;incstack = 0
  6023  003BC8  ECBD  F023         	call	_CommandAvailable	;wreg free
  6024  003BCC  06E8               	decf	wreg,f,c
  6025  003BCE  A4D8               	btfss	status,2,c
  6026  003BD0  D00B               	goto	l317
  6027                           
  6028                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 496: if(GetCommand() == 0x06) {
  6029  003BD2  ECF9  F023         	call	_GetCommand	;wreg free
  6030  003BD6  0A06               	xorlw	6
  6031  003BD8  A4D8               	btfss	status,2,c
  6032  003BDA  D01F               	goto	l7552
  6033  003BDC  D01B               	goto	l7546
  6034                           
  6035                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 497: return(1);
  6036  003BDE  D022               	goto	l319
  6037                           
  6038                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 498: }
  6039  003BE0  D01F               	goto	l7556
  6040  003BE2  D01B               	goto	l7552
  6041                           
  6042                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 499: else {
  6043                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 500: return(0);
  6044  003BE4  D01F               	goto	l319
  6045                           
  6046                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 501: }
  6047                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 502: }
  6048  003BE6  D01C               	goto	l7556
  6049  003BE8                     l317:
  6050                           
  6051                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 503: else if(PORTBbits.RB2 == 0) {
  6052  003BE8  B481               	btfsc	3969,2,c	;volatile
  6053  003BEA  D003               	goto	l322
  6054  003BEC  D016               	goto	l7552
  6055                           
  6056                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 504: return(0);
  6057  003BEE  D01A               	goto	l319
  6058                           
  6059                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 505: }
  6060  003BF0  D017               	goto	l7556
  6061  003BF2                     l322:
  6062                           
  6063                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 506: else if(PORTBbits.RB2 == 1) {
  6064  003BF2  A481               	btfss	3969,2,c	;volatile
  6065  003BF4  D015               	goto	l7556
  6066                           
  6067                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 507: ResetMillis2();
  6068  003BF6  ECEB  F023         	call	_ResetMillis2	;wreg free
  6069                           
  6070                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 508: while(ReadMillis2() < 10);
  6071  003BFA  D000               	goto	l7544
  6072  003BFC                     l7544:
  6073  003BFC  ECF0  F023         	call	_ReadMillis2	;wreg free
  6074  003C00  0100               	movlb	0	; () banked
  6075  003C02  5171               	movf	(?_ReadMillis2+1)& (0+255),w,b
  6076  003C04  E105               	bnz	u7560
  6077  003C06  0E0A               	movlw	10
  6078  003C08  0100               	movlb	0	; () banked
  6079  003C0A  5D70               	subwf	?_ReadMillis2& (0+255),w,b
  6080  003C0C  A0D8               	btfss	status,0,c
  6081  003C0E  D7F6               	goto	l7544
  6082  003C10                     u7560:
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 509: if(PORTBbits.RB2 == 1) {
  6086  003C10  A481               	btfss	3969,2,c	;volatile
  6087  003C12  D003               	goto	l7552
  6088  003C14                     l7546:
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 510: return(1);
  6092  003C14  0E01               	movlw	1
  6093                           
  6094                           ; BSR set to: 0
  6095  003C16  D006               	goto	l319
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 511: }
  6099  003C18  D003               	goto	l7556
  6100  003C1A                     l7552:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 512: else {
  6104                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 513: return(0);
  6105  003C1A  0E00               	movlw	0
  6106                           
  6107                           ; BSR set to: 0
  6108  003C1C  D003               	goto	l319
  6109                           
  6110                           ; BSR set to: 0
  6111                           
  6112                           ; BSR set to: 0
  6113                           
  6114                           ; BSR set to: 0
  6115  003C1E  D000               	goto	l7556
  6116  003C20                     l7556:
  6117                           
  6118                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 514: }
  6119                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 515: }
  6120                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 517: return(0);
  6121  003C20  0E00               	movlw	0
  6122  003C22  D000               	goto	l319
  6123  003C24                     l319:
  6124  003C24  0012               	return		;funcret
  6125  003C26                     __end_of_PB2pressed:
  6126                           	opt stack 0
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           postinc0	equ	0xFEE
  6130                           wreg	equ	0xFE8
  6131                           indf2	equ	0xFDF
  6132                           postinc2	equ	0xFDE
  6133                           postdec2	equ	0xFDD
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function _LoadCalibration *****************
  6139 ;; Defined at:
  6140 ;;		line 629 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  index           1   34[BANK0 ] unsigned char 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;		None               void
  6147 ;; Registers used:
  6148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;Total ram usage:        3 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:   12
  6161 ;; This function calls:
  6162 ;;		_FlashLEDS
  6163 ;;		_GenerateCalibration
  6164 ;;		_ReadCharEEPROM
  6165 ;;		_ReadIntEEPROM
  6166 ;;		_SendOffsets
  6167 ;;		_SendThreshold
  6168 ;; This function is called by:
  6169 ;;		_main
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text38
  6174  001C9A                     __ptext38:
  6175                           	opt stack 0
  6176  001C9A                     _LoadCalibration:
  6177                           	opt stack 18
  6178                           
  6179                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 630: unsigned char index;
  6180                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 632: if(line_mode == 0 && ReadCharEEPROM(0x0000) 
      +                          == 0xFF) {
  6181                           
  6182                           ;incstack = 0
  6183  001C9A  502A               	movf	_line_mode,w,c
  6184  001C9C  A4D8               	btfss	status,2,c
  6185  001C9E  D00F               	goto	l7808
  6186  001CA0  0E00               	movlw	0
  6187  001CA2  0100               	movlb	0	; () banked
  6188  001CA4  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6189  001CA6  0E00               	movlw	0
  6190  001CA8  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  6191  001CAA  EC7F  F023         	call	_ReadCharEEPROM	;wreg free
  6192  001CAE  0AFF               	xorlw	255
  6193  001CB0  A4D8               	btfss	status,2,c
  6194  001CB2  D005               	goto	l7808
  6195                           
  6196                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 633: FlashLEDS();
  6197  001CB4  ECE6  F021         	call	_FlashLEDS	;wreg free
  6198                           
  6199                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 634: GenerateCalibration();
  6200  001CB8  ECD0  F012         	call	_GenerateCalibration	;wreg free
  6201                           
  6202                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 635: }
  6203  001CBC  D0A2               	goto	l7852
  6204  001CBE                     l7808:
  6205                           
  6206                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 636: else if(line_mode == 0 && ReadCharEEPROM(0x0
      +                          000) == 0x01) {
  6207  001CBE  502A               	movf	_line_mode,w,c
  6208  001CC0  A4D8               	btfss	status,2,c
  6209  001CC2  D045               	goto	l7826
  6210  001CC4  0E00               	movlw	0
  6211  001CC6  0100               	movlb	0	; () banked
  6212  001CC8  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6213  001CCA  0E00               	movlw	0
  6214  001CCC  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  6215  001CCE  EC7F  F023         	call	_ReadCharEEPROM	;wreg free
  6216  001CD2  06E8               	decf	wreg,f,c
  6217  001CD4  A4D8               	btfss	status,2,c
  6218  001CD6  D03B               	goto	l7826
  6219                           
  6220                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 637: sensor_threshold = ReadIntEEPROM(0x0002);
  6221  001CD8  0E00               	movlw	0
  6222  001CDA  0100               	movlb	0	; () banked
  6223  001CDC  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6224  001CDE  0E02               	movlw	2
  6225  001CE0  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  6226  001CE2  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  6227  001CE6  C072  F028         	movff	?_ReadIntEEPROM,_sensor_threshold
  6228  001CEA  C073  F029         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  6229                           
  6230                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 638: for(index = 0; index < 5; index++) {
  6231  001CEE  0E00               	movlw	0
  6232  001CF0  0100               	movlb	0	; () banked
  6233  001CF2  6F82               	movwf	LoadCalibration@index& (0+255),b
  6234  001CF4                     l7816:
  6235                           
  6236                           ; BSR set to: 0
  6237  001CF4  0E04               	movlw	4
  6238  001CF6  0100               	movlb	0	; () banked
  6239  001CF8  6582               	cpfsgt	LoadCalibration@index& (0+255),b
  6240  001CFA  D001               	goto	l7820
  6241                           
  6242                           ; BSR set to: 0
  6243  001CFC  D082               	goto	l7852
  6244  001CFE                     l7820:
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 639: sensor_offsets[index] = ReadIntEEPROM(0x0006
      +                           + (2 * index));
  6248  001CFE  0100               	movlb	0	; () banked
  6249  001D00  5182               	movf	LoadCalibration@index& (0+255),w,b
  6250  001D02  0100               	movlb	0	; () banked
  6251  001D04  6F80               	movwf	??_LoadCalibration& (0+255),b
  6252  001D06  6B81               	clrf	(??_LoadCalibration+1)& (0+255),b
  6253  001D08  90D8               	bcf	status,0,c
  6254  001D0A  0100               	movlb	0	; () banked
  6255  001D0C  3780               	rlcf	??_LoadCalibration& (0+255),f,b
  6256  001D0E  3781               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  6257  001D10  0E06               	movlw	6
  6258  001D12  0100               	movlb	0	; () banked
  6259  001D14  2580               	addwf	??_LoadCalibration& (0+255),w,b
  6260  001D16  0100               	movlb	0	; () banked
  6261  001D18  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  6262  001D1A  0E00               	movlw	0
  6263  001D1C  0100               	movlb	0	; () banked
  6264  001D1E  2181               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  6265  001D20  0100               	movlb	0	; () banked
  6266  001D22  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6267  001D24  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  6268  001D28  0100               	movlb	0	; () banked
  6269  001D2A  5182               	movf	LoadCalibration@index& (0+255),w,b
  6270  001D2C  0D02               	mullw	2
  6271  001D2E  0EE1               	movlw	low _sensor_offsets
  6272  001D30  24F3               	addwf	prodl,w,c
  6273  001D32  6ED9               	movwf	fsr2l,c
  6274  001D34  0E00               	movlw	high _sensor_offsets
  6275  001D36  20F4               	addwfc	prodh,w,c
  6276  001D38  6EDA               	movwf	fsr2h,c
  6277  001D3A  0100               	movlb	0	; () banked
  6278  001D3C  C072  FFDE         	movff	?_ReadIntEEPROM,postinc2
  6279  001D40  0100               	movlb	0	; () banked
  6280  001D42  C073  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  6281                           
  6282                           ; BSR set to: 0
  6283  001D46  0100               	movlb	0	; () banked
  6284  001D48  2B82               	incf	LoadCalibration@index& (0+255),f,b
  6285  001D4A  D7D4               	goto	l7816
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 640: }
  6289                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 641: }
  6290                           
  6291                           ; BSR set to: 0
  6292  001D4C  D05A               	goto	l7852
  6293  001D4E                     l7826:
  6294                           
  6295                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 643: else if(line_mode == 1 && ReadCharEEPROM(0x0
      +                          001) == 0xFF) {
  6296  001D4E  042A               	decf	_line_mode,w,c
  6297  001D50  A4D8               	btfss	status,2,c
  6298  001D52  D00F               	goto	l7834
  6299  001D54  0E00               	movlw	0
  6300  001D56  0100               	movlb	0	; () banked
  6301  001D58  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6302  001D5A  0E01               	movlw	1
  6303  001D5C  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  6304  001D5E  EC7F  F023         	call	_ReadCharEEPROM	;wreg free
  6305  001D62  0AFF               	xorlw	255
  6306  001D64  A4D8               	btfss	status,2,c
  6307  001D66  D005               	goto	l7834
  6308                           
  6309                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 644: FlashLEDS();
  6310  001D68  ECE6  F021         	call	_FlashLEDS	;wreg free
  6311                           
  6312                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 645: GenerateCalibration();
  6313  001D6C  ECD0  F012         	call	_GenerateCalibration	;wreg free
  6314                           
  6315                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 646: }
  6316  001D70  D048               	goto	l7852
  6317  001D72                     l7834:
  6318                           
  6319                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 647: else if(line_mode == 1 && ReadCharEEPROM(0x0
      +                          001) == 0x01) {
  6320  001D72  042A               	decf	_line_mode,w,c
  6321  001D74  A4D8               	btfss	status,2,c
  6322  001D76  D045               	goto	l7852
  6323  001D78  0E00               	movlw	0
  6324  001D7A  0100               	movlb	0	; () banked
  6325  001D7C  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6326  001D7E  0E01               	movlw	1
  6327  001D80  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  6328  001D82  EC7F  F023         	call	_ReadCharEEPROM	;wreg free
  6329  001D86  06E8               	decf	wreg,f,c
  6330  001D88  A4D8               	btfss	status,2,c
  6331  001D8A  D03B               	goto	l7852
  6332                           
  6333                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 648: sensor_threshold = ReadIntEEPROM(0x0004);
  6334  001D8C  0E00               	movlw	0
  6335  001D8E  0100               	movlb	0	; () banked
  6336  001D90  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6337  001D92  0E04               	movlw	4
  6338  001D94  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  6339  001D96  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  6340  001D9A  C072  F028         	movff	?_ReadIntEEPROM,_sensor_threshold
  6341  001D9E  C073  F029         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  6342                           
  6343                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 649: for(index = 0; index < 5; index++) {
  6344  001DA2  0E00               	movlw	0
  6345  001DA4  0100               	movlb	0	; () banked
  6346  001DA6  6F82               	movwf	LoadCalibration@index& (0+255),b
  6347  001DA8                     l7842:
  6348                           
  6349                           ; BSR set to: 0
  6350  001DA8  0E04               	movlw	4
  6351  001DAA  0100               	movlb	0	; () banked
  6352  001DAC  6582               	cpfsgt	LoadCalibration@index& (0+255),b
  6353  001DAE  D001               	goto	l7846
  6354                           
  6355                           ; BSR set to: 0
  6356  001DB0  D028               	goto	l7852
  6357  001DB2                     l7846:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 650: sensor_offsets[index] = ReadIntEEPROM(0x0006
      +                           + (2 * index));
  6361  001DB2  0100               	movlb	0	; () banked
  6362  001DB4  5182               	movf	LoadCalibration@index& (0+255),w,b
  6363  001DB6  0100               	movlb	0	; () banked
  6364  001DB8  6F80               	movwf	??_LoadCalibration& (0+255),b
  6365  001DBA  6B81               	clrf	(??_LoadCalibration+1)& (0+255),b
  6366  001DBC  90D8               	bcf	status,0,c
  6367  001DBE  0100               	movlb	0	; () banked
  6368  001DC0  3780               	rlcf	??_LoadCalibration& (0+255),f,b
  6369  001DC2  3781               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  6370  001DC4  0E06               	movlw	6
  6371  001DC6  0100               	movlb	0	; () banked
  6372  001DC8  2580               	addwf	??_LoadCalibration& (0+255),w,b
  6373  001DCA  0100               	movlb	0	; () banked
  6374  001DCC  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  6375  001DCE  0E00               	movlw	0
  6376  001DD0  0100               	movlb	0	; () banked
  6377  001DD2  2181               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  6378  001DD4  0100               	movlb	0	; () banked
  6379  001DD6  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6380  001DD8  EC13  F01E         	call	_ReadIntEEPROM	;wreg free
  6381  001DDC  0100               	movlb	0	; () banked
  6382  001DDE  5182               	movf	LoadCalibration@index& (0+255),w,b
  6383  001DE0  0D02               	mullw	2
  6384  001DE2  0EE1               	movlw	low _sensor_offsets
  6385  001DE4  24F3               	addwf	prodl,w,c
  6386  001DE6  6ED9               	movwf	fsr2l,c
  6387  001DE8  0E00               	movlw	high _sensor_offsets
  6388  001DEA  20F4               	addwfc	prodh,w,c
  6389  001DEC  6EDA               	movwf	fsr2h,c
  6390  001DEE  0100               	movlb	0	; () banked
  6391  001DF0  C072  FFDE         	movff	?_ReadIntEEPROM,postinc2
  6392  001DF4  0100               	movlb	0	; () banked
  6393  001DF6  C073  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  6394                           
  6395                           ; BSR set to: 0
  6396  001DFA  0100               	movlb	0	; () banked
  6397  001DFC  2B82               	incf	LoadCalibration@index& (0+255),f,b
  6398  001DFE  D7D4               	goto	l7842
  6399                           
  6400                           ; BSR set to: 0
  6401                           
  6402                           ; BSR set to: 0
  6403                           
  6404                           ; BSR set to: 0
  6405                           
  6406                           ; BSR set to: 0
  6407                           
  6408                           ; BSR set to: 0
  6409  001E00  D000               	goto	l7852
  6410  001E02                     l7852:
  6411                           
  6412                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 651: }
  6413                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 652: }
  6414                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 654: SendOffsets(sensor_offsets);
  6415  001E02  0EE1               	movlw	low _sensor_offsets
  6416  001E04  0100               	movlb	0	; () banked
  6417  001E06  6F78               	movwf	SendOffsets@offsets_array& (0+255),b
  6418  001E08  0E00               	movlw	high _sensor_offsets
  6419  001E0A  0100               	movlb	0	; () banked
  6420  001E0C  6F79               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  6421  001E0E  ECE4  F019         	call	_SendOffsets	;wreg free
  6422                           
  6423                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 655: SendThreshold(sensor_threshold_ptr);
  6424  001E12  C0EE  F078         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  6425  001E16  C0EF  F079         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  6426  001E1A  EC3E  F01C         	call	_SendThreshold	;wreg free
  6427  001E1E  0012               	return		;funcret
  6428  001E20                     __end_of_LoadCalibration:
  6429                           	opt stack 0
  6430                           prodh	equ	0xFF4
  6431                           prodl	equ	0xFF3
  6432                           postinc0	equ	0xFEE
  6433                           wreg	equ	0xFE8
  6434                           indf2	equ	0xFDF
  6435                           postinc2	equ	0xFDE
  6436                           postdec2	equ	0xFDD
  6437                           fsr2h	equ	0xFDA
  6438                           fsr2l	equ	0xFD9
  6439                           status	equ	0xFD8
  6440                           
  6441 ;; *************** function _ReadIntEEPROM *****************
  6442 ;; Defined at:
  6443 ;;		line 66 in file "eeprom.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  address         2   18[BANK0 ] unsigned int 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  data            2   23[BANK0 ] unsigned int 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2   18[BANK0 ] unsigned int 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;Total ram usage:        7 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    8
  6464 ;; This function calls:
  6465 ;;		_ReadEEPROM
  6466 ;; This function is called by:
  6467 ;;		_LoadCalibration
  6468 ;;		_LoadPIDValues
  6469 ;;		_main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text39
  6474  003C26                     __ptext39:
  6475                           	opt stack 0
  6476  003C26                     _ReadIntEEPROM:
  6477                           	opt stack 22
  6478                           
  6479                           ;eeprom.c: 67: unsigned int data;
  6480                           ;eeprom.c: 69: data = (ReadEEPROM(address) << 8) & 0xFF00;
  6481                           
  6482                           ;incstack = 0
  6483  003C26  C072  F070         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  6484  003C2A  C073  F071         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  6485  003C2E  ECBB  F021         	call	_ReadEEPROM	;wreg free
  6486  003C32  0100               	movlb	0	; () banked
  6487  003C34  6F74               	movwf	??_ReadIntEEPROM& (0+255),b
  6488  003C36  0100               	movlb	0	; () banked
  6489  003C38  5174               	movf	??_ReadIntEEPROM& (0+255),w,b
  6490  003C3A  0100               	movlb	0	; () banked
  6491  003C3C  6F76               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  6492  003C3E  6B75               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  6493  003C40  0E00               	movlw	0
  6494  003C42  0100               	movlb	0	; () banked
  6495  003C44  1575               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  6496  003C46  0100               	movlb	0	; () banked
  6497  003C48  6F77               	movwf	ReadIntEEPROM@data& (0+255),b
  6498  003C4A  0EFF               	movlw	255
  6499  003C4C  0100               	movlb	0	; () banked
  6500  003C4E  1576               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  6501  003C50  0100               	movlb	0	; () banked
  6502  003C52  6F78               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  6503                           
  6504                           ;eeprom.c: 70: data |= ReadEEPROM(address + 1) & 0x00FF;
  6505  003C54  0E01               	movlw	1
  6506  003C56  0100               	movlb	0	; () banked
  6507  003C58  2572               	addwf	ReadIntEEPROM@address& (0+255),w,b
  6508  003C5A  0100               	movlb	0	; () banked
  6509  003C5C  6F70               	movwf	ReadEEPROM@address& (0+255),b
  6510  003C5E  0E00               	movlw	0
  6511  003C60  0100               	movlb	0	; () banked
  6512  003C62  2173               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  6513  003C64  0100               	movlb	0	; () banked
  6514  003C66  6F71               	movwf	(ReadEEPROM@address+1)& (0+255),b
  6515  003C68  ECBB  F021         	call	_ReadEEPROM	;wreg free
  6516  003C6C  0100               	movlb	0	; () banked
  6517  003C6E  6F74               	movwf	??_ReadIntEEPROM& (0+255),b
  6518  003C70  0100               	movlb	0	; () banked
  6519  003C72  5174               	movf	??_ReadIntEEPROM& (0+255),w,b
  6520  003C74  0100               	movlb	0	; () banked
  6521  003C76  1377               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;eeprom.c: 72: return(data);
  6525  003C78  C077  F072         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  6526  003C7C  C078  F073         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  6527  003C80  D000               	goto	l707
  6528  003C82                     l707:
  6529                           
  6530                           ; BSR set to: 0
  6531  003C82  0012               	return		;funcret
  6532  003C84                     __end_of_ReadIntEEPROM:
  6533                           	opt stack 0
  6534                           prodh	equ	0xFF4
  6535                           prodl	equ	0xFF3
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           indf2	equ	0xFDF
  6539                           postinc2	equ	0xFDE
  6540                           postdec2	equ	0xFDD
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function _ReadCharEEPROM *****************
  6546 ;; Defined at:
  6547 ;;		line 76 in file "eeprom.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  address         2   18[BANK0 ] unsigned int 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      unsigned char 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;Total ram usage:        2 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    8
  6568 ;; This function calls:
  6569 ;;		_ReadEEPROM
  6570 ;; This function is called by:
  6571 ;;		_LoadCalibration
  6572 ;;		_LoadPIDValues
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text40
  6577  0046FE                     __ptext40:
  6578                           	opt stack 0
  6579  0046FE                     _ReadCharEEPROM:
  6580                           	opt stack 21
  6581                           
  6582                           ;eeprom.c: 77: return(ReadEEPROM(address));
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;incstack = 0
  6586  0046FE  C072  F070         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6587  004702  C073  F071         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6588  004706  ECBB  F021         	call	_ReadEEPROM	;wreg free
  6589  00470A  D000               	goto	l710
  6590  00470C                     l710:
  6591  00470C  0012               	return		;funcret
  6592  00470E                     __end_of_ReadCharEEPROM:
  6593                           	opt stack 0
  6594                           prodh	equ	0xFF4
  6595                           prodl	equ	0xFF3
  6596                           postinc0	equ	0xFEE
  6597                           wreg	equ	0xFE8
  6598                           indf2	equ	0xFDF
  6599                           postinc2	equ	0xFDE
  6600                           postdec2	equ	0xFDD
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8
  6604                           
  6605 ;; *************** function _ReadEEPROM *****************
  6606 ;; Defined at:
  6607 ;;		line 37 in file "eeprom.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  address         2   16[BANK0 ] unsigned int 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      unsigned char 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2, status,0
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;Total ram usage:        2 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    7
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_ReadIntEEPROM
  6632 ;;		_ReadCharEEPROM
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text41
  6637  004376                     __ptext41:
  6638                           	opt stack 0
  6639  004376                     _ReadEEPROM:
  6640                           	opt stack 22
  6641                           
  6642                           ;eeprom.c: 38: if(address > 0x03FF) {
  6643                           
  6644                           ;incstack = 0
  6645  004376  0E04               	movlw	4
  6646  004378  0100               	movlb	0	; () banked
  6647  00437A  5D71               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6648  00437C  A0D8               	btfss	status,0,c
  6649  00437E  D002               	goto	l693
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;eeprom.c: 39: return(0);
  6653  004380  0E00               	movlw	0
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;eeprom.c: 40: }
  6657                           
  6658                           ; BSR set to: 0
  6659  004382  D00E               	goto	l694
  6660  004384                     l693:
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;eeprom.c: 41: else {
  6664                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6665  004384  C070  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6669  004388  0100               	movlb	0	; () banked
  6670  00438A  5171               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6671  00438C  0B03               	andlw	3
  6672  00438E  6EAA               	movwf	4010,c	;volatile
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6676  004390  9EA6               	bcf	4006,7,c	;volatile
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6680  004392  9CA6               	bcf	4006,6,c	;volatile
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6684  004394  80A6               	bsf	4006,0,c	;volatile
  6685                           
  6686                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6687  004396  D000               	goto	l696
  6688  004398                     l696:
  6689  004398  B0A6               	btfsc	4006,0,c	;volatile
  6690  00439A  D7FE               	goto	l696
  6691                           
  6692                           ;eeprom.c: 50: return(EEDATA);
  6693  00439C  50A8               	movf	4008,w,c	;volatile
  6694  00439E  D000               	goto	l694
  6695  0043A0                     l694:
  6696  0043A0  0012               	return		;funcret
  6697  0043A2                     __end_of_ReadEEPROM:
  6698                           	opt stack 0
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           postinc0	equ	0xFEE
  6702                           wreg	equ	0xFE8
  6703                           indf2	equ	0xFDF
  6704                           postinc2	equ	0xFDE
  6705                           postdec2	equ	0xFDD
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8
  6709                           
  6710 ;; *************** function _GenerateCalibration *****************
  6711 ;; Defined at:
  6712 ;;		line 583 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  index           1   31[BANK0 ] unsigned char 
  6717 ;; Return value:  Size  Location     Type
  6718 ;;		None               void
  6719 ;; Registers used:
  6720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;Total ram usage:        3 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:   11
  6733 ;; This function calls:
  6734 ;;		_CalibrateOffsets
  6735 ;;		_CalibrateThreshold
  6736 ;;		_Delay10KTCYx
  6737 ;;		_FlashLEDS
  6738 ;;		_PB1pressed
  6739 ;;		_SendOffsets
  6740 ;;		_SendStatus
  6741 ;;		_SendThreshold
  6742 ;;		_WriteCharEEPROM
  6743 ;;		_WriteIntEEPROM
  6744 ;; This function is called by:
  6745 ;;		_LoadCalibration
  6746 ;;		_main
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text42
  6751  0025A0                     __ptext42:
  6752                           	opt stack 0
  6753  0025A0                     _GenerateCalibration:
  6754                           	opt stack 18
  6755                           
  6756                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 584: unsigned char index;
  6757                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 587: SendStatus(0x03);
  6758                           
  6759                           ;incstack = 0
  6760  0025A0  0E03               	movlw	3
  6761  0025A2  EC38  F020         	call	_SendStatus
  6762                           
  6763                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 588: LATJ = 0x07;
  6764  0025A6  0E07               	movlw	7
  6765  0025A8  6E91               	movwf	3985,c	;volatile
  6766                           
  6767                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 590: while(PB1pressed() == 0) {
  6768  0025AA  D006               	goto	l7568
  6769  0025AC                     l7564:
  6770                           
  6771                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 592: CalibrateOffsets();
  6772  0025AC  EC03  F01C         	call	_CalibrateOffsets	;wreg free
  6773                           
  6774                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 593: Delay10KTCYx(10);
  6775  0025B0  0E0A               	movlw	10
  6776  0025B2  ECA1  F022         	call	_Delay10KTCYx
  6777  0025B6  D000               	goto	l7568
  6778  0025B8                     l7568:
  6779  0025B8  EC42  F01E         	call	_PB1pressed	;wreg free
  6780  0025BC  0900               	iorlw	0
  6781  0025BE  B4D8               	btfsc	status,2,c
  6782  0025C0  D7F5               	goto	l7564
  6783                           
  6784                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 595: }
  6785                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 597: for(index = 0; index < 5; index++) {
  6786  0025C2  0E00               	movlw	0
  6787  0025C4  0100               	movlb	0	; () banked
  6788  0025C6  6F7F               	movwf	GenerateCalibration@index& (0+255),b
  6789  0025C8                     l7572:
  6790                           
  6791                           ; BSR set to: 0
  6792  0025C8  0E04               	movlw	4
  6793  0025CA  0100               	movlb	0	; () banked
  6794  0025CC  657F               	cpfsgt	GenerateCalibration@index& (0+255),b
  6795  0025CE  D001               	goto	l7576
  6796                           
  6797                           ; BSR set to: 0
  6798  0025D0  D025               	goto	l7582
  6799  0025D2                     l7576:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 598: WriteIntEEPROM(0x0006 + (2 * index), sensor_
      +                          offsets[index]);
  6803  0025D2  0100               	movlb	0	; () banked
  6804  0025D4  517F               	movf	GenerateCalibration@index& (0+255),w,b
  6805  0025D6  0100               	movlb	0	; () banked
  6806  0025D8  6F7D               	movwf	??_GenerateCalibration& (0+255),b
  6807  0025DA  6B7E               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6808  0025DC  90D8               	bcf	status,0,c
  6809  0025DE  0100               	movlb	0	; () banked
  6810  0025E0  377D               	rlcf	??_GenerateCalibration& (0+255),f,b
  6811  0025E2  377E               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6812  0025E4  0E06               	movlw	6
  6813  0025E6  0100               	movlb	0	; () banked
  6814  0025E8  257D               	addwf	??_GenerateCalibration& (0+255),w,b
  6815  0025EA  0100               	movlb	0	; () banked
  6816  0025EC  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  6817  0025EE  0E00               	movlw	0
  6818  0025F0  0100               	movlb	0	; () banked
  6819  0025F2  217E               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6820  0025F4  0100               	movlb	0	; () banked
  6821  0025F6  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6822  0025F8  0100               	movlb	0	; () banked
  6823  0025FA  517F               	movf	GenerateCalibration@index& (0+255),w,b
  6824  0025FC  0D02               	mullw	2
  6825  0025FE  0EE1               	movlw	low _sensor_offsets
  6826  002600  24F3               	addwf	prodl,w,c
  6827  002602  6ED9               	movwf	fsr2l,c
  6828  002604  0E00               	movlw	high _sensor_offsets
  6829  002606  20F4               	addwfc	prodh,w,c
  6830  002608  6EDA               	movwf	fsr2h,c
  6831  00260A  CFDE F075          	movff	postinc2,WriteIntEEPROM@data
  6832  00260E  CFDD F076          	movff	postdec2,WriteIntEEPROM@data+1
  6833  002612  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  6834  002616  0100               	movlb	0	; () banked
  6835  002618  2B7F               	incf	GenerateCalibration@index& (0+255),f,b
  6836  00261A  D7D6               	goto	l7572
  6837  00261C                     l7582:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 599: }
  6841                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 601: SendOffsets(sensor_offsets);
  6842  00261C  0EE1               	movlw	low _sensor_offsets
  6843  00261E  0100               	movlb	0	; () banked
  6844  002620  6F78               	movwf	SendOffsets@offsets_array& (0+255),b
  6845  002622  0E00               	movlw	high _sensor_offsets
  6846  002624  0100               	movlb	0	; () banked
  6847  002626  6F79               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  6848  002628  ECE4  F019         	call	_SendOffsets	;wreg free
  6849                           
  6850                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 603: FlashLEDS();
  6851  00262C  ECE6  F021         	call	_FlashLEDS	;wreg free
  6852                           
  6853                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 606: SendStatus(0x04);
  6854  002630  0E04               	movlw	4
  6855  002632  EC38  F020         	call	_SendStatus
  6856                           
  6857                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 608: while(PB1pressed() == 0) {
  6858  002636  D006               	goto	l7592
  6859  002638                     l7588:
  6860                           
  6861                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 610: CalibrateThreshold();
  6862  002638  EC71  F01E         	call	_CalibrateThreshold	;wreg free
  6863                           
  6864                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 611: Delay10KTCYx(10);
  6865  00263C  0E0A               	movlw	10
  6866  00263E  ECA1  F022         	call	_Delay10KTCYx
  6867  002642  D000               	goto	l7592
  6868  002644                     l7592:
  6869  002644  EC42  F01E         	call	_PB1pressed	;wreg free
  6870  002648  0900               	iorlw	0
  6871  00264A  B4D8               	btfsc	status,2,c
  6872  00264C  D7F5               	goto	l7588
  6873                           
  6874                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 613: }
  6875                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 615: if(line_mode == 0) {
  6876  00264E  502A               	movf	_line_mode,w,c
  6877  002650  A4D8               	btfss	status,2,c
  6878  002652  D016               	goto	l7598
  6879                           
  6880                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 616: WriteIntEEPROM(0x0002, sensor_threshold);
  6881  002654  0E00               	movlw	0
  6882  002656  0100               	movlb	0	; () banked
  6883  002658  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6884  00265A  0E02               	movlw	2
  6885  00265C  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  6886  00265E  C028  F075         	movff	_sensor_threshold,WriteIntEEPROM@data
  6887  002662  C029  F076         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6888  002666  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  6889                           
  6890                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 617: WriteCharEEPROM(0x0000, 1);
  6891  00266A  0E00               	movlw	0
  6892  00266C  0100               	movlb	0	; () banked
  6893  00266E  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6894  002670  0E00               	movlw	0
  6895  002672  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  6896  002674  0E01               	movlw	1
  6897  002676  0100               	movlb	0	; () banked
  6898  002678  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  6899  00267A  EC49  F023         	call	_WriteCharEEPROM	;wreg free
  6900                           
  6901                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 618: }
  6902  00267E  D019               	goto	l7602
  6903  002680                     l7598:
  6904                           
  6905                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 619: else if(line_mode == 1) {
  6906  002680  042A               	decf	_line_mode,w,c
  6907  002682  A4D8               	btfss	status,2,c
  6908  002684  D016               	goto	l7602
  6909                           
  6910                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 620: WriteIntEEPROM(0x0004, sensor_threshold);
  6911  002686  0E00               	movlw	0
  6912  002688  0100               	movlb	0	; () banked
  6913  00268A  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6914  00268C  0E04               	movlw	4
  6915  00268E  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  6916  002690  C028  F075         	movff	_sensor_threshold,WriteIntEEPROM@data
  6917  002694  C029  F076         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6918  002698  EC15  F021         	call	_WriteIntEEPROM	;wreg free
  6919                           
  6920                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 621: WriteCharEEPROM(0x0001, 1);
  6921  00269C  0E00               	movlw	0
  6922  00269E  0100               	movlb	0	; () banked
  6923  0026A0  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6924  0026A2  0E01               	movlw	1
  6925  0026A4  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  6926  0026A6  0E01               	movlw	1
  6927  0026A8  0100               	movlb	0	; () banked
  6928  0026AA  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  6929  0026AC  EC49  F023         	call	_WriteCharEEPROM	;wreg free
  6930  0026B0  D000               	goto	l7602
  6931  0026B2                     l7602:
  6932                           
  6933                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 622: }
  6934                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 624: SendThreshold(sensor_threshold_ptr);
  6935  0026B2  C0EE  F078         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  6936  0026B6  C0EF  F079         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  6937  0026BA  EC3E  F01C         	call	_SendThreshold	;wreg free
  6938  0026BE  0012               	return		;funcret
  6939  0026C0                     __end_of_GenerateCalibration:
  6940                           	opt stack 0
  6941                           prodh	equ	0xFF4
  6942                           prodl	equ	0xFF3
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           indf2	equ	0xFDF
  6946                           postinc2	equ	0xFDE
  6947                           postdec2	equ	0xFDD
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952 ;; *************** function _WriteIntEEPROM *****************
  6953 ;; Defined at:
  6954 ;;		line 56 in file "eeprom.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  address         2   19[BANK0 ] unsigned int 
  6957 ;;  data            2   21[BANK0 ] unsigned int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6969 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;Total ram usage:        4 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    8
  6976 ;; This function calls:
  6977 ;;		_WriteEEPROM
  6978 ;; This function is called by:
  6979 ;;		_GenerateCalibration
  6980 ;;		_SetPIDValues
  6981 ;;		_LoadPIDValues
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text43
  6986  00422A                     __ptext43:
  6987                           	opt stack 0
  6988  00422A                     _WriteIntEEPROM:
  6989                           	opt stack 21
  6990                           
  6991                           ;eeprom.c: 57: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6992                           
  6993                           ;incstack = 0
  6994  00422A  C073  F070         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6995  00422E  C074  F071         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6996  004232  0100               	movlb	0	; () banked
  6997  004234  5176               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6998  004236  0100               	movlb	0	; () banked
  6999  004238  6F72               	movwf	WriteEEPROM@data& (0+255),b
  7000  00423A  ECDD  F01F         	call	_WriteEEPROM	;wreg free
  7001                           
  7002                           ;eeprom.c: 58: WriteEEPROM(address + 1, (data & 0x00FF));
  7003  00423E  0E01               	movlw	1
  7004  004240  0100               	movlb	0	; () banked
  7005  004242  2573               	addwf	WriteIntEEPROM@address& (0+255),w,b
  7006  004244  0100               	movlb	0	; () banked
  7007  004246  6F70               	movwf	WriteEEPROM@address& (0+255),b
  7008  004248  0E00               	movlw	0
  7009  00424A  0100               	movlb	0	; () banked
  7010  00424C  2174               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  7011  00424E  0100               	movlb	0	; () banked
  7012  004250  6F71               	movwf	(WriteEEPROM@address+1)& (0+255),b
  7013  004252  C075  F072         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  7014  004256  ECDD  F01F         	call	_WriteEEPROM	;wreg free
  7015  00425A  0012               	return		;funcret
  7016  00425C                     __end_of_WriteIntEEPROM:
  7017                           	opt stack 0
  7018                           prodh	equ	0xFF4
  7019                           prodl	equ	0xFF3
  7020                           postinc0	equ	0xFEE
  7021                           wreg	equ	0xFE8
  7022                           indf2	equ	0xFDF
  7023                           postinc2	equ	0xFDE
  7024                           postdec2	equ	0xFDD
  7025                           fsr2h	equ	0xFDA
  7026                           fsr2l	equ	0xFD9
  7027                           status	equ	0xFD8
  7028                           
  7029 ;; *************** function _WriteCharEEPROM *****************
  7030 ;; Defined at:
  7031 ;;		line 62 in file "eeprom.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  address         2   19[BANK0 ] unsigned int 
  7034 ;;  data            1   21[BANK0 ] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;		None               void
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7046 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;Total ram usage:        3 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    8
  7053 ;; This function calls:
  7054 ;;		_WriteEEPROM
  7055 ;; This function is called by:
  7056 ;;		_GenerateCalibration
  7057 ;;		_SetPIDValues
  7058 ;;		_LoadPIDValues
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text44
  7063  004692                     __ptext44:
  7064                           	opt stack 0
  7065  004692                     _WriteCharEEPROM:
  7066                           	opt stack 21
  7067                           
  7068                           ;eeprom.c: 63: WriteEEPROM(address, data);
  7069                           
  7070                           ;incstack = 0
  7071  004692  C073  F070         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  7072  004696  C074  F071         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  7073  00469A  C075  F072         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  7074  00469E  ECDD  F01F         	call	_WriteEEPROM	;wreg free
  7075  0046A2  0012               	return		;funcret
  7076  0046A4                     __end_of_WriteCharEEPROM:
  7077                           	opt stack 0
  7078                           prodh	equ	0xFF4
  7079                           prodl	equ	0xFF3
  7080                           postinc0	equ	0xFEE
  7081                           wreg	equ	0xFE8
  7082                           indf2	equ	0xFDF
  7083                           postinc2	equ	0xFDE
  7084                           postdec2	equ	0xFDD
  7085                           fsr2h	equ	0xFDA
  7086                           fsr2l	equ	0xFD9
  7087                           status	equ	0xFD8
  7088                           
  7089 ;; *************** function _WriteEEPROM *****************
  7090 ;; Defined at:
  7091 ;;		line 3 in file "eeprom.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  address         2   16[BANK0 ] unsigned int 
  7094 ;;  data            1   18[BANK0 ] unsigned char 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      unsigned char 
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7106 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;Total ram usage:        3 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    7
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_WriteIntEEPROM
  7117 ;;		_WriteCharEEPROM
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text45
  7122  003FBA                     __ptext45:
  7123                           	opt stack 0
  7124  003FBA                     _WriteEEPROM:
  7125                           	opt stack 21
  7126                           
  7127                           ;eeprom.c: 4: if(address > 0x03FF) {
  7128                           
  7129                           ;incstack = 0
  7130  003FBA  0E04               	movlw	4
  7131  003FBC  0100               	movlb	0	; () banked
  7132  003FBE  5D71               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  7133  003FC0  B0D8               	btfsc	status,0,c
  7134  003FC2  D01A               	goto	l684
  7135  003FC4  D001               	goto	l683
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;eeprom.c: 6: }
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;eeprom.c: 5: return(1);
  7142                           ;	Return value of _WriteEEPROM is never used
  7143  003FC6  D018               	goto	l684
  7144  003FC8                     l683:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;eeprom.c: 7: else {
  7148                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  7149  003FC8  C070  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  7153  003FCC  0100               	movlb	0	; () banked
  7154  003FCE  5171               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  7155  003FD0  0B03               	andlw	3
  7156  003FD2  6EAA               	movwf	4010,c	;volatile
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;eeprom.c: 10: EEDATA = data;
  7160  003FD4  C072  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  7164  003FD8  9EA6               	bcf	4006,7,c	;volatile
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  7168  003FDA  9CA6               	bcf	4006,6,c	;volatile
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  7172  003FDC  84A6               	bsf	4006,2,c	;volatile
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  7176  003FDE  9EF2               	bcf	intcon,7,c	;volatile
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;eeprom.c: 17: EECON2 = 0x55;
  7180  003FE0  0E55               	movlw	85
  7181  003FE2  6EA7               	movwf	4007,c	;volatile
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;eeprom.c: 18: EECON2 = 0x0AA;
  7185  003FE4  0EAA               	movlw	170
  7186  003FE6  6EA7               	movwf	4007,c	;volatile
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;eeprom.c: 19: EECON1bits.WR = 1;
  7190  003FE8  82A6               	bsf	4006,1,c	;volatile
  7191                           
  7192                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  7193  003FEA  D000               	goto	l686
  7194  003FEC                     l686:
  7195  003FEC  B2A6               	btfsc	4006,1,c	;volatile
  7196  003FEE  D7FE               	goto	l686
  7197                           
  7198                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  7199  003FF0  94A6               	bcf	4006,2,c	;volatile
  7200                           
  7201                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  7202  003FF2  8EF2               	bsf	intcon,7,c	;volatile
  7203                           
  7204                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  7205  003FF4  50A6               	movf	4006,w,c	;volatile
  7206                           
  7207                           ;eeprom.c: 29: else {
  7208                           ;eeprom.c: 30: return(1);
  7209                           ;	Return value of _WriteEEPROM is never used
  7210                           
  7211                           ;eeprom.c: 28: }
  7212                           
  7213                           ;eeprom.c: 27: return(0);
  7214                           ;	Return value of _WriteEEPROM is never used
  7215  003FF6  D000               	goto	l684
  7216  003FF8                     l684:
  7217  003FF8  0012               	return		;funcret
  7218  003FFA                     __end_of_WriteEEPROM:
  7219                           	opt stack 0
  7220                           prodh	equ	0xFF4
  7221                           prodl	equ	0xFF3
  7222                           intcon	equ	0xFF2
  7223                           postinc0	equ	0xFEE
  7224                           wreg	equ	0xFE8
  7225                           indf2	equ	0xFDF
  7226                           postinc2	equ	0xFDE
  7227                           postdec2	equ	0xFDD
  7228                           fsr2h	equ	0xFDA
  7229                           fsr2l	equ	0xFD9
  7230                           status	equ	0xFD8
  7231                           
  7232 ;; *************** function _SendThreshold *****************
  7233 ;; Defined at:
  7234 ;;		line 186 in file "Wireless.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  sensor_thres    2   24[BANK0 ] PTR const int 
  7237 ;;		 -> NULL(0), sensor_threshold(2), 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;		None               void
  7242 ;; Registers used:
  7243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:        4 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    9
  7256 ;; This function calls:
  7257 ;;		_BusyTx
  7258 ;;		_FlushTxBuf
  7259 ;;		_PutCharTxBuf
  7260 ;;		_StartTx
  7261 ;; This function is called by:
  7262 ;;		_GenerateCalibration
  7263 ;;		_LoadCalibration
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text46
  7268  00387C                     __ptext46:
  7269                           	opt stack 0
  7270  00387C                     _SendThreshold:
  7271                           	opt stack 20
  7272                           
  7273                           ;Wireless.c: 187: while(BusyTx());
  7274                           
  7275                           ;incstack = 0
  7276  00387C  D000               	goto	l7184
  7277  00387E                     l7184:
  7278  00387E  EC87  F023         	call	_BusyTx	;wreg free
  7279  003882  0900               	iorlw	0
  7280  003884  A4D8               	btfss	status,2,c
  7281  003886  D7FB               	goto	l7184
  7282                           
  7283                           ;Wireless.c: 188: FlushTxBuf();
  7284  003888  ECC5  F020         	call	_FlushTxBuf	;wreg free
  7285                           
  7286                           ;Wireless.c: 190: PutCharTxBuf(0xAA);
  7287  00388C  0EAA               	movlw	170
  7288  00388E  ECBC  F01F         	call	_PutCharTxBuf
  7289                           
  7290                           ;Wireless.c: 191: PutCharTxBuf(0x31);
  7291  003892  0E31               	movlw	49
  7292  003894  ECBC  F01F         	call	_PutCharTxBuf
  7293                           
  7294                           ;Wireless.c: 193: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  7295  003898  C078  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  7296  00389C  C079  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  7297  0038A0  CFDE F07A          	movff	postinc2,??_SendThreshold
  7298  0038A4  CFDD F07B          	movff	postdec2,??_SendThreshold+1
  7299  0038A8  C07B  F07A         	movff	??_SendThreshold+1,??_SendThreshold
  7300  0038AC  0100               	movlb	0	; () banked
  7301  0038AE  6B7B               	clrf	(??_SendThreshold+1)& (0+255),b
  7302  0038B0  BF7A               	btfsc	??_SendThreshold& (0+255),7,b
  7303  0038B2  697B               	setf	(??_SendThreshold+1)& (0+255),b
  7304  0038B4  0100               	movlb	0	; () banked
  7305  0038B6  517A               	movf	??_SendThreshold& (0+255),w,b
  7306  0038B8  ECBC  F01F         	call	_PutCharTxBuf
  7307                           
  7308                           ;Wireless.c: 194: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  7309  0038BC  C078  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  7310  0038C0  C079  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  7311  0038C4  50DF               	movf	indf2,w,c
  7312  0038C6  ECBC  F01F         	call	_PutCharTxBuf
  7313                           
  7314                           ;Wireless.c: 196: PutCharTxBuf('\r');
  7315  0038CA  0E0D               	movlw	13
  7316  0038CC  ECBC  F01F         	call	_PutCharTxBuf
  7317                           
  7318                           ;Wireless.c: 197: PutCharTxBuf('\n');
  7319  0038D0  0E0A               	movlw	10
  7320  0038D2  ECBC  F01F         	call	_PutCharTxBuf
  7321                           
  7322                           ;Wireless.c: 198: while (BusyTx());
  7323  0038D6  D000               	goto	l7188
  7324  0038D8                     l7188:
  7325  0038D8  EC87  F023         	call	_BusyTx	;wreg free
  7326  0038DC  0900               	iorlw	0
  7327  0038DE  A4D8               	btfss	status,2,c
  7328  0038E0  D7FB               	goto	l7188
  7329                           
  7330                           ;Wireless.c: 199: StartTx();
  7331  0038E2  ECF5  F023         	call	_StartTx	;wreg free
  7332  0038E6  0012               	return		;funcret
  7333  0038E8                     __end_of_SendThreshold:
  7334                           	opt stack 0
  7335                           prodh	equ	0xFF4
  7336                           prodl	equ	0xFF3
  7337                           intcon	equ	0xFF2
  7338                           postinc0	equ	0xFEE
  7339                           wreg	equ	0xFE8
  7340                           indf2	equ	0xFDF
  7341                           postinc2	equ	0xFDE
  7342                           postdec2	equ	0xFDD
  7343                           fsr2h	equ	0xFDA
  7344                           fsr2l	equ	0xFD9
  7345                           status	equ	0xFD8
  7346                           
  7347 ;; *************** function _SendStatus *****************
  7348 ;; Defined at:
  7349 ;;		line 139 in file "Wireless.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  status_code     1    wreg     const unsigned char 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  status_code     1   24[BANK0 ] const unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;		None               void
  7356 ;; Registers used:
  7357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;Total ram usage:        1 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    9
  7370 ;; This function calls:
  7371 ;;		_BusyTx
  7372 ;;		_FlushTxBuf
  7373 ;;		_PutCharTxBuf
  7374 ;;		_StartTx
  7375 ;; This function is called by:
  7376 ;;		_GenerateCalibration
  7377 ;;		_SetPIDValues
  7378 ;;		_LoadPIDValues
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text47
  7384  004070                     __ptext47:
  7385                           	opt stack 0
  7386  004070                     _SendStatus:
  7387                           	opt stack 20
  7388                           
  7389                           ;incstack = 0
  7390                           ;SendStatus@status_code stored from wreg
  7391  004070  0100               	movlb	0	; () banked
  7392  004072  6F78               	movwf	SendStatus@status_code& (0+255),b
  7393                           
  7394                           ; BSR set to: 0
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;Wireless.c: 140: while(BusyTx());
  7398  004074  D000               	goto	l7148
  7399  004076                     l7148:
  7400  004076  EC87  F023         	call	_BusyTx	;wreg free
  7401  00407A  0900               	iorlw	0
  7402  00407C  A4D8               	btfss	status,2,c
  7403  00407E  D7FB               	goto	l7148
  7404                           
  7405                           ;Wireless.c: 141: FlushTxBuf();
  7406  004080  ECC5  F020         	call	_FlushTxBuf	;wreg free
  7407                           
  7408                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  7409  004084  0EAA               	movlw	170
  7410  004086  ECBC  F01F         	call	_PutCharTxBuf
  7411                           
  7412                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  7413  00408A  0E01               	movlw	1
  7414  00408C  ECBC  F01F         	call	_PutCharTxBuf
  7415                           
  7416                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  7417  004090  0100               	movlb	0	; () banked
  7418  004092  5178               	movf	SendStatus@status_code& (0+255),w,b
  7419  004094  ECBC  F01F         	call	_PutCharTxBuf
  7420                           
  7421                           ;Wireless.c: 146: PutCharTxBuf('\r');
  7422  004098  0E0D               	movlw	13
  7423  00409A  ECBC  F01F         	call	_PutCharTxBuf
  7424                           
  7425                           ;Wireless.c: 147: PutCharTxBuf('\n');
  7426  00409E  0E0A               	movlw	10
  7427  0040A0  ECBC  F01F         	call	_PutCharTxBuf
  7428                           
  7429                           ;Wireless.c: 149: StartTx();
  7430  0040A4  ECF5  F023         	call	_StartTx	;wreg free
  7431  0040A8  0012               	return		;funcret
  7432  0040AA                     __end_of_SendStatus:
  7433                           	opt stack 0
  7434                           prodh	equ	0xFF4
  7435                           prodl	equ	0xFF3
  7436                           intcon	equ	0xFF2
  7437                           postinc0	equ	0xFEE
  7438                           wreg	equ	0xFE8
  7439                           indf2	equ	0xFDF
  7440                           postinc2	equ	0xFDE
  7441                           postdec2	equ	0xFDD
  7442                           fsr2h	equ	0xFDA
  7443                           fsr2l	equ	0xFD9
  7444                           status	equ	0xFD8
  7445                           
  7446 ;; *************** function _SendOffsets *****************
  7447 ;; Defined at:
  7448 ;;		line 165 in file "Wireless.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  7451 ;;		 -> sensor_offsets(10), 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  index           1   28[BANK0 ] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;		None               void
  7456 ;; Registers used:
  7457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;Total ram usage:        5 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    9
  7470 ;; This function calls:
  7471 ;;		_BusyTx
  7472 ;;		_FlushTxBuf
  7473 ;;		_PutCharTxBuf
  7474 ;;		_StartTx
  7475 ;; This function is called by:
  7476 ;;		_GenerateCalibration
  7477 ;;		_LoadCalibration
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text48
  7482  0033C8                     __ptext48:
  7483                           	opt stack 0
  7484  0033C8                     _SendOffsets:
  7485                           	opt stack 20
  7486                           
  7487                           ;Wireless.c: 166: unsigned char index;
  7488                           ;Wireless.c: 168: while(BusyTx());
  7489                           
  7490                           ;incstack = 0
  7491  0033C8  D000               	goto	l7158
  7492  0033CA                     l7158:
  7493  0033CA  EC87  F023         	call	_BusyTx	;wreg free
  7494  0033CE  0900               	iorlw	0
  7495  0033D0  A4D8               	btfss	status,2,c
  7496  0033D2  D7FB               	goto	l7158
  7497                           
  7498                           ;Wireless.c: 169: FlushTxBuf();
  7499  0033D4  ECC5  F020         	call	_FlushTxBuf	;wreg free
  7500                           
  7501                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  7502  0033D8  0EAA               	movlw	170
  7503  0033DA  ECBC  F01F         	call	_PutCharTxBuf
  7504                           
  7505                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  7506  0033DE  0E21               	movlw	33
  7507  0033E0  ECBC  F01F         	call	_PutCharTxBuf
  7508                           
  7509                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  7510  0033E4  0E00               	movlw	0
  7511  0033E6  0100               	movlb	0	; () banked
  7512  0033E8  6F7C               	movwf	SendOffsets@index& (0+255),b
  7513  0033EA                     l7164:
  7514                           
  7515                           ; BSR set to: 0
  7516  0033EA  0E04               	movlw	4
  7517  0033EC  0100               	movlb	0	; () banked
  7518  0033EE  657C               	cpfsgt	SendOffsets@index& (0+255),b
  7519  0033F0  D001               	goto	l7168
  7520                           
  7521                           ; BSR set to: 0
  7522  0033F2  D02C               	goto	l7174
  7523  0033F4                     l7168:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  7527  0033F4  0100               	movlb	0	; () banked
  7528  0033F6  517C               	movf	SendOffsets@index& (0+255),w,b
  7529  0033F8  0D02               	mullw	2
  7530  0033FA  50F3               	movf	prodl,w,c
  7531  0033FC  0100               	movlb	0	; () banked
  7532  0033FE  2578               	addwf	SendOffsets@offsets_array& (0+255),w,b
  7533  003400  6ED9               	movwf	fsr2l,c
  7534  003402  50F4               	movf	prodh,w,c
  7535  003404  0100               	movlb	0	; () banked
  7536  003406  2179               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  7537  003408  6EDA               	movwf	fsr2h,c
  7538  00340A  CFDE F07A          	movff	postinc2,??_SendOffsets
  7539  00340E  CFDD F07B          	movff	postdec2,??_SendOffsets+1
  7540  003412  C07B  F07A         	movff	??_SendOffsets+1,??_SendOffsets
  7541  003416  0100               	movlb	0	; () banked
  7542  003418  6B7B               	clrf	(??_SendOffsets+1)& (0+255),b
  7543  00341A  BF7A               	btfsc	??_SendOffsets& (0+255),7,b
  7544  00341C  697B               	setf	(??_SendOffsets+1)& (0+255),b
  7545  00341E  0100               	movlb	0	; () banked
  7546  003420  517A               	movf	??_SendOffsets& (0+255),w,b
  7547  003422  ECBC  F01F         	call	_PutCharTxBuf
  7548                           
  7549                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  7550  003426  0100               	movlb	0	; () banked
  7551  003428  517C               	movf	SendOffsets@index& (0+255),w,b
  7552  00342A  0D02               	mullw	2
  7553  00342C  50F3               	movf	prodl,w,c
  7554  00342E  0100               	movlb	0	; () banked
  7555  003430  2578               	addwf	SendOffsets@offsets_array& (0+255),w,b
  7556  003432  6ED9               	movwf	fsr2l,c
  7557  003434  50F4               	movf	prodh,w,c
  7558  003436  0100               	movlb	0	; () banked
  7559  003438  2179               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  7560  00343A  6EDA               	movwf	fsr2h,c
  7561  00343C  50DF               	movf	indf2,w,c
  7562  00343E  0DFF               	mullw	255
  7563  003440  50F3               	movf	prodl,w,c
  7564  003442  ECBC  F01F         	call	_PutCharTxBuf
  7565  003446  0100               	movlb	0	; () banked
  7566  003448  2B7C               	incf	SendOffsets@index& (0+255),f,b
  7567  00344A  D7CF               	goto	l7164
  7568  00344C                     l7174:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;Wireless.c: 177: }
  7572                           ;Wireless.c: 179: PutCharTxBuf('\r');
  7573  00344C  0E0D               	movlw	13
  7574  00344E  ECBC  F01F         	call	_PutCharTxBuf
  7575                           
  7576                           ;Wireless.c: 180: PutCharTxBuf('\n');
  7577  003452  0E0A               	movlw	10
  7578  003454  ECBC  F01F         	call	_PutCharTxBuf
  7579                           
  7580                           ;Wireless.c: 181: while(BusyTx());
  7581  003458  D000               	goto	l7176
  7582  00345A                     l7176:
  7583  00345A  EC87  F023         	call	_BusyTx	;wreg free
  7584  00345E  0900               	iorlw	0
  7585  003460  A4D8               	btfss	status,2,c
  7586  003462  D7FB               	goto	l7176
  7587                           
  7588                           ;Wireless.c: 182: StartTx();
  7589  003464  ECF5  F023         	call	_StartTx	;wreg free
  7590  003468  0012               	return		;funcret
  7591  00346A                     __end_of_SendOffsets:
  7592                           	opt stack 0
  7593                           prodh	equ	0xFF4
  7594                           prodl	equ	0xFF3
  7595                           intcon	equ	0xFF2
  7596                           postinc0	equ	0xFEE
  7597                           wreg	equ	0xFE8
  7598                           indf2	equ	0xFDF
  7599                           postinc2	equ	0xFDE
  7600                           postdec2	equ	0xFDD
  7601                           fsr2h	equ	0xFDA
  7602                           fsr2l	equ	0xFD9
  7603                           status	equ	0xFD8
  7604                           
  7605 ;; *************** function _StartTx *****************
  7606 ;; Defined at:
  7607 ;;		line 41 in file "Wireless.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;		None               void
  7614 ;; Registers used:
  7615 ;;		wreg, status,2
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    7
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		_SendStatus
  7632 ;;		_SendLineMode
  7633 ;;		_SendOffsets
  7634 ;;		_SendThreshold
  7635 ;;		_SendDefaultPIDValues
  7636 ;;		_SendStoredPIDValues
  7637 ;;		_SendCurrentPIDValues
  7638 ;;		_SendBattVoltageInitial
  7639 ;;		_SendBattVoltage
  7640 ;;		_SendBattCurrent
  7641 ;;		_SendBattCurrentAcc
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text49
  7646  0047EA                     __ptext49:
  7647                           	opt stack 0
  7648  0047EA                     _StartTx:
  7649                           	opt stack 21
  7650                           
  7651                           ;Wireless.c: 42: Tx_complete = 0;
  7652                           
  7653                           ;incstack = 0
  7654  0047EA  0E00               	movlw	0
  7655  0047EC  6E18               	movwf	_Tx_complete,c
  7656                           
  7657                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  7658  0047EE  889D               	bsf	3997,4,c	;volatile
  7659  0047F0  0012               	return		;funcret
  7660  0047F2                     __end_of_StartTx:
  7661                           	opt stack 0
  7662                           prodh	equ	0xFF4
  7663                           prodl	equ	0xFF3
  7664                           intcon	equ	0xFF2
  7665                           postinc0	equ	0xFEE
  7666                           wreg	equ	0xFE8
  7667                           indf2	equ	0xFDF
  7668                           postinc2	equ	0xFDE
  7669                           postdec2	equ	0xFDD
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function _PutCharTxBuf *****************
  7675 ;; Defined at:
  7676 ;;		line 9 in file "Wireless.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  ch              1    wreg     unsigned char 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  ch              1   23[BANK0 ] unsigned char 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;		None               void
  7683 ;; Registers used:
  7684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7693 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7694 ;;Total ram usage:        2 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    8
  7697 ;; This function calls:
  7698 ;;		___awmod
  7699 ;; This function is called by:
  7700 ;;		_SendStatus
  7701 ;;		_SendLineMode
  7702 ;;		_SendOffsets
  7703 ;;		_SendThreshold
  7704 ;;		_SendDefaultPIDValues
  7705 ;;		_SendStoredPIDValues
  7706 ;;		_SendCurrentPIDValues
  7707 ;;		_SendBattVoltageInitial
  7708 ;;		_SendBattVoltage
  7709 ;;		_SendBattCurrent
  7710 ;;		_SendBattCurrentAcc
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text50
  7715  003F78                     __ptext50:
  7716                           	opt stack 0
  7717  003F78                     _PutCharTxBuf:
  7718                           	opt stack 20
  7719                           
  7720                           ;incstack = 0
  7721                           ;PutCharTxBuf@ch stored from wreg
  7722  003F78  0100               	movlb	0	; () banked
  7723  003F7A  6F77               	movwf	PutCharTxBuf@ch& (0+255),b
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  7727  003F7C  501E               	movf	_put_Tx_index,w,c
  7728  003F7E  0D01               	mullw	1
  7729  003F80  0E19               	movlw	low _Tx_buffer
  7730  003F82  24F3               	addwf	prodl,w,c
  7731  003F84  6ED9               	movwf	fsr2l,c
  7732  003F86  0E01               	movlw	high _Tx_buffer
  7733  003F88  20F4               	addwfc	prodh,w,c
  7734  003F8A  6EDA               	movwf	fsr2h,c
  7735  003F8C  C077  FFDF         	movff	PutCharTxBuf@ch,indf2
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  7739  003F90  C01E  F076         	movff	_put_Tx_index,??_PutCharTxBuf
  7740  003F94  0E01               	movlw	1
  7741  003F96  0100               	movlb	0	; () banked
  7742  003F98  2776               	addwf	??_PutCharTxBuf& (0+255),f,b
  7743  003F9A  0100               	movlb	0	; () banked
  7744  003F9C  5176               	movf	??_PutCharTxBuf& (0+255),w,b
  7745  003F9E  0100               	movlb	0	; () banked
  7746  003FA0  6F70               	movwf	___awmod@dividend& (0+255),b
  7747  003FA2  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  7748  003FA4  0E00               	movlw	0
  7749  003FA6  0100               	movlb	0	; () banked
  7750  003FA8  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  7751  003FAA  0E19               	movlw	25
  7752  003FAC  6F72               	movwf	___awmod@divisor& (0+255),b
  7753  003FAE  ECE0  F018         	call	___awmod	;wreg free
  7754  003FB2  0100               	movlb	0	; () banked
  7755  003FB4  5170               	movf	?___awmod& (0+255),w,b
  7756  003FB6  6E1E               	movwf	_put_Tx_index,c
  7757                           
  7758                           ; BSR set to: 0
  7759  003FB8  0012               	return		;funcret
  7760  003FBA                     __end_of_PutCharTxBuf:
  7761                           	opt stack 0
  7762                           prodh	equ	0xFF4
  7763                           prodl	equ	0xFF3
  7764                           intcon	equ	0xFF2
  7765                           postinc0	equ	0xFEE
  7766                           wreg	equ	0xFE8
  7767                           indf2	equ	0xFDF
  7768                           postinc2	equ	0xFDE
  7769                           postdec2	equ	0xFDD
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function ___awmod *****************
  7775 ;; Defined at:
  7776 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  dividend        2   16[BANK0 ] int 
  7779 ;;  divisor         2   18[BANK0 ] int 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  sign            1   21[BANK0 ] unsigned char 
  7782 ;;  counter         1   20[BANK0 ] unsigned char 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  2   16[BANK0 ] int 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7792 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;Total ram usage:        6 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    7
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_PutCharTxBuf
  7803 ;;		_PutCharRxBuf
  7804 ;;		_GetCharRxBuf
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text51
  7809  0031C0                     __ptext51:
  7810                           	opt stack 0
  7811  0031C0                     ___awmod:
  7812                           	opt stack 20
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;incstack = 0
  7816  0031C0  0E00               	movlw	0
  7817  0031C2  0100               	movlb	0	; () banked
  7818  0031C4  6F75               	movwf	___awmod@sign& (0+255),b
  7819                           
  7820                           ; BSR set to: 0
  7821  0031C6  0100               	movlb	0	; () banked
  7822  0031C8  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7823  0031CA  D009               	goto	l6668
  7824                           
  7825                           ; BSR set to: 0
  7826  0031CC  0100               	movlb	0	; () banked
  7827  0031CE  6D70               	negf	___awmod@dividend& (0+255),b
  7828  0031D0  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  7829  0031D2  B0D8               	btfsc	status,0,c
  7830  0031D4  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  7831                           
  7832                           ; BSR set to: 0
  7833  0031D6  0E01               	movlw	1
  7834  0031D8  0100               	movlb	0	; () banked
  7835  0031DA  6F75               	movwf	___awmod@sign& (0+255),b
  7836  0031DC  D000               	goto	l6668
  7837  0031DE                     l6668:
  7838                           
  7839                           ; BSR set to: 0
  7840  0031DE  0100               	movlb	0	; () banked
  7841  0031E0  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7842  0031E2  D006               	goto	l6672
  7843                           
  7844                           ; BSR set to: 0
  7845  0031E4  0100               	movlb	0	; () banked
  7846  0031E6  6D72               	negf	___awmod@divisor& (0+255),b
  7847  0031E8  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
  7848  0031EA  B0D8               	btfsc	status,0,c
  7849  0031EC  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
  7850  0031EE  D000               	goto	l6672
  7851  0031F0                     l6672:
  7852                           
  7853                           ; BSR set to: 0
  7854  0031F0  0100               	movlb	0	; () banked
  7855  0031F2  5172               	movf	___awmod@divisor& (0+255),w,b
  7856  0031F4  0100               	movlb	0	; () banked
  7857  0031F6  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7858  0031F8  B4D8               	btfsc	status,2,c
  7859  0031FA  D02B               	goto	l6688
  7860                           
  7861                           ; BSR set to: 0
  7862  0031FC  0E01               	movlw	1
  7863  0031FE  0100               	movlb	0	; () banked
  7864  003200  6F74               	movwf	___awmod@counter& (0+255),b
  7865  003202  D007               	goto	l6678
  7866  003204                     l6676:
  7867                           
  7868                           ; BSR set to: 0
  7869  003204  0100               	movlb	0	; () banked
  7870  003206  90D8               	bcf	status,0,c
  7871  003208  3772               	rlcf	___awmod@divisor& (0+255),f,b
  7872  00320A  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7873  00320C  0100               	movlb	0	; () banked
  7874  00320E  2B74               	incf	___awmod@counter& (0+255),f,b
  7875  003210  D000               	goto	l6678
  7876  003212                     l6678:
  7877                           
  7878                           ; BSR set to: 0
  7879  003212  0100               	movlb	0	; () banked
  7880  003214  BF73               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7881  003216  D002               	goto	l6680
  7882  003218  D7F5               	goto	l6676
  7883                           
  7884                           ; BSR set to: 0
  7885  00321A  D000               	goto	l6680
  7886  00321C                     l6680:
  7887                           
  7888                           ; BSR set to: 0
  7889  00321C  0100               	movlb	0	; () banked
  7890  00321E  5172               	movf	___awmod@divisor& (0+255),w,b
  7891  003220  0100               	movlb	0	; () banked
  7892  003222  5D70               	subwf	___awmod@dividend& (0+255),w,b
  7893  003224  0100               	movlb	0	; () banked
  7894  003226  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  7895  003228  0100               	movlb	0	; () banked
  7896  00322A  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7897  00322C  A0D8               	btfss	status,0,c
  7898  00322E  D009               	goto	l6684
  7899                           
  7900                           ; BSR set to: 0
  7901  003230  0100               	movlb	0	; () banked
  7902  003232  5172               	movf	___awmod@divisor& (0+255),w,b
  7903  003234  0100               	movlb	0	; () banked
  7904  003236  5F70               	subwf	___awmod@dividend& (0+255),f,b
  7905  003238  0100               	movlb	0	; () banked
  7906  00323A  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  7907  00323C  0100               	movlb	0	; () banked
  7908  00323E  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7909  003240  D000               	goto	l6684
  7910  003242                     l6684:
  7911                           
  7912                           ; BSR set to: 0
  7913  003242  0100               	movlb	0	; () banked
  7914  003244  90D8               	bcf	status,0,c
  7915  003246  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7916  003248  3372               	rrcf	___awmod@divisor& (0+255),f,b
  7917                           
  7918                           ; BSR set to: 0
  7919  00324A  0100               	movlb	0	; () banked
  7920  00324C  2F74               	decfsz	___awmod@counter& (0+255),f,b
  7921  00324E  D7E6               	goto	l6680
  7922                           
  7923                           ; BSR set to: 0
  7924  003250  D000               	goto	l6688
  7925  003252                     l6688:
  7926                           
  7927                           ; BSR set to: 0
  7928  003252  0100               	movlb	0	; () banked
  7929  003254  5175               	movf	___awmod@sign& (0+255),w,b
  7930  003256  0100               	movlb	0	; () banked
  7931  003258  B4D8               	btfsc	status,2,c
  7932  00325A  D006               	goto	l6692
  7933                           
  7934                           ; BSR set to: 0
  7935  00325C  0100               	movlb	0	; () banked
  7936  00325E  6D70               	negf	___awmod@dividend& (0+255),b
  7937  003260  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  7938  003262  B0D8               	btfsc	status,0,c
  7939  003264  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  7940  003266  D000               	goto	l6692
  7941  003268                     l6692:
  7942                           
  7943                           ; BSR set to: 0
  7944  003268  C070  F070         	movff	___awmod@dividend,?___awmod
  7945  00326C  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
  7946  003270  D000               	goto	l1437
  7947  003272                     l1437:
  7948                           
  7949                           ; BSR set to: 0
  7950  003272  0012               	return		;funcret
  7951  003274                     __end_of___awmod:
  7952                           	opt stack 0
  7953                           prodh	equ	0xFF4
  7954                           prodl	equ	0xFF3
  7955                           intcon	equ	0xFF2
  7956                           postinc0	equ	0xFEE
  7957                           wreg	equ	0xFE8
  7958                           indf2	equ	0xFDF
  7959                           postinc2	equ	0xFDE
  7960                           postdec2	equ	0xFDD
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _BusyTx *****************
  7966 ;; Defined at:
  7967 ;;		line 131 in file "Wireless.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      unsigned char 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;Total ram usage:        0 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    7
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_SendStatus
  7992 ;;		_SendLineMode
  7993 ;;		_SendOffsets
  7994 ;;		_SendThreshold
  7995 ;;		_SendDefaultPIDValues
  7996 ;;		_SendStoredPIDValues
  7997 ;;		_SendCurrentPIDValues
  7998 ;;		_SendBattVoltageInitial
  7999 ;;		_SendBattVoltage
  8000 ;;		_SendBattCurrent
  8001 ;;		_SendBattCurrentAcc
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text52
  8006  00470E                     __ptext52:
  8007                           	opt stack 0
  8008  00470E                     _BusyTx:
  8009                           	opt stack 21
  8010                           
  8011                           ;Wireless.c: 132: return(!Tx_complete);
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;incstack = 0
  8015  00470E  5018               	movf	_Tx_complete,w,c
  8016  004710  A4D8               	btfss	status,2,c
  8017  004712  D002               	goto	u6710
  8018  004714  0E01               	movlw	1
  8019  004716  D002               	goto	l794
  8020  004718                     u6710:
  8021  004718  0E00               	movlw	0
  8022  00471A  D000               	goto	l794
  8023  00471C                     l794:
  8024  00471C  0012               	return		;funcret
  8025  00471E                     __end_of_BusyTx:
  8026                           	opt stack 0
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           intcon	equ	0xFF2
  8030                           postinc0	equ	0xFEE
  8031                           wreg	equ	0xFE8
  8032                           indf2	equ	0xFDF
  8033                           postinc2	equ	0xFDE
  8034                           postdec2	equ	0xFDD
  8035                           fsr2h	equ	0xFDA
  8036                           fsr2l	equ	0xFD9
  8037                           status	equ	0xFD8
  8038                           
  8039 ;; *************** function _PB1pressed *****************
  8040 ;; Defined at:
  8041 ;;		line 466 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      unsigned char 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    9
  8062 ;; This function calls:
  8063 ;;		_CommandAvailable
  8064 ;;		_GetCommand
  8065 ;;		_ReadMillis2
  8066 ;;		_ResetMillis2
  8067 ;; This function is called by:
  8068 ;;		_GenerateCalibration
  8069 ;;		_LoadPIDValues
  8070 ;;		_main
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text53
  8075  003C84                     __ptext53:
  8076                           	opt stack 0
  8077  003C84                     _PB1pressed:
  8078                           	opt stack 21
  8079                           
  8080                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 467: if(CommandAvailable() == 1) {
  8081                           
  8082                           ;incstack = 0
  8083  003C84  ECBD  F023         	call	_CommandAvailable	;wreg free
  8084  003C88  06E8               	decf	wreg,f,c
  8085  003C8A  A4D8               	btfss	status,2,c
  8086  003C8C  D00B               	goto	l302
  8087                           
  8088                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 468: if(GetCommand() == 0x05) {
  8089  003C8E  ECF9  F023         	call	_GetCommand	;wreg free
  8090  003C92  0A05               	xorlw	5
  8091  003C94  A4D8               	btfss	status,2,c
  8092  003C96  D01F               	goto	l7106
  8093  003C98  D01B               	goto	l7100
  8094                           
  8095                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 469: return(1);
  8096  003C9A  D022               	goto	l304
  8097                           
  8098                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 470: }
  8099  003C9C  D01F               	goto	l7110
  8100  003C9E  D01B               	goto	l7106
  8101                           
  8102                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 471: else {
  8103                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 472: return(0);
  8104  003CA0  D01F               	goto	l304
  8105                           
  8106                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 473: }
  8107                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 474: }
  8108  003CA2  D01C               	goto	l7110
  8109  003CA4                     l302:
  8110                           
  8111                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 475: else if(PORTBbits.RB1 == 0) {
  8112  003CA4  B281               	btfsc	3969,1,c	;volatile
  8113  003CA6  D003               	goto	l307
  8114  003CA8  D016               	goto	l7106
  8115                           
  8116                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 476: return(0);
  8117  003CAA  D01A               	goto	l304
  8118                           
  8119                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 477: }
  8120  003CAC  D017               	goto	l7110
  8121  003CAE                     l307:
  8122                           
  8123                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 478: else if(PORTBbits.RB1 == 1) {
  8124  003CAE  A281               	btfss	3969,1,c	;volatile
  8125  003CB0  D015               	goto	l7110
  8126                           
  8127                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 479: ResetMillis2();
  8128  003CB2  ECEB  F023         	call	_ResetMillis2	;wreg free
  8129                           
  8130                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 480: while(ReadMillis2() < 10);
  8131  003CB6  D000               	goto	l7098
  8132  003CB8                     l7098:
  8133  003CB8  ECF0  F023         	call	_ReadMillis2	;wreg free
  8134  003CBC  0100               	movlb	0	; () banked
  8135  003CBE  5171               	movf	(?_ReadMillis2+1)& (0+255),w,b
  8136  003CC0  E105               	bnz	u6950
  8137  003CC2  0E0A               	movlw	10
  8138  003CC4  0100               	movlb	0	; () banked
  8139  003CC6  5D70               	subwf	?_ReadMillis2& (0+255),w,b
  8140  003CC8  A0D8               	btfss	status,0,c
  8141  003CCA  D7F6               	goto	l7098
  8142  003CCC                     u6950:
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 481: if(PORTBbits.RB1 == 1) {
  8146  003CCC  A281               	btfss	3969,1,c	;volatile
  8147  003CCE  D003               	goto	l7106
  8148  003CD0                     l7100:
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 482: return(1);
  8152  003CD0  0E01               	movlw	1
  8153                           
  8154                           ; BSR set to: 0
  8155  003CD2  D006               	goto	l304
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 483: }
  8159  003CD4  D003               	goto	l7110
  8160  003CD6                     l7106:
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 484: else {
  8164                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 485: return(0);
  8165  003CD6  0E00               	movlw	0
  8166                           
  8167                           ; BSR set to: 0
  8168  003CD8  D003               	goto	l304
  8169                           
  8170                           ; BSR set to: 0
  8171                           
  8172                           ; BSR set to: 0
  8173                           
  8174                           ; BSR set to: 0
  8175  003CDA  D000               	goto	l7110
  8176  003CDC                     l7110:
  8177                           
  8178                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 486: }
  8179                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 487: }
  8180                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 489: return(0);
  8181  003CDC  0E00               	movlw	0
  8182  003CDE  D000               	goto	l304
  8183  003CE0                     l304:
  8184  003CE0  0012               	return		;funcret
  8185  003CE2                     __end_of_PB1pressed:
  8186                           	opt stack 0
  8187                           prodh	equ	0xFF4
  8188                           prodl	equ	0xFF3
  8189                           intcon	equ	0xFF2
  8190                           postinc0	equ	0xFEE
  8191                           wreg	equ	0xFE8
  8192                           indf2	equ	0xFDF
  8193                           postinc2	equ	0xFDE
  8194                           postdec2	equ	0xFDD
  8195                           fsr2h	equ	0xFDA
  8196                           fsr2l	equ	0xFD9
  8197                           status	equ	0xFD8
  8198                           
  8199 ;; *************** function _ResetMillis2 *****************
  8200 ;; Defined at:
  8201 ;;		line 39 in file "MillisecondTimer.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;		None               void
  8208 ;; Registers used:
  8209 ;;		wreg, status,2
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;Total ram usage:        0 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    7
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_PB1pressed
  8226 ;;		_PB2pressed
  8227 ;;		_main
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	text54
  8232  0047D6                     __ptext54:
  8233                           	opt stack 0
  8234  0047D6                     _ResetMillis2:
  8235                           	opt stack 23
  8236                           
  8237                           ;MillisecondTimer.c: 41: millisecond_COUNT2 = 0;
  8238                           
  8239                           ;incstack = 0
  8240  0047D6  0E00               	movlw	0
  8241  0047D8  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  8242  0047DA  0E00               	movlw	0
  8243  0047DC  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  8244  0047DE  0012               	return		;funcret
  8245  0047E0                     __end_of_ResetMillis2:
  8246                           	opt stack 0
  8247                           prodh	equ	0xFF4
  8248                           prodl	equ	0xFF3
  8249                           intcon	equ	0xFF2
  8250                           postinc0	equ	0xFEE
  8251                           wreg	equ	0xFE8
  8252                           indf2	equ	0xFDF
  8253                           postinc2	equ	0xFDE
  8254                           postdec2	equ	0xFDD
  8255                           fsr2h	equ	0xFDA
  8256                           fsr2l	equ	0xFD9
  8257                           status	equ	0xFD8
  8258                           
  8259 ;; *************** function _ReadMillis2 *****************
  8260 ;; Defined at:
  8261 ;;		line 19 in file "MillisecondTimer.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  2   16[BANK0 ] unsigned int 
  8268 ;; Registers used:
  8269 ;;		None
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;Total ram usage:        2 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    7
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_PB1pressed
  8286 ;;		_PB2pressed
  8287 ;;		_main
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text55
  8292  0047E0                     __ptext55:
  8293                           	opt stack 0
  8294  0047E0                     _ReadMillis2:
  8295                           	opt stack 23
  8296                           
  8297                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  8298                           
  8299                           ;incstack = 0
  8300  0047E0  C011  F070         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  8301  0047E4  C012  F071         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  8302  0047E8  0012               	return		;funcret
  8303  0047EA                     __end_of_ReadMillis2:
  8304                           	opt stack 0
  8305                           prodh	equ	0xFF4
  8306                           prodl	equ	0xFF3
  8307                           intcon	equ	0xFF2
  8308                           postinc0	equ	0xFEE
  8309                           wreg	equ	0xFE8
  8310                           indf2	equ	0xFDF
  8311                           postinc2	equ	0xFDE
  8312                           postdec2	equ	0xFDD
  8313                           fsr2h	equ	0xFDA
  8314                           fsr2l	equ	0xFD9
  8315                           status	equ	0xFD8
  8316                           
  8317 ;; *************** function _GetCommand *****************
  8318 ;; Defined at:
  8319 ;;		line 355 in file "Wireless.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      unsigned char 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    8
  8340 ;; This function calls:
  8341 ;;		_Read1USART
  8342 ;; This function is called by:
  8343 ;;		_PB1pressed
  8344 ;;		_PB2pressed
  8345 ;;		_main
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text56
  8350  0047F2                     __ptext56:
  8351                           	opt stack 0
  8352  0047F2                     _GetCommand:
  8353                           	opt stack 21
  8354                           
  8355                           ;Wireless.c: 357: return(Read1USART());
  8356                           
  8357                           ;incstack = 0
  8358  0047F2  EC22  F022         	call	_Read1USART	;wreg free
  8359  0047F6  D000               	goto	l904
  8360  0047F8                     l904:
  8361  0047F8  0012               	return		;funcret
  8362  0047FA                     __end_of_GetCommand:
  8363                           	opt stack 0
  8364                           prodh	equ	0xFF4
  8365                           prodl	equ	0xFF3
  8366                           intcon	equ	0xFF2
  8367                           postinc0	equ	0xFEE
  8368                           wreg	equ	0xFE8
  8369                           indf2	equ	0xFDF
  8370                           postinc2	equ	0xFDE
  8371                           postdec2	equ	0xFDD
  8372                           fsr2h	equ	0xFDA
  8373                           fsr2l	equ	0xFD9
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _Read1USART *****************
  8377 ;; Defined at:
  8378 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  data            1   16[BANK0 ] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      unsigned char 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;Total ram usage:        1 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    7
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_SetPIDValues
  8403 ;;		_GetCommand
  8404 ;;		_WirelessRx_ISR
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text57
  8409  004444                     __ptext57:
  8410                           	opt stack 0
  8411  004444                     _Read1USART:
  8412                           	opt stack 22
  8413                           
  8414                           ;incstack = 0
  8415  004444  0EF2               	movlw	242
  8416  004446  1619               	andwf	_USART1_Status,f,c
  8417  004448  ACAB               	btfss	4011,6,c	;volatile
  8418  00444A  D005               	goto	l1213
  8419  00444C  9019               	bcf	_USART1_Status,0,c
  8420  00444E  A0AB               	btfss	4011,0,c	;volatile
  8421  004450  D002               	goto	l1213
  8422  004452  8019               	bsf	_USART1_Status,0,c
  8423  004454  D000               	goto	l1213
  8424  004456                     l1213:
  8425  004456  B4AB               	btfsc	4011,2,c	;volatile
  8426  004458  8419               	bsf	_USART1_Status,2,c
  8427  00445A  B2AB               	btfsc	4011,1,c	;volatile
  8428  00445C  8619               	bsf	_USART1_Status,3,c
  8429  00445E  CFAE F070          	movff	4014,Read1USART@data	;volatile
  8430  004462  0100               	movlb	0	; () banked
  8431  004464  5170               	movf	Read1USART@data& (0+255),w,b
  8432  004466  D000               	goto	l1217
  8433  004468                     l1217:
  8434                           
  8435                           ; BSR set to: 0
  8436  004468  0012               	return		;funcret
  8437  00446A                     __end_of_Read1USART:
  8438                           	opt stack 0
  8439                           prodh	equ	0xFF4
  8440                           prodl	equ	0xFF3
  8441                           intcon	equ	0xFF2
  8442                           postinc0	equ	0xFEE
  8443                           wreg	equ	0xFE8
  8444                           indf2	equ	0xFDF
  8445                           postinc2	equ	0xFDE
  8446                           postdec2	equ	0xFDD
  8447                           fsr2h	equ	0xFDA
  8448                           fsr2l	equ	0xFD9
  8449                           status	equ	0xFD8
  8450                           
  8451 ;; *************** function _CommandAvailable *****************
  8452 ;; Defined at:
  8453 ;;		line 351 in file "Wireless.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      unsigned char 
  8460 ;; Registers used:
  8461 ;;		wreg
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    7
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_PB1pressed
  8478 ;;		_PB2pressed
  8479 ;;		_main
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text58
  8484  00477A                     __ptext58:
  8485                           	opt stack 0
  8486  00477A                     _CommandAvailable:
  8487                           	opt stack 22
  8488                           
  8489                           ;Wireless.c: 352: return((PIR1bits.RCIF));
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;incstack = 0
  8493  00477A  AA9E               	btfss	3998,5,c	;volatile
  8494  00477C  D002               	goto	u6650
  8495  00477E  0E01               	movlw	1
  8496  004780  D002               	goto	l901
  8497  004782                     u6650:
  8498  004782  0E00               	movlw	0
  8499  004784  D000               	goto	l901
  8500  004786                     l901:
  8501  004786  0012               	return		;funcret
  8502  004788                     __end_of_CommandAvailable:
  8503                           	opt stack 0
  8504                           prodh	equ	0xFF4
  8505                           prodl	equ	0xFF3
  8506                           intcon	equ	0xFF2
  8507                           postinc0	equ	0xFEE
  8508                           wreg	equ	0xFE8
  8509                           indf2	equ	0xFDF
  8510                           postinc2	equ	0xFDE
  8511                           postdec2	equ	0xFDD
  8512                           fsr2h	equ	0xFDA
  8513                           fsr2l	equ	0xFD9
  8514                           status	equ	0xFD8
  8515                           
  8516 ;; *************** function _FlashLEDS *****************
  8517 ;; Defined at:
  8518 ;;		line 454 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;		None               void
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    8
  8539 ;; This function calls:
  8540 ;;		_Delay10KTCYx
  8541 ;; This function is called by:
  8542 ;;		_GenerateCalibration
  8543 ;;		_LoadCalibration
  8544 ;;		_main
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text59
  8549  0043CC                     __ptext59:
  8550                           	opt stack 0
  8551  0043CC                     _FlashLEDS:
  8552                           	opt stack 20
  8553                           
  8554                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 455: LATJ = 0x00;
  8555                           
  8556                           ;incstack = 0
  8557  0043CC  0E00               	movlw	0
  8558  0043CE  6E91               	movwf	3985,c	;volatile
  8559                           
  8560                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 456: LATJ = 0x1F;
  8561  0043D0  0E1F               	movlw	31
  8562  0043D2  6E91               	movwf	3985,c	;volatile
  8563                           
  8564                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 457: Delay10KTCYx(75);
  8565  0043D4  0E4B               	movlw	75
  8566  0043D6  ECA1  F022         	call	_Delay10KTCYx
  8567                           
  8568                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 458: LATJ = 0x00;
  8569  0043DA  0E00               	movlw	0
  8570  0043DC  6E91               	movwf	3985,c	;volatile
  8571                           
  8572                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 459: Delay10KTCYx(75);
  8573  0043DE  0E4B               	movlw	75
  8574  0043E0  ECA1  F022         	call	_Delay10KTCYx
  8575                           
  8576                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 460: LATJ = 0x1F;
  8577  0043E4  0E1F               	movlw	31
  8578  0043E6  6E91               	movwf	3985,c	;volatile
  8579                           
  8580                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 461: Delay10KTCYx(75);
  8581  0043E8  0E4B               	movlw	75
  8582  0043EA  ECA1  F022         	call	_Delay10KTCYx
  8583                           
  8584                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 462: LATJ = 0x00;
  8585  0043EE  0E00               	movlw	0
  8586  0043F0  6E91               	movwf	3985,c	;volatile
  8587  0043F2  0012               	return		;funcret
  8588  0043F4                     __end_of_FlashLEDS:
  8589                           	opt stack 0
  8590                           prodh	equ	0xFF4
  8591                           prodl	equ	0xFF3
  8592                           intcon	equ	0xFF2
  8593                           postinc0	equ	0xFEE
  8594                           wreg	equ	0xFE8
  8595                           indf2	equ	0xFDF
  8596                           postinc2	equ	0xFDE
  8597                           postdec2	equ	0xFDD
  8598                           fsr2h	equ	0xFDA
  8599                           fsr2l	equ	0xFD9
  8600                           status	equ	0xFD8
  8601                           
  8602 ;; *************** function _Delay10KTCYx *****************
  8603 ;; Defined at:
  8604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  unit            1    wreg     unsigned char 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  unit            1   17[BANK0 ] unsigned char 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;		None               void
  8611 ;; Registers used:
  8612 ;;		wreg
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;Total ram usage:        2 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    7
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_FlashLEDS
  8629 ;;		_GenerateCalibration
  8630 ;;		_main
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text60
  8635  004542                     __ptext60:
  8636                           	opt stack 0
  8637  004542                     _Delay10KTCYx:
  8638                           	opt stack 20
  8639                           
  8640                           ;incstack = 0
  8641                           ;Delay10KTCYx@unit stored from wreg
  8642  004542  0100               	movlb	0	; () banked
  8643  004544  6F71               	movwf	Delay10KTCYx@unit& (0+255),b
  8644  004546                     
  8645                           ; BSR set to: 0
  8646  004546  0E0D               	movlw	13
  8647  004548  0100               	movlb	0	; () banked
  8648  00454A  6F70               	movwf	??_Delay10KTCYx& (0+255),b
  8649  00454C  0EFC               	movlw	252
  8650  00454E                     u8787:
  8651  00454E  2EE8               	decfsz	wreg,f,c
  8652  004550  D7FE               	goto	u8787
  8653  004552  2F70               	decfsz	??_Delay10KTCYx& (0+255),f,b
  8654  004554  D7FC               	goto	u8787
  8655  004556  0100               	movlb	0	; () banked
  8656  004558  2F71               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  8657  00455A  D7F5               	goto	l6852
  8658  00455C  D000               	goto	l1456
  8659  00455E                     l1456:
  8660                           
  8661                           ; BSR set to: 0
  8662  00455E  0012               	return		;funcret
  8663  004560                     __end_of_Delay10KTCYx:
  8664                           	opt stack 0
  8665                           prodh	equ	0xFF4
  8666                           prodl	equ	0xFF3
  8667                           intcon	equ	0xFF2
  8668                           postinc0	equ	0xFEE
  8669                           wreg	equ	0xFE8
  8670                           indf2	equ	0xFDF
  8671                           postinc2	equ	0xFDE
  8672                           postdec2	equ	0xFDD
  8673                           fsr2h	equ	0xFDA
  8674                           fsr2l	equ	0xFD9
  8675                           status	equ	0xFD8
  8676                           
  8677 ;; *************** function _CalibrateThreshold *****************
  8678 ;; Defined at:
  8679 ;;		line 537 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;		None
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;  sum             1    0        unsigned char 
  8684 ;;  index           1    0        unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;		None               void
  8687 ;; Registers used:
  8688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:   10
  8701 ;; This function calls:
  8702 ;;		_BusyADC
  8703 ;;		_BusySensorAcq
  8704 ;;		_CalculateSensorStatuses
  8705 ;;		_ConvertADC
  8706 ;;		_DisplaySensorStatuses
  8707 ;;		_GetSensorReadings
  8708 ;;		_NormaliseSensorReadings
  8709 ;;		_ReadADC
  8710 ;;		_SetADCChannel
  8711 ;; This function is called by:
  8712 ;;		_GenerateCalibration
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text61
  8717  003CE2                     __ptext61:
  8718                           	opt stack 0
  8719  003CE2                     _CalibrateThreshold:
  8720                           	opt stack 18
  8721                           
  8722                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 538: unsigned char index, sum;
  8723                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 540: LATJ = 0x00;
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;incstack = 0
  8727  003CE2  0E00               	movlw	0
  8728  003CE4  6E91               	movwf	3985,c	;volatile
  8729                           
  8730                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 543: SetADCChannel(5);
  8731  003CE6  0E05               	movlw	5
  8732  003CE8  EC66  F016         	call	_SetADCChannel
  8733                           
  8734                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 544: ConvertADC();
  8735  003CEC  EC0E  F024         	call	_ConvertADC	;wreg free
  8736                           
  8737                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 545: while(BusyADC());
  8738  003CF0  D000               	goto	l7136
  8739  003CF2                     l7136:
  8740  003CF2  ECC4  F023         	call	_BusyADC	;wreg free
  8741  003CF6  0900               	iorlw	0
  8742  003CF8  A4D8               	btfss	status,2,c
  8743  003CFA  D7FB               	goto	l7136
  8744                           
  8745                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 546: sensor_threshold = ReadADC();
  8746  003CFC  EC2B  F023         	call	_ReadADC	;wreg free
  8747  003D00  C070  F028         	movff	?_ReadADC,_sensor_threshold
  8748  003D04  C071  F029         	movff	?_ReadADC+1,_sensor_threshold+1
  8749                           
  8750                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 549: GetSensorReadings();
  8751  003D08  ECF4  F022         	call	_GetSensorReadings	;wreg free
  8752                           
  8753                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 551: while(BusySensorAcq());
  8754  003D0C  D000               	goto	l7142
  8755  003D0E                     l7142:
  8756  003D0E  EC8F  F023         	call	_BusySensorAcq	;wreg free
  8757  003D12  0900               	iorlw	0
  8758  003D14  A4D8               	btfss	status,2,c
  8759  003D16  D7FB               	goto	l7142
  8760                           
  8761                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 553: NormaliseSensorReadings();
  8762  003D18  ECC8  F01B         	call	_NormaliseSensorReadings	;wreg free
  8763                           
  8764                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 555: CalculateSensorStatuses();
  8765  003D1C  ECEF  F015         	call	_CalculateSensorStatuses	;wreg free
  8766                           
  8767                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 557: DisplaySensorStatuses(sensor_status);
  8768  003D20  0E23               	movlw	low _sensor_status
  8769  003D22  0100               	movlb	0	; () banked
  8770  003D24  6F70               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  8771  003D26  0E00               	movlw	high _sensor_status
  8772  003D28  0100               	movlb	0	; () banked
  8773  003D2A  6F71               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  8774  003D2C  EC99  F01E         	call	_DisplaySensorStatuses	;wreg free
  8775  003D30  0012               	return		;funcret
  8776  003D32                     __end_of_CalibrateThreshold:
  8777                           	opt stack 0
  8778                           prodh	equ	0xFF4
  8779                           prodl	equ	0xFF3
  8780                           intcon	equ	0xFF2
  8781                           postinc0	equ	0xFEE
  8782                           wreg	equ	0xFE8
  8783                           indf2	equ	0xFDF
  8784                           postinc2	equ	0xFDE
  8785                           postdec2	equ	0xFDD
  8786                           fsr2h	equ	0xFDA
  8787                           fsr2l	equ	0xFD9
  8788                           status	equ	0xFD8
  8789                           
  8790 ;; *************** function _ReadADC *****************
  8791 ;; Defined at:
  8792 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  2   16[BANK0 ] int 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;Total ram usage:        4 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    7
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_CalibrateThreshold
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text62
  8821  004656                     __ptext62:
  8822                           	opt stack 0
  8823  004656                     _ReadADC:
  8824                           	opt stack 20
  8825                           
  8826                           ;incstack = 0
  8827  004656  50C4               	movf	4036,w,c	;volatile
  8828  004658  0100               	movlb	0	; () banked
  8829  00465A  6F72               	movwf	??_ReadADC& (0+255),b
  8830  00465C  50C3               	movf	4035,w,c	;volatile
  8831  00465E  0100               	movlb	0	; () banked
  8832  004660  6F70               	movwf	?_ReadADC& (0+255),b
  8833  004662  C072  F071         	movff	??_ReadADC,?_ReadADC+1
  8834  004666  D000               	goto	l1046
  8835  004668                     l1046:
  8836                           
  8837                           ; BSR set to: 0
  8838  004668  0012               	return		;funcret
  8839  00466A                     __end_of_ReadADC:
  8840                           	opt stack 0
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           intcon	equ	0xFF2
  8844                           postinc0	equ	0xFEE
  8845                           wreg	equ	0xFE8
  8846                           indf2	equ	0xFDF
  8847                           postinc2	equ	0xFDE
  8848                           postdec2	equ	0xFDD
  8849                           fsr2h	equ	0xFDA
  8850                           fsr2l	equ	0xFD9
  8851                           status	equ	0xFD8
  8852                           
  8853 ;; *************** function _NormaliseSensorReadings *****************
  8854 ;; Defined at:
  8855 ;;		line 340 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;		None
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  index           1   20[BANK0 ] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;		None               void
  8862 ;; Registers used:
  8863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;Total ram usage:        5 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    7
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_CalibrateThreshold
  8880 ;;		_main
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text63
  8885  003790                     __ptext63:
  8886                           	opt stack 0
  8887  003790                     _NormaliseSensorReadings:
  8888                           	opt stack 23
  8889                           
  8890                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 341: unsigned char index;
  8891                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 343: for(index = 0; index < 5; index++) {
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;incstack = 0
  8895  003790  0E00               	movlw	0
  8896  003792  0100               	movlb	0	; () banked
  8897  003794  6F74               	movwf	NormaliseSensorReadings@index& (0+255),b
  8898  003796                     l6794:
  8899                           
  8900                           ; BSR set to: 0
  8901  003796  0E04               	movlw	4
  8902  003798  0100               	movlb	0	; () banked
  8903  00379A  6574               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  8904  00379C  D001               	goto	l6798
  8905                           
  8906                           ; BSR set to: 0
  8907  00379E  D032               	goto	l251
  8908  0037A0                     l6798:
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 345: sensor_readings_normalised[index] = sensor_r
      +                          eadings_raw[index] + sensor_offsets[index];
  8912  0037A0  0100               	movlb	0	; () banked
  8913  0037A2  5174               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8914  0037A4  0D02               	mullw	2
  8915  0037A6  0EE1               	movlw	low _sensor_offsets
  8916  0037A8  24F3               	addwf	prodl,w,c
  8917  0037AA  6ED9               	movwf	fsr2l,c
  8918  0037AC  0E00               	movlw	high _sensor_offsets
  8919  0037AE  20F4               	addwfc	prodh,w,c
  8920  0037B0  6EDA               	movwf	fsr2h,c
  8921  0037B2  CFDE F070          	movff	postinc2,??_NormaliseSensorReadings
  8922  0037B6  CFDD F071          	movff	postdec2,??_NormaliseSensorReadings+1
  8923  0037BA  0100               	movlb	0	; () banked
  8924  0037BC  5174               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8925  0037BE  0D02               	mullw	2
  8926  0037C0  0ECB               	movlw	low _sensor_readings_raw
  8927  0037C2  24F3               	addwf	prodl,w,c
  8928  0037C4  6ED9               	movwf	fsr2l,c
  8929  0037C6  0E00               	movlw	high _sensor_readings_raw
  8930  0037C8  20F4               	addwfc	prodh,w,c
  8931  0037CA  6EDA               	movwf	fsr2h,c
  8932  0037CC  CFDE F072          	movff	postinc2,??_NormaliseSensorReadings+2
  8933  0037D0  CFDD F073          	movff	postdec2,??_NormaliseSensorReadings+3
  8934  0037D4  0100               	movlb	0	; () banked
  8935  0037D6  5170               	movf	??_NormaliseSensorReadings& (0+255),w,b
  8936  0037D8  0100               	movlb	0	; () banked
  8937  0037DA  2772               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  8938  0037DC  0100               	movlb	0	; () banked
  8939  0037DE  5171               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  8940  0037E0  0100               	movlb	0	; () banked
  8941  0037E2  2373               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  8942  0037E4  0100               	movlb	0	; () banked
  8943  0037E6  5174               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8944  0037E8  0D02               	mullw	2
  8945  0037EA  0E32               	movlw	low _sensor_readings_normalised
  8946  0037EC  24F3               	addwf	prodl,w,c
  8947  0037EE  6ED9               	movwf	fsr2l,c
  8948  0037F0  0E01               	movlw	high _sensor_readings_normalised
  8949  0037F2  20F4               	addwfc	prodh,w,c
  8950  0037F4  6EDA               	movwf	fsr2h,c
  8951  0037F6  C072  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  8952  0037FA  C073  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  8953                           
  8954                           ; BSR set to: 0
  8955  0037FE  0100               	movlb	0	; () banked
  8956  003800  2B74               	incf	NormaliseSensorReadings@index& (0+255),f,b
  8957  003802  D7C9               	goto	l6794
  8958  003804                     l251:
  8959                           
  8960                           ; BSR set to: 0
  8961  003804  0012               	return		;funcret
  8962  003806                     __end_of_NormaliseSensorReadings:
  8963                           	opt stack 0
  8964                           prodh	equ	0xFF4
  8965                           prodl	equ	0xFF3
  8966                           intcon	equ	0xFF2
  8967                           postinc0	equ	0xFEE
  8968                           wreg	equ	0xFE8
  8969                           indf2	equ	0xFDF
  8970                           postinc2	equ	0xFDE
  8971                           postdec2	equ	0xFDD
  8972                           fsr2h	equ	0xFDA
  8973                           fsr2l	equ	0xFD9
  8974                           status	equ	0xFD8
  8975                           
  8976 ;; *************** function _DisplaySensorStatuses *****************
  8977 ;; Defined at:
  8978 ;;		line 430 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  status_array    2   16[BANK0 ] PTR const unsigned char 
  8981 ;;		 -> sensor_status(5), 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  index           1   20[BANK0 ] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;		None               void
  8986 ;; Registers used:
  8987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;Total ram usage:        5 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    7
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_CalibrateThreshold
  9004 ;;		_main
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text64
  9009  003D32                     __ptext64:
  9010                           	opt stack 0
  9011  003D32                     _DisplaySensorStatuses:
  9012                           	opt stack 20
  9013                           
  9014                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 431: unsigned char index;
  9015                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 433: for (index = 0; index < 5; index++) {
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;incstack = 0
  9019  003D32  0E00               	movlw	0
  9020  003D34  0100               	movlb	0	; () banked
  9021  003D36  6F74               	movwf	DisplaySensorStatuses@index& (0+255),b
  9022  003D38                     l6842:
  9023                           
  9024                           ; BSR set to: 0
  9025  003D38  0E04               	movlw	4
  9026  003D3A  0100               	movlb	0	; () banked
  9027  003D3C  6574               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  9028  003D3E  D001               	goto	l6846
  9029                           
  9030                           ; BSR set to: 0
  9031  003D40  D01F               	goto	l290
  9032  003D42                     l6846:
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 434: LATJ ^= *(status_array + index) << index;
  9036  003D42  C074  F072         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  9037  003D46  0100               	movlb	0	; () banked
  9038  003D48  5174               	movf	DisplaySensorStatuses@index& (0+255),w,b
  9039  003D4A  0D01               	mullw	1
  9040  003D4C  50F3               	movf	prodl,w,c
  9041  003D4E  0100               	movlb	0	; () banked
  9042  003D50  2570               	addwf	DisplaySensorStatuses@status_array& (0+255),w,b
  9043  003D52  6ED9               	movwf	fsr2l,c
  9044  003D54  50F4               	movf	prodh,w,c
  9045  003D56  0100               	movlb	0	; () banked
  9046  003D58  2171               	addwfc	(DisplaySensorStatuses@status_array+1)& (0+255),w,b
  9047  003D5A  6EDA               	movwf	fsr2h,c
  9048  003D5C  50DF               	movf	indf2,w,c
  9049  003D5E  0100               	movlb	0	; () banked
  9050  003D60  6F73               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  9051  003D62  0100               	movlb	0	; () banked
  9052  003D64  2B72               	incf	??_DisplaySensorStatuses& (0+255),f,b
  9053  003D66  D003               	goto	u6634
  9054  003D68                     u6635:
  9055  003D68  0100               	movlb	0	; () banked
  9056  003D6A  90D8               	bcf	status,0,c
  9057  003D6C  3773               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  9058  003D6E                     u6634:
  9059  003D6E  0100               	movlb	0	; () banked
  9060  003D70  2F72               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  9061  003D72  D7FA               	goto	u6635
  9062  003D74  0100               	movlb	0	; () banked
  9063  003D76  5173               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  9064  003D78  1A91               	xorwf	3985,f,c	;volatile
  9065                           
  9066                           ; BSR set to: 0
  9067  003D7A  0100               	movlb	0	; () banked
  9068  003D7C  2B74               	incf	DisplaySensorStatuses@index& (0+255),f,b
  9069  003D7E  D7DC               	goto	l6842
  9070  003D80                     l290:
  9071                           
  9072                           ; BSR set to: 0
  9073  003D80  0012               	return		;funcret
  9074  003D82                     __end_of_DisplaySensorStatuses:
  9075                           	opt stack 0
  9076                           prodh	equ	0xFF4
  9077                           prodl	equ	0xFF3
  9078                           intcon	equ	0xFF2
  9079                           postinc0	equ	0xFEE
  9080                           wreg	equ	0xFE8
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function _CalculateSensorStatuses *****************
  9089 ;; Defined at:
  9090 ;;		line 352 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  index           1   19[BANK0 ] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;		None               void
  9097 ;; Registers used:
  9098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9107 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9108 ;;Total ram usage:        4 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    7
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_CalibrateThreshold
  9115 ;;		_main
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text65
  9120  002BDE                     __ptext65:
  9121                           	opt stack 0
  9122  002BDE                     _CalculateSensorStatuses:
  9123                           	opt stack 20
  9124                           
  9125                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 353: unsigned char index;
  9126                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 356: if(line_mode == 1) {
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;incstack = 0
  9130  002BDE  042A               	decf	_line_mode,w,c
  9131  002BE0  A4D8               	btfss	status,2,c
  9132  002BE2  D038               	goto	l6822
  9133                           
  9134                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 357: for(index = 0; index < 5; index++) {
  9135  002BE4  0E00               	movlw	0
  9136  002BE6  0100               	movlb	0	; () banked
  9137  002BE8  6F73               	movwf	CalculateSensorStatuses@index& (0+255),b
  9138  002BEA                     l6808:
  9139                           
  9140                           ; BSR set to: 0
  9141  002BEA  0E04               	movlw	4
  9142  002BEC  0100               	movlb	0	; () banked
  9143  002BEE  6573               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  9144  002BF0  D001               	goto	l6812
  9145                           
  9146                           ; BSR set to: 0
  9147  002BF2  D06B               	goto	l265
  9148  002BF4                     l6812:
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 359: if(sensor_readings_normalised[index] > senso
      +                          r_threshold) {
  9152  002BF4  0100               	movlb	0	; () banked
  9153  002BF6  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  9154  002BF8  0D02               	mullw	2
  9155  002BFA  0E32               	movlw	low _sensor_readings_normalised
  9156  002BFC  24F3               	addwf	prodl,w,c
  9157  002BFE  6ED9               	movwf	fsr2l,c
  9158  002C00  0E01               	movlw	high _sensor_readings_normalised
  9159  002C02  20F4               	addwfc	prodh,w,c
  9160  002C04  6EDA               	movwf	fsr2h,c
  9161  002C06  50DE               	movf	postinc2,w,c
  9162  002C08  5C28               	subwf	_sensor_threshold,w,c
  9163  002C0A  5029               	movf	_sensor_threshold+1,w,c
  9164  002C0C  0A80               	xorlw	128
  9165  002C0E  0100               	movlb	0	; () banked
  9166  002C10  6F72               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  9167  002C12  50DE               	movf	postinc2,w,c
  9168  002C14  0A80               	xorlw	128
  9169  002C16  0100               	movlb	0	; () banked
  9170  002C18  5972               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  9171  002C1A  B0D8               	btfsc	status,0,c
  9172  002C1C  D00B               	goto	l6816
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 360: sensor_status[index] = 1;
  9176  002C1E  0100               	movlb	0	; () banked
  9177  002C20  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  9178  002C22  0D01               	mullw	1
  9179  002C24  0E23               	movlw	low _sensor_status
  9180  002C26  24F3               	addwf	prodl,w,c
  9181  002C28  6ED9               	movwf	fsr2l,c
  9182  002C2A  0E00               	movlw	high _sensor_status
  9183  002C2C  20F4               	addwfc	prodh,w,c
  9184  002C2E  6EDA               	movwf	fsr2h,c
  9185  002C30  0E01               	movlw	1
  9186  002C32  D00A               	goto	L4
  9187  002C34                     l6816:
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 362: else {
  9191                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 363: sensor_status[index] = 0;
  9192  002C34  0100               	movlb	0	; () banked
  9193  002C36  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  9194  002C38  0D01               	mullw	1
  9195  002C3A  0E23               	movlw	low _sensor_status
  9196  002C3C  24F3               	addwf	prodl,w,c
  9197  002C3E  6ED9               	movwf	fsr2l,c
  9198  002C40  0E00               	movlw	high _sensor_status
  9199  002C42  20F4               	addwfc	prodh,w,c
  9200  002C44  6EDA               	movwf	fsr2h,c
  9201  002C46  0E00               	movlw	0
  9202  002C48                     L4:
  9203  002C48  6EDF               	movwf	indf2,c
  9204  002C4A  D000               	goto	l6818
  9205  002C4C                     l6818:
  9206                           
  9207                           ; BSR set to: 0
  9208  002C4C  0100               	movlb	0	; () banked
  9209  002C4E  2B73               	incf	CalculateSensorStatuses@index& (0+255),f,b
  9210  002C50  D7CC               	goto	l6808
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 364: }
  9214                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 365: }
  9215                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 366: }
  9216                           
  9217                           ; BSR set to: 0
  9218  002C52  D03B               	goto	l265
  9219  002C54                     l6822:
  9220                           
  9221                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 368: else if(line_mode == 0) {
  9222  002C54  502A               	movf	_line_mode,w,c
  9223  002C56  A4D8               	btfss	status,2,c
  9224  002C58  D038               	goto	l265
  9225                           
  9226                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 370: for(index = 0; index < 5; index++) {
  9227  002C5A  0E00               	movlw	0
  9228  002C5C  0100               	movlb	0	; () banked
  9229  002C5E  6F73               	movwf	CalculateSensorStatuses@index& (0+255),b
  9230  002C60                     l6826:
  9231                           
  9232                           ; BSR set to: 0
  9233  002C60  0E04               	movlw	4
  9234  002C62  0100               	movlb	0	; () banked
  9235  002C64  6573               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  9236  002C66  D001               	goto	l6830
  9237                           
  9238                           ; BSR set to: 0
  9239  002C68  D030               	goto	l265
  9240  002C6A                     l6830:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 372: if(sensor_readings_normalised[index] < senso
      +                          r_threshold) {
  9244  002C6A  0100               	movlb	0	; () banked
  9245  002C6C  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  9246  002C6E  0D02               	mullw	2
  9247  002C70  0E32               	movlw	low _sensor_readings_normalised
  9248  002C72  24F3               	addwf	prodl,w,c
  9249  002C74  6ED9               	movwf	fsr2l,c
  9250  002C76  0E01               	movlw	high _sensor_readings_normalised
  9251  002C78  20F4               	addwfc	prodh,w,c
  9252  002C7A  6EDA               	movwf	fsr2h,c
  9253  002C7C  5028               	movf	_sensor_threshold,w,c
  9254  002C7E  5CDE               	subwf	postinc2,w,c
  9255  002C80  50DE               	movf	postinc2,w,c
  9256  002C82  0A80               	xorlw	128
  9257  002C84  0100               	movlb	0	; () banked
  9258  002C86  6F72               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  9259  002C88  5029               	movf	_sensor_threshold+1,w,c
  9260  002C8A  0A80               	xorlw	128
  9261  002C8C  0100               	movlb	0	; () banked
  9262  002C8E  5972               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  9263  002C90  B0D8               	btfsc	status,0,c
  9264  002C92  D00B               	goto	l6834
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 373: sensor_status[index] = 1;
  9268  002C94  0100               	movlb	0	; () banked
  9269  002C96  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  9270  002C98  0D01               	mullw	1
  9271  002C9A  0E23               	movlw	low _sensor_status
  9272  002C9C  24F3               	addwf	prodl,w,c
  9273  002C9E  6ED9               	movwf	fsr2l,c
  9274  002CA0  0E00               	movlw	high _sensor_status
  9275  002CA2  20F4               	addwfc	prodh,w,c
  9276  002CA4  6EDA               	movwf	fsr2h,c
  9277  002CA6  0E01               	movlw	1
  9278  002CA8  D00A               	goto	L5
  9279  002CAA                     l6834:
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 375: else {
  9283                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 376: sensor_status[index] = 0;
  9284  002CAA  0100               	movlb	0	; () banked
  9285  002CAC  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  9286  002CAE  0D01               	mullw	1
  9287  002CB0  0E23               	movlw	low _sensor_status
  9288  002CB2  24F3               	addwf	prodl,w,c
  9289  002CB4  6ED9               	movwf	fsr2l,c
  9290  002CB6  0E00               	movlw	high _sensor_status
  9291  002CB8  20F4               	addwfc	prodh,w,c
  9292  002CBA  6EDA               	movwf	fsr2h,c
  9293  002CBC  0E00               	movlw	0
  9294  002CBE                     L5:
  9295  002CBE  6EDF               	movwf	indf2,c
  9296  002CC0  D000               	goto	l6836
  9297  002CC2                     l6836:
  9298                           
  9299                           ; BSR set to: 0
  9300  002CC2  0100               	movlb	0	; () banked
  9301  002CC4  2B73               	incf	CalculateSensorStatuses@index& (0+255),f,b
  9302  002CC6  D7CC               	goto	l6826
  9303                           
  9304                           ; BSR set to: 0
  9305                           
  9306                           ; BSR set to: 0
  9307                           
  9308                           ; BSR set to: 0
  9309  002CC8  D000               	goto	l265
  9310  002CCA                     l265:
  9311  002CCA  0012               	return		;funcret
  9312  002CCC                     __end_of_CalculateSensorStatuses:
  9313                           	opt stack 0
  9314                           prodh	equ	0xFF4
  9315                           prodl	equ	0xFF3
  9316                           intcon	equ	0xFF2
  9317                           postinc0	equ	0xFEE
  9318                           wreg	equ	0xFE8
  9319                           indf2	equ	0xFDF
  9320                           postinc2	equ	0xFDE
  9321                           postdec2	equ	0xFDD
  9322                           fsr2h	equ	0xFDA
  9323                           fsr2l	equ	0xFD9
  9324                           status	equ	0xFD8
  9325                           
  9326 ;; *************** function _BusyADC *****************
  9327 ;; Defined at:
  9328 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      unsigned char 
  9335 ;; Registers used:
  9336 ;;		wreg
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    7
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_CalibrateThreshold
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text66
  9357  004788                     __ptext66:
  9358                           	opt stack 0
  9359  004788                     _BusyADC:
  9360                           	opt stack 20
  9361                           
  9362                           ;incstack = 0
  9363  004788  A2C2               	btfss	4034,1,c	;volatile
  9364  00478A  D002               	goto	u6660
  9365  00478C  0E01               	movlw	1
  9366  00478E  D002               	goto	l1016
  9367  004790                     u6660:
  9368  004790  0E00               	movlw	0
  9369  004792  D000               	goto	l1016
  9370  004794                     l1016:
  9371  004794  0012               	return		;funcret
  9372  004796                     __end_of_BusyADC:
  9373                           	opt stack 0
  9374                           prodh	equ	0xFF4
  9375                           prodl	equ	0xFF3
  9376                           intcon	equ	0xFF2
  9377                           postinc0	equ	0xFEE
  9378                           wreg	equ	0xFE8
  9379                           indf2	equ	0xFDF
  9380                           postinc2	equ	0xFDE
  9381                           postdec2	equ	0xFDD
  9382                           fsr2h	equ	0xFDA
  9383                           fsr2l	equ	0xFD9
  9384                           status	equ	0xFD8
  9385                           
  9386 ;; *************** function _CalibrateOffsets *****************
  9387 ;; Defined at:
  9388 ;;		line 521 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;		None
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;  index           1   21[BANK0 ] unsigned char 
  9393 ;; Return value:  Size  Location     Type
  9394 ;;		None               void
  9395 ;; Registers used:
  9396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9397 ;; Tracked objects:
  9398 ;;		On entry : 0/0
  9399 ;;		On exit  : 0/0
  9400 ;;		Unchanged: 0/0
  9401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9405 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9406 ;;Total ram usage:        3 bytes
  9407 ;; Hardware stack levels used:    1
  9408 ;; Hardware stack levels required when called:   10
  9409 ;; This function calls:
  9410 ;;		_BusySensorAcq
  9411 ;;		_GetSensorReadings
  9412 ;; This function is called by:
  9413 ;;		_GenerateCalibration
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text67
  9418  003806                     __ptext67:
  9419                           	opt stack 0
  9420  003806                     _CalibrateOffsets:
  9421                           	opt stack 18
  9422                           
  9423                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 522: unsigned char index;
  9424                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 524: GetSensorReadings();
  9425                           
  9426                           ;incstack = 0
  9427  003806  ECF4  F022         	call	_GetSensorReadings	;wreg free
  9428                           
  9429                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 526: while(BusySensorAcq());
  9430  00380A  D000               	goto	l7116
  9431  00380C                     l7116:
  9432  00380C  EC8F  F023         	call	_BusySensorAcq	;wreg free
  9433  003810  0900               	iorlw	0
  9434  003812  A4D8               	btfss	status,2,c
  9435  003814  D7FB               	goto	l7116
  9436                           
  9437                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 528: for(index = 0; index < 5; index++) {
  9438  003816  0E00               	movlw	0
  9439  003818  0100               	movlb	0	; () banked
  9440  00381A  6F75               	movwf	CalibrateOffsets@index& (0+255),b
  9441  00381C                     l7120:
  9442                           
  9443                           ; BSR set to: 0
  9444  00381C  0E04               	movlw	4
  9445  00381E  0100               	movlb	0	; () banked
  9446  003820  6575               	cpfsgt	CalibrateOffsets@index& (0+255),b
  9447  003822  D001               	goto	l7124
  9448                           
  9449                           ; BSR set to: 0
  9450  003824  D02A               	goto	l337
  9451  003826                     l7124:
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 530: sensor_offsets[index] = sensor_readings_raw[
      +                          2] - sensor_readings_raw[index];
  9455  003826  0100               	movlb	0	; () banked
  9456  003828  5175               	movf	CalibrateOffsets@index& (0+255),w,b
  9457  00382A  0D02               	mullw	2
  9458  00382C  0ECB               	movlw	low _sensor_readings_raw
  9459  00382E  24F3               	addwf	prodl,w,c
  9460  003830  6ED9               	movwf	fsr2l,c
  9461  003832  0E00               	movlw	high _sensor_readings_raw
  9462  003834  20F4               	addwfc	prodh,w,c
  9463  003836  6EDA               	movwf	fsr2h,c
  9464  003838  CFDE F073          	movff	postinc2,??_CalibrateOffsets
  9465  00383C  CFDD F074          	movff	postdec2,??_CalibrateOffsets+1
  9466  003840  0100               	movlb	0	; () banked
  9467  003842  1F73               	comf	??_CalibrateOffsets& (0+255),f,b
  9468  003844  1F74               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  9469  003846  4B73               	infsnz	??_CalibrateOffsets& (0+255),f,b
  9470  003848  2B74               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  9471  00384A  0100               	movlb	0	; () banked
  9472  00384C  51CF               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  9473  00384E  0100               	movlb	0	; () banked
  9474  003850  2773               	addwf	??_CalibrateOffsets& (0+255),f,b
  9475  003852  0100               	movlb	0	; () banked
  9476  003854  51D0               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  9477  003856  0100               	movlb	0	; () banked
  9478  003858  2374               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  9479  00385A  0100               	movlb	0	; () banked
  9480  00385C  5175               	movf	CalibrateOffsets@index& (0+255),w,b
  9481  00385E  0D02               	mullw	2
  9482  003860  0EE1               	movlw	low _sensor_offsets
  9483  003862  24F3               	addwf	prodl,w,c
  9484  003864  6ED9               	movwf	fsr2l,c
  9485  003866  0E00               	movlw	high _sensor_offsets
  9486  003868  20F4               	addwfc	prodh,w,c
  9487  00386A  6EDA               	movwf	fsr2h,c
  9488  00386C  C073  FFDE         	movff	??_CalibrateOffsets,postinc2
  9489  003870  C074  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  9490                           
  9491                           ; BSR set to: 0
  9492  003874  0100               	movlb	0	; () banked
  9493  003876  2B75               	incf	CalibrateOffsets@index& (0+255),f,b
  9494  003878  D7D1               	goto	l7120
  9495  00387A                     l337:
  9496                           
  9497                           ; BSR set to: 0
  9498  00387A  0012               	return		;funcret
  9499  00387C                     __end_of_CalibrateOffsets:
  9500                           	opt stack 0
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           intcon	equ	0xFF2
  9504                           postinc0	equ	0xFEE
  9505                           wreg	equ	0xFE8
  9506                           indf2	equ	0xFDF
  9507                           postinc2	equ	0xFDE
  9508                           postdec2	equ	0xFDD
  9509                           fsr2h	equ	0xFDA
  9510                           fsr2l	equ	0xFD9
  9511                           status	equ	0xFD8
  9512                           
  9513 ;; *************** function _GetSensorReadings *****************
  9514 ;; Defined at:
  9515 ;;		line 322 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;		None               void
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    9
  9536 ;; This function calls:
  9537 ;;		_ConvertADC
  9538 ;;		_SetADCChannel
  9539 ;; This function is called by:
  9540 ;;		_CalibrateOffsets
  9541 ;;		_CalibrateThreshold
  9542 ;;		_main
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text68
  9547  0045E8                     __ptext68:
  9548                           	opt stack 0
  9549  0045E8                     _GetSensorReadings:
  9550                           	opt stack 18
  9551                           
  9552                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 324: sensor_acq_index = 0;
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;incstack = 0
  9556  0045E8  0E00               	movlw	0
  9557  0045EA  6E21               	movwf	_sensor_acq_index,c	;volatile
  9558                           
  9559                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 325: sensor_acq_done = 0;
  9560  0045EC  0E00               	movlw	0
  9561  0045EE  6E20               	movwf	_sensor_acq_done,c	;volatile
  9562                           
  9563                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 326: SetADCChannel(sensor_acq_index);
  9564  0045F0  5021               	movf	_sensor_acq_index,w,c	;volatile
  9565  0045F2  EC66  F016         	call	_SetADCChannel
  9566                           
  9567                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 327: ConvertADC();
  9568  0045F6  EC0E  F024         	call	_ConvertADC	;wreg free
  9569                           
  9570                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 328: PIE1bits.ADIE = 1;
  9571  0045FA  8C9D               	bsf	3997,6,c	;volatile
  9572  0045FC  0012               	return		;funcret
  9573  0045FE                     __end_of_GetSensorReadings:
  9574                           	opt stack 0
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           intcon	equ	0xFF2
  9578                           postinc0	equ	0xFEE
  9579                           wreg	equ	0xFE8
  9580                           indf2	equ	0xFDF
  9581                           postinc2	equ	0xFDE
  9582                           postdec2	equ	0xFDD
  9583                           fsr2h	equ	0xFDA
  9584                           fsr2l	equ	0xFD9
  9585                           status	equ	0xFD8
  9586                           
  9587 ;; *************** function _SetADCChannel *****************
  9588 ;; Defined at:
  9589 ;;		line 264 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  channel         1    wreg     unsigned char 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  channel         1   18[BANK0 ] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;		None               void
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0, cstack
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;Total ram usage:        1 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:    8
  9610 ;; This function calls:
  9611 ;;		_SetChanADC
  9612 ;; This function is called by:
  9613 ;;		_GetSensorReadings
  9614 ;;		_CalibrateThreshold
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text69
  9619  002CCC                     __ptext69:
  9620                           	opt stack 0
  9621  002CCC                     _SetADCChannel:
  9622                           	opt stack 19
  9623                           
  9624                           ;incstack = 0
  9625                           ;SetADCChannel@channel stored from wreg
  9626  002CCC  0100               	movlb	0	; () banked
  9627  002CCE  6F72               	movwf	SetADCChannel@channel& (0+255),b
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 266: switch (channel) {
  9631  002CD0  D040               	goto	l6500
  9632  002CD2                     l6466:
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 268: SetChanADC(0b10000111);
  9636  002CD2  0E87               	movlw	135
  9637  002CD4  ECB0  F022         	call	_SetChanADC
  9638                           
  9639                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 269: break;
  9640  002CD8  D06F               	goto	l240
  9641  002CDA                     l6468:
  9642                           
  9643                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 271: SetChanADC(0b10001111);
  9644  002CDA  0E8F               	movlw	143
  9645  002CDC  ECB0  F022         	call	_SetChanADC
  9646                           
  9647                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 272: break;
  9648  002CE0  D06B               	goto	l240
  9649  002CE2                     l6470:
  9650                           
  9651                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 274: SetChanADC(0b10010111);
  9652  002CE2  0E97               	movlw	151
  9653  002CE4  ECB0  F022         	call	_SetChanADC
  9654                           
  9655                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 275: break;
  9656  002CE8  D067               	goto	l240
  9657  002CEA                     l6472:
  9658                           
  9659                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 277: SetChanADC(0b10011111);
  9660  002CEA  0E9F               	movlw	159
  9661  002CEC  ECB0  F022         	call	_SetChanADC
  9662                           
  9663                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 278: break;
  9664  002CF0  D063               	goto	l240
  9665  002CF2                     l6474:
  9666                           
  9667                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 280: SetChanADC(0b10100111);
  9668  002CF2  0EA7               	movlw	167
  9669  002CF4  ECB0  F022         	call	_SetChanADC
  9670                           
  9671                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 281: break;
  9672  002CF8  D05F               	goto	l240
  9673  002CFA                     l6476:
  9674                           
  9675                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 283: SetChanADC(0b10101111);
  9676  002CFA  0EAF               	movlw	175
  9677  002CFC  ECB0  F022         	call	_SetChanADC
  9678                           
  9679                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 284: break;
  9680  002D00  D05B               	goto	l240
  9681  002D02                     l6478:
  9682                           
  9683                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 286: SetChanADC(0b10110111);
  9684  002D02  0EB7               	movlw	183
  9685  002D04  ECB0  F022         	call	_SetChanADC
  9686                           
  9687                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 287: break;
  9688  002D08  D057               	goto	l240
  9689  002D0A                     l6480:
  9690                           
  9691                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 289: SetChanADC(0b10111111);
  9692  002D0A  0EBF               	movlw	191
  9693  002D0C  ECB0  F022         	call	_SetChanADC
  9694                           
  9695                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 290: break;
  9696  002D10  D053               	goto	l240
  9697  002D12                     l6482:
  9698                           
  9699                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 292: SetChanADC(0b11000111);
  9700  002D12  0EC7               	movlw	199
  9701  002D14  ECB0  F022         	call	_SetChanADC
  9702                           
  9703                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 293: break;
  9704  002D18  D04F               	goto	l240
  9705  002D1A                     l6484:
  9706                           
  9707                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 295: SetChanADC(0b11001111);
  9708  002D1A  0ECF               	movlw	207
  9709  002D1C  ECB0  F022         	call	_SetChanADC
  9710                           
  9711                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 296: break;
  9712  002D20  D04B               	goto	l240
  9713  002D22                     l6486:
  9714                           
  9715                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 298: SetChanADC(0b11010111);
  9716  002D22  0ED7               	movlw	215
  9717  002D24  ECB0  F022         	call	_SetChanADC
  9718                           
  9719                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 299: break;
  9720  002D28  D047               	goto	l240
  9721  002D2A                     l6488:
  9722                           
  9723                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 301: SetChanADC(0b11011111);
  9724  002D2A  0EDF               	movlw	223
  9725  002D2C  ECB0  F022         	call	_SetChanADC
  9726                           
  9727                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 302: break;
  9728  002D30  D043               	goto	l240
  9729  002D32                     l6490:
  9730                           
  9731                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 304: SetChanADC(0b11100111);
  9732  002D32  0EE7               	movlw	231
  9733  002D34  ECB0  F022         	call	_SetChanADC
  9734                           
  9735                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 305: break;
  9736  002D38  D03F               	goto	l240
  9737  002D3A                     l6492:
  9738                           
  9739                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 307: SetChanADC(0b11101111);
  9740  002D3A  0EEF               	movlw	239
  9741  002D3C  ECB0  F022         	call	_SetChanADC
  9742                           
  9743                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 308: break;
  9744  002D40  D03B               	goto	l240
  9745  002D42                     l6494:
  9746                           
  9747                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 310: SetChanADC(0b11110111);
  9748  002D42  0EF7               	movlw	247
  9749  002D44  ECB0  F022         	call	_SetChanADC
  9750                           
  9751                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 311: break;
  9752  002D48  D037               	goto	l240
  9753  002D4A                     l6496:
  9754                           
  9755                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 313: SetChanADC(0b11111111);
  9756  002D4A  0EFF               	movlw	255
  9757  002D4C  ECB0  F022         	call	_SetChanADC
  9758                           
  9759                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 317: }
  9760                           
  9761                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 316: break;
  9762                           
  9763                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 315: default:
  9764                           
  9765                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 314: break;
  9766  002D50  D033               	goto	l240
  9767  002D52                     l6500:
  9768  002D52  0100               	movlb	0	; () banked
  9769  002D54  5172               	movf	SetADCChannel@channel& (0+255),w,b
  9770                           
  9771                           ; Switch size 1, requested type "space"
  9772                           ; Number of cases is 16, Range of values is 0 to 15
  9773                           ; switch strategies available:
  9774                           ; Name         Instructions Cycles
  9775                           ; simple_byte           49    25 (average)
  9776                           ;	Chosen strategy is simple_byte
  9777  002D56  0A00               	xorlw	0	; case 0
  9778  002D58  B4D8               	btfsc	status,2,c
  9779  002D5A  D7BB               	goto	l6466
  9780  002D5C  0A01               	xorlw	1	; case 1
  9781  002D5E  B4D8               	btfsc	status,2,c
  9782  002D60  D7BC               	goto	l6468
  9783  002D62  0A03               	xorlw	3	; case 2
  9784  002D64  B4D8               	btfsc	status,2,c
  9785  002D66  D7BD               	goto	l6470
  9786  002D68  0A01               	xorlw	1	; case 3
  9787  002D6A  B4D8               	btfsc	status,2,c
  9788  002D6C  D7BE               	goto	l6472
  9789  002D6E  0A07               	xorlw	7	; case 4
  9790  002D70  B4D8               	btfsc	status,2,c
  9791  002D72  D7BF               	goto	l6474
  9792  002D74  0A01               	xorlw	1	; case 5
  9793  002D76  B4D8               	btfsc	status,2,c
  9794  002D78  D7C0               	goto	l6476
  9795  002D7A  0A03               	xorlw	3	; case 6
  9796  002D7C  B4D8               	btfsc	status,2,c
  9797  002D7E  D7C1               	goto	l6478
  9798  002D80  0A01               	xorlw	1	; case 7
  9799  002D82  B4D8               	btfsc	status,2,c
  9800  002D84  D7C2               	goto	l6480
  9801  002D86  0A0F               	xorlw	15	; case 8
  9802  002D88  B4D8               	btfsc	status,2,c
  9803  002D8A  D7C3               	goto	l6482
  9804  002D8C  0A01               	xorlw	1	; case 9
  9805  002D8E  B4D8               	btfsc	status,2,c
  9806  002D90  D7C4               	goto	l6484
  9807  002D92  0A03               	xorlw	3	; case 10
  9808  002D94  B4D8               	btfsc	status,2,c
  9809  002D96  D7C5               	goto	l6486
  9810  002D98  0A01               	xorlw	1	; case 11
  9811  002D9A  B4D8               	btfsc	status,2,c
  9812  002D9C  D7C6               	goto	l6488
  9813  002D9E  0A07               	xorlw	7	; case 12
  9814  002DA0  B4D8               	btfsc	status,2,c
  9815  002DA2  D7C7               	goto	l6490
  9816  002DA4  0A01               	xorlw	1	; case 13
  9817  002DA6  B4D8               	btfsc	status,2,c
  9818  002DA8  D7C8               	goto	l6492
  9819  002DAA  0A03               	xorlw	3	; case 14
  9820  002DAC  B4D8               	btfsc	status,2,c
  9821  002DAE  D7C9               	goto	l6494
  9822  002DB0  0A01               	xorlw	1	; case 15
  9823  002DB2  B4D8               	btfsc	status,2,c
  9824  002DB4  D7CA               	goto	l6496
  9825  002DB6  D000               	goto	l240
  9826  002DB8                     l240:
  9827  002DB8  0012               	return		;funcret
  9828  002DBA                     __end_of_SetADCChannel:
  9829                           	opt stack 0
  9830                           prodh	equ	0xFF4
  9831                           prodl	equ	0xFF3
  9832                           intcon	equ	0xFF2
  9833                           postinc0	equ	0xFEE
  9834                           wreg	equ	0xFE8
  9835                           indf2	equ	0xFDF
  9836                           postinc2	equ	0xFDE
  9837                           postdec2	equ	0xFDD
  9838                           fsr2h	equ	0xFDA
  9839                           fsr2l	equ	0xFD9
  9840                           status	equ	0xFD8
  9841                           
  9842 ;; *************** function _SetChanADC *****************
  9843 ;; Defined at:
  9844 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  channel         1    wreg     unsigned char 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  channel         1   17[BANK0 ] unsigned char 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;		None               void
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9862 ;;Total ram usage:        2 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    7
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_SetADCChannel
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text70
  9873  004560                     __ptext70:
  9874                           	opt stack 0
  9875  004560                     _SetChanADC:
  9876                           	opt stack 19
  9877                           
  9878                           ;incstack = 0
  9879                           ;SetChanADC@channel stored from wreg
  9880  004560  0100               	movlb	0	; () banked
  9881  004562  6F71               	movwf	SetChanADC@channel& (0+255),b
  9882                           
  9883                           ; BSR set to: 0
  9884  004564  CFC2 F070          	movff	4034,??_SetChanADC	;volatile
  9885  004568  0EC3               	movlw	195
  9886  00456A  0100               	movlb	0	; () banked
  9887  00456C  1770               	andwf	??_SetChanADC& (0+255),f,b
  9888  00456E  0100               	movlb	0	; () banked
  9889  004570  90D8               	bcf	status,0,c
  9890  004572  3171               	rrcf	SetChanADC@channel& (0+255),w,b
  9891  004574  0B3C               	andlw	60
  9892  004576  0100               	movlb	0	; () banked
  9893  004578  1170               	iorwf	??_SetChanADC& (0+255),w,b
  9894  00457A  6EC2               	movwf	4034,c	;volatile
  9895                           
  9896                           ; BSR set to: 0
  9897  00457C  0012               	return		;funcret
  9898  00457E                     __end_of_SetChanADC:
  9899                           	opt stack 0
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           postinc0	equ	0xFEE
  9904                           wreg	equ	0xFE8
  9905                           indf2	equ	0xFDF
  9906                           postinc2	equ	0xFDE
  9907                           postdec2	equ	0xFDD
  9908                           fsr2h	equ	0xFDA
  9909                           fsr2l	equ	0xFD9
  9910                           status	equ	0xFD8
  9911                           
  9912 ;; *************** function _ConvertADC *****************
  9913 ;; Defined at:
  9914 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;		None               void
  9921 ;; Registers used:
  9922 ;;		None
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:    7
  9935 ;; This function calls:
  9936 ;;		Nothing
  9937 ;; This function is called by:
  9938 ;;		_GetSensorReadings
  9939 ;;		_CalibrateThreshold
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text71
  9944  00481C                     __ptext71:
  9945                           	opt stack 0
  9946  00481C                     _ConvertADC:
  9947                           	opt stack 19
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;incstack = 0
  9951  00481C  82C2               	bsf	4034,1,c	;volatile
  9952  00481E  0012               	return		;funcret
  9953  004820                     __end_of_ConvertADC:
  9954                           	opt stack 0
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           intcon	equ	0xFF2
  9958                           postinc0	equ	0xFEE
  9959                           wreg	equ	0xFE8
  9960                           indf2	equ	0xFDF
  9961                           postinc2	equ	0xFDE
  9962                           postdec2	equ	0xFDD
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _BusySensorAcq *****************
  9968 ;; Defined at:
  9969 ;;		line 333 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;		None
  9974 ;; Return value:  Size  Location     Type
  9975 ;;                  1    wreg      unsigned char 
  9976 ;; Registers used:
  9977 ;;		wreg, status,2
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;Total ram usage:        0 bytes
  9988 ;; Hardware stack levels used:    1
  9989 ;; Hardware stack levels required when called:    7
  9990 ;; This function calls:
  9991 ;;		Nothing
  9992 ;; This function is called by:
  9993 ;;		_CalibrateOffsets
  9994 ;;		_CalibrateThreshold
  9995 ;;		_main
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text72
 10000  00471E                     __ptext72:
 10001                           	opt stack 0
 10002  00471E                     _BusySensorAcq:
 10003                           	opt stack 20
 10004                           
 10005                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 335: return (!sensor_acq_done);
 10006                           
 10007                           ;incstack = 0
 10008  00471E  5020               	movf	_sensor_acq_done,w,c	;volatile
 10009  004720  A4D8               	btfss	status,2,c
 10010  004722  D002               	goto	u6500
 10011  004724  0E01               	movlw	1
 10012  004726  D002               	goto	l246
 10013  004728                     u6500:
 10014  004728  0E00               	movlw	0
 10015  00472A  D000               	goto	l246
 10016  00472C                     l246:
 10017  00472C  0012               	return		;funcret
 10018  00472E                     __end_of_BusySensorAcq:
 10019                           	opt stack 0
 10020                           prodh	equ	0xFF4
 10021                           prodl	equ	0xFF3
 10022                           intcon	equ	0xFF2
 10023                           postinc0	equ	0xFEE
 10024                           wreg	equ	0xFE8
 10025                           indf2	equ	0xFDF
 10026                           postinc2	equ	0xFDE
 10027                           postdec2	equ	0xFDD
 10028                           fsr2h	equ	0xFDA
 10029                           fsr2l	equ	0xFD9
 10030                           status	equ	0xFD8
 10031                           
 10032 ;; *************** function _GetDistance *****************
 10033 ;; Defined at:
 10034 ;;		line 48 in file "Ultrasound.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;		None               void
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    8
 10055 ;; This function calls:
 10056 ;;		_Delay1TCYx
 10057 ;; This function is called by:
 10058 ;;		_main
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text73
 10063  00466A                     __ptext73:
 10064                           	opt stack 0
 10065  00466A                     _GetDistance:
 10066                           	opt stack 22
 10067                           
 10068                           ;Ultrasound.c: 50: LATEbits.LATE5 = 1;
 10069                           
 10070                           ;incstack = 0
 10071  00466A  8A8D               	bsf	3981,5,c	;volatile
 10072                           
 10073                           ;Ultrasound.c: 51: Delay1TCYx(25);
 10074  00466C  0E19               	movlw	25
 10075  00466E  EC97  F023         	call	_Delay1TCYx
 10076                           
 10077                           ;Ultrasound.c: 52: LATEbits.LATE5 = 0;
 10078  004672  9A8D               	bcf	3981,5,c	;volatile
 10079                           
 10080                           ;Ultrasound.c: 53: INTCON2bits.INTEDG3 = 1;
 10081  004674  86F1               	bsf	intcon2,3,c	;volatile
 10082                           
 10083                           ;Ultrasound.c: 54: INTCON3bits.INT3IE = 1;
 10084  004676  8AF0               	bsf	intcon3,5,c	;volatile
 10085                           
 10086                           ;Ultrasound.c: 56: echo_acq_done = 0;
 10087  004678  0E00               	movlw	0
 10088  00467A  6E1A               	movwf	_echo_acq_done,c
 10089  00467C  0012               	return		;funcret
 10090  00467E                     __end_of_GetDistance:
 10091                           	opt stack 0
 10092                           prodh	equ	0xFF4
 10093                           prodl	equ	0xFF3
 10094                           intcon	equ	0xFF2
 10095                           intcon2	equ	0xFF1
 10096                           intcon3	equ	0xFF0
 10097                           postinc0	equ	0xFEE
 10098                           wreg	equ	0xFE8
 10099                           indf2	equ	0xFDF
 10100                           postinc2	equ	0xFDE
 10101                           postdec2	equ	0xFDD
 10102                           fsr2h	equ	0xFDA
 10103                           fsr2l	equ	0xFD9
 10104                           status	equ	0xFD8
 10105                           
 10106 ;; *************** function _Delay1TCYx *****************
 10107 ;; Defined at:
 10108 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  unit            1    wreg     unsigned char 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  unit            1   16[BANK0 ] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;		None               void
 10115 ;; Registers used:
 10116 ;;		wreg
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;Total ram usage:        1 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    7
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_GetDistance
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           	psect	text74
 10137  00472E                     __ptext74:
 10138                           	opt stack 0
 10139  00472E                     _Delay1TCYx:
 10140                           	opt stack 22
 10141                           
 10142                           ;incstack = 0
 10143                           ;Delay1TCYx@unit stored from wreg
 10144  00472E  0100               	movlb	0	; () banked
 10145  004730  6F70               	movwf	Delay1TCYx@unit& (0+255),b
 10146  004732                     l1468:
 10147                           
 10148                           ; BSR set to: 0
 10149  004732  F000               	nop	
 10150  004734  0100               	movlb	0	; () banked
 10151  004736  2F70               	decfsz	Delay1TCYx@unit& (0+255),f,b
 10152  004738  D7FC               	goto	l1468
 10153  00473A  D000               	goto	l1470
 10154  00473C                     l1470:
 10155                           
 10156                           ; BSR set to: 0
 10157  00473C  0012               	return		;funcret
 10158  00473E                     __end_of_Delay1TCYx:
 10159                           	opt stack 0
 10160                           prodh	equ	0xFF4
 10161                           prodl	equ	0xFF3
 10162                           intcon	equ	0xFF2
 10163                           intcon2	equ	0xFF1
 10164                           intcon3	equ	0xFF0
 10165                           postinc0	equ	0xFEE
 10166                           wreg	equ	0xFE8
 10167                           indf2	equ	0xFDF
 10168                           postinc2	equ	0xFDE
 10169                           postdec2	equ	0xFDD
 10170                           fsr2h	equ	0xFDA
 10171                           fsr2l	equ	0xFD9
 10172                           status	equ	0xFD8
 10173                           
 10174 ;; *************** function _EnableSensorLEDS *****************
 10175 ;; Defined at:
 10176 ;;		line 440 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;		None
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;		None               void
 10183 ;; Registers used:
 10184 ;;		wreg, status,2
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;Total ram usage:        0 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    7
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_main
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text75
 10205  00480E                     __ptext75:
 10206                           	opt stack 0
 10207  00480E                     _EnableSensorLEDS:
 10208                           	opt stack 23
 10209                           
 10210                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 442: LATE = 0x1F;
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;incstack = 0
 10214  00480E  0E1F               	movlw	31
 10215  004810  6E8D               	movwf	3981,c	;volatile
 10216  004812  0012               	return		;funcret
 10217  004814                     __end_of_EnableSensorLEDS:
 10218                           	opt stack 0
 10219                           prodh	equ	0xFF4
 10220                           prodl	equ	0xFF3
 10221                           intcon	equ	0xFF2
 10222                           intcon2	equ	0xFF1
 10223                           intcon3	equ	0xFF0
 10224                           postinc0	equ	0xFEE
 10225                           wreg	equ	0xFE8
 10226                           indf2	equ	0xFDF
 10227                           postinc2	equ	0xFDE
 10228                           postdec2	equ	0xFDD
 10229                           fsr2h	equ	0xFDA
 10230                           fsr2l	equ	0xFD9
 10231                           status	equ	0xFD8
 10232                           
 10233 ;; *************** function _EnableMotors *****************
 10234 ;; Defined at:
 10235 ;;		line 102 in file "Motors.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;		None
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;		None
 10240 ;; Return value:  Size  Location     Type
 10241 ;;		None               void
 10242 ;; Registers used:
 10243 ;;		None
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10253 ;;Total ram usage:        0 bytes
 10254 ;; Hardware stack levels used:    1
 10255 ;; Hardware stack levels required when called:    7
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		_main
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           	psect	text76
 10264  004820                     __ptext76:
 10265                           	opt stack 0
 10266  004820                     _EnableMotors:
 10267                           	opt stack 23
 10268                           
 10269                           ;Motors.c: 104: LATDbits.LATD4 = 1;
 10270                           
 10271                           ;incstack = 0
 10272  004820  888C               	bsf	3980,4,c	;volatile
 10273  004822  0012               	return		;funcret
 10274  004824                     __end_of_EnableMotors:
 10275                           	opt stack 0
 10276                           prodh	equ	0xFF4
 10277                           prodl	equ	0xFF3
 10278                           intcon	equ	0xFF2
 10279                           intcon2	equ	0xFF1
 10280                           intcon3	equ	0xFF0
 10281                           postinc0	equ	0xFEE
 10282                           wreg	equ	0xFE8
 10283                           indf2	equ	0xFDF
 10284                           postinc2	equ	0xFDE
 10285                           postdec2	equ	0xFDD
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290 ;; *************** function _DisableMotors *****************
 10291 ;; Defined at:
 10292 ;;		line 108 in file "Motors.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;		None               void
 10299 ;; Registers used:
 10300 ;;		None
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    7
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_main
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text77
 10321  004824                     __ptext77:
 10322                           	opt stack 0
 10323  004824                     _DisableMotors:
 10324                           	opt stack 23
 10325                           
 10326                           ;Motors.c: 110: LATDbits.LATD4 = 0;
 10327                           
 10328                           ;incstack = 0
 10329  004824  988C               	bcf	3980,4,c	;volatile
 10330  004826  0012               	return		;funcret
 10331  004828                     __end_of_DisableMotors:
 10332                           	opt stack 0
 10333                           prodh	equ	0xFF4
 10334                           prodl	equ	0xFF3
 10335                           intcon	equ	0xFF2
 10336                           intcon2	equ	0xFF1
 10337                           intcon3	equ	0xFF0
 10338                           postinc0	equ	0xFEE
 10339                           wreg	equ	0xFE8
 10340                           indf2	equ	0xFDF
 10341                           postinc2	equ	0xFDE
 10342                           postdec2	equ	0xFDD
 10343                           fsr2h	equ	0xFDA
 10344                           fsr2l	equ	0xFD9
 10345                           status	equ	0xFD8
 10346                           
 10347 ;; *************** function _Delay1KTCYx *****************
 10348 ;; Defined at:
 10349 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;  unit            1    wreg     unsigned char 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  unit            1   16[BANK0 ] unsigned char 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;		None               void
 10356 ;; Registers used:
 10357 ;;		wreg
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;Total ram usage:        1 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    7
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_main
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text78
 10378  0045FE                     __ptext78:
 10379                           	opt stack 0
 10380  0045FE                     _Delay1KTCYx:
 10381                           	opt stack 23
 10382                           
 10383                           ;incstack = 0
 10384                           ;Delay1KTCYx@unit stored from wreg
 10385  0045FE  0100               	movlb	0	; () banked
 10386  004600  6F70               	movwf	Delay1KTCYx@unit& (0+255),b
 10387  004602                     
 10388                           ; BSR set to: 0
 10389  004602  0EFA               	movlw	250
 10390  004604                     u8797:
 10391  004604  F000               	nop	
 10392  004606  2EE8               	decfsz	wreg,f,c
 10393  004608  D7FD               	goto	u8797
 10394  00460A  0100               	movlb	0	; () banked
 10395  00460C  2F70               	decfsz	Delay1KTCYx@unit& (0+255),f,b
 10396  00460E  D7F9               	goto	l8028
 10397  004610  D000               	goto	l1463
 10398  004612                     l1463:
 10399                           
 10400                           ; BSR set to: 0
 10401  004612  0012               	return		;funcret
 10402  004614                     __end_of_Delay1KTCYx:
 10403                           	opt stack 0
 10404                           prodh	equ	0xFF4
 10405                           prodl	equ	0xFF3
 10406                           intcon	equ	0xFF2
 10407                           intcon2	equ	0xFF1
 10408                           intcon3	equ	0xFF0
 10409                           postinc0	equ	0xFEE
 10410                           wreg	equ	0xFE8
 10411                           indf2	equ	0xFDF
 10412                           postinc2	equ	0xFDE
 10413                           postdec2	equ	0xFDD
 10414                           fsr2h	equ	0xFDA
 10415                           fsr2l	equ	0xFD9
 10416                           status	equ	0xFD8
 10417                           
 10418 ;; *************** function _ConfigureWireless *****************
 10419 ;; Defined at:
 10420 ;;		line 114 in file "Wireless.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;		None
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;		None
 10425 ;; Return value:  Size  Location     Type
 10426 ;;		None               void
 10427 ;; Registers used:
 10428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10438 ;;Total ram usage:        0 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    8
 10441 ;; This function calls:
 10442 ;;		_FlushRxBuf
 10443 ;;		_FlushTxBuf
 10444 ;;		_Open1USART
 10445 ;; This function is called by:
 10446 ;;		_main
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text79
 10451  00457E                     __ptext79:
 10452                           	opt stack 0
 10453  00457E                     _ConfigureWireless:
 10454                           	opt stack 22
 10455                           
 10456                           ;Wireless.c: 116: Open1USART(0b01111111
 10457                           ;Wireless.c: 117: & 0b10111111
 10458                           ;Wireless.c: 118: & 0b11111110
 10459                           ;Wireless.c: 119: & 0b11111101
 10460                           ;Wireless.c: 120: & 0b11111111
 10461                           ;Wireless.c: 121: & 0b11111111,
 10462                           ;Wireless.c: 122: 64);
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;incstack = 0
 10466  00457E  0E00               	movlw	0
 10467  004580  0100               	movlb	0	; () banked
 10468  004582  6F71               	movwf	(Open1USART@spbrg+1)& (0+255),b
 10469  004584  0E40               	movlw	64
 10470  004586  6F70               	movwf	Open1USART@spbrg& (0+255),b
 10471  004588  0E3C               	movlw	60
 10472  00458A  EC86  F01A         	call	_Open1USART
 10473                           
 10474                           ;Wireless.c: 124: FlushTxBuf();
 10475  00458E  ECC5  F020         	call	_FlushTxBuf	;wreg free
 10476                           
 10477                           ;Wireless.c: 125: FlushRxBuf();
 10478  004592  ECE0  F020         	call	_FlushRxBuf	;wreg free
 10479                           
 10480                           ;Wireless.c: 127: Tx_complete = 1;
 10481  004596  0E01               	movlw	1
 10482  004598  6E18               	movwf	_Tx_complete,c
 10483  00459A  0012               	return		;funcret
 10484  00459C                     __end_of_ConfigureWireless:
 10485                           	opt stack 0
 10486                           prodh	equ	0xFF4
 10487                           prodl	equ	0xFF3
 10488                           intcon	equ	0xFF2
 10489                           intcon2	equ	0xFF1
 10490                           intcon3	equ	0xFF0
 10491                           postinc0	equ	0xFEE
 10492                           wreg	equ	0xFE8
 10493                           indf2	equ	0xFDF
 10494                           postinc2	equ	0xFDE
 10495                           postdec2	equ	0xFDD
 10496                           fsr2h	equ	0xFDA
 10497                           fsr2l	equ	0xFD9
 10498                           status	equ	0xFD8
 10499                           
 10500 ;; *************** function _Open1USART *****************
 10501 ;; Defined at:
 10502 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  config          1    wreg     unsigned char 
 10505 ;;  spbrg           2   16[BANK0 ] unsigned int 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  config          1   18[BANK0 ] unsigned char 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;		None               void
 10510 ;; Registers used:
 10511 ;;		wreg, status,2
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;Total ram usage:        3 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; Hardware stack levels required when called:    7
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		_ConfigureWireless
 10528 ;;		_ConfigureSerial
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text80
 10533  00350C                     __ptext80:
 10534                           	opt stack 0
 10535  00350C                     _Open1USART:
 10536                           	opt stack 22
 10537                           
 10538                           ;incstack = 0
 10539                           ;Open1USART@config stored from wreg
 10540  00350C  0100               	movlb	0	; () banked
 10541  00350E  6F72               	movwf	Open1USART@config& (0+255),b
 10542                           
 10543                           ; BSR set to: 0
 10544  003510  0E00               	movlw	0
 10545  003512  6EAC               	movwf	4012,c	;volatile
 10546  003514  0E00               	movlw	0
 10547  003516  6EAB               	movwf	4011,c	;volatile
 10548                           
 10549                           ; BSR set to: 0
 10550  003518  0100               	movlb	0	; () banked
 10551  00351A  A172               	btfss	Open1USART@config& (0+255),0,b
 10552  00351C  D002               	goto	l7438
 10553                           
 10554                           ; BSR set to: 0
 10555  00351E  88AC               	bsf	4012,4,c	;volatile
 10556  003520  D000               	goto	l7438
 10557  003522                     l7438:
 10558                           
 10559                           ; BSR set to: 0
 10560  003522  0100               	movlb	0	; () banked
 10561  003524  A372               	btfss	Open1USART@config& (0+255),1,b
 10562  003526  D003               	goto	l7442
 10563                           
 10564                           ; BSR set to: 0
 10565  003528  8CAC               	bsf	4012,6,c	;volatile
 10566  00352A  8CAB               	bsf	4011,6,c	;volatile
 10567  00352C  D000               	goto	l7442
 10568  00352E                     l7442:
 10569                           
 10570                           ; BSR set to: 0
 10571  00352E  0100               	movlb	0	; () banked
 10572  003530  A572               	btfss	Open1USART@config& (0+255),2,b
 10573  003532  D002               	goto	l7446
 10574                           
 10575                           ; BSR set to: 0
 10576  003534  8EAC               	bsf	4012,7,c	;volatile
 10577  003536  D000               	goto	l7446
 10578  003538                     l7446:
 10579                           
 10580                           ; BSR set to: 0
 10581  003538  0100               	movlb	0	; () banked
 10582  00353A  A772               	btfss	Open1USART@config& (0+255),3,b
 10583  00353C  D002               	goto	l1195
 10584                           
 10585                           ; BSR set to: 0
 10586  00353E  88AB               	bsf	4011,4,c	;volatile
 10587  003540  D002               	goto	l7450
 10588  003542                     l1195:
 10589                           
 10590                           ; BSR set to: 0
 10591  003542  8AAB               	bsf	4011,5,c	;volatile
 10592  003544  D000               	goto	l7450
 10593  003546                     l7450:
 10594                           
 10595                           ; BSR set to: 0
 10596  003546  0100               	movlb	0	; () banked
 10597  003548  A972               	btfss	Open1USART@config& (0+255),4,b
 10598  00354A  D002               	goto	l7454
 10599                           
 10600                           ; BSR set to: 0
 10601  00354C  84AC               	bsf	4012,2,c	;volatile
 10602  00354E  D000               	goto	l7454
 10603  003550                     l7454:
 10604                           
 10605                           ; BSR set to: 0
 10606  003550  0100               	movlb	0	; () banked
 10607  003552  AB72               	btfss	Open1USART@config& (0+255),5,b
 10608  003554  D002               	goto	l7458
 10609                           
 10610                           ; BSR set to: 0
 10611  003556  86AB               	bsf	4011,3,c	;volatile
 10612  003558  D000               	goto	l7458
 10613  00355A                     l7458:
 10614                           
 10615                           ; BSR set to: 0
 10616  00355A  0100               	movlb	0	; () banked
 10617  00355C  AD72               	btfss	Open1USART@config& (0+255),6,b
 10618  00355E  D002               	goto	l1199
 10619                           
 10620                           ; BSR set to: 0
 10621  003560  8A9D               	bsf	3997,5,c	;volatile
 10622  003562  D002               	goto	l7462
 10623  003564                     l1199:
 10624                           
 10625                           ; BSR set to: 0
 10626  003564  9A9D               	bcf	3997,5,c	;volatile
 10627  003566  D000               	goto	l7462
 10628  003568                     l7462:
 10629                           
 10630                           ; BSR set to: 0
 10631  003568  0100               	movlb	0	; () banked
 10632  00356A  AF72               	btfss	Open1USART@config& (0+255),7,b
 10633  00356C  D002               	goto	l1201
 10634                           
 10635                           ; BSR set to: 0
 10636  00356E  889D               	bsf	3997,4,c	;volatile
 10637  003570  D001               	goto	l1202
 10638  003572                     l1201:
 10639                           
 10640                           ; BSR set to: 0
 10641  003572  989D               	bcf	3997,4,c	;volatile
 10642  003574                     l1202:
 10643                           
 10644                           ; BSR set to: 0
 10645  003574  C070  FFAF         	movff	Open1USART@spbrg,4015	;volatile
 10646                           
 10647                           ; BSR set to: 0
 10648  003578  0100               	movlb	0	; () banked
 10649  00357A  5171               	movf	(Open1USART@spbrg+1)& (0+255),w,b
 10650  00357C  6E7F               	movwf	3967,c	;volatile
 10651                           
 10652                           ; BSR set to: 0
 10653  00357E  8AAC               	bsf	4012,5,c	;volatile
 10654                           
 10655                           ; BSR set to: 0
 10656  003580  8EAB               	bsf	4011,7,c	;volatile
 10657                           
 10658                           ; BSR set to: 0
 10659  003582  9C94               	bcf	3988,6,c	;volatile
 10660                           
 10661                           ; BSR set to: 0
 10662  003584  8E94               	bsf	3988,7,c	;volatile
 10663                           
 10664                           ; BSR set to: 0
 10665  003586  B8AC               	btfsc	4012,4,c	;volatile
 10666                           
 10667                           ; BSR set to: 0
 10668  003588  BEAC               	btfsc	4012,7,c	;volatile
 10669  00358A  D002               	goto	l1204
 10670                           
 10671                           ; BSR set to: 0
 10672  00358C  8C94               	bsf	3988,6,c	;volatile
 10673  00358E  D000               	goto	l1204
 10674  003590                     l1204:
 10675                           
 10676                           ; BSR set to: 0
 10677  003590  0012               	return		;funcret
 10678  003592                     __end_of_Open1USART:
 10679                           	opt stack 0
 10680                           prodh	equ	0xFF4
 10681                           prodl	equ	0xFF3
 10682                           intcon	equ	0xFF2
 10683                           intcon2	equ	0xFF1
 10684                           intcon3	equ	0xFF0
 10685                           postinc0	equ	0xFEE
 10686                           wreg	equ	0xFE8
 10687                           indf2	equ	0xFDF
 10688                           postinc2	equ	0xFDE
 10689                           postdec2	equ	0xFDD
 10690                           fsr2h	equ	0xFDA
 10691                           fsr2l	equ	0xFD9
 10692                           status	equ	0xFD8
 10693                           
 10694 ;; *************** function _FlushTxBuf *****************
 10695 ;; Defined at:
 10696 ;;		line 90 in file "Wireless.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;		None
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;  index           1   16[BANK0 ] unsigned char 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;		None               void
 10703 ;; Registers used:
 10704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;Total ram usage:        1 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:    7
 10717 ;; This function calls:
 10718 ;;		Nothing
 10719 ;; This function is called by:
 10720 ;;		_ConfigureWireless
 10721 ;;		_SendStatus
 10722 ;;		_SendLineMode
 10723 ;;		_SendOffsets
 10724 ;;		_SendThreshold
 10725 ;;		_SendDefaultPIDValues
 10726 ;;		_SendStoredPIDValues
 10727 ;;		_SendCurrentPIDValues
 10728 ;;		_SendBattVoltageInitial
 10729 ;;		_SendBattVoltage
 10730 ;;		_SendBattCurrent
 10731 ;;		_SendBattCurrentAcc
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text81
 10736  00418A                     __ptext81:
 10737                           	opt stack 0
 10738  00418A                     _FlushTxBuf:
 10739                           	opt stack 21
 10740                           
 10741                           ;Wireless.c: 91: unsigned char index;
 10742                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;incstack = 0
 10746  00418A  0E00               	movlw	0
 10747  00418C  0100               	movlb	0	; () banked
 10748  00418E  6F70               	movwf	FlushTxBuf@index& (0+255),b
 10749  004190                     l6914:
 10750                           
 10751                           ; BSR set to: 0
 10752  004190  0E18               	movlw	24
 10753  004192  0100               	movlb	0	; () banked
 10754  004194  6570               	cpfsgt	FlushTxBuf@index& (0+255),b
 10755  004196  D001               	goto	l6918
 10756                           
 10757                           ; BSR set to: 0
 10758  004198  D00E               	goto	l6924
 10759  00419A                     l6918:
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;Wireless.c: 94: Tx_buffer[index] = 0;
 10763  00419A  0100               	movlb	0	; () banked
 10764  00419C  5170               	movf	FlushTxBuf@index& (0+255),w,b
 10765  00419E  0D01               	mullw	1
 10766  0041A0  0E19               	movlw	low _Tx_buffer
 10767  0041A2  24F3               	addwf	prodl,w,c
 10768  0041A4  6ED9               	movwf	fsr2l,c
 10769  0041A6  0E01               	movlw	high _Tx_buffer
 10770  0041A8  20F4               	addwfc	prodh,w,c
 10771  0041AA  6EDA               	movwf	fsr2h,c
 10772  0041AC  0E00               	movlw	0
 10773  0041AE  6EDF               	movwf	indf2,c
 10774                           
 10775                           ; BSR set to: 0
 10776  0041B0  0100               	movlb	0	; () banked
 10777  0041B2  2B70               	incf	FlushTxBuf@index& (0+255),f,b
 10778  0041B4  D7ED               	goto	l6914
 10779  0041B6                     l6924:
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;Wireless.c: 95: }
 10783                           ;Wireless.c: 97: put_Tx_index = 0;
 10784  0041B6  0E00               	movlw	0
 10785  0041B8  6E1E               	movwf	_put_Tx_index,c
 10786                           
 10787                           ;Wireless.c: 98: get_Tx_index = 0;
 10788  0041BA  0E00               	movlw	0
 10789  0041BC  6E1C               	movwf	_get_Tx_index,c
 10790                           
 10791                           ; BSR set to: 0
 10792  0041BE  0012               	return		;funcret
 10793  0041C0                     __end_of_FlushTxBuf:
 10794                           	opt stack 0
 10795                           prodh	equ	0xFF4
 10796                           prodl	equ	0xFF3
 10797                           intcon	equ	0xFF2
 10798                           intcon2	equ	0xFF1
 10799                           intcon3	equ	0xFF0
 10800                           postinc0	equ	0xFEE
 10801                           wreg	equ	0xFE8
 10802                           indf2	equ	0xFDF
 10803                           postinc2	equ	0xFDE
 10804                           postdec2	equ	0xFDD
 10805                           fsr2h	equ	0xFDA
 10806                           fsr2l	equ	0xFD9
 10807                           status	equ	0xFD8
 10808                           
 10809 ;; *************** function _FlushRxBuf *****************
 10810 ;; Defined at:
 10811 ;;		line 102 in file "Wireless.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;		None
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;  index           1   16[BANK0 ] unsigned char 
 10816 ;; Return value:  Size  Location     Type
 10817 ;;		None               void
 10818 ;; Registers used:
 10819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;Total ram usage:        1 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; Hardware stack levels required when called:    7
 10832 ;; This function calls:
 10833 ;;		Nothing
 10834 ;; This function is called by:
 10835 ;;		_SetPIDValues
 10836 ;;		_ConfigureWireless
 10837 ;;		_ReceiveCommandsEnable
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text82
 10842  0041C0                     __ptext82:
 10843                           	opt stack 0
 10844  0041C0                     _FlushRxBuf:
 10845                           	opt stack 22
 10846                           
 10847                           ;Wireless.c: 103: unsigned char index;
 10848                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;incstack = 0
 10852  0041C0  0E00               	movlw	0
 10853  0041C2  0100               	movlb	0	; () banked
 10854  0041C4  6F70               	movwf	FlushRxBuf@index& (0+255),b
 10855  0041C6                     l7194:
 10856                           
 10857                           ; BSR set to: 0
 10858  0041C6  0E18               	movlw	24
 10859  0041C8  0100               	movlb	0	; () banked
 10860  0041CA  6570               	cpfsgt	FlushRxBuf@index& (0+255),b
 10861  0041CC  D001               	goto	l7198
 10862                           
 10863                           ; BSR set to: 0
 10864  0041CE  D00E               	goto	l7204
 10865  0041D0                     l7198:
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10869  0041D0  0100               	movlb	0	; () banked
 10870  0041D2  5170               	movf	FlushRxBuf@index& (0+255),w,b
 10871  0041D4  0D01               	mullw	1
 10872  0041D6  0E00               	movlw	low _Rx_buffer
 10873  0041D8  24F3               	addwf	prodl,w,c
 10874  0041DA  6ED9               	movwf	fsr2l,c
 10875  0041DC  0E01               	movlw	high _Rx_buffer
 10876  0041DE  20F4               	addwfc	prodh,w,c
 10877  0041E0  6EDA               	movwf	fsr2h,c
 10878  0041E2  0E00               	movlw	0
 10879  0041E4  6EDF               	movwf	indf2,c
 10880                           
 10881                           ; BSR set to: 0
 10882  0041E6  0100               	movlb	0	; () banked
 10883  0041E8  2B70               	incf	FlushRxBuf@index& (0+255),f,b
 10884  0041EA  D7ED               	goto	l7194
 10885  0041EC                     l7204:
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;Wireless.c: 107: }
 10889                           ;Wireless.c: 109: put_Rx_index = 0;
 10890  0041EC  0E00               	movlw	0
 10891  0041EE  6E1D               	movwf	_put_Rx_index,c
 10892                           
 10893                           ;Wireless.c: 110: get_Rx_index = 0;
 10894  0041F0  0E00               	movlw	0
 10895  0041F2  6E1B               	movwf	_get_Rx_index,c
 10896                           
 10897                           ; BSR set to: 0
 10898  0041F4  0012               	return		;funcret
 10899  0041F6                     __end_of_FlushRxBuf:
 10900                           	opt stack 0
 10901                           prodh	equ	0xFF4
 10902                           prodl	equ	0xFF3
 10903                           intcon	equ	0xFF2
 10904                           intcon2	equ	0xFF1
 10905                           intcon3	equ	0xFF0
 10906                           postinc0	equ	0xFEE
 10907                           wreg	equ	0xFE8
 10908                           indf2	equ	0xFDF
 10909                           postinc2	equ	0xFDE
 10910                           postdec2	equ	0xFDD
 10911                           fsr2h	equ	0xFDA
 10912                           fsr2l	equ	0xFD9
 10913                           status	equ	0xFD8
 10914                           
 10915 ;; *************** function _ConfigureUltrasound *****************
 10916 ;; Defined at:
 10917 ;;		line 9 in file "Ultrasound.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  echo_to_cm      3   20[BANK0 ] float 
 10920 ;;  echo_to_in      3   23[BANK0 ] float 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;		None               void
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10932 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;Total ram usage:        6 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    8
 10939 ;; This function calls:
 10940 ;;		_WriteTimer1
 10941 ;; This function is called by:
 10942 ;;		_main
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text83
 10947  0043F4                     __ptext83:
 10948                           	opt stack 0
 10949  0043F4                     _ConfigureUltrasound:
 10950                           	opt stack 22
 10951                           
 10952                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;incstack = 0
 10956  0043F4  C074  F0EB         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10957  0043F8  C075  F0EC         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10958  0043FC  C076  F0ED         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10959                           
 10960                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10961  004400  C077  F164         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10962  004404  C078  F165         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10963  004408  C079  F166         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10964                           
 10965                           ;Ultrasound.c: 12: WriteTimer1(0);
 10966  00440C  0E00               	movlw	0
 10967  00440E  0100               	movlb	0	; () banked
 10968  004410  6F71               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10969  004412  0E00               	movlw	0
 10970  004414  6F70               	movwf	WriteTimer1@timer1& (0+255),b
 10971  004416  EC52  F023         	call	_WriteTimer1	;wreg free
 10972  00441A  0012               	return		;funcret
 10973  00441C                     __end_of_ConfigureUltrasound:
 10974                           	opt stack 0
 10975                           prodh	equ	0xFF4
 10976                           prodl	equ	0xFF3
 10977                           intcon	equ	0xFF2
 10978                           intcon2	equ	0xFF1
 10979                           intcon3	equ	0xFF0
 10980                           postinc0	equ	0xFEE
 10981                           wreg	equ	0xFE8
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           postdec2	equ	0xFDD
 10985                           fsr2h	equ	0xFDA
 10986                           fsr2l	equ	0xFD9
 10987                           status	equ	0xFD8
 10988                           
 10989 ;; *************** function _ConfigureTimer2 *****************
 10990 ;; Defined at:
 10991 ;;		line 170 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;		None               void
 10998 ;; Registers used:
 10999 ;;		wreg, status,2, status,0, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;Total ram usage:        0 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:    8
 11012 ;; This function calls:
 11013 ;;		_OpenTimer2
 11014 ;; This function is called by:
 11015 ;;		_main
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           	psect	text84
 11020  0047FA                     __ptext84:
 11021                           	opt stack 0
 11022  0047FA                     _ConfigureTimer2:
 11023                           	opt stack 22
 11024                           
 11025                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 172: OpenTimer2(0b01111111
 11026                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 173: & 0b11111100
 11027                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 174: & 0b10000111
 11028                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 175: & 0b10110111);
 11029                           
 11030                           ;incstack = 0
 11031  0047FA  0E04               	movlw	4
 11032  0047FC  EC81  F022         	call	_OpenTimer2
 11033  004800  0012               	return		;funcret
 11034  004802                     __end_of_ConfigureTimer2:
 11035                           	opt stack 0
 11036                           prodh	equ	0xFF4
 11037                           prodl	equ	0xFF3
 11038                           intcon	equ	0xFF2
 11039                           intcon2	equ	0xFF1
 11040                           intcon3	equ	0xFF0
 11041                           postinc0	equ	0xFEE
 11042                           wreg	equ	0xFE8
 11043                           indf2	equ	0xFDF
 11044                           postinc2	equ	0xFDE
 11045                           postdec2	equ	0xFDD
 11046                           fsr2h	equ	0xFDA
 11047                           fsr2l	equ	0xFD9
 11048                           status	equ	0xFD8
 11049                           
 11050 ;; *************** function _OpenTimer2 *****************
 11051 ;; Defined at:
 11052 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  config          1    wreg     unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  config          1   16[BANK0 ] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;		None               void
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;Total ram usage:        1 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    7
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_ConfigureTimer2
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text85
 11081  004502                     __ptext85:
 11082                           	opt stack 0
 11083  004502                     _OpenTimer2:
 11084                           	opt stack 22
 11085                           
 11086                           ;incstack = 0
 11087                           ;OpenTimer2@config stored from wreg
 11088  004502  0100               	movlb	0	; () banked
 11089  004504  6F70               	movwf	OpenTimer2@config& (0+255),b
 11090                           
 11091                           ; BSR set to: 0
 11092  004506  0100               	movlb	0	; () banked
 11093  004508  5170               	movf	OpenTimer2@config& (0+255),w,b
 11094  00450A  0BFB               	andlw	251
 11095  00450C  6ECA               	movwf	4042,c	;volatile
 11096                           
 11097                           ; BSR set to: 0
 11098  00450E  0E00               	movlw	0
 11099  004510  6ECC               	movwf	4044,c	;volatile
 11100                           
 11101                           ; BSR set to: 0
 11102  004512  929E               	bcf	3998,1,c	;volatile
 11103                           
 11104                           ; BSR set to: 0
 11105  004514  0100               	movlb	0	; () banked
 11106  004516  AF70               	btfss	OpenTimer2@config& (0+255),7,b
 11107  004518  D002               	goto	l1171
 11108                           
 11109                           ; BSR set to: 0
 11110  00451A  829D               	bsf	3997,1,c	;volatile
 11111  00451C  D001               	goto	l1172
 11112  00451E                     l1171:
 11113                           
 11114                           ; BSR set to: 0
 11115  00451E  929D               	bcf	3997,1,c	;volatile
 11116  004520                     l1172:
 11117                           
 11118                           ; BSR set to: 0
 11119  004520  84CA               	bsf	4042,2,c	;volatile
 11120                           
 11121                           ; BSR set to: 0
 11122  004522  0012               	return		;funcret
 11123  004524                     __end_of_OpenTimer2:
 11124                           	opt stack 0
 11125                           prodh	equ	0xFF4
 11126                           prodl	equ	0xFF3
 11127                           intcon	equ	0xFF2
 11128                           intcon2	equ	0xFF1
 11129                           intcon3	equ	0xFF0
 11130                           postinc0	equ	0xFEE
 11131                           wreg	equ	0xFE8
 11132                           indf2	equ	0xFDF
 11133                           postinc2	equ	0xFDE
 11134                           postdec2	equ	0xFDD
 11135                           fsr2h	equ	0xFDA
 11136                           fsr2l	equ	0xFD9
 11137                           status	equ	0xFD8
 11138                           
 11139 ;; *************** function _ConfigureTimer1 *****************
 11140 ;; Defined at:
 11141 ;;		line 152 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;		None
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;		None               void
 11148 ;; Registers used:
 11149 ;;		wreg, status,2, status,0, cstack
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11159 ;;Total ram usage:        0 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    8
 11162 ;; This function calls:
 11163 ;;		_OpenTimer1
 11164 ;;		_WriteTimer1
 11165 ;; This function is called by:
 11166 ;;		_main
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           	psect	text86
 11171  0045D0                     __ptext86:
 11172                           	opt stack 0
 11173  0045D0                     _ConfigureTimer1:
 11174                           	opt stack 22
 11175                           
 11176                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 154: OpenTimer1(0b01111111
 11177                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 155: & 0b11111111
 11178                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 156: & 0b11111101
 11179                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 157: & 0b11011111
 11180                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 158: & 0b11110111
 11181                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 159: & 0b11111111);
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;incstack = 0
 11185  0045D0  0E55               	movlw	85
 11186  0045D2  ECFB  F020         	call	_OpenTimer1
 11187                           
 11188                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 163: T1CONbits.TMR1ON = 0;
 11189  0045D6  90CD               	bcf	4045,0,c	;volatile
 11190                           
 11191                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 165: WriteTimer1(0);
 11192  0045D8  0E00               	movlw	0
 11193  0045DA  0100               	movlb	0	; () banked
 11194  0045DC  6F71               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 11195  0045DE  0E00               	movlw	0
 11196  0045E0  6F70               	movwf	WriteTimer1@timer1& (0+255),b
 11197  0045E2  EC52  F023         	call	_WriteTimer1	;wreg free
 11198  0045E6  0012               	return		;funcret
 11199  0045E8                     __end_of_ConfigureTimer1:
 11200                           	opt stack 0
 11201                           prodh	equ	0xFF4
 11202                           prodl	equ	0xFF3
 11203                           intcon	equ	0xFF2
 11204                           intcon2	equ	0xFF1
 11205                           intcon3	equ	0xFF0
 11206                           postinc0	equ	0xFEE
 11207                           wreg	equ	0xFE8
 11208                           indf2	equ	0xFDF
 11209                           postinc2	equ	0xFDE
 11210                           postdec2	equ	0xFDD
 11211                           fsr2h	equ	0xFDA
 11212                           fsr2l	equ	0xFD9
 11213                           status	equ	0xFD8
 11214                           
 11215 ;; *************** function _WriteTimer1 *****************
 11216 ;; Defined at:
 11217 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;  timer1          2   16[BANK0 ] unsigned int 
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;  timer           2   18[BANK0 ] struct Timers
 11222 ;; Return value:  Size  Location     Type
 11223 ;;		None               void
 11224 ;; Registers used:
 11225 ;;		None
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;Total ram usage:        4 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    7
 11238 ;; This function calls:
 11239 ;;		Nothing
 11240 ;; This function is called by:
 11241 ;;		_ConfigureTimer1
 11242 ;;		_ConfigureUltrasound
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text87
 11247  0046A4                     __ptext87:
 11248                           	opt stack 0
 11249  0046A4                     _WriteTimer1:
 11250                           	opt stack 22
 11251                           
 11252                           ;incstack = 0
 11253  0046A4  C070  F072         	movff	WriteTimer1@timer1,WriteTimer1@timer
 11254  0046A8  C071  F073         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 11255  0046AC  C073  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 11256  0046B0  C072  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 11257  0046B4  0012               	return		;funcret
 11258  0046B6                     __end_of_WriteTimer1:
 11259                           	opt stack 0
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           intcon	equ	0xFF2
 11263                           intcon2	equ	0xFF1
 11264                           intcon3	equ	0xFF0
 11265                           postinc0	equ	0xFEE
 11266                           wreg	equ	0xFE8
 11267                           indf2	equ	0xFDF
 11268                           postinc2	equ	0xFDE
 11269                           postdec2	equ	0xFDD
 11270                           fsr2h	equ	0xFDA
 11271                           fsr2l	equ	0xFD9
 11272                           status	equ	0xFD8
 11273                           
 11274 ;; *************** function _OpenTimer1 *****************
 11275 ;; Defined at:
 11276 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;  config          1    wreg     unsigned char 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  config          1   16[BANK0 ] unsigned char 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;		None               void
 11283 ;; Registers used:
 11284 ;;		wreg, status,2, status,0
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11293 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;Total ram usage:        1 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    7
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_ConfigureTimer1
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text88
 11305  0041F6                     __ptext88:
 11306                           	opt stack 0
 11307  0041F6                     _OpenTimer1:
 11308                           	opt stack 22
 11309                           
 11310                           ;incstack = 0
 11311                           ;OpenTimer1@config stored from wreg
 11312  0041F6  0100               	movlb	0	; () banked
 11313  0041F8  6F70               	movwf	OpenTimer1@config& (0+255),b
 11314                           
 11315                           ; BSR set to: 0
 11316  0041FA  0100               	movlb	0	; () banked
 11317  0041FC  5170               	movf	OpenTimer1@config& (0+255),w,b
 11318  0041FE  0B7E               	andlw	126
 11319  004200  6ECD               	movwf	4045,c	;volatile
 11320                           
 11321                           ; BSR set to: 0
 11322  004202  0100               	movlb	0	; () banked
 11323  004204  AD70               	btfss	OpenTimer1@config& (0+255),6,b
 11324  004206  D002               	goto	l1140
 11325                           
 11326                           ; BSR set to: 0
 11327  004208  8ECD               	bsf	4045,7,c	;volatile
 11328  00420A  D002               	goto	l7364
 11329  00420C                     l1140:
 11330                           
 11331                           ; BSR set to: 0
 11332  00420C  9ECD               	bcf	4045,7,c	;volatile
 11333  00420E  D000               	goto	l7364
 11334  004210                     l7364:
 11335                           
 11336                           ; BSR set to: 0
 11337  004210  0E00               	movlw	0
 11338  004212  6ECF               	movwf	4047,c	;volatile
 11339  004214  0E00               	movlw	0
 11340  004216  6ECE               	movwf	4046,c	;volatile
 11341                           
 11342                           ; BSR set to: 0
 11343  004218  909E               	bcf	3998,0,c	;volatile
 11344                           
 11345                           ; BSR set to: 0
 11346  00421A  0100               	movlb	0	; () banked
 11347  00421C  AF70               	btfss	OpenTimer1@config& (0+255),7,b
 11348  00421E  D002               	goto	l1142
 11349                           
 11350                           ; BSR set to: 0
 11351  004220  809D               	bsf	3997,0,c	;volatile
 11352  004222  D001               	goto	l1143
 11353  004224                     l1142:
 11354                           
 11355                           ; BSR set to: 0
 11356  004224  909D               	bcf	3997,0,c	;volatile
 11357  004226                     l1143:
 11358                           
 11359                           ; BSR set to: 0
 11360  004226  80CD               	bsf	4045,0,c	;volatile
 11361                           
 11362                           ; BSR set to: 0
 11363  004228  0012               	return		;funcret
 11364  00422A                     __end_of_OpenTimer1:
 11365                           	opt stack 0
 11366                           prodh	equ	0xFF4
 11367                           prodl	equ	0xFF3
 11368                           intcon	equ	0xFF2
 11369                           intcon2	equ	0xFF1
 11370                           intcon3	equ	0xFF0
 11371                           postinc0	equ	0xFEE
 11372                           wreg	equ	0xFE8
 11373                           indf2	equ	0xFDF
 11374                           postinc2	equ	0xFDE
 11375                           postdec2	equ	0xFDD
 11376                           fsr2h	equ	0xFDA
 11377                           fsr2l	equ	0xFD9
 11378                           status	equ	0xFD8
 11379                           
 11380 ;; *************** function _ConfigureTimer0 *****************
 11381 ;; Defined at:
 11382 ;;		line 138 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;		None
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;		None               void
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;Total ram usage:        0 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    8
 11403 ;; This function calls:
 11404 ;;		_OpenTimer0
 11405 ;;		_WriteTimer0
 11406 ;; This function is called by:
 11407 ;;		_main
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text89
 11412  004614                     __ptext89:
 11413                           	opt stack 0
 11414  004614                     _ConfigureTimer0:
 11415                           	opt stack 22
 11416                           
 11417                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 140: OpenTimer0(0b11111111
 11418                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 141: & 0b10111111
 11419                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 142: & 0b11011111
 11420                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 143: & 0b11111111);
 11421                           
 11422                           ; BSR set to: 0
 11423                           ;incstack = 0
 11424  004614  0E9F               	movlw	159
 11425  004616  EC35  F022         	call	_OpenTimer0
 11426                           
 11427                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 147: WriteTimer0(63036);
 11428  00461A  0EF6               	movlw	246
 11429  00461C  0100               	movlb	0	; () banked
 11430  00461E  6F71               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 11431  004620  0E3C               	movlw	60
 11432  004622  6F70               	movwf	WriteTimer0@timer0& (0+255),b
 11433  004624  EC5B  F023         	call	_WriteTimer0	;wreg free
 11434  004628  0012               	return		;funcret
 11435  00462A                     __end_of_ConfigureTimer0:
 11436                           	opt stack 0
 11437                           prodh	equ	0xFF4
 11438                           prodl	equ	0xFF3
 11439                           intcon	equ	0xFF2
 11440                           intcon2	equ	0xFF1
 11441                           intcon3	equ	0xFF0
 11442                           postinc0	equ	0xFEE
 11443                           wreg	equ	0xFE8
 11444                           indf2	equ	0xFDF
 11445                           postinc2	equ	0xFDE
 11446                           postdec2	equ	0xFDD
 11447                           fsr2h	equ	0xFDA
 11448                           fsr2l	equ	0xFD9
 11449                           status	equ	0xFD8
 11450                           
 11451 ;; *************** function _WriteTimer0 *****************
 11452 ;; Defined at:
 11453 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  timer0          2   16[BANK0 ] unsigned int 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;  timer           2   18[BANK0 ] struct Timers
 11458 ;; Return value:  Size  Location     Type
 11459 ;;		None               void
 11460 ;; Registers used:
 11461 ;;		None
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;Total ram usage:        4 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    7
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_ConfigureTimer0
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           	psect	text90
 11482  0046B6                     __ptext90:
 11483                           	opt stack 0
 11484  0046B6                     _WriteTimer0:
 11485                           	opt stack 22
 11486                           
 11487                           ;incstack = 0
 11488  0046B6  C070  F072         	movff	WriteTimer0@timer0,WriteTimer0@timer
 11489  0046BA  C071  F073         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 11490  0046BE  C073  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 11491  0046C2  C072  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 11492  0046C6  0012               	return		;funcret
 11493  0046C8                     __end_of_WriteTimer0:
 11494                           	opt stack 0
 11495                           prodh	equ	0xFF4
 11496                           prodl	equ	0xFF3
 11497                           intcon	equ	0xFF2
 11498                           intcon2	equ	0xFF1
 11499                           intcon3	equ	0xFF0
 11500                           postinc0	equ	0xFEE
 11501                           wreg	equ	0xFE8
 11502                           indf2	equ	0xFDF
 11503                           postinc2	equ	0xFDE
 11504                           postdec2	equ	0xFDD
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _OpenTimer0 *****************
 11510 ;; Defined at:
 11511 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  config          1    wreg     unsigned char 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  config          1   16[BANK0 ] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;Total ram usage:        1 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    7
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_ConfigureTimer0
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text91
 11540  00446A                     __ptext91:
 11541                           	opt stack 0
 11542  00446A                     _OpenTimer0:
 11543                           	opt stack 22
 11544                           
 11545                           ;incstack = 0
 11546                           ;OpenTimer0@config stored from wreg
 11547  00446A  0100               	movlb	0	; () banked
 11548  00446C  6F70               	movwf	OpenTimer0@config& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551  00446E  0100               	movlb	0	; () banked
 11552  004470  5170               	movf	OpenTimer0@config& (0+255),w,b
 11553  004472  0B7F               	andlw	127
 11554  004474  6ED5               	movwf	4053,c	;volatile
 11555                           
 11556                           ; BSR set to: 0
 11557  004476  0E00               	movlw	0
 11558  004478  6ED7               	movwf	4055,c	;volatile
 11559                           
 11560                           ; BSR set to: 0
 11561  00447A  0E00               	movlw	0
 11562  00447C  6ED6               	movwf	4054,c	;volatile
 11563                           
 11564                           ; BSR set to: 0
 11565  00447E  94F2               	bcf	intcon,2,c	;volatile
 11566                           
 11567                           ; BSR set to: 0
 11568  004480  0100               	movlb	0	; () banked
 11569  004482  AF70               	btfss	OpenTimer0@config& (0+255),7,b
 11570  004484  D002               	goto	l1116
 11571                           
 11572                           ; BSR set to: 0
 11573  004486  8AF2               	bsf	intcon,5,c	;volatile
 11574  004488  D001               	goto	l1117
 11575  00448A                     l1116:
 11576                           
 11577                           ; BSR set to: 0
 11578  00448A  9AF2               	bcf	intcon,5,c	;volatile
 11579  00448C                     l1117:
 11580                           
 11581                           ; BSR set to: 0
 11582  00448C  8ED5               	bsf	4053,7,c	;volatile
 11583                           
 11584                           ; BSR set to: 0
 11585  00448E  0012               	return		;funcret
 11586  004490                     __end_of_OpenTimer0:
 11587                           	opt stack 0
 11588                           prodh	equ	0xFF4
 11589                           prodl	equ	0xFF3
 11590                           intcon	equ	0xFF2
 11591                           intcon2	equ	0xFF1
 11592                           intcon3	equ	0xFF0
 11593                           postinc0	equ	0xFEE
 11594                           wreg	equ	0xFE8
 11595                           indf2	equ	0xFDF
 11596                           postinc2	equ	0xFDE
 11597                           postdec2	equ	0xFDD
 11598                           fsr2h	equ	0xFDA
 11599                           fsr2l	equ	0xFD9
 11600                           status	equ	0xFD8
 11601                           
 11602 ;; *************** function _ConfigurePWM *****************
 11603 ;; Defined at:
 11604 ;;		line 188 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;		None               void
 11611 ;; Registers used:
 11612 ;;		wreg, status,2, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11622 ;;Total ram usage:        0 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    8
 11625 ;; This function calls:
 11626 ;;		_OpenPWM4
 11627 ;;		_OpenPWM5
 11628 ;; This function is called by:
 11629 ;;		_main
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text92
 11634  004796                     __ptext92:
 11635                           	opt stack 0
 11636  004796                     _ConfigurePWM:
 11637                           	opt stack 22
 11638                           
 11639                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 190: OpenPWM4(130);
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;incstack = 0
 11643  004796  0E82               	movlw	130
 11644  004798  EC5B  F022         	call	_OpenPWM4
 11645                           
 11646                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 191: OpenPWM5(130);
 11647  00479C  0E82               	movlw	130
 11648  00479E  EC48  F022         	call	_OpenPWM5
 11649  0047A2  0012               	return		;funcret
 11650  0047A4                     __end_of_ConfigurePWM:
 11651                           	opt stack 0
 11652                           prodh	equ	0xFF4
 11653                           prodl	equ	0xFF3
 11654                           intcon	equ	0xFF2
 11655                           intcon2	equ	0xFF1
 11656                           intcon3	equ	0xFF0
 11657                           postinc0	equ	0xFEE
 11658                           wreg	equ	0xFE8
 11659                           indf2	equ	0xFDF
 11660                           postinc2	equ	0xFDE
 11661                           postdec2	equ	0xFDD
 11662                           fsr2h	equ	0xFDA
 11663                           fsr2l	equ	0xFD9
 11664                           status	equ	0xFD8
 11665                           
 11666 ;; *************** function _OpenPWM5 *****************
 11667 ;; Defined at:
 11668 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  period          1    wreg     unsigned char 
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  period          1   16[BANK0 ] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;		None               void
 11675 ;; Registers used:
 11676 ;;		wreg, status,2
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;Total ram usage:        1 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; Hardware stack levels required when called:    7
 11689 ;; This function calls:
 11690 ;;		Nothing
 11691 ;; This function is called by:
 11692 ;;		_ConfigurePWM
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text93
 11697  004490                     __ptext93:
 11698                           	opt stack 0
 11699  004490                     _OpenPWM5:
 11700                           	opt stack 22
 11701                           
 11702                           ;incstack = 0
 11703                           ;OpenPWM5@period stored from wreg
 11704  004490  0100               	movlb	0	; () banked
 11705  004492  6F70               	movwf	OpenPWM5@period& (0+255),b
 11706                           
 11707                           ; BSR set to: 0
 11708  004494  0E0C               	movlw	12
 11709  004496  6E70               	movwf	3952,c	;volatile
 11710                           
 11711                           ; BSR set to: 0
 11712  004498  ACB1               	btfss	4017,6,c	;volatile
 11713                           
 11714                           ; BSR set to: 0
 11715  00449A  B6B1               	btfsc	4017,3,c	;volatile
 11716  00449C  D005               	goto	l1094
 11717                           
 11718                           ; BSR set to: 0
 11719  00449E  94CA               	bcf	4042,2,c	;volatile
 11720                           
 11721                           ; BSR set to: 0
 11722  0044A0  C070  FFCB         	movff	OpenPWM5@period,4043	;volatile
 11723                           
 11724                           ; BSR set to: 0
 11725  0044A4  84CA               	bsf	4042,2,c	;volatile
 11726  0044A6  D005               	goto	l7418
 11727  0044A8                     l1094:
 11728                           
 11729                           ; BSR set to: 0
 11730  0044A8  9476               	bcf	3958,2,c	;volatile
 11731                           
 11732                           ; BSR set to: 0
 11733  0044AA  C070  FF77         	movff	OpenPWM5@period,3959	;volatile
 11734                           
 11735                           ; BSR set to: 0
 11736  0044AE  8476               	bsf	3958,2,c	;volatile
 11737  0044B0  D000               	goto	l7418
 11738  0044B2                     l7418:
 11739                           
 11740                           ; BSR set to: 0
 11741  0044B2  9898               	bcf	3992,4,c	;volatile
 11742                           
 11743                           ; BSR set to: 0
 11744  0044B4  0012               	return		;funcret
 11745  0044B6                     __end_of_OpenPWM5:
 11746                           	opt stack 0
 11747                           prodh	equ	0xFF4
 11748                           prodl	equ	0xFF3
 11749                           intcon	equ	0xFF2
 11750                           intcon2	equ	0xFF1
 11751                           intcon3	equ	0xFF0
 11752                           postinc0	equ	0xFEE
 11753                           wreg	equ	0xFE8
 11754                           indf2	equ	0xFDF
 11755                           postinc2	equ	0xFDE
 11756                           postdec2	equ	0xFDD
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function _OpenPWM4 *****************
 11762 ;; Defined at:
 11763 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  period          1    wreg     unsigned char 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  period          1   16[BANK0 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;		None               void
 11770 ;; Registers used:
 11771 ;;		wreg, status,2
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;Total ram usage:        1 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    7
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_ConfigurePWM
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text94
 11792  0044B6                     __ptext94:
 11793                           	opt stack 0
 11794  0044B6                     _OpenPWM4:
 11795                           	opt stack 22
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;incstack = 0
 11799                           ;OpenPWM4@period stored from wreg
 11800  0044B6  0100               	movlb	0	; () banked
 11801  0044B8  6F70               	movwf	OpenPWM4@period& (0+255),b
 11802                           
 11803                           ; BSR set to: 0
 11804  0044BA  0E0C               	movlw	12
 11805  0044BC  6E73               	movwf	3955,c	;volatile
 11806                           
 11807                           ; BSR set to: 0
 11808  0044BE  9698               	bcf	3992,3,c	;volatile
 11809                           
 11810                           ; BSR set to: 0
 11811  0044C0  ACB1               	btfss	4017,6,c	;volatile
 11812                           
 11813                           ; BSR set to: 0
 11814  0044C2  B6B1               	btfsc	4017,3,c	;volatile
 11815  0044C4  D005               	goto	l1068
 11816                           
 11817                           ; BSR set to: 0
 11818  0044C6  94CA               	bcf	4042,2,c	;volatile
 11819                           
 11820                           ; BSR set to: 0
 11821  0044C8  C070  FFCB         	movff	OpenPWM4@period,4043	;volatile
 11822                           
 11823                           ; BSR set to: 0
 11824  0044CC  84CA               	bsf	4042,2,c	;volatile
 11825  0044CE  D005               	goto	l1070
 11826  0044D0                     l1068:
 11827                           
 11828                           ; BSR set to: 0
 11829  0044D0  9476               	bcf	3958,2,c	;volatile
 11830                           
 11831                           ; BSR set to: 0
 11832  0044D2  C070  FF77         	movff	OpenPWM4@period,3959	;volatile
 11833                           
 11834                           ; BSR set to: 0
 11835  0044D6  8476               	bsf	3958,2,c	;volatile
 11836  0044D8  D000               	goto	l1070
 11837  0044DA                     l1070:
 11838                           
 11839                           ; BSR set to: 0
 11840  0044DA  0012               	return		;funcret
 11841  0044DC                     __end_of_OpenPWM4:
 11842                           	opt stack 0
 11843                           prodh	equ	0xFF4
 11844                           prodl	equ	0xFF3
 11845                           intcon	equ	0xFF2
 11846                           intcon2	equ	0xFF1
 11847                           intcon3	equ	0xFF0
 11848                           postinc0	equ	0xFEE
 11849                           wreg	equ	0xFE8
 11850                           indf2	equ	0xFDF
 11851                           postinc2	equ	0xFDE
 11852                           postdec2	equ	0xFDD
 11853                           fsr2h	equ	0xFDA
 11854                           fsr2l	equ	0xFD9
 11855                           status	equ	0xFD8
 11856                           
 11857 ;; *************** function _ConfigureInterrupts *****************
 11858 ;; Defined at:
 11859 ;;		line 81 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11860 ;; Parameters:    Size  Location     Type
 11861 ;;		None
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;		None
 11864 ;; Return value:  Size  Location     Type
 11865 ;;		None               void
 11866 ;; Registers used:
 11867 ;;		None
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;Total ram usage:        0 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; Hardware stack levels required when called:    7
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_main
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text95
 11888  00441C                     __ptext95:
 11889                           	opt stack 0
 11890  00441C                     _ConfigureInterrupts:
 11891                           	opt stack 23
 11892                           
 11893                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 83: INTCONbits.GIE = 1;
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;incstack = 0
 11897  00441C  8EF2               	bsf	intcon,7,c	;volatile
 11898                           
 11899                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 84: INTCONbits.PEIE = 1;
 11900  00441E  8CF2               	bsf	intcon,6,c	;volatile
 11901                           
 11902                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 85: RCONbits.IPEN = 1;
 11903  004420  8ED0               	bsf	4048,7,c	;volatile
 11904                           
 11905                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 107: INTCON3bits.INT3IE = 0;
 11906  004422  9AF0               	bcf	intcon3,5,c	;volatile
 11907                           
 11908                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 108: INTCON3bits.INT3IF = 0;
 11909  004424  94F0               	bcf	intcon3,2,c	;volatile
 11910                           
 11911                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 109: INTCON2bits.INTEDG3 = 1;
 11912  004426  86F1               	bsf	intcon2,3,c	;volatile
 11913                           
 11914                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 110: INTCON2bits.INT3IP = 1;
 11915  004428  82F1               	bsf	intcon2,1,c	;volatile
 11916                           
 11917                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 113: INTCONbits.TMR0IE = 1;
 11918  00442A  8AF2               	bsf	intcon,5,c	;volatile
 11919                           
 11920                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 114: INTCONbits.TMR0IF = 0;
 11921  00442C  94F2               	bcf	intcon,2,c	;volatile
 11922                           
 11923                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 115: INTCON2bits.TMR0IP = 1;
 11924  00442E  84F1               	bsf	intcon2,2,c	;volatile
 11925                           
 11926                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 124: PIE1bits.ADIE = 0;
 11927  004430  9C9D               	bcf	3997,6,c	;volatile
 11928                           
 11929                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 125: PIR1bits.ADIF = 0;
 11930  004432  9C9E               	bcf	3998,6,c	;volatile
 11931                           
 11932                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 126: IPR1bits.ADIP = 0;
 11933  004434  9C9F               	bcf	3999,6,c	;volatile
 11934                           
 11935                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 129: PIE1bits.RC1IE = 0;
 11936  004436  9A9D               	bcf	3997,5,c	;volatile
 11937                           
 11938                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 130: PIE1bits.TX1IE = 0;
 11939  004438  989D               	bcf	3997,4,c	;volatile
 11940                           
 11941                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 131: PIR1bits.RC1IF = 0;
 11942  00443A  9A9E               	bcf	3998,5,c	;volatile
 11943                           
 11944                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 132: PIR1bits.TX1IF = 0;
 11945  00443C  989E               	bcf	3998,4,c	;volatile
 11946                           
 11947                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 133: IPR1bits.RC1IP = 0;
 11948  00443E  9A9F               	bcf	3999,5,c	;volatile
 11949                           
 11950                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 134: IPR1bits.TX1IP = 0;
 11951  004440  989F               	bcf	3999,4,c	;volatile
 11952  004442  0012               	return		;funcret
 11953  004444                     __end_of_ConfigureInterrupts:
 11954                           	opt stack 0
 11955                           prodh	equ	0xFF4
 11956                           prodl	equ	0xFF3
 11957                           intcon	equ	0xFF2
 11958                           intcon2	equ	0xFF1
 11959                           intcon3	equ	0xFF0
 11960                           postinc0	equ	0xFEE
 11961                           wreg	equ	0xFE8
 11962                           indf2	equ	0xFDF
 11963                           postinc2	equ	0xFDE
 11964                           postdec2	equ	0xFDD
 11965                           fsr2h	equ	0xFDA
 11966                           fsr2l	equ	0xFD9
 11967                           status	equ	0xFD8
 11968                           
 11969 ;; *************** function _ConfigureBuggyIO *****************
 11970 ;; Defined at:
 11971 ;;		line 211 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;		None               void
 11978 ;; Registers used:
 11979 ;;		wreg, status,2
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;Total ram usage:        0 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; Hardware stack levels required when called:    7
 11992 ;; This function calls:
 11993 ;;		Nothing
 11994 ;; This function is called by:
 11995 ;;		_main
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text96
 12000  00459C                     __ptext96:
 12001                           	opt stack 0
 12002  00459C                     _ConfigureBuggyIO:
 12003                           	opt stack 23
 12004                           
 12005                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 214: TRISA = 0xFF;
 12006                           
 12007                           ;incstack = 0
 12008  00459C  6892               	setf	3986,c	;volatile
 12009                           
 12010                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 217: TRISB = 0xFF;
 12011  00459E  6893               	setf	3987,c	;volatile
 12012                           
 12013                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 220: TRISC = 0x9F;
 12014  0045A0  0E9F               	movlw	159
 12015  0045A2  6E94               	movwf	3988,c	;volatile
 12016                           
 12017                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 223: TRISD = 0xE0;
 12018  0045A4  0EE0               	movlw	224
 12019  0045A6  6E95               	movwf	3989,c	;volatile
 12020                           
 12021                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 226: TRISE = 0x00;
 12022  0045A8  0E00               	movlw	0
 12023  0045AA  6E96               	movwf	3990,c	;volatile
 12024                           
 12025                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 229: TRISG = 0xE7;
 12026  0045AC  0EE7               	movlw	231
 12027  0045AE  6E98               	movwf	3992,c	;volatile
 12028                           
 12029                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 232: TRISJ = 0x00;
 12030  0045B0  0E00               	movlw	0
 12031  0045B2  6E9A               	movwf	3994,c	;volatile
 12032  0045B4  0012               	return		;funcret
 12033  0045B6                     __end_of_ConfigureBuggyIO:
 12034                           	opt stack 0
 12035                           prodh	equ	0xFF4
 12036                           prodl	equ	0xFF3
 12037                           intcon	equ	0xFF2
 12038                           intcon2	equ	0xFF1
 12039                           intcon3	equ	0xFF0
 12040                           postinc0	equ	0xFEE
 12041                           wreg	equ	0xFE8
 12042                           indf2	equ	0xFDF
 12043                           postinc2	equ	0xFDE
 12044                           postdec2	equ	0xFDD
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _ConfigureADC *****************
 12050 ;; Defined at:
 12051 ;;		line 237 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;		None
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;		None               void
 12058 ;; Registers used:
 12059 ;;		wreg, status,2, status,0, cstack
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;Total ram usage:        0 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:    8
 12072 ;; This function calls:
 12073 ;;		_OpenADC
 12074 ;; This function is called by:
 12075 ;;		_main
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           	psect	text97
 12080  00467E                     __ptext97:
 12081                           	opt stack 0
 12082  00467E                     _ConfigureADC:
 12083                           	opt stack 22
 12084                           
 12085                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 239: OpenADC(0b10011111
 12086                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 240: & 0b11111111
 12087                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 241: & 0b11110101,
 12088                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 242: 0b10000111
 12089                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 243: & 0b01111111
 12090                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 244: & 0b11111110
 12091                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 245: & 0b11111101,
 12092                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 246: 9);
 12093                           
 12094                           ;incstack = 0
 12095  00467E  0E04               	movlw	4
 12096  004680  0100               	movlb	0	; () banked
 12097  004682  6F70               	movwf	OpenADC@config2& (0+255),b
 12098  004684  0E09               	movlw	9
 12099  004686  0100               	movlb	0	; () banked
 12100  004688  6F71               	movwf	OpenADC@portconfig& (0+255),b
 12101  00468A  0E95               	movlw	149
 12102  00468C  EC8A  F01B         	call	_OpenADC
 12103  004690  0012               	return		;funcret
 12104  004692                     __end_of_ConfigureADC:
 12105                           	opt stack 0
 12106                           prodh	equ	0xFF4
 12107                           prodl	equ	0xFF3
 12108                           intcon	equ	0xFF2
 12109                           intcon2	equ	0xFF1
 12110                           intcon3	equ	0xFF0
 12111                           postinc0	equ	0xFEE
 12112                           wreg	equ	0xFE8
 12113                           indf2	equ	0xFDF
 12114                           postinc2	equ	0xFDE
 12115                           postdec2	equ	0xFDD
 12116                           fsr2h	equ	0xFDA
 12117                           fsr2l	equ	0xFD9
 12118                           status	equ	0xFD8
 12119                           
 12120 ;; *************** function _OpenADC *****************
 12121 ;; Defined at:
 12122 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  config          1    wreg     unsigned char 
 12125 ;;  config2         1   16[BANK0 ] unsigned char 
 12126 ;;  portconfig      1   17[BANK0 ] unsigned char 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;  config          1   20[BANK0 ] unsigned char 
 12129 ;; Return value:  Size  Location     Type
 12130 ;;		None               void
 12131 ;; Registers used:
 12132 ;;		wreg, status,2, status,0
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;Total ram usage:        5 bytes
 12143 ;; Hardware stack levels used:    1
 12144 ;; Hardware stack levels required when called:    7
 12145 ;; This function calls:
 12146 ;;		Nothing
 12147 ;; This function is called by:
 12148 ;;		_ConfigureADC
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text98
 12153  003714                     __ptext98:
 12154                           	opt stack 0
 12155  003714                     _OpenADC:
 12156                           	opt stack 22
 12157                           
 12158                           ;incstack = 0
 12159                           ;OpenADC@config stored from wreg
 12160  003714  0100               	movlb	0	; () banked
 12161  003716  6F74               	movwf	OpenADC@config& (0+255),b
 12162                           
 12163                           ; BSR set to: 0
 12164  003718  0E00               	movlw	0
 12165  00371A  6EC2               	movwf	4034,c	;volatile
 12166  00371C  0E00               	movlw	0
 12167  00371E  6EC0               	movwf	4032,c	;volatile
 12168                           
 12169                           ; BSR set to: 0
 12170  003720  0100               	movlb	0	; () banked
 12171  003722  90D8               	bcf	status,0,c
 12172  003724  3170               	rrcf	OpenADC@config2& (0+255),w,b
 12173  003726  0B3C               	andlw	60
 12174  003728  6EC2               	movwf	4034,c	;volatile
 12175                           
 12176                           ; BSR set to: 0
 12177  00372A  C070  F072         	movff	OpenADC@config2,??_OpenADC
 12178  00372E  0100               	movlb	0	; () banked
 12179  003730  3B72               	swapf	??_OpenADC& (0+255),f,b
 12180  003732  0EF0               	movlw	240
 12181  003734  1772               	andwf	??_OpenADC& (0+255),f,b
 12182  003736  0E30               	movlw	48
 12183  003738  0100               	movlb	0	; () banked
 12184  00373A  1772               	andwf	??_OpenADC& (0+255),f,b
 12185  00373C  0100               	movlb	0	; () banked
 12186  00373E  5171               	movf	OpenADC@portconfig& (0+255),w,b
 12187  003740  0B0F               	andlw	15
 12188  003742  0100               	movlb	0	; () banked
 12189  003744  1172               	iorwf	??_OpenADC& (0+255),w,b
 12190  003746  6EC1               	movwf	4033,c	;volatile
 12191                           
 12192                           ; BSR set to: 0
 12193  003748  C074  F072         	movff	OpenADC@config,??_OpenADC
 12194  00374C  0100               	movlb	0	; () banked
 12195  00374E  90D8               	bcf	status,0,c
 12196  003750  3772               	rlcf	??_OpenADC& (0+255),f,b
 12197  003752  0100               	movlb	0	; () banked
 12198  003754  90D8               	bcf	status,0,c
 12199  003756  3772               	rlcf	??_OpenADC& (0+255),f,b
 12200  003758  0E38               	movlw	56
 12201  00375A  0100               	movlb	0	; () banked
 12202  00375C  1772               	andwf	??_OpenADC& (0+255),f,b
 12203  00375E  C074  F073         	movff	OpenADC@config,??_OpenADC+1
 12204  003762  0100               	movlb	0	; () banked
 12205  003764  3B73               	swapf	(??_OpenADC+1)& (0+255),f,b
 12206  003766  0E0F               	movlw	15
 12207  003768  1773               	andwf	(??_OpenADC+1)& (0+255),f,b
 12208  00376A  0E07               	movlw	7
 12209  00376C  0100               	movlb	0	; () banked
 12210  00376E  1773               	andwf	(??_OpenADC+1)& (0+255),f,b
 12211  003770  0100               	movlb	0	; () banked
 12212  003772  5174               	movf	OpenADC@config& (0+255),w,b
 12213  003774  0B80               	andlw	128
 12214  003776  0100               	movlb	0	; () banked
 12215  003778  1173               	iorwf	(??_OpenADC+1)& (0+255),w,b
 12216  00377A  0100               	movlb	0	; () banked
 12217  00377C  1172               	iorwf	??_OpenADC& (0+255),w,b
 12218  00377E  6EC0               	movwf	4032,c	;volatile
 12219                           
 12220                           ; BSR set to: 0
 12221  003780  0100               	movlb	0	; () banked
 12222  003782  AF70               	btfss	OpenADC@config2& (0+255),7,b
 12223  003784  D003               	goto	l1038
 12224                           
 12225                           ; BSR set to: 0
 12226  003786  9C9E               	bcf	3998,6,c	;volatile
 12227  003788  8C9D               	bsf	3997,6,c	;volatile
 12228  00378A  8CF2               	bsf	intcon,6,c	;volatile
 12229  00378C                     l1038:
 12230                           
 12231                           ; BSR set to: 0
 12232  00378C  80C2               	bsf	4034,0,c	;volatile
 12233                           
 12234                           ; BSR set to: 0
 12235  00378E  0012               	return		;funcret
 12236  003790                     __end_of_OpenADC:
 12237                           	opt stack 0
 12238                           prodh	equ	0xFF4
 12239                           prodl	equ	0xFF3
 12240                           intcon	equ	0xFF2
 12241                           intcon2	equ	0xFF1
 12242                           intcon3	equ	0xFF0
 12243                           postinc0	equ	0xFEE
 12244                           wreg	equ	0xFE8
 12245                           indf2	equ	0xFDF
 12246                           postinc2	equ	0xFDE
 12247                           postdec2	equ	0xFDD
 12248                           fsr2h	equ	0xFDA
 12249                           fsr2l	equ	0xFD9
 12250                           status	equ	0xFD8
 12251                           
 12252 ;; *************** function _CalculateSensorSums *****************
 12253 ;; Defined at:
 12254 ;;		line 386 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  index           1  106[BANK0 ] unsigned char 
 12259 ;;  sum             1  105[BANK0 ] unsigned char 
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      unsigned char 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;Total ram usage:        5 bytes
 12274 ;; Hardware stack levels used:    1
 12275 ;; Hardware stack levels required when called:   12
 12276 ;; This function calls:
 12277 ;;		___ftmul
 12278 ;;		___fttol
 12279 ;;		___lbtoft
 12280 ;;		_pow
 12281 ;; This function is called by:
 12282 ;;		_main
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           	psect	text99
 12287  003322                     __ptext99:
 12288                           	opt stack 0
 12289  003322                     _CalculateSensorSums:
 12290                           	opt stack 18
 12291                           
 12292                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 387: unsigned char index, sum = 0;
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;incstack = 0
 12296  003322  0E00               	movlw	0
 12297  003324  0100               	movlb	0	; () banked
 12298  003326  6FC9               	movwf	CalculateSensorSums@sum& (0+255),b
 12299                           
 12300                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 389: for(index = 0; index < 5; index++) {
 12301  003328  0E00               	movlw	0
 12302  00332A  0100               	movlb	0	; () banked
 12303  00332C  6FCA               	movwf	CalculateSensorSums@index& (0+255),b
 12304  00332E                     l7736:
 12305                           
 12306                           ; BSR set to: 0
 12307  00332E  0E04               	movlw	4
 12308  003330  0100               	movlb	0	; () banked
 12309  003332  65CA               	cpfsgt	CalculateSensorSums@index& (0+255),b
 12310  003334  D001               	goto	l7740
 12311                           
 12312                           ; BSR set to: 0
 12313  003336  D044               	goto	l7748
 12314  003338                     l7740:
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 391: sum += (unsigned char) (sensor_status[index]
      +                           * pow(2, index));
 12318  003338  0100               	movlb	0	; () banked
 12319  00333A  51CA               	movf	CalculateSensorSums@index& (0+255),w,b
 12320  00333C  EC77  F021         	call	___lbtoft
 12321  003340  C078  F0B8         	movff	?___lbtoft,pow@y
 12322  003344  C079  F0B9         	movff	?___lbtoft+1,pow@y+1
 12323  003348  C07A  F0BA         	movff	?___lbtoft+2,pow@y+2
 12324  00334C  0E00               	movlw	0
 12325  00334E  0100               	movlb	0	; () banked
 12326  003350  6FB5               	movwf	pow@x& (0+255),b
 12327  003352  0E00               	movlw	0
 12328  003354  0100               	movlb	0	; () banked
 12329  003356  6FB6               	movwf	(pow@x+1)& (0+255),b
 12330  003358  0E40               	movlw	64
 12331  00335A  0100               	movlb	0	; () banked
 12332  00335C  6FB7               	movwf	(pow@x+2)& (0+255),b
 12333  00335E  EC80  F00D         	call	_pow	;wreg free
 12334  003362  C0B5  F0C6         	movff	?_pow,_CalculateSensorSums$3810
 12335  003366  C0B6  F0C7         	movff	?_pow+1,_CalculateSensorSums$3810+1
 12336  00336A  C0B7  F0C8         	movff	?_pow+2,_CalculateSensorSums$3810+2
 12337                           
 12338                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 391: sum += (unsigned char) (sensor_status[index]
      +                           * pow(2, index));
 12339  00336E  C0C6  F07F         	movff	_CalculateSensorSums$3810,___ftmul@f2
 12340  003372  C0C7  F080         	movff	_CalculateSensorSums$3810+1,___ftmul@f2+1
 12341  003376  C0C8  F081         	movff	_CalculateSensorSums$3810+2,___ftmul@f2+2
 12342  00337A  0100               	movlb	0	; () banked
 12343  00337C  51CA               	movf	CalculateSensorSums@index& (0+255),w,b
 12344  00337E  0D01               	mullw	1
 12345  003380  0E23               	movlw	low _sensor_status
 12346  003382  24F3               	addwf	prodl,w,c
 12347  003384  6ED9               	movwf	fsr2l,c
 12348  003386  0E00               	movlw	high _sensor_status
 12349  003388  20F4               	addwfc	prodh,w,c
 12350  00338A  6EDA               	movwf	fsr2h,c
 12351  00338C  50DF               	movf	indf2,w,c
 12352  00338E  EC77  F021         	call	___lbtoft
 12353  003392  C078  F07C         	movff	?___lbtoft,___ftmul@f1
 12354  003396  C079  F07D         	movff	?___lbtoft+1,___ftmul@f1+1
 12355  00339A  C07A  F07E         	movff	?___lbtoft+2,___ftmul@f1+2
 12356  00339E  EC10  F00F         	call	___ftmul	;wreg free
 12357  0033A2  C07C  F08B         	movff	?___ftmul,___fttol@f1
 12358  0033A6  C07D  F08C         	movff	?___ftmul+1,___fttol@f1+1
 12359  0033AA  C07E  F08D         	movff	?___ftmul+2,___fttol@f1+2
 12360  0033AE  ECA0  F011         	call	___fttol	;wreg free
 12361  0033B2  0100               	movlb	0	; () banked
 12362  0033B4  518B               	movf	?___fttol& (0+255),w,b
 12363  0033B6  0100               	movlb	0	; () banked
 12364  0033B8  27C9               	addwf	CalculateSensorSums@sum& (0+255),f,b
 12365                           
 12366                           ; BSR set to: 0
 12367  0033BA  0100               	movlb	0	; () banked
 12368  0033BC  2BCA               	incf	CalculateSensorSums@index& (0+255),f,b
 12369  0033BE  D7B7               	goto	l7736
 12370  0033C0                     l7748:
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 393: }
 12374                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 395: return(sum);
 12375  0033C0  0100               	movlb	0	; () banked
 12376  0033C2  51C9               	movf	CalculateSensorSums@sum& (0+255),w,b
 12377  0033C4  D000               	goto	l270
 12378  0033C6                     l270:
 12379                           
 12380                           ; BSR set to: 0
 12381  0033C6  0012               	return		;funcret
 12382  0033C8                     __end_of_CalculateSensorSums:
 12383                           	opt stack 0
 12384                           prodh	equ	0xFF4
 12385                           prodl	equ	0xFF3
 12386                           intcon	equ	0xFF2
 12387                           intcon2	equ	0xFF1
 12388                           intcon3	equ	0xFF0
 12389                           postinc0	equ	0xFEE
 12390                           wreg	equ	0xFE8
 12391                           indf2	equ	0xFDF
 12392                           postinc2	equ	0xFDE
 12393                           postdec2	equ	0xFDD
 12394                           fsr2h	equ	0xFDA
 12395                           fsr2l	equ	0xFD9
 12396                           status	equ	0xFD8
 12397                           
 12398 ;; *************** function _pow *****************
 12399 ;; Defined at:
 12400 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  x               3   85[BANK0 ] unsigned char 
 12403 ;;  y               3   88[BANK0 ] unsigned char 
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  yi              4   98[BANK0 ] unsigned long 
 12406 ;;  sign            1   97[BANK0 ] unsigned char 
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  3   85[BANK0 ] unsigned char 
 12409 ;; Registers used:
 12410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12416 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12417 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;Total ram usage:       17 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; Hardware stack levels required when called:   11
 12423 ;; This function calls:
 12424 ;;		___ftge
 12425 ;;		___ftmul
 12426 ;;		___ftneg
 12427 ;;		___fttol
 12428 ;;		___lltoft
 12429 ;;		_exp
 12430 ;;		_log
 12431 ;; This function is called by:
 12432 ;;		_CalculateSensorSums
 12433 ;; This function uses a non-reentrant model
 12434 ;;
 12435                           
 12436                           	psect	text100
 12437  001B00                     __ptext100:
 12438                           	opt stack 0
 12439  001B00                     _pow:
 12440                           	opt stack 18
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;incstack = 0
 12444  001B00  0E00               	movlw	0
 12445  001B02  0100               	movlb	0	; () banked
 12446  001B04  6FC1               	movwf	pow@sign& (0+255),b
 12447                           
 12448                           ; BSR set to: 0
 12449  001B06  0100               	movlb	0	; () banked
 12450  001B08  51B5               	movf	pow@x& (0+255),w,b
 12451  001B0A  0100               	movlb	0	; () banked
 12452  001B0C  11B6               	iorwf	(pow@x+1)& (0+255),w,b
 12453  001B0E  0100               	movlb	0	; () banked
 12454  001B10  11B7               	iorwf	(pow@x+2)& (0+255),w,b
 12455  001B12  A4D8               	btfss	status,2,c
 12456  001B14  D016               	goto	l7492
 12457                           
 12458                           ; BSR set to: 0
 12459  001B16  0E00               	movlw	0
 12460  001B18  0100               	movlb	0	; () banked
 12461  001B1A  6F70               	movwf	___ftge@ff1& (0+255),b
 12462  001B1C  0E00               	movlw	0
 12463  001B1E  0100               	movlb	0	; () banked
 12464  001B20  6F71               	movwf	(___ftge@ff1+1)& (0+255),b
 12465  001B22  0E00               	movlw	0
 12466  001B24  0100               	movlb	0	; () banked
 12467  001B26  6F72               	movwf	(___ftge@ff1+2)& (0+255),b
 12468  001B28  C0B8  F073         	movff	pow@y,___ftge@ff2
 12469  001B2C  C0B9  F074         	movff	pow@y+1,___ftge@ff2+1
 12470  001B30  C0BA  F075         	movff	pow@y+2,___ftge@ff2+2
 12471  001B34  ECC2  F017         	call	___ftge	;wreg free
 12472  001B38  0100               	movlb	0	; () banked
 12473  001B3A  A0D8               	btfss	status,0,c
 12474  001B3C  D045               	goto	L8
 12475  001B3E  D03F               	goto	u7500
 12476                           
 12477                           ; BSR set to: 0
 12478                           
 12479                           ; BSR set to: 0
 12480                           
 12481                           ; BSR set to: 0
 12482  001B40  D0AB               	goto	l1808
 12483  001B42                     l7492:
 12484                           
 12485                           ; BSR set to: 0
 12486  001B42  0100               	movlb	0	; () banked
 12487  001B44  51B8               	movf	pow@y& (0+255),w,b
 12488  001B46  0100               	movlb	0	; () banked
 12489  001B48  11B9               	iorwf	(pow@y+1)& (0+255),w,b
 12490  001B4A  0100               	movlb	0	; () banked
 12491  001B4C  11BA               	iorwf	(pow@y+2)& (0+255),w,b
 12492  001B4E  A4D8               	btfss	status,2,c
 12493  001B50  D009               	goto	l7498
 12494                           
 12495                           ; BSR set to: 0
 12496  001B52  0E00               	movlw	0
 12497  001B54  0100               	movlb	0	; () banked
 12498  001B56  6FB5               	movwf	?_pow& (0+255),b
 12499  001B58  0E80               	movlw	128
 12500  001B5A  0100               	movlb	0	; () banked
 12501  001B5C  6FB6               	movwf	(?_pow+1)& (0+255),b
 12502  001B5E  0E3F               	movlw	63
 12503  001B60  D03A               	goto	L7
 12504                           
 12505                           ; BSR set to: 0
 12506  001B62  D09A               	goto	l1808
 12507  001B64                     l7498:
 12508                           
 12509                           ; BSR set to: 0
 12510  001B64  0100               	movlb	0	; () banked
 12511  001B66  AFB7               	btfss	(pow@x+2)& (0+255),7,b
 12512  001B68  D04D               	goto	l7510
 12513                           
 12514                           ; BSR set to: 0
 12515  001B6A  C0B8  F08B         	movff	pow@y,___fttol@f1
 12516  001B6E  C0B9  F08C         	movff	pow@y+1,___fttol@f1+1
 12517  001B72  C0BA  F08D         	movff	pow@y+2,___fttol@f1+2
 12518  001B76  ECA0  F011         	call	___fttol	;wreg free
 12519  001B7A  C08B  F0C2         	movff	?___fttol,pow@yi
 12520  001B7E  C08C  F0C3         	movff	?___fttol+1,pow@yi+1
 12521  001B82  C08D  F0C4         	movff	?___fttol+2,pow@yi+2
 12522  001B86  C08E  F0C5         	movff	?___fttol+3,pow@yi+3
 12523  001B8A  C0C2  F078         	movff	pow@yi,___lltoft@c
 12524  001B8E  C0C3  F079         	movff	pow@yi+1,___lltoft@c+1
 12525  001B92  C0C4  F07A         	movff	pow@yi+2,___lltoft@c+2
 12526  001B96  C0C5  F07B         	movff	pow@yi+3,___lltoft@c+3
 12527  001B9A  EC0A  F01B         	call	___lltoft	;wreg free
 12528  001B9E  0100               	movlb	0	; () banked
 12529  001BA0  51B8               	movf	pow@y& (0+255),w,b
 12530  001BA2  0100               	movlb	0	; () banked
 12531  001BA4  1978               	xorwf	?___lltoft& (0+255),w,b
 12532  001BA6  E10B               	bnz	u7500
 12533  001BA8  0100               	movlb	0	; () banked
 12534  001BAA  51B9               	movf	(pow@y+1)& (0+255),w,b
 12535  001BAC  0100               	movlb	0	; () banked
 12536  001BAE  1979               	xorwf	(?___lltoft+1)& (0+255),w,b
 12537  001BB0  E106               	bnz	u7500
 12538  001BB2  0100               	movlb	0	; () banked
 12539  001BB4  51BA               	movf	(pow@y+2)& (0+255),w,b
 12540  001BB6  0100               	movlb	0	; () banked
 12541  001BB8  197A               	xorwf	(?___lltoft+2)& (0+255),w,b
 12542  001BBA  B4D8               	btfsc	status,2,c
 12543  001BBC  D00F               	goto	l7506
 12544  001BBE                     u7500:
 12545                           
 12546                           ; BSR set to: 0
 12547  001BBE  0E00               	movlw	0
 12548  001BC0  0100               	movlb	0	; () banked
 12549  001BC2  6FE0               	movwf	(_errno+1)& (0+255),b
 12550  001BC4  0E21               	movlw	33
 12551  001BC6  6FDF               	movwf	_errno& (0+255),b
 12552  001BC8                     L8:
 12553  001BC8  0E00               	movlw	0
 12554  001BCA  0100               	movlb	0	; () banked
 12555  001BCC  6FB5               	movwf	?_pow& (0+255),b
 12556  001BCE  0E00               	movlw	0
 12557  001BD0  0100               	movlb	0	; () banked
 12558  001BD2  6FB6               	movwf	(?_pow+1)& (0+255),b
 12559  001BD4  0E00               	movlw	0
 12560  001BD6                     L7:
 12561  001BD6  0100               	movlb	0	; () banked
 12562  001BD8  6FB7               	movwf	(?_pow+2)& (0+255),b
 12563                           
 12564                           ; BSR set to: 0
 12565  001BDA  D05E               	goto	l1808
 12566  001BDC                     l7506:
 12567                           
 12568                           ; BSR set to: 0
 12569  001BDC  0100               	movlb	0	; () banked
 12570  001BDE  51C2               	movf	pow@yi& (0+255),w,b
 12571  001BE0  0B01               	andlw	1
 12572  001BE2  0100               	movlb	0	; () banked
 12573  001BE4  6FC1               	movwf	pow@sign& (0+255),b
 12574                           
 12575                           ; BSR set to: 0
 12576  001BE6  C0B5  F070         	movff	pow@x,___ftneg@f1
 12577  001BEA  C0B6  F071         	movff	pow@x+1,___ftneg@f1+1
 12578  001BEE  C0B7  F072         	movff	pow@x+2,___ftneg@f1+2
 12579  001BF2  EC5F  F021         	call	___ftneg	;wreg free
 12580  001BF6  C070  F0B5         	movff	?___ftneg,pow@x
 12581  001BFA  C071  F0B6         	movff	?___ftneg+1,pow@x+1
 12582  001BFE  C072  F0B7         	movff	?___ftneg+2,pow@x+2
 12583  001C02  D000               	goto	l7510
 12584  001C04                     l7510:
 12585  001C04  C0B5  F0A3         	movff	pow@x,log@x
 12586  001C08  C0B6  F0A4         	movff	pow@x+1,log@x+1
 12587  001C0C  C0B7  F0A5         	movff	pow@x+2,log@x+2
 12588  001C10  EC00  F011         	call	_log	;wreg free
 12589  001C14  C0A3  F0BB         	movff	?_log,_pow$3811
 12590  001C18  C0A4  F0BC         	movff	?_log+1,_pow$3811+1
 12591  001C1C  C0A5  F0BD         	movff	?_log+2,_pow$3811+2
 12592  001C20  C0BB  F07C         	movff	_pow$3811,___ftmul@f1
 12593  001C24  C0BC  F07D         	movff	_pow$3811+1,___ftmul@f1+1
 12594  001C28  C0BD  F07E         	movff	_pow$3811+2,___ftmul@f1+2
 12595  001C2C  C0B8  F07F         	movff	pow@y,___ftmul@f2
 12596  001C30  C0B9  F080         	movff	pow@y+1,___ftmul@f2+1
 12597  001C34  C0BA  F081         	movff	pow@y+2,___ftmul@f2+2
 12598  001C38  EC10  F00F         	call	___ftmul	;wreg free
 12599  001C3C  C07C  F0BE         	movff	?___ftmul,_pow$3812
 12600  001C40  C07D  F0BF         	movff	?___ftmul+1,_pow$3812+1
 12601  001C44  C07E  F0C0         	movff	?___ftmul+2,_pow$3812+2
 12602  001C48  C0BE  F0AC         	movff	_pow$3812,exp@x
 12603  001C4C  C0BF  F0AD         	movff	_pow$3812+1,exp@x+1
 12604  001C50  C0C0  F0AE         	movff	_pow$3812+2,exp@x+2
 12605  001C54  EC6C  F00C         	call	_exp	;wreg free
 12606  001C58  C0AC  F0B5         	movff	?_exp,pow@x
 12607  001C5C  C0AD  F0B6         	movff	?_exp+1,pow@x+1
 12608  001C60  C0AE  F0B7         	movff	?_exp+2,pow@x+2
 12609  001C64  0100               	movlb	0	; () banked
 12610  001C66  51C1               	movf	pow@sign& (0+255),w,b
 12611  001C68  0100               	movlb	0	; () banked
 12612  001C6A  B4D8               	btfsc	status,2,c
 12613  001C6C  D00F               	goto	l1812
 12614                           
 12615                           ; BSR set to: 0
 12616  001C6E  C0B5  F070         	movff	pow@x,___ftneg@f1
 12617  001C72  C0B6  F071         	movff	pow@x+1,___ftneg@f1+1
 12618  001C76  C0B7  F072         	movff	pow@x+2,___ftneg@f1+2
 12619  001C7A  EC5F  F021         	call	___ftneg	;wreg free
 12620  001C7E  C070  F0B5         	movff	?___ftneg,?_pow
 12621  001C82  C071  F0B6         	movff	?___ftneg+1,?_pow+1
 12622  001C86  C072  F0B7         	movff	?___ftneg+2,?_pow+2
 12623  001C8A  D006               	goto	l1808
 12624  001C8C                     l1812:
 12625                           
 12626                           ; BSR set to: 0
 12627  001C8C  C0B5  F0B5         	movff	pow@x,?_pow
 12628  001C90  C0B6  F0B6         	movff	pow@x+1,?_pow+1
 12629  001C94  C0B7  F0B7         	movff	pow@x+2,?_pow+2
 12630  001C98                     l1808:
 12631  001C98  0012               	return		;funcret
 12632  001C9A                     __end_of_pow:
 12633                           	opt stack 0
 12634                           prodh	equ	0xFF4
 12635                           prodl	equ	0xFF3
 12636                           intcon	equ	0xFF2
 12637                           intcon2	equ	0xFF1
 12638                           intcon3	equ	0xFF0
 12639                           postinc0	equ	0xFEE
 12640                           wreg	equ	0xFE8
 12641                           indf2	equ	0xFDF
 12642                           postinc2	equ	0xFDE
 12643                           postdec2	equ	0xFDD
 12644                           fsr2h	equ	0xFDA
 12645                           fsr2l	equ	0xFD9
 12646                           status	equ	0xFD8
 12647                           
 12648 ;; *************** function _log *****************
 12649 ;; Defined at:
 12650 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
 12651 ;; Parameters:    Size  Location     Type
 12652 ;;  x               3   67[BANK0 ] unsigned char 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  exponent        2   70[BANK0 ] int 
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  3   67[BANK0 ] int 
 12657 ;; Registers used:
 12658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12664 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;Total ram usage:        5 bytes
 12669 ;; Hardware stack levels used:    1
 12670 ;; Hardware stack levels required when called:   10
 12671 ;; This function calls:
 12672 ;;		___awtoft
 12673 ;;		___ftadd
 12674 ;;		___ftmul
 12675 ;;		_eval_poly
 12676 ;;		_frexp
 12677 ;; This function is called by:
 12678 ;;		_pow
 12679 ;; This function uses a non-reentrant model
 12680 ;;
 12681                           
 12682                           	psect	text101
 12683  002200                     __ptext101:
 12684                           	opt stack 0
 12685  002200                     _log:
 12686                           	opt stack 18
 12687                           
 12688                           ;incstack = 0
 12689  002200  0100               	movlb	0	; () banked
 12690  002202  AFA5               	btfss	(log@x+2)& (0+255),7,b
 12691  002204  D006               	goto	l7284
 12692                           
 12693                           ; BSR set to: 0
 12694  002206  0E00               	movlw	0
 12695  002208  0100               	movlb	0	; () banked
 12696  00220A  6FE0               	movwf	(_errno+1)& (0+255),b
 12697  00220C  0E21               	movlw	33
 12698  00220E  D00D               	goto	L9
 12699                           
 12700                           ; BSR set to: 0
 12701  002210  D096               	goto	l1872
 12702  002212                     l7284:
 12703                           
 12704                           ; BSR set to: 0
 12705  002212  0100               	movlb	0	; () banked
 12706  002214  51A3               	movf	log@x& (0+255),w,b
 12707  002216  0100               	movlb	0	; () banked
 12708  002218  11A4               	iorwf	(log@x+1)& (0+255),w,b
 12709  00221A  0100               	movlb	0	; () banked
 12710  00221C  11A5               	iorwf	(log@x+2)& (0+255),w,b
 12711  00221E  A4D8               	btfss	status,2,c
 12712  002220  D00F               	goto	l7290
 12713                           
 12714                           ; BSR set to: 0
 12715  002222  0E00               	movlw	0
 12716  002224  0100               	movlb	0	; () banked
 12717  002226  6FE0               	movwf	(_errno+1)& (0+255),b
 12718  002228  0E22               	movlw	34
 12719  00222A                     L9:
 12720  00222A  6FDF               	movwf	_errno& (0+255),b
 12721  00222C  0E00               	movlw	0
 12722  00222E  0100               	movlb	0	; () banked
 12723  002230  6FA3               	movwf	?_log& (0+255),b
 12724  002232  0E00               	movlw	0
 12725  002234  0100               	movlb	0	; () banked
 12726  002236  6FA4               	movwf	(?_log+1)& (0+255),b
 12727  002238  0E00               	movlw	0
 12728  00223A  0100               	movlb	0	; () banked
 12729  00223C  6FA5               	movwf	(?_log+2)& (0+255),b
 12730                           
 12731                           ; BSR set to: 0
 12732  00223E  D07F               	goto	l1872
 12733  002240                     l7290:
 12734                           
 12735                           ; BSR set to: 0
 12736  002240  0E00               	movlw	0
 12737  002242  0100               	movlb	0	; () banked
 12738  002244  6F7F               	movwf	___ftmul@f2& (0+255),b
 12739  002246  0E00               	movlw	0
 12740  002248  0100               	movlb	0	; () banked
 12741  00224A  6F80               	movwf	(___ftmul@f2+1)& (0+255),b
 12742  00224C  0E40               	movlw	64
 12743  00224E  0100               	movlb	0	; () banked
 12744  002250  6F81               	movwf	(___ftmul@f2+2)& (0+255),b
 12745  002252  0EA6               	movlw	low log@exponent
 12746  002254  0100               	movlb	0	; () banked
 12747  002256  6F73               	movwf	frexp@eptr& (0+255),b
 12748  002258  0E00               	movlw	high log@exponent
 12749  00225A  0100               	movlb	0	; () banked
 12750  00225C  6F74               	movwf	(frexp@eptr+1)& (0+255),b
 12751  00225E  C0A3  F070         	movff	log@x,frexp@value
 12752  002262  C0A4  F071         	movff	log@x+1,frexp@value+1
 12753  002266  C0A5  F072         	movff	log@x+2,frexp@value+2
 12754  00226A  EC3A  F019         	call	_frexp	;wreg free
 12755  00226E  C070  F07C         	movff	?_frexp,___ftmul@f1
 12756  002272  C071  F07D         	movff	?_frexp+1,___ftmul@f1+1
 12757  002276  C072  F07E         	movff	?_frexp+2,___ftmul@f1+2
 12758  00227A  EC10  F00F         	call	___ftmul	;wreg free
 12759  00227E  C07C  F08B         	movff	?___ftmul,___ftadd@f1
 12760  002282  C07D  F08C         	movff	?___ftmul+1,___ftadd@f1+1
 12761  002286  C07E  F08D         	movff	?___ftmul+2,___ftadd@f1+2
 12762  00228A  0E00               	movlw	0
 12763  00228C  0100               	movlb	0	; () banked
 12764  00228E  6F8E               	movwf	___ftadd@f2& (0+255),b
 12765  002290  0E80               	movlw	128
 12766  002292  0100               	movlb	0	; () banked
 12767  002294  6F8F               	movwf	(___ftadd@f2+1)& (0+255),b
 12768  002296  0EBF               	movlw	191
 12769  002298  0100               	movlb	0	; () banked
 12770  00229A  6F90               	movwf	(___ftadd@f2+2)& (0+255),b
 12771  00229C  EC2D  F00B         	call	___ftadd	;wreg free
 12772  0022A0  C08B  F0A3         	movff	?___ftadd,log@x
 12773  0022A4  C08C  F0A4         	movff	?___ftadd+1,log@x+1
 12774  0022A8  C08D  F0A5         	movff	?___ftadd+2,log@x+2
 12775  0022AC  0100               	movlb	0	; () banked
 12776  0022AE  07A6               	decf	log@exponent& (0+255),f,b
 12777  0022B0  A0D8               	btfss	status,0,c
 12778  0022B2  07A7               	decf	(log@exponent+1)& (0+255),f,b
 12779                           
 12780                           ; BSR set to: 0
 12781  0022B4  C0A3  F097         	movff	log@x,eval_poly@x
 12782  0022B8  C0A4  F098         	movff	log@x+1,eval_poly@x+1
 12783  0022BC  C0A5  F099         	movff	log@x+2,eval_poly@x+2
 12784  0022C0  0E1F               	movlw	low log@coeff
 12785  0022C2  0100               	movlb	0	; () banked
 12786  0022C4  6F9A               	movwf	eval_poly@d& (0+255),b
 12787  0022C6  0E10               	movlw	high log@coeff
 12788  0022C8  0100               	movlb	0	; () banked
 12789  0022CA  6F9B               	movwf	(eval_poly@d+1)& (0+255),b
 12790  0022CC  0E00               	movlw	0
 12791  0022CE  0100               	movlb	0	; () banked
 12792  0022D0  6F9D               	movwf	(eval_poly@n+1)& (0+255),b
 12793  0022D2  0E08               	movlw	8
 12794  0022D4  6F9C               	movwf	eval_poly@n& (0+255),b
 12795  0022D6  EC74  F015         	call	_eval_poly	;wreg free
 12796  0022DA  C097  F0A3         	movff	?_eval_poly,log@x
 12797  0022DE  C098  F0A4         	movff	?_eval_poly+1,log@x+1
 12798  0022E2  C099  F0A5         	movff	?_eval_poly+2,log@x+2
 12799  0022E6  0E72               	movlw	114
 12800  0022E8  0100               	movlb	0	; () banked
 12801  0022EA  6F7F               	movwf	___ftmul@f2& (0+255),b
 12802  0022EC  0E31               	movlw	49
 12803  0022EE  0100               	movlb	0	; () banked
 12804  0022F0  6F80               	movwf	(___ftmul@f2+1)& (0+255),b
 12805  0022F2  0E3F               	movlw	63
 12806  0022F4  0100               	movlb	0	; () banked
 12807  0022F6  6F81               	movwf	(___ftmul@f2+2)& (0+255),b
 12808  0022F8  C0A6  F078         	movff	log@exponent,___awtoft@c
 12809  0022FC  C0A7  F079         	movff	log@exponent+1,___awtoft@c+1
 12810  002300  EC10  F01F         	call	___awtoft	;wreg free
 12811  002304  C078  F07C         	movff	?___awtoft,___ftmul@f1
 12812  002308  C079  F07D         	movff	?___awtoft+1,___ftmul@f1+1
 12813  00230C  C07A  F07E         	movff	?___awtoft+2,___ftmul@f1+2
 12814  002310  EC10  F00F         	call	___ftmul	;wreg free
 12815  002314  C07C  F08B         	movff	?___ftmul,___ftadd@f1
 12816  002318  C07D  F08C         	movff	?___ftmul+1,___ftadd@f1+1
 12817  00231C  C07E  F08D         	movff	?___ftmul+2,___ftadd@f1+2
 12818  002320  C0A3  F08E         	movff	log@x,___ftadd@f2
 12819  002324  C0A4  F08F         	movff	log@x+1,___ftadd@f2+1
 12820  002328  C0A5  F090         	movff	log@x+2,___ftadd@f2+2
 12821  00232C  EC2D  F00B         	call	___ftadd	;wreg free
 12822  002330  C08B  F0A3         	movff	?___ftadd,?_log
 12823  002334  C08C  F0A4         	movff	?___ftadd+1,?_log+1
 12824  002338  C08D  F0A5         	movff	?___ftadd+2,?_log+2
 12825  00233C  D000               	goto	l1872
 12826  00233E                     l1872:
 12827  00233E  0012               	return		;funcret
 12828  002340                     __end_of_log:
 12829                           	opt stack 0
 12830                           prodh	equ	0xFF4
 12831                           prodl	equ	0xFF3
 12832                           intcon	equ	0xFF2
 12833                           intcon2	equ	0xFF1
 12834                           intcon3	equ	0xFF0
 12835                           postinc0	equ	0xFEE
 12836                           wreg	equ	0xFE8
 12837                           indf2	equ	0xFDF
 12838                           postinc2	equ	0xFDE
 12839                           postdec2	equ	0xFDD
 12840                           fsr2h	equ	0xFDA
 12841                           fsr2l	equ	0xFD9
 12842                           status	equ	0xFD8
 12843                           
 12844 ;; *************** function _exp *****************
 12845 ;; Defined at:
 12846 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
 12847 ;; Parameters:    Size  Location     Type
 12848 ;;  x               3   76[BANK0 ] int 
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;  exponent        2   82[BANK0 ] int 
 12851 ;;  sign            1   84[BANK0 ] unsigned char 
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  3   76[BANK0 ] unsigned char 
 12854 ;; Registers used:
 12855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12856 ;; Tracked objects:
 12857 ;;		On entry : 0/0
 12858 ;;		On exit  : 0/0
 12859 ;;		Unchanged: 0/0
 12860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12861 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12865 ;;Total ram usage:        9 bytes
 12866 ;; Hardware stack levels used:    1
 12867 ;; Hardware stack levels required when called:   10
 12868 ;; This function calls:
 12869 ;;		___awtoft
 12870 ;;		___ftdiv
 12871 ;;		___ftge
 12872 ;;		___ftmul
 12873 ;;		___ftneg
 12874 ;;		___ftsub
 12875 ;;		___fttol
 12876 ;;		_eval_poly
 12877 ;;		_floor
 12878 ;;		_ldexp
 12879 ;; This function is called by:
 12880 ;;		_pow
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884                           	psect	text102
 12885  0018D8                     __ptext102:
 12886                           	opt stack 0
 12887  0018D8                     _exp:
 12888                           	opt stack 18
 12889                           
 12890                           ;incstack = 0
 12891  0018D8  0100               	movlb	0	; () banked
 12892  0018DA  51AC               	movf	exp@x& (0+255),w,b
 12893  0018DC  0100               	movlb	0	; () banked
 12894  0018DE  11AD               	iorwf	(exp@x+1)& (0+255),w,b
 12895  0018E0  0100               	movlb	0	; () banked
 12896  0018E2  11AE               	iorwf	(exp@x+2)& (0+255),w,b
 12897  0018E4  A4D8               	btfss	status,2,c
 12898  0018E6  D009               	goto	l7306
 12899                           
 12900                           ; BSR set to: 0
 12901  0018E8  0E00               	movlw	0
 12902  0018EA  0100               	movlb	0	; () banked
 12903  0018EC  6FAC               	movwf	?_exp& (0+255),b
 12904  0018EE  0E80               	movlw	128
 12905  0018F0  0100               	movlb	0	; () banked
 12906  0018F2  6FAD               	movwf	(?_exp+1)& (0+255),b
 12907  0018F4  0E3F               	movlw	63
 12908  0018F6  D03D               	goto	L11
 12909                           
 12910                           ; BSR set to: 0
 12911  0018F8  D102               	goto	l1830
 12912  0018FA                     l7306:
 12913                           
 12914                           ; BSR set to: 0
 12915  0018FA  0E72               	movlw	114
 12916  0018FC  0100               	movlb	0	; () banked
 12917  0018FE  6F70               	movwf	___ftge@ff1& (0+255),b
 12918  001900  0E31               	movlw	49
 12919  001902  0100               	movlb	0	; () banked
 12920  001904  6F71               	movwf	(___ftge@ff1+1)& (0+255),b
 12921  001906  0E44               	movlw	68
 12922  001908  0100               	movlb	0	; () banked
 12923  00190A  6F72               	movwf	(___ftge@ff1+2)& (0+255),b
 12924  00190C  C0AC  F073         	movff	exp@x,___ftge@ff2
 12925  001910  C0AD  F074         	movff	exp@x+1,___ftge@ff2+1
 12926  001914  C0AE  F075         	movff	exp@x+2,___ftge@ff2+2
 12927  001918  ECC2  F017         	call	___ftge	;wreg free
 12928  00191C  0100               	movlb	0	; () banked
 12929  00191E  B0D8               	btfsc	status,0,c
 12930  001920  D00E               	goto	l7312
 12931                           
 12932                           ; BSR set to: 0
 12933  001922  0E00               	movlw	0
 12934  001924  0100               	movlb	0	; () banked
 12935  001926  6FE0               	movwf	(_errno+1)& (0+255),b
 12936  001928  0E22               	movlw	34
 12937  00192A  6FDF               	movwf	_errno& (0+255),b
 12938  00192C  0EFF               	movlw	255
 12939  00192E  0100               	movlb	0	; () banked
 12940  001930  6FAC               	movwf	?_exp& (0+255),b
 12941  001932  0E7F               	movlw	127
 12942  001934  0100               	movlb	0	; () banked
 12943  001936  6FAD               	movwf	(?_exp+1)& (0+255),b
 12944  001938  0E7F               	movlw	127
 12945  00193A  D01B               	goto	L11
 12946                           
 12947                           ; BSR set to: 0
 12948  00193C  D0E0               	goto	l1830
 12949  00193E                     l7312:
 12950                           
 12951                           ; BSR set to: 0
 12952  00193E  C0AC  F070         	movff	exp@x,___ftge@ff1
 12953  001942  C0AD  F071         	movff	exp@x+1,___ftge@ff1+1
 12954  001946  C0AE  F072         	movff	exp@x+2,___ftge@ff1+2
 12955  00194A  0E49               	movlw	73
 12956  00194C  0100               	movlb	0	; () banked
 12957  00194E  6F73               	movwf	___ftge@ff2& (0+255),b
 12958  001950  0E3A               	movlw	58
 12959  001952  0100               	movlb	0	; () banked
 12960  001954  6F74               	movwf	(___ftge@ff2+1)& (0+255),b
 12961  001956  0EC4               	movlw	196
 12962  001958  0100               	movlb	0	; () banked
 12963  00195A  6F75               	movwf	(___ftge@ff2+2)& (0+255),b
 12964  00195C  ECC2  F017         	call	___ftge	;wreg free
 12965  001960  0100               	movlb	0	; () banked
 12966  001962  B0D8               	btfsc	status,0,c
 12967  001964  D009               	goto	l7318
 12968                           
 12969                           ; BSR set to: 0
 12970  001966  0E00               	movlw	0
 12971  001968  0100               	movlb	0	; () banked
 12972  00196A  6FE0               	movwf	(_errno+1)& (0+255),b
 12973  00196C  0E22               	movlw	34
 12974  00196E  6FDF               	movwf	_errno& (0+255),b
 12975  001970  D09F               	goto	l7336
 12976  001972                     L11:
 12977  001972  0100               	movlb	0	; () banked
 12978  001974  6FAE               	movwf	(?_exp+2)& (0+255),b
 12979                           
 12980                           ; BSR set to: 0
 12981  001976  D0C3               	goto	l1830
 12982  001978                     l7318:
 12983                           
 12984                           ; BSR set to: 0
 12985  001978  0100               	movlb	0	; () banked
 12986  00197A  AFAE               	btfss	(exp@x+2)& (0+255),7,b
 12987  00197C  D002               	goto	u7220
 12988  00197E  0E01               	movlw	1
 12989  001980  D001               	goto	u7230
 12990  001982                     u7220:
 12991  001982  0E00               	movlw	0
 12992  001984                     u7230:
 12993  001984  0100               	movlb	0	; () banked
 12994  001986  6FB4               	movwf	exp@sign& (0+255),b
 12995                           
 12996                           ; BSR set to: 0
 12997  001988  0100               	movlb	0	; () banked
 12998  00198A  51B4               	movf	exp@sign& (0+255),w,b
 12999  00198C  0100               	movlb	0	; () banked
 13000  00198E  B4D8               	btfsc	status,2,c
 13001  001990  D00E               	goto	l1833
 13002                           
 13003                           ; BSR set to: 0
 13004  001992  C0AC  F070         	movff	exp@x,___ftneg@f1
 13005  001996  C0AD  F071         	movff	exp@x+1,___ftneg@f1+1
 13006  00199A  C0AE  F072         	movff	exp@x+2,___ftneg@f1+2
 13007  00199E  EC5F  F021         	call	___ftneg	;wreg free
 13008  0019A2  C070  F0AC         	movff	?___ftneg,exp@x
 13009  0019A6  C071  F0AD         	movff	?___ftneg+1,exp@x+1
 13010  0019AA  C072  F0AE         	movff	?___ftneg+2,exp@x+2
 13011  0019AE                     l1833:
 13012  0019AE  C0AC  F07C         	movff	exp@x,___ftmul@f1
 13013  0019B2  C0AD  F07D         	movff	exp@x+1,___ftmul@f1+1
 13014  0019B6  C0AE  F07E         	movff	exp@x+2,___ftmul@f1+2
 13015  0019BA  0EAA               	movlw	170
 13016  0019BC  0100               	movlb	0	; () banked
 13017  0019BE  6F7F               	movwf	___ftmul@f2& (0+255),b
 13018  0019C0  0EB8               	movlw	184
 13019  0019C2  0100               	movlb	0	; () banked
 13020  0019C4  6F80               	movwf	(___ftmul@f2+1)& (0+255),b
 13021  0019C6  0E3F               	movlw	63
 13022  0019C8  0100               	movlb	0	; () banked
 13023  0019CA  6F81               	movwf	(___ftmul@f2+2)& (0+255),b
 13024  0019CC  EC10  F00F         	call	___ftmul	;wreg free
 13025  0019D0  C07C  F0AC         	movff	?___ftmul,exp@x
 13026  0019D4  C07D  F0AD         	movff	?___ftmul+1,exp@x+1
 13027  0019D8  C07E  F0AE         	movff	?___ftmul+2,exp@x+2
 13028  0019DC  C0AC  F0A4         	movff	exp@x,floor@x
 13029  0019E0  C0AD  F0A5         	movff	exp@x+1,floor@x+1
 13030  0019E4  C0AE  F0A6         	movff	exp@x+2,floor@x+2
 13031  0019E8  EC7B  F014         	call	_floor	;wreg free
 13032  0019EC  C0A4  F0AF         	movff	?_floor,_exp$3813
 13033  0019F0  C0A5  F0B0         	movff	?_floor+1,_exp$3813+1
 13034  0019F4  C0A6  F0B1         	movff	?_floor+2,_exp$3813+2
 13035  0019F8  C0AF  F08B         	movff	_exp$3813,___fttol@f1
 13036  0019FC  C0B0  F08C         	movff	_exp$3813+1,___fttol@f1+1
 13037  001A00  C0B1  F08D         	movff	_exp$3813+2,___fttol@f1+2
 13038  001A04  ECA0  F011         	call	___fttol	;wreg free
 13039  001A08  C08B  F0B2         	movff	?___fttol,exp@exponent
 13040  001A0C  C08C  F0B3         	movff	?___fttol+1,exp@exponent+1
 13041  001A10  C0AC  F097         	movff	exp@x,___ftsub@f1
 13042  001A14  C0AD  F098         	movff	exp@x+1,___ftsub@f1+1
 13043  001A18  C0AE  F099         	movff	exp@x+2,___ftsub@f1+2
 13044  001A1C  C0B2  F078         	movff	exp@exponent,___awtoft@c
 13045  001A20  C0B3  F079         	movff	exp@exponent+1,___awtoft@c+1
 13046  001A24  EC10  F01F         	call	___awtoft	;wreg free
 13047  001A28  C078  F09A         	movff	?___awtoft,___ftsub@f2
 13048  001A2C  C079  F09B         	movff	?___awtoft+1,___ftsub@f2+1
 13049  001A30  C07A  F09C         	movff	?___awtoft+2,___ftsub@f2+2
 13050  001A34  ECC1  F01E         	call	___ftsub	;wreg free
 13051  001A38  C097  F0AC         	movff	?___ftsub,exp@x
 13052  001A3C  C098  F0AD         	movff	?___ftsub+1,exp@x+1
 13053  001A40  C099  F0AE         	movff	?___ftsub+2,exp@x+2
 13054  001A44  C0AC  F097         	movff	exp@x,eval_poly@x
 13055  001A48  C0AD  F098         	movff	exp@x+1,eval_poly@x+1
 13056  001A4C  C0AE  F099         	movff	exp@x+2,eval_poly@x+2
 13057  001A50  0E01               	movlw	low exp@coeff
 13058  001A52  0100               	movlb	0	; () banked
 13059  001A54  6F9A               	movwf	eval_poly@d& (0+255),b
 13060  001A56  0E10               	movlw	high exp@coeff
 13061  001A58  0100               	movlb	0	; () banked
 13062  001A5A  6F9B               	movwf	(eval_poly@d+1)& (0+255),b
 13063  001A5C  0E00               	movlw	0
 13064  001A5E  0100               	movlb	0	; () banked
 13065  001A60  6F9D               	movwf	(eval_poly@n+1)& (0+255),b
 13066  001A62  0E09               	movlw	9
 13067  001A64  6F9C               	movwf	eval_poly@n& (0+255),b
 13068  001A66  EC74  F015         	call	_eval_poly	;wreg free
 13069  001A6A  C097  F0A3         	movff	?_eval_poly,ldexp@value
 13070  001A6E  C098  F0A4         	movff	?_eval_poly+1,ldexp@value+1
 13071  001A72  C099  F0A5         	movff	?_eval_poly+2,ldexp@value+2
 13072  001A76  C0B2  F0A6         	movff	exp@exponent,ldexp@newexp
 13073  001A7A  C0B3  F0A7         	movff	exp@exponent+1,ldexp@newexp+1
 13074  001A7E  ECF0  F013         	call	_ldexp	;wreg free
 13075  001A82  C0A3  F0AC         	movff	?_ldexp,exp@x
 13076  001A86  C0A4  F0AD         	movff	?_ldexp+1,exp@x+1
 13077  001A8A  C0A5  F0AE         	movff	?_ldexp+2,exp@x+2
 13078  001A8E  0100               	movlb	0	; () banked
 13079  001A90  51B4               	movf	exp@sign& (0+255),w,b
 13080  001A92  0100               	movlb	0	; () banked
 13081  001A94  B4D8               	btfsc	status,2,c
 13082  001A96  D02D               	goto	l1834
 13083                           
 13084                           ; BSR set to: 0
 13085  001A98  0100               	movlb	0	; () banked
 13086  001A9A  29AC               	incf	exp@x& (0+255),w,b
 13087  001A9C  E112               	bnz	l7340
 13088  001A9E  0E7F               	movlw	127
 13089  001AA0  0100               	movlb	0	; () banked
 13090  001AA2  19AD               	xorwf	(exp@x+1)& (0+255),w,b
 13091  001AA4  E10E               	bnz	l7340
 13092  001AA6  0E7F               	movlw	127
 13093  001AA8  0100               	movlb	0	; () banked
 13094  001AAA  19AE               	xorwf	(exp@x+2)& (0+255),w,b
 13095  001AAC  A4D8               	btfss	status,2,c
 13096  001AAE  D009               	goto	l7340
 13097  001AB0                     l7336:
 13098                           
 13099                           ; BSR set to: 0
 13100  001AB0  0E00               	movlw	0
 13101  001AB2  0100               	movlb	0	; () banked
 13102  001AB4  6FAC               	movwf	?_exp& (0+255),b
 13103  001AB6  0E00               	movlw	0
 13104  001AB8  0100               	movlb	0	; () banked
 13105  001ABA  6FAD               	movwf	(?_exp+1)& (0+255),b
 13106  001ABC  0E00               	movlw	0
 13107  001ABE  D759               	goto	L11
 13108                           
 13109                           ; BSR set to: 0
 13110  001AC0  D01E               	goto	l1830
 13111  001AC2                     l7340:
 13112                           
 13113                           ; BSR set to: 0
 13114  001AC2  0E00               	movlw	0
 13115  001AC4  0100               	movlb	0	; () banked
 13116  001AC6  6F78               	movwf	___ftdiv@f1& (0+255),b
 13117  001AC8  0E80               	movlw	128
 13118  001ACA  0100               	movlb	0	; () banked
 13119  001ACC  6F79               	movwf	(___ftdiv@f1+1)& (0+255),b
 13120  001ACE  0E3F               	movlw	63
 13121  001AD0  0100               	movlb	0	; () banked
 13122  001AD2  6F7A               	movwf	(___ftdiv@f1+2)& (0+255),b
 13123  001AD4  C0AC  F07B         	movff	exp@x,___ftdiv@f2
 13124  001AD8  C0AD  F07C         	movff	exp@x+1,___ftdiv@f2+1
 13125  001ADC  C0AE  F07D         	movff	exp@x+2,___ftdiv@f2+2
 13126  001AE0  EC5F  F010         	call	___ftdiv	;wreg free
 13127  001AE4  C078  F0AC         	movff	?___ftdiv,?_exp
 13128  001AE8  C079  F0AD         	movff	?___ftdiv+1,?_exp+1
 13129  001AEC  C07A  F0AE         	movff	?___ftdiv+2,?_exp+2
 13130  001AF0  D006               	goto	l1830
 13131  001AF2                     l1834:
 13132                           
 13133                           ; BSR set to: 0
 13134  001AF2  C0AC  F0AC         	movff	exp@x,?_exp
 13135  001AF6  C0AD  F0AD         	movff	exp@x+1,?_exp+1
 13136  001AFA  C0AE  F0AE         	movff	exp@x+2,?_exp+2
 13137  001AFE                     l1830:
 13138  001AFE  0012               	return		;funcret
 13139  001B00                     __end_of_exp:
 13140                           	opt stack 0
 13141                           prodh	equ	0xFF4
 13142                           prodl	equ	0xFF3
 13143                           intcon	equ	0xFF2
 13144                           intcon2	equ	0xFF1
 13145                           intcon3	equ	0xFF0
 13146                           postinc0	equ	0xFEE
 13147                           wreg	equ	0xFE8
 13148                           indf2	equ	0xFDF
 13149                           postinc2	equ	0xFDE
 13150                           postdec2	equ	0xFDD
 13151                           fsr2h	equ	0xFDA
 13152                           fsr2l	equ	0xFD9
 13153                           status	equ	0xFD8
 13154                           
 13155 ;; *************** function _ldexp *****************
 13156 ;; Defined at:
 13157 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;  value           3   67[BANK0 ] unsigned char 
 13160 ;;  newexp          2   70[BANK0 ] int 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;		None
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  3   67[BANK0 ] int 
 13165 ;; Registers used:
 13166 ;;		wreg, status,2, status,0
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13172 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13175 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13176 ;;Total ram usage:        7 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:    7
 13179 ;; This function calls:
 13180 ;;		Nothing
 13181 ;; This function is called by:
 13182 ;;		_exp
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text103
 13187  0027E0                     __ptext103:
 13188                           	opt stack 0
 13189  0027E0                     _ldexp:
 13190                           	opt stack 20
 13191                           
 13192                           ;incstack = 0
 13193  0027E0  0100               	movlb	0	; () banked
 13194  0027E2  51A3               	movf	ldexp@value& (0+255),w,b
 13195  0027E4  0100               	movlb	0	; () banked
 13196  0027E6  11A4               	iorwf	(ldexp@value+1)& (0+255),w,b
 13197  0027E8  0100               	movlb	0	; () banked
 13198  0027EA  11A5               	iorwf	(ldexp@value+2)& (0+255),w,b
 13199  0027EC  A4D8               	btfss	status,2,c
 13200  0027EE  D002               	goto	l7036
 13201  0027F0  D02A               	goto	L12
 13202                           
 13203                           ; BSR set to: 0
 13204                           
 13205                           ; BSR set to: 0
 13206  0027F2  D080               	goto	l1854
 13207  0027F4                     l7036:
 13208                           
 13209                           ; BSR set to: 0
 13210  0027F4  0100               	movlb	0	; () banked
 13211  0027F6  51A5               	movf	(ldexp@value+2)& (0+255),w,b
 13212  0027F8  0B7F               	andlw	127
 13213  0027FA  0100               	movlb	0	; () banked
 13214  0027FC  6FA8               	movwf	??_ldexp& (0+255),b
 13215  0027FE  6BA9               	clrf	(??_ldexp+1)& (0+255),b
 13216  002800  90D8               	bcf	status,0,c
 13217  002802  0100               	movlb	0	; () banked
 13218  002804  37A8               	rlcf	??_ldexp& (0+255),f,b
 13219  002806  37A9               	rlcf	(??_ldexp+1)& (0+255),f,b
 13220  002808  0100               	movlb	0	; () banked
 13221  00280A  51A8               	movf	??_ldexp& (0+255),w,b
 13222  00280C  0100               	movlb	0	; () banked
 13223  00280E  27A6               	addwf	ldexp@newexp& (0+255),f,b
 13224  002810  0100               	movlb	0	; () banked
 13225  002812  51A9               	movf	(??_ldexp+1)& (0+255),w,b
 13226  002814  0100               	movlb	0	; () banked
 13227  002816  23A7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 13228  002818  0100               	movlb	0	; () banked
 13229  00281A  AFA4               	btfss	(ldexp@value+1)& (0+255),7,b
 13230  00281C  D004               	goto	u6870
 13231  00281E  0100               	movlb	0	; () banked
 13232  002820  6BA8               	clrf	??_ldexp& (0+255),b
 13233  002822  2BA8               	incf	??_ldexp& (0+255),f,b
 13234  002824  D002               	goto	u6878
 13235  002826                     u6870:
 13236  002826  0100               	movlb	0	; () banked
 13237  002828  6BA8               	clrf	??_ldexp& (0+255),b
 13238  00282A                     u6878:
 13239  00282A  0100               	movlb	0	; () banked
 13240  00282C  51A8               	movf	??_ldexp& (0+255),w,b
 13241  00282E  0100               	movlb	0	; () banked
 13242  002830  27A6               	addwf	ldexp@newexp& (0+255),f,b
 13243  002832  0E00               	movlw	0
 13244  002834  23A7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 13245  002836  0100               	movlb	0	; () banked
 13246  002838  AFA7               	btfss	(ldexp@newexp+1)& (0+255),7,b
 13247  00283A  D00F               	goto	l7044
 13248                           
 13249                           ; BSR set to: 0
 13250  00283C  0E00               	movlw	0
 13251  00283E  0100               	movlb	0	; () banked
 13252  002840  6FE0               	movwf	(_errno+1)& (0+255),b
 13253  002842  0E22               	movlw	34
 13254  002844  6FDF               	movwf	_errno& (0+255),b
 13255  002846                     L12:
 13256  002846  0E00               	movlw	0
 13257  002848  0100               	movlb	0	; () banked
 13258  00284A  6FA3               	movwf	?_ldexp& (0+255),b
 13259  00284C  0E00               	movlw	0
 13260  00284E  0100               	movlb	0	; () banked
 13261  002850  6FA4               	movwf	(?_ldexp+1)& (0+255),b
 13262  002852  0E00               	movlw	0
 13263  002854  D022               	goto	L14
 13264                           
 13265                           ; BSR set to: 0
 13266  002856  D04E               	goto	l1854
 13267                           
 13268                           ; BSR set to: 0
 13269  002858  D046               	goto	l7062
 13270  00285A                     l7044:
 13271                           
 13272                           ; BSR set to: 0
 13273  00285A  0100               	movlb	0	; () banked
 13274  00285C  BFA7               	btfsc	(ldexp@newexp+1)& (0+255),7,b
 13275  00285E  D021               	goto	l7060
 13276  002860  0100               	movlb	0	; () banked
 13277  002862  05A7               	decf	(ldexp@newexp+1)& (0+255),w,b
 13278  002864  A0D8               	btfss	status,0,c
 13279  002866  D01D               	goto	l7060
 13280                           
 13281                           ; BSR set to: 0
 13282  002868  0E00               	movlw	0
 13283  00286A  0100               	movlb	0	; () banked
 13284  00286C  6FE0               	movwf	(_errno+1)& (0+255),b
 13285  00286E  0E22               	movlw	34
 13286  002870  6FDF               	movwf	_errno& (0+255),b
 13287                           
 13288                           ; BSR set to: 0
 13289  002872  0100               	movlb	0	; () banked
 13290  002874  AFA5               	btfss	(ldexp@value+2)& (0+255),7,b
 13291  002876  D00A               	goto	l7056
 13292                           
 13293                           ; BSR set to: 0
 13294  002878  0EFF               	movlw	255
 13295  00287A  0100               	movlb	0	; () banked
 13296  00287C  6FA3               	movwf	?_ldexp& (0+255),b
 13297  00287E  0E7F               	movlw	127
 13298  002880  0100               	movlb	0	; () banked
 13299  002882  6FA4               	movwf	(?_ldexp+1)& (0+255),b
 13300  002884  0EFF               	movlw	255
 13301  002886  D009               	goto	L14
 13302                           
 13303                           ; BSR set to: 0
 13304  002888  D035               	goto	l1854
 13305                           
 13306                           ; BSR set to: 0
 13307  00288A  D02D               	goto	l7062
 13308  00288C                     l7056:
 13309                           
 13310                           ; BSR set to: 0
 13311  00288C  0EFF               	movlw	255
 13312  00288E  0100               	movlb	0	; () banked
 13313  002890  6FA3               	movwf	?_ldexp& (0+255),b
 13314  002892  0E7F               	movlw	127
 13315  002894  0100               	movlb	0	; () banked
 13316  002896  6FA4               	movwf	(?_ldexp+1)& (0+255),b
 13317  002898  0E7F               	movlw	127
 13318  00289A                     L14:
 13319  00289A  0100               	movlb	0	; () banked
 13320  00289C  6FA5               	movwf	(?_ldexp+2)& (0+255),b
 13321                           
 13322                           ; BSR set to: 0
 13323  00289E  D02A               	goto	l1854
 13324                           
 13325                           ; BSR set to: 0
 13326  0028A0  D022               	goto	l7062
 13327  0028A2                     l7060:
 13328                           
 13329                           ; BSR set to: 0
 13330  0028A2  0100               	movlb	0	; () banked
 13331  0028A4  35A7               	rlcf	(ldexp@newexp+1)& (0+255),w,b
 13332  0028A6  31A7               	rrcf	(ldexp@newexp+1)& (0+255),w,b
 13333  0028A8  0100               	movlb	0	; () banked
 13334  0028AA  6FA9               	movwf	(??_ldexp+1)& (0+255),b
 13335  0028AC  0100               	movlb	0	; () banked
 13336  0028AE  31A6               	rrcf	ldexp@newexp& (0+255),w,b
 13337  0028B0  0100               	movlb	0	; () banked
 13338  0028B2  6FA8               	movwf	??_ldexp& (0+255),b
 13339  0028B4  0100               	movlb	0	; () banked
 13340  0028B6  51A5               	movf	(ldexp@value+2)& (0+255),w,b
 13341  0028B8  0100               	movlb	0	; () banked
 13342  0028BA  19A8               	xorwf	??_ldexp& (0+255),w,b
 13343  0028BC  0B80               	andlw	-128
 13344  0028BE  19A8               	xorwf	??_ldexp& (0+255),w,b
 13345  0028C0  0100               	movlb	0	; () banked
 13346  0028C2  6FA5               	movwf	(ldexp@value+2)& (0+255),b
 13347  0028C4  C0A6  F0A8         	movff	ldexp@newexp,??_ldexp
 13348  0028C8  0E01               	movlw	1
 13349  0028CA  0100               	movlb	0	; () banked
 13350  0028CC  17A8               	andwf	??_ldexp& (0+255),f,b
 13351  0028CE  0100               	movlb	0	; () banked
 13352  0028D0  33A8               	rrcf	??_ldexp& (0+255),f,b
 13353  0028D2  33A8               	rrcf	??_ldexp& (0+255),f,b
 13354  0028D4  0100               	movlb	0	; () banked
 13355  0028D6  51A4               	movf	(ldexp@value+1)& (0+255),w,b
 13356  0028D8  0100               	movlb	0	; () banked
 13357  0028DA  19A8               	xorwf	??_ldexp& (0+255),w,b
 13358  0028DC  0B7F               	andlw	-129
 13359  0028DE  19A8               	xorwf	??_ldexp& (0+255),w,b
 13360  0028E0  0100               	movlb	0	; () banked
 13361  0028E2  6FA4               	movwf	(ldexp@value+1)& (0+255),b
 13362                           
 13363                           ; BSR set to: 0
 13364  0028E4  D000               	goto	l7062
 13365  0028E6                     l7062:
 13366                           
 13367                           ; BSR set to: 0
 13368  0028E6  C0A3  F0A3         	movff	ldexp@value,?_ldexp
 13369  0028EA  C0A4  F0A4         	movff	ldexp@value+1,?_ldexp+1
 13370  0028EE  C0A5  F0A5         	movff	ldexp@value+2,?_ldexp+2
 13371  0028F2  D000               	goto	l1854
 13372  0028F4                     l1854:
 13373                           
 13374                           ; BSR set to: 0
 13375  0028F4  0012               	return		;funcret
 13376  0028F6                     __end_of_ldexp:
 13377                           	opt stack 0
 13378                           prodh	equ	0xFF4
 13379                           prodl	equ	0xFF3
 13380                           intcon	equ	0xFF2
 13381                           intcon2	equ	0xFF1
 13382                           intcon3	equ	0xFF0
 13383                           postinc0	equ	0xFEE
 13384                           wreg	equ	0xFE8
 13385                           indf2	equ	0xFDF
 13386                           postinc2	equ	0xFDE
 13387                           postdec2	equ	0xFDD
 13388                           fsr2h	equ	0xFDA
 13389                           fsr2l	equ	0xFD9
 13390                           status	equ	0xFD8
 13391                           
 13392 ;; *************** function _floor *****************
 13393 ;; Defined at:
 13394 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  x               3   68[BANK0 ] int 
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;  i               3   71[BANK0 ] int 
 13399 ;;  expon           2   74[BANK0 ] int 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  3   68[BANK0 ] int 
 13402 ;; Registers used:
 13403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13409 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13410 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13412 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13413 ;;Total ram usage:        8 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    9
 13416 ;; This function calls:
 13417 ;;		___altoft
 13418 ;;		___ftadd
 13419 ;;		___ftge
 13420 ;;		___fttol
 13421 ;;		_frexp
 13422 ;; This function is called by:
 13423 ;;		_exp
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           	psect	text104
 13428  0028F6                     __ptext104:
 13429                           	opt stack 0
 13430  0028F6                     _floor:
 13431                           	opt stack 18
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;incstack = 0
 13435  0028F6  C0A4  F070         	movff	floor@x,frexp@value
 13436  0028FA  C0A5  F071         	movff	floor@x+1,frexp@value+1
 13437  0028FE  C0A6  F072         	movff	floor@x+2,frexp@value+2
 13438  002902  0EAA               	movlw	low floor@expon
 13439  002904  0100               	movlb	0	; () banked
 13440  002906  6F73               	movwf	frexp@eptr& (0+255),b
 13441  002908  0E00               	movlw	high floor@expon
 13442  00290A  0100               	movlb	0	; () banked
 13443  00290C  6F74               	movwf	(frexp@eptr+1)& (0+255),b
 13444  00290E  EC3A  F019         	call	_frexp	;wreg free
 13445  002912  0100               	movlb	0	; () banked
 13446  002914  AFAB               	btfss	(floor@expon+1)& (0+255),7,b
 13447  002916  D016               	goto	l7014
 13448                           
 13449                           ; BSR set to: 0
 13450  002918  0100               	movlb	0	; () banked
 13451  00291A  AFA6               	btfss	(floor@x+2)& (0+255),7,b
 13452  00291C  D009               	goto	l7010
 13453                           
 13454                           ; BSR set to: 0
 13455  00291E  0E00               	movlw	0
 13456  002920  0100               	movlb	0	; () banked
 13457  002922  6FA4               	movwf	?_floor& (0+255),b
 13458  002924  0E80               	movlw	128
 13459  002926  0100               	movlb	0	; () banked
 13460  002928  6FA5               	movwf	(?_floor+1)& (0+255),b
 13461  00292A  0EBF               	movlw	191
 13462  00292C  D008               	goto	L15
 13463                           
 13464                           ; BSR set to: 0
 13465  00292E  D060               	goto	l1842
 13466  002930                     l7010:
 13467                           
 13468                           ; BSR set to: 0
 13469  002930  0E00               	movlw	0
 13470  002932  0100               	movlb	0	; () banked
 13471  002934  6FA4               	movwf	?_floor& (0+255),b
 13472  002936  0E00               	movlw	0
 13473  002938  0100               	movlb	0	; () banked
 13474  00293A  6FA5               	movwf	(?_floor+1)& (0+255),b
 13475  00293C  0E00               	movlw	0
 13476  00293E                     L15:
 13477  00293E  0100               	movlb	0	; () banked
 13478  002940  6FA6               	movwf	(?_floor+2)& (0+255),b
 13479                           
 13480                           ; BSR set to: 0
 13481  002942  D056               	goto	l1842
 13482  002944                     l7014:
 13483                           
 13484                           ; BSR set to: 0
 13485  002944  0100               	movlb	0	; () banked
 13486  002946  51AB               	movf	(floor@expon+1)& (0+255),w,b
 13487  002948  E105               	bnz	u6830
 13488  00294A  0E15               	movlw	21
 13489  00294C  0100               	movlb	0	; () banked
 13490  00294E  5DAA               	subwf	floor@expon& (0+255),w,b
 13491  002950  A0D8               	btfss	status,0,c
 13492  002952  D007               	goto	l7018
 13493  002954                     u6830:
 13494                           
 13495                           ; BSR set to: 0
 13496  002954  C0A4  F0A4         	movff	floor@x,?_floor
 13497  002958  C0A5  F0A5         	movff	floor@x+1,?_floor+1
 13498  00295C  C0A6  F0A6         	movff	floor@x+2,?_floor+2
 13499  002960  D047               	goto	l1842
 13500  002962                     l7018:
 13501                           
 13502                           ; BSR set to: 0
 13503  002962  C0A4  F08B         	movff	floor@x,___fttol@f1
 13504  002966  C0A5  F08C         	movff	floor@x+1,___fttol@f1+1
 13505  00296A  C0A6  F08D         	movff	floor@x+2,___fttol@f1+2
 13506  00296E  ECA0  F011         	call	___fttol	;wreg free
 13507  002972  C08B  F09A         	movff	?___fttol,___altoft@c
 13508  002976  C08C  F09B         	movff	?___fttol+1,___altoft@c+1
 13509  00297A  C08D  F09C         	movff	?___fttol+2,___altoft@c+2
 13510  00297E  C08E  F09D         	movff	?___fttol+3,___altoft@c+3
 13511  002982  EC35  F01A         	call	___altoft	;wreg free
 13512  002986  C09A  F0A7         	movff	?___altoft,floor@i
 13513  00298A  C09B  F0A8         	movff	?___altoft+1,floor@i+1
 13514  00298E  C09C  F0A9         	movff	?___altoft+2,floor@i+2
 13515  002992  C0A4  F070         	movff	floor@x,___ftge@ff1
 13516  002996  C0A5  F071         	movff	floor@x+1,___ftge@ff1+1
 13517  00299A  C0A6  F072         	movff	floor@x+2,___ftge@ff1+2
 13518  00299E  C0A7  F073         	movff	floor@i,___ftge@ff2
 13519  0029A2  C0A8  F074         	movff	floor@i+1,___ftge@ff2+1
 13520  0029A6  C0A9  F075         	movff	floor@i+2,___ftge@ff2+2
 13521  0029AA  ECC2  F017         	call	___ftge	;wreg free
 13522  0029AE  0100               	movlb	0	; () banked
 13523  0029B0  B0D8               	btfsc	status,0,c
 13524  0029B2  D018               	goto	l1844
 13525                           
 13526                           ; BSR set to: 0
 13527  0029B4  C0A7  F08B         	movff	floor@i,___ftadd@f1
 13528  0029B8  C0A8  F08C         	movff	floor@i+1,___ftadd@f1+1
 13529  0029BC  C0A9  F08D         	movff	floor@i+2,___ftadd@f1+2
 13530  0029C0  0E00               	movlw	0
 13531  0029C2  0100               	movlb	0	; () banked
 13532  0029C4  6F8E               	movwf	___ftadd@f2& (0+255),b
 13533  0029C6  0E80               	movlw	128
 13534  0029C8  0100               	movlb	0	; () banked
 13535  0029CA  6F8F               	movwf	(___ftadd@f2+1)& (0+255),b
 13536  0029CC  0EBF               	movlw	191
 13537  0029CE  0100               	movlb	0	; () banked
 13538  0029D0  6F90               	movwf	(___ftadd@f2+2)& (0+255),b
 13539  0029D2  EC2D  F00B         	call	___ftadd	;wreg free
 13540  0029D6  C08B  F0A4         	movff	?___ftadd,?_floor
 13541  0029DA  C08C  F0A5         	movff	?___ftadd+1,?_floor+1
 13542  0029DE  C08D  F0A6         	movff	?___ftadd+2,?_floor+2
 13543  0029E2  D006               	goto	l1842
 13544  0029E4                     l1844:
 13545                           
 13546                           ; BSR set to: 0
 13547  0029E4  C0A7  F0A4         	movff	floor@i,?_floor
 13548  0029E8  C0A8  F0A5         	movff	floor@i+1,?_floor+1
 13549  0029EC  C0A9  F0A6         	movff	floor@i+2,?_floor+2
 13550  0029F0                     l1842:
 13551  0029F0  0012               	return		;funcret
 13552  0029F2                     __end_of_floor:
 13553                           	opt stack 0
 13554                           prodh	equ	0xFF4
 13555                           prodl	equ	0xFF3
 13556                           intcon	equ	0xFF2
 13557                           intcon2	equ	0xFF1
 13558                           intcon3	equ	0xFF0
 13559                           postinc0	equ	0xFEE
 13560                           wreg	equ	0xFE8
 13561                           indf2	equ	0xFDF
 13562                           postinc2	equ	0xFDE
 13563                           postdec2	equ	0xFDD
 13564                           fsr2h	equ	0xFDA
 13565                           fsr2l	equ	0xFD9
 13566                           status	equ	0xFD8
 13567                           
 13568 ;; *************** function _frexp *****************
 13569 ;; Defined at:
 13570 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;  value           3   16[BANK0 ] int 
 13573 ;;  eptr            2   19[BANK0 ] PTR int 
 13574 ;;		 -> log@exponent(2), floor@expon(2), 
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;		None
 13577 ;; Return value:  Size  Location     Type
 13578 ;;                  3   16[BANK0 ] PTR int 
 13579 ;; Registers used:
 13580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 0/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13586 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13589 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13590 ;;Total ram usage:        7 bytes
 13591 ;; Hardware stack levels used:    1
 13592 ;; Hardware stack levels required when called:    7
 13593 ;; This function calls:
 13594 ;;		Nothing
 13595 ;; This function is called by:
 13596 ;;		_floor
 13597 ;;		_log
 13598 ;; This function uses a non-reentrant model
 13599 ;;
 13600                           
 13601                           	psect	text105
 13602  003274                     __ptext105:
 13603                           	opt stack 0
 13604  003274                     _frexp:
 13605                           	opt stack 20
 13606                           
 13607                           ;incstack = 0
 13608  003274  0100               	movlb	0	; () banked
 13609  003276  5170               	movf	frexp@value& (0+255),w,b
 13610  003278  0100               	movlb	0	; () banked
 13611  00327A  1171               	iorwf	(frexp@value+1)& (0+255),w,b
 13612  00327C  0100               	movlb	0	; () banked
 13613  00327E  1172               	iorwf	(frexp@value+2)& (0+255),w,b
 13614  003280  A4D8               	btfss	status,2,c
 13615  003282  D012               	goto	l6768
 13616                           
 13617                           ; BSR set to: 0
 13618  003284  C073  FFD9         	movff	frexp@eptr,fsr2l
 13619  003288  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13620  00328C  0E00               	movlw	0
 13621  00328E  6EDE               	movwf	postinc2,c
 13622  003290  0E00               	movlw	0
 13623  003292  6EDD               	movwf	postdec2,c
 13624                           
 13625                           ; BSR set to: 0
 13626  003294  0E00               	movlw	0
 13627  003296  0100               	movlb	0	; () banked
 13628  003298  6F70               	movwf	?_frexp& (0+255),b
 13629  00329A  0E00               	movlw	0
 13630  00329C  0100               	movlb	0	; () banked
 13631  00329E  6F71               	movwf	(?_frexp+1)& (0+255),b
 13632  0032A0  0E00               	movlw	0
 13633  0032A2  0100               	movlb	0	; () banked
 13634  0032A4  6F72               	movwf	(?_frexp+2)& (0+255),b
 13635                           
 13636                           ; BSR set to: 0
 13637  0032A6  D03C               	goto	l1850
 13638  0032A8                     l6768:
 13639                           
 13640                           ; BSR set to: 0
 13641  0032A8  0100               	movlb	0	; () banked
 13642  0032AA  5172               	movf	(frexp@value+2)& (0+255),w,b
 13643  0032AC  0B7F               	andlw	127
 13644  0032AE  0100               	movlb	0	; () banked
 13645  0032B0  6F75               	movwf	??_frexp& (0+255),b
 13646  0032B2  6B76               	clrf	(??_frexp+1)& (0+255),b
 13647  0032B4  90D8               	bcf	status,0,c
 13648  0032B6  0100               	movlb	0	; () banked
 13649  0032B8  3775               	rlcf	??_frexp& (0+255),f,b
 13650  0032BA  3776               	rlcf	(??_frexp+1)& (0+255),f,b
 13651  0032BC  C073  FFD9         	movff	frexp@eptr,fsr2l
 13652  0032C0  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13653  0032C4  C075  FFDE         	movff	??_frexp,postinc2
 13654  0032C8  C076  FFDD         	movff	??_frexp+1,postdec2
 13655  0032CC  0100               	movlb	0	; () banked
 13656  0032CE  AF71               	btfss	(frexp@value+1)& (0+255),7,b
 13657  0032D0  D004               	goto	u6490
 13658  0032D2  0100               	movlb	0	; () banked
 13659  0032D4  6B75               	clrf	??_frexp& (0+255),b
 13660  0032D6  2B75               	incf	??_frexp& (0+255),f,b
 13661  0032D8  D002               	goto	u6498
 13662  0032DA                     u6490:
 13663  0032DA  0100               	movlb	0	; () banked
 13664  0032DC  6B75               	clrf	??_frexp& (0+255),b
 13665  0032DE                     u6498:
 13666  0032DE  0100               	movlb	0	; () banked
 13667  0032E0  5175               	movf	??_frexp& (0+255),w,b
 13668  0032E2  C073  FFD9         	movff	frexp@eptr,fsr2l
 13669  0032E6  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13670  0032EA  12DE               	iorwf	postinc2,f,c
 13671  0032EC  0E00               	movlw	0
 13672  0032EE  12DD               	iorwf	postdec2,f,c
 13673                           
 13674                           ; BSR set to: 0
 13675  0032F0  C073  FFD9         	movff	frexp@eptr,fsr2l
 13676  0032F4  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13677  0032F8  0E82               	movlw	130
 13678  0032FA  26DE               	addwf	postinc2,f,c
 13679  0032FC  0EFF               	movlw	255
 13680  0032FE  22DD               	addwfc	postdec2,f,c
 13681                           
 13682                           ; BSR set to: 0
 13683  003300  8172               	bsf	(frexp@value+2)& (0+255),0,b
 13684  003302  8372               	bsf	(frexp@value+2)& (0+255),1,b
 13685  003304  8572               	bsf	(frexp@value+2)& (0+255),2,b
 13686  003306  8772               	bsf	(frexp@value+2)& (0+255),3,b
 13687  003308  8972               	bsf	(frexp@value+2)& (0+255),4,b
 13688  00330A  8B72               	bsf	(frexp@value+2)& (0+255),5,b
 13689  00330C  9D72               	bcf	(frexp@value+2)& (0+255),6,b
 13690                           
 13691                           ; BSR set to: 0
 13692  00330E  0100               	movlb	0	; () banked
 13693  003310  9F71               	bcf	(frexp@value+1)& (0+255),7,b
 13694                           
 13695                           ; BSR set to: 0
 13696  003312  C070  F070         	movff	frexp@value,?_frexp
 13697  003316  C071  F071         	movff	frexp@value+1,?_frexp+1
 13698  00331A  C072  F072         	movff	frexp@value+2,?_frexp+2
 13699  00331E  D000               	goto	l1850
 13700  003320                     l1850:
 13701                           
 13702                           ; BSR set to: 0
 13703  003320  0012               	return		;funcret
 13704  003322                     __end_of_frexp:
 13705                           	opt stack 0
 13706                           prodh	equ	0xFF4
 13707                           prodl	equ	0xFF3
 13708                           intcon	equ	0xFF2
 13709                           intcon2	equ	0xFF1
 13710                           intcon3	equ	0xFF0
 13711                           postinc0	equ	0xFEE
 13712                           wreg	equ	0xFE8
 13713                           indf2	equ	0xFDF
 13714                           postinc2	equ	0xFDE
 13715                           postdec2	equ	0xFDD
 13716                           fsr2h	equ	0xFDA
 13717                           fsr2l	equ	0xFD9
 13718                           status	equ	0xFD8
 13719                           
 13720 ;; *************** function ___fttol *****************
 13721 ;; Defined at:
 13722 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  f1              3   43[BANK0 ] float 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;  lval            4   53[BANK0 ] unsigned long 
 13727 ;;  exp1            1   57[BANK0 ] unsigned char 
 13728 ;;  sign1           1   52[BANK0 ] unsigned char 
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  4   43[BANK0 ] long 
 13731 ;; Registers used:
 13732 ;;		wreg, status,2, status,0
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/0
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13739 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13740 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13741 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13742 ;;Total ram usage:       15 bytes
 13743 ;; Hardware stack levels used:    1
 13744 ;; Hardware stack levels required when called:    7
 13745 ;; This function calls:
 13746 ;;		Nothing
 13747 ;; This function is called by:
 13748 ;;		_CalculateSensorSums
 13749 ;;		_pow
 13750 ;;		_exp
 13751 ;;		_floor
 13752 ;; This function uses a non-reentrant model
 13753 ;;
 13754                           
 13755                           	psect	text106
 13756  002340                     __ptext106:
 13757                           	opt stack 0
 13758  002340                     ___fttol:
 13759                           	opt stack 19
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;incstack = 0
 13763  002340  C08D  F08F         	movff	___fttol@f1+2,??___fttol
 13764  002344  0100               	movlb	0	; () banked
 13765  002346  6B90               	clrf	(??___fttol+1)& (0+255),b
 13766  002348  6B91               	clrf	(??___fttol+2)& (0+255),b
 13767  00234A  0100               	movlb	0	; () banked
 13768  00234C  358C               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13769  00234E  0100               	movlb	0	; () banked
 13770  002350  378F               	rlcf	??___fttol& (0+255),f,b
 13771  002352  E301               	bnc	u6401
 13772  002354  8190               	bsf	(??___fttol+1)& (0+255),0,b
 13773  002356                     u6401:
 13774  002356  0100               	movlb	0	; () banked
 13775  002358  518F               	movf	??___fttol& (0+255),w,b
 13776  00235A  0100               	movlb	0	; () banked
 13777  00235C  6F99               	movwf	___fttol@exp1& (0+255),b
 13778  00235E  0100               	movlb	0	; () banked
 13779  002360  5199               	movf	___fttol@exp1& (0+255),w,b
 13780  002362  A4D8               	btfss	status,2,c
 13781  002364  D002               	goto	l6720
 13782  002366  D051               	goto	l6744
 13783                           
 13784                           ; BSR set to: 0
 13785                           
 13786                           ; BSR set to: 0
 13787  002368  D083               	goto	l1668
 13788  00236A                     l6720:
 13789                           
 13790                           ; BSR set to: 0
 13791  00236A  0E17               	movlw	23
 13792  00236C  0100               	movlb	0	; () banked
 13793  00236E  6F8F               	movwf	??___fttol& (0+255),b
 13794  002370  C08B  F090         	movff	___fttol@f1,??___fttol+1
 13795  002374  C08C  F091         	movff	___fttol@f1+1,??___fttol+2
 13796  002378  C08D  F092         	movff	___fttol@f1+2,??___fttol+3
 13797  00237C  0100               	movlb	0	; () banked
 13798  00237E  298F               	incf	??___fttol& (0+255),w,b
 13799  002380  0100               	movlb	0	; () banked
 13800  002382  6F93               	movwf	(??___fttol+4)& (0+255),b
 13801  002384  D005               	goto	u6420
 13802  002386                     u6425:
 13803  002386  0100               	movlb	0	; () banked
 13804  002388  90D8               	bcf	status,0,c
 13805  00238A  3392               	rrcf	(??___fttol+3)& (0+255),f,b
 13806  00238C  3391               	rrcf	(??___fttol+2)& (0+255),f,b
 13807  00238E  3390               	rrcf	(??___fttol+1)& (0+255),f,b
 13808  002390                     u6420:
 13809  002390  0100               	movlb	0	; () banked
 13810  002392  2F93               	decfsz	(??___fttol+4)& (0+255),f,b
 13811  002394  D7F8               	goto	u6425
 13812  002396  0100               	movlb	0	; () banked
 13813  002398  5190               	movf	(??___fttol+1)& (0+255),w,b
 13814  00239A  0100               	movlb	0	; () banked
 13815  00239C  6F94               	movwf	___fttol@sign1& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818  00239E  0100               	movlb	0	; () banked
 13819  0023A0  8F8C               	bsf	(___fttol@f1+1)& (0+255),7,b
 13820                           
 13821                           ; BSR set to: 0
 13822  0023A2  0EFF               	movlw	255
 13823  0023A4  0100               	movlb	0	; () banked
 13824  0023A6  178B               	andwf	___fttol@f1& (0+255),f,b
 13825  0023A8  0EFF               	movlw	255
 13826  0023AA  0100               	movlb	0	; () banked
 13827  0023AC  178C               	andwf	(___fttol@f1+1)& (0+255),f,b
 13828  0023AE  0E00               	movlw	0
 13829  0023B0  0100               	movlb	0	; () banked
 13830  0023B2  178D               	andwf	(___fttol@f1+2)& (0+255),f,b
 13831                           
 13832                           ; BSR set to: 0
 13833  0023B4  0100               	movlb	0	; () banked
 13834  0023B6  518B               	movf	___fttol@f1& (0+255),w,b
 13835  0023B8  0100               	movlb	0	; () banked
 13836  0023BA  6F95               	movwf	___fttol@lval& (0+255),b
 13837  0023BC  0100               	movlb	0	; () banked
 13838  0023BE  518C               	movf	(___fttol@f1+1)& (0+255),w,b
 13839  0023C0  0100               	movlb	0	; () banked
 13840  0023C2  6F96               	movwf	(___fttol@lval+1)& (0+255),b
 13841  0023C4  0100               	movlb	0	; () banked
 13842  0023C6  518D               	movf	(___fttol@f1+2)& (0+255),w,b
 13843  0023C8  0100               	movlb	0	; () banked
 13844  0023CA  6F97               	movwf	(___fttol@lval+2)& (0+255),b
 13845  0023CC  0100               	movlb	0	; () banked
 13846  0023CE  6B98               	clrf	(___fttol@lval+3)& (0+255),b
 13847                           
 13848                           ; BSR set to: 0
 13849  0023D0  0E8E               	movlw	142
 13850  0023D2  0100               	movlb	0	; () banked
 13851  0023D4  5F99               	subwf	___fttol@exp1& (0+255),f,b
 13852                           
 13853                           ; BSR set to: 0
 13854  0023D6  0100               	movlb	0	; () banked
 13855  0023D8  AF99               	btfss	___fttol@exp1& (0+255),7,b
 13856  0023DA  D013               	goto	l6742
 13857                           
 13858                           ; BSR set to: 0
 13859  0023DC  0100               	movlb	0	; () banked
 13860  0023DE  5199               	movf	___fttol@exp1& (0+255),w,b
 13861  0023E0  0A80               	xorlw	128
 13862  0023E2  0F8F               	addlw	143
 13863  0023E4  B0D8               	btfsc	status,0,c
 13864  0023E6  D003               	goto	l6738
 13865  0023E8  D010               	goto	l6744
 13866                           
 13867                           ; BSR set to: 0
 13868                           
 13869                           ; BSR set to: 0
 13870  0023EA  D042               	goto	l1668
 13871                           
 13872                           ; BSR set to: 0
 13873  0023EC  D000               	goto	l6738
 13874  0023EE                     l6738:
 13875                           
 13876                           ; BSR set to: 0
 13877  0023EE  0100               	movlb	0	; () banked
 13878  0023F0  90D8               	bcf	status,0,c
 13879  0023F2  3398               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13880  0023F4  3397               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13881  0023F6  3396               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13882  0023F8  3395               	rrcf	___fttol@lval& (0+255),f,b
 13883                           
 13884                           ; BSR set to: 0
 13885  0023FA  0100               	movlb	0	; () banked
 13886  0023FC  3F99               	incfsz	___fttol@exp1& (0+255),f,b
 13887  0023FE  D7F7               	goto	l6738
 13888                           
 13889                           ; BSR set to: 0
 13890  002400  D01F               	goto	l6752
 13891  002402                     l6742:
 13892                           
 13893                           ; BSR set to: 0
 13894  002402  0E17               	movlw	23
 13895  002404  0100               	movlb	0	; () banked
 13896  002406  6599               	cpfsgt	___fttol@exp1& (0+255),b
 13897  002408  D014               	goto	l6750
 13898  00240A                     l6744:
 13899                           
 13900                           ; BSR set to: 0
 13901  00240A  0E00               	movlw	0
 13902  00240C  0100               	movlb	0	; () banked
 13903  00240E  6F8B               	movwf	?___fttol& (0+255),b
 13904  002410  0E00               	movlw	0
 13905  002412  6F8C               	movwf	(?___fttol+1)& (0+255),b
 13906  002414  0E00               	movlw	0
 13907  002416  6F8D               	movwf	(?___fttol+2)& (0+255),b
 13908  002418  0E00               	movlw	0
 13909  00241A  6F8E               	movwf	(?___fttol+3)& (0+255),b
 13910                           
 13911                           ; BSR set to: 0
 13912  00241C  D029               	goto	l1668
 13913                           
 13914                           ; BSR set to: 0
 13915  00241E  D009               	goto	l6750
 13916  002420                     l6748:
 13917                           
 13918                           ; BSR set to: 0
 13919  002420  0100               	movlb	0	; () banked
 13920  002422  90D8               	bcf	status,0,c
 13921  002424  3795               	rlcf	___fttol@lval& (0+255),f,b
 13922  002426  3796               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13923  002428  3797               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13924  00242A  3798               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13925  00242C  0100               	movlb	0	; () banked
 13926  00242E  0799               	decf	___fttol@exp1& (0+255),f,b
 13927  002430  D000               	goto	l6750
 13928  002432                     l6750:
 13929                           
 13930                           ; BSR set to: 0
 13931  002432  0100               	movlb	0	; () banked
 13932  002434  5199               	movf	___fttol@exp1& (0+255),w,b
 13933  002436  0100               	movlb	0	; () banked
 13934  002438  B4D8               	btfsc	status,2,c
 13935  00243A  D002               	goto	l6752
 13936  00243C  D7F1               	goto	l6748
 13937                           
 13938                           ; BSR set to: 0
 13939  00243E  D000               	goto	l6752
 13940  002440                     l6752:
 13941                           
 13942                           ; BSR set to: 0
 13943  002440  0100               	movlb	0	; () banked
 13944  002442  5194               	movf	___fttol@sign1& (0+255),w,b
 13945  002444  0100               	movlb	0	; () banked
 13946  002446  B4D8               	btfsc	status,2,c
 13947  002448  D00A               	goto	l6756
 13948                           
 13949                           ; BSR set to: 0
 13950  00244A  0100               	movlb	0	; () banked
 13951  00244C  1F98               	comf	(___fttol@lval+3)& (0+255),f,b
 13952  00244E  1F97               	comf	(___fttol@lval+2)& (0+255),f,b
 13953  002450  1F96               	comf	(___fttol@lval+1)& (0+255),f,b
 13954  002452  6D95               	negf	___fttol@lval& (0+255),b
 13955  002454  0E00               	movlw	0
 13956  002456  2396               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13957  002458  2397               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13958  00245A  2398               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13959  00245C  D000               	goto	l6756
 13960  00245E                     l6756:
 13961                           
 13962                           ; BSR set to: 0
 13963  00245E  C095  F08B         	movff	___fttol@lval,?___fttol
 13964  002462  C096  F08C         	movff	___fttol@lval+1,?___fttol+1
 13965  002466  C097  F08D         	movff	___fttol@lval+2,?___fttol+2
 13966  00246A  C098  F08E         	movff	___fttol@lval+3,?___fttol+3
 13967  00246E  D000               	goto	l1668
 13968  002470                     l1668:
 13969                           
 13970                           ; BSR set to: 0
 13971  002470  0012               	return		;funcret
 13972  002472                     __end_of___fttol:
 13973                           	opt stack 0
 13974                           prodh	equ	0xFF4
 13975                           prodl	equ	0xFF3
 13976                           intcon	equ	0xFF2
 13977                           intcon2	equ	0xFF1
 13978                           intcon3	equ	0xFF0
 13979                           postinc0	equ	0xFEE
 13980                           wreg	equ	0xFE8
 13981                           indf2	equ	0xFDF
 13982                           postinc2	equ	0xFDE
 13983                           postdec2	equ	0xFDD
 13984                           fsr2h	equ	0xFDA
 13985                           fsr2l	equ	0xFD9
 13986                           status	equ	0xFD8
 13987                           
 13988 ;; *************** function ___ftge *****************
 13989 ;; Defined at:
 13990 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 13991 ;; Parameters:    Size  Location     Type
 13992 ;;  ff1             3   16[BANK0 ] float 
 13993 ;;  ff2             3   19[BANK0 ] float 
 13994 ;; Auto vars:     Size  Location     Type
 13995 ;;		None
 13996 ;; Return value:  Size  Location     Type
 13997 ;;		None               void
 13998 ;; Registers used:
 13999 ;;		wreg, status,2, status,0
 14000 ;; Tracked objects:
 14001 ;;		On entry : 0/0
 14002 ;;		On exit  : 0/0
 14003 ;;		Unchanged: 0/0
 14004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14005 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;Total ram usage:        9 bytes
 14010 ;; Hardware stack levels used:    1
 14011 ;; Hardware stack levels required when called:    7
 14012 ;; This function calls:
 14013 ;;		Nothing
 14014 ;; This function is called by:
 14015 ;;		_pow
 14016 ;;		_exp
 14017 ;;		_floor
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text107
 14022  002F84                     __ptext107:
 14023                           	opt stack 0
 14024  002F84                     ___ftge:
 14025                           	opt stack 19
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;incstack = 0
 14029  002F84  0100               	movlb	0	; () banked
 14030  002F86  AF72               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14031  002F88  D01E               	goto	l6700
 14032                           
 14033                           ; BSR set to: 0
 14034  002F8A  C070  F076         	movff	___ftge@ff1,??___ftge
 14035  002F8E  C071  F077         	movff	___ftge@ff1+1,??___ftge+1
 14036  002F92  C072  F078         	movff	___ftge@ff1+2,??___ftge+2
 14037  002F96  0100               	movlb	0	; () banked
 14038  002F98  1F76               	comf	??___ftge& (0+255),f,b
 14039  002F9A  1F77               	comf	(??___ftge+1)& (0+255),f,b
 14040  002F9C  1F78               	comf	(??___ftge+2)& (0+255),f,b
 14041  002F9E  2B76               	incf	??___ftge& (0+255),f,b
 14042  002FA0  0E00               	movlw	0
 14043  002FA2  2377               	addwfc	(??___ftge+1)& (0+255),f,b
 14044  002FA4  2378               	addwfc	(??___ftge+2)& (0+255),f,b
 14045  002FA6  0E00               	movlw	0
 14046  002FA8  0100               	movlb	0	; () banked
 14047  002FAA  2576               	addwf	??___ftge& (0+255),w,b
 14048  002FAC  0100               	movlb	0	; () banked
 14049  002FAE  6F70               	movwf	___ftge@ff1& (0+255),b
 14050  002FB0  0E00               	movlw	0
 14051  002FB2  0100               	movlb	0	; () banked
 14052  002FB4  2177               	addwfc	(??___ftge+1)& (0+255),w,b
 14053  002FB6  0100               	movlb	0	; () banked
 14054  002FB8  6F71               	movwf	(___ftge@ff1+1)& (0+255),b
 14055  002FBA  0E80               	movlw	128
 14056  002FBC  0100               	movlb	0	; () banked
 14057  002FBE  2178               	addwfc	(??___ftge+2)& (0+255),w,b
 14058  002FC0  0100               	movlb	0	; () banked
 14059  002FC2  6F72               	movwf	(___ftge@ff1+2)& (0+255),b
 14060  002FC4  D000               	goto	l6700
 14061  002FC6                     l6700:
 14062                           
 14063                           ; BSR set to: 0
 14064  002FC6  0100               	movlb	0	; () banked
 14065  002FC8  AF75               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14066  002FCA  D01E               	goto	l6704
 14067                           
 14068                           ; BSR set to: 0
 14069  002FCC  C073  F076         	movff	___ftge@ff2,??___ftge
 14070  002FD0  C074  F077         	movff	___ftge@ff2+1,??___ftge+1
 14071  002FD4  C075  F078         	movff	___ftge@ff2+2,??___ftge+2
 14072  002FD8  0100               	movlb	0	; () banked
 14073  002FDA  1F76               	comf	??___ftge& (0+255),f,b
 14074  002FDC  1F77               	comf	(??___ftge+1)& (0+255),f,b
 14075  002FDE  1F78               	comf	(??___ftge+2)& (0+255),f,b
 14076  002FE0  2B76               	incf	??___ftge& (0+255),f,b
 14077  002FE2  0E00               	movlw	0
 14078  002FE4  2377               	addwfc	(??___ftge+1)& (0+255),f,b
 14079  002FE6  2378               	addwfc	(??___ftge+2)& (0+255),f,b
 14080  002FE8  0E00               	movlw	0
 14081  002FEA  0100               	movlb	0	; () banked
 14082  002FEC  2576               	addwf	??___ftge& (0+255),w,b
 14083  002FEE  0100               	movlb	0	; () banked
 14084  002FF0  6F73               	movwf	___ftge@ff2& (0+255),b
 14085  002FF2  0E00               	movlw	0
 14086  002FF4  0100               	movlb	0	; () banked
 14087  002FF6  2177               	addwfc	(??___ftge+1)& (0+255),w,b
 14088  002FF8  0100               	movlb	0	; () banked
 14089  002FFA  6F74               	movwf	(___ftge@ff2+1)& (0+255),b
 14090  002FFC  0E80               	movlw	128
 14091  002FFE  0100               	movlb	0	; () banked
 14092  003000  2178               	addwfc	(??___ftge+2)& (0+255),w,b
 14093  003002  0100               	movlb	0	; () banked
 14094  003004  6F75               	movwf	(___ftge@ff2+2)& (0+255),b
 14095  003006  D000               	goto	l6704
 14096  003008                     l6704:
 14097                           
 14098                           ; BSR set to: 0
 14099  003008  0E00               	movlw	0
 14100  00300A  0100               	movlb	0	; () banked
 14101  00300C  1B70               	xorwf	___ftge@ff1& (0+255),f,b
 14102  00300E  0E00               	movlw	0
 14103  003010  0100               	movlb	0	; () banked
 14104  003012  1B71               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14105  003014  0E80               	movlw	128
 14106  003016  0100               	movlb	0	; () banked
 14107  003018  1B72               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14108                           
 14109                           ; BSR set to: 0
 14110  00301A  0E00               	movlw	0
 14111  00301C  0100               	movlb	0	; () banked
 14112  00301E  1B73               	xorwf	___ftge@ff2& (0+255),f,b
 14113  003020  0E00               	movlw	0
 14114  003022  0100               	movlb	0	; () banked
 14115  003024  1B74               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14116  003026  0E80               	movlw	128
 14117  003028  0100               	movlb	0	; () banked
 14118  00302A  1B75               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14119  00302C  0100               	movlb	0	; () banked
 14120  00302E  5173               	movf	___ftge@ff2& (0+255),w,b
 14121  003030  0100               	movlb	0	; () banked
 14122  003032  5D70               	subwf	___ftge@ff1& (0+255),w,b
 14123  003034  0100               	movlb	0	; () banked
 14124  003036  5174               	movf	(___ftge@ff2+1)& (0+255),w,b
 14125  003038  0100               	movlb	0	; () banked
 14126  00303A  5971               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14127  00303C  0100               	movlb	0	; () banked
 14128  00303E  5175               	movf	(___ftge@ff2+2)& (0+255),w,b
 14129  003040  0100               	movlb	0	; () banked
 14130  003042  5972               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14131  003044  B0D8               	btfsc	status,0,c
 14132  003046  D002               	goto	l6710
 14133                           
 14134                           ; BSR set to: 0
 14135  003048  90D8               	bcf	status,0,c
 14136  00304A  D002               	goto	l1641
 14137  00304C                     l6710:
 14138                           
 14139                           ; BSR set to: 0
 14140  00304C  80D8               	bsf	status,0,c
 14141                           
 14142                           ; BSR set to: 0
 14143  00304E  D000               	goto	l1641
 14144  003050                     l1641:
 14145                           
 14146                           ; BSR set to: 0
 14147  003050  0012               	return		;funcret
 14148  003052                     __end_of___ftge:
 14149                           	opt stack 0
 14150                           prodh	equ	0xFF4
 14151                           prodl	equ	0xFF3
 14152                           intcon	equ	0xFF2
 14153                           intcon2	equ	0xFF1
 14154                           intcon3	equ	0xFF0
 14155                           postinc0	equ	0xFEE
 14156                           wreg	equ	0xFE8
 14157                           indf2	equ	0xFDF
 14158                           postinc2	equ	0xFDE
 14159                           postdec2	equ	0xFDD
 14160                           fsr2h	equ	0xFDA
 14161                           fsr2l	equ	0xFD9
 14162                           status	equ	0xFD8
 14163                           
 14164 ;; *************** function ___altoft *****************
 14165 ;; Defined at:
 14166 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;  c               4   58[BANK0 ] long 
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;  sign            1   67[BANK0 ] unsigned char 
 14171 ;;  exp             1   66[BANK0 ] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  3   58[BANK0 ] float 
 14174 ;; Registers used:
 14175 ;;		wreg, status,2, status,0, cstack
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14183 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14184 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14185 ;;Total ram usage:       10 bytes
 14186 ;; Hardware stack levels used:    1
 14187 ;; Hardware stack levels required when called:    8
 14188 ;; This function calls:
 14189 ;;		___ftpack
 14190 ;; This function is called by:
 14191 ;;		_floor
 14192 ;; This function uses a non-reentrant model
 14193 ;;
 14194                           
 14195                           	psect	text108
 14196  00346A                     __ptext108:
 14197                           	opt stack 0
 14198  00346A                     ___altoft:
 14199                           	opt stack 18
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;incstack = 0
 14203  00346A  0E00               	movlw	0
 14204  00346C  0100               	movlb	0	; () banked
 14205  00346E  6FA3               	movwf	___altoft@sign& (0+255),b
 14206  003470  0E8E               	movlw	142
 14207  003472  0100               	movlb	0	; () banked
 14208  003474  6FA2               	movwf	___altoft@exp& (0+255),b
 14209                           
 14210                           ; BSR set to: 0
 14211  003476  0100               	movlb	0	; () banked
 14212  003478  AF9D               	btfss	(___altoft@c+3)& (0+255),7,b
 14213  00347A  D016               	goto	l6536
 14214                           
 14215                           ; BSR set to: 0
 14216  00347C  0100               	movlb	0	; () banked
 14217  00347E  1F9D               	comf	(___altoft@c+3)& (0+255),f,b
 14218  003480  1F9C               	comf	(___altoft@c+2)& (0+255),f,b
 14219  003482  1F9B               	comf	(___altoft@c+1)& (0+255),f,b
 14220  003484  6D9A               	negf	___altoft@c& (0+255),b
 14221  003486  0E00               	movlw	0
 14222  003488  239B               	addwfc	(___altoft@c+1)& (0+255),f,b
 14223  00348A  239C               	addwfc	(___altoft@c+2)& (0+255),f,b
 14224  00348C  239D               	addwfc	(___altoft@c+3)& (0+255),f,b
 14225                           
 14226                           ; BSR set to: 0
 14227  00348E  0E01               	movlw	1
 14228  003490  0100               	movlb	0	; () banked
 14229  003492  6FA3               	movwf	___altoft@sign& (0+255),b
 14230                           
 14231                           ; BSR set to: 0
 14232  003494  D009               	goto	l6536
 14233  003496                     l6534:
 14234                           
 14235                           ; BSR set to: 0
 14236  003496  0100               	movlb	0	; () banked
 14237  003498  90D8               	bcf	status,0,c
 14238  00349A  339D               	rrcf	(___altoft@c+3)& (0+255),f,b
 14239  00349C  339C               	rrcf	(___altoft@c+2)& (0+255),f,b
 14240  00349E  339B               	rrcf	(___altoft@c+1)& (0+255),f,b
 14241  0034A0  339A               	rrcf	___altoft@c& (0+255),f,b
 14242  0034A2  0100               	movlb	0	; () banked
 14243  0034A4  2BA2               	incf	___altoft@exp& (0+255),f,b
 14244  0034A6  D000               	goto	l6536
 14245  0034A8                     l6536:
 14246                           
 14247                           ; BSR set to: 0
 14248  0034A8  0E00               	movlw	0
 14249  0034AA  0100               	movlb	0	; () banked
 14250  0034AC  159A               	andwf	___altoft@c& (0+255),w,b
 14251  0034AE  0100               	movlb	0	; () banked
 14252  0034B0  6F9E               	movwf	??___altoft& (0+255),b
 14253  0034B2  0E00               	movlw	0
 14254  0034B4  0100               	movlb	0	; () banked
 14255  0034B6  159B               	andwf	(___altoft@c+1)& (0+255),w,b
 14256  0034B8  0100               	movlb	0	; () banked
 14257  0034BA  6F9F               	movwf	(??___altoft+1)& (0+255),b
 14258  0034BC  0E00               	movlw	0
 14259  0034BE  0100               	movlb	0	; () banked
 14260  0034C0  159C               	andwf	(___altoft@c+2)& (0+255),w,b
 14261  0034C2  0100               	movlb	0	; () banked
 14262  0034C4  6FA0               	movwf	(??___altoft+2)& (0+255),b
 14263  0034C6  0EFF               	movlw	255
 14264  0034C8  0100               	movlb	0	; () banked
 14265  0034CA  159D               	andwf	(___altoft@c+3)& (0+255),w,b
 14266  0034CC  0100               	movlb	0	; () banked
 14267  0034CE  6FA1               	movwf	(??___altoft+3)& (0+255),b
 14268  0034D0  0100               	movlb	0	; () banked
 14269  0034D2  519E               	movf	??___altoft& (0+255),w,b
 14270  0034D4  0100               	movlb	0	; () banked
 14271  0034D6  119F               	iorwf	(??___altoft+1)& (0+255),w,b
 14272  0034D8  0100               	movlb	0	; () banked
 14273  0034DA  11A0               	iorwf	(??___altoft+2)& (0+255),w,b
 14274  0034DC  0100               	movlb	0	; () banked
 14275  0034DE  11A1               	iorwf	(??___altoft+3)& (0+255),w,b
 14276  0034E0  A4D8               	btfss	status,2,c
 14277  0034E2  D7D9               	goto	l6534
 14278                           
 14279                           ; BSR set to: 0
 14280                           
 14281                           ; BSR set to: 0
 14282  0034E4  C09A  F070         	movff	___altoft@c,___ftpack@arg
 14283  0034E8  C09B  F071         	movff	___altoft@c+1,___ftpack@arg+1
 14284  0034EC  C09C  F072         	movff	___altoft@c+2,___ftpack@arg+2
 14285  0034F0  C0A2  F073         	movff	___altoft@exp,___ftpack@exp
 14286  0034F4  C0A3  F074         	movff	___altoft@sign,___ftpack@sign
 14287  0034F8  EC60  F013         	call	___ftpack	;wreg free
 14288  0034FC  C070  F09A         	movff	?___ftpack,?___altoft
 14289  003500  C071  F09B         	movff	?___ftpack+1,?___altoft+1
 14290  003504  C072  F09C         	movff	?___ftpack+2,?___altoft+2
 14291  003508  D000               	goto	l1328
 14292  00350A                     l1328:
 14293  00350A  0012               	return		;funcret
 14294  00350C                     __end_of___altoft:
 14295                           	opt stack 0
 14296                           prodh	equ	0xFF4
 14297                           prodl	equ	0xFF3
 14298                           intcon	equ	0xFF2
 14299                           intcon2	equ	0xFF1
 14300                           intcon3	equ	0xFF0
 14301                           postinc0	equ	0xFEE
 14302                           wreg	equ	0xFE8
 14303                           indf2	equ	0xFDF
 14304                           postinc2	equ	0xFDE
 14305                           postdec2	equ	0xFDD
 14306                           fsr2h	equ	0xFDA
 14307                           fsr2l	equ	0xFD9
 14308                           status	equ	0xFD8
 14309                           
 14310 ;; *************** function _eval_poly *****************
 14311 ;; Defined at:
 14312 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;  x               3   55[BANK0 ] float 
 14315 ;;  d               2   58[BANK0 ] PTR const 
 14316 ;;		 -> log@coeff(27), exp@coeff(30), 
 14317 ;;  n               2   60[BANK0 ] int 
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;  res             3   64[BANK0 ] int 
 14320 ;; Return value:  Size  Location     Type
 14321 ;;                  3   55[BANK0 ] int 
 14322 ;; Registers used:
 14323 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14324 ;; Tracked objects:
 14325 ;;		On entry : 0/0
 14326 ;;		On exit  : 0/0
 14327 ;;		Unchanged: 0/0
 14328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14329 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14332 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14333 ;;Total ram usage:       12 bytes
 14334 ;; Hardware stack levels used:    1
 14335 ;; Hardware stack levels required when called:    9
 14336 ;; This function calls:
 14337 ;;		___ftadd
 14338 ;;		___ftmul
 14339 ;;		___wmul
 14340 ;; This function is called by:
 14341 ;;		_exp
 14342 ;;		_log
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text109
 14347  002AE8                     __ptext109:
 14348                           	opt stack 0
 14349  002AE8                     _eval_poly:
 14350                           	opt stack 18
 14351                           
 14352                           ;incstack = 0
 14353  002AE8  C09C  F070         	movff	eval_poly@n,___wmul@multiplier
 14354  002AEC  C09D  F071         	movff	eval_poly@n+1,___wmul@multiplier+1
 14355  002AF0  0E00               	movlw	0
 14356  002AF2  0100               	movlb	0	; () banked
 14357  002AF4  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14358  002AF6  0E03               	movlw	3
 14359  002AF8  6F72               	movwf	___wmul@multiplicand& (0+255),b
 14360  002AFA  EC8D  F020         	call	___wmul	;wreg free
 14361  002AFE  C09A  F09E         	movff	eval_poly@d,??_eval_poly
 14362  002B02  C09B  F09F         	movff	eval_poly@d+1,??_eval_poly+1
 14363  002B06  0100               	movlb	0	; () banked
 14364  002B08  5170               	movf	?___wmul& (0+255),w,b
 14365  002B0A  0100               	movlb	0	; () banked
 14366  002B0C  279E               	addwf	??_eval_poly& (0+255),f,b
 14367  002B0E  0100               	movlb	0	; () banked
 14368  002B10  5171               	movf	(?___wmul+1)& (0+255),w,b
 14369  002B12  0100               	movlb	0	; () banked
 14370  002B14  239F               	addwfc	(??_eval_poly+1)& (0+255),f,b
 14371  002B16  C09E  FFF6         	movff	??_eval_poly,tblptrl
 14372  002B1A  C09F  FFF7         	movff	??_eval_poly+1,tblptrh
 14373  002B1E                     	if	0	;tblptru may be non-zero
 14374  002B1E                     	endif
 14375  002B1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14376  002B1E  0E00               	movlw	low (__mediumconst shr (0+16))
 14377  002B20  6EF8               	movwf	tblptru,c
 14378  002B22                     	endif
 14379  002B22  0009               	tblrd		*+
 14380  002B24  CFF5 F0A0          	movff	tablat,eval_poly@res
 14381  002B28  0009               	tblrd		*+
 14382  002B2A  CFF5 F0A1          	movff	tablat,eval_poly@res+1
 14383  002B2E  000A               	tblrd		*-
 14384  002B30  CFF5 F0A2          	movff	tablat,eval_poly@res+2
 14385  002B34  D047               	goto	l7028
 14386  002B36                     l7026:
 14387                           
 14388                           ; BSR set to: 0
 14389  002B36  C0A0  F07F         	movff	eval_poly@res,___ftmul@f2
 14390  002B3A  C0A1  F080         	movff	eval_poly@res+1,___ftmul@f2+1
 14391  002B3E  C0A2  F081         	movff	eval_poly@res+2,___ftmul@f2+2
 14392  002B42  C097  F07C         	movff	eval_poly@x,___ftmul@f1
 14393  002B46  C098  F07D         	movff	eval_poly@x+1,___ftmul@f1+1
 14394  002B4A  C099  F07E         	movff	eval_poly@x+2,___ftmul@f1+2
 14395  002B4E  EC10  F00F         	call	___ftmul	;wreg free
 14396  002B52  C07C  F08B         	movff	?___ftmul,___ftadd@f1
 14397  002B56  C07D  F08C         	movff	?___ftmul+1,___ftadd@f1+1
 14398  002B5A  C07E  F08D         	movff	?___ftmul+2,___ftadd@f1+2
 14399  002B5E  0E00               	movlw	0
 14400  002B60  0100               	movlb	0	; () banked
 14401  002B62  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14402  002B64  0E03               	movlw	3
 14403  002B66  6F72               	movwf	___wmul@multiplicand& (0+255),b
 14404  002B68  0100               	movlb	0	; () banked
 14405  002B6A  079C               	decf	eval_poly@n& (0+255),f,b
 14406  002B6C  A0D8               	btfss	status,0,c
 14407  002B6E  079D               	decf	(eval_poly@n+1)& (0+255),f,b
 14408  002B70  C09C  F070         	movff	eval_poly@n,___wmul@multiplier
 14409  002B74  C09D  F071         	movff	eval_poly@n+1,___wmul@multiplier+1
 14410  002B78  EC8D  F020         	call	___wmul	;wreg free
 14411  002B7C  C09A  F09E         	movff	eval_poly@d,??_eval_poly
 14412  002B80  C09B  F09F         	movff	eval_poly@d+1,??_eval_poly+1
 14413  002B84  0100               	movlb	0	; () banked
 14414  002B86  5170               	movf	?___wmul& (0+255),w,b
 14415  002B88  0100               	movlb	0	; () banked
 14416  002B8A  279E               	addwf	??_eval_poly& (0+255),f,b
 14417  002B8C  0100               	movlb	0	; () banked
 14418  002B8E  5171               	movf	(?___wmul+1)& (0+255),w,b
 14419  002B90  0100               	movlb	0	; () banked
 14420  002B92  239F               	addwfc	(??_eval_poly+1)& (0+255),f,b
 14421  002B94  C09E  FFF6         	movff	??_eval_poly,tblptrl
 14422  002B98  C09F  FFF7         	movff	??_eval_poly+1,tblptrh
 14423  002B9C                     	if	0	;tblptru may be non-zero
 14424  002B9C                     	endif
 14425  002B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14426  002B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 14427  002B9E  6EF8               	movwf	tblptru,c
 14428  002BA0                     	endif
 14429  002BA0  0009               	tblrd		*+
 14430  002BA2  CFF5 F08E          	movff	tablat,___ftadd@f2
 14431  002BA6  0009               	tblrd		*+
 14432  002BA8  CFF5 F08F          	movff	tablat,___ftadd@f2+1
 14433  002BAC  000A               	tblrd		*-
 14434  002BAE  CFF5 F090          	movff	tablat,___ftadd@f2+2
 14435  002BB2  EC2D  F00B         	call	___ftadd	;wreg free
 14436  002BB6  C08B  F0A0         	movff	?___ftadd,eval_poly@res
 14437  002BBA  C08C  F0A1         	movff	?___ftadd+1,eval_poly@res+1
 14438  002BBE  C08D  F0A2         	movff	?___ftadd+2,eval_poly@res+2
 14439  002BC2  D000               	goto	l7028
 14440  002BC4                     l7028:
 14441  002BC4  0100               	movlb	0	; () banked
 14442  002BC6  519C               	movf	eval_poly@n& (0+255),w,b
 14443  002BC8  0100               	movlb	0	; () banked
 14444  002BCA  119D               	iorwf	(eval_poly@n+1)& (0+255),w,b
 14445  002BCC  A4D8               	btfss	status,2,c
 14446  002BCE  D7B3               	goto	l7026
 14447                           
 14448                           ; BSR set to: 0
 14449  002BD0  C0A0  F097         	movff	eval_poly@res,?_eval_poly
 14450  002BD4  C0A1  F098         	movff	eval_poly@res+1,?_eval_poly+1
 14451  002BD8  C0A2  F099         	movff	eval_poly@res+2,?_eval_poly+2
 14452                           
 14453                           ; BSR set to: 0
 14454  002BDC  0012               	return		;funcret
 14455  002BDE                     __end_of_eval_poly:
 14456                           	opt stack 0
 14457                           tblptru	equ	0xFF8
 14458                           tblptrh	equ	0xFF7
 14459                           tblptrl	equ	0xFF6
 14460                           tablat	equ	0xFF5
 14461                           prodh	equ	0xFF4
 14462                           prodl	equ	0xFF3
 14463                           intcon	equ	0xFF2
 14464                           intcon2	equ	0xFF1
 14465                           intcon3	equ	0xFF0
 14466                           postinc0	equ	0xFEE
 14467                           wreg	equ	0xFE8
 14468                           indf2	equ	0xFDF
 14469                           postinc2	equ	0xFDE
 14470                           postdec2	equ	0xFDD
 14471                           fsr2h	equ	0xFDA
 14472                           fsr2l	equ	0xFD9
 14473                           status	equ	0xFD8
 14474                           
 14475 ;; *************** function ___wmul *****************
 14476 ;; Defined at:
 14477 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;  multiplier      2   16[BANK0 ] unsigned int 
 14480 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;  product         2   20[BANK0 ] unsigned int 
 14483 ;; Return value:  Size  Location     Type
 14484 ;;                  2   16[BANK0 ] unsigned int 
 14485 ;; Registers used:
 14486 ;;		wreg, status,2, status,0, prodl, prodh
 14487 ;; Tracked objects:
 14488 ;;		On entry : 0/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;Total ram usage:        6 bytes
 14497 ;; Hardware stack levels used:    1
 14498 ;; Hardware stack levels required when called:    7
 14499 ;; This function calls:
 14500 ;;		Nothing
 14501 ;; This function is called by:
 14502 ;;		_main
 14503 ;;		_eval_poly
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           	psect	text110
 14508  00411A                     __ptext110:
 14509                           	opt stack 0
 14510  00411A                     ___wmul:
 14511                           	opt stack 23
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;incstack = 0
 14515  00411A  0100               	movlb	0	; () banked
 14516  00411C  5170               	movf	___wmul@multiplier& (0+255),w,b
 14517  00411E  0100               	movlb	0	; () banked
 14518  004120  0372               	mulwf	___wmul@multiplicand& (0+255),b
 14519  004122  CFF3 F074          	movff	prodl,___wmul@product
 14520  004126  CFF4 F075          	movff	prodh,___wmul@product+1
 14521  00412A  0100               	movlb	0	; () banked
 14522  00412C  5170               	movf	___wmul@multiplier& (0+255),w,b
 14523  00412E  0100               	movlb	0	; () banked
 14524  004130  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14525  004132  50F3               	movf	prodl,w,c
 14526  004134  0100               	movlb	0	; () banked
 14527  004136  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 14528  004138  0100               	movlb	0	; () banked
 14529  00413A  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14530  00413C  0100               	movlb	0	; () banked
 14531  00413E  0372               	mulwf	___wmul@multiplicand& (0+255),b
 14532  004140  50F3               	movf	prodl,w,c
 14533  004142  0100               	movlb	0	; () banked
 14534  004144  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 14535                           
 14536                           ; BSR set to: 0
 14537  004146  C074  F070         	movff	___wmul@product,?___wmul
 14538  00414A  C075  F071         	movff	___wmul@product+1,?___wmul+1
 14539  00414E  D000               	goto	l1231
 14540  004150                     l1231:
 14541                           
 14542                           ; BSR set to: 0
 14543  004150  0012               	return		;funcret
 14544  004152                     __end_of___wmul:
 14545                           	opt stack 0
 14546                           tblptru	equ	0xFF8
 14547                           tblptrh	equ	0xFF7
 14548                           tblptrl	equ	0xFF6
 14549                           tablat	equ	0xFF5
 14550                           prodh	equ	0xFF4
 14551                           prodl	equ	0xFF3
 14552                           intcon	equ	0xFF2
 14553                           intcon2	equ	0xFF1
 14554                           intcon3	equ	0xFF0
 14555                           postinc0	equ	0xFEE
 14556                           wreg	equ	0xFE8
 14557                           indf2	equ	0xFDF
 14558                           postinc2	equ	0xFDE
 14559                           postdec2	equ	0xFDD
 14560                           fsr2h	equ	0xFDA
 14561                           fsr2l	equ	0xFD9
 14562                           status	equ	0xFD8
 14563                           
 14564 ;; *************** function ___ftmul *****************
 14565 ;; Defined at:
 14566 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 14567 ;; Parameters:    Size  Location     Type
 14568 ;;  f1              3   28[BANK0 ] float 
 14569 ;;  f2              3   31[BANK0 ] float 
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
 14572 ;;  sign            1   42[BANK0 ] unsigned char 
 14573 ;;  cntr            1   41[BANK0 ] unsigned char 
 14574 ;;  exp             1   37[BANK0 ] unsigned char 
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  3   28[BANK0 ] float 
 14577 ;; Registers used:
 14578 ;;		wreg, status,2, status,0, cstack
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/0
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14584 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14585 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14586 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14587 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14588 ;;Total ram usage:       15 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; Hardware stack levels required when called:    8
 14591 ;; This function calls:
 14592 ;;		___ftpack
 14593 ;; This function is called by:
 14594 ;;		_CalculateSensorSums
 14595 ;;		_pow
 14596 ;;		_exp
 14597 ;;		_log
 14598 ;;		_eval_poly
 14599 ;;		_ConvertDistanceCM
 14600 ;;		_ConvertDistanceIN
 14601 ;; This function uses a non-reentrant model
 14602 ;;
 14603                           
 14604                           	psect	text111
 14605  001E20                     __ptext111:
 14606                           	opt stack 0
 14607  001E20                     ___ftmul:
 14608                           	opt stack 18
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;incstack = 0
 14612  001E20  C07E  F082         	movff	___ftmul@f1+2,??___ftmul
 14613  001E24  0100               	movlb	0	; () banked
 14614  001E26  6B83               	clrf	(??___ftmul+1)& (0+255),b
 14615  001E28  6B84               	clrf	(??___ftmul+2)& (0+255),b
 14616  001E2A  0100               	movlb	0	; () banked
 14617  001E2C  357D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 14618  001E2E  0100               	movlb	0	; () banked
 14619  001E30  3782               	rlcf	??___ftmul& (0+255),f,b
 14620  001E32  E301               	bnc	u6251
 14621  001E34  8183               	bsf	(??___ftmul+1)& (0+255),0,b
 14622  001E36                     u6251:
 14623  001E36  0100               	movlb	0	; () banked
 14624  001E38  5182               	movf	??___ftmul& (0+255),w,b
 14625  001E3A  0100               	movlb	0	; () banked
 14626  001E3C  6F85               	movwf	___ftmul@exp& (0+255),b
 14627  001E3E  0100               	movlb	0	; () banked
 14628  001E40  5185               	movf	___ftmul@exp& (0+255),w,b
 14629  001E42  A4D8               	btfss	status,2,c
 14630  001E44  D002               	goto	l6618
 14631  001E46  D014               	goto	l6620
 14632                           
 14633                           ; BSR set to: 0
 14634                           
 14635                           ; BSR set to: 0
 14636  001E48  D098               	goto	l1647
 14637  001E4A                     l6618:
 14638                           
 14639                           ; BSR set to: 0
 14640  001E4A  C081  F082         	movff	___ftmul@f2+2,??___ftmul
 14641  001E4E  0100               	movlb	0	; () banked
 14642  001E50  6B83               	clrf	(??___ftmul+1)& (0+255),b
 14643  001E52  6B84               	clrf	(??___ftmul+2)& (0+255),b
 14644  001E54  0100               	movlb	0	; () banked
 14645  001E56  3580               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 14646  001E58  0100               	movlb	0	; () banked
 14647  001E5A  3782               	rlcf	??___ftmul& (0+255),f,b
 14648  001E5C  E301               	bnc	u6271
 14649  001E5E  8183               	bsf	(??___ftmul+1)& (0+255),0,b
 14650  001E60                     u6271:
 14651  001E60  0100               	movlb	0	; () banked
 14652  001E62  5182               	movf	??___ftmul& (0+255),w,b
 14653  001E64  0100               	movlb	0	; () banked
 14654  001E66  6F8A               	movwf	___ftmul@sign& (0+255),b
 14655  001E68  0100               	movlb	0	; () banked
 14656  001E6A  518A               	movf	___ftmul@sign& (0+255),w,b
 14657  001E6C  A4D8               	btfss	status,2,c
 14658  001E6E  D00A               	goto	l6624
 14659  001E70                     l6620:
 14660                           
 14661                           ; BSR set to: 0
 14662  001E70  0E00               	movlw	0
 14663  001E72  0100               	movlb	0	; () banked
 14664  001E74  6F7C               	movwf	?___ftmul& (0+255),b
 14665  001E76  0E00               	movlw	0
 14666  001E78  0100               	movlb	0	; () banked
 14667  001E7A  6F7D               	movwf	(?___ftmul+1)& (0+255),b
 14668  001E7C  0E00               	movlw	0
 14669  001E7E  0100               	movlb	0	; () banked
 14670  001E80  6F7E               	movwf	(?___ftmul+2)& (0+255),b
 14671                           
 14672                           ; BSR set to: 0
 14673  001E82  D07B               	goto	l1647
 14674  001E84                     l6624:
 14675                           
 14676                           ; BSR set to: 0
 14677  001E84  0100               	movlb	0	; () banked
 14678  001E86  518A               	movf	___ftmul@sign& (0+255),w,b
 14679  001E88  0F7B               	addlw	123
 14680  001E8A  0100               	movlb	0	; () banked
 14681  001E8C  2785               	addwf	___ftmul@exp& (0+255),f,b
 14682                           
 14683                           ; BSR set to: 0
 14684  001E8E  C07E  F08A         	movff	___ftmul@f1+2,___ftmul@sign
 14685  001E92  0100               	movlb	0	; () banked
 14686  001E94  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
 14687  001E96  0100               	movlb	0	; () banked
 14688  001E98  1B8A               	xorwf	___ftmul@sign& (0+255),f,b
 14689  001E9A  0E80               	movlw	128
 14690  001E9C  0100               	movlb	0	; () banked
 14691  001E9E  178A               	andwf	___ftmul@sign& (0+255),f,b
 14692                           
 14693                           ; BSR set to: 0
 14694  001EA0  0100               	movlb	0	; () banked
 14695  001EA2  8F7D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 14696                           
 14697                           ; BSR set to: 0
 14698  001EA4  0100               	movlb	0	; () banked
 14699  001EA6  8F80               	bsf	(___ftmul@f2+1)& (0+255),7,b
 14700                           
 14701                           ; BSR set to: 0
 14702  001EA8  0EFF               	movlw	255
 14703  001EAA  0100               	movlb	0	; () banked
 14704  001EAC  177F               	andwf	___ftmul@f2& (0+255),f,b
 14705  001EAE  0EFF               	movlw	255
 14706  001EB0  0100               	movlb	0	; () banked
 14707  001EB2  1780               	andwf	(___ftmul@f2+1)& (0+255),f,b
 14708  001EB4  0E00               	movlw	0
 14709  001EB6  0100               	movlb	0	; () banked
 14710  001EB8  1781               	andwf	(___ftmul@f2+2)& (0+255),f,b
 14711                           
 14712                           ; BSR set to: 0
 14713  001EBA  0E00               	movlw	0
 14714  001EBC  0100               	movlb	0	; () banked
 14715  001EBE  6F86               	movwf	___ftmul@f3_as_product& (0+255),b
 14716  001EC0  0E00               	movlw	0
 14717  001EC2  0100               	movlb	0	; () banked
 14718  001EC4  6F87               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 14719  001EC6  0E00               	movlw	0
 14720  001EC8  0100               	movlb	0	; () banked
 14721  001ECA  6F88               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 14722                           
 14723                           ; BSR set to: 0
 14724  001ECC  0E07               	movlw	7
 14725  001ECE  0100               	movlb	0	; () banked
 14726  001ED0  6F89               	movwf	___ftmul@cntr& (0+255),b
 14727  001ED2  D000               	goto	l6638
 14728  001ED4                     l6638:
 14729                           
 14730                           ; BSR set to: 0
 14731  001ED4  0100               	movlb	0	; () banked
 14732  001ED6  A17C               	btfss	___ftmul@f1& (0+255),0,b
 14733  001ED8  D00D               	goto	l6642
 14734                           
 14735                           ; BSR set to: 0
 14736  001EDA  0100               	movlb	0	; () banked
 14737  001EDC  517F               	movf	___ftmul@f2& (0+255),w,b
 14738  001EDE  0100               	movlb	0	; () banked
 14739  001EE0  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14740  001EE2  0100               	movlb	0	; () banked
 14741  001EE4  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
 14742  001EE6  0100               	movlb	0	; () banked
 14743  001EE8  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14744  001EEA  0100               	movlb	0	; () banked
 14745  001EEC  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
 14746  001EEE  0100               	movlb	0	; () banked
 14747  001EF0  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14748  001EF2  D000               	goto	l6642
 14749  001EF4                     l6642:
 14750                           
 14751                           ; BSR set to: 0
 14752  001EF4  0100               	movlb	0	; () banked
 14753  001EF6  90D8               	bcf	status,0,c
 14754  001EF8  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14755  001EFA  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14756  001EFC  337C               	rrcf	___ftmul@f1& (0+255),f,b
 14757  001EFE  0100               	movlb	0	; () banked
 14758  001F00  90D8               	bcf	status,0,c
 14759  001F02  377F               	rlcf	___ftmul@f2& (0+255),f,b
 14760  001F04  3780               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14761  001F06  3781               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14762                           
 14763                           ; BSR set to: 0
 14764  001F08  0100               	movlb	0	; () banked
 14765  001F0A  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
 14766  001F0C  D7E3               	goto	l6638
 14767  001F0E  D000               	goto	l6646
 14768  001F10                     l6646:
 14769                           
 14770                           ; BSR set to: 0
 14771  001F10  0E09               	movlw	9
 14772  001F12  0100               	movlb	0	; () banked
 14773  001F14  6F89               	movwf	___ftmul@cntr& (0+255),b
 14774  001F16  D000               	goto	l6648
 14775  001F18                     l6648:
 14776                           
 14777                           ; BSR set to: 0
 14778  001F18  0100               	movlb	0	; () banked
 14779  001F1A  A17C               	btfss	___ftmul@f1& (0+255),0,b
 14780  001F1C  D00D               	goto	l6652
 14781                           
 14782                           ; BSR set to: 0
 14783  001F1E  0100               	movlb	0	; () banked
 14784  001F20  517F               	movf	___ftmul@f2& (0+255),w,b
 14785  001F22  0100               	movlb	0	; () banked
 14786  001F24  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14787  001F26  0100               	movlb	0	; () banked
 14788  001F28  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
 14789  001F2A  0100               	movlb	0	; () banked
 14790  001F2C  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14791  001F2E  0100               	movlb	0	; () banked
 14792  001F30  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
 14793  001F32  0100               	movlb	0	; () banked
 14794  001F34  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14795  001F36  D000               	goto	l6652
 14796  001F38                     l6652:
 14797                           
 14798                           ; BSR set to: 0
 14799  001F38  0100               	movlb	0	; () banked
 14800  001F3A  90D8               	bcf	status,0,c
 14801  001F3C  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14802  001F3E  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14803  001F40  337C               	rrcf	___ftmul@f1& (0+255),f,b
 14804  001F42  0100               	movlb	0	; () banked
 14805  001F44  90D8               	bcf	status,0,c
 14806  001F46  3388               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14807  001F48  3387               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14808  001F4A  3386               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14809                           
 14810                           ; BSR set to: 0
 14811  001F4C  0100               	movlb	0	; () banked
 14812  001F4E  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
 14813  001F50  D7E3               	goto	l6648
 14814  001F52  D000               	goto	l6656
 14815  001F54                     l6656:
 14816                           
 14817                           ; BSR set to: 0
 14818  001F54  C086  F070         	movff	___ftmul@f3_as_product,___ftpack@arg
 14819  001F58  C087  F071         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14820  001F5C  C088  F072         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14821  001F60  C085  F073         	movff	___ftmul@exp,___ftpack@exp
 14822  001F64  C08A  F074         	movff	___ftmul@sign,___ftpack@sign
 14823  001F68  EC60  F013         	call	___ftpack	;wreg free
 14824  001F6C  C070  F07C         	movff	?___ftpack,?___ftmul
 14825  001F70  C071  F07D         	movff	?___ftpack+1,?___ftmul+1
 14826  001F74  C072  F07E         	movff	?___ftpack+2,?___ftmul+2
 14827  001F78  D000               	goto	l1647
 14828  001F7A                     l1647:
 14829  001F7A  0012               	return		;funcret
 14830  001F7C                     __end_of___ftmul:
 14831                           	opt stack 0
 14832                           tblptru	equ	0xFF8
 14833                           tblptrh	equ	0xFF7
 14834                           tblptrl	equ	0xFF6
 14835                           tablat	equ	0xFF5
 14836                           prodh	equ	0xFF4
 14837                           prodl	equ	0xFF3
 14838                           intcon	equ	0xFF2
 14839                           intcon2	equ	0xFF1
 14840                           intcon3	equ	0xFF0
 14841                           postinc0	equ	0xFEE
 14842                           wreg	equ	0xFE8
 14843                           indf2	equ	0xFDF
 14844                           postinc2	equ	0xFDE
 14845                           postdec2	equ	0xFDD
 14846                           fsr2h	equ	0xFDA
 14847                           fsr2l	equ	0xFD9
 14848                           status	equ	0xFD8
 14849                           
 14850 ;; *************** function ___ftsub *****************
 14851 ;; Defined at:
 14852 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;  f1              3   55[BANK0 ] float 
 14855 ;;  f2              3   58[BANK0 ] float 
 14856 ;; Auto vars:     Size  Location     Type
 14857 ;;		None
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  3   55[BANK0 ] float 
 14860 ;; Registers used:
 14861 ;;		wreg, status,2, status,0, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14867 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14870 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14871 ;;Total ram usage:        6 bytes
 14872 ;; Hardware stack levels used:    1
 14873 ;; Hardware stack levels required when called:    9
 14874 ;; This function calls:
 14875 ;;		___ftadd
 14876 ;; This function is called by:
 14877 ;;		_exp
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           	psect	text112
 14882  003D82                     __ptext112:
 14883                           	opt stack 0
 14884  003D82                     ___ftsub:
 14885                           	opt stack 18
 14886                           
 14887                           ;incstack = 0
 14888  003D82  0100               	movlb	0	; () banked
 14889  003D84  519A               	movf	___ftsub@f2& (0+255),w,b
 14890  003D86  0100               	movlb	0	; () banked
 14891  003D88  119B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14892  003D8A  0100               	movlb	0	; () banked
 14893  003D8C  119C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14894  003D8E  B4D8               	btfsc	status,2,c
 14895  003D90  D00A               	goto	l6980
 14896                           
 14897                           ; BSR set to: 0
 14898  003D92  0E00               	movlw	0
 14899  003D94  0100               	movlb	0	; () banked
 14900  003D96  1B9A               	xorwf	___ftsub@f2& (0+255),f,b
 14901  003D98  0E00               	movlw	0
 14902  003D9A  0100               	movlb	0	; () banked
 14903  003D9C  1B9B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14904  003D9E  0E80               	movlw	128
 14905  003DA0  0100               	movlb	0	; () banked
 14906  003DA2  1B9C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14907  003DA4  D000               	goto	l6980
 14908  003DA6                     l6980:
 14909                           
 14910                           ; BSR set to: 0
 14911  003DA6  C097  F08B         	movff	___ftsub@f1,___ftadd@f1
 14912  003DAA  C098  F08C         	movff	___ftsub@f1+1,___ftadd@f1+1
 14913  003DAE  C099  F08D         	movff	___ftsub@f1+2,___ftadd@f1+2
 14914  003DB2  C09A  F08E         	movff	___ftsub@f2,___ftadd@f2
 14915  003DB6  C09B  F08F         	movff	___ftsub@f2+1,___ftadd@f2+1
 14916  003DBA  C09C  F090         	movff	___ftsub@f2+2,___ftadd@f2+2
 14917  003DBE  EC2D  F00B         	call	___ftadd	;wreg free
 14918  003DC2  C08B  F097         	movff	?___ftadd,?___ftsub
 14919  003DC6  C08C  F098         	movff	?___ftadd+1,?___ftsub+1
 14920  003DCA  C08D  F099         	movff	?___ftadd+2,?___ftsub+2
 14921  003DCE  D000               	goto	l1664
 14922  003DD0                     l1664:
 14923  003DD0  0012               	return		;funcret
 14924  003DD2                     __end_of___ftsub:
 14925                           	opt stack 0
 14926                           tblptru	equ	0xFF8
 14927                           tblptrh	equ	0xFF7
 14928                           tblptrl	equ	0xFF6
 14929                           tablat	equ	0xFF5
 14930                           prodh	equ	0xFF4
 14931                           prodl	equ	0xFF3
 14932                           intcon	equ	0xFF2
 14933                           intcon2	equ	0xFF1
 14934                           intcon3	equ	0xFF0
 14935                           postinc0	equ	0xFEE
 14936                           wreg	equ	0xFE8
 14937                           indf2	equ	0xFDF
 14938                           postinc2	equ	0xFDE
 14939                           postdec2	equ	0xFDD
 14940                           fsr2h	equ	0xFDA
 14941                           fsr2l	equ	0xFD9
 14942                           status	equ	0xFD8
 14943                           
 14944 ;; *************** function ___ftadd *****************
 14945 ;; Defined at:
 14946 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 14947 ;; Parameters:    Size  Location     Type
 14948 ;;  f1              3   43[BANK0 ] float 
 14949 ;;  f2              3   46[BANK0 ] float 
 14950 ;; Auto vars:     Size  Location     Type
 14951 ;;  exp1            1   54[BANK0 ] unsigned char 
 14952 ;;  exp2            1   53[BANK0 ] unsigned char 
 14953 ;;  sign            1   52[BANK0 ] unsigned char 
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  3   43[BANK0 ] float 
 14956 ;; Registers used:
 14957 ;;		wreg, status,2, status,0, cstack
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14963 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14964 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14965 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14966 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14967 ;;Total ram usage:       12 bytes
 14968 ;; Hardware stack levels used:    1
 14969 ;; Hardware stack levels required when called:    8
 14970 ;; This function calls:
 14971 ;;		___ftpack
 14972 ;; This function is called by:
 14973 ;;		___ftsub
 14974 ;;		_floor
 14975 ;;		_log
 14976 ;;		_eval_poly
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text113
 14981  00165A                     __ptext113:
 14982                           	opt stack 0
 14983  00165A                     ___ftadd:
 14984                           	opt stack 18
 14985                           
 14986                           ;incstack = 0
 14987  00165A  C08D  F091         	movff	___ftadd@f1+2,??___ftadd
 14988  00165E  0100               	movlb	0	; () banked
 14989  001660  6B92               	clrf	(??___ftadd+1)& (0+255),b
 14990  001662  6B93               	clrf	(??___ftadd+2)& (0+255),b
 14991  001664  0100               	movlb	0	; () banked
 14992  001666  358C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14993  001668  0100               	movlb	0	; () banked
 14994  00166A  3791               	rlcf	??___ftadd& (0+255),f,b
 14995  00166C  E301               	bnc	u6041
 14996  00166E  8192               	bsf	(??___ftadd+1)& (0+255),0,b
 14997  001670                     u6041:
 14998  001670  0100               	movlb	0	; () banked
 14999  001672  5191               	movf	??___ftadd& (0+255),w,b
 15000  001674  0100               	movlb	0	; () banked
 15001  001676  6F96               	movwf	___ftadd@exp1& (0+255),b
 15002  001678  C090  F091         	movff	___ftadd@f2+2,??___ftadd
 15003  00167C  0100               	movlb	0	; () banked
 15004  00167E  6B92               	clrf	(??___ftadd+1)& (0+255),b
 15005  001680  6B93               	clrf	(??___ftadd+2)& (0+255),b
 15006  001682  0100               	movlb	0	; () banked
 15007  001684  358F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15008  001686  0100               	movlb	0	; () banked
 15009  001688  3791               	rlcf	??___ftadd& (0+255),f,b
 15010  00168A  E301               	bnc	u6051
 15011  00168C  8192               	bsf	(??___ftadd+1)& (0+255),0,b
 15012  00168E                     u6051:
 15013  00168E  0100               	movlb	0	; () banked
 15014  001690  5191               	movf	??___ftadd& (0+255),w,b
 15015  001692  0100               	movlb	0	; () banked
 15016  001694  6F95               	movwf	___ftadd@exp2& (0+255),b
 15017                           
 15018                           ; BSR set to: 0
 15019  001696  0100               	movlb	0	; () banked
 15020  001698  5196               	movf	___ftadd@exp1& (0+255),w,b
 15021  00169A  0100               	movlb	0	; () banked
 15022  00169C  B4D8               	btfsc	status,2,c
 15023  00169E  D011               	goto	l1600
 15024                           
 15025                           ; BSR set to: 0
 15026  0016A0  0100               	movlb	0	; () banked
 15027  0016A2  5195               	movf	___ftadd@exp2& (0+255),w,b
 15028  0016A4  0100               	movlb	0	; () banked
 15029  0016A6  5D96               	subwf	___ftadd@exp1& (0+255),w,b
 15030  0016A8  B0D8               	btfsc	status,0,c
 15031  0016AA  D012               	goto	l6550
 15032                           
 15033                           ; BSR set to: 0
 15034  0016AC  0100               	movlb	0	; () banked
 15035  0016AE  5196               	movf	___ftadd@exp1& (0+255),w,b
 15036  0016B0  0800               	sublw	0
 15037  0016B2  0100               	movlb	0	; () banked
 15038  0016B4  2595               	addwf	___ftadd@exp2& (0+255),w,b
 15039  0016B6  0100               	movlb	0	; () banked
 15040  0016B8  6F91               	movwf	??___ftadd& (0+255),b
 15041  0016BA  0E18               	movlw	24
 15042  0016BC  0100               	movlb	0	; () banked
 15043  0016BE  6591               	cpfsgt	??___ftadd& (0+255),b
 15044  0016C0  D007               	goto	l6550
 15045  0016C2                     l1600:
 15046                           
 15047                           ; BSR set to: 0
 15048  0016C2  C08E  F08B         	movff	___ftadd@f2,?___ftadd
 15049  0016C6  C08F  F08C         	movff	___ftadd@f2+1,?___ftadd+1
 15050  0016CA  C090  F08D         	movff	___ftadd@f2+2,?___ftadd+2
 15051  0016CE  D103               	goto	l1601
 15052  0016D0                     l6550:
 15053                           
 15054                           ; BSR set to: 0
 15055  0016D0  0100               	movlb	0	; () banked
 15056  0016D2  5195               	movf	___ftadd@exp2& (0+255),w,b
 15057  0016D4  0100               	movlb	0	; () banked
 15058  0016D6  B4D8               	btfsc	status,2,c
 15059  0016D8  D011               	goto	l1604
 15060                           
 15061                           ; BSR set to: 0
 15062  0016DA  0100               	movlb	0	; () banked
 15063  0016DC  5196               	movf	___ftadd@exp1& (0+255),w,b
 15064  0016DE  0100               	movlb	0	; () banked
 15065  0016E0  5D95               	subwf	___ftadd@exp2& (0+255),w,b
 15066  0016E2  B0D8               	btfsc	status,0,c
 15067  0016E4  D012               	goto	l6556
 15068                           
 15069                           ; BSR set to: 0
 15070  0016E6  0100               	movlb	0	; () banked
 15071  0016E8  5195               	movf	___ftadd@exp2& (0+255),w,b
 15072  0016EA  0800               	sublw	0
 15073  0016EC  0100               	movlb	0	; () banked
 15074  0016EE  2596               	addwf	___ftadd@exp1& (0+255),w,b
 15075  0016F0  0100               	movlb	0	; () banked
 15076  0016F2  6F91               	movwf	??___ftadd& (0+255),b
 15077  0016F4  0E18               	movlw	24
 15078  0016F6  0100               	movlb	0	; () banked
 15079  0016F8  6591               	cpfsgt	??___ftadd& (0+255),b
 15080  0016FA  D007               	goto	l6556
 15081  0016FC                     l1604:
 15082                           
 15083                           ; BSR set to: 0
 15084  0016FC  C08B  F08B         	movff	___ftadd@f1,?___ftadd
 15085  001700  C08C  F08C         	movff	___ftadd@f1+1,?___ftadd+1
 15086  001704  C08D  F08D         	movff	___ftadd@f1+2,?___ftadd+2
 15087  001708  D0E6               	goto	l1601
 15088  00170A                     l6556:
 15089                           
 15090                           ; BSR set to: 0
 15091  00170A  0E06               	movlw	6
 15092  00170C  0100               	movlb	0	; () banked
 15093  00170E  6F94               	movwf	___ftadd@sign& (0+255),b
 15094                           
 15095                           ; BSR set to: 0
 15096  001710  0100               	movlb	0	; () banked
 15097  001712  AF8D               	btfss	(___ftadd@f1+2)& (0+255),7,b
 15098  001714  D003               	goto	l6562
 15099                           
 15100                           ; BSR set to: 0
 15101  001716  0100               	movlb	0	; () banked
 15102  001718  8F94               	bsf	___ftadd@sign& (0+255),7,b
 15103  00171A  D000               	goto	l6562
 15104  00171C                     l6562:
 15105                           
 15106                           ; BSR set to: 0
 15107  00171C  0100               	movlb	0	; () banked
 15108  00171E  AF90               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15109  001720  D002               	goto	l1606
 15110                           
 15111                           ; BSR set to: 0
 15112  001722  0100               	movlb	0	; () banked
 15113  001724  8D94               	bsf	___ftadd@sign& (0+255),6,b
 15114  001726                     l1606:
 15115                           
 15116                           ; BSR set to: 0
 15117  001726  0100               	movlb	0	; () banked
 15118  001728  8F8C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15119                           
 15120                           ; BSR set to: 0
 15121  00172A  0EFF               	movlw	255
 15122  00172C  0100               	movlb	0	; () banked
 15123  00172E  178B               	andwf	___ftadd@f1& (0+255),f,b
 15124  001730  0EFF               	movlw	255
 15125  001732  0100               	movlb	0	; () banked
 15126  001734  178C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15127  001736  0E00               	movlw	0
 15128  001738  0100               	movlb	0	; () banked
 15129  00173A  178D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15130  00173C  0100               	movlb	0	; () banked
 15131  00173E  8F8F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15132                           
 15133                           ; BSR set to: 0
 15134  001740  0EFF               	movlw	255
 15135  001742  0100               	movlb	0	; () banked
 15136  001744  178E               	andwf	___ftadd@f2& (0+255),f,b
 15137  001746  0EFF               	movlw	255
 15138  001748  0100               	movlb	0	; () banked
 15139  00174A  178F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15140  00174C  0E00               	movlw	0
 15141  00174E  0100               	movlb	0	; () banked
 15142  001750  1790               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15143                           
 15144                           ; BSR set to: 0
 15145  001752  0100               	movlb	0	; () banked
 15146  001754  5195               	movf	___ftadd@exp2& (0+255),w,b
 15147  001756  0100               	movlb	0	; () banked
 15148  001758  5D96               	subwf	___ftadd@exp1& (0+255),w,b
 15149  00175A  B0D8               	btfsc	status,0,c
 15150  00175C  D028               	goto	l6582
 15151  00175E                     l6572:
 15152                           
 15153                           ; BSR set to: 0
 15154  00175E  0100               	movlb	0	; () banked
 15155  001760  90D8               	bcf	status,0,c
 15156  001762  378E               	rlcf	___ftadd@f2& (0+255),f,b
 15157  001764  378F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15158  001766  3790               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15159  001768  0100               	movlb	0	; () banked
 15160  00176A  0795               	decf	___ftadd@exp2& (0+255),f,b
 15161                           
 15162                           ; BSR set to: 0
 15163  00176C  0100               	movlb	0	; () banked
 15164  00176E  5196               	movf	___ftadd@exp1& (0+255),w,b
 15165  001770  0100               	movlb	0	; () banked
 15166  001772  1995               	xorwf	___ftadd@exp2& (0+255),w,b
 15167  001774  B4D8               	btfsc	status,2,c
 15168  001776  D013               	goto	l6580
 15169                           
 15170                           ; BSR set to: 0
 15171  001778  0100               	movlb	0	; () banked
 15172  00177A  0794               	decf	___ftadd@sign& (0+255),f,b
 15173  00177C  C094  F091         	movff	___ftadd@sign,??___ftadd
 15174  001780  0E07               	movlw	7
 15175  001782  0100               	movlb	0	; () banked
 15176  001784  1791               	andwf	??___ftadd& (0+255),f,b
 15177  001786  B4D8               	btfsc	status,2,c
 15178  001788  D00A               	goto	l6580
 15179  00178A  D7E9               	goto	l6572
 15180                           
 15181                           ; BSR set to: 0
 15182                           
 15183                           ; BSR set to: 0
 15184  00178C  D008               	goto	l6580
 15185  00178E                     l6578:
 15186                           
 15187                           ; BSR set to: 0
 15188  00178E  0100               	movlb	0	; () banked
 15189  001790  90D8               	bcf	status,0,c
 15190  001792  338D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15191  001794  338C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15192  001796  338B               	rrcf	___ftadd@f1& (0+255),f,b
 15193  001798  0100               	movlb	0	; () banked
 15194  00179A  2B96               	incf	___ftadd@exp1& (0+255),f,b
 15195  00179C  D000               	goto	l6580
 15196  00179E                     l6580:
 15197                           
 15198                           ; BSR set to: 0
 15199  00179E  0100               	movlb	0	; () banked
 15200  0017A0  5195               	movf	___ftadd@exp2& (0+255),w,b
 15201  0017A2  0100               	movlb	0	; () banked
 15202  0017A4  1996               	xorwf	___ftadd@exp1& (0+255),w,b
 15203  0017A6  B4D8               	btfsc	status,2,c
 15204  0017A8  D030               	goto	l1615
 15205  0017AA  D7F1               	goto	l6578
 15206                           
 15207                           ; BSR set to: 0
 15208  0017AC  D02E               	goto	l1615
 15209  0017AE                     l6582:
 15210                           
 15211                           ; BSR set to: 0
 15212  0017AE  0100               	movlb	0	; () banked
 15213  0017B0  5196               	movf	___ftadd@exp1& (0+255),w,b
 15214  0017B2  0100               	movlb	0	; () banked
 15215  0017B4  5D95               	subwf	___ftadd@exp2& (0+255),w,b
 15216  0017B6  B0D8               	btfsc	status,0,c
 15217  0017B8  D028               	goto	l1615
 15218  0017BA                     l6584:
 15219                           
 15220                           ; BSR set to: 0
 15221  0017BA  0100               	movlb	0	; () banked
 15222  0017BC  90D8               	bcf	status,0,c
 15223  0017BE  378B               	rlcf	___ftadd@f1& (0+255),f,b
 15224  0017C0  378C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15225  0017C2  378D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15226  0017C4  0100               	movlb	0	; () banked
 15227  0017C6  0796               	decf	___ftadd@exp1& (0+255),f,b
 15228                           
 15229                           ; BSR set to: 0
 15230  0017C8  0100               	movlb	0	; () banked
 15231  0017CA  5196               	movf	___ftadd@exp1& (0+255),w,b
 15232  0017CC  0100               	movlb	0	; () banked
 15233  0017CE  1995               	xorwf	___ftadd@exp2& (0+255),w,b
 15234  0017D0  B4D8               	btfsc	status,2,c
 15235  0017D2  D013               	goto	l6592
 15236                           
 15237                           ; BSR set to: 0
 15238  0017D4  0100               	movlb	0	; () banked
 15239  0017D6  0794               	decf	___ftadd@sign& (0+255),f,b
 15240  0017D8  C094  F091         	movff	___ftadd@sign,??___ftadd
 15241  0017DC  0E07               	movlw	7
 15242  0017DE  0100               	movlb	0	; () banked
 15243  0017E0  1791               	andwf	??___ftadd& (0+255),f,b
 15244  0017E2  B4D8               	btfsc	status,2,c
 15245  0017E4  D00A               	goto	l6592
 15246  0017E6  D7E9               	goto	l6584
 15247                           
 15248                           ; BSR set to: 0
 15249                           
 15250                           ; BSR set to: 0
 15251  0017E8  D008               	goto	l6592
 15252  0017EA                     l6590:
 15253                           
 15254                           ; BSR set to: 0
 15255  0017EA  0100               	movlb	0	; () banked
 15256  0017EC  90D8               	bcf	status,0,c
 15257  0017EE  3390               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15258  0017F0  338F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15259  0017F2  338E               	rrcf	___ftadd@f2& (0+255),f,b
 15260  0017F4  0100               	movlb	0	; () banked
 15261  0017F6  2B95               	incf	___ftadd@exp2& (0+255),f,b
 15262  0017F8  D000               	goto	l6592
 15263  0017FA                     l6592:
 15264                           
 15265                           ; BSR set to: 0
 15266  0017FA  0100               	movlb	0	; () banked
 15267  0017FC  5195               	movf	___ftadd@exp2& (0+255),w,b
 15268  0017FE  0100               	movlb	0	; () banked
 15269  001800  1996               	xorwf	___ftadd@exp1& (0+255),w,b
 15270  001802  B4D8               	btfsc	status,2,c
 15271  001804  D002               	goto	l1615
 15272  001806  D7F1               	goto	l6590
 15273                           
 15274                           ; BSR set to: 0
 15275  001808  D000               	goto	l1615
 15276  00180A                     l1615:
 15277                           
 15278                           ; BSR set to: 0
 15279  00180A  0100               	movlb	0	; () banked
 15280  00180C  AF94               	btfss	___ftadd@sign& (0+255),7,b
 15281  00180E  D012               	goto	l1624
 15282                           
 15283                           ; BSR set to: 0
 15284  001810  0EFF               	movlw	255
 15285  001812  0100               	movlb	0	; () banked
 15286  001814  1B8B               	xorwf	___ftadd@f1& (0+255),f,b
 15287  001816  0EFF               	movlw	255
 15288  001818  0100               	movlb	0	; () banked
 15289  00181A  1B8C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15290  00181C  0EFF               	movlw	255
 15291  00181E  0100               	movlb	0	; () banked
 15292  001820  1B8D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15293  001822  0E01               	movlw	1
 15294  001824  0100               	movlb	0	; () banked
 15295  001826  278B               	addwf	___ftadd@f1& (0+255),f,b
 15296  001828  0E00               	movlw	0
 15297  00182A  0100               	movlb	0	; () banked
 15298  00182C  238C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15299  00182E  0E00               	movlw	0
 15300  001830  0100               	movlb	0	; () banked
 15301  001832  238D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15302  001834                     l1624:
 15303                           
 15304                           ; BSR set to: 0
 15305  001834  0100               	movlb	0	; () banked
 15306  001836  AD94               	btfss	___ftadd@sign& (0+255),6,b
 15307  001838  D013               	goto	l6598
 15308                           
 15309                           ; BSR set to: 0
 15310  00183A  0EFF               	movlw	255
 15311  00183C  0100               	movlb	0	; () banked
 15312  00183E  1B8E               	xorwf	___ftadd@f2& (0+255),f,b
 15313  001840  0EFF               	movlw	255
 15314  001842  0100               	movlb	0	; () banked
 15315  001844  1B8F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15316  001846  0EFF               	movlw	255
 15317  001848  0100               	movlb	0	; () banked
 15318  00184A  1B90               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15319  00184C  0E01               	movlw	1
 15320  00184E  0100               	movlb	0	; () banked
 15321  001850  278E               	addwf	___ftadd@f2& (0+255),f,b
 15322  001852  0E00               	movlw	0
 15323  001854  0100               	movlb	0	; () banked
 15324  001856  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15325  001858  0E00               	movlw	0
 15326  00185A  0100               	movlb	0	; () banked
 15327  00185C  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15328  00185E  D000               	goto	l6598
 15329  001860                     l6598:
 15330                           
 15331                           ; BSR set to: 0
 15332  001860  0E00               	movlw	0
 15333  001862  0100               	movlb	0	; () banked
 15334  001864  6F94               	movwf	___ftadd@sign& (0+255),b
 15335                           
 15336                           ; BSR set to: 0
 15337  001866  0100               	movlb	0	; () banked
 15338  001868  518B               	movf	___ftadd@f1& (0+255),w,b
 15339  00186A  0100               	movlb	0	; () banked
 15340  00186C  278E               	addwf	___ftadd@f2& (0+255),f,b
 15341  00186E  0100               	movlb	0	; () banked
 15342  001870  518C               	movf	(___ftadd@f1+1)& (0+255),w,b
 15343  001872  0100               	movlb	0	; () banked
 15344  001874  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15345  001876  0100               	movlb	0	; () banked
 15346  001878  518D               	movf	(___ftadd@f1+2)& (0+255),w,b
 15347  00187A  0100               	movlb	0	; () banked
 15348  00187C  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351  00187E  0100               	movlb	0	; () banked
 15352  001880  AF90               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15353  001882  D016               	goto	l6608
 15354                           
 15355                           ; BSR set to: 0
 15356  001884  0EFF               	movlw	255
 15357  001886  0100               	movlb	0	; () banked
 15358  001888  1B8E               	xorwf	___ftadd@f2& (0+255),f,b
 15359  00188A  0EFF               	movlw	255
 15360  00188C  0100               	movlb	0	; () banked
 15361  00188E  1B8F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15362  001890  0EFF               	movlw	255
 15363  001892  0100               	movlb	0	; () banked
 15364  001894  1B90               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15365  001896  0E01               	movlw	1
 15366  001898  0100               	movlb	0	; () banked
 15367  00189A  278E               	addwf	___ftadd@f2& (0+255),f,b
 15368  00189C  0E00               	movlw	0
 15369  00189E  0100               	movlb	0	; () banked
 15370  0018A0  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15371  0018A2  0E00               	movlw	0
 15372  0018A4  0100               	movlb	0	; () banked
 15373  0018A6  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15374                           
 15375                           ; BSR set to: 0
 15376  0018A8  0E01               	movlw	1
 15377  0018AA  0100               	movlb	0	; () banked
 15378  0018AC  6F94               	movwf	___ftadd@sign& (0+255),b
 15379  0018AE  D000               	goto	l6608
 15380  0018B0                     l6608:
 15381                           
 15382                           ; BSR set to: 0
 15383  0018B0  C08E  F070         	movff	___ftadd@f2,___ftpack@arg
 15384  0018B4  C08F  F071         	movff	___ftadd@f2+1,___ftpack@arg+1
 15385  0018B8  C090  F072         	movff	___ftadd@f2+2,___ftpack@arg+2
 15386  0018BC  C096  F073         	movff	___ftadd@exp1,___ftpack@exp
 15387  0018C0  C094  F074         	movff	___ftadd@sign,___ftpack@sign
 15388  0018C4  EC60  F013         	call	___ftpack	;wreg free
 15389  0018C8  C070  F08B         	movff	?___ftpack,?___ftadd
 15390  0018CC  C071  F08C         	movff	?___ftpack+1,?___ftadd+1
 15391  0018D0  C072  F08D         	movff	?___ftpack+2,?___ftadd+2
 15392  0018D4  D000               	goto	l1601
 15393  0018D6                     l1601:
 15394  0018D6  0012               	return		;funcret
 15395  0018D8                     __end_of___ftadd:
 15396                           	opt stack 0
 15397                           tblptru	equ	0xFF8
 15398                           tblptrh	equ	0xFF7
 15399                           tblptrl	equ	0xFF6
 15400                           tablat	equ	0xFF5
 15401                           prodh	equ	0xFF4
 15402                           prodl	equ	0xFF3
 15403                           intcon	equ	0xFF2
 15404                           intcon2	equ	0xFF1
 15405                           intcon3	equ	0xFF0
 15406                           postinc0	equ	0xFEE
 15407                           wreg	equ	0xFE8
 15408                           indf2	equ	0xFDF
 15409                           postinc2	equ	0xFDE
 15410                           postdec2	equ	0xFDD
 15411                           fsr2h	equ	0xFDA
 15412                           fsr2l	equ	0xFD9
 15413                           status	equ	0xFD8
 15414                           
 15415 ;; *************** function ___ftneg *****************
 15416 ;; Defined at:
 15417 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;  f1              3   16[BANK0 ] float 
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;		None
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  3   16[BANK0 ] float 
 15424 ;; Registers used:
 15425 ;;		wreg, status,2, status,0
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15431 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15434 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15435 ;;Total ram usage:        3 bytes
 15436 ;; Hardware stack levels used:    1
 15437 ;; Hardware stack levels required when called:    7
 15438 ;; This function calls:
 15439 ;;		Nothing
 15440 ;; This function is called by:
 15441 ;;		_pow
 15442 ;;		_exp
 15443 ;; This function uses a non-reentrant model
 15444 ;;
 15445                           
 15446                           	psect	text114
 15447  0042BE                     __ptext114:
 15448                           	opt stack 0
 15449  0042BE                     ___ftneg:
 15450                           	opt stack 20
 15451                           
 15452                           ;incstack = 0
 15453  0042BE  0100               	movlb	0	; () banked
 15454  0042C0  5170               	movf	___ftneg@f1& (0+255),w,b
 15455  0042C2  0100               	movlb	0	; () banked
 15456  0042C4  1171               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15457  0042C6  0100               	movlb	0	; () banked
 15458  0042C8  1172               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15459  0042CA  B4D8               	btfsc	status,2,c
 15460  0042CC  D009               	goto	l1657
 15461                           
 15462                           ; BSR set to: 0
 15463  0042CE  0E00               	movlw	0
 15464  0042D0  0100               	movlb	0	; () banked
 15465  0042D2  1B70               	xorwf	___ftneg@f1& (0+255),f,b
 15466  0042D4  0E00               	movlw	0
 15467  0042D6  0100               	movlb	0	; () banked
 15468  0042D8  1B71               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15469  0042DA  0E80               	movlw	128
 15470  0042DC  0100               	movlb	0	; () banked
 15471  0042DE  1B72               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15472  0042E0                     l1657:
 15473                           
 15474                           ; BSR set to: 0
 15475  0042E0  C070  F070         	movff	___ftneg@f1,?___ftneg
 15476  0042E4  C071  F071         	movff	___ftneg@f1+1,?___ftneg+1
 15477  0042E8  C072  F072         	movff	___ftneg@f1+2,?___ftneg+2
 15478                           
 15479                           ; BSR set to: 0
 15480  0042EC  0012               	return		;funcret
 15481  0042EE                     __end_of___ftneg:
 15482                           	opt stack 0
 15483                           tblptru	equ	0xFF8
 15484                           tblptrh	equ	0xFF7
 15485                           tblptrl	equ	0xFF6
 15486                           tablat	equ	0xFF5
 15487                           prodh	equ	0xFF4
 15488                           prodl	equ	0xFF3
 15489                           intcon	equ	0xFF2
 15490                           intcon2	equ	0xFF1
 15491                           intcon3	equ	0xFF0
 15492                           postinc0	equ	0xFEE
 15493                           wreg	equ	0xFE8
 15494                           indf2	equ	0xFDF
 15495                           postinc2	equ	0xFDE
 15496                           postdec2	equ	0xFDD
 15497                           fsr2h	equ	0xFDA
 15498                           fsr2l	equ	0xFD9
 15499                           status	equ	0xFD8
 15500                           
 15501 ;; *************** function ___ftdiv *****************
 15502 ;; Defined at:
 15503 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 15504 ;; Parameters:    Size  Location     Type
 15505 ;;  f1              3   24[BANK0 ] float 
 15506 ;;  f2              3   27[BANK0 ] float 
 15507 ;; Auto vars:     Size  Location     Type
 15508 ;;  f3              3   34[BANK0 ] float 
 15509 ;;  sign            1   38[BANK0 ] unsigned char 
 15510 ;;  exp             1   37[BANK0 ] unsigned char 
 15511 ;;  cntr            1   33[BANK0 ] unsigned char 
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  3   24[BANK0 ] float 
 15514 ;; Registers used:
 15515 ;;		wreg, status,2, status,0, cstack
 15516 ;; Tracked objects:
 15517 ;;		On entry : 0/0
 15518 ;;		On exit  : 0/0
 15519 ;;		Unchanged: 0/0
 15520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15521 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15522 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15523 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15524 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15525 ;;Total ram usage:       15 bytes
 15526 ;; Hardware stack levels used:    1
 15527 ;; Hardware stack levels required when called:    8
 15528 ;; This function calls:
 15529 ;;		___ftpack
 15530 ;; This function is called by:
 15531 ;;		_exp
 15532 ;; This function uses a non-reentrant model
 15533 ;;
 15534                           
 15535                           	psect	text115
 15536  0020BE                     __ptext115:
 15537                           	opt stack 0
 15538  0020BE                     ___ftdiv:
 15539                           	opt stack 19
 15540                           
 15541                           ; BSR set to: 0
 15542                           ;incstack = 0
 15543  0020BE  C07A  F07E         	movff	___ftdiv@f1+2,??___ftdiv
 15544  0020C2  0100               	movlb	0	; () banked
 15545  0020C4  6B7F               	clrf	(??___ftdiv+1)& (0+255),b
 15546  0020C6  6B80               	clrf	(??___ftdiv+2)& (0+255),b
 15547  0020C8  0100               	movlb	0	; () banked
 15548  0020CA  3579               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 15549  0020CC  0100               	movlb	0	; () banked
 15550  0020CE  377E               	rlcf	??___ftdiv& (0+255),f,b
 15551  0020D0  E301               	bnc	u6731
 15552  0020D2  817F               	bsf	(??___ftdiv+1)& (0+255),0,b
 15553  0020D4                     u6731:
 15554  0020D4  0100               	movlb	0	; () banked
 15555  0020D6  517E               	movf	??___ftdiv& (0+255),w,b
 15556  0020D8  0100               	movlb	0	; () banked
 15557  0020DA  6F85               	movwf	___ftdiv@exp& (0+255),b
 15558  0020DC  0100               	movlb	0	; () banked
 15559  0020DE  5185               	movf	___ftdiv@exp& (0+255),w,b
 15560  0020E0  A4D8               	btfss	status,2,c
 15561  0020E2  D002               	goto	l6936
 15562  0020E4  D014               	goto	l6938
 15563                           
 15564                           ; BSR set to: 0
 15565                           
 15566                           ; BSR set to: 0
 15567  0020E6  D08B               	goto	l1632
 15568  0020E8                     l6936:
 15569                           
 15570                           ; BSR set to: 0
 15571  0020E8  C07D  F07E         	movff	___ftdiv@f2+2,??___ftdiv
 15572  0020EC  0100               	movlb	0	; () banked
 15573  0020EE  6B7F               	clrf	(??___ftdiv+1)& (0+255),b
 15574  0020F0  6B80               	clrf	(??___ftdiv+2)& (0+255),b
 15575  0020F2  0100               	movlb	0	; () banked
 15576  0020F4  357C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 15577  0020F6  0100               	movlb	0	; () banked
 15578  0020F8  377E               	rlcf	??___ftdiv& (0+255),f,b
 15579  0020FA  E301               	bnc	u6751
 15580  0020FC  817F               	bsf	(??___ftdiv+1)& (0+255),0,b
 15581  0020FE                     u6751:
 15582  0020FE  0100               	movlb	0	; () banked
 15583  002100  517E               	movf	??___ftdiv& (0+255),w,b
 15584  002102  0100               	movlb	0	; () banked
 15585  002104  6F86               	movwf	___ftdiv@sign& (0+255),b
 15586  002106  0100               	movlb	0	; () banked
 15587  002108  5186               	movf	___ftdiv@sign& (0+255),w,b
 15588  00210A  A4D8               	btfss	status,2,c
 15589  00210C  D00A               	goto	l6942
 15590  00210E                     l6938:
 15591                           
 15592                           ; BSR set to: 0
 15593  00210E  0E00               	movlw	0
 15594  002110  0100               	movlb	0	; () banked
 15595  002112  6F78               	movwf	?___ftdiv& (0+255),b
 15596  002114  0E00               	movlw	0
 15597  002116  0100               	movlb	0	; () banked
 15598  002118  6F79               	movwf	(?___ftdiv+1)& (0+255),b
 15599  00211A  0E00               	movlw	0
 15600  00211C  0100               	movlb	0	; () banked
 15601  00211E  6F7A               	movwf	(?___ftdiv+2)& (0+255),b
 15602                           
 15603                           ; BSR set to: 0
 15604  002120  D06E               	goto	l1632
 15605  002122                     l6942:
 15606                           
 15607                           ; BSR set to: 0
 15608  002122  0E00               	movlw	0
 15609  002124  0100               	movlb	0	; () banked
 15610  002126  6F82               	movwf	___ftdiv@f3& (0+255),b
 15611  002128  0E00               	movlw	0
 15612  00212A  0100               	movlb	0	; () banked
 15613  00212C  6F83               	movwf	(___ftdiv@f3+1)& (0+255),b
 15614  00212E  0E00               	movlw	0
 15615  002130  0100               	movlb	0	; () banked
 15616  002132  6F84               	movwf	(___ftdiv@f3+2)& (0+255),b
 15617                           
 15618                           ; BSR set to: 0
 15619  002134  0100               	movlb	0	; () banked
 15620  002136  5186               	movf	___ftdiv@sign& (0+255),w,b
 15621  002138  0F89               	addlw	137
 15622  00213A  0100               	movlb	0	; () banked
 15623  00213C  5F85               	subwf	___ftdiv@exp& (0+255),f,b
 15624                           
 15625                           ; BSR set to: 0
 15626  00213E  C07A  F086         	movff	___ftdiv@f1+2,___ftdiv@sign
 15627                           
 15628                           ; BSR set to: 0
 15629  002142  0100               	movlb	0	; () banked
 15630  002144  517D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 15631  002146  0100               	movlb	0	; () banked
 15632  002148  1B86               	xorwf	___ftdiv@sign& (0+255),f,b
 15633                           
 15634                           ; BSR set to: 0
 15635  00214A  0E80               	movlw	128
 15636  00214C  0100               	movlb	0	; () banked
 15637  00214E  1786               	andwf	___ftdiv@sign& (0+255),f,b
 15638                           
 15639                           ; BSR set to: 0
 15640  002150  0100               	movlb	0	; () banked
 15641  002152  8F79               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 15642                           
 15643                           ; BSR set to: 0
 15644  002154  0EFF               	movlw	255
 15645  002156  0100               	movlb	0	; () banked
 15646  002158  1778               	andwf	___ftdiv@f1& (0+255),f,b
 15647  00215A  0EFF               	movlw	255
 15648  00215C  0100               	movlb	0	; () banked
 15649  00215E  1779               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 15650  002160  0E00               	movlw	0
 15651  002162  0100               	movlb	0	; () banked
 15652  002164  177A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 15653                           
 15654                           ; BSR set to: 0
 15655  002166  0100               	movlb	0	; () banked
 15656  002168  8F7C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 15657                           
 15658                           ; BSR set to: 0
 15659  00216A  0EFF               	movlw	255
 15660  00216C  0100               	movlb	0	; () banked
 15661  00216E  177B               	andwf	___ftdiv@f2& (0+255),f,b
 15662  002170  0EFF               	movlw	255
 15663  002172  0100               	movlb	0	; () banked
 15664  002174  177C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 15665  002176  0E00               	movlw	0
 15666  002178  0100               	movlb	0	; () banked
 15667  00217A  177D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 15668                           
 15669                           ; BSR set to: 0
 15670  00217C  0E18               	movlw	24
 15671  00217E  0100               	movlb	0	; () banked
 15672  002180  6F81               	movwf	___ftdiv@cntr& (0+255),b
 15673  002182  D000               	goto	l6962
 15674  002184                     l6962:
 15675                           
 15676                           ; BSR set to: 0
 15677  002184  0100               	movlb	0	; () banked
 15678  002186  90D8               	bcf	status,0,c
 15679  002188  3782               	rlcf	___ftdiv@f3& (0+255),f,b
 15680  00218A  3783               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 15681  00218C  3784               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 15682                           
 15683                           ; BSR set to: 0
 15684  00218E  0100               	movlb	0	; () banked
 15685  002190  517B               	movf	___ftdiv@f2& (0+255),w,b
 15686  002192  0100               	movlb	0	; () banked
 15687  002194  5D78               	subwf	___ftdiv@f1& (0+255),w,b
 15688  002196  0100               	movlb	0	; () banked
 15689  002198  517C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 15690  00219A  0100               	movlb	0	; () banked
 15691  00219C  5979               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 15692  00219E  0100               	movlb	0	; () banked
 15693  0021A0  517D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 15694  0021A2  0100               	movlb	0	; () banked
 15695  0021A4  597A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 15696  0021A6  A0D8               	btfss	status,0,c
 15697  0021A8  D00E               	goto	l1635
 15698                           
 15699                           ; BSR set to: 0
 15700  0021AA  0100               	movlb	0	; () banked
 15701  0021AC  517B               	movf	___ftdiv@f2& (0+255),w,b
 15702  0021AE  0100               	movlb	0	; () banked
 15703  0021B0  5F78               	subwf	___ftdiv@f1& (0+255),f,b
 15704  0021B2  0100               	movlb	0	; () banked
 15705  0021B4  517C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 15706  0021B6  0100               	movlb	0	; () banked
 15707  0021B8  5B79               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 15708  0021BA  0100               	movlb	0	; () banked
 15709  0021BC  517D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 15710  0021BE  0100               	movlb	0	; () banked
 15711  0021C0  5B7A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 15712                           
 15713                           ; BSR set to: 0
 15714  0021C2  0100               	movlb	0	; () banked
 15715  0021C4  8182               	bsf	___ftdiv@f3& (0+255),0,b
 15716  0021C6                     l1635:
 15717                           
 15718                           ; BSR set to: 0
 15719  0021C6  0100               	movlb	0	; () banked
 15720  0021C8  90D8               	bcf	status,0,c
 15721  0021CA  3778               	rlcf	___ftdiv@f1& (0+255),f,b
 15722  0021CC  3779               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 15723  0021CE  377A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 15724                           
 15725                           ; BSR set to: 0
 15726  0021D0  0100               	movlb	0	; () banked
 15727  0021D2  2F81               	decfsz	___ftdiv@cntr& (0+255),f,b
 15728  0021D4  D7D7               	goto	l6962
 15729  0021D6  D000               	goto	l6972
 15730  0021D8                     l6972:
 15731                           
 15732                           ; BSR set to: 0
 15733  0021D8  C082  F070         	movff	___ftdiv@f3,___ftpack@arg
 15734  0021DC  C083  F071         	movff	___ftdiv@f3+1,___ftpack@arg+1
 15735  0021E0  C084  F072         	movff	___ftdiv@f3+2,___ftpack@arg+2
 15736  0021E4  C085  F073         	movff	___ftdiv@exp,___ftpack@exp
 15737  0021E8  C086  F074         	movff	___ftdiv@sign,___ftpack@sign
 15738  0021EC  EC60  F013         	call	___ftpack	;wreg free
 15739  0021F0  C070  F078         	movff	?___ftpack,?___ftdiv
 15740  0021F4  C071  F079         	movff	?___ftpack+1,?___ftdiv+1
 15741  0021F8  C072  F07A         	movff	?___ftpack+2,?___ftdiv+2
 15742  0021FC  D000               	goto	l1632
 15743  0021FE                     l1632:
 15744  0021FE  0012               	return		;funcret
 15745  002200                     __end_of___ftdiv:
 15746                           	opt stack 0
 15747                           tblptru	equ	0xFF8
 15748                           tblptrh	equ	0xFF7
 15749                           tblptrl	equ	0xFF6
 15750                           tablat	equ	0xFF5
 15751                           prodh	equ	0xFF4
 15752                           prodl	equ	0xFF3
 15753                           intcon	equ	0xFF2
 15754                           intcon2	equ	0xFF1
 15755                           intcon3	equ	0xFF0
 15756                           postinc0	equ	0xFEE
 15757                           wreg	equ	0xFE8
 15758                           indf2	equ	0xFDF
 15759                           postinc2	equ	0xFDE
 15760                           postdec2	equ	0xFDD
 15761                           fsr2h	equ	0xFDA
 15762                           fsr2l	equ	0xFD9
 15763                           status	equ	0xFD8
 15764                           
 15765 ;; *************** function ___awtoft *****************
 15766 ;; Defined at:
 15767 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
 15768 ;; Parameters:    Size  Location     Type
 15769 ;;  c               2   24[BANK0 ] int 
 15770 ;; Auto vars:     Size  Location     Type
 15771 ;;  sign            1   27[BANK0 ] unsigned char 
 15772 ;; Return value:  Size  Location     Type
 15773 ;;                  3   24[BANK0 ] float 
 15774 ;; Registers used:
 15775 ;;		wreg, status,2, status,0, cstack
 15776 ;; Tracked objects:
 15777 ;;		On entry : 0/0
 15778 ;;		On exit  : 0/0
 15779 ;;		Unchanged: 0/0
 15780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15781 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;Total ram usage:        4 bytes
 15786 ;; Hardware stack levels used:    1
 15787 ;; Hardware stack levels required when called:    8
 15788 ;; This function calls:
 15789 ;;		___ftpack
 15790 ;; This function is called by:
 15791 ;;		_exp
 15792 ;;		_log
 15793 ;; This function uses a non-reentrant model
 15794 ;;
 15795                           
 15796                           	psect	text116
 15797  003E20                     __ptext116:
 15798                           	opt stack 0
 15799  003E20                     ___awtoft:
 15800                           	opt stack 19
 15801                           
 15802                           ;incstack = 0
 15803  003E20  0E00               	movlw	0
 15804  003E22  0100               	movlb	0	; () banked
 15805  003E24  6F7B               	movwf	___awtoft@sign& (0+255),b
 15806                           
 15807                           ; BSR set to: 0
 15808  003E26  0100               	movlb	0	; () banked
 15809  003E28  AF79               	btfss	(___awtoft@c+1)& (0+255),7,b
 15810  003E2A  D009               	goto	l6992
 15811                           
 15812                           ; BSR set to: 0
 15813  003E2C  0100               	movlb	0	; () banked
 15814  003E2E  6D78               	negf	___awtoft@c& (0+255),b
 15815  003E30  1F79               	comf	(___awtoft@c+1)& (0+255),f,b
 15816  003E32  B0D8               	btfsc	status,0,c
 15817  003E34  2B79               	incf	(___awtoft@c+1)& (0+255),f,b
 15818                           
 15819                           ; BSR set to: 0
 15820  003E36  0E01               	movlw	1
 15821  003E38  0100               	movlb	0	; () banked
 15822  003E3A  6F7B               	movwf	___awtoft@sign& (0+255),b
 15823  003E3C  D000               	goto	l6992
 15824  003E3E                     l6992:
 15825                           
 15826                           ; BSR set to: 0
 15827  003E3E  C078  F070         	movff	___awtoft@c,___ftpack@arg
 15828  003E42  C079  F071         	movff	___awtoft@c+1,___ftpack@arg+1
 15829  003E46  0100               	movlb	0	; () banked
 15830  003E48  6B72               	clrf	(___ftpack@arg+2)& (0+255),b
 15831  003E4A  0E8E               	movlw	142
 15832  003E4C  0100               	movlb	0	; () banked
 15833  003E4E  6F73               	movwf	___ftpack@exp& (0+255),b
 15834  003E50  C07B  F074         	movff	___awtoft@sign,___ftpack@sign
 15835  003E54  EC60  F013         	call	___ftpack	;wreg free
 15836  003E58  C070  F078         	movff	?___ftpack,?___awtoft
 15837  003E5C  C071  F079         	movff	?___ftpack+1,?___awtoft+1
 15838  003E60  C072  F07A         	movff	?___ftpack+2,?___awtoft+2
 15839  003E64  D000               	goto	l1449
 15840  003E66                     l1449:
 15841  003E66  0012               	return		;funcret
 15842  003E68                     __end_of___awtoft:
 15843                           	opt stack 0
 15844                           tblptru	equ	0xFF8
 15845                           tblptrh	equ	0xFF7
 15846                           tblptrl	equ	0xFF6
 15847                           tablat	equ	0xFF5
 15848                           prodh	equ	0xFF4
 15849                           prodl	equ	0xFF3
 15850                           intcon	equ	0xFF2
 15851                           intcon2	equ	0xFF1
 15852                           intcon3	equ	0xFF0
 15853                           postinc0	equ	0xFEE
 15854                           wreg	equ	0xFE8
 15855                           indf2	equ	0xFDF
 15856                           postinc2	equ	0xFDE
 15857                           postdec2	equ	0xFDD
 15858                           fsr2h	equ	0xFDA
 15859                           fsr2l	equ	0xFD9
 15860                           status	equ	0xFD8
 15861                           
 15862 ;; *************** function ___lltoft *****************
 15863 ;; Defined at:
 15864 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 15865 ;; Parameters:    Size  Location     Type
 15866 ;;  c               4   24[BANK0 ] unsigned long 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;  exp             1   32[BANK0 ] unsigned char 
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  3   24[BANK0 ] float 
 15871 ;; Registers used:
 15872 ;;		wreg, status,2, status,0, cstack
 15873 ;; Tracked objects:
 15874 ;;		On entry : 0/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;Total ram usage:        9 bytes
 15883 ;; Hardware stack levels used:    1
 15884 ;; Hardware stack levels required when called:    8
 15885 ;; This function calls:
 15886 ;;		___ftpack
 15887 ;; This function is called by:
 15888 ;;		_pow
 15889 ;; This function uses a non-reentrant model
 15890 ;;
 15891                           
 15892                           	psect	text117
 15893  003614                     __ptext117:
 15894                           	opt stack 0
 15895  003614                     ___lltoft:
 15896                           	opt stack 20
 15897                           
 15898                           ;incstack = 0
 15899  003614  0E8E               	movlw	142
 15900  003616  0100               	movlb	0	; () banked
 15901  003618  6F80               	movwf	___lltoft@exp& (0+255),b
 15902  00361A  D009               	goto	l7272
 15903  00361C                     l7270:
 15904                           
 15905                           ; BSR set to: 0
 15906  00361C  0100               	movlb	0	; () banked
 15907  00361E  90D8               	bcf	status,0,c
 15908  003620  337B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 15909  003622  337A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 15910  003624  3379               	rrcf	(___lltoft@c+1)& (0+255),f,b
 15911  003626  3378               	rrcf	___lltoft@c& (0+255),f,b
 15912  003628  0100               	movlb	0	; () banked
 15913  00362A  2B80               	incf	___lltoft@exp& (0+255),f,b
 15914  00362C  D000               	goto	l7272
 15915  00362E                     l7272:
 15916                           
 15917                           ; BSR set to: 0
 15918  00362E  0E00               	movlw	0
 15919  003630  0100               	movlb	0	; () banked
 15920  003632  1578               	andwf	___lltoft@c& (0+255),w,b
 15921  003634  0100               	movlb	0	; () banked
 15922  003636  6F7C               	movwf	??___lltoft& (0+255),b
 15923  003638  0E00               	movlw	0
 15924  00363A  0100               	movlb	0	; () banked
 15925  00363C  1579               	andwf	(___lltoft@c+1)& (0+255),w,b
 15926  00363E  0100               	movlb	0	; () banked
 15927  003640  6F7D               	movwf	(??___lltoft+1)& (0+255),b
 15928  003642  0E00               	movlw	0
 15929  003644  0100               	movlb	0	; () banked
 15930  003646  157A               	andwf	(___lltoft@c+2)& (0+255),w,b
 15931  003648  0100               	movlb	0	; () banked
 15932  00364A  6F7E               	movwf	(??___lltoft+2)& (0+255),b
 15933  00364C  0EFF               	movlw	255
 15934  00364E  0100               	movlb	0	; () banked
 15935  003650  157B               	andwf	(___lltoft@c+3)& (0+255),w,b
 15936  003652  0100               	movlb	0	; () banked
 15937  003654  6F7F               	movwf	(??___lltoft+3)& (0+255),b
 15938  003656  0100               	movlb	0	; () banked
 15939  003658  517C               	movf	??___lltoft& (0+255),w,b
 15940  00365A  0100               	movlb	0	; () banked
 15941  00365C  117D               	iorwf	(??___lltoft+1)& (0+255),w,b
 15942  00365E  0100               	movlb	0	; () banked
 15943  003660  117E               	iorwf	(??___lltoft+2)& (0+255),w,b
 15944  003662  0100               	movlb	0	; () banked
 15945  003664  117F               	iorwf	(??___lltoft+3)& (0+255),w,b
 15946  003666  A4D8               	btfss	status,2,c
 15947  003668  D7D9               	goto	l7270
 15948                           
 15949                           ; BSR set to: 0
 15950                           
 15951                           ; BSR set to: 0
 15952  00366A  C078  F070         	movff	___lltoft@c,___ftpack@arg
 15953  00366E  C079  F071         	movff	___lltoft@c+1,___ftpack@arg+1
 15954  003672  C07A  F072         	movff	___lltoft@c+2,___ftpack@arg+2
 15955  003676  C080  F073         	movff	___lltoft@exp,___ftpack@exp
 15956  00367A  0E00               	movlw	0
 15957  00367C  0100               	movlb	0	; () banked
 15958  00367E  6F74               	movwf	___ftpack@sign& (0+255),b
 15959  003680  EC60  F013         	call	___ftpack	;wreg free
 15960  003684  C070  F078         	movff	?___ftpack,?___lltoft
 15961  003688  C071  F079         	movff	?___ftpack+1,?___lltoft+1
 15962  00368C  C072  F07A         	movff	?___ftpack+2,?___lltoft+2
 15963  003690  D000               	goto	l1737
 15964  003692                     l1737:
 15965  003692  0012               	return		;funcret
 15966  003694                     __end_of___lltoft:
 15967                           	opt stack 0
 15968                           tblptru	equ	0xFF8
 15969                           tblptrh	equ	0xFF7
 15970                           tblptrl	equ	0xFF6
 15971                           tablat	equ	0xFF5
 15972                           prodh	equ	0xFF4
 15973                           prodl	equ	0xFF3
 15974                           intcon	equ	0xFF2
 15975                           intcon2	equ	0xFF1
 15976                           intcon3	equ	0xFF0
 15977                           postinc0	equ	0xFEE
 15978                           wreg	equ	0xFE8
 15979                           indf2	equ	0xFDF
 15980                           postinc2	equ	0xFDE
 15981                           postdec2	equ	0xFDD
 15982                           fsr2h	equ	0xFDA
 15983                           fsr2l	equ	0xFD9
 15984                           status	equ	0xFD8
 15985                           
 15986 ;; *************** function ___lbtoft *****************
 15987 ;; Defined at:
 15988 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 15989 ;; Parameters:    Size  Location     Type
 15990 ;;  c               1    wreg     unsigned char 
 15991 ;; Auto vars:     Size  Location     Type
 15992 ;;  c               1   27[BANK0 ] unsigned char 
 15993 ;; Return value:  Size  Location     Type
 15994 ;;                  3   24[BANK0 ] float 
 15995 ;; Registers used:
 15996 ;;		wreg, status,2, status,0, cstack
 15997 ;; Tracked objects:
 15998 ;;		On entry : 0/0
 15999 ;;		On exit  : 0/0
 16000 ;;		Unchanged: 0/0
 16001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16002 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16005 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16006 ;;Total ram usage:        4 bytes
 16007 ;; Hardware stack levels used:    1
 16008 ;; Hardware stack levels required when called:    8
 16009 ;; This function calls:
 16010 ;;		___ftpack
 16011 ;; This function is called by:
 16012 ;;		_CalculateSensorSums
 16013 ;; This function uses a non-reentrant model
 16014 ;;
 16015                           
 16016                           	psect	text118
 16017  0042EE                     __ptext118:
 16018                           	opt stack 0
 16019  0042EE                     ___lbtoft:
 16020                           	opt stack 21
 16021                           
 16022                           ;incstack = 0
 16023                           ;___lbtoft@c stored from wreg
 16024  0042EE  0100               	movlb	0	; () banked
 16025  0042F0  6F7B               	movwf	___lbtoft@c& (0+255),b
 16026                           
 16027                           ; BSR set to: 0
 16028  0042F2  0100               	movlb	0	; () banked
 16029  0042F4  517B               	movf	___lbtoft@c& (0+255),w,b
 16030  0042F6  0100               	movlb	0	; () banked
 16031  0042F8  6F70               	movwf	___ftpack@arg& (0+255),b
 16032  0042FA  6B71               	clrf	(___ftpack@arg+1)& (0+255),b
 16033  0042FC  6B72               	clrf	(___ftpack@arg+2)& (0+255),b
 16034  0042FE  0E8E               	movlw	142
 16035  004300  0100               	movlb	0	; () banked
 16036  004302  6F73               	movwf	___ftpack@exp& (0+255),b
 16037  004304  0E00               	movlw	0
 16038  004306  0100               	movlb	0	; () banked
 16039  004308  6F74               	movwf	___ftpack@sign& (0+255),b
 16040  00430A  EC60  F013         	call	___ftpack	;wreg free
 16041  00430E  C070  F078         	movff	?___ftpack,?___lbtoft
 16042  004312  C071  F079         	movff	?___ftpack+1,?___lbtoft+1
 16043  004316  C072  F07A         	movff	?___ftpack+2,?___lbtoft+2
 16044  00431A  D000               	goto	l1704
 16045  00431C                     l1704:
 16046  00431C  0012               	return		;funcret
 16047  00431E                     __end_of___lbtoft:
 16048                           	opt stack 0
 16049                           tblptru	equ	0xFF8
 16050                           tblptrh	equ	0xFF7
 16051                           tblptrl	equ	0xFF6
 16052                           tablat	equ	0xFF5
 16053                           prodh	equ	0xFF4
 16054                           prodl	equ	0xFF3
 16055                           intcon	equ	0xFF2
 16056                           intcon2	equ	0xFF1
 16057                           intcon3	equ	0xFF0
 16058                           postinc0	equ	0xFEE
 16059                           wreg	equ	0xFE8
 16060                           indf2	equ	0xFDF
 16061                           postinc2	equ	0xFDE
 16062                           postdec2	equ	0xFDD
 16063                           fsr2h	equ	0xFDA
 16064                           fsr2l	equ	0xFD9
 16065                           status	equ	0xFD8
 16066                           
 16067 ;; *************** function ___ftpack *****************
 16068 ;; Defined at:
 16069 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;  arg             3   16[BANK0 ] unsigned um
 16072 ;;  exp             1   19[BANK0 ] unsigned char 
 16073 ;;  sign            1   20[BANK0 ] unsigned char 
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;		None
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  3   16[BANK0 ] float 
 16078 ;; Registers used:
 16079 ;;		wreg, status,2, status,0
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16085 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16087 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;Total ram usage:        8 bytes
 16090 ;; Hardware stack levels used:    1
 16091 ;; Hardware stack levels required when called:    7
 16092 ;; This function calls:
 16093 ;;		Nothing
 16094 ;; This function is called by:
 16095 ;;		___altoft
 16096 ;;		___awtoft
 16097 ;;		___ftadd
 16098 ;;		___ftdiv
 16099 ;;		___ftmul
 16100 ;;		___lbtoft
 16101 ;;		___lltoft
 16102 ;;		___lwtoft
 16103 ;; This function uses a non-reentrant model
 16104 ;;
 16105                           
 16106                           	psect	text119
 16107  0026C0                     __ptext119:
 16108                           	opt stack 0
 16109  0026C0                     ___ftpack:
 16110                           	opt stack 18
 16111                           
 16112                           ;incstack = 0
 16113  0026C0  0100               	movlb	0	; () banked
 16114  0026C2  5173               	movf	___ftpack@exp& (0+255),w,b
 16115  0026C4  0100               	movlb	0	; () banked
 16116  0026C6  B4D8               	btfsc	status,2,c
 16117  0026C8  D008               	goto	l6432
 16118                           
 16119                           ; BSR set to: 0
 16120  0026CA  0100               	movlb	0	; () banked
 16121  0026CC  5170               	movf	___ftpack@arg& (0+255),w,b
 16122  0026CE  0100               	movlb	0	; () banked
 16123  0026D0  1171               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 16124  0026D2  0100               	movlb	0	; () banked
 16125  0026D4  1172               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 16126  0026D6  A4D8               	btfss	status,2,c
 16127  0026D8  D013               	goto	l6438
 16128  0026DA                     l6432:
 16129                           
 16130                           ; BSR set to: 0
 16131  0026DA  0E00               	movlw	0
 16132  0026DC  0100               	movlb	0	; () banked
 16133  0026DE  6F70               	movwf	?___ftpack& (0+255),b
 16134  0026E0  0E00               	movlw	0
 16135  0026E2  0100               	movlb	0	; () banked
 16136  0026E4  6F71               	movwf	(?___ftpack+1)& (0+255),b
 16137  0026E6  0E00               	movlw	0
 16138  0026E8  0100               	movlb	0	; () banked
 16139  0026EA  6F72               	movwf	(?___ftpack+2)& (0+255),b
 16140                           
 16141                           ; BSR set to: 0
 16142  0026EC  D078               	goto	l1560
 16143                           
 16144                           ; BSR set to: 0
 16145  0026EE  D008               	goto	l6438
 16146  0026F0                     l6436:
 16147                           
 16148                           ; BSR set to: 0
 16149  0026F0  0100               	movlb	0	; () banked
 16150  0026F2  2B73               	incf	___ftpack@exp& (0+255),f,b
 16151  0026F4  0100               	movlb	0	; () banked
 16152  0026F6  90D8               	bcf	status,0,c
 16153  0026F8  3372               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 16154  0026FA  3371               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 16155  0026FC  3370               	rrcf	___ftpack@arg& (0+255),f,b
 16156  0026FE  D000               	goto	l6438
 16157  002700                     l6438:
 16158                           
 16159                           ; BSR set to: 0
 16160  002700  0E00               	movlw	0
 16161  002702  0100               	movlb	0	; () banked
 16162  002704  1570               	andwf	___ftpack@arg& (0+255),w,b
 16163  002706  0100               	movlb	0	; () banked
 16164  002708  6F75               	movwf	??___ftpack& (0+255),b
 16165  00270A  0E00               	movlw	0
 16166  00270C  0100               	movlb	0	; () banked
 16167  00270E  1571               	andwf	(___ftpack@arg+1)& (0+255),w,b
 16168  002710  0100               	movlb	0	; () banked
 16169  002712  6F76               	movwf	(??___ftpack+1)& (0+255),b
 16170  002714  0EFE               	movlw	254
 16171  002716  0100               	movlb	0	; () banked
 16172  002718  1572               	andwf	(___ftpack@arg+2)& (0+255),w,b
 16173  00271A  0100               	movlb	0	; () banked
 16174  00271C  6F77               	movwf	(??___ftpack+2)& (0+255),b
 16175  00271E  0100               	movlb	0	; () banked
 16176  002720  5175               	movf	??___ftpack& (0+255),w,b
 16177  002722  0100               	movlb	0	; () banked
 16178  002724  1176               	iorwf	(??___ftpack+1)& (0+255),w,b
 16179  002726  0100               	movlb	0	; () banked
 16180  002728  1177               	iorwf	(??___ftpack+2)& (0+255),w,b
 16181  00272A  B4D8               	btfsc	status,2,c
 16182  00272C  D013               	goto	l6444
 16183  00272E  D7E0               	goto	l6436
 16184                           
 16185                           ; BSR set to: 0
 16186  002730  D011               	goto	l6444
 16187  002732                     l6440:
 16188                           
 16189                           ; BSR set to: 0
 16190  002732  0100               	movlb	0	; () banked
 16191  002734  2B73               	incf	___ftpack@exp& (0+255),f,b
 16192                           
 16193                           ; BSR set to: 0
 16194  002736  0E01               	movlw	1
 16195  002738  0100               	movlb	0	; () banked
 16196  00273A  2770               	addwf	___ftpack@arg& (0+255),f,b
 16197  00273C  0E00               	movlw	0
 16198  00273E  0100               	movlb	0	; () banked
 16199  002740  2371               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 16200  002742  0E00               	movlw	0
 16201  002744  0100               	movlb	0	; () banked
 16202  002746  2372               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 16203  002748  0100               	movlb	0	; () banked
 16204  00274A  90D8               	bcf	status,0,c
 16205  00274C  3372               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 16206  00274E  3371               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 16207  002750  3370               	rrcf	___ftpack@arg& (0+255),f,b
 16208  002752  D000               	goto	l6444
 16209  002754                     l6444:
 16210                           
 16211                           ; BSR set to: 0
 16212  002754  0E00               	movlw	0
 16213  002756  0100               	movlb	0	; () banked
 16214  002758  1570               	andwf	___ftpack@arg& (0+255),w,b
 16215  00275A  0100               	movlb	0	; () banked
 16216  00275C  6F75               	movwf	??___ftpack& (0+255),b
 16217  00275E  0E00               	movlw	0
 16218  002760  0100               	movlb	0	; () banked
 16219  002762  1571               	andwf	(___ftpack@arg+1)& (0+255),w,b
 16220  002764  0100               	movlb	0	; () banked
 16221  002766  6F76               	movwf	(??___ftpack+1)& (0+255),b
 16222  002768  0EFF               	movlw	255
 16223  00276A  0100               	movlb	0	; () banked
 16224  00276C  1572               	andwf	(___ftpack@arg+2)& (0+255),w,b
 16225  00276E  0100               	movlb	0	; () banked
 16226  002770  6F77               	movwf	(??___ftpack+2)& (0+255),b
 16227  002772  0100               	movlb	0	; () banked
 16228  002774  5175               	movf	??___ftpack& (0+255),w,b
 16229  002776  0100               	movlb	0	; () banked
 16230  002778  1176               	iorwf	(??___ftpack+1)& (0+255),w,b
 16231  00277A  0100               	movlb	0	; () banked
 16232  00277C  1177               	iorwf	(??___ftpack+2)& (0+255),w,b
 16233  00277E  B4D8               	btfsc	status,2,c
 16234  002780  D00A               	goto	l6448
 16235  002782  D7D7               	goto	l6440
 16236                           
 16237                           ; BSR set to: 0
 16238  002784  D008               	goto	l6448
 16239  002786                     l6446:
 16240                           
 16241                           ; BSR set to: 0
 16242  002786  0100               	movlb	0	; () banked
 16243  002788  0773               	decf	___ftpack@exp& (0+255),f,b
 16244  00278A  0100               	movlb	0	; () banked
 16245  00278C  90D8               	bcf	status,0,c
 16246  00278E  3770               	rlcf	___ftpack@arg& (0+255),f,b
 16247  002790  3771               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 16248  002792  3772               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 16249  002794  D000               	goto	l6448
 16250  002796                     l6448:
 16251                           
 16252                           ; BSR set to: 0
 16253  002796  0100               	movlb	0	; () banked
 16254  002798  BF71               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 16255  00279A  D005               	goto	l1571
 16256                           
 16257                           ; BSR set to: 0
 16258  00279C  0E02               	movlw	2
 16259  00279E  0100               	movlb	0	; () banked
 16260  0027A0  6173               	cpfslt	___ftpack@exp& (0+255),b
 16261  0027A2  D7F1               	goto	l6446
 16262  0027A4  D000               	goto	l1571
 16263  0027A6                     l1571:
 16264                           
 16265                           ; BSR set to: 0
 16266  0027A6  0100               	movlb	0	; () banked
 16267  0027A8  B173               	btfsc	___ftpack@exp& (0+255),0,b
 16268  0027AA  D003               	goto	l6454
 16269                           
 16270                           ; BSR set to: 0
 16271  0027AC  0100               	movlb	0	; () banked
 16272  0027AE  9F71               	bcf	(___ftpack@arg+1)& (0+255),7,b
 16273  0027B0  D000               	goto	l6454
 16274  0027B2                     l6454:
 16275                           
 16276                           ; BSR set to: 0
 16277  0027B2  0100               	movlb	0	; () banked
 16278  0027B4  90D8               	bcf	status,0,c
 16279  0027B6  3373               	rrcf	___ftpack@exp& (0+255),f,b
 16280  0027B8  0100               	movlb	0	; () banked
 16281  0027BA  5173               	movf	___ftpack@exp& (0+255),w,b
 16282  0027BC  0100               	movlb	0	; () banked
 16283  0027BE  1372               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 16284                           
 16285                           ; BSR set to: 0
 16286  0027C0  0100               	movlb	0	; () banked
 16287  0027C2  5174               	movf	___ftpack@sign& (0+255),w,b
 16288  0027C4  0100               	movlb	0	; () banked
 16289  0027C6  B4D8               	btfsc	status,2,c
 16290  0027C8  D003               	goto	l6460
 16291                           
 16292                           ; BSR set to: 0
 16293  0027CA  0100               	movlb	0	; () banked
 16294  0027CC  8F72               	bsf	(___ftpack@arg+2)& (0+255),7,b
 16295  0027CE  D000               	goto	l6460
 16296  0027D0                     l6460:
 16297                           
 16298                           ; BSR set to: 0
 16299  0027D0  C070  F070         	movff	___ftpack@arg,?___ftpack
 16300  0027D4  C071  F071         	movff	___ftpack@arg+1,?___ftpack+1
 16301  0027D8  C072  F072         	movff	___ftpack@arg+2,?___ftpack+2
 16302  0027DC  D000               	goto	l1560
 16303  0027DE                     l1560:
 16304                           
 16305                           ; BSR set to: 0
 16306  0027DE  0012               	return		;funcret
 16307  0027E0                     __end_of___ftpack:
 16308                           	opt stack 0
 16309                           tblptru	equ	0xFF8
 16310                           tblptrh	equ	0xFF7
 16311                           tblptrl	equ	0xFF6
 16312                           tablat	equ	0xFF5
 16313                           prodh	equ	0xFF4
 16314                           prodl	equ	0xFF3
 16315                           intcon	equ	0xFF2
 16316                           intcon2	equ	0xFF1
 16317                           intcon3	equ	0xFF0
 16318                           postinc0	equ	0xFEE
 16319                           wreg	equ	0xFE8
 16320                           indf2	equ	0xFDF
 16321                           postinc2	equ	0xFDE
 16322                           postdec2	equ	0xFDD
 16323                           fsr2h	equ	0xFDA
 16324                           fsr2l	equ	0xFD9
 16325                           status	equ	0xFD8
 16326                           
 16327 ;; *************** function _CalculateSensorError *****************
 16328 ;; Defined at:
 16329 ;;		line 400 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 16330 ;; Parameters:    Size  Location     Type
 16331 ;;  sum             2   16[BANK0 ] PTR const unsigned char 
 16332 ;;		 -> main@sensor_sum(1), 
 16333 ;; Auto vars:     Size  Location     Type
 16334 ;;		None
 16335 ;; Return value:  Size  Location     Type
 16336 ;;                  2   16[BANK0 ] int 
 16337 ;; Registers used:
 16338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16339 ;; Tracked objects:
 16340 ;;		On entry : 0/0
 16341 ;;		On exit  : 0/0
 16342 ;;		Unchanged: 0/0
 16343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16348 ;;Total ram usage:        2 bytes
 16349 ;; Hardware stack levels used:    1
 16350 ;; Hardware stack levels required when called:    7
 16351 ;; This function calls:
 16352 ;;		Nothing
 16353 ;; This function is called by:
 16354 ;;		_main
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358                           	psect	text120
 16359  003052                     __ptext120:
 16360                           	opt stack 0
 16361  003052                     _CalculateSensorError:
 16362                           	opt stack 23
 16363                           
 16364                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 402: switch(*sum) {
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;incstack = 0
 16368  003052  D033               	goto	l7792
 16369  003054                     l7754:
 16370                           
 16371                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 404: return(8);
 16372  003054  0E00               	movlw	0
 16373  003056  0100               	movlb	0	; () banked
 16374  003058  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16375  00305A  0E08               	movlw	8
 16376  00305C  D053               	goto	L24
 16377                           
 16378                           ; BSR set to: 0
 16379  00305E  D054               	goto	l275
 16380  003060                     l7758:
 16381                           
 16382                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 406: return(6);
 16383  003060  0E00               	movlw	0
 16384  003062  0100               	movlb	0	; () banked
 16385  003064  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16386  003066  0E06               	movlw	6
 16387  003068  D04D               	goto	L24
 16388                           
 16389                           ; BSR set to: 0
 16390  00306A  D04E               	goto	l275
 16391  00306C                     l7762:
 16392                           
 16393                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 408: return(4);
 16394  00306C  0E00               	movlw	0
 16395  00306E  0100               	movlb	0	; () banked
 16396  003070  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16397  003072  0E04               	movlw	4
 16398  003074  D047               	goto	L24
 16399                           
 16400                           ; BSR set to: 0
 16401  003076  D048               	goto	l275
 16402  003078                     l7766:
 16403                           
 16404                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 410: return(2);
 16405  003078  0E00               	movlw	0
 16406  00307A  0100               	movlb	0	; () banked
 16407  00307C  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16408  00307E  0E02               	movlw	2
 16409  003080  D041               	goto	L24
 16410                           
 16411                           ; BSR set to: 0
 16412  003082  D042               	goto	l275
 16413                           
 16414                           ; BSR set to: 0
 16415                           
 16416                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 411: case(4) :
 16417  003084  D03B               	goto	l7794
 16418                           
 16419                           ; BSR set to: 0
 16420                           
 16421                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 412: return(0);
 16422  003086  D040               	goto	l275
 16423  003088                     l7774:
 16424                           
 16425                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 414: return(-2);
 16426  003088  0EFF               	movlw	255
 16427  00308A  0100               	movlb	0	; () banked
 16428  00308C  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16429  00308E  0EFE               	movlw	254
 16430  003090  D039               	goto	L24
 16431                           
 16432                           ; BSR set to: 0
 16433  003092  D03A               	goto	l275
 16434  003094                     l7778:
 16435                           
 16436                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 416: return(-4);
 16437  003094  0EFF               	movlw	255
 16438  003096  0100               	movlb	0	; () banked
 16439  003098  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16440  00309A  0EFC               	movlw	252
 16441  00309C  D033               	goto	L24
 16442                           
 16443                           ; BSR set to: 0
 16444  00309E  D034               	goto	l275
 16445  0030A0                     l7782:
 16446                           
 16447                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 418: return(-6);
 16448  0030A0  0EFF               	movlw	255
 16449  0030A2  0100               	movlb	0	; () banked
 16450  0030A4  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16451  0030A6  0EFA               	movlw	250
 16452  0030A8  D02D               	goto	L24
 16453                           
 16454                           ; BSR set to: 0
 16455  0030AA  D02E               	goto	l275
 16456  0030AC                     l7786:
 16457                           
 16458                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 420: return(-8);
 16459  0030AC  0EFF               	movlw	255
 16460  0030AE  0100               	movlb	0	; () banked
 16461  0030B0  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16462  0030B2  0EF8               	movlw	248
 16463  0030B4  D027               	goto	L24
 16464                           
 16465                           ; BSR set to: 0
 16466  0030B6  D028               	goto	l275
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 423: }
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 422: break;
 16473                           
 16474                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 421: default :
 16475  0030B8  D021               	goto	l7794
 16476  0030BA                     l7792:
 16477  0030BA  C070  FFD9         	movff	CalculateSensorError@sum,fsr2l
 16478  0030BE  C071  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
 16479  0030C2  50DF               	movf	indf2,w,c
 16480                           
 16481                           ; Switch size 1, requested type "space"
 16482                           ; Number of cases is 9, Range of values is 1 to 24
 16483                           ; switch strategies available:
 16484                           ; Name         Instructions Cycles
 16485                           ; simple_byte           28    15 (average)
 16486                           ;	Chosen strategy is simple_byte
 16487  0030C4  0A01               	xorlw	1	; case 1
 16488  0030C6  B4D8               	btfsc	status,2,c
 16489  0030C8  D7F1               	goto	l7786
 16490  0030CA  0A03               	xorlw	3	; case 2
 16491  0030CC  B4D8               	btfsc	status,2,c
 16492  0030CE  D7E2               	goto	l7778
 16493  0030D0  0A01               	xorlw	1	; case 3
 16494  0030D2  B4D8               	btfsc	status,2,c
 16495  0030D4  D7E5               	goto	l7782
 16496  0030D6  0A07               	xorlw	7	; case 4
 16497  0030D8  B4D8               	btfsc	status,2,c
 16498  0030DA  D010               	goto	l7794
 16499  0030DC  0A02               	xorlw	2	; case 6
 16500  0030DE  B4D8               	btfsc	status,2,c
 16501  0030E0  D7D3               	goto	l7774
 16502  0030E2  0A0E               	xorlw	14	; case 8
 16503  0030E4  B4D8               	btfsc	status,2,c
 16504  0030E6  D7C2               	goto	l7762
 16505  0030E8  0A04               	xorlw	4	; case 12
 16506  0030EA  B4D8               	btfsc	status,2,c
 16507  0030EC  D7C5               	goto	l7766
 16508  0030EE  0A1C               	xorlw	28	; case 16
 16509  0030F0  B4D8               	btfsc	status,2,c
 16510  0030F2  D7B0               	goto	l7754
 16511  0030F4  0A08               	xorlw	8	; case 24
 16512  0030F6  B4D8               	btfsc	status,2,c
 16513  0030F8  D7B3               	goto	l7758
 16514  0030FA  D000               	goto	l7794
 16515  0030FC                     l7794:
 16516                           
 16517                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 425: return(0);
 16518  0030FC  0E00               	movlw	0
 16519  0030FE  0100               	movlb	0	; () banked
 16520  003100  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 16521  003102  0E00               	movlw	0
 16522  003104                     L24:
 16523  003104  6F70               	movwf	?_CalculateSensorError& (0+255),b
 16524  003106  D000               	goto	l275
 16525  003108                     l275:
 16526                           
 16527                           ; BSR set to: 0
 16528  003108  0012               	return		;funcret
 16529  00310A                     __end_of_CalculateSensorError:
 16530                           	opt stack 0
 16531                           tblptru	equ	0xFF8
 16532                           tblptrh	equ	0xFF7
 16533                           tblptrl	equ	0xFF6
 16534                           tablat	equ	0xFF5
 16535                           prodh	equ	0xFF4
 16536                           prodl	equ	0xFF3
 16537                           intcon	equ	0xFF2
 16538                           intcon2	equ	0xFF1
 16539                           intcon3	equ	0xFF0
 16540                           postinc0	equ	0xFEE
 16541                           wreg	equ	0xFE8
 16542                           indf2	equ	0xFDF
 16543                           postinc2	equ	0xFDE
 16544                           postdec2	equ	0xFDD
 16545                           fsr2h	equ	0xFDA
 16546                           fsr2l	equ	0xFD9
 16547                           status	equ	0xFD8
 16548                           
 16549 ;; *************** function _BusyDistanceAcq *****************
 16550 ;; Defined at:
 16551 ;;		line 61 in file "Ultrasound.c"
 16552 ;; Parameters:    Size  Location     Type
 16553 ;;		None
 16554 ;; Auto vars:     Size  Location     Type
 16555 ;;		None
 16556 ;; Return value:  Size  Location     Type
 16557 ;;                  1    wreg      unsigned char 
 16558 ;; Registers used:
 16559 ;;		wreg, status,2
 16560 ;; Tracked objects:
 16561 ;;		On entry : 0/0
 16562 ;;		On exit  : 0/0
 16563 ;;		Unchanged: 0/0
 16564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16569 ;;Total ram usage:        0 bytes
 16570 ;; Hardware stack levels used:    1
 16571 ;; Hardware stack levels required when called:    7
 16572 ;; This function calls:
 16573 ;;		Nothing
 16574 ;; This function is called by:
 16575 ;;		_main
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           	psect	text121
 16580  00473E                     __ptext121:
 16581                           	opt stack 0
 16582  00473E                     _BusyDistanceAcq:
 16583                           	opt stack 23
 16584                           
 16585                           ;Ultrasound.c: 63: return (!echo_acq_done);
 16586                           
 16587                           ; BSR set to: 0
 16588                           ;incstack = 0
 16589  00473E  501A               	movf	_echo_acq_done,w,c
 16590  004740  A4D8               	btfss	status,2,c
 16591  004742  D002               	goto	u8080
 16592  004744  0E01               	movlw	1
 16593  004746  D002               	goto	l514
 16594  004748                     u8080:
 16595  004748  0E00               	movlw	0
 16596  00474A  D000               	goto	l514
 16597  00474C                     l514:
 16598  00474C  0012               	return		;funcret
 16599  00474E                     __end_of_BusyDistanceAcq:
 16600                           	opt stack 0
 16601                           tblptru	equ	0xFF8
 16602                           tblptrh	equ	0xFF7
 16603                           tblptrl	equ	0xFF6
 16604                           tablat	equ	0xFF5
 16605                           prodh	equ	0xFF4
 16606                           prodl	equ	0xFF3
 16607                           intcon	equ	0xFF2
 16608                           intcon2	equ	0xFF1
 16609                           intcon3	equ	0xFF0
 16610                           postinc0	equ	0xFEE
 16611                           wreg	equ	0xFE8
 16612                           indf2	equ	0xFDF
 16613                           postinc2	equ	0xFDE
 16614                           postdec2	equ	0xFDD
 16615                           fsr2h	equ	0xFDA
 16616                           fsr2l	equ	0xFD9
 16617                           status	equ	0xFD8
 16618                           
 16619 ;; *************** function _isrLP *****************
 16620 ;; Defined at:
 16621 ;;		line 744 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 16622 ;; Parameters:    Size  Location     Type
 16623 ;;		None
 16624 ;; Auto vars:     Size  Location     Type
 16625 ;;		None
 16626 ;; Return value:  Size  Location     Type
 16627 ;;		None               void
 16628 ;; Registers used:
 16629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16630 ;; Tracked objects:
 16631 ;;		On entry : 0/0
 16632 ;;		On exit  : 0/0
 16633 ;;		Unchanged: 0/0
 16634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16637 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16638 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16639 ;;Total ram usage:       17 bytes
 16640 ;; Hardware stack levels used:    1
 16641 ;; Hardware stack levels required when called:    6
 16642 ;; This function calls:
 16643 ;;		_WirelessTx_ISR
 16644 ;;		i1_ConvertADC
 16645 ;;		i1_ReadADC
 16646 ;;		i1_SetADCChannel
 16647 ;; This function is called by:
 16648 ;;		Interrupt level 1
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	intcodelo
 16653  000018                     __pintcodelo:
 16654                           	opt stack 0
 16655  000018                     _isrLP:
 16656                           	opt stack 18
 16657                           
 16658                           ;incstack = 0
 16659  000018  CFD8 F033          	movff	status,??_isrLP
 16660  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 16661  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 16662  000024  CFFA F036          	movff	pclath,??_isrLP+3
 16663  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 16664  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 16665  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 16666  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 16667  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 16668  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 16669  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 16670  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 16671  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 16672  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 16673  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 16674  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 16675  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 16676                           
 16677                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 759: if (PIR1bits.ADIF == 1) {
 16678  00005C  AC9E               	btfss	3998,6,c	;volatile
 16679  00005E  D01D               	goto	i1l408
 16680                           
 16681                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 760: PIR1bits.ADIF = 0;
 16682  000060  9C9E               	bcf	3998,6,c	;volatile
 16683                           
 16684                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 761: if (sensor_acq_index < 5) {
 16685  000062  0E05               	movlw	5
 16686  000064  6021               	cpfslt	_sensor_acq_index,c	;volatile
 16687  000066  D015               	goto	i1l6024
 16688                           
 16689                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 762: *(sensor_readings_raw + sensor_acq_index) = 
      +                          ReadADC();
 16690  000068  ECA7  F023         	call	i1_ReadADC	;wreg free
 16691  00006C  5021               	movf	_sensor_acq_index,w,c	;volatile
 16692  00006E  0D02               	mullw	2
 16693  000070  0ECB               	movlw	low _sensor_readings_raw
 16694  000072  24F3               	addwf	prodl,w,c
 16695  000074  6ED9               	movwf	fsr2l,c
 16696  000076  0E00               	movlw	high _sensor_readings_raw
 16697  000078  20F4               	addwfc	prodh,w,c
 16698  00007A  6EDA               	movwf	fsr2h,c
 16699  00007C  C02B  FFDE         	movff	?i1_ReadADC,postinc2
 16700  000080  C02C  FFDD         	movff	?i1_ReadADC+1,postdec2
 16701                           
 16702                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 763: sensor_acq_index++;
 16703  000084  2A21               	incf	_sensor_acq_index,f,c	;volatile
 16704                           
 16705                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 764: SetADCChannel(sensor_acq_index);
 16706  000086  5021               	movf	_sensor_acq_index,w,c	;volatile
 16707  000088  ECDD  F016         	call	i1_SetADCChannel
 16708                           
 16709                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 765: ConvertADC();
 16710  00008C  EC14  F024         	call	i1_ConvertADC	;wreg free
 16711                           
 16712                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 766: } else {
 16713  000090  D00A               	goto	i1l413
 16714  000092                     i1l6024:
 16715                           
 16716                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 767: sensor_acq_done = 1;
 16717  000092  0E01               	movlw	1
 16718  000094  6E20               	movwf	_sensor_acq_done,c	;volatile
 16719                           
 16720                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 768: PIE1bits.ADIE = 0;
 16721  000096  9C9D               	bcf	3997,6,c	;volatile
 16722                           
 16723                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 769: }
 16724                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 770: }
 16725  000098  D006               	goto	i1l413
 16726  00009A                     i1l408:
 16727                           
 16728                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 772: else if(PIR1bits.TX1IF == 1) {
 16729  00009A  A89E               	btfss	3998,4,c	;volatile
 16730  00009C  D004               	goto	i1l413
 16731                           
 16732                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 773: PIR1bits.TX1IF = 0;
 16733  00009E  989E               	bcf	3998,4,c	;volatile
 16734                           
 16735                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 774: WirelessTx_ISR();
 16736  0000A0  EC6E  F022         	call	_WirelessTx_ISR	;wreg free
 16737  0000A4  D000               	goto	i1l413
 16738  0000A6                     i1l413:
 16739  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 16740  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 16741  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 16742  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 16743  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 16744  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 16745  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 16746  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 16747  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 16748  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 16749  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 16750  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 16751  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 16752  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 16753  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 16754  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 16755  0000E6  C033  FFD8         	movff	??_isrLP,status
 16756  0000EA  0010               	retfie	
 16757  0000EC                     __end_of_isrLP:
 16758                           	opt stack 0
 16759                           pclatu	equ	0xFFB
 16760                           pclath	equ	0xFFA
 16761                           tblptru	equ	0xFF8
 16762                           tblptrh	equ	0xFF7
 16763                           tblptrl	equ	0xFF6
 16764                           tablat	equ	0xFF5
 16765                           prodh	equ	0xFF4
 16766                           prodl	equ	0xFF3
 16767                           intcon	equ	0xFF2
 16768                           intcon2	equ	0xFF1
 16769                           intcon3	equ	0xFF0
 16770                           postinc0	equ	0xFEE
 16771                           fsr0h	equ	0xFEA
 16772                           fsr0l	equ	0xFE9
 16773                           wreg	equ	0xFE8
 16774                           fsr1h	equ	0xFE2
 16775                           fsr1l	equ	0xFE1
 16776                           bsr	equ	0xFE0
 16777                           indf2	equ	0xFDF
 16778                           postinc2	equ	0xFDE
 16779                           postdec2	equ	0xFDD
 16780                           fsr2h	equ	0xFDA
 16781                           fsr2l	equ	0xFD9
 16782                           status	equ	0xFD8
 16783                           
 16784 ;; *************** function i1_SetADCChannel *****************
 16785 ;; Defined at:
 16786 ;;		line 264 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 16787 ;; Parameters:    Size  Location     Type
 16788 ;;  channel         1    wreg     unsigned char 
 16789 ;; Auto vars:     Size  Location     Type
 16790 ;;  channel         1    2[COMRAM] unsigned char 
 16791 ;; Return value:  Size  Location     Type
 16792 ;;		None               void
 16793 ;; Registers used:
 16794 ;;		wreg, status,2, status,0, cstack
 16795 ;; Tracked objects:
 16796 ;;		On entry : 0/0
 16797 ;;		On exit  : 0/0
 16798 ;;		Unchanged: 0/0
 16799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16804 ;;Total ram usage:        1 bytes
 16805 ;; Hardware stack levels used:    1
 16806 ;; Hardware stack levels required when called:    4
 16807 ;; This function calls:
 16808 ;;		i1_SetChanADC
 16809 ;; This function is called by:
 16810 ;;		_isrLP
 16811 ;; This function uses a non-reentrant model
 16812 ;;
 16813                           
 16814                           	psect	text123
 16815  002DBA                     __ptext123:
 16816                           	opt stack 0
 16817  002DBA                     i1_SetADCChannel:
 16818                           	opt stack 19
 16819                           
 16820                           ;incstack = 0
 16821                           ;i1SetADCChannel@channel stored from wreg
 16822  002DBA  6E2D               	movwf	i1SetADCChannel@channel,c
 16823                           
 16824                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 266: switch (channel) {
 16825  002DBC  D040               	goto	i1l5990
 16826  002DBE                     i1l5956:
 16827                           
 16828                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 268: SetChanADC(0b10000111);
 16829  002DBE  0E87               	movlw	135
 16830  002DC0  EC15  F023         	call	i1_SetChanADC
 16831                           
 16832                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 269: break;
 16833  002DC4  D06E               	goto	i1l240
 16834  002DC6                     i1l5958:
 16835                           
 16836                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 271: SetChanADC(0b10001111);
 16837  002DC6  0E8F               	movlw	143
 16838  002DC8  EC15  F023         	call	i1_SetChanADC
 16839                           
 16840                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 272: break;
 16841  002DCC  D06A               	goto	i1l240
 16842  002DCE                     i1l5960:
 16843                           
 16844                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 274: SetChanADC(0b10010111);
 16845  002DCE  0E97               	movlw	151
 16846  002DD0  EC15  F023         	call	i1_SetChanADC
 16847                           
 16848                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 275: break;
 16849  002DD4  D066               	goto	i1l240
 16850  002DD6                     i1l5962:
 16851                           
 16852                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 277: SetChanADC(0b10011111);
 16853  002DD6  0E9F               	movlw	159
 16854  002DD8  EC15  F023         	call	i1_SetChanADC
 16855                           
 16856                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 278: break;
 16857  002DDC  D062               	goto	i1l240
 16858  002DDE                     i1l5964:
 16859                           
 16860                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 280: SetChanADC(0b10100111);
 16861  002DDE  0EA7               	movlw	167
 16862  002DE0  EC15  F023         	call	i1_SetChanADC
 16863                           
 16864                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 281: break;
 16865  002DE4  D05E               	goto	i1l240
 16866  002DE6                     i1l5966:
 16867                           
 16868                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 283: SetChanADC(0b10101111);
 16869  002DE6  0EAF               	movlw	175
 16870  002DE8  EC15  F023         	call	i1_SetChanADC
 16871                           
 16872                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 284: break;
 16873  002DEC  D05A               	goto	i1l240
 16874  002DEE                     i1l5968:
 16875                           
 16876                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 286: SetChanADC(0b10110111);
 16877  002DEE  0EB7               	movlw	183
 16878  002DF0  EC15  F023         	call	i1_SetChanADC
 16879                           
 16880                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 287: break;
 16881  002DF4  D056               	goto	i1l240
 16882  002DF6                     i1l5970:
 16883                           
 16884                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 289: SetChanADC(0b10111111);
 16885  002DF6  0EBF               	movlw	191
 16886  002DF8  EC15  F023         	call	i1_SetChanADC
 16887                           
 16888                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 290: break;
 16889  002DFC  D052               	goto	i1l240
 16890  002DFE                     i1l5972:
 16891                           
 16892                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 292: SetChanADC(0b11000111);
 16893  002DFE  0EC7               	movlw	199
 16894  002E00  EC15  F023         	call	i1_SetChanADC
 16895                           
 16896                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 293: break;
 16897  002E04  D04E               	goto	i1l240
 16898  002E06                     i1l5974:
 16899                           
 16900                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 295: SetChanADC(0b11001111);
 16901  002E06  0ECF               	movlw	207
 16902  002E08  EC15  F023         	call	i1_SetChanADC
 16903                           
 16904                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 296: break;
 16905  002E0C  D04A               	goto	i1l240
 16906  002E0E                     i1l5976:
 16907                           
 16908                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 298: SetChanADC(0b11010111);
 16909  002E0E  0ED7               	movlw	215
 16910  002E10  EC15  F023         	call	i1_SetChanADC
 16911                           
 16912                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 299: break;
 16913  002E14  D046               	goto	i1l240
 16914  002E16                     i1l5978:
 16915                           
 16916                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 301: SetChanADC(0b11011111);
 16917  002E16  0EDF               	movlw	223
 16918  002E18  EC15  F023         	call	i1_SetChanADC
 16919                           
 16920                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 302: break;
 16921  002E1C  D042               	goto	i1l240
 16922  002E1E                     i1l5980:
 16923                           
 16924                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 304: SetChanADC(0b11100111);
 16925  002E1E  0EE7               	movlw	231
 16926  002E20  EC15  F023         	call	i1_SetChanADC
 16927                           
 16928                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 305: break;
 16929  002E24  D03E               	goto	i1l240
 16930  002E26                     i1l5982:
 16931                           
 16932                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 307: SetChanADC(0b11101111);
 16933  002E26  0EEF               	movlw	239
 16934  002E28  EC15  F023         	call	i1_SetChanADC
 16935                           
 16936                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 308: break;
 16937  002E2C  D03A               	goto	i1l240
 16938  002E2E                     i1l5984:
 16939                           
 16940                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 310: SetChanADC(0b11110111);
 16941  002E2E  0EF7               	movlw	247
 16942  002E30  EC15  F023         	call	i1_SetChanADC
 16943                           
 16944                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 311: break;
 16945  002E34  D036               	goto	i1l240
 16946  002E36                     i1l5986:
 16947                           
 16948                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 313: SetChanADC(0b11111111);
 16949  002E36  0EFF               	movlw	255
 16950  002E38  EC15  F023         	call	i1_SetChanADC
 16951                           
 16952                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 317: }
 16953                           
 16954                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 316: break;
 16955                           
 16956                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 315: default:
 16957                           
 16958                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 314: break;
 16959  002E3C  D032               	goto	i1l240
 16960  002E3E                     i1l5990:
 16961  002E3E  502D               	movf	i1SetADCChannel@channel,w,c
 16962                           
 16963                           ; Switch size 1, requested type "space"
 16964                           ; Number of cases is 16, Range of values is 0 to 15
 16965                           ; switch strategies available:
 16966                           ; Name         Instructions Cycles
 16967                           ; simple_byte           49    25 (average)
 16968                           ;	Chosen strategy is simple_byte
 16969  002E40  0A00               	xorlw	0	; case 0
 16970  002E42  B4D8               	btfsc	status,2,c
 16971  002E44  D7BC               	goto	i1l5956
 16972  002E46  0A01               	xorlw	1	; case 1
 16973  002E48  B4D8               	btfsc	status,2,c
 16974  002E4A  D7BD               	goto	i1l5958
 16975  002E4C  0A03               	xorlw	3	; case 2
 16976  002E4E  B4D8               	btfsc	status,2,c
 16977  002E50  D7BE               	goto	i1l5960
 16978  002E52  0A01               	xorlw	1	; case 3
 16979  002E54  B4D8               	btfsc	status,2,c
 16980  002E56  D7BF               	goto	i1l5962
 16981  002E58  0A07               	xorlw	7	; case 4
 16982  002E5A  B4D8               	btfsc	status,2,c
 16983  002E5C  D7C0               	goto	i1l5964
 16984  002E5E  0A01               	xorlw	1	; case 5
 16985  002E60  B4D8               	btfsc	status,2,c
 16986  002E62  D7C1               	goto	i1l5966
 16987  002E64  0A03               	xorlw	3	; case 6
 16988  002E66  B4D8               	btfsc	status,2,c
 16989  002E68  D7C2               	goto	i1l5968
 16990  002E6A  0A01               	xorlw	1	; case 7
 16991  002E6C  B4D8               	btfsc	status,2,c
 16992  002E6E  D7C3               	goto	i1l5970
 16993  002E70  0A0F               	xorlw	15	; case 8
 16994  002E72  B4D8               	btfsc	status,2,c
 16995  002E74  D7C4               	goto	i1l5972
 16996  002E76  0A01               	xorlw	1	; case 9
 16997  002E78  B4D8               	btfsc	status,2,c
 16998  002E7A  D7C5               	goto	i1l5974
 16999  002E7C  0A03               	xorlw	3	; case 10
 17000  002E7E  B4D8               	btfsc	status,2,c
 17001  002E80  D7C6               	goto	i1l5976
 17002  002E82  0A01               	xorlw	1	; case 11
 17003  002E84  B4D8               	btfsc	status,2,c
 17004  002E86  D7C7               	goto	i1l5978
 17005  002E88  0A07               	xorlw	7	; case 12
 17006  002E8A  B4D8               	btfsc	status,2,c
 17007  002E8C  D7C8               	goto	i1l5980
 17008  002E8E  0A01               	xorlw	1	; case 13
 17009  002E90  B4D8               	btfsc	status,2,c
 17010  002E92  D7C9               	goto	i1l5982
 17011  002E94  0A03               	xorlw	3	; case 14
 17012  002E96  B4D8               	btfsc	status,2,c
 17013  002E98  D7CA               	goto	i1l5984
 17014  002E9A  0A01               	xorlw	1	; case 15
 17015  002E9C  B4D8               	btfsc	status,2,c
 17016  002E9E  D7CB               	goto	i1l5986
 17017  002EA0  D000               	goto	i1l240
 17018  002EA2                     i1l240:
 17019  002EA2  0012               	return		;funcret
 17020  002EA4                     __end_ofi1_SetADCChannel:
 17021                           	opt stack 0
 17022                           pclatu	equ	0xFFB
 17023                           pclath	equ	0xFFA
 17024                           tblptru	equ	0xFF8
 17025                           tblptrh	equ	0xFF7
 17026                           tblptrl	equ	0xFF6
 17027                           tablat	equ	0xFF5
 17028                           prodh	equ	0xFF4
 17029                           prodl	equ	0xFF3
 17030                           intcon	equ	0xFF2
 17031                           intcon2	equ	0xFF1
 17032                           intcon3	equ	0xFF0
 17033                           postinc0	equ	0xFEE
 17034                           fsr0h	equ	0xFEA
 17035                           fsr0l	equ	0xFE9
 17036                           wreg	equ	0xFE8
 17037                           fsr1h	equ	0xFE2
 17038                           fsr1l	equ	0xFE1
 17039                           bsr	equ	0xFE0
 17040                           indf2	equ	0xFDF
 17041                           postinc2	equ	0xFDE
 17042                           postdec2	equ	0xFDD
 17043                           fsr2h	equ	0xFDA
 17044                           fsr2l	equ	0xFD9
 17045                           status	equ	0xFD8
 17046                           
 17047 ;; *************** function i1_SetChanADC *****************
 17048 ;; Defined at:
 17049 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;  channel         1    wreg     unsigned char 
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  channel         1    1[COMRAM] unsigned char 
 17054 ;; Return value:  Size  Location     Type
 17055 ;;		None               void
 17056 ;; Registers used:
 17057 ;;		wreg, status,2, status,0
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17067 ;;Total ram usage:        2 bytes
 17068 ;; Hardware stack levels used:    1
 17069 ;; Hardware stack levels required when called:    3
 17070 ;; This function calls:
 17071 ;;		Nothing
 17072 ;; This function is called by:
 17073 ;;		i1_SetADCChannel
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           	psect	text124
 17078  00462A                     __ptext124:
 17079                           	opt stack 0
 17080  00462A                     i1_SetChanADC:
 17081                           	opt stack 19
 17082                           
 17083                           ;incstack = 0
 17084                           ;i1SetChanADC@channel stored from wreg
 17085  00462A  6E2C               	movwf	i1SetChanADC@channel,c
 17086  00462C  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 17087  004630  0EC3               	movlw	195
 17088  004632  162B               	andwf	??i1_SetChanADC,f,c
 17089  004634  90D8               	bcf	status,0,c
 17090  004636  302C               	rrcf	i1SetChanADC@channel,w,c
 17091  004638  0B3C               	andlw	60
 17092  00463A  102B               	iorwf	??i1_SetChanADC,w,c
 17093  00463C  6EC2               	movwf	4034,c	;volatile
 17094  00463E  0012               	return		;funcret
 17095  004640                     __end_ofi1_SetChanADC:
 17096                           	opt stack 0
 17097                           pclatu	equ	0xFFB
 17098                           pclath	equ	0xFFA
 17099                           tblptru	equ	0xFF8
 17100                           tblptrh	equ	0xFF7
 17101                           tblptrl	equ	0xFF6
 17102                           tablat	equ	0xFF5
 17103                           prodh	equ	0xFF4
 17104                           prodl	equ	0xFF3
 17105                           intcon	equ	0xFF2
 17106                           intcon2	equ	0xFF1
 17107                           intcon3	equ	0xFF0
 17108                           postinc0	equ	0xFEE
 17109                           fsr0h	equ	0xFEA
 17110                           fsr0l	equ	0xFE9
 17111                           wreg	equ	0xFE8
 17112                           fsr1h	equ	0xFE2
 17113                           fsr1l	equ	0xFE1
 17114                           bsr	equ	0xFE0
 17115                           indf2	equ	0xFDF
 17116                           postinc2	equ	0xFDE
 17117                           postdec2	equ	0xFDD
 17118                           fsr2h	equ	0xFDA
 17119                           fsr2l	equ	0xFD9
 17120                           status	equ	0xFD8
 17121                           
 17122 ;; *************** function i1_ReadADC *****************
 17123 ;; Defined at:
 17124 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;		None
 17127 ;; Auto vars:     Size  Location     Type
 17128 ;;		None
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  2    0[COMRAM] int 
 17131 ;; Registers used:
 17132 ;;		wreg, status,2
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17141 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17142 ;;Total ram usage:        4 bytes
 17143 ;; Hardware stack levels used:    1
 17144 ;; Hardware stack levels required when called:    3
 17145 ;; This function calls:
 17146 ;;		Nothing
 17147 ;; This function is called by:
 17148 ;;		_isrLP
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           	psect	text125
 17153  00474E                     __ptext125:
 17154                           	opt stack 0
 17155  00474E                     i1_ReadADC:
 17156                           	opt stack 20
 17157                           
 17158                           ;incstack = 0
 17159  00474E  50C4               	movf	4036,w,c	;volatile
 17160  004750  6E2D               	movwf	??i1_ReadADC& (0+255),c
 17161  004752  50C3               	movf	4035,w,c	;volatile
 17162  004754  6E2B               	movwf	?i1_ReadADC,c
 17163  004756  C02D  F02C         	movff	??i1_ReadADC,?i1_ReadADC+1
 17164  00475A  D000               	goto	i1l1046
 17165  00475C                     i1l1046:
 17166  00475C  0012               	return		;funcret
 17167  00475E                     __end_ofi1_ReadADC:
 17168                           	opt stack 0
 17169                           pclatu	equ	0xFFB
 17170                           pclath	equ	0xFFA
 17171                           tblptru	equ	0xFF8
 17172                           tblptrh	equ	0xFF7
 17173                           tblptrl	equ	0xFF6
 17174                           tablat	equ	0xFF5
 17175                           prodh	equ	0xFF4
 17176                           prodl	equ	0xFF3
 17177                           intcon	equ	0xFF2
 17178                           intcon2	equ	0xFF1
 17179                           intcon3	equ	0xFF0
 17180                           postinc0	equ	0xFEE
 17181                           fsr0h	equ	0xFEA
 17182                           fsr0l	equ	0xFE9
 17183                           wreg	equ	0xFE8
 17184                           fsr1h	equ	0xFE2
 17185                           fsr1l	equ	0xFE1
 17186                           bsr	equ	0xFE0
 17187                           indf2	equ	0xFDF
 17188                           postinc2	equ	0xFDE
 17189                           postdec2	equ	0xFDD
 17190                           fsr2h	equ	0xFDA
 17191                           fsr2l	equ	0xFD9
 17192                           status	equ	0xFD8
 17193                           
 17194 ;; *************** function i1_ConvertADC *****************
 17195 ;; Defined at:
 17196 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 17197 ;; Parameters:    Size  Location     Type
 17198 ;;		None
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;		None
 17201 ;; Return value:  Size  Location     Type
 17202 ;;		None               void
 17203 ;; Registers used:
 17204 ;;		None
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/0
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17214 ;;Total ram usage:        0 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:    3
 17217 ;; This function calls:
 17218 ;;		Nothing
 17219 ;; This function is called by:
 17220 ;;		_isrLP
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           	psect	text126
 17225  004828                     __ptext126:
 17226                           	opt stack 0
 17227  004828                     i1_ConvertADC:
 17228                           	opt stack 20
 17229                           
 17230                           ;incstack = 0
 17231  004828  82C2               	bsf	4034,1,c	;volatile
 17232  00482A  0012               	return		;funcret
 17233  00482C                     __end_ofi1_ConvertADC:
 17234                           	opt stack 0
 17235                           pclatu	equ	0xFFB
 17236                           pclath	equ	0xFFA
 17237                           tblptru	equ	0xFF8
 17238                           tblptrh	equ	0xFF7
 17239                           tblptrl	equ	0xFF6
 17240                           tablat	equ	0xFF5
 17241                           prodh	equ	0xFF4
 17242                           prodl	equ	0xFF3
 17243                           intcon	equ	0xFF2
 17244                           intcon2	equ	0xFF1
 17245                           intcon3	equ	0xFF0
 17246                           postinc0	equ	0xFEE
 17247                           fsr0h	equ	0xFEA
 17248                           fsr0l	equ	0xFE9
 17249                           wreg	equ	0xFE8
 17250                           fsr1h	equ	0xFE2
 17251                           fsr1l	equ	0xFE1
 17252                           bsr	equ	0xFE0
 17253                           indf2	equ	0xFDF
 17254                           postinc2	equ	0xFDE
 17255                           postdec2	equ	0xFDD
 17256                           fsr2h	equ	0xFDA
 17257                           fsr2l	equ	0xFD9
 17258                           status	equ	0xFD8
 17259                           
 17260 ;; *************** function _WirelessTx_ISR *****************
 17261 ;; Defined at:
 17262 ;;		line 61 in file "Wireless.c"
 17263 ;; Parameters:    Size  Location     Type
 17264 ;;		None
 17265 ;; Auto vars:     Size  Location     Type
 17266 ;;		None
 17267 ;; Return value:  Size  Location     Type
 17268 ;;		None               void
 17269 ;; Registers used:
 17270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17271 ;; Tracked objects:
 17272 ;;		On entry : 0/0
 17273 ;;		On exit  : 0/0
 17274 ;;		Unchanged: 0/0
 17275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17280 ;;Total ram usage:        0 bytes
 17281 ;; Hardware stack levels used:    1
 17282 ;; Hardware stack levels required when called:    5
 17283 ;; This function calls:
 17284 ;;		_GetCharTxBuf
 17285 ;;		_Write1USART
 17286 ;; This function is called by:
 17287 ;;		_isrLP
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           	psect	text127
 17292  0044DC                     __ptext127:
 17293                           	opt stack 0
 17294  0044DC                     _WirelessTx_ISR:
 17295                           	opt stack 18
 17296                           
 17297                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 17298                           
 17299                           ;incstack = 0
 17300  0044DC  ECA9  F020         	call	_GetCharTxBuf	;wreg free
 17301  0044E0  6E17               	movwf	_TxCharacter,c	;volatile
 17302                           
 17303                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 17304  0044E2  0E0A               	movlw	10
 17305  0044E4  1817               	xorwf	_TxCharacter,w,c	;volatile
 17306  0044E6  A4D8               	btfss	status,2,c
 17307  0044E8  D007               	goto	i1l5768
 17308                           
 17309                           ;Wireless.c: 64: Write1USART(TxCharacter);
 17310  0044EA  5017               	movf	_TxCharacter,w,c	;volatile
 17311  0044EC  EC20  F023         	call	_Write1USART
 17312                           
 17313                           ;Wireless.c: 65: Tx_complete = 1;
 17314  0044F0  0E01               	movlw	1
 17315  0044F2  6E18               	movwf	_Tx_complete,c
 17316                           
 17317                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 17318  0044F4  989D               	bcf	3997,4,c	;volatile
 17319                           
 17320                           ;Wireless.c: 67: }
 17321  0044F6  D004               	goto	i1l773
 17322  0044F8                     i1l5768:
 17323                           
 17324                           ;Wireless.c: 68: else {
 17325                           ;Wireless.c: 69: Write1USART(TxCharacter);
 17326  0044F8  5017               	movf	_TxCharacter,w,c	;volatile
 17327  0044FA  EC20  F023         	call	_Write1USART
 17328  0044FE  D000               	goto	i1l773
 17329  004500                     i1l773:
 17330  004500  0012               	return		;funcret
 17331  004502                     __end_of_WirelessTx_ISR:
 17332                           	opt stack 0
 17333                           pclatu	equ	0xFFB
 17334                           pclath	equ	0xFFA
 17335                           tblptru	equ	0xFF8
 17336                           tblptrh	equ	0xFF7
 17337                           tblptrl	equ	0xFF6
 17338                           tablat	equ	0xFF5
 17339                           prodh	equ	0xFF4
 17340                           prodl	equ	0xFF3
 17341                           intcon	equ	0xFF2
 17342                           intcon2	equ	0xFF1
 17343                           intcon3	equ	0xFF0
 17344                           postinc0	equ	0xFEE
 17345                           fsr0h	equ	0xFEA
 17346                           fsr0l	equ	0xFE9
 17347                           wreg	equ	0xFE8
 17348                           fsr1h	equ	0xFE2
 17349                           fsr1l	equ	0xFE1
 17350                           bsr	equ	0xFE0
 17351                           indf2	equ	0xFDF
 17352                           postinc2	equ	0xFDE
 17353                           postdec2	equ	0xFDD
 17354                           fsr2h	equ	0xFDA
 17355                           fsr2l	equ	0xFD9
 17356                           status	equ	0xFD8
 17357                           
 17358 ;; *************** function _Write1USART *****************
 17359 ;; Defined at:
 17360 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 17361 ;; Parameters:    Size  Location     Type
 17362 ;;  data            1    wreg     unsigned char 
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;  data            1    0[COMRAM] unsigned char 
 17365 ;; Return value:  Size  Location     Type
 17366 ;;		None               void
 17367 ;; Registers used:
 17368 ;;		wreg
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17378 ;;Total ram usage:        1 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; Hardware stack levels required when called:    3
 17381 ;; This function calls:
 17382 ;;		Nothing
 17383 ;; This function is called by:
 17384 ;;		_WirelessTx_ISR
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           	psect	text128
 17389  004640                     __ptext128:
 17390                           	opt stack 0
 17391  004640                     _Write1USART:
 17392                           	opt stack 19
 17393                           
 17394                           ;incstack = 0
 17395                           ;Write1USART@data stored from wreg
 17396  004640  6E2B               	movwf	Write1USART@data,c
 17397  004642  ACAC               	btfss	4012,6,c	;volatile
 17398  004644  D005               	goto	i1l5502
 17399  004646  90AC               	bcf	4012,0,c	;volatile
 17400  004648  A219               	btfss	_USART1_Status,1,c
 17401  00464A  D002               	goto	i1l5502
 17402  00464C  80AC               	bsf	4012,0,c	;volatile
 17403  00464E  D000               	goto	i1l5502
 17404  004650                     i1l5502:
 17405  004650  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 17406  004654  0012               	return		;funcret
 17407  004656                     __end_of_Write1USART:
 17408                           	opt stack 0
 17409                           pclatu	equ	0xFFB
 17410                           pclath	equ	0xFFA
 17411                           tblptru	equ	0xFF8
 17412                           tblptrh	equ	0xFF7
 17413                           tblptrl	equ	0xFF6
 17414                           tablat	equ	0xFF5
 17415                           prodh	equ	0xFF4
 17416                           prodl	equ	0xFF3
 17417                           intcon	equ	0xFF2
 17418                           intcon2	equ	0xFF1
 17419                           intcon3	equ	0xFF0
 17420                           postinc0	equ	0xFEE
 17421                           fsr0h	equ	0xFEA
 17422                           fsr0l	equ	0xFE9
 17423                           wreg	equ	0xFE8
 17424                           fsr1h	equ	0xFE2
 17425                           fsr1l	equ	0xFE1
 17426                           bsr	equ	0xFE0
 17427                           indf2	equ	0xFDF
 17428                           postinc2	equ	0xFDE
 17429                           postdec2	equ	0xFDD
 17430                           fsr2h	equ	0xFDA
 17431                           fsr2l	equ	0xFD9
 17432                           status	equ	0xFD8
 17433                           
 17434 ;; *************** function _GetCharTxBuf *****************
 17435 ;; Defined at:
 17436 ;;		line 15 in file "Wireless.c"
 17437 ;; Parameters:    Size  Location     Type
 17438 ;;		None
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;  ch              1    7[COMRAM] unsigned char 
 17441 ;; Return value:  Size  Location     Type
 17442 ;;                  1    wreg      unsigned char 
 17443 ;; Registers used:
 17444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17445 ;; Tracked objects:
 17446 ;;		On entry : 0/0
 17447 ;;		On exit  : 0/0
 17448 ;;		Unchanged: 0/0
 17449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17454 ;;Total ram usage:        2 bytes
 17455 ;; Hardware stack levels used:    1
 17456 ;; Hardware stack levels required when called:    4
 17457 ;; This function calls:
 17458 ;;		i1___awmod
 17459 ;; This function is called by:
 17460 ;;		_WirelessTx_ISR
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text129
 17465  004152                     __ptext129:
 17466                           	opt stack 0
 17467  004152                     _GetCharTxBuf:
 17468                           	opt stack 18
 17469                           
 17470                           ;Wireless.c: 16: unsigned char ch;
 17471                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 17472                           
 17473                           ;incstack = 0
 17474  004152  501C               	movf	_get_Tx_index,w,c
 17475  004154  0D01               	mullw	1
 17476  004156  0E19               	movlw	low _Tx_buffer
 17477  004158  24F3               	addwf	prodl,w,c
 17478  00415A  6ED9               	movwf	fsr2l,c
 17479  00415C  0E01               	movlw	high _Tx_buffer
 17480  00415E  20F4               	addwfc	prodh,w,c
 17481  004160  6EDA               	movwf	fsr2h,c
 17482  004162  50DF               	movf	indf2,w,c
 17483  004164  6E32               	movwf	GetCharTxBuf@ch,c
 17484                           
 17485                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 17486  004166  C01C  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 17487  00416A  0E01               	movlw	1
 17488  00416C  2631               	addwf	??_GetCharTxBuf,f,c
 17489  00416E  5031               	movf	??_GetCharTxBuf,w,c
 17490  004170  6E2B               	movwf	i1___awmod@dividend,c
 17491  004172  6A2C               	clrf	i1___awmod@dividend+1,c
 17492  004174  0E00               	movlw	0
 17493  004176  6E2E               	movwf	i1___awmod@divisor+1,c
 17494  004178  0E19               	movlw	25
 17495  00417A  6E2D               	movwf	i1___awmod@divisor,c
 17496  00417C  ECC9  F01A         	call	i1___awmod	;wreg free
 17497  004180  502B               	movf	?i1___awmod,w,c
 17498  004182  6E1C               	movwf	_get_Tx_index,c
 17499                           
 17500                           ;Wireless.c: 21: return(ch);
 17501  004184  5032               	movf	GetCharTxBuf@ch,w,c
 17502  004186  D000               	goto	i1l750
 17503  004188                     i1l750:
 17504  004188  0012               	return		;funcret
 17505  00418A                     __end_of_GetCharTxBuf:
 17506                           	opt stack 0
 17507                           pclatu	equ	0xFFB
 17508                           pclath	equ	0xFFA
 17509                           tblptru	equ	0xFF8
 17510                           tblptrh	equ	0xFF7
 17511                           tblptrl	equ	0xFF6
 17512                           tablat	equ	0xFF5
 17513                           prodh	equ	0xFF4
 17514                           prodl	equ	0xFF3
 17515                           intcon	equ	0xFF2
 17516                           intcon2	equ	0xFF1
 17517                           intcon3	equ	0xFF0
 17518                           postinc0	equ	0xFEE
 17519                           fsr0h	equ	0xFEA
 17520                           fsr0l	equ	0xFE9
 17521                           wreg	equ	0xFE8
 17522                           fsr1h	equ	0xFE2
 17523                           fsr1l	equ	0xFE1
 17524                           bsr	equ	0xFE0
 17525                           indf2	equ	0xFDF
 17526                           postinc2	equ	0xFDE
 17527                           postdec2	equ	0xFDD
 17528                           fsr2h	equ	0xFDA
 17529                           fsr2l	equ	0xFD9
 17530                           status	equ	0xFD8
 17531                           
 17532 ;; *************** function i1___awmod *****************
 17533 ;; Defined at:
 17534 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 17535 ;; Parameters:    Size  Location     Type
 17536 ;;  dividend        2    0[COMRAM] int 
 17537 ;;  divisor         2    2[COMRAM] int 
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;  __awmod         1    5[COMRAM] unsigned char 
 17540 ;;  __awmod         1    4[COMRAM] unsigned char 
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  2    0[COMRAM] int 
 17543 ;; Registers used:
 17544 ;;		wreg, status,2, status,0
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17554 ;;Total ram usage:        6 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:    3
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_GetCharTxBuf
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text130
 17565  003592                     __ptext130:
 17566                           	opt stack 0
 17567  003592                     i1___awmod:
 17568                           	opt stack 18
 17569                           
 17570                           ;incstack = 0
 17571  003592  0E00               	movlw	0
 17572  003594  6E30               	movwf	i1___awmod@sign,c
 17573  003596  AE2C               	btfss	i1___awmod@dividend+1,7,c
 17574  003598  D007               	goto	i1l5154
 17575  00359A  6C2B               	negf	i1___awmod@dividend,c
 17576  00359C  1E2C               	comf	i1___awmod@dividend+1,f,c
 17577  00359E  B0D8               	btfsc	status,0,c
 17578  0035A0  2A2C               	incf	i1___awmod@dividend+1,f,c
 17579  0035A2  0E01               	movlw	1
 17580  0035A4  6E30               	movwf	i1___awmod@sign,c
 17581  0035A6  D000               	goto	i1l5154
 17582  0035A8                     i1l5154:
 17583  0035A8  AE2E               	btfss	i1___awmod@divisor+1,7,c
 17584  0035AA  D005               	goto	i1l5158
 17585  0035AC  6C2D               	negf	i1___awmod@divisor,c
 17586  0035AE  1E2E               	comf	i1___awmod@divisor+1,f,c
 17587  0035B0  B0D8               	btfsc	status,0,c
 17588  0035B2  2A2E               	incf	i1___awmod@divisor+1,f,c
 17589  0035B4  D000               	goto	i1l5158
 17590  0035B6                     i1l5158:
 17591  0035B6  502D               	movf	i1___awmod@divisor,w,c
 17592  0035B8  102E               	iorwf	i1___awmod@divisor+1,w,c
 17593  0035BA  B4D8               	btfsc	status,2,c
 17594  0035BC  D01D               	goto	i1l5174
 17595  0035BE  0E01               	movlw	1
 17596  0035C0  6E2F               	movwf	i1___awmod@counter,c
 17597  0035C2  D005               	goto	i1l5164
 17598  0035C4                     i1l5162:
 17599  0035C4  90D8               	bcf	status,0,c
 17600  0035C6  362D               	rlcf	i1___awmod@divisor,f,c
 17601  0035C8  362E               	rlcf	i1___awmod@divisor+1,f,c
 17602  0035CA  2A2F               	incf	i1___awmod@counter,f,c
 17603  0035CC  D000               	goto	i1l5164
 17604  0035CE                     i1l5164:
 17605  0035CE  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 17606  0035D0  D002               	goto	i1l5166
 17607  0035D2  D7F8               	goto	i1l5162
 17608  0035D4  D000               	goto	i1l5166
 17609  0035D6                     i1l5166:
 17610  0035D6  502D               	movf	i1___awmod@divisor,w,c
 17611  0035D8  5C2B               	subwf	i1___awmod@dividend,w,c
 17612  0035DA  502E               	movf	i1___awmod@divisor+1,w,c
 17613  0035DC  582C               	subwfb	i1___awmod@dividend+1,w,c
 17614  0035DE  A0D8               	btfss	status,0,c
 17615  0035E0  D005               	goto	i1l5170
 17616  0035E2  502D               	movf	i1___awmod@divisor,w,c
 17617  0035E4  5E2B               	subwf	i1___awmod@dividend,f,c
 17618  0035E6  502E               	movf	i1___awmod@divisor+1,w,c
 17619  0035E8  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 17620  0035EA  D000               	goto	i1l5170
 17621  0035EC                     i1l5170:
 17622  0035EC  90D8               	bcf	status,0,c
 17623  0035EE  322E               	rrcf	i1___awmod@divisor+1,f,c
 17624  0035F0  322D               	rrcf	i1___awmod@divisor,f,c
 17625  0035F2  2E2F               	decfsz	i1___awmod@counter,f,c
 17626  0035F4  D7F0               	goto	i1l5166
 17627  0035F6  D000               	goto	i1l5174
 17628  0035F8                     i1l5174:
 17629  0035F8  5030               	movf	i1___awmod@sign,w,c
 17630  0035FA  B4D8               	btfsc	status,2,c
 17631  0035FC  D005               	goto	i1l5178
 17632  0035FE  6C2B               	negf	i1___awmod@dividend,c
 17633  003600  1E2C               	comf	i1___awmod@dividend+1,f,c
 17634  003602  B0D8               	btfsc	status,0,c
 17635  003604  2A2C               	incf	i1___awmod@dividend+1,f,c
 17636  003606  D000               	goto	i1l5178
 17637  003608                     i1l5178:
 17638  003608  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 17639  00360C  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 17640  003610  D000               	goto	i1l1437
 17641  003612                     i1l1437:
 17642  003612  0012               	return		;funcret
 17643  003614                     __end_ofi1___awmod:
 17644                           	opt stack 0
 17645                           pclatu	equ	0xFFB
 17646                           pclath	equ	0xFFA
 17647                           tblptru	equ	0xFF8
 17648                           tblptrh	equ	0xFF7
 17649                           tblptrl	equ	0xFF6
 17650                           tablat	equ	0xFF5
 17651                           prodh	equ	0xFF4
 17652                           prodl	equ	0xFF3
 17653                           intcon	equ	0xFF2
 17654                           intcon2	equ	0xFF1
 17655                           intcon3	equ	0xFF0
 17656                           postinc0	equ	0xFEE
 17657                           fsr0h	equ	0xFEA
 17658                           fsr0l	equ	0xFE9
 17659                           wreg	equ	0xFE8
 17660                           fsr1h	equ	0xFE2
 17661                           fsr1l	equ	0xFE1
 17662                           bsr	equ	0xFE0
 17663                           indf2	equ	0xFDF
 17664                           postinc2	equ	0xFDE
 17665                           postdec2	equ	0xFDD
 17666                           fsr2h	equ	0xFDA
 17667                           fsr2l	equ	0xFD9
 17668                           status	equ	0xFD8
 17669                           
 17670 ;; *************** function _isrHP *****************
 17671 ;; Defined at:
 17672 ;;		line 722 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;		None
 17675 ;; Auto vars:     Size  Location     Type
 17676 ;;		None
 17677 ;; Return value:  Size  Location     Type
 17678 ;;		None               void
 17679 ;; Registers used:
 17680 ;;		wreg, status,2, status,0, cstack
 17681 ;; Tracked objects:
 17682 ;;		On entry : 0/0
 17683 ;;		On exit  : 0/0
 17684 ;;		Unchanged: 0/0
 17685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17688 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17689 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17690 ;;Total ram usage:       14 bytes
 17691 ;; Hardware stack levels used:    1
 17692 ;; Hardware stack levels required when called:    2
 17693 ;; This function calls:
 17694 ;;		_MillisecondTimerISR
 17695 ;;		_UltrasoundISR
 17696 ;; This function is called by:
 17697 ;;		Interrupt level 2
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701                           	psect	intcode
 17702  000008                     __pintcode:
 17703                           	opt stack 0
 17704  000008                     _isrHP:
 17705                           	opt stack 18
 17706                           
 17707                           ;incstack = 0
 17708  000008  CFFA F062          	movff	pclath,??_isrHP
 17709  00000C  CFFB F063          	movff	pclatu,??_isrHP+1
 17710  000010  CFE9 F064          	movff	fsr0l,??_isrHP+2
 17711  000014  ED4A  F01B         	call	int_func,f	;refresh shadow registers
 17712                           pclatu	equ	0xFFB
 17713                           pclath	equ	0xFFA
 17714                           tblptru	equ	0xFF8
 17715                           tblptrh	equ	0xFF7
 17716                           tblptrl	equ	0xFF6
 17717                           tablat	equ	0xFF5
 17718                           prodh	equ	0xFF4
 17719                           prodl	equ	0xFF3
 17720                           intcon	equ	0xFF2
 17721                           intcon2	equ	0xFF1
 17722                           intcon3	equ	0xFF0
 17723                           postinc0	equ	0xFEE
 17724                           fsr0h	equ	0xFEA
 17725                           fsr0l	equ	0xFE9
 17726                           wreg	equ	0xFE8
 17727                           fsr1h	equ	0xFE2
 17728                           fsr1l	equ	0xFE1
 17729                           bsr	equ	0xFE0
 17730                           indf2	equ	0xFDF
 17731                           postinc2	equ	0xFDE
 17732                           postdec2	equ	0xFDD
 17733                           fsr2h	equ	0xFDA
 17734                           fsr2l	equ	0xFD9
 17735                           status	equ	0xFD8
 17736                           
 17737                           	psect	intcode_body
 17738  003694                     __pintcode_body:
 17739                           	opt stack 18
 17740  003694                     int_func:
 17741                           	opt stack 18
 17742  003694  0006               	pop		; remove dummy address from shadow register refresh
 17743  003696  CFEA F065          	movff	fsr0h,??_isrHP+3
 17744  00369A  CFE1 F066          	movff	fsr1l,??_isrHP+4
 17745  00369E  CFE2 F067          	movff	fsr1h,??_isrHP+5
 17746  0036A2  CFD9 F068          	movff	fsr2l,??_isrHP+6
 17747  0036A6  CFDA F069          	movff	fsr2h,??_isrHP+7
 17748  0036AA  CFF3 F06A          	movff	prodl,??_isrHP+8
 17749  0036AE  CFF4 F06B          	movff	prodh,??_isrHP+9
 17750  0036B2  CFF6 F06C          	movff	tblptrl,??_isrHP+10
 17751  0036B6  CFF7 F06D          	movff	tblptrh,??_isrHP+11
 17752  0036BA  CFF8 F06E          	movff	tblptru,??_isrHP+12
 17753  0036BE  CFF5 F06F          	movff	tablat,??_isrHP+13
 17754                           
 17755                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 725: if (INTCONbits.TMR0IF == 1) {
 17756  0036C2  A4F2               	btfss	intcon,2,c	;volatile
 17757  0036C4  D004               	goto	i2l402
 17758                           
 17759                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 726: INTCONbits.TMR0IF = 0;
 17760  0036C6  94F2               	bcf	intcon,2,c	;volatile
 17761                           
 17762                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 728: MillisecondTimerISR();
 17763  0036C8  ECDB  F022         	call	_MillisecondTimerISR	;wreg free
 17764                           
 17765                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 732: }
 17766  0036CC  D006               	goto	i2l405
 17767  0036CE                     i2l402:
 17768                           
 17769                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 735: else if (INTCON3bits.INT3IF == 1) {
 17770  0036CE  A4F0               	btfss	intcon3,2,c	;volatile
 17771  0036D0  D004               	goto	i2l405
 17772                           
 17773                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 736: INTCON3bits.INT3IF = 0;
 17774  0036D2  94F0               	bcf	intcon3,2,c	;volatile
 17775                           
 17776                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 738: UltrasoundISR();
 17777  0036D4  EC2E  F021         	call	_UltrasoundISR	;wreg free
 17778  0036D8  D000               	goto	i2l405
 17779  0036DA                     i2l405:
 17780  0036DA  C06F  FFF5         	movff	??_isrHP+13,tablat
 17781  0036DE  C06E  FFF8         	movff	??_isrHP+12,tblptru
 17782  0036E2  C06D  FFF7         	movff	??_isrHP+11,tblptrh
 17783  0036E6  C06C  FFF6         	movff	??_isrHP+10,tblptrl
 17784  0036EA  C06B  FFF4         	movff	??_isrHP+9,prodh
 17785  0036EE  C06A  FFF3         	movff	??_isrHP+8,prodl
 17786  0036F2  C069  FFDA         	movff	??_isrHP+7,fsr2h
 17787  0036F6  C068  FFD9         	movff	??_isrHP+6,fsr2l
 17788  0036FA  C067  FFE2         	movff	??_isrHP+5,fsr1h
 17789  0036FE  C066  FFE1         	movff	??_isrHP+4,fsr1l
 17790  003702  C065  FFEA         	movff	??_isrHP+3,fsr0h
 17791  003706  C064  FFE9         	movff	??_isrHP+2,fsr0l
 17792  00370A  C063  FFFB         	movff	??_isrHP+1,pclatu
 17793  00370E  C062  FFFA         	movff	??_isrHP,pclath
 17794  003712  0011               	retfie		f
 17795  003714                     __end_of_isrHP:
 17796                           	opt stack 0
 17797                           pclatu	equ	0xFFB
 17798                           pclath	equ	0xFFA
 17799                           tblptru	equ	0xFF8
 17800                           tblptrh	equ	0xFF7
 17801                           tblptrl	equ	0xFF6
 17802                           tablat	equ	0xFF5
 17803                           prodh	equ	0xFF4
 17804                           prodl	equ	0xFF3
 17805                           intcon	equ	0xFF2
 17806                           intcon2	equ	0xFF1
 17807                           intcon3	equ	0xFF0
 17808                           postinc0	equ	0xFEE
 17809                           fsr0h	equ	0xFEA
 17810                           fsr0l	equ	0xFE9
 17811                           wreg	equ	0xFE8
 17812                           fsr1h	equ	0xFE2
 17813                           fsr1l	equ	0xFE1
 17814                           bsr	equ	0xFE0
 17815                           indf2	equ	0xFDF
 17816                           postinc2	equ	0xFDE
 17817                           postdec2	equ	0xFDD
 17818                           fsr2h	equ	0xFDA
 17819                           fsr2l	equ	0xFD9
 17820                           status	equ	0xFD8
 17821                           
 17822 ;; *************** function _UltrasoundISR *****************
 17823 ;; Defined at:
 17824 ;;		line 17 in file "Ultrasound.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;		None
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;		None
 17829 ;; Return value:  Size  Location     Type
 17830 ;;		None               void
 17831 ;; Registers used:
 17832 ;;		wreg, status,2, cstack
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/0
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17842 ;;Total ram usage:        0 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; Hardware stack levels required when called:    1
 17845 ;; This function calls:
 17846 ;;		_ReadTimer1
 17847 ;;		i2_WriteTimer1
 17848 ;; This function is called by:
 17849 ;;		_isrHP
 17850 ;; This function uses a non-reentrant model
 17851 ;;
 17852                           
 17853                           	psect	text132
 17854  00425C                     __ptext132:
 17855                           	opt stack 0
 17856  00425C                     _UltrasoundISR:
 17857                           	opt stack 18
 17858                           
 17859                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 17860                           
 17861                           ;incstack = 0
 17862  00425C  9AF0               	bcf	intcon3,5,c	;volatile
 17863                           
 17864                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 17865  00425E  B0CD               	btfsc	4045,0,c	;volatile
 17866  004260  D009               	goto	i2l506
 17867                           
 17868                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 17869  004262  80CD               	bsf	4045,0,c	;volatile
 17870                           
 17871                           ;Ultrasound.c: 35: WriteTimer1(0);
 17872  004264  0E00               	movlw	0
 17873  004266  6E45               	movwf	i2WriteTimer1@timer1+1,c
 17874  004268  0E00               	movlw	0
 17875  00426A  6E44               	movwf	i2WriteTimer1@timer1,c
 17876  00426C  EC64  F023         	call	i2_WriteTimer1	;wreg free
 17877                           
 17878                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 17879  004270  96F1               	bcf	intcon2,3,c	;volatile
 17880                           
 17881                           ;Ultrasound.c: 37: }
 17882  004272  D00A               	goto	i2l7898
 17883  004274                     i2l506:
 17884                           
 17885                           ;Ultrasound.c: 38: else {
 17886                           ;Ultrasound.c: 39: T1CONbits.TMR1ON = 0;
 17887  004274  90CD               	bcf	4045,0,c	;volatile
 17888                           
 17889                           ;Ultrasound.c: 40: echo_time = ReadTimer1();
 17890  004276  EC6D  F023         	call	_ReadTimer1	;wreg free
 17891  00427A  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 17892  00427E  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 17893                           
 17894                           ;Ultrasound.c: 41: echo_acq_done = 1;
 17895  004282  0E01               	movlw	1
 17896  004284  6E1A               	movwf	_echo_acq_done,c
 17897  004286  D000               	goto	i2l7898
 17898  004288                     i2l7898:
 17899                           
 17900                           ;Ultrasound.c: 42: }
 17901                           ;Ultrasound.c: 43: INTCON3bits.INT3IF = 0;
 17902  004288  94F0               	bcf	intcon3,2,c	;volatile
 17903                           
 17904                           ;Ultrasound.c: 44: INTCON3bits.INT3IE = 1;
 17905  00428A  8AF0               	bsf	intcon3,5,c	;volatile
 17906  00428C  0012               	return		;funcret
 17907  00428E                     __end_of_UltrasoundISR:
 17908                           	opt stack 0
 17909                           pclatu	equ	0xFFB
 17910                           pclath	equ	0xFFA
 17911                           tblptru	equ	0xFF8
 17912                           tblptrh	equ	0xFF7
 17913                           tblptrl	equ	0xFF6
 17914                           tablat	equ	0xFF5
 17915                           prodh	equ	0xFF4
 17916                           prodl	equ	0xFF3
 17917                           intcon	equ	0xFF2
 17918                           intcon2	equ	0xFF1
 17919                           intcon3	equ	0xFF0
 17920                           postinc0	equ	0xFEE
 17921                           fsr0h	equ	0xFEA
 17922                           fsr0l	equ	0xFE9
 17923                           wreg	equ	0xFE8
 17924                           fsr1h	equ	0xFE2
 17925                           fsr1l	equ	0xFE1
 17926                           bsr	equ	0xFE0
 17927                           indf2	equ	0xFDF
 17928                           postinc2	equ	0xFDE
 17929                           postdec2	equ	0xFDD
 17930                           fsr2h	equ	0xFDA
 17931                           fsr2l	equ	0xFD9
 17932                           status	equ	0xFD8
 17933                           
 17934 ;; *************** function i2_WriteTimer1 *****************
 17935 ;; Defined at:
 17936 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 17937 ;; Parameters:    Size  Location     Type
 17938 ;;  timer1          2   25[COMRAM] unsigned int 
 17939 ;; Auto vars:     Size  Location     Type
 17940 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 17941 ;; Return value:  Size  Location     Type
 17942 ;;		None               void
 17943 ;; Registers used:
 17944 ;;		None
 17945 ;; Tracked objects:
 17946 ;;		On entry : 0/0
 17947 ;;		On exit  : 0/0
 17948 ;;		Unchanged: 0/0
 17949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17953 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17954 ;;Total ram usage:        4 bytes
 17955 ;; Hardware stack levels used:    1
 17956 ;; This function calls:
 17957 ;;		Nothing
 17958 ;; This function is called by:
 17959 ;;		_UltrasoundISR
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text133
 17964  0046C8                     __ptext133:
 17965                           	opt stack 0
 17966  0046C8                     i2_WriteTimer1:
 17967                           	opt stack 18
 17968                           
 17969                           ;incstack = 0
 17970  0046C8  C044  F060         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 17971  0046CC  C045  F061         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 17972  0046D0  C061  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 17973  0046D4  C060  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 17974  0046D8  0012               	return		;funcret
 17975  0046DA                     __end_ofi2_WriteTimer1:
 17976                           	opt stack 0
 17977                           pclatu	equ	0xFFB
 17978                           pclath	equ	0xFFA
 17979                           tblptru	equ	0xFF8
 17980                           tblptrh	equ	0xFF7
 17981                           tblptrl	equ	0xFF6
 17982                           tablat	equ	0xFF5
 17983                           prodh	equ	0xFF4
 17984                           prodl	equ	0xFF3
 17985                           intcon	equ	0xFF2
 17986                           intcon2	equ	0xFF1
 17987                           intcon3	equ	0xFF0
 17988                           postinc0	equ	0xFEE
 17989                           fsr0h	equ	0xFEA
 17990                           fsr0l	equ	0xFE9
 17991                           wreg	equ	0xFE8
 17992                           fsr1h	equ	0xFE2
 17993                           fsr1l	equ	0xFE1
 17994                           bsr	equ	0xFE0
 17995                           indf2	equ	0xFDF
 17996                           postinc2	equ	0xFDE
 17997                           postdec2	equ	0xFDD
 17998                           fsr2h	equ	0xFDA
 17999                           fsr2l	equ	0xFD9
 18000                           status	equ	0xFD8
 18001                           
 18002 ;; *************** function _ReadTimer1 *****************
 18003 ;; Defined at:
 18004 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;		None
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;  timer           2    0[BANK0 ] struct Timers
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  2   25[COMRAM] unsigned int 
 18011 ;; Registers used:
 18012 ;;		None
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/0
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18021 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18022 ;;Total ram usage:        4 bytes
 18023 ;; Hardware stack levels used:    1
 18024 ;; This function calls:
 18025 ;;		Nothing
 18026 ;; This function is called by:
 18027 ;;		_UltrasoundISR
 18028 ;; This function uses a non-reentrant model
 18029 ;;
 18030                           
 18031                           	psect	text134
 18032  0046DA                     __ptext134:
 18033                           	opt stack 0
 18034  0046DA                     _ReadTimer1:
 18035                           	opt stack 18
 18036                           
 18037                           ;incstack = 0
 18038  0046DA  CFCE F060          	movff	4046,ReadTimer1@timer	;volatile
 18039  0046DE  CFCF F061          	movff	4047,ReadTimer1@timer+1	;volatile
 18040  0046E2  C060  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 18041  0046E6  C061  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 18042  0046EA  0012               	return		;funcret
 18043  0046EC                     __end_of_ReadTimer1:
 18044                           	opt stack 0
 18045                           pclatu	equ	0xFFB
 18046                           pclath	equ	0xFFA
 18047                           tblptru	equ	0xFF8
 18048                           tblptrh	equ	0xFF7
 18049                           tblptrl	equ	0xFF6
 18050                           tablat	equ	0xFF5
 18051                           prodh	equ	0xFF4
 18052                           prodl	equ	0xFF3
 18053                           intcon	equ	0xFF2
 18054                           intcon2	equ	0xFF1
 18055                           intcon3	equ	0xFF0
 18056                           postinc0	equ	0xFEE
 18057                           fsr0h	equ	0xFEA
 18058                           fsr0l	equ	0xFE9
 18059                           wreg	equ	0xFE8
 18060                           fsr1h	equ	0xFE2
 18061                           fsr1l	equ	0xFE1
 18062                           bsr	equ	0xFE0
 18063                           indf2	equ	0xFDF
 18064                           postinc2	equ	0xFDE
 18065                           postdec2	equ	0xFDD
 18066                           fsr2h	equ	0xFDA
 18067                           fsr2l	equ	0xFD9
 18068                           status	equ	0xFD8
 18069                           
 18070 ;; *************** function _MillisecondTimerISR *****************
 18071 ;; Defined at:
 18072 ;;		line 44 in file "MillisecondTimer.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;		None
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;		None
 18077 ;; Return value:  Size  Location     Type
 18078 ;;		None               void
 18079 ;; Registers used:
 18080 ;;		wreg, status,2, status,0, cstack
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 0/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18090 ;;Total ram usage:        0 bytes
 18091 ;; Hardware stack levels used:    1
 18092 ;; Hardware stack levels required when called:    1
 18093 ;; This function calls:
 18094 ;;		i2_WriteTimer0
 18095 ;; This function is called by:
 18096 ;;		_isrHP
 18097 ;; This function uses a non-reentrant model
 18098 ;;
 18099                           
 18100                           	psect	text135
 18101  0045B6                     __ptext135:
 18102                           	opt stack 0
 18103  0045B6                     _MillisecondTimerISR:
 18104                           	opt stack 18
 18105                           
 18106                           ;MillisecondTimer.c: 46: WriteTimer0(63036);
 18107                           
 18108                           ;incstack = 0
 18109  0045B6  0EF6               	movlw	246
 18110  0045B8  6E45               	movwf	i2WriteTimer0@timer0+1,c
 18111  0045BA  0E3C               	movlw	60
 18112  0045BC  6E44               	movwf	i2WriteTimer0@timer0,c
 18113  0045BE  EC76  F023         	call	i2_WriteTimer0	;wreg free
 18114                           
 18115                           ;MillisecondTimer.c: 47: millisecond_COUNT0++;
 18116  0045C2  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 18117  0045C4  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 18118                           
 18119                           ;MillisecondTimer.c: 48: millisecond_COUNT1++;
 18120  0045C6  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 18121  0045C8  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 18122                           
 18123                           ;MillisecondTimer.c: 49: millisecond_COUNT2++;
 18124  0045CA  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 18125  0045CC  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 18126  0045CE  0012               	return		;funcret
 18127  0045D0                     __end_of_MillisecondTimerISR:
 18128                           	opt stack 0
 18129                           pclatu	equ	0xFFB
 18130                           pclath	equ	0xFFA
 18131                           tblptru	equ	0xFF8
 18132                           tblptrh	equ	0xFF7
 18133                           tblptrl	equ	0xFF6
 18134                           tablat	equ	0xFF5
 18135                           prodh	equ	0xFF4
 18136                           prodl	equ	0xFF3
 18137                           intcon	equ	0xFF2
 18138                           intcon2	equ	0xFF1
 18139                           intcon3	equ	0xFF0
 18140                           postinc0	equ	0xFEE
 18141                           fsr0h	equ	0xFEA
 18142                           fsr0l	equ	0xFE9
 18143                           wreg	equ	0xFE8
 18144                           fsr1h	equ	0xFE2
 18145                           fsr1l	equ	0xFE1
 18146                           bsr	equ	0xFE0
 18147                           indf2	equ	0xFDF
 18148                           postinc2	equ	0xFDE
 18149                           postdec2	equ	0xFDD
 18150                           fsr2h	equ	0xFDA
 18151                           fsr2l	equ	0xFD9
 18152                           status	equ	0xFD8
 18153                           
 18154 ;; *************** function i2_WriteTimer0 *****************
 18155 ;; Defined at:
 18156 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;  timer0          2   25[COMRAM] unsigned int 
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 18161 ;; Return value:  Size  Location     Type
 18162 ;;		None               void
 18163 ;; Registers used:
 18164 ;;		None
 18165 ;; Tracked objects:
 18166 ;;		On entry : 0/0
 18167 ;;		On exit  : 0/0
 18168 ;;		Unchanged: 0/0
 18169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18173 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18174 ;;Total ram usage:        4 bytes
 18175 ;; Hardware stack levels used:    1
 18176 ;; This function calls:
 18177 ;;		Nothing
 18178 ;; This function is called by:
 18179 ;;		_MillisecondTimerISR
 18180 ;; This function uses a non-reentrant model
 18181 ;;
 18182                           
 18183                           	psect	text136
 18184  0046EC                     __ptext136:
 18185                           	opt stack 0
 18186  0046EC                     i2_WriteTimer0:
 18187                           	opt stack 18
 18188                           
 18189                           ;incstack = 0
 18190  0046EC  C044  F060         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 18191  0046F0  C045  F061         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 18192  0046F4  C061  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 18193  0046F8  C060  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 18194  0046FC  0012               	return		;funcret
 18195  0046FE                     __end_ofi2_WriteTimer0:
 18196                           	opt stack 0
 18197                           pclatu	equ	0xFFB
 18198                           pclath	equ	0xFFA
 18199                           tblptru	equ	0xFF8
 18200                           tblptrh	equ	0xFF7
 18201                           tblptrl	equ	0xFF6
 18202                           tablat	equ	0xFF5
 18203                           prodh	equ	0xFF4
 18204                           prodl	equ	0xFF3
 18205                           intcon	equ	0xFF2
 18206                           intcon2	equ	0xFF1
 18207                           intcon3	equ	0xFF0
 18208                           postinc0	equ	0xFEE
 18209                           fsr0h	equ	0xFEA
 18210                           fsr0l	equ	0xFE9
 18211                           wreg	equ	0xFE8
 18212                           fsr1h	equ	0xFE2
 18213                           fsr1l	equ	0xFE1
 18214                           bsr	equ	0xFE0
 18215                           indf2	equ	0xFDF
 18216                           postinc2	equ	0xFDE
 18217                           postdec2	equ	0xFDD
 18218                           fsr2h	equ	0xFDA
 18219                           fsr2l	equ	0xFD9
 18220                           status	equ	0xFD8
 18221                           pclatu	equ	0xFFB
 18222                           pclath	equ	0xFFA
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           intcon2	equ	0xFF1
 18231                           intcon3	equ	0xFF0
 18232                           postinc0	equ	0xFEE
 18233                           fsr0h	equ	0xFEA
 18234                           fsr0l	equ	0xFE9
 18235                           wreg	equ	0xFE8
 18236                           fsr1h	equ	0xFE2
 18237                           fsr1l	equ	0xFE1
 18238                           bsr	equ	0xFE0
 18239                           indf2	equ	0xFDF
 18240                           postinc2	equ	0xFDE
 18241                           postdec2	equ	0xFDD
 18242                           fsr2h	equ	0xFDA
 18243                           fsr2l	equ	0xFD9
 18244                           status	equ	0xFD8
 18245                           
 18246                           	psect	rparam
 18247  0000                     pclatu	equ	0xFFB
 18248                           pclath	equ	0xFFA
 18249                           tblptru	equ	0xFF8
 18250                           tblptrh	equ	0xFF7
 18251                           tblptrl	equ	0xFF6
 18252                           tablat	equ	0xFF5
 18253                           prodh	equ	0xFF4
 18254                           prodl	equ	0xFF3
 18255                           intcon	equ	0xFF2
 18256                           intcon2	equ	0xFF1
 18257                           intcon3	equ	0xFF0
 18258                           postinc0	equ	0xFEE
 18259                           fsr0h	equ	0xFEA
 18260                           fsr0l	equ	0xFE9
 18261                           wreg	equ	0xFE8
 18262                           fsr1h	equ	0xFE2
 18263                           fsr1l	equ	0xFE1
 18264                           bsr	equ	0xFE0
 18265                           indf2	equ	0xFDF
 18266                           postinc2	equ	0xFDE
 18267                           postdec2	equ	0xFDD
 18268                           fsr2h	equ	0xFDA
 18269                           fsr2l	equ	0xFD9
 18270                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         134
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160    107     144
    BANK1           256     40     103
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    SendBattCurrentAcc@reading	PTR const unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    SendBattCurrent@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    SendBattVoltage@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 

    sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_CalculateSensorSums
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendStoredPIDValues->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _SendBattVoltage->_PutCharTxBuf
    _SendBattCurrentAcc->_PutCharTxBuf
    _SendBattCurrent->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _ReadCurrent->_OWReadByte
    _ReadCurrent->_OWWriteByte
    _ReadAccumulatedCurrent->_OWReadByte
    _ReadAccumulatedCurrent->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_SendOffsets
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _SendThreshold->_PutCharTxBuf
    _SendStatus->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_DisplaySensorStatuses
    _CalibrateThreshold->_NormaliseSensorReadings
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _CalculateSensorSums->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0  132756
                                              0 BANK1     40    40      0
                    _BusyDistanceAcq
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                        _Delay1KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
             _ReadAccumulatedCurrent
                        _ReadCurrent
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadMillis2
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
                    _SendBattCurrent
                 _SendBattCurrentAcc
                    _SendBattVoltage
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                         _SendStatus
                _SendStoredPIDValues
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1170
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1390
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltage                                      4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattCurrentAcc                                   6     4      2    1202
                                             24 BANK0      6     4      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattCurrent                                      4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadCurrent                                          5     3      2     352
                                             19 BANK0      5     3      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadAccumulatedCurrent                              13     9      4     358
                                             19 BANK0     13     9      4
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11677
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5980
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   12381
                                             32 BANK0      3     3      0
                          _FlashLEDS
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                        _SendOffsets
                      _SendThreshold
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1037
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     644
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0    7869
                                             29 BANK0      3     3      0
                   _CalibrateOffsets
                 _CalibrateThreshold
                       _Delay10KTCYx
                          _FlashLEDS
                         _PB1pressed
                        _SendOffsets
                         _SendStatus
                      _SendThreshold
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3    1096
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SendThreshold                                        4     2      2    1205
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (2) _SendOffsets                                          5     3      2    1335
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   2     2      0     963
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     161
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                              4     4      0     322
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0     192
                                             19 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay1KTCYx                                          1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     638
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     440
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSums                                  5     5      0   72599
                                            102 BANK0      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   65508
                                             85 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   21377
                                             67 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   35480
                                             76 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     489
                                             67 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9118
                                             68 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     582
                                             16 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     631
                                             43 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     718
                                             16 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2529
                                             58 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9719
                                             55 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3968
                                             28 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4541
                                             55 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4225
                                             43 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     260
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2900
                                             24 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2523
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2427
                                             24 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2291
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2260
                                             16 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      96
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _Delay1KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _ReadADC
       _SetADCChannel
         _SetChanADC
     _Delay10KTCYx
     _FlashLEDS
       _Delay10KTCYx
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _SendOffsets
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendThreshold
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _FlashLEDS
       _Delay10KTCYx
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _ReadADC
         _SetADCChannel
           _SetChanADC
       _Delay10KTCYx
       _FlashLEDS
         _Delay10KTCYx
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendOffsets
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendThreshold
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendOffsets
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendThreshold
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadAccumulatedCurrent
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ReadCurrent
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadMillis2
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _SendBattCurrent
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendBattCurrentAcc
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendBattVoltage
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     28      67       8       40.2%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      90       5       90.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C       6        0.0%
DATA                 0      0     13C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Apr 23 21:21:31 2017

             __size_of_WriteEEPROM 0040                __end_of_OWWriteByte 4376  
                     ___altoft@exp 00A2               __end_of_GetCharRxBuf 3EAE  
             __end_of_GetCharTxBuf 418A                      ___altoft@sign 00A3  
              WriteCharEEPROM@data 0075                                 bsr 000FE0  
              ___wmul@multiplicand 0072                        __CFG_BORV$0 000000  
                main@line_end_flag 0162                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
              __end_of_GetDistance 467E                       ___ftadd@exp1 0096  
                     ___ftadd@exp2 0095                       __CFG_CP6$OFF 000000  
                     __CFG_CP7$OFF 000000                       ___ftadd@sign 0094  
             LoadCalibration@index 0082                                l302 3CA4  
                              l240 2DB8                                l304 3CE0  
                              l322 3BF2                                l251 3804  
                              l307 3CAE                                l317 3BE8  
                              l270 33C6                                l246 472C  
                              l319 3C24                                l337 387A  
                              l265 2CCA                                l514 474C  
                              l290 3D80                                l275 3108  
                              l710 470C                                l606 31BE  
                              l707 3C82                                l379 1F98  
                              l901 4786                                l399 2AE6  
                              l904 47F8                                l922 3E1E  
                              l930 4348                                l683 3FC8  
                              l684 3FF8                                l756 3EAC  
                              l693 4384                                l686 3FEC  
                              l694 43A0                                l926 259E  
                              l918 3A8E                                l696 4398  
                              l794 471C                                l992 40E0  
                              l995 4058                                l997 406E  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                              _PR4 000F77                       __CFG_CPD$OFF 000000  
    __size_of_SendCurrentPIDValues 006A             __size_of_SetDCMotorPID 00B6  
             __size_of_WriteTimer0 0012               __size_of_WriteTimer1 0012  
            CalibrateOffsets@index 0075                                _exp 18D8  
                              _log 2200                         _OWReadByte 40E2  
                              _pow 1B00                      _SetADCChannel 2CCC  
                     ___awmod@sign 0075                                prod 000FF3  
             ?_SendStoredPIDValues 0078                                wreg 000FE8  
                       _TXSTA1bits 000FAC        __end_of_CalculateSensorSums 33C8  
                     __CFG_MODE$MC 000000          ??_CalculateSensorStatuses 0070  
                      ?_PB1pressed 002B                    ReadTimer1@timer 0060  
                    main@Kd_stored 014B                  main@line_mode_ptr 0143  
                      ?_PB2pressed 002B                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 0081                         _Delay1TCYx 472E  
                     ___ftdiv@sign 0086                       __CFG_WDT$OFF 000000  
                             l1000 42BC                               l1010 410C  
                             l1011 4118                               l1005 4374  
                             l1016 4794                               l1201 3572  
                             l1202 3574                               l1116 448A  
                             l1140 420C                               l1204 3590  
                             l1117 448C                               l1213 4456  
                             l1038 378C                               l1070 44DA  
                             l1142 4224                               l1046 4668  
                             l1231 4150                               l1143 4226  
                             l1217 4468                               l1171 451E  
                             l1068 44D0                               l1172 4520  
                             l1094 44A8                               l1600 16C2  
                             l1328 350A                               l1601 18D6  
                             l1195 3542                               l1604 16FC  
                             l1437 3272                               l1606 1726  
                             l1470 473C                               l1615 180A  
                             l1199 3564                               l1463 4612  
                             l1560 27DE                               l1704 431C  
                             l1632 21FE                               l1624 1834  
                             l1456 455E                               l1449 3E66  
                             l1641 3050                               l1571 27A6  
                             l1635 21C6                               l1812 1C8C  
                             l1468 4732                               l1830 1AFE  
                             l1647 1F7A                               l1664 3DD0  
                             l1808 1C98                               l1737 3692  
                             l1657 42E0                               l1833 19AE  
                             l1850 3320                               l1842 29F0  
                             l1834 1AF2                               l1668 2470  
                             l1844 29E4                               l1854 28F4  
                             l1872 233E                               l7010 2930  
                             l7100 3CD0                               l7014 2944  
                             l7110 3CDC                               l7120 381C  
                             l7026 2B36                               l7018 2962  
                             l7106 3CD6                               l8010 3194  
                             l7028 2BC4                               l7060 28A2  
                             l7044 285A                               l7036 27F4  
                             l7204 41EC                               l6500 2D52  
                             l7124 3826                               l7116 380C  
                             l8004 311E                               l7062 28E6  
                             l7142 3D0E                               l8006 3158  
                             l6440 2732                               l6432 26DA  
                             l7056 288C                               l7312 193E  
                             l7136 3CF2                               l7306 18FA  
                             l8210 1238                               l8202 121E  
                             l6460 27D0                               l6444 2754  
                             l6436 26F0                               l6620 1E70  
                             l6700 2FC6                               l7340 1AC2  
                             l8028 4602                               l7164 33EA  
                             l7148 4076                               l8300 1488  
                             l8212 1256                               ?_exp 00AC  
                             ?_log 00A3                               l6454 27B2  
                             l6446 2786                               l6438 2700  
                             l7270 361C                               l6550 16D0  
                             l6534 3496                               l6710 304C  
                             l7318 1978                               l7510 1C04  
                             l6470 2CE2                               l7174 344C  
                             l7158 33CA                               l8038 3E14  
                             l8054 3AFA                               l8302 14A0  
                             l8222 1274                               l8142 1106  
                             l6448 2796                               l7272 362E  
                             l6608 18B0                               l6624 1E84  
                             l6536 34A8                               l6704 3008  
                             l6720 236A                               l7336 1AB0  
                             l6480 2D0A                               l6472 2CEA  
                             l7176 345A                               l7168 33F4  
                             l7184 387E                               l8048 2568  
                             l8064 3B62                               l8304 14A6  
                             l8312 14D2                               l8320 1504  
                             l8152 1128                               l6562 171C  
                             l6642 1EF4                               l6618 1E4A  
                             l7290 2240                               l7506 1BDC  
                             l7418 44B2                               l7194 41C6  
                             l7450 3546                               l7442 352E  
                             l6490 2D32                               l6482 2D12  
                             l6474 2CF2                               l6466 2CD2  
                             l7098 3CB8                               l7602 26B2  
                             l8074 2EA6                               l8058 3B50  
                             l8250 1304                               l8218 1266  
                             l8170 115E                               l8162 1148  
                             l6580 179E                               l6572 175E  
                             l6556 170A                               l6652 1F38  
                             l7284 2212                               l7364 4210  
                             l6492 2D3A                               l6484 2D1A  
                             l6476 2CFA                               l6468 2CDA  
                             l6812 2BF4                               l7188 38D8  
                             l7700 4112                               l8068 3BB8  
                             l8252 130A                               l8228 128E  
                             l8148 1116                               l6590 17EA  
                             l6582 17AE                               l6646 1F10  
                             l6638 1ED4                               l6750 2432  
                             l6742 2402                               l7198 41D0  
                             l7462 3568                               l7454 3550  
                             l7446 3538                               l7438 3522  
                             l6494 2D42                               l6486 2D22  
                             l6478 2D02                               l6830 2C6A  
                             l6822 2C54                               l7630 1FBA  
                             l8078 2F74                               l8318 14FE  
                             l6592 17FA                               l6584 17BA  
                             l6656 1F54                               l6648 1F18  
                             l6744 240A                               l6752 2440  
                             l6496 2D4A                               l6488 2D2A  
                             l6816 2C34                               l6808 2BEA  
                             l6680 321C                               l6672 31F0  
                             l7552 3C1A                               l7544 3BFC  
                             l8352 159E                               l8336 154A  
                             l8328 1524                               l8192 1204  
                             l8176 1174                               l6578 178E  
                             l6738 23EE                               l6914 4190  
                             l7458 355A                               l6834 2CAA  
                             l6826 2C60                               l6818 2C4C  
                             l6842 3D38                               l7546 3C14  
                             l7618 1F8C                               l8370 1604  
                             l6756 245E                               l6748 2420  
                             l7492 1B42                               l7740 3338  
                             l6924 41B6                               l6836 2CC2  
                             l6852 4546                               l6692 3268  
                             l6684 3242                               l6676 3204  
                             l6668 31DE                               l7572 25C8  
                             l7564 25AC                               l7820 1CFE  
                             l7556 3C20                               l7628 1FAC  
                             l8372 1630                               l6942 2122  
                             l6598 1860                               l6918 419A  
                             l6846 3D42                               l6678 3212  
                             l7582 261C                               l8374 1638  
                             l8366 15F6                               l8358 15D2  
                             l6936 20E8                               l6768 32A8  
                             l7736 332E                               l6688 3252  
                             l7592 2644                               l7576 25D2  
                             l7568 25B8                               l7816 1CF4  
                             l7808 1CBE                               l7762 306C  
                             l7754 3054                               l6962 2184  
                             l6938 210E                               l7498 1B64  
                             l6794 3796                               l7842 1DA8  
                             l7834 1D72                               l7826 1D4E  
                             l7666 40D2                               l7674 4354  
                             l7922 3A68                               l8378 1644  
                             l6972 21D8                               l6980 3DA6  
                             l7748 33C0                               l7588 2638  
                             l7852 1E02                               l7692 40F8  
                             l7932 3AE8                               l7782 30A0  
                             l7774 3088                               l7766 3078  
                             l7758 3060                               l6798 37A0  
                             l7598 2680                               l7846 1DB2  
                             l7870 2A7C                               l7678 435E  
                             l7950 39AC                               l7792 30BA  
                             l6992 3E3E                               l7856 29FA  
                             l7688 40EE                               l7928 3A92  
                             l7960 3942                               l7794 30FC  
                             l7786 30AC                               l7778 3094  
                             l7970 3A16                               l7946 3954  
                             l7938 3FFC                               l7876 2AA0  
                             l7956 38EA                               ?_pow 00B5  
                             l7966 39BE                               _LATE 000F8D  
                             _LATJ 000F91                               u6041 1670  
                             u6051 168E                               u6401 2356  
                             u6251 1E36                               u7115 3EFC  
                             u6420 2390                               u7220 1982  
                             u6500 4728                               u7125 3EB8  
                             u7230 1984                               u6271 1E60  
                             u8120 2588                               u6425 2386  
                             u7500 1BBE                               u8060 316C  
                             u8125 257C                               u6710 4718  
                             u8080 4748                               u6490 32DA  
                             u6634 3D6E                               u6650 4782  
                             u6731 20D4                               u6635 3D68  
                             u6660 4790                               u8180 2EE8  
                             u8500 1612                               u6830 2954  
                             u8190 2F1C                               u8510 1626  
                             u8502 1614                               u6751 20FE  
                             u7560 3C10                               u8512 1628  
                             u8185 2EDC                               u6498 32DE  
                             u8195 2F10                               u6870 2826  
                             u6950 3CCC                    _BusyDistanceAcq 473E  
                             u8707 405E                               u8717 4066  
                             u6878 282A                               u8727 40B6  
                             u8737 40C0                               u7945 3A76  
                             u8747 40D4                               u8757 4294  
                             u8767 429C                               u8687 404A  
                             u8777 42AE                               u8697 4052  
                             u8787 454E                               u8797 4604  
                             _TMR2 000FCC                      main@Ki_stored 014D  
        __size_of_ConfigureBuggyIO 001A                     Read1USART@data 0070  
                             _main 103C           __end_of_EnableSensorLEDS 4814  
          _NormaliseSensorReadings 3790                       ___ftpack@arg 0070  
                     ___ftpack@exp 0073             __end_of_WirelessTx_ISR 4502  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               exp@x 00AC  
                             log@x 00A3             __size_ofi2_WriteTimer0 0012  
           __size_ofi2_WriteTimer1 0012                               pclat 000FFA  
                             pow@x 00B5                               pow@y 00B8  
                             prodh 000FF4                               prodl 000FF3  
                   _ReadCharEEPROM 46FE                               start 00EC  
                  __end_of_OWReset 40E2                         _OWWriteBit 4036  
                    __CFG_IESO$OFF 000000                _ConfigureInterrupts 441C  
                    main@Kp_stored 0149                      _BusySensorAcq 471E  
     __end_of_CalculateSensorError 310A                      _ReadIntEEPROM 3C26  
             __end_of_EnableMotors 4824                      __CFG_MCLRE$ON 000000  
                     ___ftmul@cntr 0089                         _GetCommand 47F2  
                     ___param_bank 000010                       ___ftmul@sign 008A  
                  __end_of_BusyADC 4796                    __end_of_ReadADC 466A  
                    ??_ReadCurrent 0075                      ??_ReadMillis0 0072  
                    ??_ReadMillis1 0072                      ??_ReadMillis2 0072  
                ??_SendBattCurrent 007A                    __end_of_OpenADC 3790  
                     ___fttol@exp1 0099                              ??_exp 00AF  
                            ??_log 00A6                       ___fttol@lval 0095  
                            ??_pow 00BB                      ??_SetDCMotorL 0078  
                    ??_SetDCMotorR 0078              _DisplaySensorStatuses 3D32  
                      _Delay1KTCYx 45FE                      __CFG_WAIT$OFF 000000  
                  __end_of_StartTx 47F2                      ??_ReadVoltage 0075  
                   _ReadEchoLength 47CC                              ?_main 002B  
                            _EEADR 000FA9                    __end_of___ftadd 18D8  
                  __end_of___awmod 3274                    __end_of___ftdiv 2200  
                ??_SendBattVoltage 007A                    __end_of___ftneg 42EE  
                  __end_of___ftmul 1F7C                     PutCharRxBuf@ch 0077  
                            _T0CON 000FD5                              _T1CON 000FCD  
                  __end_of___ftsub 3DD2                    __end_of___fttol 2472  
                            _T2CON 000FCA                              i1l240 2EA2  
                            i1l413 00A6                              i1l408 009A  
                            i2l402 36CE                              i2l405 36DA  
                            i1l750 4188                              i2l506 4274  
                   ?_SetADCChannel 002B                              i1l773 4500  
 __size_of_ResetAccumulatedCurrent 002C                      _UltrasoundISR 425C  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                   PutCharTxBuf@ch 0077              ??_SendStoredPIDValues 007E  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                              _TRISG 000F98  
                            _TRISJ 000F9A               ?_ConfigureInterrupts 002B  
            __size_of_Delay10KTCYx 001E                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                      __CFG_WRT5$OFF 000000  
                     ___lltoft@exp 0080                      __CFG_WRT6$OFF 000000  
                    __CFG_WRT7$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                     __CFG_EBTR5$OFF 000000  
                   __CFG_EBTR6$OFF 000000                     __CFG_EBTR7$OFF 000000  
           WriteCharEEPROM@address 0073                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   i1___awmod@sign 0030                     __CFG_EBTRB$OFF 000000  
                    ___awtoft@sign 007B                 __size_ofi1_ReadADC 0010  
                            _floor 28F6                              _isrHP 0008  
                            _ldexp 27E0                              _isrLP 0018  
                            _frexp 3274                              _errno 00DF  
                    ___ftpack@sign 0074                         _Read1USART 4444  
                       _ConvertADC 481C                    ??_LoadPIDValues 007D  
                   __CFG_BOREN$OFF 000000                              tablat 000FF5  
                            pow@yi 00C2                         _ReadEEPROM 4376  
           __end_of_ReadCharEEPROM 470E                              status 000FD8  
            SendStoredPIDValues@Kd 007A              SendStoredPIDValues@Ki 007C  
            SendStoredPIDValues@Kp 0078                    ?_WirelessTx_ISR 002B  
               __size_ofi1___awmod 0082                        _OWWriteByte 434A  
                    _SetDCMotorPID 310A                     ?_BusySensorAcq 002B  
                      exp@exponent 00B2                     ?_ReadIntEEPROM 0072  
                    ?_SetPIDValues 002B                         _FlushRxBuf 41C0  
                  _ConfigureTimer0 4614                    _ConfigureTimer1 45D0  
                  _ConfigureTimer2 47FA                        ldexp@newexp 00A6  
                       _FlushTxBuf 418A                 __size_of_OWReadBit 0030  
                  __initialization 43A2                   ?_LoadCalibration 002B  
                      log@exponent 00A6                        _GetDistance 466A  
               main@sensor_sum_ptr 0141                       __end_of_main 165A  
                       _ReadTimer1 46DA                __size_of_PB1pressed 005E  
              __size_of_PB2pressed 005E                       _Delay10KTCYx 4542  
                    ??_SendOffsets 007A             __end_of_ReadEchoLength 47D6  
          __size_of_WriteIntEEPROM 0032                   _CommandAvailable 477A  
                       _Open1USART 350C                   __end_of_OpenPWM4 44DC  
                 __end_of_OpenPWM5 44B6                             ??_main 013C  
             __end_of_ConfigureADC 4692                      ___fttol@sign1 0094  
                   ?_UltrasoundISR 002B                      i2_WriteTimer0 46EC  
             __end_of_ConfigurePWM 47A4                      i2_WriteTimer1 46C8  
              __end_of_ReadCurrent 3E20                      __activetblptr 000003  
                ReadVoltage@result 0078                __end_of_ReadMillis0 47CC  
              __end_of_ReadMillis1 47C2                __end_of_ReadMillis2 47EA  
            ??_ConfigureInterrupts 0070                 __size_of_FlashLEDS 0028  
                       _SetChanADC 4560                _ConfigureUltrasound 43F4  
                      ?_OWReadByte 002B        __size_of_CalibrateThreshold 0050  
          __end_of_BusyDistanceAcq 474E                __end_of_SetDCMotorL 477A  
              __end_of_SetDCMotorR 476C                __end_of_ReadVoltage 3A90  
            __end_of_DisableMotors 4828                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                ReadEEPROM@address 0070                             ?_floor 00A4  
                           ?_isrHP 002B                             ?_ldexp 00A3  
                           ?_isrLP 002B                             ?_frexp 0070  
                 __end_of___altoft 350C                             _ADRESH 000FC4  
                           _EEADRH 000FAA                             _ADRESL 000FC3  
                           _EEDATA 000FA8                        ?_Delay1TCYx 002B  
                    ??_SetUnipolar 0070                             _CCPR4L 000F74  
                           _CCPR5L 000F71                             _EECON2 000FA7  
                  i1_SetADCChannel 2DBA                   __end_of___awtoft 3E68  
                 __end_of___ftpack 27E0          ??_NormaliseSensorReadings 0070  
                 __end_of___lbtoft 431E                         _SendStatus 4070  
                 __end_of___lltoft 3694                             i1l1046 475C  
                           i1l1437 3612                          ??_OWReset 0070  
                  __CFG_BBSIZ$BB2K 000000                             i1l6024 0092  
                           i1l5170 35EC                             i1l5162 35C4  
                           i1l5154 35A8                             i1l5164 35CE  
                           i1l5166 35D6                             i1l5174 35F8  
                           i1l5158 35B6                             i1l5502 4650  
                           i1l5178 3608                         _OpenTimer0 446A  
                       _OpenTimer1 41F6                         _OpenTimer2 4502  
                           i1l5768 44F8                             i1l5960 2DCE  
                           i1l5970 2DF6                             i1l5962 2DD6  
                           i1l5980 2E1E                             i1l5972 2DFE  
                           i1l5964 2DDE                             i1l5956 2DBE  
                           i1l5982 2E26                             i1l5974 2E06  
                           i1l5966 2DE6                             i1l5958 2DC6  
                           i1l5990 2E3E                             i1l5984 2E2E  
                           i1l5976 2E0E                             i1l5968 2DEE  
                           i1l5986 2E36                             i1l5978 2E16  
                           i2l7898 4288                             _RCREG1 000FAE  
                           _RCSTA1 000FAB                             _PID_Kd 00D5  
                           _PID_Ki 00D7                             _PID_Kp 00D9  
         GenerateCalibration@index 007F                             _SPBRG1 000FAF  
                  ?_ReadCharEEPROM 0072                 __size_of_SetDCPWM4 0044  
               __size_of_SetDCPWM5 0044                   _CalibrateOffsets 3806  
                   ?_SetDCMotorPID 0078                          ??_BusyADC 0070  
                           _TXREG1 000FAD                          ??_ReadADC 0072  
                           _TXSTA1 000FAC               ?_ConfigureUltrasound 0074  
              _SetDirectionForward 4808                     ??_SetPIDValues 0079  
                      ?_OWWriteBit 002B              __size_of_GetCharRxBuf 0046  
                        ??_OpenADC 0072             CalculateSensorSums@sum 00C9  
            __size_of_GetCharTxBuf 0038         _sensor_readings_normalised 0132  
                           _BusyTx 470E                     __CFG_XINST$OFF 000000  
                      ?_GetCommand 002B                  ?_SetReverseMotorL 002B  
                           ___ftge 2F84                          ??_StartTx 0070  
                __end_ofi1_ReadADC 475E                             ___wmul 411A  
              _sensor_readings_raw 00CB             ?_DisplaySensorStatuses 0070  
                        ??___ftadd 0091                          ??___awmod 0074  
                        ??___ftdiv 007E                          ??___ftneg 0073  
                        ??___ftmul 0082                          ??___ftsub 009D  
                        ??___fttol 008F                   OpenTimer0@config 0070  
               ??_SetReverseMotorL 0070                   OpenTimer1@config 0070  
                  ?_ReadEchoLength 0070             SendCurrentPIDValues@Kd 007A  
           SendCurrentPIDValues@Ki 007C             SendCurrentPIDValues@Kp 0078  
                 OpenTimer2@config 0070                             clear_0 43A8  
                           clear_1 43B4                             clear_2 43C0  
                  ___awmod@divisor 0072                    ??_SetADCChannel 0072  
                   ?i2_WriteTimer0 0044                     ?i2_WriteTimer1 0044  
                  ___awmod@counter 0074              ReadCharEEPROM@address 0072  
                    ?_SendLineMode 0078           __size_of_WriteCharEEPROM 0012  
                           floor@i 00A7                             floor@x 00A4  
            ___ftmul@f3_as_product 0086                  __end_ofi1___awmod 3614  
             ?_SetDirectionForward 002B                __end_of_SendOffsets 346A  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                __end_of_OWReadBit 42BE              WriteIntEEPROM@address 0073  
             _CalculateSensorError 3052                 main@find_line_flag 014F  
           SendBattVoltage@reading 0078         __end_of_SendBattCurrentAcc 2F84  
                      ?_Read1USART 002B                       _GetCharRxBuf 3E68  
                      ?_ConvertADC 002B                       _GetCharTxBuf 4152  
          __end_of_ConfigureTimer0 462A            __end_of_ConfigureTimer1 45E8  
                 __end_ofexp@coeff 101F            __end_of_ConfigureTimer2 4802  
                    main@stop_flag 015E                   _ConfigureBuggyIO 459C  
                 __end_oflog@coeff 103A                        ?_ReadEEPROM 0070  
                       __accesstop 0060            __end_of__initialization 43C6  
                       ___altoft@c 009A              __size_of_EnableMotors 0004  
                  ??_BusySensorAcq 0070                         ___ftadd@f1 008B  
                       ___ftadd@f2 008E                  ReadCurrent@result 0076  
               _millisecond_COUNT0 000D                 _millisecond_COUNT1 000F  
               _millisecond_COUNT2 0011                    ??_ReadIntEEPROM 0074  
                       _StopMotors 4524                         ___ftge@ff1 0070  
                       ___ftge@ff2 0073              ??_ConfigureUltrasound 007A  
         ??_SendBattVoltageInitial 007A      ConfigureUltrasound@echo_to_cm 0074  
    ConfigureUltrasound@echo_to_in 0077                       eval_poly@res 00A0  
                    ___rparam_used 000001                         ___ftdiv@f1 0078  
                       ___ftdiv@f2 007B                         ___ftdiv@f3 0082  
              __end_of_SetUnipolar 4808                  __end_of_FlashLEDS 43F4  
     __end_of_SendDefaultPIDValues 39BC                         ___ftneg@f1 0070  
                       ___awtoft@c 0078                         ___lbtoft@c 007B  
                      ?_FlushRxBuf 002B                        ?_FlushTxBuf 002B  
              __size_of_OWReadByte 0038                         ___ftmul@f1 007C  
                       ___ftmul@f2 007F                         ___ftsub@f1 0097  
                       ___ftsub@f2 009A                         ___fttol@f1 008B  
                   __pcstackCOMRAM 002B                        ?_ReadTimer1 0044  
                      _ReadCurrent 3DD2                         ___lltoft@c 0078  
                      _ReadMillis0 47C2                        _ReadMillis1 47B8  
                      _ReadMillis2 47E0                      __end_of_floor 29F2  
                    __end_of_isrHP 3714                      __end_of_ldexp 28F6  
                    __end_of_isrLP 00EC                      __end_of_frexp 3322  
              __size_of_Delay1TCYx 0010                    ??_UltrasoundISR 0046  
                      _SetDCMotorL 476C                        _SetDCMotorR 475E  
                   ??_SendLineMode 007A                        ?_Open1USART 0070  
          _ResetAccumulatedCurrent 431E                  __end_of_SetDCPWM4 3EF2  
                __end_of_SetDCPWM5 3F36                        _ReadVoltage 3A26  
            ??_SetDirectionForward 0070                      ?_ResetMillis0 002B  
                    ?_ResetMillis1 002B                      ?_ResetMillis2 002B  
              i1SetChanADC@channel 002C                        ?_SetChanADC 002B  
          __end_ofi1_SetADCChannel 2EA4                    _sensor_acq_done 0020  
      __end_of_MillisecondTimerISR 45D0               ReadIntEEPROM@address 0072  
     CalculateSensorStatuses@index 0073                   ?_BusyDistanceAcq 002B  
              __size_of_OWWriteBit 003A              ?_CalculateSensorError 0070  
                     _EnableMotors 4820                       ??_PB1pressed 0072  
                     ??_PB2pressed 0072                __size_of_GetCommand 0008  
                          ??_floor 00A7                            ??_isrHP 0062  
                          ??_ldexp 00A8                            ??_isrLP 0033  
      __end_of_GenerateCalibration 26C0                            ??_frexp 0075  
                      ?_SendStatus 002B                         __pbssBANK0 00CB  
                       __pbssBANK1 0100                    ??_SetDCMotorPID 007A  
                      ?_OpenTimer0 002B                        ?_OpenTimer1 002B  
                      ?_OpenTimer2 002B                 __size_of_eval_poly 00F6  
                    ??_Write1USART 002B                    _SendBattCurrent 3B60  
     __end_of_SendCurrentPIDValues 3A26            main@battery_current_acc 015A  
           __size_of_SendThreshold 006C                  ?_EnableSensorLEDS 002B  
          main@battery_current_ptr 0145                      ??_WriteEEPROM 0073  
                        ?_OpenPWM4 002B                          ?_OpenPWM5 002B  
                          ?_BusyTx 002B           ??_ReadAccumulatedCurrent 0077  
               ??_EnableSensorLEDS 0070                    _SendBattVoltage 3AF8  
          CalculateSensorError@sum 0070                            ?___ftge 0070  
            __size_of_ConfigureADC 0014                            ?___wmul 0070  
                      _RxCharacter 0013              __size_of_ConfigurePWM 000E  
                  ??i2_WriteTimer0 0046                    ??i2_WriteTimer1 0046  
               __end_of_PB1pressed 3CE2                     _WriteIntEEPROM 422A  
                          _CCP4CON 000F73                            _CCP5CON 000F70  
                     ?_Delay1KTCYx 002B                   WriteTimer0@timer 0072  
                        ?___altoft 009A                 __end_of_PB2pressed 3C26  
                      _SendOffsets 33C8                   WriteTimer1@timer 0072  
                    ??_WriteTimer0 0072                      ??_WriteTimer1 0072  
              __size_of_Read1USART 0026                __size_of_ConvertADC 0004  
                        ?___awtoft 0078                          ?___ftpack 0070  
                        ?___lbtoft 0078                      ?_PutCharRxBuf 002B  
                 SendOffsets@index 007C                      ?_PutCharTxBuf 002B  
                   ??_ResetMillis0 0070                     ??_ResetMillis1 0070  
                   ??_ResetMillis2 0070                          ?___lltoft 0078  
              __size_of_ReadEEPROM 002C                   Open1USART@config 0072  
           SetPIDValues@char_index 007C               __end_of_SetPIDValues 20BE  
              __size_of_FlushRxBuf 0036                            _SPBRGH1 000F7F  
              __size_of_FlushTxBuf 0036                  ??_WriteCharEEPROM 0076  
                      _TxCharacter 0017                   ??_WirelessTx_ISR 0033  
                      _SetUnipolar 4802                __size_of_ReadTimer1 0012  
                          _OWReset 40AA           __end_of_CommandAvailable 4788  
           SetDCMotorPID@PIDoutput 0078                   ?_ConfigureTimer0 002B  
                 ?_ConfigureTimer1 002B                   ?_ConfigureTimer2 002B  
                       _convert_cm 00EB                         _convert_in 0164  
     __size_of_CalculateSensorSums 00A6                        ?_StopMotors 002B  
              __size_of_Open1USART 0086                       ?_OWWriteByte 002B  
                     _ConfigureADC 467E                            _BusyADC 4788  
                          _ReadADC 4656                       _ConfigurePWM 4796  
              i2WriteTimer0@timer0 0044                         ??_OpenPWM4 0070  
                       ??_OpenPWM5 0070    __size_of_SendBattVoltageInitial 0068  
              i2WriteTimer1@timer1 0044                            _OpenADC 3714  
                          __Hparam 0000                __size_of_SetChanADC 001E  
                  __size_of_BusyTx 0010                            __Lparam 0000  
              __end_of_Write1USART 4656                       ?_GetDistance 002B  
           __end_of_WriteIntEEPROM 425C                            _StartTx 47EA  
                  __size_of___ftge 00CE                            ___ftadd 165A  
                          ___awmod 31C0                            ___ftdiv 20BE  
                          ___ftneg 42BE                    __size_of___wmul 0038  
                          ___ftmul 1E20          ??_ResetAccumulatedCurrent 0073  
                          ___ftsub 3D82                            ___fttol 2340  
              __end_of_WriteEEPROM 3FFA                      ?i1_ConvertADC 002B  
                     __psmallconst 1000                  ReadIntEEPROM@data 0077  
      __end_of_SendStoredPIDValues 3952                         ??___altoft 009E  
                   ??_PutCharRxBuf 0076                    __CFG_STVREN$OFF 000000  
                   ??_PutCharTxBuf 0076                            __pcinit 43A2  
               WriteEEPROM@address 0070                         ??___awtoft 007B  
                       ??___ftpack 0075                         ??___lbtoft 007B  
                __end_of_eval_poly 2BDE                            __ramtop 1000  
              __size_of_SendStatus 003A                     main@loop_count 0140  
              __size_of_OpenTimer0 0026                __size_of_OpenTimer1 0034  
              __size_of_OpenTimer2 0022                         ??___lltoft 007C  
                          __ptext0 103C                            __ptext1 4524  
                          __ptext2 4802                            __ptext3 4814  
                          __ptext4 4818                            __ptext5 4808  
                          __ptext6 310A                            __ptext7 475E  
                          __ptext8 3EAE                            __ptext9 476C  
                     _get_Rx_index 001B           __end_of_CalibrateOffsets 387C  
                    _SendThreshold 387C                          _T0CONbits 000FD5  
         ?_CalculateSensorStatuses 002B                          _T1CONbits 000FCD  
                     _get_Tx_index 001C                       ??_OWReadByte 0071  
                        _T2CONbits 000FCA                       __size_of_exp 0228  
                     __size_of_log 0140             ??_CalculateSensorError 0072  
                     __size_of_pow 019A                   ?i1_SetADCChannel 002B  
                        _T3CONbits 000FB1                   ___awmod@dividend 0070  
                        _T4CONbits 000F76               _SendDefaultPIDValues 3952  
              __end_of_WriteTimer0 46C8                __end_of_WriteTimer1 46B6  
          __end_of_SendBattCurrent 3BC8             SendBattCurrent@reading 0078  
                 ??_ReadCharEEPROM 0074                       ??_Delay1TCYx 0070  
                   OpenADC@config2 0070                     __pintcode_body 3694  
                _GetSensorReadings 45E8               end_of_initialization 43C6  
                          exp@sign 00B4                     main@sensor_sum 0163  
                  FlushRxBuf@index 0070            __end_of_SendBattVoltage 3B60  
               ?_GetSensorReadings 002B              __end_of_LoadPIDValues 2AE8  
             __end_of_SendLineMode 4036                            int_func 3694  
              main@battery_current 0151                      ?i1_SetChanADC 002B  
                     ??_OWWriteBit 0070            ??_DisplaySensorStatuses 0072  
                          pow@sign 00C1                   ??_ReadEchoLength 0072  
                      _Rx_complete 0015    __size_of_ReadAccumulatedCurrent 012E  
                     ??_GetCommand 0071                ??_GetSensorReadings 0073  
               __end_of_OWReadByte 411A                    ?_WriteIntEEPROM 0073  
                          postdec2 000FDD                main@battery_voltage 0160  
                          postinc0 000FEE                            postinc2 000FDE  
                   ??i1_ConvertADC 002B                          _PID_error 00DB  
      __end_of_ConfigureInterrupts 4444                 __end_of_Delay1TCYx 473E  
                  FlushTxBuf@index 0070           __end_of_ConfigureBuggyIO 45B6  
                   ?_SendThreshold 0078         __end_of_CalibrateThreshold 3D32  
                   GetCharRxBuf@ch 0077                          i1_ReadADC 474E  
                        _PORTBbits 000F81                          _PORTHbits 000F87  
         __size_of_LoadCalibration 0186                     GetCharTxBuf@ch 0032  
           _SendBattVoltageInitial 3A90                  _SetForwardsMotorR 4818  
             _SendCurrentPIDValues 39BC                __size_of_StopMotors 001E  
            ?_SendDefaultPIDValues 0078                        _Tx_complete 0018  
                        _TRISCbits 000F94                 ?_SetForwardsMotorR 002B  
        __size_of_SetReverseMotorL 0004                          _TRISGbits 000F98  
                        _TRISHbits 000F99                         main@D_temp 0153  
               __end_of_OWWriteBit 4070          __end_of_GetSensorReadings 45FE  
                        i1___awmod 3592                         main@I_temp 0155  
           main@wall_detected_flag 0150                       ??_Read1USART 0070  
               __end_of_GetCommand 47FA                       ??_ConvertADC 0070  
                        _OWReadBit 428E                ??_SetForwardsMotorR 0070  
                     ??_ReadEEPROM 0072                        _Write1USART 4640  
                      ___ftdiv@exp 0085                     ??i1_SetChanADC 002B  
             __end_of_ResetMillis0 47B8               __end_of_ResetMillis1 47AE  
             __end_of_ResetMillis2 47E0             i1SetADCChannel@channel 002D  
                      _WriteEEPROM 3FBA                       ??_FlushRxBuf 0070  
                     ??_FlushTxBuf 0070                        ___ftmul@exp 0085  
               _SendBattCurrentAcc 2EA4              SetDCMotorL@duty_cycle 0076  
                   __end_of_BusyTx 471E                  _ConfigureWireless 457E  
                     ??_ReadTimer1 0046                       ?_ReadCurrent 0073  
                        _FlashLEDS 43CC                       ?_ReadMillis0 0070  
                     ?_ReadMillis1 0070                       ?_ReadMillis2 0070  
             _second_rollover_flag 001F             __size_of_DisableMotors 0004  
  __end_of_CalculateSensorStatuses 2CCC                     __end_of___ftge 3052  
               ?_ConfigureWireless 002B                     __end_of___wmul 4152  
                     ?_SetDCMotorL 0076                       ?_SetDCMotorR 0076  
                     ??_Open1USART 0072              __size_of_SetPIDValues 0142  
                      _WriteTimer0 46B6                        _WriteTimer1 46A4  
        __end_of_SetForwardsMotorR 481C                 __end_of_Read1USART 446A  
              ?_SendBattCurrentAcc 0078                         ?i1_ReadADC 002B  
               __end_of_ConvertADC 4820                       ?_ReadVoltage 0073  
            ?_SendCurrentPIDValues 0078               __size_of_Delay1KTCYx 0016  
                       floor@expon 00AA              __end_of_SetADCChannel 2DBA  
                     ??_SetChanADC 0070                 __end_of_ReadEEPROM 43A2  
          main@battery_voltage_ptr 0158                ??_ConfigureWireless 0073  
              start_initialization 43A2             _ReadAccumulatedCurrent 2472  
         ?_NormaliseSensorReadings 002B                         eval_poly@d 009A  
                       eval_poly@n 009C                         eval_poly@x 0097  
                       ldexp@value 00A3                          _SetDCPWM4 3EAE  
                        _SetDCPWM5 3EF2                        __end_of_exp 1B00  
                      __end_of_log 2340                   ?_SendBattCurrent 0078  
                      __end_of_pow 1C9A                         ?i1___awmod 002B  
               __end_of_FlushRxBuf 41F6                 __end_of_FlushTxBuf 41C0  
                  SetDCPWM4@DCycle 0074        __end_of_ConfigureUltrasound 441C  
                  SetDCPWM5@DCycle 0074                       ??_SendStatus 0078  
                     ??_OpenTimer0 0070                       ??_OpenTimer1 0070  
                     ??_OpenTimer2 0070                         ?_OWReadBit 002B  
                    _echo_acq_done 001A                 __end_of_ReadTimer1 46EC  
                 OWReadByte@result 0071               ??_SendBattCurrentAcc 007A  
             __end_of_PutCharRxBuf 3F78                         frexp@value 0070  
             __end_of_PutCharTxBuf 3FBA                   ?_SendBattVoltage 0078  
                      _SystemClock 0001                   _sensor_acq_index 0021  
               __end_of_Open1USART 3592              __end_of_BusySensorAcq 472E  
             SetADCChannel@channel 0072              __end_of_ReadIntEEPROM 3C84  
        __end_of_ConfigureWireless 459C                           ??_BusyTx 0070  
DisplaySensorStatuses@status_array 0070               __size_of_OWWriteByte 002C  
                     _SetPIDValues 1F7C                 __end_of_SetChanADC 457E  
                __size_of_OpenPWM4 0026                  __size_of_OpenPWM5 0026  
                         ??___ftge 0076                           ??___wmul 0074  
                       ?_FlashLEDS 002B        __end_of_SetDirectionForward 480E  
                  ??_SendThreshold 007A                 i1___awmod@dividend 002B  
                 __CFG_LPT1OSC$OFF 000000               __size_of_GetDistance 0014  
                     ?_SendOffsets 0078                          _Rx_buffer 0100  
                  _WriteCharEEPROM 4692          __size_of_EnableSensorLEDS 0006  
              _CalculateSensorSums 3322                 __end_of_SendStatus 40AA  
            __end_of_UltrasoundISR 428E                 __end_of_OpenTimer0 4490  
               __end_of_OpenTimer1 422A                 __end_of_OpenTimer2 4524  
                __size_of___altoft 00A2                       OWWriteByte@i 0072  
           ??_SendDefaultPIDValues 007E                          _Tx_buffer 0119  
                __size_of___awtoft 0048                  __size_of___ftpack 0120  
                __size_of___lbtoft 0030                  __size_of___lltoft 0080  
                      __pbssCOMRAM 0001                      __pcstackBANK0 0060  
                    __pcstackBANK1 013C                         ?_SetDCPWM4 0070  
                       ?_SetDCPWM5 0070         __size_of_GetSensorReadings 0016  
            __size_of_SendLineMode 003C                  ??_LoadCalibration 0080  
                    _DisableMotors 4824                       ?_SetUnipolar 002B  
     ReadAccumulatedCurrent@result 007C               __end_ofi1_ConvertADC 482C  
                  Delay1KTCYx@unit 0070       __size_of_MillisecondTimerISR 001A  
                         ?_OWReset 002B                  ?_CommandAvailable 002B  
         __size_of_BusyDistanceAcq 0010               ?_CalculateSensorSums 002B  
            __end_of_SetDCMotorPID 31C0                       ??_StopMotors 0078  
               WriteIntEEPROM@data 0075                           ?_BusyADC 002B  
                         ?_ReadADC 0070                          __pnvBANK0 00EB  
                        __pnvBANK1 0164       __size_of_GenerateCalibration 0120  
               ??_CommandAvailable 0070                  OpenADC@portconfig 0071  
                         ?_OpenADC 0070                     _sensor_offsets 00E1  
                        _echo_time 000B                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                    main@command_msg 015F  
                         ?_StartTx 002B                          __ptext100 1B00  
                        __ptext101 2200                          __ptext110 411A  
                        __ptext102 18D8                          __ptext111 1E20  
                        __ptext103 27E0                          __ptext120 3052  
                        __ptext112 3D82                          __ptext104 28F6  
                        __ptext121 473E                          __ptext113 165A  
                        __ptext105 3274                          __ptext130 3592  
                        __ptext114 42BE                          __ptext106 2340  
                        __ptext123 2DBA                          __ptext115 20BE  
                        __ptext107 2F84                          __ptext132 425C  
                        __ptext124 462A                          __ptext116 3E20  
                        __ptext108 346A                          __ptext133 46C8  
                        __ptext125 474E                          __ptext117 3614  
                        __ptext109 2AE8                           ?___ftadd 008B  
                        __ptext134 46DA                          __ptext126 4828  
                        __ptext118 42EE                          __ptext135 45B6  
                        __ptext127 44DC                          __ptext119 26C0  
                        __ptext136 46EC                          __ptext128 4640  
                        __ptext129 4152                           ?___awmod 0070  
                      OWReadByte@i 0072                           ?___ftdiv 0078  
                         ?___ftneg 0070                           ?___ftmul 007C  
                         ?___ftsub 0097                           ?___fttol 008B  
                    ?_Delay10KTCYx 002B        main@battery_current_acc_ptr 0147  
                      __pintcodelo 0018                    Open1USART@spbrg 0070  
       __size_of_SetForwardsMotorR 0004             ??_SendCurrentPIDValues 007E  
            __end_ofi2_WriteTimer0 46FE              __end_ofi2_WriteTimer1 46DA  
  __end_of_NormaliseSensorReadings 3806                        ??i1_ReadADC 002D  
                 _sensor_threshold 0028                       _SendLineMode 3FFA  
                ?_CalibrateOffsets 002B              SendLineMode@line_mode 0078  
                      __smallconst 1000                  WriteTimer0@timer0 0070  
             __end_ofi1_SetChanADC 4640                  WriteTimer1@timer1 0070  
                        _eval_poly 2AE8                 i2WriteTimer0@timer 0060  
               __end_of_StopMotors 4542                 i2WriteTimer1@timer 0060  
               ??_CalibrateOffsets 0073                   _SetReverseMotorL 4814  
                      ??i1___awmod 002F                     ?_DisableMotors 002B  
                        _line_mode 002A                     __size_of_floor 00FC  
                   __size_of_isrHP 370C                     __size_of_ldexp 0116  
                   __size_of_isrLP 00D4                     __size_of_frexp 00AE  
                  Write1USART@data 002B              __size_of_ResetMillis0 000A  
            __size_of_ResetMillis1 000A              __size_of_ResetMillis2 000A  
                  OWReadBit@result 0070                        ??_OWReadBit 0070  
            ??_CalculateSensorSums 00C6   __size_of_CalculateSensorStatuses 00EE  
                   ___wmul@product 0074                      OpenADC@config 0074  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _LATHbits 000F90                   ??_WriteIntEEPROM 0077  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
       __size_of_ConfigureWireless 001E         DisplaySensorStatuses@index 0074  
      main@send_battery_stats_flag 0157             SendDefaultPIDValues@Kd 007A  
           SendDefaultPIDValues@Ki 007C             SendDefaultPIDValues@Kp 0078  
                         _PIR1bits 000F9E                           _DCmotorL 0007  
                         _DCmotorR 0009              __CFG_DATABW$DATA16BIT 000000  
          __end_of_WriteCharEEPROM 46A4     __size_of_DisplaySensorStatuses 0050  
                         _RCONbits 000FD0           __size_of_ConfigureTimer0 0016  
         __size_of_ConfigureTimer1 0018           __size_of_ConfigureTimer2 0008  
    __end_of_DisplaySensorStatuses 3D82                   __CFG_WDTPS$32768 000000  
                   ??_Delay10KTCYx 0070              SetDCMotorR@duty_cycle 0076  
                      ??_FlashLEDS 0072            ?_SendBattVoltageInitial 0078  
             __size_of_ReadCurrent 004E               __size_of_ReadMillis0 000A  
             __size_of_ReadMillis1 000A               __size_of_ReadMillis2 000A  
                __CFG_ECCPMX$PORTH 000000                         _ADCON0bits 000FC2  
                ?_ConfigureBuggyIO 002B                  ___wmul@multiplier 0070  
             __size_of_SetDCMotorL 000E               __size_of_SetDCMotorR 000E  
                     _ResetMillis0 47AE                       _ResetMillis1 47A4  
                     _ResetMillis2 47D6                 ??_ConfigureBuggyIO 0070  
                       ?_eval_poly 0097               __size_of_ReadVoltage 006A  
     __size_of_SendStoredPIDValues 006A                        ??_SetDCPWM4 0072  
                      ??_SetDCPWM5 0072                   Delay10KTCYx@unit 0071  
    __size_of_CalculateSensorError 00B8              __size_of_PutCharRxBuf 0042  
            __size_of_PutCharTxBuf 0042           CalculateSensorSums@index 00CA  
                      _INTCON2bits 000FF1                      ?_GetCharRxBuf 002B  
                      _INTCON3bits 000FF0                      ?_GetCharTxBuf 002B  
               _CalibrateThreshold 3CE2           __size_ofi1_SetADCChannel 00EA  
                 __size_of_OWReset 0038                       ?_Write1USART 002B  
                        frexp@eptr 0073                         _EECON1bits 000FA6  
                         _OpenPWM4 44B6                           _OpenPWM5 4490  
                     ?_WriteEEPROM 0070                ?_CalibrateThreshold 002B  
                 __size_of_BusyADC 000E                   __size_of_ReadADC 0014  
                         __Hrparam 0000           ?_ResetAccumulatedCurrent 002B  
          __size_of_WirelessTx_ISR 0026                   __size_of_OpenADC 007C  
                         __Lrparam 0000      SendThreshold@sensor_threshold 0078  
                ??_BusyDistanceAcq 0070           _CalculateSensorSums$3810 00C6  
   __end_of_SendBattVoltageInitial 3AF8                  i1___awmod@divisor 002D  
                      OWWriteBit@b 0070                  i1___awmod@counter 002F  
                 __size_of_StartTx 0008                   __size_of___ftadd 027E  
                 __size_of___awmod 00B4                   __size_of___ftdiv 0142  
                 __size_of___ftneg 0030                           ___altoft 346A  
                 __size_of___ftmul 015C                   __size_of___ftsub 0050  
                 __size_of___fttol 0132                       ?_WriteTimer0 0070  
                     ?_WriteTimer1 0070                           ___awtoft 3E20  
                         ___ftpack 26C0                           ___lbtoft 42EE  
                 _EnableSensorLEDS 480E                           ___lltoft 3614  
                     _PutCharRxBuf 3F36            ?_ReadAccumulatedCurrent 0073  
                     _PutCharTxBuf 3F78               __size_of_SendOffsets 00A2  
           __size_of_LoadPIDValues 00F6                _system_clock_enable 0022  
             ??_CalibrateThreshold 0075                           _exp$3813 00AF  
     __size_of_ConfigureInterrupts 0028              __size_ofi1_ConvertADC 0004  
                  ??_DisableMotors 0070                      ?_EnableMotors 002B  
               SetDCPWM4@dutycycle 0070                     OpenPWM4@period 0070  
                         __ptext10 3EF2                           __ptext11 38E8  
                         __ptext20 47AE                           __ptext12 3FFA  
                         __ptext21 431E                           __ptext13 3952  
                         __ptext30 40AA                           __ptext22 3A26  
                         __ptext14 39BC                      _sensor_status 0023  
                         __ptext31 40E2                           __ptext23 47B8  
                         __ptext15 3A90                           __ptext40 46FE  
                         __ptext32 428E                           __ptext24 47C2  
                         __ptext16 3AF8                           __ptext41 4376  
                         __ptext33 29F2                           __ptext25 47CC  
                         __ptext17 2EA4                           __ptext50 3F78  
                         __ptext42 25A0                           __ptext34 1F7C  
                         __ptext26 3DD2                           __ptext18 3B60  
                         __ptext51 31C0                           __ptext43 422A  
                         __ptext35 3F36                           __ptext27 2472  
                         __ptext19 47A4                           __ptext60 4542  
                         __ptext52 470E                           __ptext44 4692  
                         __ptext36 3E68                           __ptext28 434A  
                         __ptext61 3CE2                           __ptext53 3C84  
                         __ptext45 3FBA                           __ptext37 3BC8  
                         __ptext29 4036                           __ptext70 4560  
                         __ptext62 4656                           __ptext54 47D6  
                         __ptext46 387C                           __ptext38 1C9A  
                         __ptext71 481C                           __ptext63 3790  
                         __ptext55 47E0                           __ptext47 4070  
                         __ptext39 3C26                           __ptext80 350C  
                         __ptext72 471E                           __ptext64 3D32  
                         __ptext56 47F2                           __ptext48 33C8  
                         __ptext81 418A                           __ptext73 466A  
                         __ptext65 2BDE                           __ptext57 4444  
                         __ptext49 47EA                           __ptext90 46B6  
                         __ptext82 41C0                           __ptext74 472E  
                         __ptext66 4788                           __ptext58 477A  
                         __ptext91 446A                           __ptext83 43F4  
                         __ptext75 480E                           __ptext67 3806  
                         __ptext59 43CC                           __ptext92 4796  
                         __ptext84 47FA                           __ptext76 4820  
                         __ptext68 45E8                           __ptext93 4490  
                         __ptext85 4502                           __ptext77 4824  
                         __ptext69 2CCC                           __ptext94 44B6  
                         __ptext86 45D0                           __ptext78 45FE  
                         __ptext95 441C                           __ptext87 46A4  
                         __ptext79 457E                           __ptext96 459C  
                         __ptext88 41F6                           __ptext97 467E  
                         __ptext89 4614                     OpenPWM5@period 0070  
                         __ptext98 3714                           __ptext99 3322  
                   ??_GetCharRxBuf 0076                     ??_GetCharTxBuf 0031  
                         _pow$3811 00BB                           _pow$3812 00BE  
               SetDCPWM5@dutycycle 0070               __size_of_SetUnipolar 0006  
                    __size_of_main 061E                     Delay1TCYx@unit 0070  
 __size_of_NormaliseSensorReadings 0076            __size_of_ReadCharEEPROM 0010  
                 ?_WriteCharEEPROM 0073                      ??_Delay1KTCYx 0070  
            __size_ofi1_SetChanADC 0016                       i1_ConvertADC 4828  
   __end_of_ReadAccumulatedCurrent 25A0                _MillisecondTimerISR 45B6  
                  _LoadCalibration 1C9A                      _USART1_Status 0019  
                ??_ConfigureTimer0 0074                  ??_ConfigureTimer1 0074  
                ??_ConfigureTimer2 0071                           exp@coeff 1001  
          __size_of_ReadEchoLength 000A                           log@coeff 101F  
        SendBattCurrentAcc@reading 0078              __CFG_ADDRBW$ADDR20BIT 000000  
     NormaliseSensorReadings@index 0074                _GenerateCalibration 25A0  
                       _INTCONbits 000FF2                        ??_eval_poly 009E  
                   ??_EnableMotors 0070                  _Rx_chars_received 0014  
                       _PB1pressed 3C84                         _PB2pressed 3BC8  
                    OWReset@result 0070               __end_of_Delay10KTCYx 4560  
             ?_MillisecondTimerISR 002B                           intlevel1 0000  
                         intlevel2 0000            _CalculateSensorStatuses 2BDE  
  __end_of_ResetAccumulatedCurrent 434A        __size_of_SendBattCurrentAcc 00E0  
                    ??_OWWriteByte 0071                      ?_ConfigureADC 002B  
                    ?_ConfigurePWM 002B                      _LoadPIDValues 29F2  
         __size_of_SendBattCurrent 0068               ?_GenerateCalibration 002B  
                SetChanADC@channel 0071                         _RCSTA1bits 000FAB  
     __size_of_ConfigureUltrasound 0028                    WriteEEPROM@data 0072  
                     i1_SetChanADC 462A                      _Rx_msg_length 0016  
           __size_of_SetADCChannel 00EE              SendStatus@status_code 0078  
                ??i1_SetADCChannel 002D           __end_of_SetReverseMotorL 4818  
                    ??_GetDistance 0071           __size_of_SendBattVoltage 0068  
        __size_of_CommandAvailable 000E      SendBattVoltageInitial@reading 0078  
            __end_of_SendThreshold 38E8                         _PID_output 00DD  
     __size_of_SetDirectionForward 0006                __end_of_Delay1KTCYx 4614  
         SendOffsets@offsets_array 0078             __size_of_BusySensorAcq 0010  
    __size_of_SendDefaultPIDValues 006A             __size_of_ReadIntEEPROM 005E  
            ??_MillisecondTimerISR 0046               _sensor_threshold_ptr 00EE  
                   ??_ConfigureADC 0075                     ??_ConfigurePWM 0071  
                   ?_LoadPIDValues 002B                    OWWriteByte@byte 0071  
        __size_of_CalibrateOffsets 0076              ??_GenerateCalibration 007D  
           __size_of_UltrasoundISR 0032               __size_of_Write1USART 0016  
                     _put_Rx_index 001D                     _WirelessTx_ISR 44DC  
              _SendStoredPIDValues 38E8            __end_of_LoadCalibration 1E20  
                     _put_Tx_index 001E  
