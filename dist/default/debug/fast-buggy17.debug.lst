

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 12 21:15:27 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   118                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   119  0000                     
   120                           	psect	smallconst
   121  001000                     __psmallconst:
   122                           	opt stack 0
   123  001000  00                 	db	0
   124  001001                     exp@coeff:
   125                           	opt stack 0
   126  001001  00                 	db	0
   127  001002  80                 	db	128
   128  001003  3F                 	db	63
   129  001004  72                 	db	114
   130  001005  31                 	db	49
   131  001006  3F                 	db	63
   132  001007  FE                 	db	254
   133  001008  75                 	db	117
   134  001009  3E                 	db	62
   135  00100A  58                 	db	88
   136  00100B  63                 	db	99
   137  00100C  3D                 	db	61
   138  00100D  95                 	db	149
   139  00100E  1D                 	db	29
   140  00100F  3C                 	db	60
   141  001010  C5                 	db	197
   142  001011  AE                 	db	174
   143  001012  3A                 	db	58
   144  001013  79                 	db	121
   145  001014  21                 	db	33
   146  001015  39                 	db	57
   147  001016  94                 	db	148
   148  001017  80                 	db	128
   149  001018  37                 	db	55
   150  001019  93                 	db	147
   151  00101A  A7                 	db	167
   152  00101B  35                 	db	53
   153  00101C  56                 	db	86
   154  00101D  15                 	db	21
   155  00101E  34                 	db	52
   156  00101F                     __end_ofexp@coeff:
   157                           	opt stack 0
   158  00101F                     log@coeff:
   159                           	opt stack 0
   160  00101F  00                 	db	0
   161  001020  00                 	db	0
   162  001021  00                 	db	0
   163  001022  00                 	db	0
   164  001023  80                 	db	128
   165  001024  3F                 	db	63
   166  001025  F0                 	db	240
   167  001026  FF                 	db	255
   168  001027  BE                 	db	190
   169  001028  E2                 	db	226
   170  001029  A9                 	db	169
   171  00102A  3E                 	db	62
   172  00102B  83                 	db	131
   173  00102C  76                 	db	118
   174  00102D  BE                 	db	190
   175  00102E  AE                 	db	174
   176  00102F  2B                 	db	43
   177  001030  3E                 	db	62
   178  001031  3C                 	db	60
   179  001032  C3                 	db	195
   180  001033  BD                 	db	189
   181  001034  D2                 	db	210
   182  001035  13                 	db	19
   183  001036  3D                 	db	61
   184  001037  78                 	db	120
   185  001038  D3                 	db	211
   186  001039  BB                 	db	187
   187  00103A                     __end_oflog@coeff:
   188                           	opt stack 0
   189  00103A  00                 	db	0	; dummy byte at the end
   190  0000                     
   191                           	psect	nvBANK0
   192  0000EA                     __pnvBANK0:
   193                           	opt stack 0
   194  0000EA                     _convert_cm:
   195                           	opt stack 0
   196  0000EA                     	ds	3
   197  0000ED                     _convert_in:
   198                           	opt stack 0
   199  0000ED                     	ds	3
   200  0000F0                     _sensor_threshold_ptr:
   201                           	opt stack 0
   202  0000F0                     	ds	2
   203  0000                     _CCP4CON	set	3955
   204  0000                     _CCP5CON	set	3952
   205  0000                     _CCPR4L	set	3956
   206  0000                     _CCPR5L	set	3953
   207  0000                     _LATDbits	set	3980
   208  0000                     _LATE	set	3981
   209  0000                     _LATEbits	set	3981
   210  0000                     _LATJ	set	3985
   211  0000                     _PORTBbits	set	3969
   212  0000                     _PR4	set	3959
   213  0000                     _SPBRGH1	set	3967
   214  0000                     _T4CONbits	set	3958
   215  0000                     _TRISA	set	3986
   216  0000                     _TRISB	set	3987
   217  0000                     _TRISC	set	3988
   218  0000                     _TRISCbits	set	3988
   219  0000                     _TRISD	set	3989
   220  0000                     _TRISE	set	3990
   221  0000                     _TRISG	set	3992
   222  0000                     _TRISGbits	set	3992
   223  0000                     _TRISJ	set	3994
   224  0000                     _ADCON0	set	4034
   225  0000                     _ADCON0bits	set	4034
   226  0000                     _ADCON1	set	4033
   227  0000                     _ADCON2	set	4032
   228  0000                     _ADRESH	set	4036
   229  0000                     _ADRESL	set	4035
   230  0000                     _EEADR	set	4009
   231  0000                     _EEADRH	set	4010
   232  0000                     _EECON1bits	set	4006
   233  0000                     _EECON2	set	4007
   234  0000                     _EEDATA	set	4008
   235  0000                     _IPR1bits	set	3999
   236  0000                     _PIE1bits	set	3997
   237  0000                     _PIR1bits	set	3998
   238  0000                     _PR2	set	4043
   239  0000                     _RCONbits	set	4048
   240  0000                     _RCSTA1	set	4011
   241  0000                     _RCSTA1bits	set	4011
   242  0000                     _SPBRG1	set	4015
   243  0000                     _T1CON	set	4045
   244  0000                     _T1CONbits	set	4045
   245  0000                     _T2CON	set	4042
   246  0000                     _T2CONbits	set	4042
   247  0000                     _T3CONbits	set	4017
   248  0000                     _TMR1H	set	4047
   249  0000                     _TMR1L	set	4046
   250  0000                     _TMR2	set	4044
   251  0000                     _TXREG1	set	4013
   252  0000                     _TXSTA1	set	4012
   253  0000                     _TXSTA1bits	set	4012
   254  0000                     _T0CON	set	4053
   255  0000                     _T0CONbits	set	4053
   256  0000                     _TMR0H	set	4055
   257  0000                     _TMR0L	set	4054
   258  0000                     _INTCON2bits	set	4081
   259  0000                     _INTCON3bits	set	4080
   260  0000                     _INTCONbits	set	4082
   261                           
   262                           ; #config settings
   263  0000                     
   264                           	psect	cinit
   265  003414                     __pcinit:
   266                           	opt stack 0
   267  003414                     start_initialization:
   268                           	opt stack 0
   269  003414                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Clear objects allocated to BANK1 (20 bytes)
   273  003414  EE01  F01C         	lfsr	0,__pbssBANK1
   274  003418  0E14               	movlw	20
   275  00341A                     clear_0:
   276  00341A  6AEE               	clrf	postinc0,c
   277  00341C  06E8               	decf	wreg,f,c
   278  00341E  E1FD               	bnz	clear_0
   279                           
   280                           ; Clear objects allocated to BANK0 (56 bytes)
   281  003420  EE00  F0B2         	lfsr	0,__pbssBANK0
   282  003424  0E38               	movlw	56
   283  003426                     clear_1:
   284  003426  6AEE               	clrf	postinc0,c
   285  003428  06E8               	decf	wreg,f,c
   286  00342A  E1FD               	bnz	clear_1
   287                           
   288                           ; Clear objects allocated to COMRAM (36 bytes)
   289  00342C  EE00  F001         	lfsr	0,__pbssCOMRAM
   290  003430  0E24               	movlw	36
   291  003432                     clear_2:
   292  003432  6AEE               	clrf	postinc0,c
   293  003434  06E8               	decf	wreg,f,c
   294  003436  E1FD               	bnz	clear_2
   295  003438                     end_of_initialization:
   296                           	opt stack 0
   297  003438                     __end_of__initialization:
   298                           	opt stack 0
   299  003438  0100               	movlb	0
   300  00343A  EF71  F00A         	goto	_main	;jump to C main() function
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           
   304                           	psect	bssCOMRAM
   305  000001                     __pbssCOMRAM:
   306                           	opt stack 0
   307  000001                     _SystemClock:
   308                           	opt stack 0
   309  000001                     	ds	6
   310  000007                     _DCmotorL:
   311                           	opt stack 0
   312  000007                     	ds	2
   313  000009                     _DCmotorR:
   314                           	opt stack 0
   315  000009                     	ds	2
   316  00000B                     _echo_time:
   317                           	opt stack 0
   318  00000B                     	ds	2
   319  00000D                     _millisecond_COUNT0:
   320                           	opt stack 0
   321  00000D                     	ds	2
   322  00000F                     _millisecond_COUNT1:
   323                           	opt stack 0
   324  00000F                     	ds	2
   325  000011                     _millisecond_COUNT2:
   326                           	opt stack 0
   327  000011                     	ds	2
   328  000013                     _Tx_complete:
   329                           	opt stack 0
   330  000013                     	ds	1
   331  000014                     _USART1_Status:
   332                           	opt stack 0
   333  000014                     	ds	1
   334  000015                     _character:
   335                           	opt stack 0
   336  000015                     	ds	1
   337  000016                     _echo_acq_done:
   338                           	opt stack 0
   339  000016                     	ds	1
   340  000017                     _get_Tx_index:
   341                           	opt stack 0
   342  000017                     	ds	1
   343  000018                     _put_Tx_index:
   344                           	opt stack 0
   345  000018                     	ds	1
   346  000019                     _second_rollover_flag:
   347                           	opt stack 0
   348  000019                     	ds	1
   349  00001A                     _sensor_acq_done:
   350                           	opt stack 0
   351  00001A                     	ds	1
   352  00001B                     _sensor_acq_index:
   353                           	opt stack 0
   354  00001B                     	ds	1
   355  00001C                     _system_clock_enable:
   356                           	opt stack 0
   357  00001C                     	ds	1
   358  00001D                     _sensor_status:
   359                           	opt stack 0
   360  00001D                     	ds	5
   361  000022                     _sensor_threshold:
   362                           	opt stack 0
   363  000022                     	ds	2
   364  000024                     _line_mode:
   365                           	opt stack 0
   366  000024                     	ds	1
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	bssBANK0
   371  0000B2                     __pbssBANK0:
   372                           	opt stack 0
   373  0000B2                     _Tx_buffer:
   374                           	opt stack 0
   375  0000B2                     	ds	20
   376  0000C6                     _sensor_readings_normalised:
   377                           	opt stack 0
   378  0000C6                     	ds	10
   379  0000D0                     _sensor_readings_raw:
   380                           	opt stack 0
   381  0000D0                     	ds	10
   382  0000DA                     _PID_output:
   383                           	opt stack 0
   384  0000DA                     	ds	2
   385  0000DC                     _errno:
   386                           	opt stack 0
   387  0000DC                     	ds	2
   388  0000DE                     _sensor_offsets:
   389                           	opt stack 0
   390  0000DE                     	ds	10
   391  0000E8                     _PID_error:
   392                           	opt stack 0
   393  0000E8                     	ds	2
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           
   397                           	psect	bssBANK1
   398  00011C                     __pbssBANK1:
   399                           	opt stack 0
   400  00011C                     _Rx_buffer:
   401                           	opt stack 0
   402  00011C                     	ds	20
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	cstackBANK1
   407  000100                     __pcstackBANK1:
   408                           	opt stack 0
   409  000100                     ?_pow:
   410                           	opt stack 0
   411  000100                     pow@x:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x0
   415  000100                     	ds	3
   416  000103                     pow@y:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x3
   420  000103                     	ds	3
   421  000106                     _pow$3189:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x6
   425  000106                     	ds	3
   426  000109                     _pow$3190:
   427                           	opt stack 0
   428                           
   429                           ; 3 bytes @ 0x9
   430  000109                     	ds	3
   431  00010C                     pow@sign:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0xC
   435  00010C                     	ds	1
   436  00010D                     pow@yi:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0xD
   440  00010D                     	ds	4
   441  000111                     _CalculateSensorSums$3188:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x11
   445  000111                     	ds	3
   446  000114                     CalculateSensorSums@sum:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x14
   450  000114                     	ds	1
   451  000115                     CalculateSensorSums@index:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x15
   455  000115                     	ds	1
   456  000116                     main@loop_count:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x16
   460  000116                     	ds	1
   461  000117                     main@sensor_sum_ptr:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x17
   465  000117                     	ds	2
   466  000119                     main@line_mode_ptr:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x19
   470  000119                     	ds	2
   471  00011B                     main@sensor_sum:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x1B
   475  00011B                     	ds	1
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           
   479                           	psect	cstackBANK0
   480  000060                     __pcstackBANK0:
   481                           	opt stack 0
   482  000060                     ??_isrHP:
   483                           
   484                           ; 0 bytes @ 0x0
   485  000060                     	ds	14
   486  00006E                     ??_NormaliseSensorReadings:
   487  00006E                     ??_CalculateSensorStatuses:
   488  00006E                     ?_ReadMillis2:
   489                           	opt stack 0
   490  00006E                     ?_ReadADC:
   491                           	opt stack 0
   492  00006E                     ?_ReadMillis0:
   493                           	opt stack 0
   494  00006E                     ?_CalculateSensorError:
   495                           	opt stack 0
   496  00006E                     ?___wmul:
   497                           	opt stack 0
   498  00006E                     ?___awmod:
   499                           	opt stack 0
   500  00006E                     ?___ftpack:
   501                           	opt stack 0
   502  00006E                     ?_frexp:
   503                           	opt stack 0
   504  00006E                     ?___ftneg:
   505                           	opt stack 0
   506  00006E                     OpenADC@config2:
   507                           	opt stack 0
   508  00006E                     SetChanADC@channel:
   509                           	opt stack 0
   510  00006E                     Delay10KTCYx@unit:
   511                           	opt stack 0
   512  00006E                     CalculateSensorError@sum:
   513                           	opt stack 0
   514  00006E                     DisplaySensorStatuses@status_array:
   515                           	opt stack 0
   516  00006E                     WriteEEPROM@address:
   517                           	opt stack 0
   518  00006E                     ReadEEPROM@address:
   519                           	opt stack 0
   520  00006E                     SetDCPWM4@dutycycle:
   521                           	opt stack 0
   522  00006E                     SetDCPWM5@dutycycle:
   523                           	opt stack 0
   524  00006E                     WriteTimer0@timer0:
   525                           	opt stack 0
   526  00006E                     WriteTimer1@timer1:
   527                           	opt stack 0
   528  00006E                     Open1USART@spbrg:
   529                           	opt stack 0
   530  00006E                     ___wmul@multiplier:
   531                           	opt stack 0
   532  00006E                     ___awmod@dividend:
   533                           	opt stack 0
   534  00006E                     ConfigureUltrasound@echo_to_cm:
   535                           	opt stack 0
   536  00006E                     ___ftpack@arg:
   537                           	opt stack 0
   538  00006E                     ___ftge@ff1:
   539                           	opt stack 0
   540  00006E                     ___ftneg@f1:
   541                           	opt stack 0
   542  00006E                     frexp@value:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0xE
   546  00006E                     	ds	1
   547  00006F                     SetADCChannel@channel:
   548                           	opt stack 0
   549  00006F                     OpenADC@portconfig:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0xF
   553  00006F                     	ds	1
   554  000070                     ??_OpenADC:
   555  000070                     ??_ReadADC:
   556  000070                     ??_SetDCPWM5:
   557  000070                     ??_SetDCPWM4:
   558  000070                     ??_DisplaySensorStatuses:
   559  000070                     ??_CalibrateOffsets:
   560  000070                     ?_ReadIntEEPROM:
   561                           	opt stack 0
   562  000070                     WriteEEPROM@data:
   563                           	opt stack 0
   564  000070                     ReadIntEEPROM@address:
   565                           	opt stack 0
   566  000070                     ReadCharEEPROM@address:
   567                           	opt stack 0
   568  000070                     WriteTimer0@timer:
   569                           	opt stack 0
   570  000070                     WriteTimer1@timer:
   571                           	opt stack 0
   572  000070                     ___wmul@multiplicand:
   573                           	opt stack 0
   574  000070                     ___awmod@divisor:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x10
   578  000070                     	ds	1
   579  000071                     ___ftpack@exp:
   580                           	opt stack 0
   581  000071                     WriteIntEEPROM@address:
   582                           	opt stack 0
   583  000071                     WriteCharEEPROM@address:
   584                           	opt stack 0
   585  000071                     frexp@eptr:
   586                           	opt stack 0
   587  000071                     ConfigureUltrasound@echo_to_in:
   588                           	opt stack 0
   589  000071                     ___ftge@ff2:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x11
   593  000071                     	ds	1
   594  000072                     ??_ReadIntEEPROM:
   595  000072                     CalibrateOffsets@index:
   596                           	opt stack 0
   597  000072                     ___awmod@counter:
   598                           	opt stack 0
   599  000072                     ___ftpack@sign:
   600                           	opt stack 0
   601  000072                     SetDCPWM4@DCycle:
   602                           	opt stack 0
   603  000072                     SetDCPWM5@DCycle:
   604                           	opt stack 0
   605  000072                     ___wmul@product:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x12
   609  000072                     	ds	1
   610  000073                     ??___ftpack:
   611  000073                     ??_frexp:
   612  000073                     WriteCharEEPROM@data:
   613                           	opt stack 0
   614  000073                     ___awmod@sign:
   615                           	opt stack 0
   616  000073                     WriteIntEEPROM@data:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x13
   620  000073                     	ds	1
   621  000074                     ??___ftge:
   622  000074                     PutCharTxBuf@ch:
   623                           	opt stack 0
   624  000074                     SetDCMotorL@duty_cycle:
   625                           	opt stack 0
   626  000074                     SetDCMotorR@duty_cycle:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x14
   630  000074                     	ds	1
   631  000075                     SendStatus@status_code:
   632                           	opt stack 0
   633  000075                     ReadIntEEPROM@data:
   634                           	opt stack 0
   635  000075                     SendLineMode@line_mode:
   636                           	opt stack 0
   637  000075                     SendOffsets@offsets_array:
   638                           	opt stack 0
   639  000075                     SendThreshold@sensor_threshold:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x15
   643  000075                     	ds	1
   644  000076                     ?___ftdiv:
   645                           	opt stack 0
   646  000076                     ?___awtoft:
   647                           	opt stack 0
   648  000076                     ?___lbtoft:
   649                           	opt stack 0
   650  000076                     ?___lltoft:
   651                           	opt stack 0
   652  000076                     SetDCMotorPID@PIDoutput:
   653                           	opt stack 0
   654  000076                     ___awtoft@c:
   655                           	opt stack 0
   656  000076                     ___ftdiv@f1:
   657                           	opt stack 0
   658  000076                     ___lltoft@c:
   659                           	opt stack 0
   660                           
   661                           ; 4 bytes @ 0x16
   662  000076                     	ds	1
   663  000077                     ??_SendOffsets:
   664  000077                     ??_SendThreshold:
   665                           
   666                           ; 0 bytes @ 0x17
   667  000077                     	ds	1
   668  000078                     ??_SetDCMotorPID:
   669                           
   670                           ; 0 bytes @ 0x18
   671  000078                     	ds	1
   672  000079                     ?___ftmul:
   673                           	opt stack 0
   674  000079                     SendOffsets@index:
   675                           	opt stack 0
   676  000079                     ___ftdiv@f2:
   677                           	opt stack 0
   678  000079                     ___ftmul@f1:
   679                           	opt stack 0
   680                           
   681                           ; 3 bytes @ 0x19
   682  000079                     	ds	1
   683  00007A                     ??_GenerateCalibration:
   684  00007A                     ??___lltoft:
   685                           
   686                           ; 0 bytes @ 0x1A
   687  00007A                     	ds	2
   688  00007C                     ??___ftdiv:
   689  00007C                     GenerateCalibration@index:
   690                           	opt stack 0
   691  00007C                     ___ftmul@f2:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x1C
   695  00007C                     	ds	1
   696  00007D                     ??_LoadCalibration:
   697                           
   698                           ; 0 bytes @ 0x1D
   699  00007D                     	ds	2
   700  00007F                     ??___ftmul:
   701  00007F                     LoadCalibration@index:
   702                           	opt stack 0
   703  00007F                     ___ftdiv@cntr:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x1F
   707  00007F                     	ds	1
   708  000080                     ___ftdiv@f3:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x20
   712  000080                     	ds	2
   713  000082                     ___ftmul@exp:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x22
   717  000082                     	ds	1
   718  000083                     ___ftdiv@exp:
   719                           	opt stack 0
   720  000083                     ___ftmul@f3_as_product:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x23
   724  000083                     	ds	1
   725  000084                     ___ftdiv@sign:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x24
   729  000084                     	ds	2
   730  000086                     ___ftmul@cntr:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x26
   734  000086                     	ds	1
   735  000087                     ___ftmul@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x27
   739  000087                     	ds	1
   740  000088                     ?___ftadd:
   741                           	opt stack 0
   742  000088                     ?___fttol:
   743                           	opt stack 0
   744  000088                     ___ftadd@f1:
   745                           	opt stack 0
   746  000088                     ___fttol@f1:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x28
   750  000088                     	ds	3
   751  00008B                     ___ftadd@f2:
   752                           	opt stack 0
   753                           
   754                           ; 3 bytes @ 0x2B
   755  00008B                     	ds	1
   756  00008C                     ??___fttol:
   757                           
   758                           ; 0 bytes @ 0x2C
   759  00008C                     	ds	2
   760  00008E                     ??___ftadd:
   761                           
   762                           ; 0 bytes @ 0x2E
   763  00008E                     	ds	3
   764  000091                     ___ftadd@sign:
   765                           	opt stack 0
   766  000091                     ___fttol@sign1:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x31
   770  000091                     	ds	1
   771  000092                     ___ftadd@exp2:
   772                           	opt stack 0
   773  000092                     ___fttol@lval:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x32
   777  000092                     	ds	1
   778  000093                     ___ftadd@exp1:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x33
   782  000093                     	ds	1
   783  000094                     ?___ftsub:
   784                           	opt stack 0
   785  000094                     ?_eval_poly:
   786                           	opt stack 0
   787  000094                     ___ftsub@f1:
   788                           	opt stack 0
   789  000094                     eval_poly@x:
   790                           	opt stack 0
   791                           
   792                           ; 3 bytes @ 0x34
   793  000094                     	ds	2
   794  000096                     ___fttol@exp1:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x36
   798  000096                     	ds	1
   799  000097                     ?___altoft:
   800                           	opt stack 0
   801  000097                     eval_poly@d:
   802                           	opt stack 0
   803  000097                     ___ftsub@f2:
   804                           	opt stack 0
   805  000097                     ___altoft@c:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x37
   809  000097                     	ds	2
   810  000099                     eval_poly@n:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x39
   814  000099                     	ds	2
   815  00009B                     ??_eval_poly:
   816  00009B                     ??___altoft:
   817                           
   818                           ; 0 bytes @ 0x3B
   819  00009B                     	ds	2
   820  00009D                     eval_poly@res:
   821                           	opt stack 0
   822                           
   823                           ; 3 bytes @ 0x3D
   824  00009D                     	ds	2
   825  00009F                     ___altoft@exp:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x3F
   829  00009F                     	ds	1
   830  0000A0                     ?_log:
   831                           	opt stack 0
   832  0000A0                     ?_ldexp:
   833                           	opt stack 0
   834  0000A0                     ___altoft@sign:
   835                           	opt stack 0
   836  0000A0                     ldexp@value:
   837                           	opt stack 0
   838  0000A0                     log@x:
   839                           	opt stack 0
   840                           
   841                           ; 3 bytes @ 0x40
   842  0000A0                     	ds	1
   843  0000A1                     ?_floor:
   844                           	opt stack 0
   845  0000A1                     floor@x:
   846                           	opt stack 0
   847                           
   848                           ; 3 bytes @ 0x41
   849  0000A1                     	ds	2
   850  0000A3                     ldexp@newexp:
   851                           	opt stack 0
   852  0000A3                     log@exponent:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x43
   856  0000A3                     	ds	1
   857  0000A4                     floor@i:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x44
   861  0000A4                     	ds	1
   862  0000A5                     ??_ldexp:
   863                           
   864                           ; 0 bytes @ 0x45
   865  0000A5                     	ds	2
   866  0000A7                     floor@expon:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x47
   870  0000A7                     	ds	2
   871  0000A9                     ?_exp:
   872                           	opt stack 0
   873  0000A9                     exp@x:
   874                           	opt stack 0
   875                           
   876                           ; 3 bytes @ 0x49
   877  0000A9                     	ds	3
   878  0000AC                     _exp$3191:
   879                           	opt stack 0
   880                           
   881                           ; 3 bytes @ 0x4C
   882  0000AC                     	ds	3
   883  0000AF                     exp@exponent:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x4F
   887  0000AF                     	ds	2
   888  0000B1                     exp@sign:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x51
   892  0000B1                     	ds	1
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           
   896                           	psect	cstackCOMRAM
   897  000025                     __pcstackCOMRAM:
   898                           	opt stack 0
   899  000025                     ??i1_SetChanADC:
   900  000025                     ?i1_ReadADC:
   901                           	opt stack 0
   902  000025                     ?i1___awmod:
   903                           	opt stack 0
   904  000025                     Write1USART@data:
   905                           	opt stack 0
   906  000025                     i1___awmod@dividend:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x0
   910  000025                     	ds	1
   911  000026                     i1SetChanADC@channel:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x1
   915  000026                     	ds	1
   916  000027                     ??i1_ReadADC:
   917  000027                     i1SetADCChannel@channel:
   918                           	opt stack 0
   919  000027                     i1___awmod@divisor:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x2
   923  000027                     	ds	2
   924  000029                     i1___awmod@counter:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x4
   928  000029                     	ds	1
   929  00002A                     i1___awmod@sign:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x5
   933  00002A                     	ds	1
   934  00002B                     ??_GetCharTxBuf:
   935                           
   936                           ; 0 bytes @ 0x6
   937  00002B                     	ds	1
   938  00002C                     GetCharTxBuf@ch:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x7
   942  00002C                     	ds	1
   943  00002D                     ??_isrLP:
   944                           
   945                           ; 0 bytes @ 0x8
   946  00002D                     	ds	17
   947  00003E                     i2WriteTimer0@timer0:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x19
   951  00003E                     	ds	2
   952  000040                     i2WriteTimer0@timer:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0x1B
   956  000040                     	ds	2
   957  000042                     ??_SetChanADC:
   958  000042                     ??_Delay10KTCYx:
   959  000042                     ??_PutCharTxBuf:
   960  000042                     NormaliseSensorReadings@index:
   961                           	opt stack 0
   962  000042                     CalculateSensorStatuses@index:
   963                           	opt stack 0
   964  000042                     DisplaySensorStatuses@index:
   965                           	opt stack 0
   966  000042                     FlushTxBuf@index:
   967                           	opt stack 0
   968  000042                     FlushRxBuf@index:
   969                           	opt stack 0
   970  000042                     OpenADC@config:
   971                           	opt stack 0
   972  000042                     OpenPWM4@period:
   973                           	opt stack 0
   974  000042                     OpenPWM5@period:
   975                           	opt stack 0
   976  000042                     OpenTimer0@config:
   977                           	opt stack 0
   978  000042                     OpenTimer1@config:
   979                           	opt stack 0
   980  000042                     OpenTimer2@config:
   981                           	opt stack 0
   982  000042                     Open1USART@config:
   983                           	opt stack 0
   984  000042                     ___awtoft@sign:
   985                           	opt stack 0
   986  000042                     ___lbtoft@c:
   987                           	opt stack 0
   988  000042                     ___lltoft@exp:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x1D
   992  000042                     	ds	1
   993  000043                     postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           
   996                           ; 0 bytes @ 0x1E
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 672 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  line_mode_pt    2   25[BANK1 ] PTR unsigned char 
  1007 ;;		 -> line_mode(1), 
  1008 ;;  sensor_sum_p    2   23[BANK1 ] PTR unsigned char 
  1009 ;;		 -> main@sensor_sum(1), 
  1010 ;;  echo_length     2    0        unsigned int 
  1011 ;;  sensor_sum      1   27[BANK1 ] unsigned char 
  1012 ;;  loop_count      1   22[BANK1 ] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;		None               void
  1015 ;; Registers used:
  1016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;Total ram usage:        6 bytes
  1027 ;; Hardware stack levels required when called:   13
  1028 ;; This function calls:
  1029 ;;		_BusySensorAcq
  1030 ;;		_CalculateSensorError
  1031 ;;		_CalculateSensorStatuses
  1032 ;;		_CalculateSensorSums
  1033 ;;		_ConfigureADC
  1034 ;;		_ConfigureBuggyIO
  1035 ;;		_ConfigureInterrupts
  1036 ;;		_ConfigurePWM
  1037 ;;		_ConfigureTimer0
  1038 ;;		_ConfigureTimer1
  1039 ;;		_ConfigureTimer2
  1040 ;;		_ConfigureUltrasound
  1041 ;;		_ConfigureWireless
  1042 ;;		_DisableMotors
  1043 ;;		_DisplaySensorStatuses
  1044 ;;		_EnableMotors
  1045 ;;		_EnableSensorLEDS
  1046 ;;		_FlashLEDS
  1047 ;;		_GenerateCalibration
  1048 ;;		_GetSensorReadings
  1049 ;;		_LoadCalibration
  1050 ;;		_NormaliseSensorReadings
  1051 ;;		_PB1pressed
  1052 ;;		_PB2pressed
  1053 ;;		_ReadMillis0
  1054 ;;		_ResetMillis0
  1055 ;;		_SendLineMode
  1056 ;;		_SendOffsets
  1057 ;;		_SendStatus
  1058 ;;		_SendThreshold
  1059 ;;		_SetDCMotorPID
  1060 ;;		_SetDirectionForward
  1061 ;;		_SetUnipolar
  1062 ;;		_StopMotors
  1063 ;;		___wmul
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text0
  1070  0014E2                     __ptext0:
  1071                           	opt stack 0
  1072  0014E2                     _main:
  1073                           	opt stack 18
  1074                           
  1075                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 675: unsigned char sensor_sum, loop_count = 0;
  1076                           
  1077                           ;incstack = 0
  1078  0014E2  0E00               	movlw	0
  1079  0014E4  0101               	movlb	1	; () banked
  1080  0014E6  6F16               	movwf	main@loop_count& (0+255),b
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 676: unsigned int echo_length;
  1084                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 679: unsigned char *sensor_sum_ptr, *line_mode_pt
      +                          r;
  1085                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 680: sensor_sum_ptr = &sensor_sum;
  1086  0014E8  0E1B               	movlw	low main@sensor_sum
  1087  0014EA  0101               	movlb	1	; () banked
  1088  0014EC  6F17               	movwf	main@sensor_sum_ptr& (0+255),b
  1089  0014EE  0E01               	movlw	high main@sensor_sum
  1090  0014F0  0101               	movlb	1	; () banked
  1091  0014F2  6F18               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1092                           
  1093                           ; BSR set to: 1
  1094                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 681: line_mode_ptr = &line_mode;
  1095  0014F4  0E24               	movlw	low _line_mode
  1096  0014F6  0101               	movlb	1	; () banked
  1097  0014F8  6F19               	movwf	main@line_mode_ptr& (0+255),b
  1098  0014FA  0E00               	movlw	high _line_mode
  1099  0014FC  0101               	movlb	1	; () banked
  1100  0014FE  6F1A               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1101                           
  1102                           ; BSR set to: 1
  1103                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 683: sensor_threshold_ptr = &sensor_threshold;
  1104  001500  0E22               	movlw	low _sensor_threshold
  1105  001502  0100               	movlb	0	; () banked
  1106  001504  6FF0               	movwf	_sensor_threshold_ptr& (0+255),b
  1107  001506  0E00               	movlw	high _sensor_threshold
  1108  001508  0100               	movlb	0	; () banked
  1109  00150A  6FF1               	movwf	(_sensor_threshold_ptr+1)& (0+255),b
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 685: ConfigureUltrasound(0.0137, 0.054);
  1113  00150C  0E76               	movlw	118
  1114  00150E  0100               	movlb	0	; () banked
  1115  001510  6F6E               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1116  001512  0E60               	movlw	96
  1117  001514  0100               	movlb	0	; () banked
  1118  001516  6F6F               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1119  001518  0E3C               	movlw	60
  1120  00151A  0100               	movlb	0	; () banked
  1121  00151C  6F70               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1122  00151E  0E2F               	movlw	47
  1123  001520  0100               	movlb	0	; () banked
  1124  001522  6F71               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1125  001524  0E5D               	movlw	93
  1126  001526  0100               	movlb	0	; () banked
  1127  001528  6F72               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1128  00152A  0E3D               	movlw	61
  1129  00152C  0100               	movlb	0	; () banked
  1130  00152E  6F73               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1131  001530  ECEB  F01A         	call	_ConfigureUltrasound	;wreg free
  1132                           
  1133                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 686: ConfigureBuggyIO();
  1134  001534  ECF8  F01A         	call	_ConfigureBuggyIO	;wreg free
  1135                           
  1136                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 687: ConfigureInterrupts();
  1137  001538  EC59  F01A         	call	_ConfigureInterrupts	;wreg free
  1138                           
  1139                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 688: ConfigureTimer0();
  1140  00153C  EC29  F01B         	call	_ConfigureTimer0	;wreg free
  1141                           
  1142                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 689: ConfigureTimer1();
  1143  001540  EC12  F01B         	call	_ConfigureTimer1	;wreg free
  1144                           
  1145                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 690: ConfigureTimer2();
  1146  001544  ECD6  F01B         	call	_ConfigureTimer2	;wreg free
  1147                           
  1148                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 691: ConfigurePWM();
  1149  001548  ECB7  F01B         	call	_ConfigurePWM	;wreg free
  1150                           
  1151                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 692: ConfigureADC();
  1152  00154C  EC54  F01B         	call	_ConfigureADC	;wreg free
  1153                           
  1154                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 693: ConfigureWireless();
  1155  001550  EC33  F01A         	call	_ConfigureWireless	;wreg free
  1156                           
  1157                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 695: DisableMotors();
  1158  001554  ECE7  F01B         	call	_DisableMotors	;wreg free
  1159                           
  1160                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 697: SendStatus(0x00);
  1161  001558  0E00               	movlw	0
  1162  00155A  EC29  F019         	call	_SendStatus
  1163                           
  1164                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 702: LATJ = 0x0F;
  1165  00155E  0E0F               	movlw	15
  1166  001560  6E91               	movwf	3985,c	;volatile
  1167                           
  1168                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 703: SendStatus(0x01);
  1169  001562  0E01               	movlw	1
  1170  001564  EC29  F019         	call	_SendStatus
  1171  001568  D000               	goto	l6078
  1172  00156A                     l6078:
  1173                           
  1174                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 706: if(PB1pressed() == 1) {
  1175  00156A  ECEC  F018         	call	_PB1pressed	;wreg free
  1176  00156E  06E8               	decf	wreg,f,c
  1177  001570  A4D8               	btfss	status,2,c
  1178  001572  D003               	goto	l6084
  1179                           
  1180                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 707: line_mode = 0;
  1181  001574  0E00               	movlw	0
  1182  001576  D007               	goto	L1
  1183                           
  1184                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 709: }
  1185                           
  1186                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 708: break;
  1187  001578  D7F8               	goto	l6078
  1188  00157A                     l6084:
  1189                           
  1190                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 710: else if(PB2pressed() == 1) {
  1191  00157A  ECAE  F018         	call	_PB2pressed	;wreg free
  1192  00157E  06E8               	decf	wreg,f,c
  1193  001580  A4D8               	btfss	status,2,c
  1194  001582  D7F3               	goto	l6078
  1195                           
  1196                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 711: line_mode = 1;
  1197  001584  0E01               	movlw	1
  1198  001586                     L1:
  1199  001586  6E24               	movwf	_line_mode,c
  1200                           
  1201                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 712: break;
  1202  001588  D001               	goto	l6088
  1203  00158A  D7EF               	goto	l6078
  1204  00158C                     l6088:
  1205                           
  1206                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 713: }
  1207                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 714: }
  1208                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 716: SendLineMode(line_mode_ptr);
  1209  00158C  C119  F075         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1210  001590  C11A  F076         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1211  001594  EC0B  F019         	call	_SendLineMode	;wreg free
  1212                           
  1213                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 717: FlashLEDS();
  1214  001598  EC1F  F01A         	call	_FlashLEDS	;wreg free
  1215                           
  1216                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 719: EnableSensorLEDS();
  1217  00159C  ECE0  F01B         	call	_EnableSensorLEDS	;wreg free
  1218                           
  1219                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 722: LATJ = 0x07;
  1220  0015A0  0E07               	movlw	7
  1221  0015A2  6E91               	movwf	3985,c	;volatile
  1222                           
  1223                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 723: SendStatus(0x02);
  1224  0015A4  0E02               	movlw	2
  1225  0015A6  EC29  F019         	call	_SendStatus
  1226  0015AA  D000               	goto	l6098
  1227  0015AC                     l6098:
  1228                           
  1229                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 726: if(PB1pressed() == 1) {
  1230  0015AC  ECEC  F018         	call	_PB1pressed	;wreg free
  1231  0015B0  06E8               	decf	wreg,f,c
  1232  0015B2  A4D8               	btfss	status,2,c
  1233  0015B4  D006               	goto	l6106
  1234                           
  1235                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 727: FlashLEDS();
  1236  0015B6  EC1F  F01A         	call	_FlashLEDS	;wreg free
  1237                           
  1238                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 728: GenerateCalibration();
  1239  0015BA  ECC5  F011         	call	_GenerateCalibration	;wreg free
  1240                           
  1241                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 729: break;
  1242  0015BE  D01A               	goto	l6116
  1243                           
  1244                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 730: }
  1245  0015C0  D7F5               	goto	l6098
  1246  0015C2                     l6106:
  1247                           
  1248                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 731: else if(PB2pressed() == 1) {
  1249  0015C2  ECAE  F018         	call	_PB2pressed	;wreg free
  1250  0015C6  06E8               	decf	wreg,f,c
  1251  0015C8  A4D8               	btfss	status,2,c
  1252  0015CA  D7F0               	goto	l6098
  1253                           
  1254                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 732: FlashLEDS();
  1255  0015CC  EC1F  F01A         	call	_FlashLEDS	;wreg free
  1256                           
  1257                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 733: LoadCalibration();
  1258  0015D0  EC65  F015         	call	_LoadCalibration	;wreg free
  1259                           
  1260                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 734: SendOffsets(sensor_offsets);
  1261  0015D4  0EDE               	movlw	low _sensor_offsets
  1262  0015D6  0100               	movlb	0	; () banked
  1263  0015D8  6F75               	movwf	SendOffsets@offsets_array& (0+255),b
  1264  0015DA  0E00               	movlw	high _sensor_offsets
  1265  0015DC  0100               	movlb	0	; () banked
  1266  0015DE  6F76               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1267  0015E0  ECC3  F014         	call	_SendOffsets	;wreg free
  1268                           
  1269                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 735: SendThreshold(sensor_threshold_ptr);
  1270  0015E4  C0F0  F075         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  1271  0015E8  C0F1  F076         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  1272  0015EC  EC1A  F017         	call	_SendThreshold	;wreg free
  1273                           
  1274                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 736: break;
  1275  0015F0  D001               	goto	l6116
  1276  0015F2  D7DC               	goto	l6098
  1277  0015F4                     l6116:
  1278                           
  1279                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 737: }
  1280                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 739: }
  1281                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 741: FlashLEDS();
  1282  0015F4  EC1F  F01A         	call	_FlashLEDS	;wreg free
  1283                           
  1284                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 744: LATJ = 0x01;
  1285  0015F8  0E01               	movlw	1
  1286  0015FA  6E91               	movwf	3985,c	;volatile
  1287                           
  1288                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 745: SendStatus(0x06);
  1289  0015FC  0E06               	movlw	6
  1290  0015FE  EC29  F019         	call	_SendStatus
  1291                           
  1292                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 747: while(PB1pressed() == 0);
  1293  001602  D000               	goto	l6122
  1294  001604                     l6122:
  1295  001604  ECEC  F018         	call	_PB1pressed	;wreg free
  1296  001608  0900               	iorlw	0
  1297  00160A  B4D8               	btfsc	status,2,c
  1298  00160C  D7FB               	goto	l6122
  1299                           
  1300                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 750: PID_error = 0;
  1301  00160E  0E00               	movlw	0
  1302  001610  0100               	movlb	0	; () banked
  1303  001612  6FE9               	movwf	(_PID_error+1)& (0+255),b
  1304  001614  0E00               	movlw	0
  1305  001616  6FE8               	movwf	_PID_error& (0+255),b
  1306                           
  1307                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 751: PID_output = 0;
  1308  001618  0E00               	movlw	0
  1309  00161A  0100               	movlb	0	; () banked
  1310  00161C  6FDB               	movwf	(_PID_output+1)& (0+255),b
  1311  00161E  0E00               	movlw	0
  1312  001620  6FDA               	movwf	_PID_output& (0+255),b
  1313                           
  1314                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 753: LATJ = 0x00;
  1315  001622  0E00               	movlw	0
  1316  001624  6E91               	movwf	3985,c	;volatile
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 755: ResetMillis0();
  1320  001626  ECBE  F01B         	call	_ResetMillis0	;wreg free
  1321                           
  1322                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 757: FlashLEDS();
  1323  00162A  EC1F  F01A         	call	_FlashLEDS	;wreg free
  1324                           
  1325                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 758: SendStatus(0x07);
  1326  00162E  0E07               	movlw	7
  1327  001630  EC29  F019         	call	_SendStatus
  1328                           
  1329                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 760: SetUnipolar();
  1330  001634  ECDA  F01B         	call	_SetUnipolar	;wreg free
  1331                           
  1332                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 761: StopMotors();
  1333  001638  ECB3  F01A         	call	_StopMotors	;wreg free
  1334                           
  1335                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 762: SetDirectionForward();
  1336  00163C  ECDD  F01B         	call	_SetDirectionForward	;wreg free
  1337                           
  1338                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 763: EnableMotors();
  1339  001640  ECE5  F01B         	call	_EnableMotors	;wreg free
  1340  001644  D000               	goto	l6140
  1341  001646                     l6140:
  1342                           
  1343                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 769: GetSensorReadings();
  1344  001646  EC1E  F01B         	call	_GetSensorReadings	;wreg free
  1345                           
  1346                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 771: while(BusySensorAcq());
  1347  00164A  D000               	goto	l6142
  1348  00164C                     l6142:
  1349  00164C  EC92  F01B         	call	_BusySensorAcq	;wreg free
  1350  001650  0900               	iorlw	0
  1351  001652  A4D8               	btfss	status,2,c
  1352  001654  D7FB               	goto	l6142
  1353                           
  1354                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 773: NormaliseSensorReadings();
  1355  001656  EC50  F017         	call	_NormaliseSensorReadings	;wreg free
  1356                           
  1357                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 775: CalculateSensorStatuses();
  1358  00165A  EC38  F012         	call	_CalculateSensorStatuses	;wreg free
  1359                           
  1360                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 776: sensor_sum = CalculateSensorSums();
  1361  00165E  EC70  F014         	call	_CalculateSensorSums	;wreg free
  1362  001662  0101               	movlb	1	; () banked
  1363  001664  6F1B               	movwf	main@sensor_sum& (0+255),b
  1364                           
  1365                           ; BSR set to: 1
  1366                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 779: PID_error = CalculateSensorError(sensor_sum_
      +                          ptr);
  1367  001666  C117  F06E         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1368  00166A  C118  F06F         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1369  00166E  ECBF  F013         	call	_CalculateSensorError	;wreg free
  1370  001672  C06E  F0E8         	movff	?_CalculateSensorError,_PID_error
  1371  001676  C06F  F0E9         	movff	?_CalculateSensorError+1,_PID_error+1
  1372                           
  1373                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 780: PID_output = 13 * PID_error;
  1374  00167A  C0E8  F06E         	movff	_PID_error,___wmul@multiplier
  1375  00167E  C0E9  F06F         	movff	_PID_error+1,___wmul@multiplier+1
  1376  001682  0E00               	movlw	0
  1377  001684  0100               	movlb	0	; () banked
  1378  001686  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1379  001688  0E0D               	movlw	13
  1380  00168A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1381  00168C  EC46  F019         	call	___wmul	;wreg free
  1382  001690  C06E  F0DA         	movff	?___wmul,_PID_output
  1383  001694  C06F  F0DB         	movff	?___wmul+1,_PID_output+1
  1384                           
  1385                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 782: SetDCMotorPID(PID_output);
  1386  001698  C0DA  F076         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1387  00169C  C0DB  F077         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1388  0016A0  EC0A  F013         	call	_SetDCMotorPID	;wreg free
  1389                           
  1390                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 785: DisplaySensorStatuses(sensor_status);
  1391  0016A4  0E1D               	movlw	low _sensor_status
  1392  0016A6  0100               	movlb	0	; () banked
  1393  0016A8  6F6E               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1394  0016AA  0E00               	movlw	high _sensor_status
  1395  0016AC  0100               	movlb	0	; () banked
  1396  0016AE  6F6F               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1397  0016B0  EC04  F018         	call	_DisplaySensorStatuses	;wreg free
  1398                           
  1399                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 853: ResetMillis0();
  1400  0016B4  ECBE  F01B         	call	_ResetMillis0	;wreg free
  1401                           
  1402                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 854: while(ReadMillis0() < 5);
  1403  0016B8  D000               	goto	l6158
  1404  0016BA                     l6158:
  1405  0016BA  ECC3  F01B         	call	_ReadMillis0	;wreg free
  1406  0016BE  0100               	movlb	0	; () banked
  1407  0016C0  516F               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1408  0016C2  E107               	bnz	l6160
  1409  0016C4  0E05               	movlw	5
  1410  0016C6  0100               	movlb	0	; () banked
  1411  0016C8  5D6E               	subwf	?_ReadMillis0& (0+255),w,b
  1412  0016CA  B0D8               	btfsc	status,0,c
  1413  0016CC  D002               	goto	l6160
  1414  0016CE  D7F5               	goto	l6158
  1415  0016D0  D000               	goto	l6160
  1416  0016D2                     l6160:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 855: LATJ = 0x00;
  1420  0016D2  0E00               	movlw	0
  1421  0016D4  6E91               	movwf	3985,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 856: loop_count++;
  1425  0016D6  0101               	movlb	1	; () banked
  1426  0016D8  2B16               	incf	main@loop_count& (0+255),f,b
  1427                           
  1428                           ; BSR set to: 1
  1429  0016DA  D7B5               	goto	l6140
  1430                           
  1431                           ; BSR set to: 1
  1432                           
  1433                           ; BSR set to: 1
  1434  0016DC  EF76  F000         	goto	start
  1435  0016E0                     __end_of_main:
  1436                           	opt stack 0
  1437                           postinc0	equ	0xFEE
  1438                           wreg	equ	0xFE8
  1439                           status	equ	0xFD8
  1440                           
  1441 ;; *************** function _StopMotors *****************
  1442 ;; Defined at:
  1443 ;;		line 128 in file "Motors.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;		None               void
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    9
  1464 ;; This function calls:
  1465 ;;		_SetDCMotorL
  1466 ;;		_SetDCMotorR
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text1
  1473  003566                     __ptext1:
  1474                           	opt stack 0
  1475  003566                     _StopMotors:
  1476                           	opt stack 21
  1477                           
  1478                           ;Motors.c: 130: SetDCMotorR(526);
  1479                           
  1480                           ; BSR set to: 1
  1481                           ;incstack = 0
  1482  003566  0E02               	movlw	2
  1483  003568  0100               	movlb	0	; () banked
  1484  00356A  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1485  00356C  0E0E               	movlw	14
  1486  00356E  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1487  003570  ECA2  F01B         	call	_SetDCMotorR	;wreg free
  1488                           
  1489                           ;Motors.c: 131: SetDCMotorL(526);
  1490  003574  0E02               	movlw	2
  1491  003576  0100               	movlb	0	; () banked
  1492  003578  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1493  00357A  0E0E               	movlw	14
  1494  00357C  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1495  00357E  ECA9  F01B         	call	_SetDCMotorL	;wreg free
  1496  003582  0012               	return		;funcret
  1497  003584                     __end_of_StopMotors:
  1498                           	opt stack 0
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _SetUnipolar *****************
  1504 ;; Defined at:
  1505 ;;		line 121 in file "Motors.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		None
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    7
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text2
  1534  0037B4                     __ptext2:
  1535                           	opt stack 0
  1536  0037B4                     _SetUnipolar:
  1537                           	opt stack 23
  1538                           
  1539                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  1540                           
  1541                           ;incstack = 0
  1542  0037B4  908C               	bcf	3980,0,c	;volatile
  1543                           
  1544                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  1545  0037B6  948C               	bcf	3980,2,c	;volatile
  1546  0037B8  0012               	return		;funcret
  1547  0037BA                     __end_of_SetUnipolar:
  1548                           	opt stack 0
  1549                           postinc0	equ	0xFEE
  1550                           wreg	equ	0xFE8
  1551                           status	equ	0xFD8
  1552                           
  1553 ;; *************** function _SetDirectionForward *****************
  1554 ;; Defined at:
  1555 ;;		line 64 in file "Motors.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;		None               void
  1562 ;; Registers used:
  1563 ;;		None
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;Total ram usage:        0 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    7
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text3
  1584  0037BA                     __ptext3:
  1585                           	opt stack 0
  1586  0037BA                     _SetDirectionForward:
  1587                           	opt stack 23
  1588                           
  1589                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  1590                           
  1591                           ;incstack = 0
  1592  0037BA  868C               	bsf	3980,3,c	;volatile
  1593                           
  1594                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  1595  0037BC  828C               	bsf	3980,1,c	;volatile
  1596  0037BE  0012               	return		;funcret
  1597  0037C0                     __end_of_SetDirectionForward:
  1598                           	opt stack 0
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function _SetDCMotorPID *****************
  1604 ;; Defined at:
  1605 ;;		line 47 in file "Motors.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  PIDoutput       2   22[BANK0 ] int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;		None               void
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;Total ram usage:        4 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    9
  1626 ;; This function calls:
  1627 ;;		_SetDCMotorL
  1628 ;;		_SetDCMotorR
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text4
  1635  002614                     __ptext4:
  1636                           	opt stack 0
  1637  002614                     _SetDCMotorPID:
  1638                           	opt stack 21
  1639                           
  1640                           ;Motors.c: 49: if(PIDoutput <= 0) {
  1641                           
  1642                           ;incstack = 0
  1643  002614  0100               	movlb	0	; () banked
  1644  002616  BF77               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1645  002618  D007               	goto	l6024
  1646  00261A  0100               	movlb	0	; () banked
  1647  00261C  5177               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1648  00261E  E121               	bnz	l6026
  1649  002620  0100               	movlb	0	; () banked
  1650  002622  0576               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1651  002624  B0D8               	btfsc	status,0,c
  1652  002626  D01D               	goto	l6026
  1653  002628                     l6024:
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;Motors.c: 50: SetDCMotorL(340 - PIDoutput);
  1657  002628  C076  F078         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  1658  00262C  C077  F079         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  1659  002630  0100               	movlb	0	; () banked
  1660  002632  1F78               	comf	??_SetDCMotorPID& (0+255),f,b
  1661  002634  1F79               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  1662  002636  4B78               	infsnz	??_SetDCMotorPID& (0+255),f,b
  1663  002638  2B79               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  1664  00263A  0E54               	movlw	84
  1665  00263C  0100               	movlb	0	; () banked
  1666  00263E  2578               	addwf	??_SetDCMotorPID& (0+255),w,b
  1667  002640  0100               	movlb	0	; () banked
  1668  002642  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1669  002644  0E01               	movlw	1
  1670  002646  0100               	movlb	0	; () banked
  1671  002648  2179               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  1672  00264A  0100               	movlb	0	; () banked
  1673  00264C  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1674  00264E  ECA9  F01B         	call	_SetDCMotorL	;wreg free
  1675                           
  1676                           ;Motors.c: 51: SetDCMotorR(340);
  1677  002652  0E01               	movlw	1
  1678  002654  0100               	movlb	0	; () banked
  1679  002656  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1680  002658  0E54               	movlw	84
  1681  00265A  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1682  00265C  ECA2  F01B         	call	_SetDCMotorR	;wreg free
  1683                           
  1684                           ;Motors.c: 52: }
  1685  002660  D033               	goto	l459
  1686  002662                     l6026:
  1687                           
  1688                           ;Motors.c: 53: else if(PIDoutput > 0) {
  1689  002662  0100               	movlb	0	; () banked
  1690  002664  BF77               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1691  002666  D01B               	goto	l6030
  1692  002668  0100               	movlb	0	; () banked
  1693  00266A  5177               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1694  00266C  E104               	bnz	u5600
  1695  00266E  0100               	movlb	0	; () banked
  1696  002670  0576               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1697  002672  A0D8               	btfss	status,0,c
  1698  002674  D014               	goto	l6030
  1699  002676                     u5600:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;Motors.c: 54: SetDCMotorL(340);
  1703  002676  0E01               	movlw	1
  1704  002678  0100               	movlb	0	; () banked
  1705  00267A  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1706  00267C  0E54               	movlw	84
  1707  00267E  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1708  002680  ECA9  F01B         	call	_SetDCMotorL	;wreg free
  1709                           
  1710                           ;Motors.c: 55: SetDCMotorR(340 + PIDoutput);
  1711  002684  0E54               	movlw	84
  1712  002686  0100               	movlb	0	; () banked
  1713  002688  2576               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1714  00268A  0100               	movlb	0	; () banked
  1715  00268C  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1716  00268E  0E01               	movlw	1
  1717  002690  0100               	movlb	0	; () banked
  1718  002692  2177               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1719  002694  0100               	movlb	0	; () banked
  1720  002696  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1721  002698  ECA2  F01B         	call	_SetDCMotorR	;wreg free
  1722                           
  1723                           ;Motors.c: 56: }
  1724  00269C  D015               	goto	l459
  1725  00269E                     l6030:
  1726                           
  1727                           ;Motors.c: 57: else if(PIDoutput == 0) {
  1728  00269E  0100               	movlb	0	; () banked
  1729  0026A0  5176               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1730  0026A2  0100               	movlb	0	; () banked
  1731  0026A4  1177               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1732  0026A6  A4D8               	btfss	status,2,c
  1733  0026A8  D00F               	goto	l459
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;Motors.c: 58: SetDCMotorL(340);
  1737  0026AA  0E01               	movlw	1
  1738  0026AC  0100               	movlb	0	; () banked
  1739  0026AE  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1740  0026B0  0E54               	movlw	84
  1741  0026B2  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1742  0026B4  ECA9  F01B         	call	_SetDCMotorL	;wreg free
  1743                           
  1744                           ;Motors.c: 59: SetDCMotorR(340);
  1745  0026B8  0E01               	movlw	1
  1746  0026BA  0100               	movlb	0	; () banked
  1747  0026BC  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1748  0026BE  0E54               	movlw	84
  1749  0026C0  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1750  0026C2  ECA2  F01B         	call	_SetDCMotorR	;wreg free
  1751  0026C6  D000               	goto	l459
  1752  0026C8                     l459:
  1753  0026C8  0012               	return		;funcret
  1754  0026CA                     __end_of_SetDCMotorPID:
  1755                           	opt stack 0
  1756                           postinc0	equ	0xFEE
  1757                           wreg	equ	0xFE8
  1758                           status	equ	0xFD8
  1759                           
  1760 ;; *************** function _SetDCMotorR *****************
  1761 ;; Defined at:
  1762 ;;		line 19 in file "Motors.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  duty_cycle      2   20[BANK0 ] unsigned int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;		None               void
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    8
  1783 ;; This function calls:
  1784 ;;		_SetDCPWM4
  1785 ;; This function is called by:
  1786 ;;		_SetDCMotorPID
  1787 ;;		_StopMotors
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text5
  1792  003744                     __ptext5:
  1793                           	opt stack 0
  1794  003744                     _SetDCMotorR:
  1795                           	opt stack 21
  1796                           
  1797                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  1798                           
  1799                           ;incstack = 0
  1800  003744  C074  F06E         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  1801  003748  C075  F06F         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  1802  00374C  EC28  F018         	call	_SetDCPWM4	;wreg free
  1803  003750  0012               	return		;funcret
  1804  003752                     __end_of_SetDCMotorR:
  1805                           	opt stack 0
  1806                           postinc0	equ	0xFEE
  1807                           wreg	equ	0xFE8
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _SetDCPWM4 *****************
  1811 ;; Defined at:
  1812 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  1817 ;; Return value:  Size  Location     Type
  1818 ;;		None               void
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;Total ram usage:        6 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    7
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_SetDCMotorR
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text6
  1841  003050                     __ptext6:
  1842                           	opt stack 0
  1843  003050                     _SetDCPWM4:
  1844                           	opt stack 21
  1845                           
  1846                           ;incstack = 0
  1847  003050  C06E  F070         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  1848  003054  C06F  F071         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  1849  003058  0E06               	movlw	6
  1850  00305A                     u5045:
  1851  00305A  90D8               	bcf	status,0,c
  1852  00305C  0100               	movlb	0	; () banked
  1853  00305E  3770               	rlcf	??_SetDCPWM4& (0+255),f,b
  1854  003060  3771               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  1855  003062  2EE8               	decfsz	wreg,f,c
  1856  003064  D7FA               	goto	u5045
  1857  003066  C070  F072         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  1858  00306A  C071  F073         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  1859                           
  1860                           ; BSR set to: 0
  1861  00306E  C073  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  1862  003072  C072  F070         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  1863  003076  0100               	movlb	0	; () banked
  1864  003078  90D8               	bcf	status,0,c
  1865  00307A  3370               	rrcf	??_SetDCPWM4& (0+255),f,b
  1866  00307C  0100               	movlb	0	; () banked
  1867  00307E  90D8               	bcf	status,0,c
  1868  003080  3370               	rrcf	??_SetDCPWM4& (0+255),f,b
  1869  003082  0E30               	movlw	48
  1870  003084  0100               	movlb	0	; () banked
  1871  003086  1770               	andwf	??_SetDCPWM4& (0+255),f,b
  1872  003088  5073               	movf	3955,w,c	;volatile
  1873  00308A  0BCF               	andlw	207
  1874  00308C  0100               	movlb	0	; () banked
  1875  00308E  1170               	iorwf	??_SetDCPWM4& (0+255),w,b
  1876  003090  6E73               	movwf	3955,c	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879  003092  0012               	return		;funcret
  1880  003094                     __end_of_SetDCPWM4:
  1881                           	opt stack 0
  1882                           postinc0	equ	0xFEE
  1883                           wreg	equ	0xFE8
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _SetDCMotorL *****************
  1887 ;; Defined at:
  1888 ;;		line 6 in file "Motors.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  duty_cycle      2   20[BANK0 ] unsigned int 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;Total ram usage:        2 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    8
  1909 ;; This function calls:
  1910 ;;		_SetDCPWM5
  1911 ;; This function is called by:
  1912 ;;		_SetDCMotorPID
  1913 ;;		_StopMotors
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text7
  1918  003752                     __ptext7:
  1919                           	opt stack 0
  1920  003752                     _SetDCMotorL:
  1921                           	opt stack 21
  1922                           
  1923                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;incstack = 0
  1927  003752  C074  F06E         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  1928  003756  C075  F06F         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  1929  00375A  EC4A  F018         	call	_SetDCPWM5	;wreg free
  1930  00375E  0012               	return		;funcret
  1931  003760                     __end_of_SetDCMotorL:
  1932                           	opt stack 0
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           status	equ	0xFD8
  1936                           
  1937 ;; *************** function _SetDCPWM5 *****************
  1938 ;; Defined at:
  1939 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  1944 ;; Return value:  Size  Location     Type
  1945 ;;		None               void
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:        6 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    7
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_SetDCMotorL
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text8
  1968  003094                     __ptext8:
  1969                           	opt stack 0
  1970  003094                     _SetDCPWM5:
  1971                           	opt stack 21
  1972                           
  1973                           ;incstack = 0
  1974  003094  C06E  F070         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  1975  003098  C06F  F071         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  1976  00309C  0E06               	movlw	6
  1977  00309E                     u5035:
  1978  00309E  90D8               	bcf	status,0,c
  1979  0030A0  0100               	movlb	0	; () banked
  1980  0030A2  3770               	rlcf	??_SetDCPWM5& (0+255),f,b
  1981  0030A4  3771               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  1982  0030A6  2EE8               	decfsz	wreg,f,c
  1983  0030A8  D7FA               	goto	u5035
  1984  0030AA  C070  F072         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  1985  0030AE  C071  F073         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  1986                           
  1987                           ; BSR set to: 0
  1988  0030B2  C073  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  1989  0030B6  C072  F070         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  1990  0030BA  0100               	movlb	0	; () banked
  1991  0030BC  90D8               	bcf	status,0,c
  1992  0030BE  3370               	rrcf	??_SetDCPWM5& (0+255),f,b
  1993  0030C0  0100               	movlb	0	; () banked
  1994  0030C2  90D8               	bcf	status,0,c
  1995  0030C4  3370               	rrcf	??_SetDCPWM5& (0+255),f,b
  1996  0030C6  0E30               	movlw	48
  1997  0030C8  0100               	movlb	0	; () banked
  1998  0030CA  1770               	andwf	??_SetDCPWM5& (0+255),f,b
  1999  0030CC  5070               	movf	3952,w,c	;volatile
  2000  0030CE  0BCF               	andlw	207
  2001  0030D0  0100               	movlb	0	; () banked
  2002  0030D2  1170               	iorwf	??_SetDCPWM5& (0+255),w,b
  2003  0030D4  6E70               	movwf	3952,c	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006  0030D6  0012               	return		;funcret
  2007  0030D8                     __end_of_SetDCPWM5:
  2008                           	opt stack 0
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _SendLineMode *****************
  2014 ;; Defined at:
  2015 ;;		line 112 in file "Wireless.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  line_mode       2   21[BANK0 ] PTR const unsigned char 
  2018 ;;		 -> line_mode(1), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    9
  2037 ;; This function calls:
  2038 ;;		_BusyTx
  2039 ;;		_FlushTxBuf
  2040 ;;		_PutCharTxBuf
  2041 ;;		_StartTx
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text9
  2048  003216                     __ptext9:
  2049                           	opt stack 0
  2050  003216                     _SendLineMode:
  2051                           	opt stack 21
  2052                           
  2053                           ;Wireless.c: 113: while(BusyTx());
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;incstack = 0
  2057  003216  D000               	goto	l6006
  2058  003218                     l6006:
  2059  003218  EC8A  F01B         	call	_BusyTx	;wreg free
  2060  00321C  0900               	iorlw	0
  2061  00321E  A4D8               	btfss	status,2,c
  2062  003220  D7FB               	goto	l6006
  2063                           
  2064                           ;Wireless.c: 114: FlushTxBuf();
  2065  003222  ECC7  F019         	call	_FlushTxBuf	;wreg free
  2066                           
  2067                           ;Wireless.c: 116: PutCharTxBuf(0xAA);
  2068  003226  0EAA               	movlw	170
  2069  003228  ECCD  F018         	call	_PutCharTxBuf
  2070                           
  2071                           ;Wireless.c: 117: PutCharTxBuf(0x11);
  2072  00322C  0E11               	movlw	17
  2073  00322E  ECCD  F018         	call	_PutCharTxBuf
  2074                           
  2075                           ;Wireless.c: 118: PutCharTxBuf(*line_mode);
  2076  003232  C075  FFD9         	movff	SendLineMode@line_mode,fsr2l
  2077  003236  C076  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  2078  00323A  50DF               	movf	indf2,w,c
  2079  00323C  ECCD  F018         	call	_PutCharTxBuf
  2080                           
  2081                           ;Wireless.c: 119: PutCharTxBuf('\r');
  2082  003240  0E0D               	movlw	13
  2083  003242  ECCD  F018         	call	_PutCharTxBuf
  2084                           
  2085                           ;Wireless.c: 120: PutCharTxBuf('\n');
  2086  003246  0E0A               	movlw	10
  2087  003248  ECCD  F018         	call	_PutCharTxBuf
  2088                           
  2089                           ;Wireless.c: 122: StartTx();
  2090  00324C  ECD2  F01B         	call	_StartTx	;wreg free
  2091  003250  0012               	return		;funcret
  2092  003252                     __end_of_SendLineMode:
  2093                           	opt stack 0
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           indf2	equ	0xFDF
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _ResetMillis0 *****************
  2102 ;; Defined at:
  2103 ;;		line 27 in file "MillisecondTimer.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;		None               void
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    7
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text10
  2132  00377C                     __ptext10:
  2133                           	opt stack 0
  2134  00377C                     _ResetMillis0:
  2135                           	opt stack 23
  2136                           
  2137                           ;MillisecondTimer.c: 29: millisecond_COUNT0 = 0;
  2138                           
  2139                           ;incstack = 0
  2140  00377C  0E00               	movlw	0
  2141  00377E  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  2142  003780  0E00               	movlw	0
  2143  003782  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  2144  003784  0012               	return		;funcret
  2145  003786                     __end_of_ResetMillis0:
  2146                           	opt stack 0
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           indf2	equ	0xFDF
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function _ReadMillis0 *****************
  2155 ;; Defined at:
  2156 ;;		line 7 in file "MillisecondTimer.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2   14[BANK0 ] unsigned int 
  2163 ;; Registers used:
  2164 ;;		None
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    7
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text11
  2185  003786                     __ptext11:
  2186                           	opt stack 0
  2187  003786                     _ReadMillis0:
  2188                           	opt stack 23
  2189                           
  2190                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  2191                           
  2192                           ;incstack = 0
  2193  003786  C00D  F06E         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  2194  00378A  C00E  F06F         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  2195  00378E  0012               	return		;funcret
  2196  003790                     __end_of_ReadMillis0:
  2197                           	opt stack 0
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           indf2	equ	0xFDF
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _PB2pressed *****************
  2206 ;; Defined at:
  2207 ;;		line 477 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      unsigned char 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    8
  2228 ;; This function calls:
  2229 ;;		_ReadMillis2
  2230 ;;		_ResetMillis2
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text12
  2237  00315C                     __ptext12:
  2238                           	opt stack 0
  2239  00315C                     _PB2pressed:
  2240                           	opt stack 22
  2241                           
  2242                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 478: if(PORTBbits.RB2 == 0) {
  2243                           
  2244                           ;incstack = 0
  2245  00315C  B481               	btfsc	3969,2,c	;volatile
  2246  00315E  D003               	goto	l249
  2247  003160  D016               	goto	l5952
  2248                           
  2249                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 479: return(0);
  2250  003162  D01A               	goto	l250
  2251                           
  2252                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 480: }
  2253  003164  D017               	goto	l5956
  2254  003166                     l249:
  2255                           
  2256                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 481: else if(PORTBbits.RB2 == 1) {
  2257  003166  A481               	btfss	3969,2,c	;volatile
  2258  003168  D015               	goto	l5956
  2259                           
  2260                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 482: ResetMillis2();
  2261  00316A  ECC8  F01B         	call	_ResetMillis2	;wreg free
  2262                           
  2263                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 483: while(ReadMillis2() < 10);
  2264  00316E  D000               	goto	l5944
  2265  003170                     l5944:
  2266  003170  ECCD  F01B         	call	_ReadMillis2	;wreg free
  2267  003174  0100               	movlb	0	; () banked
  2268  003176  516F               	movf	(?_ReadMillis2+1)& (0+255),w,b
  2269  003178  E105               	bnz	u5530
  2270  00317A  0E0A               	movlw	10
  2271  00317C  0100               	movlb	0	; () banked
  2272  00317E  5D6E               	subwf	?_ReadMillis2& (0+255),w,b
  2273  003180  A0D8               	btfss	status,0,c
  2274  003182  D7F6               	goto	l5944
  2275  003184                     u5530:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 484: if(PORTBbits.RB2 == 1) {
  2279  003184  A481               	btfss	3969,2,c	;volatile
  2280  003186  D003               	goto	l5952
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 485: return(1);
  2284  003188  0E01               	movlw	1
  2285                           
  2286                           ; BSR set to: 0
  2287  00318A  D006               	goto	l250
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 486: }
  2291  00318C  D003               	goto	l5956
  2292  00318E                     l5952:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 487: else {
  2296                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 488: return(0);
  2297  00318E  0E00               	movlw	0
  2298                           
  2299                           ; BSR set to: 0
  2300  003190  D003               	goto	l250
  2301                           
  2302                           ; BSR set to: 0
  2303                           
  2304                           ; BSR set to: 0
  2305  003192  D000               	goto	l5956
  2306  003194                     l5956:
  2307                           
  2308                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 489: }
  2309                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 490: }
  2310                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 492: return(0);
  2311  003194  0E00               	movlw	0
  2312  003196  D000               	goto	l250
  2313  003198                     l250:
  2314  003198  0012               	return		;funcret
  2315  00319A                     __end_of_PB2pressed:
  2316                           	opt stack 0
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           indf2	equ	0xFDF
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _LoadCalibration *****************
  2325 ;; Defined at:
  2326 ;;		line 598 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  index           1   31[BANK0 ] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;		None               void
  2333 ;; Registers used:
  2334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:        3 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:   12
  2347 ;; This function calls:
  2348 ;;		_FlashLEDS
  2349 ;;		_GenerateCalibration
  2350 ;;		_ReadCharEEPROM
  2351 ;;		_ReadIntEEPROM
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text13
  2358  002ACA                     __ptext13:
  2359                           	opt stack 0
  2360  002ACA                     _LoadCalibration:
  2361                           	opt stack 18
  2362                           
  2363                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 599: unsigned char index;
  2364                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 601: if(ReadCharEEPROM(0x00) == 0) {
  2365                           
  2366                           ;incstack = 0
  2367  002ACA  0E00               	movlw	0
  2368  002ACC  0100               	movlb	0	; () banked
  2369  002ACE  6F71               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  2370  002AD0  0E00               	movlw	0
  2371  002AD2  6F70               	movwf	ReadCharEEPROM@address& (0+255),b
  2372  002AD4  EC82  F01B         	call	_ReadCharEEPROM	;wreg free
  2373  002AD8  0900               	iorlw	0
  2374  002ADA  A4D8               	btfss	status,2,c
  2375  002ADC  D005               	goto	l5966
  2376                           
  2377                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 602: FlashLEDS();
  2378  002ADE  EC1F  F01A         	call	_FlashLEDS	;wreg free
  2379                           
  2380                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 603: GenerateCalibration();
  2381  002AE2  ECC5  F011         	call	_GenerateCalibration	;wreg free
  2382                           
  2383                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 604: }
  2384  002AE6  D03B               	goto	l292
  2385  002AE8                     l5966:
  2386                           
  2387                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 606: else {
  2388                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 607: sensor_threshold = ReadIntEEPROM(0x01);
  2389  002AE8  0E00               	movlw	0
  2390  002AEA  0100               	movlb	0	; () banked
  2391  002AEC  6F71               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2392  002AEE  0E01               	movlw	1
  2393  002AF0  6F70               	movwf	ReadIntEEPROM@address& (0+255),b
  2394  002AF2  EC85  F017         	call	_ReadIntEEPROM	;wreg free
  2395  002AF6  C070  F022         	movff	?_ReadIntEEPROM,_sensor_threshold
  2396  002AFA  C071  F023         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  2397                           
  2398                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 608: for(index = 0; index < 5; index++) {
  2399  002AFE  0E00               	movlw	0
  2400  002B00  0100               	movlb	0	; () banked
  2401  002B02  6F7F               	movwf	LoadCalibration@index& (0+255),b
  2402  002B04                     l5970:
  2403                           
  2404                           ; BSR set to: 0
  2405  002B04  0E04               	movlw	4
  2406  002B06  0100               	movlb	0	; () banked
  2407  002B08  657F               	cpfsgt	LoadCalibration@index& (0+255),b
  2408  002B0A  D001               	goto	l5974
  2409                           
  2410                           ; BSR set to: 0
  2411  002B0C  D028               	goto	l292
  2412  002B0E                     l5974:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 609: sensor_offsets[index] = ReadIntEEPROM(0x03 +
      +                           (2 * index));
  2416  002B0E  0100               	movlb	0	; () banked
  2417  002B10  517F               	movf	LoadCalibration@index& (0+255),w,b
  2418  002B12  0100               	movlb	0	; () banked
  2419  002B14  6F7D               	movwf	??_LoadCalibration& (0+255),b
  2420  002B16  6B7E               	clrf	(??_LoadCalibration+1)& (0+255),b
  2421  002B18  90D8               	bcf	status,0,c
  2422  002B1A  0100               	movlb	0	; () banked
  2423  002B1C  377D               	rlcf	??_LoadCalibration& (0+255),f,b
  2424  002B1E  377E               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  2425  002B20  0E03               	movlw	3
  2426  002B22  0100               	movlb	0	; () banked
  2427  002B24  257D               	addwf	??_LoadCalibration& (0+255),w,b
  2428  002B26  0100               	movlb	0	; () banked
  2429  002B28  6F70               	movwf	ReadIntEEPROM@address& (0+255),b
  2430  002B2A  0E00               	movlw	0
  2431  002B2C  0100               	movlb	0	; () banked
  2432  002B2E  217E               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  2433  002B30  0100               	movlb	0	; () banked
  2434  002B32  6F71               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2435  002B34  EC85  F017         	call	_ReadIntEEPROM	;wreg free
  2436  002B38  0100               	movlb	0	; () banked
  2437  002B3A  517F               	movf	LoadCalibration@index& (0+255),w,b
  2438  002B3C  0D02               	mullw	2
  2439  002B3E  0EDE               	movlw	low _sensor_offsets
  2440  002B40  24F3               	addwf	prodl,w,c
  2441  002B42  6ED9               	movwf	fsr2l,c
  2442  002B44  0E00               	movlw	high _sensor_offsets
  2443  002B46  20F4               	addwfc	prodh,w,c
  2444  002B48  6EDA               	movwf	fsr2h,c
  2445  002B4A  0100               	movlb	0	; () banked
  2446  002B4C  C070  FFDE         	movff	?_ReadIntEEPROM,postinc2
  2447  002B50  0100               	movlb	0	; () banked
  2448  002B52  C071  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  2449                           
  2450                           ; BSR set to: 0
  2451  002B56  0100               	movlb	0	; () banked
  2452  002B58  2B7F               	incf	LoadCalibration@index& (0+255),f,b
  2453  002B5A  D7D4               	goto	l5970
  2454                           
  2455                           ; BSR set to: 0
  2456                           
  2457                           ; BSR set to: 0
  2458  002B5C  D000               	goto	l292
  2459  002B5E                     l292:
  2460  002B5E  0012               	return		;funcret
  2461  002B60                     __end_of_LoadCalibration:
  2462                           	opt stack 0
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           indf2	equ	0xFDF
  2468                           postinc2	equ	0xFDE
  2469                           postdec2	equ	0xFDD
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           status	equ	0xFD8
  2473                           
  2474 ;; *************** function _ReadIntEEPROM *****************
  2475 ;; Defined at:
  2476 ;;		line 66 in file "eeprom.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  address         2   16[BANK0 ] unsigned int 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  data            2   21[BANK0 ] unsigned int 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2   16[BANK0 ] unsigned int 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:        7 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    8
  2497 ;; This function calls:
  2498 ;;		_ReadEEPROM
  2499 ;; This function is called by:
  2500 ;;		_LoadCalibration
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text14
  2505  002F0A                     __ptext14:
  2506                           	opt stack 0
  2507  002F0A                     _ReadIntEEPROM:
  2508                           	opt stack 21
  2509                           
  2510                           ;eeprom.c: 67: unsigned int data;
  2511                           ;eeprom.c: 69: data = (ReadEEPROM(address) << 8) & 0xFF00;
  2512                           
  2513                           ;incstack = 0
  2514  002F0A  C070  F06E         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  2515  002F0E  C071  F06F         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  2516  002F12  EC97  F019         	call	_ReadEEPROM	;wreg free
  2517  002F16  0100               	movlb	0	; () banked
  2518  002F18  6F72               	movwf	??_ReadIntEEPROM& (0+255),b
  2519  002F1A  0100               	movlb	0	; () banked
  2520  002F1C  5172               	movf	??_ReadIntEEPROM& (0+255),w,b
  2521  002F1E  0100               	movlb	0	; () banked
  2522  002F20  6F74               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  2523  002F22  6B73               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  2524  002F24  0E00               	movlw	0
  2525  002F26  0100               	movlb	0	; () banked
  2526  002F28  1573               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  2527  002F2A  0100               	movlb	0	; () banked
  2528  002F2C  6F75               	movwf	ReadIntEEPROM@data& (0+255),b
  2529  002F2E  0EFF               	movlw	255
  2530  002F30  0100               	movlb	0	; () banked
  2531  002F32  1574               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  2532  002F34  0100               	movlb	0	; () banked
  2533  002F36  6F76               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  2534                           
  2535                           ;eeprom.c: 70: data |= ReadEEPROM(address + 1) & 0x00FF;
  2536  002F38  0E01               	movlw	1
  2537  002F3A  0100               	movlb	0	; () banked
  2538  002F3C  2570               	addwf	ReadIntEEPROM@address& (0+255),w,b
  2539  002F3E  0100               	movlb	0	; () banked
  2540  002F40  6F6E               	movwf	ReadEEPROM@address& (0+255),b
  2541  002F42  0E00               	movlw	0
  2542  002F44  0100               	movlb	0	; () banked
  2543  002F46  2171               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  2544  002F48  0100               	movlb	0	; () banked
  2545  002F4A  6F6F               	movwf	(ReadEEPROM@address+1)& (0+255),b
  2546  002F4C  EC97  F019         	call	_ReadEEPROM	;wreg free
  2547  002F50  0100               	movlb	0	; () banked
  2548  002F52  6F72               	movwf	??_ReadIntEEPROM& (0+255),b
  2549  002F54  0100               	movlb	0	; () banked
  2550  002F56  5172               	movf	??_ReadIntEEPROM& (0+255),w,b
  2551  002F58  0100               	movlb	0	; () banked
  2552  002F5A  1375               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;eeprom.c: 72: return(data);
  2556  002F5C  C075  F070         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  2557  002F60  C076  F071         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  2558  002F64  D000               	goto	l560
  2559  002F66                     l560:
  2560                           
  2561                           ; BSR set to: 0
  2562  002F66  0012               	return		;funcret
  2563  002F68                     __end_of_ReadIntEEPROM:
  2564                           	opt stack 0
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           indf2	equ	0xFDF
  2570                           postinc2	equ	0xFDE
  2571                           postdec2	equ	0xFDD
  2572                           fsr2h	equ	0xFDA
  2573                           fsr2l	equ	0xFD9
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function _ReadCharEEPROM *****************
  2577 ;; Defined at:
  2578 ;;		line 76 in file "eeprom.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  address         2   16[BANK0 ] unsigned int 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      unsigned char 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    8
  2599 ;; This function calls:
  2600 ;;		_ReadEEPROM
  2601 ;; This function is called by:
  2602 ;;		_LoadCalibration
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text15
  2607  003704                     __ptext15:
  2608                           	opt stack 0
  2609  003704                     _ReadCharEEPROM:
  2610                           	opt stack 21
  2611                           
  2612                           ;eeprom.c: 77: return(ReadEEPROM(address));
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;incstack = 0
  2616  003704  C070  F06E         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  2617  003708  C071  F06F         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  2618  00370C  EC97  F019         	call	_ReadEEPROM	;wreg free
  2619  003710  D000               	goto	l563
  2620  003712                     l563:
  2621  003712  0012               	return		;funcret
  2622  003714                     __end_of_ReadCharEEPROM:
  2623                           	opt stack 0
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           postinc0	equ	0xFEE
  2627                           wreg	equ	0xFE8
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           postdec2	equ	0xFDD
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _ReadEEPROM *****************
  2636 ;; Defined at:
  2637 ;;		line 37 in file "eeprom.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  address         2   14[BANK0 ] unsigned int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      unsigned char 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    7
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_ReadIntEEPROM
  2662 ;;		_ReadCharEEPROM
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text16
  2667  00332E                     __ptext16:
  2668                           	opt stack 0
  2669  00332E                     _ReadEEPROM:
  2670                           	opt stack 21
  2671                           
  2672                           ;eeprom.c: 38: if(address > 0x3FF) {
  2673                           
  2674                           ;incstack = 0
  2675  00332E  0E04               	movlw	4
  2676  003330  0100               	movlb	0	; () banked
  2677  003332  5D6F               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  2678  003334  A0D8               	btfss	status,0,c
  2679  003336  D002               	goto	l5514
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;eeprom.c: 39: return(0);
  2683  003338  0E00               	movlw	0
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;eeprom.c: 40: }
  2687                           
  2688                           ; BSR set to: 0
  2689  00333A  D010               	goto	l547
  2690  00333C                     l5514:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;eeprom.c: 41: else {
  2694                           ;eeprom.c: 42: EEADR = address & 0x0F;
  2695  00333C  0100               	movlb	0	; () banked
  2696  00333E  516E               	movf	ReadEEPROM@address& (0+255),w,b
  2697  003340  0B0F               	andlw	15
  2698  003342  6EA9               	movwf	4009,c	;volatile
  2699                           
  2700                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x03;
  2701  003344  0100               	movlb	0	; () banked
  2702  003346  516F               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  2703  003348  0B03               	andlw	3
  2704  00334A  6EAA               	movwf	4010,c	;volatile
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  2708  00334C  9EA6               	bcf	4006,7,c	;volatile
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  2712  00334E  9CA6               	bcf	4006,6,c	;volatile
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;eeprom.c: 46: EECON1bits.RD = 1;
  2716  003350  80A6               	bsf	4006,0,c	;volatile
  2717                           
  2718                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  2719  003352  D000               	goto	l549
  2720  003354                     l549:
  2721  003354  B0A6               	btfsc	4006,0,c	;volatile
  2722  003356  D7FE               	goto	l549
  2723                           
  2724                           ;eeprom.c: 50: return(EEDATA);
  2725  003358  50A8               	movf	4008,w,c	;volatile
  2726  00335A  D000               	goto	l547
  2727  00335C                     l547:
  2728  00335C  0012               	return		;funcret
  2729  00335E                     __end_of_ReadEEPROM:
  2730                           	opt stack 0
  2731                           prodh	equ	0xFF4
  2732                           prodl	equ	0xFF3
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           postdec2	equ	0xFDD
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _GenerateCalibration *****************
  2743 ;; Defined at:
  2744 ;;		line 558 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  index           1   28[BANK0 ] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;		None               void
  2751 ;; Registers used:
  2752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:   11
  2765 ;; This function calls:
  2766 ;;		_CalibrateOffsets
  2767 ;;		_CalibrateThreshold
  2768 ;;		_Delay10KTCYx
  2769 ;;		_FlashLEDS
  2770 ;;		_PB1pressed
  2771 ;;		_SendOffsets
  2772 ;;		_SendStatus
  2773 ;;		_SendThreshold
  2774 ;;		_WriteCharEEPROM
  2775 ;;		_WriteIntEEPROM
  2776 ;; This function is called by:
  2777 ;;		_LoadCalibration
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text17
  2783  00238A                     __ptext17:
  2784                           	opt stack 0
  2785  00238A                     _GenerateCalibration:
  2786                           	opt stack 18
  2787                           
  2788                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 559: unsigned char index;
  2789                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 562: SendStatus(0x03);
  2790                           
  2791                           ;incstack = 0
  2792  00238A  0E03               	movlw	3
  2793  00238C  EC29  F019         	call	_SendStatus
  2794                           
  2795                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 563: LATJ = 0x03;
  2796  002390  0E03               	movlw	3
  2797  002392  6E91               	movwf	3985,c	;volatile
  2798                           
  2799                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 565: while(PB1pressed() == 0) {
  2800  002394  D006               	goto	l5788
  2801  002396                     l5784:
  2802                           
  2803                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 567: CalibrateOffsets();
  2804  002396  EC6B  F016         	call	_CalibrateOffsets	;wreg free
  2805                           
  2806                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 568: Delay10KTCYx(10);
  2807  00239A  0E0A               	movlw	10
  2808  00239C  ECC2  F01A         	call	_Delay10KTCYx
  2809  0023A0  D000               	goto	l5788
  2810  0023A2                     l5788:
  2811  0023A2  ECEC  F018         	call	_PB1pressed	;wreg free
  2812  0023A6  0900               	iorlw	0
  2813  0023A8  B4D8               	btfsc	status,2,c
  2814  0023AA  D7F5               	goto	l5784
  2815                           
  2816                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 570: }
  2817                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 572: for(index = 0; index < 5; index++) {
  2818  0023AC  0E00               	movlw	0
  2819  0023AE  0100               	movlb	0	; () banked
  2820  0023B0  6F7C               	movwf	GenerateCalibration@index& (0+255),b
  2821  0023B2                     l5792:
  2822                           
  2823                           ; BSR set to: 0
  2824  0023B2  0E04               	movlw	4
  2825  0023B4  0100               	movlb	0	; () banked
  2826  0023B6  657C               	cpfsgt	GenerateCalibration@index& (0+255),b
  2827  0023B8  D001               	goto	l5796
  2828                           
  2829                           ; BSR set to: 0
  2830  0023BA  D025               	goto	l5802
  2831  0023BC                     l5796:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 573: WriteIntEEPROM(0x03 + (2 * index), sensor_of
      +                          fsets[index]);
  2835  0023BC  0100               	movlb	0	; () banked
  2836  0023BE  517C               	movf	GenerateCalibration@index& (0+255),w,b
  2837  0023C0  0100               	movlb	0	; () banked
  2838  0023C2  6F7A               	movwf	??_GenerateCalibration& (0+255),b
  2839  0023C4  6B7B               	clrf	(??_GenerateCalibration+1)& (0+255),b
  2840  0023C6  90D8               	bcf	status,0,c
  2841  0023C8  0100               	movlb	0	; () banked
  2842  0023CA  377A               	rlcf	??_GenerateCalibration& (0+255),f,b
  2843  0023CC  377B               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  2844  0023CE  0E03               	movlw	3
  2845  0023D0  0100               	movlb	0	; () banked
  2846  0023D2  257A               	addwf	??_GenerateCalibration& (0+255),w,b
  2847  0023D4  0100               	movlb	0	; () banked
  2848  0023D6  6F71               	movwf	WriteIntEEPROM@address& (0+255),b
  2849  0023D8  0E00               	movlw	0
  2850  0023DA  0100               	movlb	0	; () banked
  2851  0023DC  217B               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  2852  0023DE  0100               	movlb	0	; () banked
  2853  0023E0  6F72               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  2854  0023E2  0100               	movlb	0	; () banked
  2855  0023E4  517C               	movf	GenerateCalibration@index& (0+255),w,b
  2856  0023E6  0D02               	mullw	2
  2857  0023E8  0EDE               	movlw	low _sensor_offsets
  2858  0023EA  24F3               	addwf	prodl,w,c
  2859  0023EC  6ED9               	movwf	fsr2l,c
  2860  0023EE  0E00               	movlw	high _sensor_offsets
  2861  0023F0  20F4               	addwfc	prodh,w,c
  2862  0023F2  6EDA               	movwf	fsr2h,c
  2863  0023F4  CFDE F073          	movff	postinc2,WriteIntEEPROM@data
  2864  0023F8  CFDD F074          	movff	postdec2,WriteIntEEPROM@data+1
  2865  0023FC  EC7E  F019         	call	_WriteIntEEPROM	;wreg free
  2866  002400  0100               	movlb	0	; () banked
  2867  002402  2B7C               	incf	GenerateCalibration@index& (0+255),f,b
  2868  002404  D7D6               	goto	l5792
  2869  002406                     l5802:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 574: }
  2873                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 576: SendOffsets(sensor_offsets);
  2874  002406  0EDE               	movlw	low _sensor_offsets
  2875  002408  0100               	movlb	0	; () banked
  2876  00240A  6F75               	movwf	SendOffsets@offsets_array& (0+255),b
  2877  00240C  0E00               	movlw	high _sensor_offsets
  2878  00240E  0100               	movlb	0	; () banked
  2879  002410  6F76               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  2880  002412  ECC3  F014         	call	_SendOffsets	;wreg free
  2881                           
  2882                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 578: FlashLEDS();
  2883  002416  EC1F  F01A         	call	_FlashLEDS	;wreg free
  2884                           
  2885                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 581: SendStatus(0x04);
  2886  00241A  0E04               	movlw	4
  2887  00241C  EC29  F019         	call	_SendStatus
  2888                           
  2889                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 583: while(PB1pressed() == 0) {
  2890  002420  D006               	goto	l5812
  2891  002422                     l5808:
  2892                           
  2893                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 585: CalibrateThreshold();
  2894  002422  ECB4  F017         	call	_CalibrateThreshold	;wreg free
  2895                           
  2896                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 586: Delay10KTCYx(10);
  2897  002426  0E0A               	movlw	10
  2898  002428  ECC2  F01A         	call	_Delay10KTCYx
  2899  00242C  D000               	goto	l5812
  2900  00242E                     l5812:
  2901  00242E  ECEC  F018         	call	_PB1pressed	;wreg free
  2902  002432  0900               	iorlw	0
  2903  002434  B4D8               	btfsc	status,2,c
  2904  002436  D7F5               	goto	l5808
  2905                           
  2906                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 588: }
  2907                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 590: WriteIntEEPROM(0x01, sensor_threshold);
  2908  002438  0E00               	movlw	0
  2909  00243A  0100               	movlb	0	; () banked
  2910  00243C  6F72               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  2911  00243E  0E01               	movlw	1
  2912  002440  6F71               	movwf	WriteIntEEPROM@address& (0+255),b
  2913  002442  C022  F073         	movff	_sensor_threshold,WriteIntEEPROM@data
  2914  002446  C023  F074         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  2915  00244A  EC7E  F019         	call	_WriteIntEEPROM	;wreg free
  2916                           
  2917                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 591: WriteCharEEPROM(0x00, 1);
  2918  00244E  0E00               	movlw	0
  2919  002450  0100               	movlb	0	; () banked
  2920  002452  6F72               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  2921  002454  0E00               	movlw	0
  2922  002456  6F71               	movwf	WriteCharEEPROM@address& (0+255),b
  2923  002458  0E01               	movlw	1
  2924  00245A  0100               	movlb	0	; () banked
  2925  00245C  6F73               	movwf	WriteCharEEPROM@data& (0+255),b
  2926  00245E  EC5E  F01B         	call	_WriteCharEEPROM	;wreg free
  2927                           
  2928                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 593: SendThreshold(sensor_threshold_ptr);
  2929  002462  C0F0  F075         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  2930  002466  C0F1  F076         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  2931  00246A  EC1A  F017         	call	_SendThreshold	;wreg free
  2932  00246E  0012               	return		;funcret
  2933  002470                     __end_of_GenerateCalibration:
  2934                           	opt stack 0
  2935                           prodh	equ	0xFF4
  2936                           prodl	equ	0xFF3
  2937                           postinc0	equ	0xFEE
  2938                           wreg	equ	0xFE8
  2939                           indf2	equ	0xFDF
  2940                           postinc2	equ	0xFDE
  2941                           postdec2	equ	0xFDD
  2942                           fsr2h	equ	0xFDA
  2943                           fsr2l	equ	0xFD9
  2944                           status	equ	0xFD8
  2945                           
  2946 ;; *************** function _WriteIntEEPROM *****************
  2947 ;; Defined at:
  2948 ;;		line 56 in file "eeprom.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  address         2   17[BANK0 ] unsigned int 
  2951 ;;  data            2   19[BANK0 ] unsigned int 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;Total ram usage:        4 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    8
  2970 ;; This function calls:
  2971 ;;		_WriteEEPROM
  2972 ;; This function is called by:
  2973 ;;		_GenerateCalibration
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text18
  2978  0032FC                     __ptext18:
  2979                           	opt stack 0
  2980  0032FC                     _WriteIntEEPROM:
  2981                           	opt stack 20
  2982                           
  2983                           ;eeprom.c: 57: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  2984                           
  2985                           ;incstack = 0
  2986  0032FC  C071  F06E         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  2987  003300  C072  F06F         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  2988  003304  0100               	movlb	0	; () banked
  2989  003306  5174               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  2990  003308  0100               	movlb	0	; () banked
  2991  00330A  6F70               	movwf	WriteEEPROM@data& (0+255),b
  2992  00330C  EC8E  F018         	call	_WriteEEPROM	;wreg free
  2993                           
  2994                           ;eeprom.c: 58: WriteEEPROM(address + 1, (data & 0x00FF));
  2995  003310  0E01               	movlw	1
  2996  003312  0100               	movlb	0	; () banked
  2997  003314  2571               	addwf	WriteIntEEPROM@address& (0+255),w,b
  2998  003316  0100               	movlb	0	; () banked
  2999  003318  6F6E               	movwf	WriteEEPROM@address& (0+255),b
  3000  00331A  0E00               	movlw	0
  3001  00331C  0100               	movlb	0	; () banked
  3002  00331E  2172               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  3003  003320  0100               	movlb	0	; () banked
  3004  003322  6F6F               	movwf	(WriteEEPROM@address+1)& (0+255),b
  3005  003324  C073  F070         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  3006  003328  EC8E  F018         	call	_WriteEEPROM	;wreg free
  3007  00332C  0012               	return		;funcret
  3008  00332E                     __end_of_WriteIntEEPROM:
  3009                           	opt stack 0
  3010                           prodh	equ	0xFF4
  3011                           prodl	equ	0xFF3
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           indf2	equ	0xFDF
  3015                           postinc2	equ	0xFDE
  3016                           postdec2	equ	0xFDD
  3017                           fsr2h	equ	0xFDA
  3018                           fsr2l	equ	0xFD9
  3019                           status	equ	0xFD8
  3020                           
  3021 ;; *************** function _WriteCharEEPROM *****************
  3022 ;; Defined at:
  3023 ;;		line 62 in file "eeprom.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  address         2   17[BANK0 ] unsigned int 
  3026 ;;  data            1   19[BANK0 ] unsigned char 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3038 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;Total ram usage:        3 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    8
  3045 ;; This function calls:
  3046 ;;		_WriteEEPROM
  3047 ;; This function is called by:
  3048 ;;		_GenerateCalibration
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text19
  3053  0036BC                     __ptext19:
  3054                           	opt stack 0
  3055  0036BC                     _WriteCharEEPROM:
  3056                           	opt stack 20
  3057                           
  3058                           ;eeprom.c: 63: WriteEEPROM(address, data);
  3059                           
  3060                           ;incstack = 0
  3061  0036BC  C071  F06E         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  3062  0036C0  C072  F06F         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  3063  0036C4  C073  F070         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  3064  0036C8  EC8E  F018         	call	_WriteEEPROM	;wreg free
  3065  0036CC  0012               	return		;funcret
  3066  0036CE                     __end_of_WriteCharEEPROM:
  3067                           	opt stack 0
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf2	equ	0xFDF
  3073                           postinc2	equ	0xFDE
  3074                           postdec2	equ	0xFDD
  3075                           fsr2h	equ	0xFDA
  3076                           fsr2l	equ	0xFD9
  3077                           status	equ	0xFD8
  3078                           
  3079 ;; *************** function _WriteEEPROM *****************
  3080 ;; Defined at:
  3081 ;;		line 3 in file "eeprom.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  address         2   14[BANK0 ] unsigned int 
  3084 ;;  data            1   16[BANK0 ] unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      unsigned char 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3096 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;Total ram usage:        3 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    7
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_WriteIntEEPROM
  3107 ;;		_WriteCharEEPROM
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text20
  3112  00311C                     __ptext20:
  3113                           	opt stack 0
  3114  00311C                     _WriteEEPROM:
  3115                           	opt stack 20
  3116                           
  3117                           ;eeprom.c: 4: if(address > 0x03FF) {
  3118                           
  3119                           ;incstack = 0
  3120  00311C  0E04               	movlw	4
  3121  00311E  0100               	movlb	0	; () banked
  3122  003120  5D6F               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  3123  003122  B0D8               	btfsc	status,0,c
  3124  003124  D01A               	goto	l537
  3125  003126  D001               	goto	l536
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;eeprom.c: 6: }
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;eeprom.c: 5: return(1);
  3132                           ;	Return value of _WriteEEPROM is never used
  3133  003128  D018               	goto	l537
  3134  00312A                     l536:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;eeprom.c: 7: else {
  3138                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  3139  00312A  C06E  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  3143  00312E  0100               	movlb	0	; () banked
  3144  003130  516F               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  3145  003132  0B03               	andlw	3
  3146  003134  6EAA               	movwf	4010,c	;volatile
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;eeprom.c: 10: EEDATA = data;
  3150  003136  C070  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  3154  00313A  9EA6               	bcf	4006,7,c	;volatile
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  3158  00313C  9CA6               	bcf	4006,6,c	;volatile
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  3162  00313E  84A6               	bsf	4006,2,c	;volatile
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  3166  003140  9EF2               	bcf	intcon,7,c	;volatile
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;eeprom.c: 17: EECON2 = 0x55;
  3170  003142  0E55               	movlw	85
  3171  003144  6EA7               	movwf	4007,c	;volatile
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;eeprom.c: 18: EECON2 = 0x0AA;
  3175  003146  0EAA               	movlw	170
  3176  003148  6EA7               	movwf	4007,c	;volatile
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;eeprom.c: 19: EECON1bits.WR = 1;
  3180  00314A  82A6               	bsf	4006,1,c	;volatile
  3181                           
  3182                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  3183  00314C  D000               	goto	l539
  3184  00314E                     l539:
  3185  00314E  B2A6               	btfsc	4006,1,c	;volatile
  3186  003150  D7FE               	goto	l539
  3187                           
  3188                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  3189  003152  94A6               	bcf	4006,2,c	;volatile
  3190                           
  3191                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  3192  003154  8EF2               	bsf	intcon,7,c	;volatile
  3193                           
  3194                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  3195  003156  50A6               	movf	4006,w,c	;volatile
  3196                           
  3197                           ;eeprom.c: 29: else {
  3198                           ;eeprom.c: 30: return(1);
  3199                           ;	Return value of _WriteEEPROM is never used
  3200                           
  3201                           ;eeprom.c: 28: }
  3202                           
  3203                           ;eeprom.c: 27: return(0);
  3204                           ;	Return value of _WriteEEPROM is never used
  3205  003158  D000               	goto	l537
  3206  00315A                     l537:
  3207  00315A  0012               	return		;funcret
  3208  00315C                     __end_of_WriteEEPROM:
  3209                           	opt stack 0
  3210                           prodh	equ	0xFF4
  3211                           prodl	equ	0xFF3
  3212                           intcon	equ	0xFF2
  3213                           postinc0	equ	0xFEE
  3214                           wreg	equ	0xFE8
  3215                           indf2	equ	0xFDF
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           
  3222 ;; *************** function _SendThreshold *****************
  3223 ;; Defined at:
  3224 ;;		line 146 in file "Wireless.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  sensor_thres    2   21[BANK0 ] PTR const int 
  3227 ;;		 -> NULL(0), sensor_threshold(2), 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;		None               void
  3232 ;; Registers used:
  3233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        4 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    9
  3246 ;; This function calls:
  3247 ;;		_BusyTx
  3248 ;;		_FlushTxBuf
  3249 ;;		_PutCharTxBuf
  3250 ;;		_StartTx
  3251 ;; This function is called by:
  3252 ;;		_GenerateCalibration
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text21
  3258  002E34                     __ptext21:
  3259                           	opt stack 0
  3260  002E34                     _SendThreshold:
  3261                           	opt stack 21
  3262                           
  3263                           ;Wireless.c: 147: while(BusyTx());
  3264                           
  3265                           ;incstack = 0
  3266  002E34  D000               	goto	l5490
  3267  002E36                     l5490:
  3268  002E36  EC8A  F01B         	call	_BusyTx	;wreg free
  3269  002E3A  0900               	iorlw	0
  3270  002E3C  A4D8               	btfss	status,2,c
  3271  002E3E  D7FB               	goto	l5490
  3272                           
  3273                           ;Wireless.c: 148: FlushTxBuf();
  3274  002E40  ECC7  F019         	call	_FlushTxBuf	;wreg free
  3275                           
  3276                           ;Wireless.c: 150: PutCharTxBuf(0xAA);
  3277  002E44  0EAA               	movlw	170
  3278  002E46  ECCD  F018         	call	_PutCharTxBuf
  3279                           
  3280                           ;Wireless.c: 151: PutCharTxBuf(0x31);
  3281  002E4A  0E31               	movlw	49
  3282  002E4C  ECCD  F018         	call	_PutCharTxBuf
  3283                           
  3284                           ;Wireless.c: 153: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  3285  002E50  C075  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3286  002E54  C076  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3287  002E58  CFDE F077          	movff	postinc2,??_SendThreshold
  3288  002E5C  CFDD F078          	movff	postdec2,??_SendThreshold+1
  3289  002E60  C078  F077         	movff	??_SendThreshold+1,??_SendThreshold
  3290  002E64  0100               	movlb	0	; () banked
  3291  002E66  6B78               	clrf	(??_SendThreshold+1)& (0+255),b
  3292  002E68  BF77               	btfsc	??_SendThreshold& (0+255),7,b
  3293  002E6A  6978               	setf	(??_SendThreshold+1)& (0+255),b
  3294  002E6C  0100               	movlb	0	; () banked
  3295  002E6E  5177               	movf	??_SendThreshold& (0+255),w,b
  3296  002E70  ECCD  F018         	call	_PutCharTxBuf
  3297                           
  3298                           ;Wireless.c: 154: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  3299  002E74  C075  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3300  002E78  C076  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3301  002E7C  50DF               	movf	indf2,w,c
  3302  002E7E  ECCD  F018         	call	_PutCharTxBuf
  3303                           
  3304                           ;Wireless.c: 156: PutCharTxBuf('\r');
  3305  002E82  0E0D               	movlw	13
  3306  002E84  ECCD  F018         	call	_PutCharTxBuf
  3307                           
  3308                           ;Wireless.c: 157: PutCharTxBuf('\n');
  3309  002E88  0E0A               	movlw	10
  3310  002E8A  ECCD  F018         	call	_PutCharTxBuf
  3311                           
  3312                           ;Wireless.c: 158: while (BusyTx());
  3313  002E8E  D000               	goto	l5494
  3314  002E90                     l5494:
  3315  002E90  EC8A  F01B         	call	_BusyTx	;wreg free
  3316  002E94  0900               	iorlw	0
  3317  002E96  A4D8               	btfss	status,2,c
  3318  002E98  D7FB               	goto	l5494
  3319                           
  3320                           ;Wireless.c: 159: StartTx();
  3321  002E9A  ECD2  F01B         	call	_StartTx	;wreg free
  3322  002E9E  0012               	return		;funcret
  3323  002EA0                     __end_of_SendThreshold:
  3324                           	opt stack 0
  3325                           prodh	equ	0xFF4
  3326                           prodl	equ	0xFF3
  3327                           intcon	equ	0xFF2
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           indf2	equ	0xFDF
  3331                           postinc2	equ	0xFDE
  3332                           postdec2	equ	0xFDD
  3333                           fsr2h	equ	0xFDA
  3334                           fsr2l	equ	0xFD9
  3335                           status	equ	0xFD8
  3336                           
  3337 ;; *************** function _SendStatus *****************
  3338 ;; Defined at:
  3339 ;;		line 99 in file "Wireless.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  status_code     1    wreg     const unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  status_code     1   21[BANK0 ] const unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;		None               void
  3346 ;; Registers used:
  3347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        1 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    9
  3360 ;; This function calls:
  3361 ;;		_BusyTx
  3362 ;;		_FlushTxBuf
  3363 ;;		_PutCharTxBuf
  3364 ;;		_StartTx
  3365 ;; This function is called by:
  3366 ;;		_GenerateCalibration
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text22
  3372  003252                     __ptext22:
  3373                           	opt stack 0
  3374  003252                     _SendStatus:
  3375                           	opt stack 21
  3376                           
  3377                           ;incstack = 0
  3378                           ;SendStatus@status_code stored from wreg
  3379  003252  0100               	movlb	0	; () banked
  3380  003254  6F75               	movwf	SendStatus@status_code& (0+255),b
  3381                           
  3382                           ; BSR set to: 0
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;Wireless.c: 100: while(BusyTx());
  3386  003256  D000               	goto	l5454
  3387  003258                     l5454:
  3388  003258  EC8A  F01B         	call	_BusyTx	;wreg free
  3389  00325C  0900               	iorlw	0
  3390  00325E  A4D8               	btfss	status,2,c
  3391  003260  D7FB               	goto	l5454
  3392                           
  3393                           ;Wireless.c: 101: FlushTxBuf();
  3394  003262  ECC7  F019         	call	_FlushTxBuf	;wreg free
  3395                           
  3396                           ;Wireless.c: 103: PutCharTxBuf(0xAA);
  3397  003266  0EAA               	movlw	170
  3398  003268  ECCD  F018         	call	_PutCharTxBuf
  3399                           
  3400                           ;Wireless.c: 104: PutCharTxBuf(0x01);
  3401  00326C  0E01               	movlw	1
  3402  00326E  ECCD  F018         	call	_PutCharTxBuf
  3403                           
  3404                           ;Wireless.c: 105: PutCharTxBuf(status_code);
  3405  003272  0100               	movlb	0	; () banked
  3406  003274  5175               	movf	SendStatus@status_code& (0+255),w,b
  3407  003276  ECCD  F018         	call	_PutCharTxBuf
  3408                           
  3409                           ;Wireless.c: 106: PutCharTxBuf('\r');
  3410  00327A  0E0D               	movlw	13
  3411  00327C  ECCD  F018         	call	_PutCharTxBuf
  3412                           
  3413                           ;Wireless.c: 107: PutCharTxBuf('\n');
  3414  003280  0E0A               	movlw	10
  3415  003282  ECCD  F018         	call	_PutCharTxBuf
  3416                           
  3417                           ;Wireless.c: 109: StartTx();
  3418  003286  ECD2  F01B         	call	_StartTx	;wreg free
  3419  00328A  0012               	return		;funcret
  3420  00328C                     __end_of_SendStatus:
  3421                           	opt stack 0
  3422                           prodh	equ	0xFF4
  3423                           prodl	equ	0xFF3
  3424                           intcon	equ	0xFF2
  3425                           postinc0	equ	0xFEE
  3426                           wreg	equ	0xFE8
  3427                           indf2	equ	0xFDF
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _SendOffsets *****************
  3435 ;; Defined at:
  3436 ;;		line 125 in file "Wireless.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  offsets_arra    2   21[BANK0 ] PTR const int 
  3439 ;;		 -> sensor_offsets(10), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  index           1   25[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:        5 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    9
  3458 ;; This function calls:
  3459 ;;		_BusyTx
  3460 ;;		_FlushTxBuf
  3461 ;;		_PutCharTxBuf
  3462 ;;		_StartTx
  3463 ;; This function is called by:
  3464 ;;		_GenerateCalibration
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text23
  3470  002986                     __ptext23:
  3471                           	opt stack 0
  3472  002986                     _SendOffsets:
  3473                           	opt stack 21
  3474                           
  3475                           ;Wireless.c: 126: unsigned char index;
  3476                           ;Wireless.c: 128: while(BusyTx());
  3477                           
  3478                           ;incstack = 0
  3479  002986  D000               	goto	l5464
  3480  002988                     l5464:
  3481  002988  EC8A  F01B         	call	_BusyTx	;wreg free
  3482  00298C  0900               	iorlw	0
  3483  00298E  A4D8               	btfss	status,2,c
  3484  002990  D7FB               	goto	l5464
  3485                           
  3486                           ;Wireless.c: 129: FlushTxBuf();
  3487  002992  ECC7  F019         	call	_FlushTxBuf	;wreg free
  3488                           
  3489                           ;Wireless.c: 131: PutCharTxBuf(0xAA);
  3490  002996  0EAA               	movlw	170
  3491  002998  ECCD  F018         	call	_PutCharTxBuf
  3492                           
  3493                           ;Wireless.c: 132: PutCharTxBuf(0x21);
  3494  00299C  0E21               	movlw	33
  3495  00299E  ECCD  F018         	call	_PutCharTxBuf
  3496                           
  3497                           ;Wireless.c: 134: for(index = 0; index < 5; index++) {
  3498  0029A2  0E00               	movlw	0
  3499  0029A4  0100               	movlb	0	; () banked
  3500  0029A6  6F79               	movwf	SendOffsets@index& (0+255),b
  3501  0029A8                     l5470:
  3502                           
  3503                           ; BSR set to: 0
  3504  0029A8  0E04               	movlw	4
  3505  0029AA  0100               	movlb	0	; () banked
  3506  0029AC  6579               	cpfsgt	SendOffsets@index& (0+255),b
  3507  0029AE  D001               	goto	l5474
  3508                           
  3509                           ; BSR set to: 0
  3510  0029B0  D02C               	goto	l5480
  3511  0029B2                     l5474:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;Wireless.c: 135: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3515  0029B2  0100               	movlb	0	; () banked
  3516  0029B4  5179               	movf	SendOffsets@index& (0+255),w,b
  3517  0029B6  0D02               	mullw	2
  3518  0029B8  50F3               	movf	prodl,w,c
  3519  0029BA  0100               	movlb	0	; () banked
  3520  0029BC  2575               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3521  0029BE  6ED9               	movwf	fsr2l,c
  3522  0029C0  50F4               	movf	prodh,w,c
  3523  0029C2  0100               	movlb	0	; () banked
  3524  0029C4  2176               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3525  0029C6  6EDA               	movwf	fsr2h,c
  3526  0029C8  CFDE F077          	movff	postinc2,??_SendOffsets
  3527  0029CC  CFDD F078          	movff	postdec2,??_SendOffsets+1
  3528  0029D0  C078  F077         	movff	??_SendOffsets+1,??_SendOffsets
  3529  0029D4  0100               	movlb	0	; () banked
  3530  0029D6  6B78               	clrf	(??_SendOffsets+1)& (0+255),b
  3531  0029D8  BF77               	btfsc	??_SendOffsets& (0+255),7,b
  3532  0029DA  6978               	setf	(??_SendOffsets+1)& (0+255),b
  3533  0029DC  0100               	movlb	0	; () banked
  3534  0029DE  5177               	movf	??_SendOffsets& (0+255),w,b
  3535  0029E0  ECCD  F018         	call	_PutCharTxBuf
  3536                           
  3537                           ;Wireless.c: 136: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3538  0029E4  0100               	movlb	0	; () banked
  3539  0029E6  5179               	movf	SendOffsets@index& (0+255),w,b
  3540  0029E8  0D02               	mullw	2
  3541  0029EA  50F3               	movf	prodl,w,c
  3542  0029EC  0100               	movlb	0	; () banked
  3543  0029EE  2575               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3544  0029F0  6ED9               	movwf	fsr2l,c
  3545  0029F2  50F4               	movf	prodh,w,c
  3546  0029F4  0100               	movlb	0	; () banked
  3547  0029F6  2176               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3548  0029F8  6EDA               	movwf	fsr2h,c
  3549  0029FA  50DF               	movf	indf2,w,c
  3550  0029FC  0DFF               	mullw	255
  3551  0029FE  50F3               	movf	prodl,w,c
  3552  002A00  ECCD  F018         	call	_PutCharTxBuf
  3553  002A04  0100               	movlb	0	; () banked
  3554  002A06  2B79               	incf	SendOffsets@index& (0+255),f,b
  3555  002A08  D7CF               	goto	l5470
  3556  002A0A                     l5480:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;Wireless.c: 137: }
  3560                           ;Wireless.c: 139: PutCharTxBuf('\r');
  3561  002A0A  0E0D               	movlw	13
  3562  002A0C  ECCD  F018         	call	_PutCharTxBuf
  3563                           
  3564                           ;Wireless.c: 140: PutCharTxBuf('\n');
  3565  002A10  0E0A               	movlw	10
  3566  002A12  ECCD  F018         	call	_PutCharTxBuf
  3567                           
  3568                           ;Wireless.c: 141: while(BusyTx());
  3569  002A16  D000               	goto	l5482
  3570  002A18                     l5482:
  3571  002A18  EC8A  F01B         	call	_BusyTx	;wreg free
  3572  002A1C  0900               	iorlw	0
  3573  002A1E  A4D8               	btfss	status,2,c
  3574  002A20  D7FB               	goto	l5482
  3575                           
  3576                           ;Wireless.c: 142: StartTx();
  3577  002A22  ECD2  F01B         	call	_StartTx	;wreg free
  3578  002A26  0012               	return		;funcret
  3579  002A28                     __end_of_SendOffsets:
  3580                           	opt stack 0
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _StartTx *****************
  3594 ;; Defined at:
  3595 ;;		line 25 in file "Wireless.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    7
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_SendStatus
  3620 ;;		_SendLineMode
  3621 ;;		_SendOffsets
  3622 ;;		_SendThreshold
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text24
  3627  0037A4                     __ptext24:
  3628                           	opt stack 0
  3629  0037A4                     _StartTx:
  3630                           	opt stack 22
  3631                           
  3632                           ;Wireless.c: 26: Tx_complete = 0;
  3633                           
  3634                           ;incstack = 0
  3635  0037A4  0E00               	movlw	0
  3636  0037A6  6E13               	movwf	_Tx_complete,c
  3637                           
  3638                           ;Wireless.c: 27: PIE1bits.TX1IE = 1;
  3639  0037A8  889D               	bsf	3997,4,c	;volatile
  3640  0037AA  0012               	return		;funcret
  3641  0037AC                     __end_of_StartTx:
  3642                           	opt stack 0
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           indf2	equ	0xFDF
  3649                           postinc2	equ	0xFDE
  3650                           postdec2	equ	0xFDD
  3651                           fsr2h	equ	0xFDA
  3652                           fsr2l	equ	0xFD9
  3653                           status	equ	0xFD8
  3654                           
  3655 ;; *************** function _PutCharTxBuf *****************
  3656 ;; Defined at:
  3657 ;;		line 9 in file "Wireless.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  ch              1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  ch              1   20[BANK0 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;		None               void
  3664 ;; Registers used:
  3665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:        2 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    8
  3678 ;; This function calls:
  3679 ;;		___awmod
  3680 ;; This function is called by:
  3681 ;;		_SendStatus
  3682 ;;		_SendLineMode
  3683 ;;		_SendOffsets
  3684 ;;		_SendThreshold
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text25
  3689  00319A                     __ptext25:
  3690                           	opt stack 0
  3691  00319A                     _PutCharTxBuf:
  3692                           	opt stack 21
  3693                           
  3694                           ;incstack = 0
  3695                           ;PutCharTxBuf@ch stored from wreg
  3696  00319A  0100               	movlb	0	; () banked
  3697  00319C  6F74               	movwf	PutCharTxBuf@ch& (0+255),b
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  3701  00319E  5018               	movf	_put_Tx_index,w,c
  3702  0031A0  0D01               	mullw	1
  3703  0031A2  0EB2               	movlw	low _Tx_buffer
  3704  0031A4  24F3               	addwf	prodl,w,c
  3705  0031A6  6ED9               	movwf	fsr2l,c
  3706  0031A8  0E00               	movlw	high _Tx_buffer
  3707  0031AA  20F4               	addwfc	prodh,w,c
  3708  0031AC  6EDA               	movwf	fsr2h,c
  3709  0031AE  C074  FFDF         	movff	PutCharTxBuf@ch,indf2
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 20;
  3713  0031B2  C018  F042         	movff	_put_Tx_index,??_PutCharTxBuf
  3714  0031B6  0E01               	movlw	1
  3715  0031B8  2642               	addwf	??_PutCharTxBuf,f,c
  3716  0031BA  5042               	movf	??_PutCharTxBuf,w,c
  3717  0031BC  0100               	movlb	0	; () banked
  3718  0031BE  6F6E               	movwf	___awmod@dividend& (0+255),b
  3719  0031C0  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  3720  0031C2  0E00               	movlw	0
  3721  0031C4  0100               	movlb	0	; () banked
  3722  0031C6  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  3723  0031C8  0E14               	movlw	20
  3724  0031CA  6F70               	movwf	___awmod@divisor& (0+255),b
  3725  0031CC  EC65  F013         	call	___awmod	;wreg free
  3726  0031D0  0100               	movlb	0	; () banked
  3727  0031D2  516E               	movf	?___awmod& (0+255),w,b
  3728  0031D4  6E18               	movwf	_put_Tx_index,c
  3729                           
  3730                           ; BSR set to: 0
  3731  0031D6  0012               	return		;funcret
  3732  0031D8                     __end_of_PutCharTxBuf:
  3733                           	opt stack 0
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           indf2	equ	0xFDF
  3740                           postinc2	equ	0xFDE
  3741                           postdec2	equ	0xFDD
  3742                           fsr2h	equ	0xFDA
  3743                           fsr2l	equ	0xFD9
  3744                           status	equ	0xFD8
  3745                           
  3746 ;; *************** function ___awmod *****************
  3747 ;; Defined at:
  3748 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  dividend        2   14[BANK0 ] int 
  3751 ;;  divisor         2   16[BANK0 ] int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  sign            1   19[BANK0 ] unsigned char 
  3754 ;;  counter         1   18[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  2   14[BANK0 ] int 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        6 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    7
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_PutCharTxBuf
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text26
  3779  0026CA                     __ptext26:
  3780                           	opt stack 0
  3781  0026CA                     ___awmod:
  3782                           	opt stack 21
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;incstack = 0
  3786  0026CA  0E00               	movlw	0
  3787  0026CC  0100               	movlb	0	; () banked
  3788  0026CE  6F73               	movwf	___awmod@sign& (0+255),b
  3789                           
  3790                           ; BSR set to: 0
  3791  0026D0  0100               	movlb	0	; () banked
  3792  0026D2  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  3793  0026D4  D009               	goto	l4994
  3794                           
  3795                           ; BSR set to: 0
  3796  0026D6  0100               	movlb	0	; () banked
  3797  0026D8  6D6E               	negf	___awmod@dividend& (0+255),b
  3798  0026DA  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  3799  0026DC  B0D8               	btfsc	status,0,c
  3800  0026DE  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  3801                           
  3802                           ; BSR set to: 0
  3803  0026E0  0E01               	movlw	1
  3804  0026E2  0100               	movlb	0	; () banked
  3805  0026E4  6F73               	movwf	___awmod@sign& (0+255),b
  3806  0026E6  D000               	goto	l4994
  3807  0026E8                     l4994:
  3808                           
  3809                           ; BSR set to: 0
  3810  0026E8  0100               	movlb	0	; () banked
  3811  0026EA  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3812  0026EC  D006               	goto	l4998
  3813                           
  3814                           ; BSR set to: 0
  3815  0026EE  0100               	movlb	0	; () banked
  3816  0026F0  6D70               	negf	___awmod@divisor& (0+255),b
  3817  0026F2  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  3818  0026F4  B0D8               	btfsc	status,0,c
  3819  0026F6  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  3820  0026F8  D000               	goto	l4998
  3821  0026FA                     l4998:
  3822                           
  3823                           ; BSR set to: 0
  3824  0026FA  0100               	movlb	0	; () banked
  3825  0026FC  5170               	movf	___awmod@divisor& (0+255),w,b
  3826  0026FE  0100               	movlb	0	; () banked
  3827  002700  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3828  002702  B4D8               	btfsc	status,2,c
  3829  002704  D02B               	goto	l5014
  3830                           
  3831                           ; BSR set to: 0
  3832  002706  0E01               	movlw	1
  3833  002708  0100               	movlb	0	; () banked
  3834  00270A  6F72               	movwf	___awmod@counter& (0+255),b
  3835  00270C  D007               	goto	l5004
  3836  00270E                     l5002:
  3837                           
  3838                           ; BSR set to: 0
  3839  00270E  0100               	movlb	0	; () banked
  3840  002710  90D8               	bcf	status,0,c
  3841  002712  3770               	rlcf	___awmod@divisor& (0+255),f,b
  3842  002714  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3843  002716  0100               	movlb	0	; () banked
  3844  002718  2B72               	incf	___awmod@counter& (0+255),f,b
  3845  00271A  D000               	goto	l5004
  3846  00271C                     l5004:
  3847                           
  3848                           ; BSR set to: 0
  3849  00271C  0100               	movlb	0	; () banked
  3850  00271E  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3851  002720  D002               	goto	l5006
  3852  002722  D7F5               	goto	l5002
  3853                           
  3854                           ; BSR set to: 0
  3855  002724  D000               	goto	l5006
  3856  002726                     l5006:
  3857                           
  3858                           ; BSR set to: 0
  3859  002726  0100               	movlb	0	; () banked
  3860  002728  5170               	movf	___awmod@divisor& (0+255),w,b
  3861  00272A  0100               	movlb	0	; () banked
  3862  00272C  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  3863  00272E  0100               	movlb	0	; () banked
  3864  002730  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  3865  002732  0100               	movlb	0	; () banked
  3866  002734  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3867  002736  A0D8               	btfss	status,0,c
  3868  002738  D009               	goto	l5010
  3869                           
  3870                           ; BSR set to: 0
  3871  00273A  0100               	movlb	0	; () banked
  3872  00273C  5170               	movf	___awmod@divisor& (0+255),w,b
  3873  00273E  0100               	movlb	0	; () banked
  3874  002740  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  3875  002742  0100               	movlb	0	; () banked
  3876  002744  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  3877  002746  0100               	movlb	0	; () banked
  3878  002748  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3879  00274A  D000               	goto	l5010
  3880  00274C                     l5010:
  3881                           
  3882                           ; BSR set to: 0
  3883  00274C  0100               	movlb	0	; () banked
  3884  00274E  90D8               	bcf	status,0,c
  3885  002750  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3886  002752  3370               	rrcf	___awmod@divisor& (0+255),f,b
  3887                           
  3888                           ; BSR set to: 0
  3889  002754  0100               	movlb	0	; () banked
  3890  002756  2F72               	decfsz	___awmod@counter& (0+255),f,b
  3891  002758  D7E6               	goto	l5006
  3892                           
  3893                           ; BSR set to: 0
  3894  00275A  D000               	goto	l5014
  3895  00275C                     l5014:
  3896                           
  3897                           ; BSR set to: 0
  3898  00275C  0100               	movlb	0	; () banked
  3899  00275E  5173               	movf	___awmod@sign& (0+255),w,b
  3900  002760  0100               	movlb	0	; () banked
  3901  002762  B4D8               	btfsc	status,2,c
  3902  002764  D006               	goto	l5018
  3903                           
  3904                           ; BSR set to: 0
  3905  002766  0100               	movlb	0	; () banked
  3906  002768  6D6E               	negf	___awmod@dividend& (0+255),b
  3907  00276A  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  3908  00276C  B0D8               	btfsc	status,0,c
  3909  00276E  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  3910  002770  D000               	goto	l5018
  3911  002772                     l5018:
  3912                           
  3913                           ; BSR set to: 0
  3914  002772  C06E  F06E         	movff	___awmod@dividend,?___awmod
  3915  002776  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  3916  00277A  D000               	goto	l1064
  3917  00277C                     l1064:
  3918                           
  3919                           ; BSR set to: 0
  3920  00277C  0012               	return		;funcret
  3921  00277E                     __end_of___awmod:
  3922                           	opt stack 0
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           intcon	equ	0xFF2
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           indf2	equ	0xFDF
  3929                           postinc2	equ	0xFDE
  3930                           postdec2	equ	0xFDD
  3931                           fsr2h	equ	0xFDA
  3932                           fsr2l	equ	0xFD9
  3933                           status	equ	0xFD8
  3934                           
  3935 ;; *************** function _BusyTx *****************
  3936 ;; Defined at:
  3937 ;;		line 95 in file "Wireless.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      unsigned char 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    7
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_SendStatus
  3962 ;;		_SendLineMode
  3963 ;;		_SendOffsets
  3964 ;;		_SendThreshold
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text27
  3969  003714                     __ptext27:
  3970                           	opt stack 0
  3971  003714                     _BusyTx:
  3972                           	opt stack 22
  3973                           
  3974                           ;Wireless.c: 96: return(!Tx_complete);
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;incstack = 0
  3978  003714  5013               	movf	_Tx_complete,w,c
  3979  003716  A4D8               	btfss	status,2,c
  3980  003718  D002               	goto	u4670
  3981  00371A  0E01               	movlw	1
  3982  00371C  D002               	goto	l619
  3983  00371E                     u4670:
  3984  00371E  0E00               	movlw	0
  3985  003720  D000               	goto	l619
  3986  003722                     l619:
  3987  003722  0012               	return		;funcret
  3988  003724                     __end_of_BusyTx:
  3989                           	opt stack 0
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           postinc0	equ	0xFEE
  3994                           wreg	equ	0xFE8
  3995                           indf2	equ	0xFDF
  3996                           postinc2	equ	0xFDE
  3997                           postdec2	equ	0xFDD
  3998                           fsr2h	equ	0xFDA
  3999                           fsr2l	equ	0xFD9
  4000                           status	equ	0xFD8
  4001                           
  4002 ;; *************** function _PB1pressed *****************
  4003 ;; Defined at:
  4004 ;;		line 457 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    8
  4025 ;; This function calls:
  4026 ;;		_ReadMillis2
  4027 ;;		_ResetMillis2
  4028 ;; This function is called by:
  4029 ;;		_GenerateCalibration
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text28
  4035  0031D8                     __ptext28:
  4036                           	opt stack 0
  4037  0031D8                     _PB1pressed:
  4038                           	opt stack 22
  4039                           
  4040                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 458: if(PORTBbits.RB1 == 0) {
  4041                           
  4042                           ;incstack = 0
  4043  0031D8  B281               	btfsc	3969,1,c	;volatile
  4044  0031DA  D003               	goto	l238
  4045  0031DC  D016               	goto	l5412
  4046                           
  4047                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 459: return(0);
  4048  0031DE  D01A               	goto	l239
  4049                           
  4050                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 460: }
  4051  0031E0  D017               	goto	l5416
  4052  0031E2                     l238:
  4053                           
  4054                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 461: else if(PORTBbits.RB1 == 1) {
  4055  0031E2  A281               	btfss	3969,1,c	;volatile
  4056  0031E4  D015               	goto	l5416
  4057                           
  4058                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 462: ResetMillis2();
  4059  0031E6  ECC8  F01B         	call	_ResetMillis2	;wreg free
  4060                           
  4061                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 463: while(ReadMillis2() < 10);
  4062  0031EA  D000               	goto	l5404
  4063  0031EC                     l5404:
  4064  0031EC  ECCD  F01B         	call	_ReadMillis2	;wreg free
  4065  0031F0  0100               	movlb	0	; () banked
  4066  0031F2  516F               	movf	(?_ReadMillis2+1)& (0+255),w,b
  4067  0031F4  E105               	bnz	u4890
  4068  0031F6  0E0A               	movlw	10
  4069  0031F8  0100               	movlb	0	; () banked
  4070  0031FA  5D6E               	subwf	?_ReadMillis2& (0+255),w,b
  4071  0031FC  A0D8               	btfss	status,0,c
  4072  0031FE  D7F6               	goto	l5404
  4073  003200                     u4890:
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 464: if(PORTBbits.RB1 == 1) {
  4077  003200  A281               	btfss	3969,1,c	;volatile
  4078  003202  D003               	goto	l5412
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 465: return(1);
  4082  003204  0E01               	movlw	1
  4083                           
  4084                           ; BSR set to: 0
  4085  003206  D006               	goto	l239
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 466: }
  4089  003208  D003               	goto	l5416
  4090  00320A                     l5412:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 467: else {
  4094                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 468: return(0);
  4095  00320A  0E00               	movlw	0
  4096                           
  4097                           ; BSR set to: 0
  4098  00320C  D003               	goto	l239
  4099                           
  4100                           ; BSR set to: 0
  4101                           
  4102                           ; BSR set to: 0
  4103  00320E  D000               	goto	l5416
  4104  003210                     l5416:
  4105                           
  4106                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 469: }
  4107                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 470: }
  4108                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 472: return(0);
  4109  003210  0E00               	movlw	0
  4110  003212  D000               	goto	l239
  4111  003214                     l239:
  4112  003214  0012               	return		;funcret
  4113  003216                     __end_of_PB1pressed:
  4114                           	opt stack 0
  4115                           prodh	equ	0xFF4
  4116                           prodl	equ	0xFF3
  4117                           intcon	equ	0xFF2
  4118                           postinc0	equ	0xFEE
  4119                           wreg	equ	0xFE8
  4120                           indf2	equ	0xFDF
  4121                           postinc2	equ	0xFDE
  4122                           postdec2	equ	0xFDD
  4123                           fsr2h	equ	0xFDA
  4124                           fsr2l	equ	0xFD9
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _ResetMillis2 *****************
  4128 ;; Defined at:
  4129 ;;		line 39 in file "MillisecondTimer.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg, status,2
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    7
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_PB1pressed
  4154 ;;		_PB2pressed
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text29
  4159  003790                     __ptext29:
  4160                           	opt stack 0
  4161  003790                     _ResetMillis2:
  4162                           	opt stack 22
  4163                           
  4164                           ;MillisecondTimer.c: 41: millisecond_COUNT2 = 0;
  4165                           
  4166                           ;incstack = 0
  4167  003790  0E00               	movlw	0
  4168  003792  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  4169  003794  0E00               	movlw	0
  4170  003796  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  4171  003798  0012               	return		;funcret
  4172  00379A                     __end_of_ResetMillis2:
  4173                           	opt stack 0
  4174                           prodh	equ	0xFF4
  4175                           prodl	equ	0xFF3
  4176                           intcon	equ	0xFF2
  4177                           postinc0	equ	0xFEE
  4178                           wreg	equ	0xFE8
  4179                           indf2	equ	0xFDF
  4180                           postinc2	equ	0xFDE
  4181                           postdec2	equ	0xFDD
  4182                           fsr2h	equ	0xFDA
  4183                           fsr2l	equ	0xFD9
  4184                           status	equ	0xFD8
  4185                           
  4186 ;; *************** function _ReadMillis2 *****************
  4187 ;; Defined at:
  4188 ;;		line 19 in file "MillisecondTimer.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2   14[BANK0 ] unsigned int 
  4195 ;; Registers used:
  4196 ;;		None
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;Total ram usage:        2 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    7
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_PB1pressed
  4213 ;;		_PB2pressed
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text30
  4218  00379A                     __ptext30:
  4219                           	opt stack 0
  4220  00379A                     _ReadMillis2:
  4221                           	opt stack 22
  4222                           
  4223                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  4224                           
  4225                           ;incstack = 0
  4226  00379A  C011  F06E         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  4227  00379E  C012  F06F         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  4228  0037A2  0012               	return		;funcret
  4229  0037A4                     __end_of_ReadMillis2:
  4230                           	opt stack 0
  4231                           prodh	equ	0xFF4
  4232                           prodl	equ	0xFF3
  4233                           intcon	equ	0xFF2
  4234                           postinc0	equ	0xFEE
  4235                           wreg	equ	0xFE8
  4236                           indf2	equ	0xFDF
  4237                           postinc2	equ	0xFDE
  4238                           postdec2	equ	0xFDD
  4239                           fsr2h	equ	0xFDA
  4240                           fsr2l	equ	0xFD9
  4241                           status	equ	0xFD8
  4242                           
  4243 ;; *************** function _FlashLEDS *****************
  4244 ;; Defined at:
  4245 ;;		line 445 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;		None               void
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    8
  4266 ;; This function calls:
  4267 ;;		_Delay10KTCYx
  4268 ;; This function is called by:
  4269 ;;		_GenerateCalibration
  4270 ;;		_LoadCalibration
  4271 ;;		_main
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text31
  4276  00343E                     __ptext31:
  4277                           	opt stack 0
  4278  00343E                     _FlashLEDS:
  4279                           	opt stack 20
  4280                           
  4281                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 446: LATJ = 0x00;
  4282                           
  4283                           ;incstack = 0
  4284  00343E  0E00               	movlw	0
  4285  003440  6E91               	movwf	3985,c	;volatile
  4286                           
  4287                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 447: LATJ = 0x1F;
  4288  003442  0E1F               	movlw	31
  4289  003444  6E91               	movwf	3985,c	;volatile
  4290                           
  4291                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 448: Delay10KTCYx(75);
  4292  003446  0E4B               	movlw	75
  4293  003448  ECC2  F01A         	call	_Delay10KTCYx
  4294                           
  4295                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 449: LATJ = 0x00;
  4296  00344C  0E00               	movlw	0
  4297  00344E  6E91               	movwf	3985,c	;volatile
  4298                           
  4299                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 450: Delay10KTCYx(75);
  4300  003450  0E4B               	movlw	75
  4301  003452  ECC2  F01A         	call	_Delay10KTCYx
  4302                           
  4303                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 451: LATJ = 0x1F;
  4304  003456  0E1F               	movlw	31
  4305  003458  6E91               	movwf	3985,c	;volatile
  4306                           
  4307                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 452: Delay10KTCYx(75);
  4308  00345A  0E4B               	movlw	75
  4309  00345C  ECC2  F01A         	call	_Delay10KTCYx
  4310                           
  4311                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 453: LATJ = 0x00;
  4312  003460  0E00               	movlw	0
  4313  003462  6E91               	movwf	3985,c	;volatile
  4314  003464  0012               	return		;funcret
  4315  003466                     __end_of_FlashLEDS:
  4316                           	opt stack 0
  4317                           prodh	equ	0xFF4
  4318                           prodl	equ	0xFF3
  4319                           intcon	equ	0xFF2
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           indf2	equ	0xFDF
  4323                           postinc2	equ	0xFDE
  4324                           postdec2	equ	0xFDD
  4325                           fsr2h	equ	0xFDA
  4326                           fsr2l	equ	0xFD9
  4327                           status	equ	0xFD8
  4328                           
  4329 ;; *************** function _Delay10KTCYx *****************
  4330 ;; Defined at:
  4331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  unit            1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  unit            1   14[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;		None               void
  4338 ;; Registers used:
  4339 ;;		wreg
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:        2 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    7
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_FlashLEDS
  4356 ;;		_GenerateCalibration
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text32
  4361  003584                     __ptext32:
  4362                           	opt stack 0
  4363  003584                     _Delay10KTCYx:
  4364                           	opt stack 20
  4365                           
  4366                           ;incstack = 0
  4367                           ;Delay10KTCYx@unit stored from wreg
  4368  003584  0100               	movlb	0	; () banked
  4369  003586  6F6E               	movwf	Delay10KTCYx@unit& (0+255),b
  4370  003588                     
  4371                           ; BSR set to: 0
  4372  003588  0E0D               	movlw	13
  4373  00358A  6E42               	movwf	??_Delay10KTCYx& (0+255),c
  4374  00358C  0EFC               	movlw	252
  4375  00358E                     u5717:
  4376  00358E  2EE8               	decfsz	wreg,f,c
  4377  003590  D7FE               	goto	u5717
  4378  003592  2E42               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4379  003594  D7FC               	goto	u5717
  4380  003596  0100               	movlb	0	; () banked
  4381  003598  2F6E               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  4382  00359A  D7F6               	goto	l5178
  4383  00359C  D000               	goto	l1083
  4384  00359E                     l1083:
  4385                           
  4386                           ; BSR set to: 0
  4387  00359E  0012               	return		;funcret
  4388  0035A0                     __end_of_Delay10KTCYx:
  4389                           	opt stack 0
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           intcon	equ	0xFF2
  4393                           postinc0	equ	0xFEE
  4394                           wreg	equ	0xFE8
  4395                           indf2	equ	0xFDF
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _CalibrateThreshold *****************
  4403 ;; Defined at:
  4404 ;;		line 512 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  sum             1    0        unsigned char 
  4409 ;;  index           1    0        unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;		None               void
  4412 ;; Registers used:
  4413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:   10
  4426 ;; This function calls:
  4427 ;;		_BusyADC
  4428 ;;		_BusySensorAcq
  4429 ;;		_CalculateSensorStatuses
  4430 ;;		_ConvertADC
  4431 ;;		_DisplaySensorStatuses
  4432 ;;		_GetSensorReadings
  4433 ;;		_NormaliseSensorReadings
  4434 ;;		_ReadADC
  4435 ;;		_SetADCChannel
  4436 ;; This function is called by:
  4437 ;;		_GenerateCalibration
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text33
  4442  002F68                     __ptext33:
  4443                           	opt stack 0
  4444  002F68                     _CalibrateThreshold:
  4445                           	opt stack 18
  4446                           
  4447                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 513: unsigned char index, sum;
  4448                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 515: LATJ = 0x00;
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;incstack = 0
  4452  002F68  0E00               	movlw	0
  4453  002F6A  6E91               	movwf	3985,c	;volatile
  4454                           
  4455                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 518: SetADCChannel(5);
  4456  002F6C  0E05               	movlw	5
  4457  002F6E  ECD9  F010         	call	_SetADCChannel
  4458                           
  4459                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 519: ConvertADC();
  4460  002F72  ECE3  F01B         	call	_ConvertADC	;wreg free
  4461                           
  4462                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 520: while(BusyADC());
  4463  002F76  D000               	goto	l5442
  4464  002F78                     l5442:
  4465  002F78  ECB0  F01B         	call	_BusyADC	;wreg free
  4466  002F7C  0900               	iorlw	0
  4467  002F7E  A4D8               	btfss	status,2,c
  4468  002F80  D7FB               	goto	l5442
  4469                           
  4470                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 521: sensor_threshold = ReadADC();
  4471  002F82  EC4A  F01B         	call	_ReadADC	;wreg free
  4472  002F86  C06E  F022         	movff	?_ReadADC,_sensor_threshold
  4473  002F8A  C06F  F023         	movff	?_ReadADC+1,_sensor_threshold+1
  4474                           
  4475                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 524: GetSensorReadings();
  4476  002F8E  EC1E  F01B         	call	_GetSensorReadings	;wreg free
  4477                           
  4478                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 526: while(BusySensorAcq());
  4479  002F92  D000               	goto	l5448
  4480  002F94                     l5448:
  4481  002F94  EC92  F01B         	call	_BusySensorAcq	;wreg free
  4482  002F98  0900               	iorlw	0
  4483  002F9A  A4D8               	btfss	status,2,c
  4484  002F9C  D7FB               	goto	l5448
  4485                           
  4486                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 528: NormaliseSensorReadings();
  4487  002F9E  EC50  F017         	call	_NormaliseSensorReadings	;wreg free
  4488                           
  4489                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 530: CalculateSensorStatuses();
  4490  002FA2  EC38  F012         	call	_CalculateSensorStatuses	;wreg free
  4491                           
  4492                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 532: DisplaySensorStatuses(sensor_status);
  4493  002FA6  0E1D               	movlw	low _sensor_status
  4494  002FA8  0100               	movlb	0	; () banked
  4495  002FAA  6F6E               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  4496  002FAC  0E00               	movlw	high _sensor_status
  4497  002FAE  0100               	movlb	0	; () banked
  4498  002FB0  6F6F               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  4499  002FB2  EC04  F018         	call	_DisplaySensorStatuses	;wreg free
  4500  002FB6  0012               	return		;funcret
  4501  002FB8                     __end_of_CalibrateThreshold:
  4502                           	opt stack 0
  4503                           prodh	equ	0xFF4
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           indf2	equ	0xFDF
  4509                           postinc2	equ	0xFDE
  4510                           postdec2	equ	0xFDD
  4511                           fsr2h	equ	0xFDA
  4512                           fsr2l	equ	0xFD9
  4513                           status	equ	0xFD8
  4514                           
  4515 ;; *************** function _ReadADC *****************
  4516 ;; Defined at:
  4517 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2   14[BANK0 ] int 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;Total ram usage:        4 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    7
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_CalibrateThreshold
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text34
  4546  003694                     __ptext34:
  4547                           	opt stack 0
  4548  003694                     _ReadADC:
  4549                           	opt stack 20
  4550                           
  4551                           ;incstack = 0
  4552  003694  50C4               	movf	4036,w,c	;volatile
  4553  003696  0100               	movlb	0	; () banked
  4554  003698  6F70               	movwf	??_ReadADC& (0+255),b
  4555  00369A  50C3               	movf	4035,w,c	;volatile
  4556  00369C  0100               	movlb	0	; () banked
  4557  00369E  6F6E               	movwf	?_ReadADC& (0+255),b
  4558  0036A0  C070  F06F         	movff	??_ReadADC,?_ReadADC+1
  4559  0036A4  D000               	goto	l686
  4560  0036A6                     l686:
  4561                           
  4562                           ; BSR set to: 0
  4563  0036A6  0012               	return		;funcret
  4564  0036A8                     __end_of_ReadADC:
  4565                           	opt stack 0
  4566                           prodh	equ	0xFF4
  4567                           prodl	equ	0xFF3
  4568                           intcon	equ	0xFF2
  4569                           postinc0	equ	0xFEE
  4570                           wreg	equ	0xFE8
  4571                           indf2	equ	0xFDF
  4572                           postinc2	equ	0xFDE
  4573                           postdec2	equ	0xFDD
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8
  4577                           
  4578 ;; *************** function _NormaliseSensorReadings *****************
  4579 ;; Defined at:
  4580 ;;		line 331 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  index           1   29[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;		None               void
  4587 ;; Registers used:
  4588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:        5 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    7
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_CalibrateThreshold
  4605 ;;		_main
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text35
  4610  002EA0                     __ptext35:
  4611                           	opt stack 0
  4612  002EA0                     _NormaliseSensorReadings:
  4613                           	opt stack 23
  4614                           
  4615                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 332: unsigned char index;
  4616                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 334: for(index = 0; index < 5; index++) {
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;incstack = 0
  4620  002EA0  0E00               	movlw	0
  4621  002EA2  6E42               	movwf	NormaliseSensorReadings@index,c
  4622  002EA4                     l5120:
  4623  002EA4  0E04               	movlw	4
  4624  002EA6  6442               	cpfsgt	NormaliseSensorReadings@index,c
  4625  002EA8  D001               	goto	l5124
  4626  002EAA  D02E               	goto	l187
  4627  002EAC                     l5124:
  4628                           
  4629                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 336: sensor_readings_normalised[index] = sensor_r
      +                          eadings_raw[index] + sensor_offsets[index];
  4630  002EAC  5042               	movf	NormaliseSensorReadings@index,w,c
  4631  002EAE  0D02               	mullw	2
  4632  002EB0  0EDE               	movlw	low _sensor_offsets
  4633  002EB2  24F3               	addwf	prodl,w,c
  4634  002EB4  6ED9               	movwf	fsr2l,c
  4635  002EB6  0E00               	movlw	high _sensor_offsets
  4636  002EB8  20F4               	addwfc	prodh,w,c
  4637  002EBA  6EDA               	movwf	fsr2h,c
  4638  002EBC  CFDE F06E          	movff	postinc2,??_NormaliseSensorReadings
  4639  002EC0  CFDD F06F          	movff	postdec2,??_NormaliseSensorReadings+1
  4640  002EC4  5042               	movf	NormaliseSensorReadings@index,w,c
  4641  002EC6  0D02               	mullw	2
  4642  002EC8  0ED0               	movlw	low _sensor_readings_raw
  4643  002ECA  24F3               	addwf	prodl,w,c
  4644  002ECC  6ED9               	movwf	fsr2l,c
  4645  002ECE  0E00               	movlw	high _sensor_readings_raw
  4646  002ED0  20F4               	addwfc	prodh,w,c
  4647  002ED2  6EDA               	movwf	fsr2h,c
  4648  002ED4  CFDE F070          	movff	postinc2,??_NormaliseSensorReadings+2
  4649  002ED8  CFDD F071          	movff	postdec2,??_NormaliseSensorReadings+3
  4650  002EDC  0100               	movlb	0	; () banked
  4651  002EDE  516E               	movf	??_NormaliseSensorReadings& (0+255),w,b
  4652  002EE0  0100               	movlb	0	; () banked
  4653  002EE2  2770               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  4654  002EE4  0100               	movlb	0	; () banked
  4655  002EE6  516F               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  4656  002EE8  0100               	movlb	0	; () banked
  4657  002EEA  2371               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  4658  002EEC  5042               	movf	NormaliseSensorReadings@index,w,c
  4659  002EEE  0D02               	mullw	2
  4660  002EF0  0EC6               	movlw	low _sensor_readings_normalised
  4661  002EF2  24F3               	addwf	prodl,w,c
  4662  002EF4  6ED9               	movwf	fsr2l,c
  4663  002EF6  0E00               	movlw	high _sensor_readings_normalised
  4664  002EF8  20F4               	addwfc	prodh,w,c
  4665  002EFA  6EDA               	movwf	fsr2h,c
  4666  002EFC  C070  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  4667  002F00  C071  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  4668                           
  4669                           ; BSR set to: 0
  4670  002F04  2A42               	incf	NormaliseSensorReadings@index,f,c
  4671  002F06  D7CE               	goto	l5120
  4672  002F08                     l187:
  4673  002F08  0012               	return		;funcret
  4674  002F0A                     __end_of_NormaliseSensorReadings:
  4675                           	opt stack 0
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           intcon	equ	0xFF2
  4679                           postinc0	equ	0xFEE
  4680                           wreg	equ	0xFE8
  4681                           indf2	equ	0xFDF
  4682                           postinc2	equ	0xFDE
  4683                           postdec2	equ	0xFDD
  4684                           fsr2h	equ	0xFDA
  4685                           fsr2l	equ	0xFD9
  4686                           status	equ	0xFD8
  4687                           
  4688 ;; *************** function _DisplaySensorStatuses *****************
  4689 ;; Defined at:
  4690 ;;		line 421 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  status_array    2   14[BANK0 ] PTR const unsigned char 
  4693 ;;		 -> sensor_status(5), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  index           1   29[COMRAM] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;		None               void
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;Total ram usage:        5 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    7
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_CalibrateThreshold
  4716 ;;		_main
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text36
  4721  003008                     __ptext36:
  4722                           	opt stack 0
  4723  003008                     _DisplaySensorStatuses:
  4724                           	opt stack 20
  4725                           
  4726                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 422: unsigned char index;
  4727                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 424: for (index = 0; index < 5; index++) {
  4728                           
  4729                           ;incstack = 0
  4730  003008  0E00               	movlw	0
  4731  00300A  6E42               	movwf	DisplaySensorStatuses@index,c
  4732  00300C                     l5168:
  4733  00300C  0E04               	movlw	4
  4734  00300E  6442               	cpfsgt	DisplaySensorStatuses@index,c
  4735  003010  D001               	goto	l5172
  4736  003012  D01D               	goto	l226
  4737  003014                     l5172:
  4738                           
  4739                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 425: LATJ ^= *(status_array + index) << index;
  4740  003014  C042  F070         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  4741  003018  5042               	movf	DisplaySensorStatuses@index,w,c
  4742  00301A  0D01               	mullw	1
  4743  00301C  50F3               	movf	prodl,w,c
  4744  00301E  0100               	movlb	0	; () banked
  4745  003020  256E               	addwf	DisplaySensorStatuses@status_array& (0+255),w,b
  4746  003022  6ED9               	movwf	fsr2l,c
  4747  003024  50F4               	movf	prodh,w,c
  4748  003026  0100               	movlb	0	; () banked
  4749  003028  216F               	addwfc	(DisplaySensorStatuses@status_array+1)& (0+255),w,b
  4750  00302A  6EDA               	movwf	fsr2h,c
  4751  00302C  50DF               	movf	indf2,w,c
  4752  00302E  0100               	movlb	0	; () banked
  4753  003030  6F71               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  4754  003032  0100               	movlb	0	; () banked
  4755  003034  2B70               	incf	??_DisplaySensorStatuses& (0+255),f,b
  4756  003036  D003               	goto	u4604
  4757  003038                     u4605:
  4758  003038  0100               	movlb	0	; () banked
  4759  00303A  90D8               	bcf	status,0,c
  4760  00303C  3771               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  4761  00303E                     u4604:
  4762  00303E  0100               	movlb	0	; () banked
  4763  003040  2F70               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  4764  003042  D7FA               	goto	u4605
  4765  003044  0100               	movlb	0	; () banked
  4766  003046  5171               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  4767  003048  1A91               	xorwf	3985,f,c	;volatile
  4768                           
  4769                           ; BSR set to: 0
  4770  00304A  2A42               	incf	DisplaySensorStatuses@index,f,c
  4771  00304C  D7DF               	goto	l5168
  4772  00304E                     l226:
  4773  00304E  0012               	return		;funcret
  4774  003050                     __end_of_DisplaySensorStatuses:
  4775                           	opt stack 0
  4776                           prodh	equ	0xFF4
  4777                           prodl	equ	0xFF3
  4778                           intcon	equ	0xFF2
  4779                           postinc0	equ	0xFEE
  4780                           wreg	equ	0xFE8
  4781                           indf2	equ	0xFDF
  4782                           postinc2	equ	0xFDE
  4783                           postdec2	equ	0xFDD
  4784                           fsr2h	equ	0xFDA
  4785                           fsr2l	equ	0xFD9
  4786                           status	equ	0xFD8
  4787                           
  4788 ;; *************** function _CalculateSensorStatuses *****************
  4789 ;; Defined at:
  4790 ;;		line 343 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  index           1   29[COMRAM] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;		None               void
  4797 ;; Registers used:
  4798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;Total ram usage:        4 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    7
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_CalibrateThreshold
  4815 ;;		_main
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text37
  4820  002470                     __ptext37:
  4821                           	opt stack 0
  4822  002470                     _CalculateSensorStatuses:
  4823                           	opt stack 20
  4824                           
  4825                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 344: unsigned char index;
  4826                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 347: if(line_mode == 1) {
  4827                           
  4828                           ;incstack = 0
  4829  002470  0424               	decf	_line_mode,w,c
  4830  002472  A4D8               	btfss	status,2,c
  4831  002474  D032               	goto	l5148
  4832                           
  4833                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 348: for(index = 0; index < 5; index++) {
  4834  002476  0E00               	movlw	0
  4835  002478  6E42               	movwf	CalculateSensorStatuses@index,c
  4836  00247A                     l5134:
  4837  00247A  0E04               	movlw	4
  4838  00247C  6442               	cpfsgt	CalculateSensorStatuses@index,c
  4839  00247E  D001               	goto	l5138
  4840  002480  D061               	goto	l201
  4841  002482                     l5138:
  4842                           
  4843                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 350: if(sensor_readings_normalised[index] > senso
      +                          r_threshold) {
  4844  002482  5042               	movf	CalculateSensorStatuses@index,w,c
  4845  002484  0D02               	mullw	2
  4846  002486  0EC6               	movlw	low _sensor_readings_normalised
  4847  002488  24F3               	addwf	prodl,w,c
  4848  00248A  6ED9               	movwf	fsr2l,c
  4849  00248C  0E00               	movlw	high _sensor_readings_normalised
  4850  00248E  20F4               	addwfc	prodh,w,c
  4851  002490  6EDA               	movwf	fsr2h,c
  4852  002492  50DE               	movf	postinc2,w,c
  4853  002494  5C22               	subwf	_sensor_threshold,w,c
  4854  002496  5023               	movf	_sensor_threshold+1,w,c
  4855  002498  0A80               	xorlw	128
  4856  00249A  0100               	movlb	0	; () banked
  4857  00249C  6F70               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  4858  00249E  50DE               	movf	postinc2,w,c
  4859  0024A0  0A80               	xorlw	128
  4860  0024A2  0100               	movlb	0	; () banked
  4861  0024A4  5970               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  4862  0024A6  B0D8               	btfsc	status,0,c
  4863  0024A8  D00A               	goto	l5142
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 351: sensor_status[index] = 1;
  4867  0024AA  5042               	movf	CalculateSensorStatuses@index,w,c
  4868  0024AC  0D01               	mullw	1
  4869  0024AE  0E1D               	movlw	low _sensor_status
  4870  0024B0  24F3               	addwf	prodl,w,c
  4871  0024B2  6ED9               	movwf	fsr2l,c
  4872  0024B4  0E00               	movlw	high _sensor_status
  4873  0024B6  20F4               	addwfc	prodh,w,c
  4874  0024B8  6EDA               	movwf	fsr2h,c
  4875  0024BA  0E01               	movlw	1
  4876  0024BC  D009               	goto	L2
  4877  0024BE                     l5142:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 353: else {
  4881                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 354: sensor_status[index] = 0;
  4882  0024BE  5042               	movf	CalculateSensorStatuses@index,w,c
  4883  0024C0  0D01               	mullw	1
  4884  0024C2  0E1D               	movlw	low _sensor_status
  4885  0024C4  24F3               	addwf	prodl,w,c
  4886  0024C6  6ED9               	movwf	fsr2l,c
  4887  0024C8  0E00               	movlw	high _sensor_status
  4888  0024CA  20F4               	addwfc	prodh,w,c
  4889  0024CC  6EDA               	movwf	fsr2h,c
  4890  0024CE  0E00               	movlw	0
  4891  0024D0                     L2:
  4892  0024D0  6EDF               	movwf	indf2,c
  4893  0024D2  D000               	goto	l5144
  4894  0024D4                     l5144:
  4895                           
  4896                           ; BSR set to: 0
  4897  0024D4  2A42               	incf	CalculateSensorStatuses@index,f,c
  4898  0024D6  D7D1               	goto	l5134
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 355: }
  4902                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 356: }
  4903                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 357: }
  4904                           
  4905                           ; BSR set to: 0
  4906  0024D8  D035               	goto	l201
  4907  0024DA                     l5148:
  4908                           
  4909                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 359: else if(line_mode == 0) {
  4910  0024DA  5024               	movf	_line_mode,w,c
  4911  0024DC  A4D8               	btfss	status,2,c
  4912  0024DE  D032               	goto	l201
  4913                           
  4914                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 361: for(index = 0; index < 5; index++) {
  4915  0024E0  0E00               	movlw	0
  4916  0024E2  6E42               	movwf	CalculateSensorStatuses@index,c
  4917  0024E4                     l5152:
  4918  0024E4  0E04               	movlw	4
  4919  0024E6  6442               	cpfsgt	CalculateSensorStatuses@index,c
  4920  0024E8  D001               	goto	l5156
  4921  0024EA  D02C               	goto	l201
  4922  0024EC                     l5156:
  4923                           
  4924                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 363: if(sensor_readings_normalised[index] < senso
      +                          r_threshold) {
  4925  0024EC  5042               	movf	CalculateSensorStatuses@index,w,c
  4926  0024EE  0D02               	mullw	2
  4927  0024F0  0EC6               	movlw	low _sensor_readings_normalised
  4928  0024F2  24F3               	addwf	prodl,w,c
  4929  0024F4  6ED9               	movwf	fsr2l,c
  4930  0024F6  0E00               	movlw	high _sensor_readings_normalised
  4931  0024F8  20F4               	addwfc	prodh,w,c
  4932  0024FA  6EDA               	movwf	fsr2h,c
  4933  0024FC  5022               	movf	_sensor_threshold,w,c
  4934  0024FE  5CDE               	subwf	postinc2,w,c
  4935  002500  50DE               	movf	postinc2,w,c
  4936  002502  0A80               	xorlw	128
  4937  002504  0100               	movlb	0	; () banked
  4938  002506  6F70               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  4939  002508  5023               	movf	_sensor_threshold+1,w,c
  4940  00250A  0A80               	xorlw	128
  4941  00250C  0100               	movlb	0	; () banked
  4942  00250E  5970               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  4943  002510  B0D8               	btfsc	status,0,c
  4944  002512  D00A               	goto	l5160
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 364: sensor_status[index] = 1;
  4948  002514  5042               	movf	CalculateSensorStatuses@index,w,c
  4949  002516  0D01               	mullw	1
  4950  002518  0E1D               	movlw	low _sensor_status
  4951  00251A  24F3               	addwf	prodl,w,c
  4952  00251C  6ED9               	movwf	fsr2l,c
  4953  00251E  0E00               	movlw	high _sensor_status
  4954  002520  20F4               	addwfc	prodh,w,c
  4955  002522  6EDA               	movwf	fsr2h,c
  4956  002524  0E01               	movlw	1
  4957  002526  D009               	goto	L3
  4958  002528                     l5160:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 366: else {
  4962                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 367: sensor_status[index] = 0;
  4963  002528  5042               	movf	CalculateSensorStatuses@index,w,c
  4964  00252A  0D01               	mullw	1
  4965  00252C  0E1D               	movlw	low _sensor_status
  4966  00252E  24F3               	addwf	prodl,w,c
  4967  002530  6ED9               	movwf	fsr2l,c
  4968  002532  0E00               	movlw	high _sensor_status
  4969  002534  20F4               	addwfc	prodh,w,c
  4970  002536  6EDA               	movwf	fsr2h,c
  4971  002538  0E00               	movlw	0
  4972  00253A                     L3:
  4973  00253A  6EDF               	movwf	indf2,c
  4974  00253C  D000               	goto	l5162
  4975  00253E                     l5162:
  4976                           
  4977                           ; BSR set to: 0
  4978  00253E  2A42               	incf	CalculateSensorStatuses@index,f,c
  4979  002540  D7D1               	goto	l5152
  4980                           
  4981                           ; BSR set to: 0
  4982                           
  4983                           ; BSR set to: 0
  4984                           
  4985                           ; BSR set to: 0
  4986  002542  D000               	goto	l201
  4987  002544                     l201:
  4988  002544  0012               	return		;funcret
  4989  002546                     __end_of_CalculateSensorStatuses:
  4990                           	opt stack 0
  4991                           prodh	equ	0xFF4
  4992                           prodl	equ	0xFF3
  4993                           intcon	equ	0xFF2
  4994                           postinc0	equ	0xFEE
  4995                           wreg	equ	0xFE8
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function _BusyADC *****************
  5004 ;; Defined at:
  5005 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      unsigned char 
  5012 ;; Registers used:
  5013 ;;		wreg
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;Total ram usage:        0 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    7
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_CalibrateThreshold
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text38
  5034  003760                     __ptext38:
  5035                           	opt stack 0
  5036  003760                     _BusyADC:
  5037                           	opt stack 20
  5038                           
  5039                           ;incstack = 0
  5040  003760  A2C2               	btfss	4034,1,c	;volatile
  5041  003762  D002               	goto	u4620
  5042  003764  0E01               	movlw	1
  5043  003766  D002               	goto	l656
  5044  003768                     u4620:
  5045  003768  0E00               	movlw	0
  5046  00376A  D000               	goto	l656
  5047  00376C                     l656:
  5048  00376C  0012               	return		;funcret
  5049  00376E                     __end_of_BusyADC:
  5050                           	opt stack 0
  5051                           prodh	equ	0xFF4
  5052                           prodl	equ	0xFF3
  5053                           intcon	equ	0xFF2
  5054                           postinc0	equ	0xFEE
  5055                           wreg	equ	0xFE8
  5056                           indf2	equ	0xFDF
  5057                           postinc2	equ	0xFDE
  5058                           postdec2	equ	0xFDD
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _CalibrateOffsets *****************
  5064 ;; Defined at:
  5065 ;;		line 496 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  index           1   18[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;		None               void
  5072 ;; Registers used:
  5073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;Total ram usage:        3 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:   10
  5086 ;; This function calls:
  5087 ;;		_BusySensorAcq
  5088 ;;		_GetSensorReadings
  5089 ;; This function is called by:
  5090 ;;		_GenerateCalibration
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text39
  5095  002CD6                     __ptext39:
  5096                           	opt stack 0
  5097  002CD6                     _CalibrateOffsets:
  5098                           	opt stack 18
  5099                           
  5100                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 497: unsigned char index;
  5101                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 499: GetSensorReadings();
  5102                           
  5103                           ;incstack = 0
  5104  002CD6  EC1E  F01B         	call	_GetSensorReadings	;wreg free
  5105                           
  5106                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 501: while(BusySensorAcq());
  5107  002CDA  D000               	goto	l5422
  5108  002CDC                     l5422:
  5109  002CDC  EC92  F01B         	call	_BusySensorAcq	;wreg free
  5110  002CE0  0900               	iorlw	0
  5111  002CE2  A4D8               	btfss	status,2,c
  5112  002CE4  D7FB               	goto	l5422
  5113                           
  5114                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 503: for(index = 0; index < 5; index++) {
  5115  002CE6  0E00               	movlw	0
  5116  002CE8  0100               	movlb	0	; () banked
  5117  002CEA  6F72               	movwf	CalibrateOffsets@index& (0+255),b
  5118  002CEC                     l5426:
  5119                           
  5120                           ; BSR set to: 0
  5121  002CEC  0E04               	movlw	4
  5122  002CEE  0100               	movlb	0	; () banked
  5123  002CF0  6572               	cpfsgt	CalibrateOffsets@index& (0+255),b
  5124  002CF2  D001               	goto	l5430
  5125                           
  5126                           ; BSR set to: 0
  5127  002CF4  D02A               	goto	l265
  5128  002CF6                     l5430:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 505: sensor_offsets[index] = sensor_readings_raw[
      +                          2] - sensor_readings_raw[index];
  5132  002CF6  0100               	movlb	0	; () banked
  5133  002CF8  5172               	movf	CalibrateOffsets@index& (0+255),w,b
  5134  002CFA  0D02               	mullw	2
  5135  002CFC  0ED0               	movlw	low _sensor_readings_raw
  5136  002CFE  24F3               	addwf	prodl,w,c
  5137  002D00  6ED9               	movwf	fsr2l,c
  5138  002D02  0E00               	movlw	high _sensor_readings_raw
  5139  002D04  20F4               	addwfc	prodh,w,c
  5140  002D06  6EDA               	movwf	fsr2h,c
  5141  002D08  CFDE F070          	movff	postinc2,??_CalibrateOffsets
  5142  002D0C  CFDD F071          	movff	postdec2,??_CalibrateOffsets+1
  5143  002D10  0100               	movlb	0	; () banked
  5144  002D12  1F70               	comf	??_CalibrateOffsets& (0+255),f,b
  5145  002D14  1F71               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  5146  002D16  4B70               	infsnz	??_CalibrateOffsets& (0+255),f,b
  5147  002D18  2B71               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  5148  002D1A  0100               	movlb	0	; () banked
  5149  002D1C  51D4               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  5150  002D1E  0100               	movlb	0	; () banked
  5151  002D20  2770               	addwf	??_CalibrateOffsets& (0+255),f,b
  5152  002D22  0100               	movlb	0	; () banked
  5153  002D24  51D5               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  5154  002D26  0100               	movlb	0	; () banked
  5155  002D28  2371               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  5156  002D2A  0100               	movlb	0	; () banked
  5157  002D2C  5172               	movf	CalibrateOffsets@index& (0+255),w,b
  5158  002D2E  0D02               	mullw	2
  5159  002D30  0EDE               	movlw	low _sensor_offsets
  5160  002D32  24F3               	addwf	prodl,w,c
  5161  002D34  6ED9               	movwf	fsr2l,c
  5162  002D36  0E00               	movlw	high _sensor_offsets
  5163  002D38  20F4               	addwfc	prodh,w,c
  5164  002D3A  6EDA               	movwf	fsr2h,c
  5165  002D3C  C070  FFDE         	movff	??_CalibrateOffsets,postinc2
  5166  002D40  C071  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  5167                           
  5168                           ; BSR set to: 0
  5169  002D44  0100               	movlb	0	; () banked
  5170  002D46  2B72               	incf	CalibrateOffsets@index& (0+255),f,b
  5171  002D48  D7D1               	goto	l5426
  5172  002D4A                     l265:
  5173                           
  5174                           ; BSR set to: 0
  5175  002D4A  0012               	return		;funcret
  5176  002D4C                     __end_of_CalibrateOffsets:
  5177                           	opt stack 0
  5178                           prodh	equ	0xFF4
  5179                           prodl	equ	0xFF3
  5180                           intcon	equ	0xFF2
  5181                           postinc0	equ	0xFEE
  5182                           wreg	equ	0xFE8
  5183                           indf2	equ	0xFDF
  5184                           postinc2	equ	0xFDE
  5185                           postdec2	equ	0xFDD
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _GetSensorReadings *****************
  5191 ;; Defined at:
  5192 ;;		line 313 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;		None               void
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    9
  5213 ;; This function calls:
  5214 ;;		_ConvertADC
  5215 ;;		_SetADCChannel
  5216 ;; This function is called by:
  5217 ;;		_CalibrateOffsets
  5218 ;;		_CalibrateThreshold
  5219 ;;		_main
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text40
  5224  00363C                     __ptext40:
  5225                           	opt stack 0
  5226  00363C                     _GetSensorReadings:
  5227                           	opt stack 18
  5228                           
  5229                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 315: sensor_acq_index = 0;
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;incstack = 0
  5233  00363C  0E00               	movlw	0
  5234  00363E  6E1B               	movwf	_sensor_acq_index,c	;volatile
  5235                           
  5236                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 316: sensor_acq_done = 0;
  5237  003640  0E00               	movlw	0
  5238  003642  6E1A               	movwf	_sensor_acq_done,c	;volatile
  5239                           
  5240                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 317: SetADCChannel(sensor_acq_index);
  5241  003644  501B               	movf	_sensor_acq_index,w,c	;volatile
  5242  003646  ECD9  F010         	call	_SetADCChannel
  5243                           
  5244                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 318: ConvertADC();
  5245  00364A  ECE3  F01B         	call	_ConvertADC	;wreg free
  5246                           
  5247                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 319: PIE1bits.ADIE = 1;
  5248  00364E  8C9D               	bsf	3997,6,c	;volatile
  5249  003650  0012               	return		;funcret
  5250  003652                     __end_of_GetSensorReadings:
  5251                           	opt stack 0
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           wreg	equ	0xFE8
  5257                           indf2	equ	0xFDF
  5258                           postinc2	equ	0xFDE
  5259                           postdec2	equ	0xFDD
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function _SetADCChannel *****************
  5265 ;; Defined at:
  5266 ;;		line 255 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  channel         1    wreg     unsigned char 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  channel         1   15[BANK0 ] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;		None               void
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        1 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    8
  5287 ;; This function calls:
  5288 ;;		_SetChanADC
  5289 ;; This function is called by:
  5290 ;;		_GetSensorReadings
  5291 ;;		_CalibrateThreshold
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text41
  5296  0021B2                     __ptext41:
  5297                           	opt stack 0
  5298  0021B2                     _SetADCChannel:
  5299                           	opt stack 19
  5300                           
  5301                           ;incstack = 0
  5302                           ;SetADCChannel@channel stored from wreg
  5303  0021B2  0100               	movlb	0	; () banked
  5304  0021B4  6F6F               	movwf	SetADCChannel@channel& (0+255),b
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 257: switch (channel) {
  5308  0021B6  D040               	goto	l4842
  5309  0021B8                     l4808:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 259: SetChanADC(0b10000111);
  5313  0021B8  0E87               	movlw	135
  5314  0021BA  ECDE  F01A         	call	_SetChanADC
  5315                           
  5316                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 260: break;
  5317  0021BE  D06F               	goto	l176
  5318  0021C0                     l4810:
  5319                           
  5320                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 262: SetChanADC(0b10001111);
  5321  0021C0  0E8F               	movlw	143
  5322  0021C2  ECDE  F01A         	call	_SetChanADC
  5323                           
  5324                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 263: break;
  5325  0021C6  D06B               	goto	l176
  5326  0021C8                     l4812:
  5327                           
  5328                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 265: SetChanADC(0b10010111);
  5329  0021C8  0E97               	movlw	151
  5330  0021CA  ECDE  F01A         	call	_SetChanADC
  5331                           
  5332                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 266: break;
  5333  0021CE  D067               	goto	l176
  5334  0021D0                     l4814:
  5335                           
  5336                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 268: SetChanADC(0b10011111);
  5337  0021D0  0E9F               	movlw	159
  5338  0021D2  ECDE  F01A         	call	_SetChanADC
  5339                           
  5340                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 269: break;
  5341  0021D6  D063               	goto	l176
  5342  0021D8                     l4816:
  5343                           
  5344                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 271: SetChanADC(0b10100111);
  5345  0021D8  0EA7               	movlw	167
  5346  0021DA  ECDE  F01A         	call	_SetChanADC
  5347                           
  5348                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 272: break;
  5349  0021DE  D05F               	goto	l176
  5350  0021E0                     l4818:
  5351                           
  5352                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 274: SetChanADC(0b10101111);
  5353  0021E0  0EAF               	movlw	175
  5354  0021E2  ECDE  F01A         	call	_SetChanADC
  5355                           
  5356                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 275: break;
  5357  0021E6  D05B               	goto	l176
  5358  0021E8                     l4820:
  5359                           
  5360                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 277: SetChanADC(0b10110111);
  5361  0021E8  0EB7               	movlw	183
  5362  0021EA  ECDE  F01A         	call	_SetChanADC
  5363                           
  5364                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 278: break;
  5365  0021EE  D057               	goto	l176
  5366  0021F0                     l4822:
  5367                           
  5368                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 280: SetChanADC(0b10111111);
  5369  0021F0  0EBF               	movlw	191
  5370  0021F2  ECDE  F01A         	call	_SetChanADC
  5371                           
  5372                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 281: break;
  5373  0021F6  D053               	goto	l176
  5374  0021F8                     l4824:
  5375                           
  5376                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 283: SetChanADC(0b11000111);
  5377  0021F8  0EC7               	movlw	199
  5378  0021FA  ECDE  F01A         	call	_SetChanADC
  5379                           
  5380                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 284: break;
  5381  0021FE  D04F               	goto	l176
  5382  002200                     l4826:
  5383                           
  5384                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 286: SetChanADC(0b11001111);
  5385  002200  0ECF               	movlw	207
  5386  002202  ECDE  F01A         	call	_SetChanADC
  5387                           
  5388                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 287: break;
  5389  002206  D04B               	goto	l176
  5390  002208                     l4828:
  5391                           
  5392                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 289: SetChanADC(0b11010111);
  5393  002208  0ED7               	movlw	215
  5394  00220A  ECDE  F01A         	call	_SetChanADC
  5395                           
  5396                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 290: break;
  5397  00220E  D047               	goto	l176
  5398  002210                     l4830:
  5399                           
  5400                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 292: SetChanADC(0b11011111);
  5401  002210  0EDF               	movlw	223
  5402  002212  ECDE  F01A         	call	_SetChanADC
  5403                           
  5404                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 293: break;
  5405  002216  D043               	goto	l176
  5406  002218                     l4832:
  5407                           
  5408                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 295: SetChanADC(0b11100111);
  5409  002218  0EE7               	movlw	231
  5410  00221A  ECDE  F01A         	call	_SetChanADC
  5411                           
  5412                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 296: break;
  5413  00221E  D03F               	goto	l176
  5414  002220                     l4834:
  5415                           
  5416                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 298: SetChanADC(0b11101111);
  5417  002220  0EEF               	movlw	239
  5418  002222  ECDE  F01A         	call	_SetChanADC
  5419                           
  5420                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 299: break;
  5421  002226  D03B               	goto	l176
  5422  002228                     l4836:
  5423                           
  5424                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 301: SetChanADC(0b11110111);
  5425  002228  0EF7               	movlw	247
  5426  00222A  ECDE  F01A         	call	_SetChanADC
  5427                           
  5428                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 302: break;
  5429  00222E  D037               	goto	l176
  5430  002230                     l4838:
  5431                           
  5432                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 304: SetChanADC(0b11111111);
  5433  002230  0EFF               	movlw	255
  5434  002232  ECDE  F01A         	call	_SetChanADC
  5435                           
  5436                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 308: }
  5437                           
  5438                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 307: break;
  5439                           
  5440                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 306: default:
  5441                           
  5442                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 305: break;
  5443  002236  D033               	goto	l176
  5444  002238                     l4842:
  5445  002238  0100               	movlb	0	; () banked
  5446  00223A  516F               	movf	SetADCChannel@channel& (0+255),w,b
  5447                           
  5448                           ; Switch size 1, requested type "space"
  5449                           ; Number of cases is 16, Range of values is 0 to 15
  5450                           ; switch strategies available:
  5451                           ; Name         Instructions Cycles
  5452                           ; simple_byte           49    25 (average)
  5453                           ;	Chosen strategy is simple_byte
  5454  00223C  0A00               	xorlw	0	; case 0
  5455  00223E  B4D8               	btfsc	status,2,c
  5456  002240  D7BB               	goto	l4808
  5457  002242  0A01               	xorlw	1	; case 1
  5458  002244  B4D8               	btfsc	status,2,c
  5459  002246  D7BC               	goto	l4810
  5460  002248  0A03               	xorlw	3	; case 2
  5461  00224A  B4D8               	btfsc	status,2,c
  5462  00224C  D7BD               	goto	l4812
  5463  00224E  0A01               	xorlw	1	; case 3
  5464  002250  B4D8               	btfsc	status,2,c
  5465  002252  D7BE               	goto	l4814
  5466  002254  0A07               	xorlw	7	; case 4
  5467  002256  B4D8               	btfsc	status,2,c
  5468  002258  D7BF               	goto	l4816
  5469  00225A  0A01               	xorlw	1	; case 5
  5470  00225C  B4D8               	btfsc	status,2,c
  5471  00225E  D7C0               	goto	l4818
  5472  002260  0A03               	xorlw	3	; case 6
  5473  002262  B4D8               	btfsc	status,2,c
  5474  002264  D7C1               	goto	l4820
  5475  002266  0A01               	xorlw	1	; case 7
  5476  002268  B4D8               	btfsc	status,2,c
  5477  00226A  D7C2               	goto	l4822
  5478  00226C  0A0F               	xorlw	15	; case 8
  5479  00226E  B4D8               	btfsc	status,2,c
  5480  002270  D7C3               	goto	l4824
  5481  002272  0A01               	xorlw	1	; case 9
  5482  002274  B4D8               	btfsc	status,2,c
  5483  002276  D7C4               	goto	l4826
  5484  002278  0A03               	xorlw	3	; case 10
  5485  00227A  B4D8               	btfsc	status,2,c
  5486  00227C  D7C5               	goto	l4828
  5487  00227E  0A01               	xorlw	1	; case 11
  5488  002280  B4D8               	btfsc	status,2,c
  5489  002282  D7C6               	goto	l4830
  5490  002284  0A07               	xorlw	7	; case 12
  5491  002286  B4D8               	btfsc	status,2,c
  5492  002288  D7C7               	goto	l4832
  5493  00228A  0A01               	xorlw	1	; case 13
  5494  00228C  B4D8               	btfsc	status,2,c
  5495  00228E  D7C8               	goto	l4834
  5496  002290  0A03               	xorlw	3	; case 14
  5497  002292  B4D8               	btfsc	status,2,c
  5498  002294  D7C9               	goto	l4836
  5499  002296  0A01               	xorlw	1	; case 15
  5500  002298  B4D8               	btfsc	status,2,c
  5501  00229A  D7CA               	goto	l4838
  5502  00229C  D000               	goto	l176
  5503  00229E                     l176:
  5504  00229E  0012               	return		;funcret
  5505  0022A0                     __end_of_SetADCChannel:
  5506                           	opt stack 0
  5507                           prodh	equ	0xFF4
  5508                           prodl	equ	0xFF3
  5509                           intcon	equ	0xFF2
  5510                           postinc0	equ	0xFEE
  5511                           wreg	equ	0xFE8
  5512                           indf2	equ	0xFDF
  5513                           postinc2	equ	0xFDE
  5514                           postdec2	equ	0xFDD
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _SetChanADC *****************
  5520 ;; Defined at:
  5521 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  channel         1    wreg     unsigned char 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  channel         1   14[BANK0 ] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:        2 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    7
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_SetADCChannel
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text42
  5550  0035BC                     __ptext42:
  5551                           	opt stack 0
  5552  0035BC                     _SetChanADC:
  5553                           	opt stack 19
  5554                           
  5555                           ;incstack = 0
  5556                           ;SetChanADC@channel stored from wreg
  5557  0035BC  0100               	movlb	0	; () banked
  5558  0035BE  6F6E               	movwf	SetChanADC@channel& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561  0035C0  CFC2 F042          	movff	4034,??_SetChanADC	;volatile
  5562  0035C4  0EC3               	movlw	195
  5563  0035C6  1642               	andwf	??_SetChanADC,f,c
  5564  0035C8  0100               	movlb	0	; () banked
  5565  0035CA  90D8               	bcf	status,0,c
  5566  0035CC  316E               	rrcf	SetChanADC@channel& (0+255),w,b
  5567  0035CE  0B3C               	andlw	60
  5568  0035D0  1042               	iorwf	??_SetChanADC,w,c
  5569  0035D2  6EC2               	movwf	4034,c	;volatile
  5570                           
  5571                           ; BSR set to: 0
  5572  0035D4  0012               	return		;funcret
  5573  0035D6                     __end_of_SetChanADC:
  5574                           	opt stack 0
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function _ConvertADC *****************
  5588 ;; Defined at:
  5589 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;		None               void
  5596 ;; Registers used:
  5597 ;;		None
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;Total ram usage:        0 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    7
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_GetSensorReadings
  5614 ;;		_CalibrateThreshold
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text43
  5619  0037C6                     __ptext43:
  5620                           	opt stack 0
  5621  0037C6                     _ConvertADC:
  5622                           	opt stack 19
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;incstack = 0
  5626  0037C6  82C2               	bsf	4034,1,c	;volatile
  5627  0037C8  0012               	return		;funcret
  5628  0037CA                     __end_of_ConvertADC:
  5629                           	opt stack 0
  5630                           prodh	equ	0xFF4
  5631                           prodl	equ	0xFF3
  5632                           intcon	equ	0xFF2
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           indf2	equ	0xFDF
  5636                           postinc2	equ	0xFDE
  5637                           postdec2	equ	0xFDD
  5638                           fsr2h	equ	0xFDA
  5639                           fsr2l	equ	0xFD9
  5640                           status	equ	0xFD8
  5641                           
  5642 ;; *************** function _BusySensorAcq *****************
  5643 ;; Defined at:
  5644 ;;		line 324 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      unsigned char 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    7
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_CalibrateOffsets
  5669 ;;		_CalibrateThreshold
  5670 ;;		_main
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text44
  5675  003724                     __ptext44:
  5676                           	opt stack 0
  5677  003724                     _BusySensorAcq:
  5678                           	opt stack 20
  5679                           
  5680                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 326: return (!sensor_acq_done);
  5681                           
  5682                           ;incstack = 0
  5683  003724  501A               	movf	_sensor_acq_done,w,c	;volatile
  5684  003726  A4D8               	btfss	status,2,c
  5685  003728  D002               	goto	u4470
  5686  00372A  0E01               	movlw	1
  5687  00372C  D002               	goto	l182
  5688  00372E                     u4470:
  5689  00372E  0E00               	movlw	0
  5690  003730  D000               	goto	l182
  5691  003732                     l182:
  5692  003732  0012               	return		;funcret
  5693  003734                     __end_of_BusySensorAcq:
  5694                           	opt stack 0
  5695                           prodh	equ	0xFF4
  5696                           prodl	equ	0xFF3
  5697                           intcon	equ	0xFF2
  5698                           postinc0	equ	0xFEE
  5699                           wreg	equ	0xFE8
  5700                           indf2	equ	0xFDF
  5701                           postinc2	equ	0xFDE
  5702                           postdec2	equ	0xFDD
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707 ;; *************** function _EnableSensorLEDS *****************
  5708 ;; Defined at:
  5709 ;;		line 431 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;		None               void
  5716 ;; Registers used:
  5717 ;;		wreg, status,2
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    7
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text45
  5738  0037C0                     __ptext45:
  5739                           	opt stack 0
  5740  0037C0                     _EnableSensorLEDS:
  5741                           	opt stack 23
  5742                           
  5743                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 433: LATE = 0x1F;
  5744                           
  5745                           ;incstack = 0
  5746  0037C0  0E1F               	movlw	31
  5747  0037C2  6E8D               	movwf	3981,c	;volatile
  5748  0037C4  0012               	return		;funcret
  5749  0037C6                     __end_of_EnableSensorLEDS:
  5750                           	opt stack 0
  5751                           prodh	equ	0xFF4
  5752                           prodl	equ	0xFF3
  5753                           intcon	equ	0xFF2
  5754                           postinc0	equ	0xFEE
  5755                           wreg	equ	0xFE8
  5756                           indf2	equ	0xFDF
  5757                           postinc2	equ	0xFDE
  5758                           postdec2	equ	0xFDD
  5759                           fsr2h	equ	0xFDA
  5760                           fsr2l	equ	0xFD9
  5761                           status	equ	0xFD8
  5762                           
  5763 ;; *************** function _EnableMotors *****************
  5764 ;; Defined at:
  5765 ;;		line 102 in file "Motors.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;		None               void
  5772 ;; Registers used:
  5773 ;;		None
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;Total ram usage:        0 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    7
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_main
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text46
  5794  0037CA                     __ptext46:
  5795                           	opt stack 0
  5796  0037CA                     _EnableMotors:
  5797                           	opt stack 23
  5798                           
  5799                           ;Motors.c: 104: LATDbits.LATD4 = 1;
  5800                           
  5801                           ;incstack = 0
  5802  0037CA  888C               	bsf	3980,4,c	;volatile
  5803  0037CC  0012               	return		;funcret
  5804  0037CE                     __end_of_EnableMotors:
  5805                           	opt stack 0
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon	equ	0xFF2
  5809                           postinc0	equ	0xFEE
  5810                           wreg	equ	0xFE8
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _DisableMotors *****************
  5819 ;; Defined at:
  5820 ;;		line 108 in file "Motors.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		None
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;Total ram usage:        0 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    7
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text47
  5849  0037CE                     __ptext47:
  5850                           	opt stack 0
  5851  0037CE                     _DisableMotors:
  5852                           	opt stack 23
  5853                           
  5854                           ;Motors.c: 110: LATDbits.LATD4 = 0;
  5855                           
  5856                           ;incstack = 0
  5857  0037CE  988C               	bcf	3980,4,c	;volatile
  5858  0037D0  0012               	return		;funcret
  5859  0037D2                     __end_of_DisableMotors:
  5860                           	opt stack 0
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           postinc0	equ	0xFEE
  5865                           wreg	equ	0xFE8
  5866                           indf2	equ	0xFDF
  5867                           postinc2	equ	0xFDE
  5868                           postdec2	equ	0xFDD
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873 ;; *************** function _ConfigureWireless *****************
  5874 ;; Defined at:
  5875 ;;		line 75 in file "Wireless.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;		None               void
  5882 ;; Registers used:
  5883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    8
  5896 ;; This function calls:
  5897 ;;		_FlushRxBuf
  5898 ;;		_FlushTxBuf
  5899 ;;		_Open1USART
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text48
  5906  003466                     __ptext48:
  5907                           	opt stack 0
  5908  003466                     _ConfigureWireless:
  5909                           	opt stack 22
  5910                           
  5911                           ;Wireless.c: 77: Open1USART(0b01111111
  5912                           ;Wireless.c: 78: & 0b10111111
  5913                           ;Wireless.c: 79: & 0b11111110
  5914                           ;Wireless.c: 80: & 0b11111101
  5915                           ;Wireless.c: 81: & 0b11111111
  5916                           ;Wireless.c: 82: & 0b11111111,
  5917                           ;Wireless.c: 83: 64);
  5918                           
  5919                           ;incstack = 0
  5920  003466  0E00               	movlw	0
  5921  003468  0100               	movlb	0	; () banked
  5922  00346A  6F6F               	movwf	(Open1USART@spbrg+1)& (0+255),b
  5923  00346C  0E40               	movlw	64
  5924  00346E  6F6E               	movwf	Open1USART@spbrg& (0+255),b
  5925  003470  0E3C               	movlw	60
  5926  003472  ECA6  F016         	call	_Open1USART
  5927                           
  5928                           ;Wireless.c: 85: FlushTxBuf();
  5929  003476  ECC7  F019         	call	_FlushTxBuf	;wreg free
  5930                           
  5931                           ;Wireless.c: 86: FlushRxBuf();
  5932  00347A  EC46  F01A         	call	_FlushRxBuf	;wreg free
  5933                           
  5934                           ;Wireless.c: 88: get_Tx_index = 0;
  5935  00347E  0E00               	movlw	0
  5936  003480  6E17               	movwf	_get_Tx_index,c
  5937                           
  5938                           ;Wireless.c: 89: put_Tx_index = 0;
  5939  003482  0E00               	movlw	0
  5940  003484  6E18               	movwf	_put_Tx_index,c
  5941                           
  5942                           ;Wireless.c: 91: Tx_complete = 1;
  5943  003486  0E01               	movlw	1
  5944  003488  6E13               	movwf	_Tx_complete,c
  5945  00348A  0012               	return		;funcret
  5946  00348C                     __end_of_ConfigureWireless:
  5947                           	opt stack 0
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           postinc0	equ	0xFEE
  5952                           wreg	equ	0xFE8
  5953                           indf2	equ	0xFDF
  5954                           postinc2	equ	0xFDE
  5955                           postdec2	equ	0xFDD
  5956                           fsr2h	equ	0xFDA
  5957                           fsr2l	equ	0xFD9
  5958                           status	equ	0xFD8
  5959                           
  5960 ;; *************** function _Open1USART *****************
  5961 ;; Defined at:
  5962 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  config          1    wreg     unsigned char 
  5965 ;;  spbrg           2   14[BANK0 ] unsigned int 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  config          1   29[COMRAM] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;		None               void
  5970 ;; Registers used:
  5971 ;;		wreg, status,2
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;Total ram usage:        3 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    7
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_ConfigureWireless
  5988 ;;		_ConfigureSerial
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text49
  5993  002D4C                     __ptext49:
  5994                           	opt stack 0
  5995  002D4C                     _Open1USART:
  5996                           	opt stack 22
  5997                           
  5998                           ;incstack = 0
  5999                           ;Open1USART@config stored from wreg
  6000  002D4C  6E42               	movwf	Open1USART@config,c
  6001  002D4E  0E00               	movlw	0
  6002  002D50  6EAC               	movwf	4012,c	;volatile
  6003  002D52  0E00               	movlw	0
  6004  002D54  6EAB               	movwf	4011,c	;volatile
  6005  002D56  A042               	btfss	Open1USART@config,0,c
  6006  002D58  D002               	goto	l5696
  6007  002D5A  88AC               	bsf	4012,4,c	;volatile
  6008  002D5C  D000               	goto	l5696
  6009  002D5E                     l5696:
  6010  002D5E  A242               	btfss	Open1USART@config,1,c
  6011  002D60  D003               	goto	l5700
  6012  002D62  8CAC               	bsf	4012,6,c	;volatile
  6013  002D64  8CAB               	bsf	4011,6,c	;volatile
  6014  002D66  D000               	goto	l5700
  6015  002D68                     l5700:
  6016  002D68  A442               	btfss	Open1USART@config,2,c
  6017  002D6A  D002               	goto	l5704
  6018  002D6C  8EAC               	bsf	4012,7,c	;volatile
  6019  002D6E  D000               	goto	l5704
  6020  002D70                     l5704:
  6021  002D70  A642               	btfss	Open1USART@config,3,c
  6022  002D72  D002               	goto	l835
  6023  002D74  88AB               	bsf	4011,4,c	;volatile
  6024  002D76  D002               	goto	l5708
  6025  002D78                     l835:
  6026  002D78  8AAB               	bsf	4011,5,c	;volatile
  6027  002D7A  D000               	goto	l5708
  6028  002D7C                     l5708:
  6029  002D7C  A842               	btfss	Open1USART@config,4,c
  6030  002D7E  D002               	goto	l5712
  6031  002D80  84AC               	bsf	4012,2,c	;volatile
  6032  002D82  D000               	goto	l5712
  6033  002D84                     l5712:
  6034  002D84  AA42               	btfss	Open1USART@config,5,c
  6035  002D86  D002               	goto	l5716
  6036  002D88  86AB               	bsf	4011,3,c	;volatile
  6037  002D8A  D000               	goto	l5716
  6038  002D8C                     l5716:
  6039  002D8C  AC42               	btfss	Open1USART@config,6,c
  6040  002D8E  D002               	goto	l839
  6041  002D90  8A9D               	bsf	3997,5,c	;volatile
  6042  002D92  D002               	goto	l5720
  6043  002D94                     l839:
  6044  002D94  9A9D               	bcf	3997,5,c	;volatile
  6045  002D96  D000               	goto	l5720
  6046  002D98                     l5720:
  6047  002D98  AE42               	btfss	Open1USART@config,7,c
  6048  002D9A  D002               	goto	l841
  6049  002D9C  889D               	bsf	3997,4,c	;volatile
  6050  002D9E  D001               	goto	l842
  6051  002DA0                     l841:
  6052  002DA0  989D               	bcf	3997,4,c	;volatile
  6053  002DA2                     l842:
  6054  002DA2  C06E  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  6055  002DA6  0100               	movlb	0	; () banked
  6056  002DA8  516F               	movf	(Open1USART@spbrg+1)& (0+255),w,b
  6057  002DAA  6E7F               	movwf	3967,c	;volatile
  6058                           
  6059                           ; BSR set to: 0
  6060  002DAC  8AAC               	bsf	4012,5,c	;volatile
  6061                           
  6062                           ; BSR set to: 0
  6063  002DAE  8EAB               	bsf	4011,7,c	;volatile
  6064                           
  6065                           ; BSR set to: 0
  6066  002DB0  9C94               	bcf	3988,6,c	;volatile
  6067                           
  6068                           ; BSR set to: 0
  6069  002DB2  8E94               	bsf	3988,7,c	;volatile
  6070                           
  6071                           ; BSR set to: 0
  6072  002DB4  B8AC               	btfsc	4012,4,c	;volatile
  6073                           
  6074                           ; BSR set to: 0
  6075  002DB6  BEAC               	btfsc	4012,7,c	;volatile
  6076  002DB8  D002               	goto	l844
  6077                           
  6078                           ; BSR set to: 0
  6079  002DBA  8C94               	bsf	3988,6,c	;volatile
  6080  002DBC  D000               	goto	l844
  6081  002DBE                     l844:
  6082                           
  6083                           ; BSR set to: 0
  6084  002DBE  0012               	return		;funcret
  6085  002DC0                     __end_of_Open1USART:
  6086                           	opt stack 0
  6087                           prodh	equ	0xFF4
  6088                           prodl	equ	0xFF3
  6089                           intcon	equ	0xFF2
  6090                           postinc0	equ	0xFEE
  6091                           wreg	equ	0xFE8
  6092                           indf2	equ	0xFDF
  6093                           postinc2	equ	0xFDE
  6094                           postdec2	equ	0xFDD
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function _FlushTxBuf *****************
  6100 ;; Defined at:
  6101 ;;		line 54 in file "Wireless.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  index           1   29[COMRAM] unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;		None               void
  6108 ;; Registers used:
  6109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;Total ram usage:        1 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    7
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_ConfigureWireless
  6126 ;;		_SendStatus
  6127 ;;		_SendLineMode
  6128 ;;		_SendOffsets
  6129 ;;		_SendThreshold
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text50
  6134  00338E                     __ptext50:
  6135                           	opt stack 0
  6136  00338E                     _FlushTxBuf:
  6137                           	opt stack 22
  6138                           
  6139                           ;Wireless.c: 55: unsigned char index;
  6140                           ;Wireless.c: 57: for(index = 0; index < 20; index++) {
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;incstack = 0
  6144  00338E  0E00               	movlw	0
  6145  003390  6E42               	movwf	FlushTxBuf@index,c
  6146  003392                     l5232:
  6147  003392  0E13               	movlw	19
  6148  003394  6442               	cpfsgt	FlushTxBuf@index,c
  6149  003396  D001               	goto	l5236
  6150  003398  D00C               	goto	l5242
  6151  00339A                     l5236:
  6152                           
  6153                           ;Wireless.c: 58: Tx_buffer[index] = 0;
  6154  00339A  5042               	movf	FlushTxBuf@index,w,c
  6155  00339C  0D01               	mullw	1
  6156  00339E  0EB2               	movlw	low _Tx_buffer
  6157  0033A0  24F3               	addwf	prodl,w,c
  6158  0033A2  6ED9               	movwf	fsr2l,c
  6159  0033A4  0E00               	movlw	high _Tx_buffer
  6160  0033A6  20F4               	addwfc	prodh,w,c
  6161  0033A8  6EDA               	movwf	fsr2h,c
  6162  0033AA  0E00               	movlw	0
  6163  0033AC  6EDF               	movwf	indf2,c
  6164  0033AE  2A42               	incf	FlushTxBuf@index,f,c
  6165  0033B0  D7F0               	goto	l5232
  6166  0033B2                     l5242:
  6167                           
  6168                           ;Wireless.c: 59: }
  6169                           ;Wireless.c: 61: put_Tx_index = 0;
  6170  0033B2  0E00               	movlw	0
  6171  0033B4  6E18               	movwf	_put_Tx_index,c
  6172                           
  6173                           ;Wireless.c: 62: get_Tx_index = 0;
  6174  0033B6  0E00               	movlw	0
  6175  0033B8  6E17               	movwf	_get_Tx_index,c
  6176  0033BA  0012               	return		;funcret
  6177  0033BC                     __end_of_FlushTxBuf:
  6178                           	opt stack 0
  6179                           prodh	equ	0xFF4
  6180                           prodl	equ	0xFF3
  6181                           intcon	equ	0xFF2
  6182                           postinc0	equ	0xFEE
  6183                           wreg	equ	0xFE8
  6184                           indf2	equ	0xFDF
  6185                           postinc2	equ	0xFDE
  6186                           postdec2	equ	0xFDD
  6187                           fsr2h	equ	0xFDA
  6188                           fsr2l	equ	0xFD9
  6189                           status	equ	0xFD8
  6190                           
  6191 ;; *************** function _FlushRxBuf *****************
  6192 ;; Defined at:
  6193 ;;		line 66 in file "Wireless.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  index           1   29[COMRAM] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;		None               void
  6200 ;; Registers used:
  6201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;Total ram usage:        1 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    7
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_ConfigureWireless
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text51
  6222  00348C                     __ptext51:
  6223                           	opt stack 0
  6224  00348C                     _FlushRxBuf:
  6225                           	opt stack 22
  6226                           
  6227                           ;Wireless.c: 67: unsigned char index;
  6228                           ;Wireless.c: 69: for(index = 0; index < 20; index++) {
  6229                           
  6230                           ;incstack = 0
  6231  00348C  0E00               	movlw	0
  6232  00348E  6E42               	movwf	FlushRxBuf@index,c
  6233  003490                     l5834:
  6234  003490  0E13               	movlw	19
  6235  003492  6442               	cpfsgt	FlushRxBuf@index,c
  6236  003494  D001               	goto	l5838
  6237  003496  D00C               	goto	l613
  6238  003498                     l5838:
  6239                           
  6240                           ;Wireless.c: 70: Rx_buffer[index] = 0;
  6241  003498  5042               	movf	FlushRxBuf@index,w,c
  6242  00349A  0D01               	mullw	1
  6243  00349C  0E1C               	movlw	low _Rx_buffer
  6244  00349E  24F3               	addwf	prodl,w,c
  6245  0034A0  6ED9               	movwf	fsr2l,c
  6246  0034A2  0E01               	movlw	high _Rx_buffer
  6247  0034A4  20F4               	addwfc	prodh,w,c
  6248  0034A6  6EDA               	movwf	fsr2h,c
  6249  0034A8  0E00               	movlw	0
  6250  0034AA  6EDF               	movwf	indf2,c
  6251  0034AC  2A42               	incf	FlushRxBuf@index,f,c
  6252  0034AE  D7F0               	goto	l5834
  6253  0034B0                     l613:
  6254  0034B0  0012               	return		;funcret
  6255  0034B2                     __end_of_FlushRxBuf:
  6256                           	opt stack 0
  6257                           prodh	equ	0xFF4
  6258                           prodl	equ	0xFF3
  6259                           intcon	equ	0xFF2
  6260                           postinc0	equ	0xFEE
  6261                           wreg	equ	0xFE8
  6262                           indf2	equ	0xFDF
  6263                           postinc2	equ	0xFDE
  6264                           postdec2	equ	0xFDD
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _ConfigureUltrasound *****************
  6270 ;; Defined at:
  6271 ;;		line 9 in file "Ultrasound.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  echo_to_cm      3   14[BANK0 ] float 
  6274 ;;  echo_to_in      3   17[BANK0 ] float 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;		None               void
  6279 ;; Registers used:
  6280 ;;		None
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:        6 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    7
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_main
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text52
  6301  0035D6                     __ptext52:
  6302                           	opt stack 0
  6303  0035D6                     _ConfigureUltrasound:
  6304                           	opt stack 23
  6305                           
  6306                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
  6307                           
  6308                           ;incstack = 0
  6309  0035D6  C06E  F0EA         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
  6310  0035DA  C06F  F0EB         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
  6311  0035DE  C070  F0EC         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
  6312                           
  6313                           ;Ultrasound.c: 11: convert_in = echo_to_in;
  6314  0035E2  C071  F0ED         	movff	ConfigureUltrasound@echo_to_in,_convert_in
  6315  0035E6  C072  F0EE         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
  6316  0035EA  C073  F0EF         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
  6317  0035EE  0012               	return		;funcret
  6318  0035F0                     __end_of_ConfigureUltrasound:
  6319                           	opt stack 0
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           postinc0	equ	0xFEE
  6324                           wreg	equ	0xFE8
  6325                           indf2	equ	0xFDF
  6326                           postinc2	equ	0xFDE
  6327                           postdec2	equ	0xFDD
  6328                           fsr2h	equ	0xFDA
  6329                           fsr2l	equ	0xFD9
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function _ConfigureTimer2 *****************
  6333 ;; Defined at:
  6334 ;;		line 161 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;		None               void
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    8
  6355 ;; This function calls:
  6356 ;;		_OpenTimer2
  6357 ;; This function is called by:
  6358 ;;		_main
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text53
  6363  0037AC                     __ptext53:
  6364                           	opt stack 0
  6365  0037AC                     _ConfigureTimer2:
  6366                           	opt stack 22
  6367                           
  6368                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 163: OpenTimer2(0b01111111
  6369                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 164: & 0b11111100
  6370                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 165: & 0b10000111
  6371                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 166: & 0b10110111);
  6372                           
  6373                           ;incstack = 0
  6374  0037AC  0E04               	movlw	4
  6375  0037AE  ECD0  F01A         	call	_OpenTimer2
  6376  0037B2  0012               	return		;funcret
  6377  0037B4                     __end_of_ConfigureTimer2:
  6378                           	opt stack 0
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           postinc0	equ	0xFEE
  6383                           wreg	equ	0xFE8
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _OpenTimer2 *****************
  6392 ;; Defined at:
  6393 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  config          1    wreg     unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  config          1   29[COMRAM] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        1 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    7
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_ConfigureTimer2
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text54
  6422  0035A0                     __ptext54:
  6423                           	opt stack 0
  6424  0035A0                     _OpenTimer2:
  6425                           	opt stack 22
  6426                           
  6427                           ;incstack = 0
  6428                           ;OpenTimer2@config stored from wreg
  6429  0035A0  6E42               	movwf	OpenTimer2@config,c
  6430  0035A2  5042               	movf	OpenTimer2@config,w,c
  6431  0035A4  0BFB               	andlw	251
  6432  0035A6  6ECA               	movwf	4042,c	;volatile
  6433  0035A8  0E00               	movlw	0
  6434  0035AA  6ECC               	movwf	4044,c	;volatile
  6435  0035AC  929E               	bcf	3998,1,c	;volatile
  6436  0035AE  AE42               	btfss	OpenTimer2@config,7,c
  6437  0035B0  D002               	goto	l811
  6438  0035B2  829D               	bsf	3997,1,c	;volatile
  6439  0035B4  D001               	goto	l812
  6440  0035B6                     l811:
  6441  0035B6  929D               	bcf	3997,1,c	;volatile
  6442  0035B8                     l812:
  6443  0035B8  84CA               	bsf	4042,2,c	;volatile
  6444  0035BA  0012               	return		;funcret
  6445  0035BC                     __end_of_OpenTimer2:
  6446                           	opt stack 0
  6447                           prodh	equ	0xFF4
  6448                           prodl	equ	0xFF3
  6449                           intcon	equ	0xFF2
  6450                           postinc0	equ	0xFEE
  6451                           wreg	equ	0xFE8
  6452                           indf2	equ	0xFDF
  6453                           postinc2	equ	0xFDE
  6454                           postdec2	equ	0xFDD
  6455                           fsr2h	equ	0xFDA
  6456                           fsr2l	equ	0xFD9
  6457                           status	equ	0xFD8
  6458                           
  6459 ;; *************** function _ConfigureTimer1 *****************
  6460 ;; Defined at:
  6461 ;;		line 143 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;		None               void
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    8
  6482 ;; This function calls:
  6483 ;;		_OpenTimer1
  6484 ;;		_WriteTimer1
  6485 ;; This function is called by:
  6486 ;;		_main
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text55
  6491  003624                     __ptext55:
  6492                           	opt stack 0
  6493  003624                     _ConfigureTimer1:
  6494                           	opt stack 22
  6495                           
  6496                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 145: OpenTimer1(0b01111111
  6497                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 146: & 0b11111111
  6498                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 147: & 0b11111101
  6499                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 148: & 0b11011111
  6500                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 149: & 0b11110111
  6501                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 150: & 0b11111111);
  6502                           
  6503                           ;incstack = 0
  6504  003624  0E55               	movlw	85
  6505  003626  ECDE  F019         	call	_OpenTimer1
  6506                           
  6507                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 154: T1CONbits.TMR1ON = 0;
  6508  00362A  90CD               	bcf	4045,0,c	;volatile
  6509                           
  6510                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 156: WriteTimer1(0);
  6511  00362C  0E00               	movlw	0
  6512  00362E  0100               	movlb	0	; () banked
  6513  003630  6F6F               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  6514  003632  0E00               	movlw	0
  6515  003634  6F6E               	movwf	WriteTimer1@timer1& (0+255),b
  6516  003636  EC67  F01B         	call	_WriteTimer1	;wreg free
  6517  00363A  0012               	return		;funcret
  6518  00363C                     __end_of_ConfigureTimer1:
  6519                           	opt stack 0
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           postinc0	equ	0xFEE
  6524                           wreg	equ	0xFE8
  6525                           indf2	equ	0xFDF
  6526                           postinc2	equ	0xFDE
  6527                           postdec2	equ	0xFDD
  6528                           fsr2h	equ	0xFDA
  6529                           fsr2l	equ	0xFD9
  6530                           status	equ	0xFD8
  6531                           
  6532 ;; *************** function _WriteTimer1 *****************
  6533 ;; Defined at:
  6534 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  timer1          2   14[BANK0 ] unsigned int 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  timer           2   16[BANK0 ] struct Timers
  6539 ;; Return value:  Size  Location     Type
  6540 ;;		None               void
  6541 ;; Registers used:
  6542 ;;		None
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;Total ram usage:        4 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    7
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_ConfigureTimer1
  6559 ;;		_UltrasoundISR
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text56
  6564  0036CE                     __ptext56:
  6565                           	opt stack 0
  6566  0036CE                     _WriteTimer1:
  6567                           	opt stack 22
  6568                           
  6569                           ;incstack = 0
  6570  0036CE  C06E  F070         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6571  0036D2  C06F  F071         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6572  0036D6  C071  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6573  0036DA  C070  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6574  0036DE  0012               	return		;funcret
  6575  0036E0                     __end_of_WriteTimer1:
  6576                           	opt stack 0
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           intcon	equ	0xFF2
  6580                           postinc0	equ	0xFEE
  6581                           wreg	equ	0xFE8
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _OpenTimer1 *****************
  6590 ;; Defined at:
  6591 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  config          1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  config          1   29[COMRAM] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;		None               void
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;Total ram usage:        1 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    7
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_ConfigureTimer1
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text57
  6620  0033BC                     __ptext57:
  6621                           	opt stack 0
  6622  0033BC                     _OpenTimer1:
  6623                           	opt stack 22
  6624                           
  6625                           ;incstack = 0
  6626                           ;OpenTimer1@config stored from wreg
  6627  0033BC  6E42               	movwf	OpenTimer1@config,c
  6628  0033BE  5042               	movf	OpenTimer1@config,w,c
  6629  0033C0  0B7E               	andlw	126
  6630  0033C2  6ECD               	movwf	4045,c	;volatile
  6631  0033C4  AC42               	btfss	OpenTimer1@config,6,c
  6632  0033C6  D002               	goto	l780
  6633  0033C8  8ECD               	bsf	4045,7,c	;volatile
  6634  0033CA  D002               	goto	l5622
  6635  0033CC                     l780:
  6636  0033CC  9ECD               	bcf	4045,7,c	;volatile
  6637  0033CE  D000               	goto	l5622
  6638  0033D0                     l5622:
  6639  0033D0  0E00               	movlw	0
  6640  0033D2  6ECF               	movwf	4047,c	;volatile
  6641  0033D4  0E00               	movlw	0
  6642  0033D6  6ECE               	movwf	4046,c	;volatile
  6643  0033D8  909E               	bcf	3998,0,c	;volatile
  6644  0033DA  AE42               	btfss	OpenTimer1@config,7,c
  6645  0033DC  D002               	goto	l782
  6646  0033DE  809D               	bsf	3997,0,c	;volatile
  6647  0033E0  D001               	goto	l783
  6648  0033E2                     l782:
  6649  0033E2  909D               	bcf	3997,0,c	;volatile
  6650  0033E4                     l783:
  6651  0033E4  80CD               	bsf	4045,0,c	;volatile
  6652  0033E6  0012               	return		;funcret
  6653  0033E8                     __end_of_OpenTimer1:
  6654                           	opt stack 0
  6655                           prodh	equ	0xFF4
  6656                           prodl	equ	0xFF3
  6657                           intcon	equ	0xFF2
  6658                           postinc0	equ	0xFEE
  6659                           wreg	equ	0xFE8
  6660                           indf2	equ	0xFDF
  6661                           postinc2	equ	0xFDE
  6662                           postdec2	equ	0xFDD
  6663                           fsr2h	equ	0xFDA
  6664                           fsr2l	equ	0xFD9
  6665                           status	equ	0xFD8
  6666                           
  6667 ;; *************** function _ConfigureTimer0 *****************
  6668 ;; Defined at:
  6669 ;;		line 129 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;		None               void
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    8
  6690 ;; This function calls:
  6691 ;;		_OpenTimer0
  6692 ;;		_WriteTimer0
  6693 ;; This function is called by:
  6694 ;;		_main
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text58
  6699  003652                     __ptext58:
  6700                           	opt stack 0
  6701  003652                     _ConfigureTimer0:
  6702                           	opt stack 22
  6703                           
  6704                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 131: OpenTimer0(0b11111111
  6705                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 132: & 0b10111111
  6706                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 133: & 0b11011111
  6707                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 134: & 0b11111111);
  6708                           
  6709                           ;incstack = 0
  6710  003652  0E9F               	movlw	159
  6711  003654  ECA3  F01A         	call	_OpenTimer0
  6712                           
  6713                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 138: WriteTimer0(63036);
  6714  003658  0EF6               	movlw	246
  6715  00365A  0100               	movlb	0	; () banked
  6716  00365C  6F6F               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6717  00365E  0E3C               	movlw	60
  6718  003660  6F6E               	movwf	WriteTimer0@timer0& (0+255),b
  6719  003662  EC70  F01B         	call	_WriteTimer0	;wreg free
  6720  003666  0012               	return		;funcret
  6721  003668                     __end_of_ConfigureTimer0:
  6722                           	opt stack 0
  6723                           prodh	equ	0xFF4
  6724                           prodl	equ	0xFF3
  6725                           intcon	equ	0xFF2
  6726                           postinc0	equ	0xFEE
  6727                           wreg	equ	0xFE8
  6728                           indf2	equ	0xFDF
  6729                           postinc2	equ	0xFDE
  6730                           postdec2	equ	0xFDD
  6731                           fsr2h	equ	0xFDA
  6732                           fsr2l	equ	0xFD9
  6733                           status	equ	0xFD8
  6734                           
  6735 ;; *************** function _WriteTimer0 *****************
  6736 ;; Defined at:
  6737 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  timer0          2   14[BANK0 ] unsigned int 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  timer           2   16[BANK0 ] struct Timers
  6742 ;; Return value:  Size  Location     Type
  6743 ;;		None               void
  6744 ;; Registers used:
  6745 ;;		None
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6751 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;Total ram usage:        4 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    7
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_ConfigureTimer0
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text59
  6766  0036E0                     __ptext59:
  6767                           	opt stack 0
  6768  0036E0                     _WriteTimer0:
  6769                           	opt stack 22
  6770                           
  6771                           ;incstack = 0
  6772  0036E0  C06E  F070         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6773  0036E4  C06F  F071         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6774  0036E8  C071  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6775  0036EC  C070  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6776  0036F0  0012               	return		;funcret
  6777  0036F2                     __end_of_WriteTimer0:
  6778                           	opt stack 0
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           indf2	equ	0xFDF
  6785                           postinc2	equ	0xFDE
  6786                           postdec2	equ	0xFDD
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8
  6790                           
  6791 ;; *************** function _OpenTimer0 *****************
  6792 ;; Defined at:
  6793 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  config          1    wreg     unsigned char 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  config          1   29[COMRAM] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;		None               void
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;Total ram usage:        1 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    7
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_ConfigureTimer0
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text60
  6822  003546                     __ptext60:
  6823                           	opt stack 0
  6824  003546                     _OpenTimer0:
  6825                           	opt stack 22
  6826                           
  6827                           ;incstack = 0
  6828                           ;OpenTimer0@config stored from wreg
  6829  003546  6E42               	movwf	OpenTimer0@config,c
  6830  003548  5042               	movf	OpenTimer0@config,w,c
  6831  00354A  0B7F               	andlw	127
  6832  00354C  6ED5               	movwf	4053,c	;volatile
  6833  00354E  0E00               	movlw	0
  6834  003550  6ED7               	movwf	4055,c	;volatile
  6835  003552  0E00               	movlw	0
  6836  003554  6ED6               	movwf	4054,c	;volatile
  6837  003556  94F2               	bcf	intcon,2,c	;volatile
  6838  003558  AE42               	btfss	OpenTimer0@config,7,c
  6839  00355A  D002               	goto	l756
  6840  00355C  8AF2               	bsf	intcon,5,c	;volatile
  6841  00355E  D001               	goto	l757
  6842  003560                     l756:
  6843  003560  9AF2               	bcf	intcon,5,c	;volatile
  6844  003562                     l757:
  6845  003562  8ED5               	bsf	4053,7,c	;volatile
  6846  003564  0012               	return		;funcret
  6847  003566                     __end_of_OpenTimer0:
  6848                           	opt stack 0
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           indf2	equ	0xFDF
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           
  6861 ;; *************** function _ConfigurePWM *****************
  6862 ;; Defined at:
  6863 ;;		line 179 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;		None
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;		None               void
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;Total ram usage:        0 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    8
  6884 ;; This function calls:
  6885 ;;		_OpenPWM4
  6886 ;;		_OpenPWM5
  6887 ;; This function is called by:
  6888 ;;		_main
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text61
  6893  00376E                     __ptext61:
  6894                           	opt stack 0
  6895  00376E                     _ConfigurePWM:
  6896                           	opt stack 22
  6897                           
  6898                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 181: OpenPWM4(130);
  6899                           
  6900                           ;incstack = 0
  6901  00376E  0E82               	movlw	130
  6902  003770  EC91  F01A         	call	_OpenPWM4
  6903                           
  6904                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 182: OpenPWM5(130);
  6905  003774  0E82               	movlw	130
  6906  003776  EC7F  F01A         	call	_OpenPWM5
  6907  00377A  0012               	return		;funcret
  6908  00377C                     __end_of_ConfigurePWM:
  6909                           	opt stack 0
  6910                           prodh	equ	0xFF4
  6911                           prodl	equ	0xFF3
  6912                           intcon	equ	0xFF2
  6913                           postinc0	equ	0xFEE
  6914                           wreg	equ	0xFE8
  6915                           indf2	equ	0xFDF
  6916                           postinc2	equ	0xFDE
  6917                           postdec2	equ	0xFDD
  6918                           fsr2h	equ	0xFDA
  6919                           fsr2l	equ	0xFD9
  6920                           status	equ	0xFD8
  6921                           
  6922 ;; *************** function _OpenPWM5 *****************
  6923 ;; Defined at:
  6924 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  period          1    wreg     unsigned char 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  period          1   29[COMRAM] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;		None               void
  6931 ;; Registers used:
  6932 ;;		wreg, status,2
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;Total ram usage:        1 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    7
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_ConfigurePWM
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text62
  6953  0034FE                     __ptext62:
  6954                           	opt stack 0
  6955  0034FE                     _OpenPWM5:
  6956                           	opt stack 22
  6957                           
  6958                           ;incstack = 0
  6959                           ;OpenPWM5@period stored from wreg
  6960  0034FE  6E42               	movwf	OpenPWM5@period,c
  6961  003500  0E0C               	movlw	12
  6962  003502  6E70               	movwf	3952,c	;volatile
  6963  003504  ACB1               	btfss	4017,6,c	;volatile
  6964  003506  B6B1               	btfsc	4017,3,c	;volatile
  6965  003508  D005               	goto	l734
  6966  00350A  94CA               	bcf	4042,2,c	;volatile
  6967  00350C  C042  FFCB         	movff	OpenPWM5@period,4043	;volatile
  6968  003510  84CA               	bsf	4042,2,c	;volatile
  6969  003512  D005               	goto	l5676
  6970  003514                     l734:
  6971  003514  9476               	bcf	3958,2,c	;volatile
  6972  003516  C042  FF77         	movff	OpenPWM5@period,3959	;volatile
  6973  00351A  8476               	bsf	3958,2,c	;volatile
  6974  00351C  D000               	goto	l5676
  6975  00351E                     l5676:
  6976  00351E  9898               	bcf	3992,4,c	;volatile
  6977  003520  0012               	return		;funcret
  6978  003522                     __end_of_OpenPWM5:
  6979                           	opt stack 0
  6980                           prodh	equ	0xFF4
  6981                           prodl	equ	0xFF3
  6982                           intcon	equ	0xFF2
  6983                           postinc0	equ	0xFEE
  6984                           wreg	equ	0xFE8
  6985                           indf2	equ	0xFDF
  6986                           postinc2	equ	0xFDE
  6987                           postdec2	equ	0xFDD
  6988                           fsr2h	equ	0xFDA
  6989                           fsr2l	equ	0xFD9
  6990                           status	equ	0xFD8
  6991                           
  6992 ;; *************** function _OpenPWM4 *****************
  6993 ;; Defined at:
  6994 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  period          1    wreg     unsigned char 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  period          1   29[COMRAM] unsigned char 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;		None               void
  7001 ;; Registers used:
  7002 ;;		wreg, status,2
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;Total ram usage:        1 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    7
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_ConfigurePWM
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text63
  7023  003522                     __ptext63:
  7024                           	opt stack 0
  7025  003522                     _OpenPWM4:
  7026                           	opt stack 22
  7027                           
  7028                           ;incstack = 0
  7029                           ;OpenPWM4@period stored from wreg
  7030  003522  6E42               	movwf	OpenPWM4@period,c
  7031  003524  0E0C               	movlw	12
  7032  003526  6E73               	movwf	3955,c	;volatile
  7033  003528  9698               	bcf	3992,3,c	;volatile
  7034  00352A  ACB1               	btfss	4017,6,c	;volatile
  7035  00352C  B6B1               	btfsc	4017,3,c	;volatile
  7036  00352E  D005               	goto	l708
  7037  003530  94CA               	bcf	4042,2,c	;volatile
  7038  003532  C042  FFCB         	movff	OpenPWM4@period,4043	;volatile
  7039  003536  84CA               	bsf	4042,2,c	;volatile
  7040  003538  D005               	goto	l710
  7041  00353A                     l708:
  7042  00353A  9476               	bcf	3958,2,c	;volatile
  7043  00353C  C042  FF77         	movff	OpenPWM4@period,3959	;volatile
  7044  003540  8476               	bsf	3958,2,c	;volatile
  7045  003542  D000               	goto	l710
  7046  003544                     l710:
  7047  003544  0012               	return		;funcret
  7048  003546                     __end_of_OpenPWM4:
  7049                           	opt stack 0
  7050                           prodh	equ	0xFF4
  7051                           prodl	equ	0xFF3
  7052                           intcon	equ	0xFF2
  7053                           postinc0	equ	0xFEE
  7054                           wreg	equ	0xFE8
  7055                           indf2	equ	0xFDF
  7056                           postinc2	equ	0xFDE
  7057                           postdec2	equ	0xFDD
  7058                           fsr2h	equ	0xFDA
  7059                           fsr2l	equ	0xFD9
  7060                           status	equ	0xFD8
  7061                           
  7062 ;; *************** function _ConfigureInterrupts *****************
  7063 ;; Defined at:
  7064 ;;		line 78 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;		None               void
  7071 ;; Registers used:
  7072 ;;		None
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;Total ram usage:        0 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    7
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_main
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text64
  7093  0034B2                     __ptext64:
  7094                           	opt stack 0
  7095  0034B2                     _ConfigureInterrupts:
  7096                           	opt stack 23
  7097                           
  7098                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 80: INTCONbits.GIE = 1;
  7099                           
  7100                           ;incstack = 0
  7101  0034B2  8EF2               	bsf	intcon,7,c	;volatile
  7102                           
  7103                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 81: INTCONbits.PEIE = 1;
  7104  0034B4  8CF2               	bsf	intcon,6,c	;volatile
  7105                           
  7106                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 82: RCONbits.IPEN = 1;
  7107  0034B6  8ED0               	bsf	4048,7,c	;volatile
  7108                           
  7109                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 99: INTCONbits.RBIE = 0;
  7110  0034B8  96F2               	bcf	intcon,3,c	;volatile
  7111                           
  7112                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 100: INTCONbits.RBIF = 0;
  7113  0034BA  90F2               	bcf	intcon,0,c	;volatile
  7114                           
  7115                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 101: INTCON2bits.RBIP = 1;
  7116  0034BC  80F1               	bsf	intcon2,0,c	;volatile
  7117                           
  7118                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 104: INTCONbits.TMR0IE = 1;
  7119  0034BE  8AF2               	bsf	intcon,5,c	;volatile
  7120                           
  7121                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 105: INTCONbits.TMR0IF = 0;
  7122  0034C0  94F2               	bcf	intcon,2,c	;volatile
  7123                           
  7124                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 106: INTCON2bits.TMR0IP = 1;
  7125  0034C2  84F1               	bsf	intcon2,2,c	;volatile
  7126                           
  7127                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 115: PIE1bits.ADIE = 0;
  7128  0034C4  9C9D               	bcf	3997,6,c	;volatile
  7129                           
  7130                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 116: PIR1bits.ADIF = 0;
  7131  0034C6  9C9E               	bcf	3998,6,c	;volatile
  7132                           
  7133                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 117: IPR1bits.ADIP = 0;
  7134  0034C8  9C9F               	bcf	3999,6,c	;volatile
  7135                           
  7136                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 120: PIE1bits.RC1IE = 0;
  7137  0034CA  9A9D               	bcf	3997,5,c	;volatile
  7138                           
  7139                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 121: PIE1bits.TX1IE = 0;
  7140  0034CC  989D               	bcf	3997,4,c	;volatile
  7141                           
  7142                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 122: PIR1bits.RC1IF = 0;
  7143  0034CE  9A9E               	bcf	3998,5,c	;volatile
  7144                           
  7145                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 123: PIR1bits.TX1IF = 0;
  7146  0034D0  989E               	bcf	3998,4,c	;volatile
  7147                           
  7148                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 124: IPR1bits.RC1IP = 0;
  7149  0034D2  9A9F               	bcf	3999,5,c	;volatile
  7150                           
  7151                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 125: IPR1bits.TX1IP = 0;
  7152  0034D4  989F               	bcf	3999,4,c	;volatile
  7153  0034D6  0012               	return		;funcret
  7154  0034D8                     __end_of_ConfigureInterrupts:
  7155                           	opt stack 0
  7156                           prodh	equ	0xFF4
  7157                           prodl	equ	0xFF3
  7158                           intcon	equ	0xFF2
  7159                           intcon2	equ	0xFF1
  7160                           postinc0	equ	0xFEE
  7161                           wreg	equ	0xFE8
  7162                           indf2	equ	0xFDF
  7163                           postinc2	equ	0xFDE
  7164                           postdec2	equ	0xFDD
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _ConfigureBuggyIO *****************
  7170 ;; Defined at:
  7171 ;;		line 202 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;		None               void
  7178 ;; Registers used:
  7179 ;;		wreg, status,2
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;Total ram usage:        0 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    7
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_main
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text65
  7200  0035F0                     __ptext65:
  7201                           	opt stack 0
  7202  0035F0                     _ConfigureBuggyIO:
  7203                           	opt stack 23
  7204                           
  7205                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 205: TRISA = 0xFF;
  7206                           
  7207                           ;incstack = 0
  7208  0035F0  6892               	setf	3986,c	;volatile
  7209                           
  7210                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 208: TRISB = 0xFF;
  7211  0035F2  6893               	setf	3987,c	;volatile
  7212                           
  7213                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 211: TRISC = 0x9F;
  7214  0035F4  0E9F               	movlw	159
  7215  0035F6  6E94               	movwf	3988,c	;volatile
  7216                           
  7217                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 214: TRISD = 0xE0;
  7218  0035F8  0EE0               	movlw	224
  7219  0035FA  6E95               	movwf	3989,c	;volatile
  7220                           
  7221                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 217: TRISE = 0x00;
  7222  0035FC  0E00               	movlw	0
  7223  0035FE  6E96               	movwf	3990,c	;volatile
  7224                           
  7225                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 220: TRISG = 0xE7;
  7226  003600  0EE7               	movlw	231
  7227  003602  6E98               	movwf	3992,c	;volatile
  7228                           
  7229                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 223: TRISJ = 0x00;
  7230  003604  0E00               	movlw	0
  7231  003606  6E9A               	movwf	3994,c	;volatile
  7232  003608  0012               	return		;funcret
  7233  00360A                     __end_of_ConfigureBuggyIO:
  7234                           	opt stack 0
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           intcon	equ	0xFF2
  7238                           intcon2	equ	0xFF1
  7239                           postinc0	equ	0xFEE
  7240                           wreg	equ	0xFE8
  7241                           indf2	equ	0xFDF
  7242                           postinc2	equ	0xFDE
  7243                           postdec2	equ	0xFDD
  7244                           fsr2h	equ	0xFDA
  7245                           fsr2l	equ	0xFD9
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function _ConfigureADC *****************
  7249 ;; Defined at:
  7250 ;;		line 228 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;		None               void
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    8
  7271 ;; This function calls:
  7272 ;;		_OpenADC
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text66
  7279  0036A8                     __ptext66:
  7280                           	opt stack 0
  7281  0036A8                     _ConfigureADC:
  7282                           	opt stack 22
  7283                           
  7284                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 230: OpenADC(0b10011111
  7285                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 231: & 0b11111111
  7286                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 232: & 0b11110101,
  7287                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 233: 0b10000111
  7288                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 234: & 0b01111111
  7289                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 235: & 0b11111110
  7290                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 236: & 0b11111101,
  7291                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 237: 9);
  7292                           
  7293                           ;incstack = 0
  7294  0036A8  0E04               	movlw	4
  7295  0036AA  0100               	movlb	0	; () banked
  7296  0036AC  6F6E               	movwf	OpenADC@config2& (0+255),b
  7297  0036AE  0E09               	movlw	9
  7298  0036B0  0100               	movlb	0	; () banked
  7299  0036B2  6F6F               	movwf	OpenADC@portconfig& (0+255),b
  7300  0036B4  0E95               	movlw	149
  7301  0036B6  EC2F  F016         	call	_OpenADC
  7302  0036BA  0012               	return		;funcret
  7303  0036BC                     __end_of_ConfigureADC:
  7304                           	opt stack 0
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           intcon2	equ	0xFF1
  7309                           postinc0	equ	0xFEE
  7310                           wreg	equ	0xFE8
  7311                           indf2	equ	0xFDF
  7312                           postinc2	equ	0xFDE
  7313                           postdec2	equ	0xFDD
  7314                           fsr2h	equ	0xFDA
  7315                           fsr2l	equ	0xFD9
  7316                           status	equ	0xFD8
  7317                           
  7318 ;; *************** function _OpenADC *****************
  7319 ;; Defined at:
  7320 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  config          1    wreg     unsigned char 
  7323 ;;  config2         1   14[BANK0 ] unsigned char 
  7324 ;;  portconfig      1   15[BANK0 ] unsigned char 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  config          1   29[COMRAM] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;		None               void
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;Total ram usage:        5 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    7
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_ConfigureADC
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text67
  7351  002C5E                     __ptext67:
  7352                           	opt stack 0
  7353  002C5E                     _OpenADC:
  7354                           	opt stack 22
  7355                           
  7356                           ;incstack = 0
  7357                           ;OpenADC@config stored from wreg
  7358  002C5E  6E42               	movwf	OpenADC@config,c
  7359  002C60  0E00               	movlw	0
  7360  002C62  6EC2               	movwf	4034,c	;volatile
  7361  002C64  0E00               	movlw	0
  7362  002C66  6EC0               	movwf	4032,c	;volatile
  7363  002C68  0100               	movlb	0	; () banked
  7364  002C6A  90D8               	bcf	status,0,c
  7365  002C6C  316E               	rrcf	OpenADC@config2& (0+255),w,b
  7366  002C6E  0B3C               	andlw	60
  7367  002C70  6EC2               	movwf	4034,c	;volatile
  7368                           
  7369                           ; BSR set to: 0
  7370  002C72  C06E  F070         	movff	OpenADC@config2,??_OpenADC
  7371  002C76  0100               	movlb	0	; () banked
  7372  002C78  3B70               	swapf	??_OpenADC& (0+255),f,b
  7373  002C7A  0EF0               	movlw	240
  7374  002C7C  1770               	andwf	??_OpenADC& (0+255),f,b
  7375  002C7E  0E30               	movlw	48
  7376  002C80  0100               	movlb	0	; () banked
  7377  002C82  1770               	andwf	??_OpenADC& (0+255),f,b
  7378  002C84  0100               	movlb	0	; () banked
  7379  002C86  516F               	movf	OpenADC@portconfig& (0+255),w,b
  7380  002C88  0B0F               	andlw	15
  7381  002C8A  0100               	movlb	0	; () banked
  7382  002C8C  1170               	iorwf	??_OpenADC& (0+255),w,b
  7383  002C8E  6EC1               	movwf	4033,c	;volatile
  7384                           
  7385                           ; BSR set to: 0
  7386  002C90  C042  F070         	movff	OpenADC@config,??_OpenADC
  7387  002C94  0100               	movlb	0	; () banked
  7388  002C96  90D8               	bcf	status,0,c
  7389  002C98  3770               	rlcf	??_OpenADC& (0+255),f,b
  7390  002C9A  0100               	movlb	0	; () banked
  7391  002C9C  90D8               	bcf	status,0,c
  7392  002C9E  3770               	rlcf	??_OpenADC& (0+255),f,b
  7393  002CA0  0E38               	movlw	56
  7394  002CA2  0100               	movlb	0	; () banked
  7395  002CA4  1770               	andwf	??_OpenADC& (0+255),f,b
  7396  002CA6  C042  F071         	movff	OpenADC@config,??_OpenADC+1
  7397  002CAA  0100               	movlb	0	; () banked
  7398  002CAC  3B71               	swapf	(??_OpenADC+1)& (0+255),f,b
  7399  002CAE  0E0F               	movlw	15
  7400  002CB0  1771               	andwf	(??_OpenADC+1)& (0+255),f,b
  7401  002CB2  0E07               	movlw	7
  7402  002CB4  0100               	movlb	0	; () banked
  7403  002CB6  1771               	andwf	(??_OpenADC+1)& (0+255),f,b
  7404  002CB8  5042               	movf	OpenADC@config,w,c
  7405  002CBA  0B80               	andlw	128
  7406  002CBC  0100               	movlb	0	; () banked
  7407  002CBE  1171               	iorwf	(??_OpenADC+1)& (0+255),w,b
  7408  002CC0  0100               	movlb	0	; () banked
  7409  002CC2  1170               	iorwf	??_OpenADC& (0+255),w,b
  7410  002CC4  6EC0               	movwf	4032,c	;volatile
  7411                           
  7412                           ; BSR set to: 0
  7413  002CC6  0100               	movlb	0	; () banked
  7414  002CC8  AF6E               	btfss	OpenADC@config2& (0+255),7,b
  7415  002CCA  D003               	goto	l678
  7416                           
  7417                           ; BSR set to: 0
  7418  002CCC  9C9E               	bcf	3998,6,c	;volatile
  7419  002CCE  8C9D               	bsf	3997,6,c	;volatile
  7420  002CD0  8CF2               	bsf	intcon,6,c	;volatile
  7421  002CD2                     l678:
  7422                           
  7423                           ; BSR set to: 0
  7424  002CD2  80C2               	bsf	4034,0,c	;volatile
  7425                           
  7426                           ; BSR set to: 0
  7427  002CD4  0012               	return		;funcret
  7428  002CD6                     __end_of_OpenADC:
  7429                           	opt stack 0
  7430                           prodh	equ	0xFF4
  7431                           prodl	equ	0xFF3
  7432                           intcon	equ	0xFF2
  7433                           intcon2	equ	0xFF1
  7434                           postinc0	equ	0xFEE
  7435                           wreg	equ	0xFE8
  7436                           indf2	equ	0xFDF
  7437                           postinc2	equ	0xFDE
  7438                           postdec2	equ	0xFDD
  7439                           fsr2h	equ	0xFDA
  7440                           fsr2l	equ	0xFD9
  7441                           status	equ	0xFD8
  7442                           
  7443 ;; *************** function _CalculateSensorSums *****************
  7444 ;; Defined at:
  7445 ;;		line 377 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  index           1   21[BANK1 ] unsigned char 
  7450 ;;  sum             1   20[BANK1 ] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      unsigned char 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;Total ram usage:        5 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:   12
  7467 ;; This function calls:
  7468 ;;		___ftmul
  7469 ;;		___fttol
  7470 ;;		___lbtoft
  7471 ;;		_pow
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text68
  7478  0028E0                     __ptext68:
  7479                           	opt stack 0
  7480  0028E0                     _CalculateSensorSums:
  7481                           	opt stack 18
  7482                           
  7483                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 378: unsigned char index, sum = 0;
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;incstack = 0
  7487  0028E0  0E00               	movlw	0
  7488  0028E2  0101               	movlb	1	; () banked
  7489  0028E4  6F14               	movwf	CalculateSensorSums@sum& (0+255),b
  7490                           
  7491                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 380: for(index = 0; index < 5; index++) {
  7492  0028E6  0E00               	movlw	0
  7493  0028E8  0101               	movlb	1	; () banked
  7494  0028EA  6F15               	movwf	CalculateSensorSums@index& (0+255),b
  7495  0028EC                     l5874:
  7496                           
  7497                           ; BSR set to: 1
  7498  0028EC  0E04               	movlw	4
  7499  0028EE  0101               	movlb	1	; () banked
  7500  0028F0  6515               	cpfsgt	CalculateSensorSums@index& (0+255),b
  7501  0028F2  D001               	goto	l5878
  7502                           
  7503                           ; BSR set to: 1
  7504  0028F4  D044               	goto	l5886
  7505  0028F6                     l5878:
  7506                           
  7507                           ; BSR set to: 1
  7508                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 382: sum += (unsigned char) (sensor_status[index]
      +                           * pow(2, index));
  7509  0028F6  0101               	movlb	1	; () banked
  7510  0028F8  5115               	movf	CalculateSensorSums@index& (0+255),w,b
  7511  0028FA  ECF4  F019         	call	___lbtoft
  7512  0028FE  C076  F103         	movff	?___lbtoft,pow@y
  7513  002902  C077  F104         	movff	?___lbtoft+1,pow@y+1
  7514  002906  C078  F105         	movff	?___lbtoft+2,pow@y+2
  7515  00290A  0E00               	movlw	0
  7516  00290C  0101               	movlb	1	; () banked
  7517  00290E  6F00               	movwf	pow@x& (0+255),b
  7518  002910  0E00               	movlw	0
  7519  002912  0101               	movlb	1	; () banked
  7520  002914  6F01               	movwf	(pow@x+1)& (0+255),b
  7521  002916  0E40               	movlw	64
  7522  002918  0101               	movlb	1	; () banked
  7523  00291A  6F02               	movwf	(pow@x+2)& (0+255),b
  7524  00291C  EC70  F00B         	call	_pow	;wreg free
  7525  002920  C100  F111         	movff	?_pow,_CalculateSensorSums$3188
  7526  002924  C101  F112         	movff	?_pow+1,_CalculateSensorSums$3188+1
  7527  002928  C102  F113         	movff	?_pow+2,_CalculateSensorSums$3188+2
  7528                           
  7529                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 382: sum += (unsigned char) (sensor_status[index]
      +                           * pow(2, index));
  7530  00292C  C111  F07C         	movff	_CalculateSensorSums$3188,___ftmul@f2
  7531  002930  C112  F07D         	movff	_CalculateSensorSums$3188+1,___ftmul@f2+1
  7532  002934  C113  F07E         	movff	_CalculateSensorSums$3188+2,___ftmul@f2+2
  7533  002938  0101               	movlb	1	; () banked
  7534  00293A  5115               	movf	CalculateSensorSums@index& (0+255),w,b
  7535  00293C  0D01               	mullw	1
  7536  00293E  0E1D               	movlw	low _sensor_status
  7537  002940  24F3               	addwf	prodl,w,c
  7538  002942  6ED9               	movwf	fsr2l,c
  7539  002944  0E00               	movlw	high _sensor_status
  7540  002946  20F4               	addwfc	prodh,w,c
  7541  002948  6EDA               	movwf	fsr2h,c
  7542  00294A  50DF               	movf	indf2,w,c
  7543  00294C  ECF4  F019         	call	___lbtoft
  7544  002950  C076  F079         	movff	?___lbtoft,___ftmul@f1
  7545  002954  C077  F07A         	movff	?___lbtoft+1,___ftmul@f1+1
  7546  002958  C078  F07B         	movff	?___lbtoft+2,___ftmul@f1+2
  7547  00295C  EC3D  F00C         	call	___ftmul	;wreg free
  7548  002960  C079  F088         	movff	?___ftmul,___fttol@f1
  7549  002964  C07A  F089         	movff	?___ftmul+1,___fttol@f1+1
  7550  002968  C07B  F08A         	movff	?___ftmul+2,___fttol@f1+2
  7551  00296C  EC2C  F00E         	call	___fttol	;wreg free
  7552  002970  0100               	movlb	0	; () banked
  7553  002972  5188               	movf	?___fttol& (0+255),w,b
  7554  002974  0101               	movlb	1	; () banked
  7555  002976  2714               	addwf	CalculateSensorSums@sum& (0+255),f,b
  7556                           
  7557                           ; BSR set to: 1
  7558  002978  0101               	movlb	1	; () banked
  7559  00297A  2B15               	incf	CalculateSensorSums@index& (0+255),f,b
  7560  00297C  D7B7               	goto	l5874
  7561  00297E                     l5886:
  7562                           
  7563                           ; BSR set to: 1
  7564                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 384: }
  7565                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 386: return(sum);
  7566  00297E  0101               	movlb	1	; () banked
  7567  002980  5114               	movf	CalculateSensorSums@sum& (0+255),w,b
  7568  002982  D000               	goto	l206
  7569  002984                     l206:
  7570                           
  7571                           ; BSR set to: 1
  7572  002984  0012               	return		;funcret
  7573  002986                     __end_of_CalculateSensorSums:
  7574                           	opt stack 0
  7575                           prodh	equ	0xFF4
  7576                           prodl	equ	0xFF3
  7577                           intcon	equ	0xFF2
  7578                           intcon2	equ	0xFF1
  7579                           postinc0	equ	0xFEE
  7580                           wreg	equ	0xFE8
  7581                           indf2	equ	0xFDF
  7582                           postinc2	equ	0xFDE
  7583                           postdec2	equ	0xFDD
  7584                           fsr2h	equ	0xFDA
  7585                           fsr2l	equ	0xFD9
  7586                           status	equ	0xFD8
  7587                           
  7588 ;; *************** function _pow *****************
  7589 ;; Defined at:
  7590 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  x               3    0[BANK1 ] unsigned char 
  7593 ;;  y               3    3[BANK1 ] unsigned char 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  yi              4   13[BANK1 ] unsigned long 
  7596 ;;  sign            1   12[BANK1 ] unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  3    0[BANK1 ] unsigned char 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7606 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;Total ram usage:       17 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:   11
  7613 ;; This function calls:
  7614 ;;		___ftge
  7615 ;;		___ftmul
  7616 ;;		___ftneg
  7617 ;;		___fttol
  7618 ;;		___lltoft
  7619 ;;		_exp
  7620 ;;		_log
  7621 ;; This function is called by:
  7622 ;;		_CalculateSensorSums
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text69
  7627  0016E0                     __ptext69:
  7628                           	opt stack 0
  7629  0016E0                     _pow:
  7630                           	opt stack 18
  7631                           
  7632                           ; BSR set to: 1
  7633                           ;incstack = 0
  7634  0016E0  0E00               	movlw	0
  7635  0016E2  0101               	movlb	1	; () banked
  7636  0016E4  6F0C               	movwf	pow@sign& (0+255),b
  7637                           
  7638                           ; BSR set to: 1
  7639  0016E6  0101               	movlb	1	; () banked
  7640  0016E8  5100               	movf	pow@x& (0+255),w,b
  7641  0016EA  0101               	movlb	1	; () banked
  7642  0016EC  1101               	iorwf	(pow@x+1)& (0+255),w,b
  7643  0016EE  0101               	movlb	1	; () banked
  7644  0016F0  1102               	iorwf	(pow@x+2)& (0+255),w,b
  7645  0016F2  A4D8               	btfss	status,2,c
  7646  0016F4  D016               	goto	l5750
  7647                           
  7648                           ; BSR set to: 1
  7649  0016F6  0E00               	movlw	0
  7650  0016F8  0100               	movlb	0	; () banked
  7651  0016FA  6F6E               	movwf	___ftge@ff1& (0+255),b
  7652  0016FC  0E00               	movlw	0
  7653  0016FE  0100               	movlb	0	; () banked
  7654  001700  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  7655  001702  0E00               	movlw	0
  7656  001704  0100               	movlb	0	; () banked
  7657  001706  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  7658  001708  C103  F071         	movff	pow@y,___ftge@ff2
  7659  00170C  C104  F072         	movff	pow@y+1,___ftge@ff2+1
  7660  001710  C105  F073         	movff	pow@y+2,___ftge@ff2+2
  7661  001714  ECA3  F012         	call	___ftge	;wreg free
  7662  001718  0100               	movlb	0	; () banked
  7663  00171A  A0D8               	btfss	status,0,c
  7664  00171C  D045               	goto	L6
  7665  00171E  D03F               	goto	u5410
  7666                           
  7667                           ; BSR set to: 1
  7668                           
  7669                           ; BSR set to: 0
  7670                           
  7671                           ; BSR set to: 0
  7672  001720  D0AB               	goto	l1428
  7673  001722                     l5750:
  7674                           
  7675                           ; BSR set to: 1
  7676  001722  0101               	movlb	1	; () banked
  7677  001724  5103               	movf	pow@y& (0+255),w,b
  7678  001726  0101               	movlb	1	; () banked
  7679  001728  1104               	iorwf	(pow@y+1)& (0+255),w,b
  7680  00172A  0101               	movlb	1	; () banked
  7681  00172C  1105               	iorwf	(pow@y+2)& (0+255),w,b
  7682  00172E  A4D8               	btfss	status,2,c
  7683  001730  D009               	goto	l5756
  7684                           
  7685                           ; BSR set to: 1
  7686  001732  0E00               	movlw	0
  7687  001734  0101               	movlb	1	; () banked
  7688  001736  6F00               	movwf	?_pow& (0+255),b
  7689  001738  0E80               	movlw	128
  7690  00173A  0101               	movlb	1	; () banked
  7691  00173C  6F01               	movwf	(?_pow+1)& (0+255),b
  7692  00173E  0E3F               	movlw	63
  7693  001740  D03A               	goto	L5
  7694                           
  7695                           ; BSR set to: 1
  7696  001742  D09A               	goto	l1428
  7697  001744                     l5756:
  7698                           
  7699                           ; BSR set to: 1
  7700  001744  0101               	movlb	1	; () banked
  7701  001746  AF02               	btfss	(pow@x+2)& (0+255),7,b
  7702  001748  D04D               	goto	l5768
  7703                           
  7704                           ; BSR set to: 1
  7705  00174A  C103  F088         	movff	pow@y,___fttol@f1
  7706  00174E  C104  F089         	movff	pow@y+1,___fttol@f1+1
  7707  001752  C105  F08A         	movff	pow@y+2,___fttol@f1+2
  7708  001756  EC2C  F00E         	call	___fttol	;wreg free
  7709  00175A  C088  F10D         	movff	?___fttol,pow@yi
  7710  00175E  C089  F10E         	movff	?___fttol+1,pow@yi+1
  7711  001762  C08A  F10F         	movff	?___fttol+2,pow@yi+2
  7712  001766  C08B  F110         	movff	?___fttol+3,pow@yi+3
  7713  00176A  C10D  F076         	movff	pow@yi,___lltoft@c
  7714  00176E  C10E  F077         	movff	pow@yi+1,___lltoft@c+1
  7715  001772  C10F  F078         	movff	pow@yi+2,___lltoft@c+2
  7716  001776  C110  F079         	movff	pow@yi+3,___lltoft@c+3
  7717  00177A  ECF1  F015         	call	___lltoft	;wreg free
  7718  00177E  0101               	movlb	1	; () banked
  7719  001780  5103               	movf	pow@y& (0+255),w,b
  7720  001782  0100               	movlb	0	; () banked
  7721  001784  1976               	xorwf	?___lltoft& (0+255),w,b
  7722  001786  E10B               	bnz	u5410
  7723  001788  0101               	movlb	1	; () banked
  7724  00178A  5104               	movf	(pow@y+1)& (0+255),w,b
  7725  00178C  0100               	movlb	0	; () banked
  7726  00178E  1977               	xorwf	(?___lltoft+1)& (0+255),w,b
  7727  001790  E106               	bnz	u5410
  7728  001792  0101               	movlb	1	; () banked
  7729  001794  5105               	movf	(pow@y+2)& (0+255),w,b
  7730  001796  0100               	movlb	0	; () banked
  7731  001798  1978               	xorwf	(?___lltoft+2)& (0+255),w,b
  7732  00179A  B4D8               	btfsc	status,2,c
  7733  00179C  D00F               	goto	l5764
  7734  00179E                     u5410:
  7735                           
  7736                           ; BSR set to: 0
  7737  00179E  0E00               	movlw	0
  7738  0017A0  0100               	movlb	0	; () banked
  7739  0017A2  6FDD               	movwf	(_errno+1)& (0+255),b
  7740  0017A4  0E21               	movlw	33
  7741  0017A6  6FDC               	movwf	_errno& (0+255),b
  7742  0017A8                     L6:
  7743  0017A8  0E00               	movlw	0
  7744  0017AA  0101               	movlb	1	; () banked
  7745  0017AC  6F00               	movwf	?_pow& (0+255),b
  7746  0017AE  0E00               	movlw	0
  7747  0017B0  0101               	movlb	1	; () banked
  7748  0017B2  6F01               	movwf	(?_pow+1)& (0+255),b
  7749  0017B4  0E00               	movlw	0
  7750  0017B6                     L5:
  7751  0017B6  0101               	movlb	1	; () banked
  7752  0017B8  6F02               	movwf	(?_pow+2)& (0+255),b
  7753                           
  7754                           ; BSR set to: 1
  7755  0017BA  D05E               	goto	l1428
  7756  0017BC                     l5764:
  7757  0017BC  0101               	movlb	1	; () banked
  7758  0017BE  510D               	movf	pow@yi& (0+255),w,b
  7759  0017C0  0B01               	andlw	1
  7760  0017C2  0101               	movlb	1	; () banked
  7761  0017C4  6F0C               	movwf	pow@sign& (0+255),b
  7762                           
  7763                           ; BSR set to: 1
  7764  0017C6  C100  F06E         	movff	pow@x,___ftneg@f1
  7765  0017CA  C101  F06F         	movff	pow@x+1,___ftneg@f1+1
  7766  0017CE  C102  F070         	movff	pow@x+2,___ftneg@f1+2
  7767  0017D2  ECAF  F019         	call	___ftneg	;wreg free
  7768  0017D6  C06E  F100         	movff	?___ftneg,pow@x
  7769  0017DA  C06F  F101         	movff	?___ftneg+1,pow@x+1
  7770  0017DE  C070  F102         	movff	?___ftneg+2,pow@x+2
  7771  0017E2  D000               	goto	l5768
  7772  0017E4                     l5768:
  7773  0017E4  C100  F0A0         	movff	pow@x,log@x
  7774  0017E8  C101  F0A1         	movff	pow@x+1,log@x+1
  7775  0017EC  C102  F0A2         	movff	pow@x+2,log@x+2
  7776  0017F0  EC8C  F00D         	call	_log	;wreg free
  7777  0017F4  C0A0  F106         	movff	?_log,_pow$3189
  7778  0017F8  C0A1  F107         	movff	?_log+1,_pow$3189+1
  7779  0017FC  C0A2  F108         	movff	?_log+2,_pow$3189+2
  7780  001800  C106  F079         	movff	_pow$3189,___ftmul@f1
  7781  001804  C107  F07A         	movff	_pow$3189+1,___ftmul@f1+1
  7782  001808  C108  F07B         	movff	_pow$3189+2,___ftmul@f1+2
  7783  00180C  C103  F07C         	movff	pow@y,___ftmul@f2
  7784  001810  C104  F07D         	movff	pow@y+1,___ftmul@f2+1
  7785  001814  C105  F07E         	movff	pow@y+2,___ftmul@f2+2
  7786  001818  EC3D  F00C         	call	___ftmul	;wreg free
  7787  00181C  C079  F109         	movff	?___ftmul,_pow$3190
  7788  001820  C07A  F10A         	movff	?___ftmul+1,_pow$3190+1
  7789  001824  C07B  F10B         	movff	?___ftmul+2,_pow$3190+2
  7790  001828  C109  F0A9         	movff	_pow$3190,exp@x
  7791  00182C  C10A  F0AA         	movff	_pow$3190+1,exp@x+1
  7792  001830  C10B  F0AB         	movff	_pow$3190+2,exp@x+2
  7793  001834  EC5D  F009         	call	_exp	;wreg free
  7794  001838  C0A9  F100         	movff	?_exp,pow@x
  7795  00183C  C0AA  F101         	movff	?_exp+1,pow@x+1
  7796  001840  C0AB  F102         	movff	?_exp+2,pow@x+2
  7797  001844  0101               	movlb	1	; () banked
  7798  001846  510C               	movf	pow@sign& (0+255),w,b
  7799  001848  0101               	movlb	1	; () banked
  7800  00184A  B4D8               	btfsc	status,2,c
  7801  00184C  D00F               	goto	l1432
  7802                           
  7803                           ; BSR set to: 1
  7804  00184E  C100  F06E         	movff	pow@x,___ftneg@f1
  7805  001852  C101  F06F         	movff	pow@x+1,___ftneg@f1+1
  7806  001856  C102  F070         	movff	pow@x+2,___ftneg@f1+2
  7807  00185A  ECAF  F019         	call	___ftneg	;wreg free
  7808  00185E  C06E  F100         	movff	?___ftneg,?_pow
  7809  001862  C06F  F101         	movff	?___ftneg+1,?_pow+1
  7810  001866  C070  F102         	movff	?___ftneg+2,?_pow+2
  7811  00186A  D006               	goto	l1428
  7812  00186C                     l1432:
  7813                           
  7814                           ; BSR set to: 1
  7815  00186C  C100  F100         	movff	pow@x,?_pow
  7816  001870  C101  F101         	movff	pow@x+1,?_pow+1
  7817  001874  C102  F102         	movff	pow@x+2,?_pow+2
  7818  001878                     l1428:
  7819  001878  0012               	return		;funcret
  7820  00187A                     __end_of_pow:
  7821                           	opt stack 0
  7822                           prodh	equ	0xFF4
  7823                           prodl	equ	0xFF3
  7824                           intcon	equ	0xFF2
  7825                           intcon2	equ	0xFF1
  7826                           postinc0	equ	0xFEE
  7827                           wreg	equ	0xFE8
  7828                           indf2	equ	0xFDF
  7829                           postinc2	equ	0xFDE
  7830                           postdec2	equ	0xFDD
  7831                           fsr2h	equ	0xFDA
  7832                           fsr2l	equ	0xFD9
  7833                           status	equ	0xFD8
  7834                           
  7835 ;; *************** function _log *****************
  7836 ;; Defined at:
  7837 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  x               3   64[BANK0 ] unsigned char 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  exponent        2   67[BANK0 ] int 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  3   64[BANK0 ] int 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;Total ram usage:        5 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:   10
  7858 ;; This function calls:
  7859 ;;		___awtoft
  7860 ;;		___ftadd
  7861 ;;		___ftmul
  7862 ;;		_eval_poly
  7863 ;;		_frexp
  7864 ;; This function is called by:
  7865 ;;		_pow
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text70
  7870  001B18                     __ptext70:
  7871                           	opt stack 0
  7872  001B18                     _log:
  7873                           	opt stack 18
  7874                           
  7875                           ;incstack = 0
  7876  001B18  0100               	movlb	0	; () banked
  7877  001B1A  AFA2               	btfss	(log@x+2)& (0+255),7,b
  7878  001B1C  D006               	goto	l5542
  7879                           
  7880                           ; BSR set to: 0
  7881  001B1E  0E00               	movlw	0
  7882  001B20  0100               	movlb	0	; () banked
  7883  001B22  6FDD               	movwf	(_errno+1)& (0+255),b
  7884  001B24  0E21               	movlw	33
  7885  001B26  D00D               	goto	L7
  7886                           
  7887                           ; BSR set to: 0
  7888  001B28  D096               	goto	l1492
  7889  001B2A                     l5542:
  7890                           
  7891                           ; BSR set to: 0
  7892  001B2A  0100               	movlb	0	; () banked
  7893  001B2C  51A0               	movf	log@x& (0+255),w,b
  7894  001B2E  0100               	movlb	0	; () banked
  7895  001B30  11A1               	iorwf	(log@x+1)& (0+255),w,b
  7896  001B32  0100               	movlb	0	; () banked
  7897  001B34  11A2               	iorwf	(log@x+2)& (0+255),w,b
  7898  001B36  A4D8               	btfss	status,2,c
  7899  001B38  D00F               	goto	l5548
  7900                           
  7901                           ; BSR set to: 0
  7902  001B3A  0E00               	movlw	0
  7903  001B3C  0100               	movlb	0	; () banked
  7904  001B3E  6FDD               	movwf	(_errno+1)& (0+255),b
  7905  001B40  0E22               	movlw	34
  7906  001B42                     L7:
  7907  001B42  6FDC               	movwf	_errno& (0+255),b
  7908  001B44  0E00               	movlw	0
  7909  001B46  0100               	movlb	0	; () banked
  7910  001B48  6FA0               	movwf	?_log& (0+255),b
  7911  001B4A  0E00               	movlw	0
  7912  001B4C  0100               	movlb	0	; () banked
  7913  001B4E  6FA1               	movwf	(?_log+1)& (0+255),b
  7914  001B50  0E00               	movlw	0
  7915  001B52  0100               	movlb	0	; () banked
  7916  001B54  6FA2               	movwf	(?_log+2)& (0+255),b
  7917                           
  7918                           ; BSR set to: 0
  7919  001B56  D07F               	goto	l1492
  7920  001B58                     l5548:
  7921                           
  7922                           ; BSR set to: 0
  7923  001B58  0E00               	movlw	0
  7924  001B5A  0100               	movlb	0	; () banked
  7925  001B5C  6F7C               	movwf	___ftmul@f2& (0+255),b
  7926  001B5E  0E00               	movlw	0
  7927  001B60  0100               	movlb	0	; () banked
  7928  001B62  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  7929  001B64  0E40               	movlw	64
  7930  001B66  0100               	movlb	0	; () banked
  7931  001B68  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  7932  001B6A  0EA3               	movlw	low log@exponent
  7933  001B6C  0100               	movlb	0	; () banked
  7934  001B6E  6F71               	movwf	frexp@eptr& (0+255),b
  7935  001B70  0E00               	movlw	high log@exponent
  7936  001B72  0100               	movlb	0	; () banked
  7937  001B74  6F72               	movwf	(frexp@eptr+1)& (0+255),b
  7938  001B76  C0A0  F06E         	movff	log@x,frexp@value
  7939  001B7A  C0A1  F06F         	movff	log@x+1,frexp@value+1
  7940  001B7E  C0A2  F070         	movff	log@x+2,frexp@value+2
  7941  001B82  EC19  F014         	call	_frexp	;wreg free
  7942  001B86  C06E  F079         	movff	?_frexp,___ftmul@f1
  7943  001B8A  C06F  F07A         	movff	?_frexp+1,___ftmul@f1+1
  7944  001B8E  C070  F07B         	movff	?_frexp+2,___ftmul@f1+2
  7945  001B92  EC3D  F00C         	call	___ftmul	;wreg free
  7946  001B96  C079  F088         	movff	?___ftmul,___ftadd@f1
  7947  001B9A  C07A  F089         	movff	?___ftmul+1,___ftadd@f1+1
  7948  001B9E  C07B  F08A         	movff	?___ftmul+2,___ftadd@f1+2
  7949  001BA2  0E00               	movlw	0
  7950  001BA4  0100               	movlb	0	; () banked
  7951  001BA6  6F8B               	movwf	___ftadd@f2& (0+255),b
  7952  001BA8  0E80               	movlw	128
  7953  001BAA  0100               	movlb	0	; () banked
  7954  001BAC  6F8C               	movwf	(___ftadd@f2+1)& (0+255),b
  7955  001BAE  0EBF               	movlw	191
  7956  001BB0  0100               	movlb	0	; () banked
  7957  001BB2  6F8D               	movwf	(___ftadd@f2+2)& (0+255),b
  7958  001BB4  EC1E  F008         	call	___ftadd	;wreg free
  7959  001BB8  C088  F0A0         	movff	?___ftadd,log@x
  7960  001BBC  C089  F0A1         	movff	?___ftadd+1,log@x+1
  7961  001BC0  C08A  F0A2         	movff	?___ftadd+2,log@x+2
  7962  001BC4  0100               	movlb	0	; () banked
  7963  001BC6  07A3               	decf	log@exponent& (0+255),f,b
  7964  001BC8  A0D8               	btfss	status,0,c
  7965  001BCA  07A4               	decf	(log@exponent+1)& (0+255),f,b
  7966                           
  7967                           ; BSR set to: 0
  7968  001BCC  C0A0  F094         	movff	log@x,eval_poly@x
  7969  001BD0  C0A1  F095         	movff	log@x+1,eval_poly@x+1
  7970  001BD4  C0A2  F096         	movff	log@x+2,eval_poly@x+2
  7971  001BD8  0E1F               	movlw	low log@coeff
  7972  001BDA  0100               	movlb	0	; () banked
  7973  001BDC  6F97               	movwf	eval_poly@d& (0+255),b
  7974  001BDE  0E10               	movlw	high log@coeff
  7975  001BE0  0100               	movlb	0	; () banked
  7976  001BE2  6F98               	movwf	(eval_poly@d+1)& (0+255),b
  7977  001BE4  0E00               	movlw	0
  7978  001BE6  0100               	movlb	0	; () banked
  7979  001BE8  6F9A               	movwf	(eval_poly@n+1)& (0+255),b
  7980  001BEA  0E08               	movlw	8
  7981  001BEC  6F99               	movwf	eval_poly@n& (0+255),b
  7982  001BEE  EC5E  F010         	call	_eval_poly	;wreg free
  7983  001BF2  C094  F0A0         	movff	?_eval_poly,log@x
  7984  001BF6  C095  F0A1         	movff	?_eval_poly+1,log@x+1
  7985  001BFA  C096  F0A2         	movff	?_eval_poly+2,log@x+2
  7986  001BFE  0E72               	movlw	114
  7987  001C00  0100               	movlb	0	; () banked
  7988  001C02  6F7C               	movwf	___ftmul@f2& (0+255),b
  7989  001C04  0E31               	movlw	49
  7990  001C06  0100               	movlb	0	; () banked
  7991  001C08  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  7992  001C0A  0E3F               	movlw	63
  7993  001C0C  0100               	movlb	0	; () banked
  7994  001C0E  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  7995  001C10  C0A3  F076         	movff	log@exponent,___awtoft@c
  7996  001C14  C0A4  F077         	movff	log@exponent+1,___awtoft@c+1
  7997  001C18  EC6C  F018         	call	___awtoft	;wreg free
  7998  001C1C  C076  F079         	movff	?___awtoft,___ftmul@f1
  7999  001C20  C077  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  8000  001C24  C078  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  8001  001C28  EC3D  F00C         	call	___ftmul	;wreg free
  8002  001C2C  C079  F088         	movff	?___ftmul,___ftadd@f1
  8003  001C30  C07A  F089         	movff	?___ftmul+1,___ftadd@f1+1
  8004  001C34  C07B  F08A         	movff	?___ftmul+2,___ftadd@f1+2
  8005  001C38  C0A0  F08B         	movff	log@x,___ftadd@f2
  8006  001C3C  C0A1  F08C         	movff	log@x+1,___ftadd@f2+1
  8007  001C40  C0A2  F08D         	movff	log@x+2,___ftadd@f2+2
  8008  001C44  EC1E  F008         	call	___ftadd	;wreg free
  8009  001C48  C088  F0A0         	movff	?___ftadd,?_log
  8010  001C4C  C089  F0A1         	movff	?___ftadd+1,?_log+1
  8011  001C50  C08A  F0A2         	movff	?___ftadd+2,?_log+2
  8012  001C54  D000               	goto	l1492
  8013  001C56                     l1492:
  8014  001C56  0012               	return		;funcret
  8015  001C58                     __end_of_log:
  8016                           	opt stack 0
  8017                           prodh	equ	0xFF4
  8018                           prodl	equ	0xFF3
  8019                           intcon	equ	0xFF2
  8020                           intcon2	equ	0xFF1
  8021                           postinc0	equ	0xFEE
  8022                           wreg	equ	0xFE8
  8023                           indf2	equ	0xFDF
  8024                           postinc2	equ	0xFDE
  8025                           postdec2	equ	0xFDD
  8026                           fsr2h	equ	0xFDA
  8027                           fsr2l	equ	0xFD9
  8028                           status	equ	0xFD8
  8029                           
  8030 ;; *************** function _exp *****************
  8031 ;; Defined at:
  8032 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  x               3   73[BANK0 ] int 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  exponent        2   79[BANK0 ] int 
  8037 ;;  sign            1   81[BANK0 ] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  3   73[BANK0 ] unsigned char 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8047 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;Total ram usage:        9 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   10
  8054 ;; This function calls:
  8055 ;;		___awtoft
  8056 ;;		___ftdiv
  8057 ;;		___ftge
  8058 ;;		___ftmul
  8059 ;;		___ftneg
  8060 ;;		___ftsub
  8061 ;;		___fttol
  8062 ;;		_eval_poly
  8063 ;;		_floor
  8064 ;;		_ldexp
  8065 ;; This function is called by:
  8066 ;;		_pow
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text71
  8071  0012BA                     __ptext71:
  8072                           	opt stack 0
  8073  0012BA                     _exp:
  8074                           	opt stack 18
  8075                           
  8076                           ;incstack = 0
  8077  0012BA  0100               	movlb	0	; () banked
  8078  0012BC  51A9               	movf	exp@x& (0+255),w,b
  8079  0012BE  0100               	movlb	0	; () banked
  8080  0012C0  11AA               	iorwf	(exp@x+1)& (0+255),w,b
  8081  0012C2  0100               	movlb	0	; () banked
  8082  0012C4  11AB               	iorwf	(exp@x+2)& (0+255),w,b
  8083  0012C6  A4D8               	btfss	status,2,c
  8084  0012C8  D009               	goto	l5564
  8085                           
  8086                           ; BSR set to: 0
  8087  0012CA  0E00               	movlw	0
  8088  0012CC  0100               	movlb	0	; () banked
  8089  0012CE  6FA9               	movwf	?_exp& (0+255),b
  8090  0012D0  0E80               	movlw	128
  8091  0012D2  0100               	movlb	0	; () banked
  8092  0012D4  6FAA               	movwf	(?_exp+1)& (0+255),b
  8093  0012D6  0E3F               	movlw	63
  8094  0012D8  D03D               	goto	L9
  8095                           
  8096                           ; BSR set to: 0
  8097  0012DA  D102               	goto	l1450
  8098  0012DC                     l5564:
  8099                           
  8100                           ; BSR set to: 0
  8101  0012DC  0E72               	movlw	114
  8102  0012DE  0100               	movlb	0	; () banked
  8103  0012E0  6F6E               	movwf	___ftge@ff1& (0+255),b
  8104  0012E2  0E31               	movlw	49
  8105  0012E4  0100               	movlb	0	; () banked
  8106  0012E6  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  8107  0012E8  0E44               	movlw	68
  8108  0012EA  0100               	movlb	0	; () banked
  8109  0012EC  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  8110  0012EE  C0A9  F071         	movff	exp@x,___ftge@ff2
  8111  0012F2  C0AA  F072         	movff	exp@x+1,___ftge@ff2+1
  8112  0012F6  C0AB  F073         	movff	exp@x+2,___ftge@ff2+2
  8113  0012FA  ECA3  F012         	call	___ftge	;wreg free
  8114  0012FE  0100               	movlb	0	; () banked
  8115  001300  B0D8               	btfsc	status,0,c
  8116  001302  D00E               	goto	l5570
  8117                           
  8118                           ; BSR set to: 0
  8119  001304  0E00               	movlw	0
  8120  001306  0100               	movlb	0	; () banked
  8121  001308  6FDD               	movwf	(_errno+1)& (0+255),b
  8122  00130A  0E22               	movlw	34
  8123  00130C  6FDC               	movwf	_errno& (0+255),b
  8124  00130E  0EFF               	movlw	255
  8125  001310  0100               	movlb	0	; () banked
  8126  001312  6FA9               	movwf	?_exp& (0+255),b
  8127  001314  0E7F               	movlw	127
  8128  001316  0100               	movlb	0	; () banked
  8129  001318  6FAA               	movwf	(?_exp+1)& (0+255),b
  8130  00131A  0E7F               	movlw	127
  8131  00131C  D01B               	goto	L9
  8132                           
  8133                           ; BSR set to: 0
  8134  00131E  D0E0               	goto	l1450
  8135  001320                     l5570:
  8136                           
  8137                           ; BSR set to: 0
  8138  001320  C0A9  F06E         	movff	exp@x,___ftge@ff1
  8139  001324  C0AA  F06F         	movff	exp@x+1,___ftge@ff1+1
  8140  001328  C0AB  F070         	movff	exp@x+2,___ftge@ff1+2
  8141  00132C  0E49               	movlw	73
  8142  00132E  0100               	movlb	0	; () banked
  8143  001330  6F71               	movwf	___ftge@ff2& (0+255),b
  8144  001332  0E3A               	movlw	58
  8145  001334  0100               	movlb	0	; () banked
  8146  001336  6F72               	movwf	(___ftge@ff2+1)& (0+255),b
  8147  001338  0EC4               	movlw	196
  8148  00133A  0100               	movlb	0	; () banked
  8149  00133C  6F73               	movwf	(___ftge@ff2+2)& (0+255),b
  8150  00133E  ECA3  F012         	call	___ftge	;wreg free
  8151  001342  0100               	movlb	0	; () banked
  8152  001344  B0D8               	btfsc	status,0,c
  8153  001346  D009               	goto	l5576
  8154                           
  8155                           ; BSR set to: 0
  8156  001348  0E00               	movlw	0
  8157  00134A  0100               	movlb	0	; () banked
  8158  00134C  6FDD               	movwf	(_errno+1)& (0+255),b
  8159  00134E  0E22               	movlw	34
  8160  001350  6FDC               	movwf	_errno& (0+255),b
  8161  001352  D09F               	goto	l5594
  8162  001354                     L9:
  8163  001354  0100               	movlb	0	; () banked
  8164  001356  6FAB               	movwf	(?_exp+2)& (0+255),b
  8165                           
  8166                           ; BSR set to: 0
  8167  001358  D0C3               	goto	l1450
  8168  00135A                     l5576:
  8169                           
  8170                           ; BSR set to: 0
  8171  00135A  0100               	movlb	0	; () banked
  8172  00135C  AFAB               	btfss	(exp@x+2)& (0+255),7,b
  8173  00135E  D002               	goto	u5130
  8174  001360  0E01               	movlw	1
  8175  001362  D001               	goto	u5140
  8176  001364                     u5130:
  8177  001364  0E00               	movlw	0
  8178  001366                     u5140:
  8179  001366  0100               	movlb	0	; () banked
  8180  001368  6FB1               	movwf	exp@sign& (0+255),b
  8181                           
  8182                           ; BSR set to: 0
  8183  00136A  0100               	movlb	0	; () banked
  8184  00136C  51B1               	movf	exp@sign& (0+255),w,b
  8185  00136E  0100               	movlb	0	; () banked
  8186  001370  B4D8               	btfsc	status,2,c
  8187  001372  D00E               	goto	l1453
  8188                           
  8189                           ; BSR set to: 0
  8190  001374  C0A9  F06E         	movff	exp@x,___ftneg@f1
  8191  001378  C0AA  F06F         	movff	exp@x+1,___ftneg@f1+1
  8192  00137C  C0AB  F070         	movff	exp@x+2,___ftneg@f1+2
  8193  001380  ECAF  F019         	call	___ftneg	;wreg free
  8194  001384  C06E  F0A9         	movff	?___ftneg,exp@x
  8195  001388  C06F  F0AA         	movff	?___ftneg+1,exp@x+1
  8196  00138C  C070  F0AB         	movff	?___ftneg+2,exp@x+2
  8197  001390                     l1453:
  8198  001390  C0A9  F079         	movff	exp@x,___ftmul@f1
  8199  001394  C0AA  F07A         	movff	exp@x+1,___ftmul@f1+1
  8200  001398  C0AB  F07B         	movff	exp@x+2,___ftmul@f1+2
  8201  00139C  0EAA               	movlw	170
  8202  00139E  0100               	movlb	0	; () banked
  8203  0013A0  6F7C               	movwf	___ftmul@f2& (0+255),b
  8204  0013A2  0EB8               	movlw	184
  8205  0013A4  0100               	movlb	0	; () banked
  8206  0013A6  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  8207  0013A8  0E3F               	movlw	63
  8208  0013AA  0100               	movlb	0	; () banked
  8209  0013AC  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  8210  0013AE  EC3D  F00C         	call	___ftmul	;wreg free
  8211  0013B2  C079  F0A9         	movff	?___ftmul,exp@x
  8212  0013B6  C07A  F0AA         	movff	?___ftmul+1,exp@x+1
  8213  0013BA  C07B  F0AB         	movff	?___ftmul+2,exp@x+2
  8214  0013BE  C0A9  F0A1         	movff	exp@x,floor@x
  8215  0013C2  C0AA  F0A2         	movff	exp@x+1,floor@x+1
  8216  0013C6  C0AB  F0A3         	movff	exp@x+2,floor@x+2
  8217  0013CA  ECE0  F00F         	call	_floor	;wreg free
  8218  0013CE  C0A1  F0AC         	movff	?_floor,_exp$3191
  8219  0013D2  C0A2  F0AD         	movff	?_floor+1,_exp$3191+1
  8220  0013D6  C0A3  F0AE         	movff	?_floor+2,_exp$3191+2
  8221  0013DA  C0AC  F088         	movff	_exp$3191,___fttol@f1
  8222  0013DE  C0AD  F089         	movff	_exp$3191+1,___fttol@f1+1
  8223  0013E2  C0AE  F08A         	movff	_exp$3191+2,___fttol@f1+2
  8224  0013E6  EC2C  F00E         	call	___fttol	;wreg free
  8225  0013EA  C088  F0AF         	movff	?___fttol,exp@exponent
  8226  0013EE  C089  F0B0         	movff	?___fttol+1,exp@exponent+1
  8227  0013F2  C0A9  F094         	movff	exp@x,___ftsub@f1
  8228  0013F6  C0AA  F095         	movff	exp@x+1,___ftsub@f1+1
  8229  0013FA  C0AB  F096         	movff	exp@x+2,___ftsub@f1+2
  8230  0013FE  C0AF  F076         	movff	exp@exponent,___awtoft@c
  8231  001402  C0B0  F077         	movff	exp@exponent+1,___awtoft@c+1
  8232  001406  EC6C  F018         	call	___awtoft	;wreg free
  8233  00140A  C076  F097         	movff	?___awtoft,___ftsub@f2
  8234  00140E  C077  F098         	movff	?___awtoft+1,___ftsub@f2+1
  8235  001412  C078  F099         	movff	?___awtoft+2,___ftsub@f2+2
  8236  001416  ECDC  F017         	call	___ftsub	;wreg free
  8237  00141A  C094  F0A9         	movff	?___ftsub,exp@x
  8238  00141E  C095  F0AA         	movff	?___ftsub+1,exp@x+1
  8239  001422  C096  F0AB         	movff	?___ftsub+2,exp@x+2
  8240  001426  C0A9  F094         	movff	exp@x,eval_poly@x
  8241  00142A  C0AA  F095         	movff	exp@x+1,eval_poly@x+1
  8242  00142E  C0AB  F096         	movff	exp@x+2,eval_poly@x+2
  8243  001432  0E01               	movlw	low exp@coeff
  8244  001434  0100               	movlb	0	; () banked
  8245  001436  6F97               	movwf	eval_poly@d& (0+255),b
  8246  001438  0E10               	movlw	high exp@coeff
  8247  00143A  0100               	movlb	0	; () banked
  8248  00143C  6F98               	movwf	(eval_poly@d+1)& (0+255),b
  8249  00143E  0E00               	movlw	0
  8250  001440  0100               	movlb	0	; () banked
  8251  001442  6F9A               	movwf	(eval_poly@n+1)& (0+255),b
  8252  001444  0E09               	movlw	9
  8253  001446  6F99               	movwf	eval_poly@n& (0+255),b
  8254  001448  EC5E  F010         	call	_eval_poly	;wreg free
  8255  00144C  C094  F0A0         	movff	?_eval_poly,ldexp@value
  8256  001450  C095  F0A1         	movff	?_eval_poly+1,ldexp@value+1
  8257  001454  C096  F0A2         	movff	?_eval_poly+2,ldexp@value+2
  8258  001458  C0AF  F0A3         	movff	exp@exponent,ldexp@newexp
  8259  00145C  C0B0  F0A4         	movff	exp@exponent+1,ldexp@newexp+1
  8260  001460  EC55  F00F         	call	_ldexp	;wreg free
  8261  001464  C0A0  F0A9         	movff	?_ldexp,exp@x
  8262  001468  C0A1  F0AA         	movff	?_ldexp+1,exp@x+1
  8263  00146C  C0A2  F0AB         	movff	?_ldexp+2,exp@x+2
  8264  001470  0100               	movlb	0	; () banked
  8265  001472  51B1               	movf	exp@sign& (0+255),w,b
  8266  001474  0100               	movlb	0	; () banked
  8267  001476  B4D8               	btfsc	status,2,c
  8268  001478  D02D               	goto	l1454
  8269                           
  8270                           ; BSR set to: 0
  8271  00147A  0100               	movlb	0	; () banked
  8272  00147C  29A9               	incf	exp@x& (0+255),w,b
  8273  00147E  E112               	bnz	l5598
  8274  001480  0E7F               	movlw	127
  8275  001482  0100               	movlb	0	; () banked
  8276  001484  19AA               	xorwf	(exp@x+1)& (0+255),w,b
  8277  001486  E10E               	bnz	l5598
  8278  001488  0E7F               	movlw	127
  8279  00148A  0100               	movlb	0	; () banked
  8280  00148C  19AB               	xorwf	(exp@x+2)& (0+255),w,b
  8281  00148E  A4D8               	btfss	status,2,c
  8282  001490  D009               	goto	l5598
  8283  001492                     l5594:
  8284                           
  8285                           ; BSR set to: 0
  8286  001492  0E00               	movlw	0
  8287  001494  0100               	movlb	0	; () banked
  8288  001496  6FA9               	movwf	?_exp& (0+255),b
  8289  001498  0E00               	movlw	0
  8290  00149A  0100               	movlb	0	; () banked
  8291  00149C  6FAA               	movwf	(?_exp+1)& (0+255),b
  8292  00149E  0E00               	movlw	0
  8293  0014A0  D759               	goto	L9
  8294                           
  8295                           ; BSR set to: 0
  8296  0014A2  D01E               	goto	l1450
  8297  0014A4                     l5598:
  8298                           
  8299                           ; BSR set to: 0
  8300  0014A4  0E00               	movlw	0
  8301  0014A6  0100               	movlb	0	; () banked
  8302  0014A8  6F76               	movwf	___ftdiv@f1& (0+255),b
  8303  0014AA  0E80               	movlw	128
  8304  0014AC  0100               	movlb	0	; () banked
  8305  0014AE  6F77               	movwf	(___ftdiv@f1+1)& (0+255),b
  8306  0014B0  0E3F               	movlw	63
  8307  0014B2  0100               	movlb	0	; () banked
  8308  0014B4  6F78               	movwf	(___ftdiv@f1+2)& (0+255),b
  8309  0014B6  C0A9  F079         	movff	exp@x,___ftdiv@f2
  8310  0014BA  C0AA  F07A         	movff	exp@x+1,___ftdiv@f2+1
  8311  0014BE  C0AB  F07B         	movff	exp@x+2,___ftdiv@f2+2
  8312  0014C2  ECEB  F00C         	call	___ftdiv	;wreg free
  8313  0014C6  C076  F0A9         	movff	?___ftdiv,?_exp
  8314  0014CA  C077  F0AA         	movff	?___ftdiv+1,?_exp+1
  8315  0014CE  C078  F0AB         	movff	?___ftdiv+2,?_exp+2
  8316  0014D2  D006               	goto	l1450
  8317  0014D4                     l1454:
  8318                           
  8319                           ; BSR set to: 0
  8320  0014D4  C0A9  F0A9         	movff	exp@x,?_exp
  8321  0014D8  C0AA  F0AA         	movff	exp@x+1,?_exp+1
  8322  0014DC  C0AB  F0AB         	movff	exp@x+2,?_exp+2
  8323  0014E0                     l1450:
  8324  0014E0  0012               	return		;funcret
  8325  0014E2                     __end_of_exp:
  8326                           	opt stack 0
  8327                           prodh	equ	0xFF4
  8328                           prodl	equ	0xFF3
  8329                           intcon	equ	0xFF2
  8330                           intcon2	equ	0xFF1
  8331                           postinc0	equ	0xFEE
  8332                           wreg	equ	0xFE8
  8333                           indf2	equ	0xFDF
  8334                           postinc2	equ	0xFDE
  8335                           postdec2	equ	0xFDD
  8336                           fsr2h	equ	0xFDA
  8337                           fsr2l	equ	0xFD9
  8338                           status	equ	0xFD8
  8339                           
  8340 ;; *************** function _ldexp *****************
  8341 ;; Defined at:
  8342 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  value           3   64[BANK0 ] unsigned char 
  8345 ;;  newexp          2   67[BANK0 ] int 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  3   64[BANK0 ] int 
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8357 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;Total ram usage:        7 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    7
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_exp
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text72
  8372  001EAA                     __ptext72:
  8373                           	opt stack 0
  8374  001EAA                     _ldexp:
  8375                           	opt stack 20
  8376                           
  8377                           ;incstack = 0
  8378  001EAA  0100               	movlb	0	; () banked
  8379  001EAC  51A0               	movf	ldexp@value& (0+255),w,b
  8380  001EAE  0100               	movlb	0	; () banked
  8381  001EB0  11A1               	iorwf	(ldexp@value+1)& (0+255),w,b
  8382  001EB2  0100               	movlb	0	; () banked
  8383  001EB4  11A2               	iorwf	(ldexp@value+2)& (0+255),w,b
  8384  001EB6  A4D8               	btfss	status,2,c
  8385  001EB8  D002               	goto	l5354
  8386  001EBA  D02A               	goto	L10
  8387                           
  8388                           ; BSR set to: 0
  8389                           
  8390                           ; BSR set to: 0
  8391  001EBC  D080               	goto	l1474
  8392  001EBE                     l5354:
  8393                           
  8394                           ; BSR set to: 0
  8395  001EBE  0100               	movlb	0	; () banked
  8396  001EC0  51A2               	movf	(ldexp@value+2)& (0+255),w,b
  8397  001EC2  0B7F               	andlw	127
  8398  001EC4  0100               	movlb	0	; () banked
  8399  001EC6  6FA5               	movwf	??_ldexp& (0+255),b
  8400  001EC8  6BA6               	clrf	(??_ldexp+1)& (0+255),b
  8401  001ECA  90D8               	bcf	status,0,c
  8402  001ECC  0100               	movlb	0	; () banked
  8403  001ECE  37A5               	rlcf	??_ldexp& (0+255),f,b
  8404  001ED0  37A6               	rlcf	(??_ldexp+1)& (0+255),f,b
  8405  001ED2  0100               	movlb	0	; () banked
  8406  001ED4  51A5               	movf	??_ldexp& (0+255),w,b
  8407  001ED6  0100               	movlb	0	; () banked
  8408  001ED8  27A3               	addwf	ldexp@newexp& (0+255),f,b
  8409  001EDA  0100               	movlb	0	; () banked
  8410  001EDC  51A6               	movf	(??_ldexp+1)& (0+255),w,b
  8411  001EDE  0100               	movlb	0	; () banked
  8412  001EE0  23A4               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  8413  001EE2  0100               	movlb	0	; () banked
  8414  001EE4  AFA1               	btfss	(ldexp@value+1)& (0+255),7,b
  8415  001EE6  D004               	goto	u4830
  8416  001EE8  0100               	movlb	0	; () banked
  8417  001EEA  6BA5               	clrf	??_ldexp& (0+255),b
  8418  001EEC  2BA5               	incf	??_ldexp& (0+255),f,b
  8419  001EEE  D002               	goto	u4838
  8420  001EF0                     u4830:
  8421  001EF0  0100               	movlb	0	; () banked
  8422  001EF2  6BA5               	clrf	??_ldexp& (0+255),b
  8423  001EF4                     u4838:
  8424  001EF4  0100               	movlb	0	; () banked
  8425  001EF6  51A5               	movf	??_ldexp& (0+255),w,b
  8426  001EF8  0100               	movlb	0	; () banked
  8427  001EFA  27A3               	addwf	ldexp@newexp& (0+255),f,b
  8428  001EFC  0E00               	movlw	0
  8429  001EFE  23A4               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  8430  001F00  0100               	movlb	0	; () banked
  8431  001F02  AFA4               	btfss	(ldexp@newexp+1)& (0+255),7,b
  8432  001F04  D00F               	goto	l5362
  8433                           
  8434                           ; BSR set to: 0
  8435  001F06  0E00               	movlw	0
  8436  001F08  0100               	movlb	0	; () banked
  8437  001F0A  6FDD               	movwf	(_errno+1)& (0+255),b
  8438  001F0C  0E22               	movlw	34
  8439  001F0E  6FDC               	movwf	_errno& (0+255),b
  8440  001F10                     L10:
  8441  001F10  0E00               	movlw	0
  8442  001F12  0100               	movlb	0	; () banked
  8443  001F14  6FA0               	movwf	?_ldexp& (0+255),b
  8444  001F16  0E00               	movlw	0
  8445  001F18  0100               	movlb	0	; () banked
  8446  001F1A  6FA1               	movwf	(?_ldexp+1)& (0+255),b
  8447  001F1C  0E00               	movlw	0
  8448  001F1E  D022               	goto	L12
  8449                           
  8450                           ; BSR set to: 0
  8451  001F20  D04E               	goto	l1474
  8452                           
  8453                           ; BSR set to: 0
  8454  001F22  D046               	goto	l5380
  8455  001F24                     l5362:
  8456                           
  8457                           ; BSR set to: 0
  8458  001F24  0100               	movlb	0	; () banked
  8459  001F26  BFA4               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  8460  001F28  D021               	goto	l5378
  8461  001F2A  0100               	movlb	0	; () banked
  8462  001F2C  05A4               	decf	(ldexp@newexp+1)& (0+255),w,b
  8463  001F2E  A0D8               	btfss	status,0,c
  8464  001F30  D01D               	goto	l5378
  8465                           
  8466                           ; BSR set to: 0
  8467  001F32  0E00               	movlw	0
  8468  001F34  0100               	movlb	0	; () banked
  8469  001F36  6FDD               	movwf	(_errno+1)& (0+255),b
  8470  001F38  0E22               	movlw	34
  8471  001F3A  6FDC               	movwf	_errno& (0+255),b
  8472                           
  8473                           ; BSR set to: 0
  8474  001F3C  0100               	movlb	0	; () banked
  8475  001F3E  AFA2               	btfss	(ldexp@value+2)& (0+255),7,b
  8476  001F40  D00A               	goto	l5374
  8477                           
  8478                           ; BSR set to: 0
  8479  001F42  0EFF               	movlw	255
  8480  001F44  0100               	movlb	0	; () banked
  8481  001F46  6FA0               	movwf	?_ldexp& (0+255),b
  8482  001F48  0E7F               	movlw	127
  8483  001F4A  0100               	movlb	0	; () banked
  8484  001F4C  6FA1               	movwf	(?_ldexp+1)& (0+255),b
  8485  001F4E  0EFF               	movlw	255
  8486  001F50  D009               	goto	L12
  8487                           
  8488                           ; BSR set to: 0
  8489  001F52  D035               	goto	l1474
  8490                           
  8491                           ; BSR set to: 0
  8492  001F54  D02D               	goto	l5380
  8493  001F56                     l5374:
  8494                           
  8495                           ; BSR set to: 0
  8496  001F56  0EFF               	movlw	255
  8497  001F58  0100               	movlb	0	; () banked
  8498  001F5A  6FA0               	movwf	?_ldexp& (0+255),b
  8499  001F5C  0E7F               	movlw	127
  8500  001F5E  0100               	movlb	0	; () banked
  8501  001F60  6FA1               	movwf	(?_ldexp+1)& (0+255),b
  8502  001F62  0E7F               	movlw	127
  8503  001F64                     L12:
  8504  001F64  0100               	movlb	0	; () banked
  8505  001F66  6FA2               	movwf	(?_ldexp+2)& (0+255),b
  8506                           
  8507                           ; BSR set to: 0
  8508  001F68  D02A               	goto	l1474
  8509                           
  8510                           ; BSR set to: 0
  8511  001F6A  D022               	goto	l5380
  8512  001F6C                     l5378:
  8513                           
  8514                           ; BSR set to: 0
  8515  001F6C  0100               	movlb	0	; () banked
  8516  001F6E  35A4               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  8517  001F70  31A4               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  8518  001F72  0100               	movlb	0	; () banked
  8519  001F74  6FA6               	movwf	(??_ldexp+1)& (0+255),b
  8520  001F76  0100               	movlb	0	; () banked
  8521  001F78  31A3               	rrcf	ldexp@newexp& (0+255),w,b
  8522  001F7A  0100               	movlb	0	; () banked
  8523  001F7C  6FA5               	movwf	??_ldexp& (0+255),b
  8524  001F7E  0100               	movlb	0	; () banked
  8525  001F80  51A2               	movf	(ldexp@value+2)& (0+255),w,b
  8526  001F82  0100               	movlb	0	; () banked
  8527  001F84  19A5               	xorwf	??_ldexp& (0+255),w,b
  8528  001F86  0B80               	andlw	-128
  8529  001F88  19A5               	xorwf	??_ldexp& (0+255),w,b
  8530  001F8A  0100               	movlb	0	; () banked
  8531  001F8C  6FA2               	movwf	(ldexp@value+2)& (0+255),b
  8532  001F8E  C0A3  F0A5         	movff	ldexp@newexp,??_ldexp
  8533  001F92  0E01               	movlw	1
  8534  001F94  0100               	movlb	0	; () banked
  8535  001F96  17A5               	andwf	??_ldexp& (0+255),f,b
  8536  001F98  0100               	movlb	0	; () banked
  8537  001F9A  33A5               	rrcf	??_ldexp& (0+255),f,b
  8538  001F9C  33A5               	rrcf	??_ldexp& (0+255),f,b
  8539  001F9E  0100               	movlb	0	; () banked
  8540  001FA0  51A1               	movf	(ldexp@value+1)& (0+255),w,b
  8541  001FA2  0100               	movlb	0	; () banked
  8542  001FA4  19A5               	xorwf	??_ldexp& (0+255),w,b
  8543  001FA6  0B7F               	andlw	-129
  8544  001FA8  19A5               	xorwf	??_ldexp& (0+255),w,b
  8545  001FAA  0100               	movlb	0	; () banked
  8546  001FAC  6FA1               	movwf	(ldexp@value+1)& (0+255),b
  8547                           
  8548                           ; BSR set to: 0
  8549  001FAE  D000               	goto	l5380
  8550  001FB0                     l5380:
  8551                           
  8552                           ; BSR set to: 0
  8553  001FB0  C0A0  F0A0         	movff	ldexp@value,?_ldexp
  8554  001FB4  C0A1  F0A1         	movff	ldexp@value+1,?_ldexp+1
  8555  001FB8  C0A2  F0A2         	movff	ldexp@value+2,?_ldexp+2
  8556  001FBC  D000               	goto	l1474
  8557  001FBE                     l1474:
  8558                           
  8559                           ; BSR set to: 0
  8560  001FBE  0012               	return		;funcret
  8561  001FC0                     __end_of_ldexp:
  8562                           	opt stack 0
  8563                           prodh	equ	0xFF4
  8564                           prodl	equ	0xFF3
  8565                           intcon	equ	0xFF2
  8566                           intcon2	equ	0xFF1
  8567                           postinc0	equ	0xFEE
  8568                           wreg	equ	0xFE8
  8569                           indf2	equ	0xFDF
  8570                           postinc2	equ	0xFDE
  8571                           postdec2	equ	0xFDD
  8572                           fsr2h	equ	0xFDA
  8573                           fsr2l	equ	0xFD9
  8574                           status	equ	0xFD8
  8575                           
  8576 ;; *************** function _floor *****************
  8577 ;; Defined at:
  8578 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  x               3   65[BANK0 ] int 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  i               3   68[BANK0 ] int 
  8583 ;;  expon           2   71[BANK0 ] int 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  3   65[BANK0 ] int 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8593 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;Total ram usage:        8 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    9
  8600 ;; This function calls:
  8601 ;;		___altoft
  8602 ;;		___ftadd
  8603 ;;		___ftge
  8604 ;;		___fttol
  8605 ;;		_frexp
  8606 ;; This function is called by:
  8607 ;;		_exp
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text73
  8612  001FC0                     __ptext73:
  8613                           	opt stack 0
  8614  001FC0                     _floor:
  8615                           	opt stack 18
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;incstack = 0
  8619  001FC0  C0A1  F06E         	movff	floor@x,frexp@value
  8620  001FC4  C0A2  F06F         	movff	floor@x+1,frexp@value+1
  8621  001FC8  C0A3  F070         	movff	floor@x+2,frexp@value+2
  8622  001FCC  0EA7               	movlw	low floor@expon
  8623  001FCE  0100               	movlb	0	; () banked
  8624  001FD0  6F71               	movwf	frexp@eptr& (0+255),b
  8625  001FD2  0E00               	movlw	high floor@expon
  8626  001FD4  0100               	movlb	0	; () banked
  8627  001FD6  6F72               	movwf	(frexp@eptr+1)& (0+255),b
  8628  001FD8  EC19  F014         	call	_frexp	;wreg free
  8629  001FDC  0100               	movlb	0	; () banked
  8630  001FDE  AFA8               	btfss	(floor@expon+1)& (0+255),7,b
  8631  001FE0  D016               	goto	l5332
  8632                           
  8633                           ; BSR set to: 0
  8634  001FE2  0100               	movlb	0	; () banked
  8635  001FE4  AFA3               	btfss	(floor@x+2)& (0+255),7,b
  8636  001FE6  D009               	goto	l5328
  8637                           
  8638                           ; BSR set to: 0
  8639  001FE8  0E00               	movlw	0
  8640  001FEA  0100               	movlb	0	; () banked
  8641  001FEC  6FA1               	movwf	?_floor& (0+255),b
  8642  001FEE  0E80               	movlw	128
  8643  001FF0  0100               	movlb	0	; () banked
  8644  001FF2  6FA2               	movwf	(?_floor+1)& (0+255),b
  8645  001FF4  0EBF               	movlw	191
  8646  001FF6  D008               	goto	L13
  8647                           
  8648                           ; BSR set to: 0
  8649  001FF8  D060               	goto	l1462
  8650  001FFA                     l5328:
  8651                           
  8652                           ; BSR set to: 0
  8653  001FFA  0E00               	movlw	0
  8654  001FFC  0100               	movlb	0	; () banked
  8655  001FFE  6FA1               	movwf	?_floor& (0+255),b
  8656  002000  0E00               	movlw	0
  8657  002002  0100               	movlb	0	; () banked
  8658  002004  6FA2               	movwf	(?_floor+1)& (0+255),b
  8659  002006  0E00               	movlw	0
  8660  002008                     L13:
  8661  002008  0100               	movlb	0	; () banked
  8662  00200A  6FA3               	movwf	(?_floor+2)& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665  00200C  D056               	goto	l1462
  8666  00200E                     l5332:
  8667                           
  8668                           ; BSR set to: 0
  8669  00200E  0100               	movlb	0	; () banked
  8670  002010  51A8               	movf	(floor@expon+1)& (0+255),w,b
  8671  002012  E105               	bnz	u4790
  8672  002014  0E15               	movlw	21
  8673  002016  0100               	movlb	0	; () banked
  8674  002018  5DA7               	subwf	floor@expon& (0+255),w,b
  8675  00201A  A0D8               	btfss	status,0,c
  8676  00201C  D007               	goto	l5336
  8677  00201E                     u4790:
  8678                           
  8679                           ; BSR set to: 0
  8680  00201E  C0A1  F0A1         	movff	floor@x,?_floor
  8681  002022  C0A2  F0A2         	movff	floor@x+1,?_floor+1
  8682  002026  C0A3  F0A3         	movff	floor@x+2,?_floor+2
  8683  00202A  D047               	goto	l1462
  8684  00202C                     l5336:
  8685                           
  8686                           ; BSR set to: 0
  8687  00202C  C0A1  F088         	movff	floor@x,___fttol@f1
  8688  002030  C0A2  F089         	movff	floor@x+1,___fttol@f1+1
  8689  002034  C0A3  F08A         	movff	floor@x+2,___fttol@f1+2
  8690  002038  EC2C  F00E         	call	___fttol	;wreg free
  8691  00203C  C088  F097         	movff	?___fttol,___altoft@c
  8692  002040  C089  F098         	movff	?___fttol+1,___altoft@c+1
  8693  002044  C08A  F099         	movff	?___fttol+2,___altoft@c+2
  8694  002048  C08B  F09A         	movff	?___fttol+3,___altoft@c+3
  8695  00204C  EC14  F015         	call	___altoft	;wreg free
  8696  002050  C097  F0A4         	movff	?___altoft,floor@i
  8697  002054  C098  F0A5         	movff	?___altoft+1,floor@i+1
  8698  002058  C099  F0A6         	movff	?___altoft+2,floor@i+2
  8699  00205C  C0A1  F06E         	movff	floor@x,___ftge@ff1
  8700  002060  C0A2  F06F         	movff	floor@x+1,___ftge@ff1+1
  8701  002064  C0A3  F070         	movff	floor@x+2,___ftge@ff1+2
  8702  002068  C0A4  F071         	movff	floor@i,___ftge@ff2
  8703  00206C  C0A5  F072         	movff	floor@i+1,___ftge@ff2+1
  8704  002070  C0A6  F073         	movff	floor@i+2,___ftge@ff2+2
  8705  002074  ECA3  F012         	call	___ftge	;wreg free
  8706  002078  0100               	movlb	0	; () banked
  8707  00207A  B0D8               	btfsc	status,0,c
  8708  00207C  D018               	goto	l1464
  8709                           
  8710                           ; BSR set to: 0
  8711  00207E  C0A4  F088         	movff	floor@i,___ftadd@f1
  8712  002082  C0A5  F089         	movff	floor@i+1,___ftadd@f1+1
  8713  002086  C0A6  F08A         	movff	floor@i+2,___ftadd@f1+2
  8714  00208A  0E00               	movlw	0
  8715  00208C  0100               	movlb	0	; () banked
  8716  00208E  6F8B               	movwf	___ftadd@f2& (0+255),b
  8717  002090  0E80               	movlw	128
  8718  002092  0100               	movlb	0	; () banked
  8719  002094  6F8C               	movwf	(___ftadd@f2+1)& (0+255),b
  8720  002096  0EBF               	movlw	191
  8721  002098  0100               	movlb	0	; () banked
  8722  00209A  6F8D               	movwf	(___ftadd@f2+2)& (0+255),b
  8723  00209C  EC1E  F008         	call	___ftadd	;wreg free
  8724  0020A0  C088  F0A1         	movff	?___ftadd,?_floor
  8725  0020A4  C089  F0A2         	movff	?___ftadd+1,?_floor+1
  8726  0020A8  C08A  F0A3         	movff	?___ftadd+2,?_floor+2
  8727  0020AC  D006               	goto	l1462
  8728  0020AE                     l1464:
  8729                           
  8730                           ; BSR set to: 0
  8731  0020AE  C0A4  F0A1         	movff	floor@i,?_floor
  8732  0020B2  C0A5  F0A2         	movff	floor@i+1,?_floor+1
  8733  0020B6  C0A6  F0A3         	movff	floor@i+2,?_floor+2
  8734  0020BA                     l1462:
  8735  0020BA  0012               	return		;funcret
  8736  0020BC                     __end_of_floor:
  8737                           	opt stack 0
  8738                           prodh	equ	0xFF4
  8739                           prodl	equ	0xFF3
  8740                           intcon	equ	0xFF2
  8741                           intcon2	equ	0xFF1
  8742                           postinc0	equ	0xFEE
  8743                           wreg	equ	0xFE8
  8744                           indf2	equ	0xFDF
  8745                           postinc2	equ	0xFDE
  8746                           postdec2	equ	0xFDD
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function _frexp *****************
  8752 ;; Defined at:
  8753 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  value           3   14[BANK0 ] int 
  8756 ;;  eptr            2   17[BANK0 ] PTR int 
  8757 ;;		 -> log@exponent(2), floor@expon(2), 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  3   14[BANK0 ] PTR int 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8769 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;Total ram usage:        7 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    7
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_floor
  8780 ;;		_log
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text74
  8785  002832                     __ptext74:
  8786                           	opt stack 0
  8787  002832                     _frexp:
  8788                           	opt stack 20
  8789                           
  8790                           ;incstack = 0
  8791  002832  0100               	movlb	0	; () banked
  8792  002834  516E               	movf	frexp@value& (0+255),w,b
  8793  002836  0100               	movlb	0	; () banked
  8794  002838  116F               	iorwf	(frexp@value+1)& (0+255),w,b
  8795  00283A  0100               	movlb	0	; () banked
  8796  00283C  1170               	iorwf	(frexp@value+2)& (0+255),w,b
  8797  00283E  A4D8               	btfss	status,2,c
  8798  002840  D012               	goto	l5094
  8799                           
  8800                           ; BSR set to: 0
  8801  002842  C071  FFD9         	movff	frexp@eptr,fsr2l
  8802  002846  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  8803  00284A  0E00               	movlw	0
  8804  00284C  6EDE               	movwf	postinc2,c
  8805  00284E  0E00               	movlw	0
  8806  002850  6EDD               	movwf	postdec2,c
  8807                           
  8808                           ; BSR set to: 0
  8809  002852  0E00               	movlw	0
  8810  002854  0100               	movlb	0	; () banked
  8811  002856  6F6E               	movwf	?_frexp& (0+255),b
  8812  002858  0E00               	movlw	0
  8813  00285A  0100               	movlb	0	; () banked
  8814  00285C  6F6F               	movwf	(?_frexp+1)& (0+255),b
  8815  00285E  0E00               	movlw	0
  8816  002860  0100               	movlb	0	; () banked
  8817  002862  6F70               	movwf	(?_frexp+2)& (0+255),b
  8818                           
  8819                           ; BSR set to: 0
  8820  002864  D03C               	goto	l1470
  8821  002866                     l5094:
  8822                           
  8823                           ; BSR set to: 0
  8824  002866  0100               	movlb	0	; () banked
  8825  002868  5170               	movf	(frexp@value+2)& (0+255),w,b
  8826  00286A  0B7F               	andlw	127
  8827  00286C  0100               	movlb	0	; () banked
  8828  00286E  6F73               	movwf	??_frexp& (0+255),b
  8829  002870  6B74               	clrf	(??_frexp+1)& (0+255),b
  8830  002872  90D8               	bcf	status,0,c
  8831  002874  0100               	movlb	0	; () banked
  8832  002876  3773               	rlcf	??_frexp& (0+255),f,b
  8833  002878  3774               	rlcf	(??_frexp+1)& (0+255),f,b
  8834  00287A  C071  FFD9         	movff	frexp@eptr,fsr2l
  8835  00287E  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  8836  002882  C073  FFDE         	movff	??_frexp,postinc2
  8837  002886  C074  FFDD         	movff	??_frexp+1,postdec2
  8838  00288A  0100               	movlb	0	; () banked
  8839  00288C  AF6F               	btfss	(frexp@value+1)& (0+255),7,b
  8840  00288E  D004               	goto	u4460
  8841  002890  0100               	movlb	0	; () banked
  8842  002892  6B73               	clrf	??_frexp& (0+255),b
  8843  002894  2B73               	incf	??_frexp& (0+255),f,b
  8844  002896  D002               	goto	u4468
  8845  002898                     u4460:
  8846  002898  0100               	movlb	0	; () banked
  8847  00289A  6B73               	clrf	??_frexp& (0+255),b
  8848  00289C                     u4468:
  8849  00289C  0100               	movlb	0	; () banked
  8850  00289E  5173               	movf	??_frexp& (0+255),w,b
  8851  0028A0  C071  FFD9         	movff	frexp@eptr,fsr2l
  8852  0028A4  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  8853  0028A8  12DE               	iorwf	postinc2,f,c
  8854  0028AA  0E00               	movlw	0
  8855  0028AC  12DD               	iorwf	postdec2,f,c
  8856                           
  8857                           ; BSR set to: 0
  8858  0028AE  C071  FFD9         	movff	frexp@eptr,fsr2l
  8859  0028B2  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  8860  0028B6  0E82               	movlw	130
  8861  0028B8  26DE               	addwf	postinc2,f,c
  8862  0028BA  0EFF               	movlw	255
  8863  0028BC  22DD               	addwfc	postdec2,f,c
  8864                           
  8865                           ; BSR set to: 0
  8866  0028BE  8170               	bsf	(frexp@value+2)& (0+255),0,b
  8867  0028C0  8370               	bsf	(frexp@value+2)& (0+255),1,b
  8868  0028C2  8570               	bsf	(frexp@value+2)& (0+255),2,b
  8869  0028C4  8770               	bsf	(frexp@value+2)& (0+255),3,b
  8870  0028C6  8970               	bsf	(frexp@value+2)& (0+255),4,b
  8871  0028C8  8B70               	bsf	(frexp@value+2)& (0+255),5,b
  8872  0028CA  9D70               	bcf	(frexp@value+2)& (0+255),6,b
  8873                           
  8874                           ; BSR set to: 0
  8875  0028CC  0100               	movlb	0	; () banked
  8876  0028CE  9F6F               	bcf	(frexp@value+1)& (0+255),7,b
  8877                           
  8878                           ; BSR set to: 0
  8879  0028D0  C06E  F06E         	movff	frexp@value,?_frexp
  8880  0028D4  C06F  F06F         	movff	frexp@value+1,?_frexp+1
  8881  0028D8  C070  F070         	movff	frexp@value+2,?_frexp+2
  8882  0028DC  D000               	goto	l1470
  8883  0028DE                     l1470:
  8884                           
  8885                           ; BSR set to: 0
  8886  0028DE  0012               	return		;funcret
  8887  0028E0                     __end_of_frexp:
  8888                           	opt stack 0
  8889                           prodh	equ	0xFF4
  8890                           prodl	equ	0xFF3
  8891                           intcon	equ	0xFF2
  8892                           intcon2	equ	0xFF1
  8893                           postinc0	equ	0xFEE
  8894                           wreg	equ	0xFE8
  8895                           indf2	equ	0xFDF
  8896                           postinc2	equ	0xFDE
  8897                           postdec2	equ	0xFDD
  8898                           fsr2h	equ	0xFDA
  8899                           fsr2l	equ	0xFD9
  8900                           status	equ	0xFD8
  8901                           
  8902 ;; *************** function ___fttol *****************
  8903 ;; Defined at:
  8904 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  f1              3   40[BANK0 ] float 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  lval            4   50[BANK0 ] unsigned long 
  8909 ;;  exp1            1   54[BANK0 ] unsigned char 
  8910 ;;  sign1           1   49[BANK0 ] unsigned char 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  4   40[BANK0 ] long 
  8913 ;; Registers used:
  8914 ;;		wreg, status,2, status,0
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8922 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8923 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8924 ;;Total ram usage:       15 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    7
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_CalculateSensorSums
  8931 ;;		_pow
  8932 ;;		_exp
  8933 ;;		_floor
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text75
  8938  001C58                     __ptext75:
  8939                           	opt stack 0
  8940  001C58                     ___fttol:
  8941                           	opt stack 19
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;incstack = 0
  8945  001C58  C08A  F08C         	movff	___fttol@f1+2,??___fttol
  8946  001C5C  0100               	movlb	0	; () banked
  8947  001C5E  6B8D               	clrf	(??___fttol+1)& (0+255),b
  8948  001C60  6B8E               	clrf	(??___fttol+2)& (0+255),b
  8949  001C62  0100               	movlb	0	; () banked
  8950  001C64  3589               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8951  001C66  0100               	movlb	0	; () banked
  8952  001C68  378C               	rlcf	??___fttol& (0+255),f,b
  8953  001C6A  E301               	bnc	u4371
  8954  001C6C  818D               	bsf	(??___fttol+1)& (0+255),0,b
  8955  001C6E                     u4371:
  8956  001C6E  0100               	movlb	0	; () banked
  8957  001C70  518C               	movf	??___fttol& (0+255),w,b
  8958  001C72  0100               	movlb	0	; () banked
  8959  001C74  6F96               	movwf	___fttol@exp1& (0+255),b
  8960  001C76  0100               	movlb	0	; () banked
  8961  001C78  5196               	movf	___fttol@exp1& (0+255),w,b
  8962  001C7A  A4D8               	btfss	status,2,c
  8963  001C7C  D002               	goto	l5046
  8964  001C7E  D051               	goto	l5070
  8965                           
  8966                           ; BSR set to: 0
  8967                           
  8968                           ; BSR set to: 0
  8969  001C80  D083               	goto	l1288
  8970  001C82                     l5046:
  8971                           
  8972                           ; BSR set to: 0
  8973  001C82  0E17               	movlw	23
  8974  001C84  0100               	movlb	0	; () banked
  8975  001C86  6F8C               	movwf	??___fttol& (0+255),b
  8976  001C88  C088  F08D         	movff	___fttol@f1,??___fttol+1
  8977  001C8C  C089  F08E         	movff	___fttol@f1+1,??___fttol+2
  8978  001C90  C08A  F08F         	movff	___fttol@f1+2,??___fttol+3
  8979  001C94  0100               	movlb	0	; () banked
  8980  001C96  298C               	incf	??___fttol& (0+255),w,b
  8981  001C98  0100               	movlb	0	; () banked
  8982  001C9A  6F90               	movwf	(??___fttol+4)& (0+255),b
  8983  001C9C  D005               	goto	u4390
  8984  001C9E                     u4395:
  8985  001C9E  0100               	movlb	0	; () banked
  8986  001CA0  90D8               	bcf	status,0,c
  8987  001CA2  338F               	rrcf	(??___fttol+3)& (0+255),f,b
  8988  001CA4  338E               	rrcf	(??___fttol+2)& (0+255),f,b
  8989  001CA6  338D               	rrcf	(??___fttol+1)& (0+255),f,b
  8990  001CA8                     u4390:
  8991  001CA8  0100               	movlb	0	; () banked
  8992  001CAA  2F90               	decfsz	(??___fttol+4)& (0+255),f,b
  8993  001CAC  D7F8               	goto	u4395
  8994  001CAE  0100               	movlb	0	; () banked
  8995  001CB0  518D               	movf	(??___fttol+1)& (0+255),w,b
  8996  001CB2  0100               	movlb	0	; () banked
  8997  001CB4  6F91               	movwf	___fttol@sign1& (0+255),b
  8998                           
  8999                           ; BSR set to: 0
  9000  001CB6  0100               	movlb	0	; () banked
  9001  001CB8  8F89               	bsf	(___fttol@f1+1)& (0+255),7,b
  9002                           
  9003                           ; BSR set to: 0
  9004  001CBA  0EFF               	movlw	255
  9005  001CBC  0100               	movlb	0	; () banked
  9006  001CBE  1788               	andwf	___fttol@f1& (0+255),f,b
  9007  001CC0  0EFF               	movlw	255
  9008  001CC2  0100               	movlb	0	; () banked
  9009  001CC4  1789               	andwf	(___fttol@f1+1)& (0+255),f,b
  9010  001CC6  0E00               	movlw	0
  9011  001CC8  0100               	movlb	0	; () banked
  9012  001CCA  178A               	andwf	(___fttol@f1+2)& (0+255),f,b
  9013                           
  9014                           ; BSR set to: 0
  9015  001CCC  0100               	movlb	0	; () banked
  9016  001CCE  5188               	movf	___fttol@f1& (0+255),w,b
  9017  001CD0  0100               	movlb	0	; () banked
  9018  001CD2  6F92               	movwf	___fttol@lval& (0+255),b
  9019  001CD4  0100               	movlb	0	; () banked
  9020  001CD6  5189               	movf	(___fttol@f1+1)& (0+255),w,b
  9021  001CD8  0100               	movlb	0	; () banked
  9022  001CDA  6F93               	movwf	(___fttol@lval+1)& (0+255),b
  9023  001CDC  0100               	movlb	0	; () banked
  9024  001CDE  518A               	movf	(___fttol@f1+2)& (0+255),w,b
  9025  001CE0  0100               	movlb	0	; () banked
  9026  001CE2  6F94               	movwf	(___fttol@lval+2)& (0+255),b
  9027  001CE4  0100               	movlb	0	; () banked
  9028  001CE6  6B95               	clrf	(___fttol@lval+3)& (0+255),b
  9029                           
  9030                           ; BSR set to: 0
  9031  001CE8  0E8E               	movlw	142
  9032  001CEA  0100               	movlb	0	; () banked
  9033  001CEC  5F96               	subwf	___fttol@exp1& (0+255),f,b
  9034                           
  9035                           ; BSR set to: 0
  9036  001CEE  0100               	movlb	0	; () banked
  9037  001CF0  AF96               	btfss	___fttol@exp1& (0+255),7,b
  9038  001CF2  D013               	goto	l5068
  9039                           
  9040                           ; BSR set to: 0
  9041  001CF4  0100               	movlb	0	; () banked
  9042  001CF6  5196               	movf	___fttol@exp1& (0+255),w,b
  9043  001CF8  0A80               	xorlw	128
  9044  001CFA  0F8F               	addlw	143
  9045  001CFC  B0D8               	btfsc	status,0,c
  9046  001CFE  D003               	goto	l5064
  9047  001D00  D010               	goto	l5070
  9048                           
  9049                           ; BSR set to: 0
  9050                           
  9051                           ; BSR set to: 0
  9052  001D02  D042               	goto	l1288
  9053                           
  9054                           ; BSR set to: 0
  9055  001D04  D000               	goto	l5064
  9056  001D06                     l5064:
  9057                           
  9058                           ; BSR set to: 0
  9059  001D06  0100               	movlb	0	; () banked
  9060  001D08  90D8               	bcf	status,0,c
  9061  001D0A  3395               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9062  001D0C  3394               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9063  001D0E  3393               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9064  001D10  3392               	rrcf	___fttol@lval& (0+255),f,b
  9065                           
  9066                           ; BSR set to: 0
  9067  001D12  0100               	movlb	0	; () banked
  9068  001D14  3F96               	incfsz	___fttol@exp1& (0+255),f,b
  9069  001D16  D7F7               	goto	l5064
  9070                           
  9071                           ; BSR set to: 0
  9072  001D18  D01F               	goto	l5078
  9073  001D1A                     l5068:
  9074                           
  9075                           ; BSR set to: 0
  9076  001D1A  0E17               	movlw	23
  9077  001D1C  0100               	movlb	0	; () banked
  9078  001D1E  6596               	cpfsgt	___fttol@exp1& (0+255),b
  9079  001D20  D014               	goto	l5076
  9080  001D22                     l5070:
  9081                           
  9082                           ; BSR set to: 0
  9083  001D22  0E00               	movlw	0
  9084  001D24  0100               	movlb	0	; () banked
  9085  001D26  6F88               	movwf	?___fttol& (0+255),b
  9086  001D28  0E00               	movlw	0
  9087  001D2A  6F89               	movwf	(?___fttol+1)& (0+255),b
  9088  001D2C  0E00               	movlw	0
  9089  001D2E  6F8A               	movwf	(?___fttol+2)& (0+255),b
  9090  001D30  0E00               	movlw	0
  9091  001D32  6F8B               	movwf	(?___fttol+3)& (0+255),b
  9092                           
  9093                           ; BSR set to: 0
  9094  001D34  D029               	goto	l1288
  9095                           
  9096                           ; BSR set to: 0
  9097  001D36  D009               	goto	l5076
  9098  001D38                     l5074:
  9099                           
  9100                           ; BSR set to: 0
  9101  001D38  0100               	movlb	0	; () banked
  9102  001D3A  90D8               	bcf	status,0,c
  9103  001D3C  3792               	rlcf	___fttol@lval& (0+255),f,b
  9104  001D3E  3793               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9105  001D40  3794               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9106  001D42  3795               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9107  001D44  0100               	movlb	0	; () banked
  9108  001D46  0796               	decf	___fttol@exp1& (0+255),f,b
  9109  001D48  D000               	goto	l5076
  9110  001D4A                     l5076:
  9111                           
  9112                           ; BSR set to: 0
  9113  001D4A  0100               	movlb	0	; () banked
  9114  001D4C  5196               	movf	___fttol@exp1& (0+255),w,b
  9115  001D4E  0100               	movlb	0	; () banked
  9116  001D50  B4D8               	btfsc	status,2,c
  9117  001D52  D002               	goto	l5078
  9118  001D54  D7F1               	goto	l5074
  9119                           
  9120                           ; BSR set to: 0
  9121  001D56  D000               	goto	l5078
  9122  001D58                     l5078:
  9123                           
  9124                           ; BSR set to: 0
  9125  001D58  0100               	movlb	0	; () banked
  9126  001D5A  5191               	movf	___fttol@sign1& (0+255),w,b
  9127  001D5C  0100               	movlb	0	; () banked
  9128  001D5E  B4D8               	btfsc	status,2,c
  9129  001D60  D00A               	goto	l5082
  9130                           
  9131                           ; BSR set to: 0
  9132  001D62  0100               	movlb	0	; () banked
  9133  001D64  1F95               	comf	(___fttol@lval+3)& (0+255),f,b
  9134  001D66  1F94               	comf	(___fttol@lval+2)& (0+255),f,b
  9135  001D68  1F93               	comf	(___fttol@lval+1)& (0+255),f,b
  9136  001D6A  6D92               	negf	___fttol@lval& (0+255),b
  9137  001D6C  0E00               	movlw	0
  9138  001D6E  2393               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9139  001D70  2394               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9140  001D72  2395               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9141  001D74  D000               	goto	l5082
  9142  001D76                     l5082:
  9143                           
  9144                           ; BSR set to: 0
  9145  001D76  C092  F088         	movff	___fttol@lval,?___fttol
  9146  001D7A  C093  F089         	movff	___fttol@lval+1,?___fttol+1
  9147  001D7E  C094  F08A         	movff	___fttol@lval+2,?___fttol+2
  9148  001D82  C095  F08B         	movff	___fttol@lval+3,?___fttol+3
  9149  001D86  D000               	goto	l1288
  9150  001D88                     l1288:
  9151                           
  9152                           ; BSR set to: 0
  9153  001D88  0012               	return		;funcret
  9154  001D8A                     __end_of___fttol:
  9155                           	opt stack 0
  9156                           prodh	equ	0xFF4
  9157                           prodl	equ	0xFF3
  9158                           intcon	equ	0xFF2
  9159                           intcon2	equ	0xFF1
  9160                           postinc0	equ	0xFEE
  9161                           wreg	equ	0xFE8
  9162                           indf2	equ	0xFDF
  9163                           postinc2	equ	0xFDE
  9164                           postdec2	equ	0xFDD
  9165                           fsr2h	equ	0xFDA
  9166                           fsr2l	equ	0xFD9
  9167                           status	equ	0xFD8
  9168                           
  9169 ;; *************** function ___ftge *****************
  9170 ;; Defined at:
  9171 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  ff1             3   14[BANK0 ] float 
  9174 ;;  ff2             3   17[BANK0 ] float 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;		None               void
  9179 ;; Registers used:
  9180 ;;		wreg, status,2, status,0
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9186 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;Total ram usage:        9 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:    7
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_pow
  9197 ;;		_exp
  9198 ;;		_floor
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text76
  9203  002546                     __ptext76:
  9204                           	opt stack 0
  9205  002546                     ___ftge:
  9206                           	opt stack 19
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;incstack = 0
  9210  002546  0100               	movlb	0	; () banked
  9211  002548  AF70               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9212  00254A  D01E               	goto	l5026
  9213                           
  9214                           ; BSR set to: 0
  9215  00254C  C06E  F074         	movff	___ftge@ff1,??___ftge
  9216  002550  C06F  F075         	movff	___ftge@ff1+1,??___ftge+1
  9217  002554  C070  F076         	movff	___ftge@ff1+2,??___ftge+2
  9218  002558  0100               	movlb	0	; () banked
  9219  00255A  1F74               	comf	??___ftge& (0+255),f,b
  9220  00255C  1F75               	comf	(??___ftge+1)& (0+255),f,b
  9221  00255E  1F76               	comf	(??___ftge+2)& (0+255),f,b
  9222  002560  2B74               	incf	??___ftge& (0+255),f,b
  9223  002562  0E00               	movlw	0
  9224  002564  2375               	addwfc	(??___ftge+1)& (0+255),f,b
  9225  002566  2376               	addwfc	(??___ftge+2)& (0+255),f,b
  9226  002568  0E00               	movlw	0
  9227  00256A  0100               	movlb	0	; () banked
  9228  00256C  2574               	addwf	??___ftge& (0+255),w,b
  9229  00256E  0100               	movlb	0	; () banked
  9230  002570  6F6E               	movwf	___ftge@ff1& (0+255),b
  9231  002572  0E00               	movlw	0
  9232  002574  0100               	movlb	0	; () banked
  9233  002576  2175               	addwfc	(??___ftge+1)& (0+255),w,b
  9234  002578  0100               	movlb	0	; () banked
  9235  00257A  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  9236  00257C  0E80               	movlw	128
  9237  00257E  0100               	movlb	0	; () banked
  9238  002580  2176               	addwfc	(??___ftge+2)& (0+255),w,b
  9239  002582  0100               	movlb	0	; () banked
  9240  002584  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  9241  002586  D000               	goto	l5026
  9242  002588                     l5026:
  9243                           
  9244                           ; BSR set to: 0
  9245  002588  0100               	movlb	0	; () banked
  9246  00258A  AF73               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9247  00258C  D01E               	goto	l5030
  9248                           
  9249                           ; BSR set to: 0
  9250  00258E  C071  F074         	movff	___ftge@ff2,??___ftge
  9251  002592  C072  F075         	movff	___ftge@ff2+1,??___ftge+1
  9252  002596  C073  F076         	movff	___ftge@ff2+2,??___ftge+2
  9253  00259A  0100               	movlb	0	; () banked
  9254  00259C  1F74               	comf	??___ftge& (0+255),f,b
  9255  00259E  1F75               	comf	(??___ftge+1)& (0+255),f,b
  9256  0025A0  1F76               	comf	(??___ftge+2)& (0+255),f,b
  9257  0025A2  2B74               	incf	??___ftge& (0+255),f,b
  9258  0025A4  0E00               	movlw	0
  9259  0025A6  2375               	addwfc	(??___ftge+1)& (0+255),f,b
  9260  0025A8  2376               	addwfc	(??___ftge+2)& (0+255),f,b
  9261  0025AA  0E00               	movlw	0
  9262  0025AC  0100               	movlb	0	; () banked
  9263  0025AE  2574               	addwf	??___ftge& (0+255),w,b
  9264  0025B0  0100               	movlb	0	; () banked
  9265  0025B2  6F71               	movwf	___ftge@ff2& (0+255),b
  9266  0025B4  0E00               	movlw	0
  9267  0025B6  0100               	movlb	0	; () banked
  9268  0025B8  2175               	addwfc	(??___ftge+1)& (0+255),w,b
  9269  0025BA  0100               	movlb	0	; () banked
  9270  0025BC  6F72               	movwf	(___ftge@ff2+1)& (0+255),b
  9271  0025BE  0E80               	movlw	128
  9272  0025C0  0100               	movlb	0	; () banked
  9273  0025C2  2176               	addwfc	(??___ftge+2)& (0+255),w,b
  9274  0025C4  0100               	movlb	0	; () banked
  9275  0025C6  6F73               	movwf	(___ftge@ff2+2)& (0+255),b
  9276  0025C8  D000               	goto	l5030
  9277  0025CA                     l5030:
  9278                           
  9279                           ; BSR set to: 0
  9280  0025CA  0E00               	movlw	0
  9281  0025CC  0100               	movlb	0	; () banked
  9282  0025CE  1B6E               	xorwf	___ftge@ff1& (0+255),f,b
  9283  0025D0  0E00               	movlw	0
  9284  0025D2  0100               	movlb	0	; () banked
  9285  0025D4  1B6F               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9286  0025D6  0E80               	movlw	128
  9287  0025D8  0100               	movlb	0	; () banked
  9288  0025DA  1B70               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9289                           
  9290                           ; BSR set to: 0
  9291  0025DC  0E00               	movlw	0
  9292  0025DE  0100               	movlb	0	; () banked
  9293  0025E0  1B71               	xorwf	___ftge@ff2& (0+255),f,b
  9294  0025E2  0E00               	movlw	0
  9295  0025E4  0100               	movlb	0	; () banked
  9296  0025E6  1B72               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9297  0025E8  0E80               	movlw	128
  9298  0025EA  0100               	movlb	0	; () banked
  9299  0025EC  1B73               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9300  0025EE  0100               	movlb	0	; () banked
  9301  0025F0  5171               	movf	___ftge@ff2& (0+255),w,b
  9302  0025F2  0100               	movlb	0	; () banked
  9303  0025F4  5D6E               	subwf	___ftge@ff1& (0+255),w,b
  9304  0025F6  0100               	movlb	0	; () banked
  9305  0025F8  5172               	movf	(___ftge@ff2+1)& (0+255),w,b
  9306  0025FA  0100               	movlb	0	; () banked
  9307  0025FC  596F               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9308  0025FE  0100               	movlb	0	; () banked
  9309  002600  5173               	movf	(___ftge@ff2+2)& (0+255),w,b
  9310  002602  0100               	movlb	0	; () banked
  9311  002604  5970               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9312  002606  B0D8               	btfsc	status,0,c
  9313  002608  D002               	goto	l5036
  9314                           
  9315                           ; BSR set to: 0
  9316  00260A  90D8               	bcf	status,0,c
  9317  00260C  D002               	goto	l1261
  9318  00260E                     l5036:
  9319                           
  9320                           ; BSR set to: 0
  9321  00260E  80D8               	bsf	status,0,c
  9322                           
  9323                           ; BSR set to: 0
  9324  002610  D000               	goto	l1261
  9325  002612                     l1261:
  9326                           
  9327                           ; BSR set to: 0
  9328  002612  0012               	return		;funcret
  9329  002614                     __end_of___ftge:
  9330                           	opt stack 0
  9331                           prodh	equ	0xFF4
  9332                           prodl	equ	0xFF3
  9333                           intcon	equ	0xFF2
  9334                           intcon2	equ	0xFF1
  9335                           postinc0	equ	0xFEE
  9336                           wreg	equ	0xFE8
  9337                           indf2	equ	0xFDF
  9338                           postinc2	equ	0xFDE
  9339                           postdec2	equ	0xFDD
  9340                           fsr2h	equ	0xFDA
  9341                           fsr2l	equ	0xFD9
  9342                           status	equ	0xFD8
  9343                           
  9344 ;; *************** function ___altoft *****************
  9345 ;; Defined at:
  9346 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;  c               4   55[BANK0 ] long 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  sign            1   64[BANK0 ] unsigned char 
  9351 ;;  exp             1   63[BANK0 ] unsigned char 
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  3   55[BANK0 ] float 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;Total ram usage:       10 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    8
  9368 ;; This function calls:
  9369 ;;		___ftpack
  9370 ;; This function is called by:
  9371 ;;		_floor
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text77
  9376  002A28                     __ptext77:
  9377                           	opt stack 0
  9378  002A28                     ___altoft:
  9379                           	opt stack 18
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;incstack = 0
  9383  002A28  0E00               	movlw	0
  9384  002A2A  0100               	movlb	0	; () banked
  9385  002A2C  6FA0               	movwf	___altoft@sign& (0+255),b
  9386  002A2E  0E8E               	movlw	142
  9387  002A30  0100               	movlb	0	; () banked
  9388  002A32  6F9F               	movwf	___altoft@exp& (0+255),b
  9389                           
  9390                           ; BSR set to: 0
  9391  002A34  0100               	movlb	0	; () banked
  9392  002A36  AF9A               	btfss	(___altoft@c+3)& (0+255),7,b
  9393  002A38  D016               	goto	l4862
  9394                           
  9395                           ; BSR set to: 0
  9396  002A3A  0100               	movlb	0	; () banked
  9397  002A3C  1F9A               	comf	(___altoft@c+3)& (0+255),f,b
  9398  002A3E  1F99               	comf	(___altoft@c+2)& (0+255),f,b
  9399  002A40  1F98               	comf	(___altoft@c+1)& (0+255),f,b
  9400  002A42  6D97               	negf	___altoft@c& (0+255),b
  9401  002A44  0E00               	movlw	0
  9402  002A46  2398               	addwfc	(___altoft@c+1)& (0+255),f,b
  9403  002A48  2399               	addwfc	(___altoft@c+2)& (0+255),f,b
  9404  002A4A  239A               	addwfc	(___altoft@c+3)& (0+255),f,b
  9405                           
  9406                           ; BSR set to: 0
  9407  002A4C  0E01               	movlw	1
  9408  002A4E  0100               	movlb	0	; () banked
  9409  002A50  6FA0               	movwf	___altoft@sign& (0+255),b
  9410                           
  9411                           ; BSR set to: 0
  9412  002A52  D009               	goto	l4862
  9413  002A54                     l4860:
  9414                           
  9415                           ; BSR set to: 0
  9416  002A54  0100               	movlb	0	; () banked
  9417  002A56  90D8               	bcf	status,0,c
  9418  002A58  339A               	rrcf	(___altoft@c+3)& (0+255),f,b
  9419  002A5A  3399               	rrcf	(___altoft@c+2)& (0+255),f,b
  9420  002A5C  3398               	rrcf	(___altoft@c+1)& (0+255),f,b
  9421  002A5E  3397               	rrcf	___altoft@c& (0+255),f,b
  9422  002A60  0100               	movlb	0	; () banked
  9423  002A62  2B9F               	incf	___altoft@exp& (0+255),f,b
  9424  002A64  D000               	goto	l4862
  9425  002A66                     l4862:
  9426                           
  9427                           ; BSR set to: 0
  9428  002A66  0E00               	movlw	0
  9429  002A68  0100               	movlb	0	; () banked
  9430  002A6A  1597               	andwf	___altoft@c& (0+255),w,b
  9431  002A6C  0100               	movlb	0	; () banked
  9432  002A6E  6F9B               	movwf	??___altoft& (0+255),b
  9433  002A70  0E00               	movlw	0
  9434  002A72  0100               	movlb	0	; () banked
  9435  002A74  1598               	andwf	(___altoft@c+1)& (0+255),w,b
  9436  002A76  0100               	movlb	0	; () banked
  9437  002A78  6F9C               	movwf	(??___altoft+1)& (0+255),b
  9438  002A7A  0E00               	movlw	0
  9439  002A7C  0100               	movlb	0	; () banked
  9440  002A7E  1599               	andwf	(___altoft@c+2)& (0+255),w,b
  9441  002A80  0100               	movlb	0	; () banked
  9442  002A82  6F9D               	movwf	(??___altoft+2)& (0+255),b
  9443  002A84  0EFF               	movlw	255
  9444  002A86  0100               	movlb	0	; () banked
  9445  002A88  159A               	andwf	(___altoft@c+3)& (0+255),w,b
  9446  002A8A  0100               	movlb	0	; () banked
  9447  002A8C  6F9E               	movwf	(??___altoft+3)& (0+255),b
  9448  002A8E  0100               	movlb	0	; () banked
  9449  002A90  519B               	movf	??___altoft& (0+255),w,b
  9450  002A92  0100               	movlb	0	; () banked
  9451  002A94  119C               	iorwf	(??___altoft+1)& (0+255),w,b
  9452  002A96  0100               	movlb	0	; () banked
  9453  002A98  119D               	iorwf	(??___altoft+2)& (0+255),w,b
  9454  002A9A  0100               	movlb	0	; () banked
  9455  002A9C  119E               	iorwf	(??___altoft+3)& (0+255),w,b
  9456  002A9E  A4D8               	btfss	status,2,c
  9457  002AA0  D7D9               	goto	l4860
  9458                           
  9459                           ; BSR set to: 0
  9460                           
  9461                           ; BSR set to: 0
  9462  002AA2  C097  F06E         	movff	___altoft@c,___ftpack@arg
  9463  002AA6  C098  F06F         	movff	___altoft@c+1,___ftpack@arg+1
  9464  002AAA  C099  F070         	movff	___altoft@c+2,___ftpack@arg+2
  9465  002AAE  C09F  F071         	movff	___altoft@exp,___ftpack@exp
  9466  002AB2  C0A0  F072         	movff	___altoft@sign,___ftpack@sign
  9467  002AB6  ECC5  F00E         	call	___ftpack	;wreg free
  9468  002ABA  C06E  F097         	movff	?___ftpack,?___altoft
  9469  002ABE  C06F  F098         	movff	?___ftpack+1,?___altoft+1
  9470  002AC2  C070  F099         	movff	?___ftpack+2,?___altoft+2
  9471  002AC6  D000               	goto	l955
  9472  002AC8                     l955:
  9473  002AC8  0012               	return		;funcret
  9474  002ACA                     __end_of___altoft:
  9475                           	opt stack 0
  9476                           prodh	equ	0xFF4
  9477                           prodl	equ	0xFF3
  9478                           intcon	equ	0xFF2
  9479                           intcon2	equ	0xFF1
  9480                           postinc0	equ	0xFEE
  9481                           wreg	equ	0xFE8
  9482                           indf2	equ	0xFDF
  9483                           postinc2	equ	0xFDE
  9484                           postdec2	equ	0xFDD
  9485                           fsr2h	equ	0xFDA
  9486                           fsr2l	equ	0xFD9
  9487                           status	equ	0xFD8
  9488                           
  9489 ;; *************** function _eval_poly *****************
  9490 ;; Defined at:
  9491 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  x               3   52[BANK0 ] float 
  9494 ;;  d               2   55[BANK0 ] PTR const 
  9495 ;;		 -> log@coeff(27), exp@coeff(30), 
  9496 ;;  n               2   57[BANK0 ] int 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  res             3   61[BANK0 ] int 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  3   52[BANK0 ] int 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9508 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;Total ram usage:       12 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    9
  9515 ;; This function calls:
  9516 ;;		___ftadd
  9517 ;;		___ftmul
  9518 ;;		___wmul
  9519 ;; This function is called by:
  9520 ;;		_exp
  9521 ;;		_log
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text78
  9526  0020BC                     __ptext78:
  9527                           	opt stack 0
  9528  0020BC                     _eval_poly:
  9529                           	opt stack 18
  9530                           
  9531                           ;incstack = 0
  9532  0020BC  C099  F06E         	movff	eval_poly@n,___wmul@multiplier
  9533  0020C0  C09A  F06F         	movff	eval_poly@n+1,___wmul@multiplier+1
  9534  0020C4  0E00               	movlw	0
  9535  0020C6  0100               	movlb	0	; () banked
  9536  0020C8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9537  0020CA  0E03               	movlw	3
  9538  0020CC  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9539  0020CE  EC46  F019         	call	___wmul	;wreg free
  9540  0020D2  C097  F09B         	movff	eval_poly@d,??_eval_poly
  9541  0020D6  C098  F09C         	movff	eval_poly@d+1,??_eval_poly+1
  9542  0020DA  0100               	movlb	0	; () banked
  9543  0020DC  516E               	movf	?___wmul& (0+255),w,b
  9544  0020DE  0100               	movlb	0	; () banked
  9545  0020E0  279B               	addwf	??_eval_poly& (0+255),f,b
  9546  0020E2  0100               	movlb	0	; () banked
  9547  0020E4  516F               	movf	(?___wmul+1)& (0+255),w,b
  9548  0020E6  0100               	movlb	0	; () banked
  9549  0020E8  239C               	addwfc	(??_eval_poly+1)& (0+255),f,b
  9550  0020EA  C09B  FFF6         	movff	??_eval_poly,tblptrl
  9551  0020EE  C09C  FFF7         	movff	??_eval_poly+1,tblptrh
  9552  0020F2                     	if	0	;tblptru may be non-zero
  9553  0020F2                     	endif
  9554  0020F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9555  0020F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9556  0020F4  6EF8               	movwf	tblptru,c
  9557  0020F6                     	endif
  9558  0020F6  0009               	tblrd		*+
  9559  0020F8  CFF5 F09D          	movff	tablat,eval_poly@res
  9560  0020FC  0009               	tblrd		*+
  9561  0020FE  CFF5 F09E          	movff	tablat,eval_poly@res+1
  9562  002102  000A               	tblrd		*-
  9563  002104  CFF5 F09F          	movff	tablat,eval_poly@res+2
  9564  002108  D047               	goto	l5346
  9565  00210A                     l5344:
  9566                           
  9567                           ; BSR set to: 0
  9568  00210A  C09D  F07C         	movff	eval_poly@res,___ftmul@f2
  9569  00210E  C09E  F07D         	movff	eval_poly@res+1,___ftmul@f2+1
  9570  002112  C09F  F07E         	movff	eval_poly@res+2,___ftmul@f2+2
  9571  002116  C094  F079         	movff	eval_poly@x,___ftmul@f1
  9572  00211A  C095  F07A         	movff	eval_poly@x+1,___ftmul@f1+1
  9573  00211E  C096  F07B         	movff	eval_poly@x+2,___ftmul@f1+2
  9574  002122  EC3D  F00C         	call	___ftmul	;wreg free
  9575  002126  C079  F088         	movff	?___ftmul,___ftadd@f1
  9576  00212A  C07A  F089         	movff	?___ftmul+1,___ftadd@f1+1
  9577  00212E  C07B  F08A         	movff	?___ftmul+2,___ftadd@f1+2
  9578  002132  0E00               	movlw	0
  9579  002134  0100               	movlb	0	; () banked
  9580  002136  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9581  002138  0E03               	movlw	3
  9582  00213A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  9583  00213C  0100               	movlb	0	; () banked
  9584  00213E  0799               	decf	eval_poly@n& (0+255),f,b
  9585  002140  A0D8               	btfss	status,0,c
  9586  002142  079A               	decf	(eval_poly@n+1)& (0+255),f,b
  9587  002144  C099  F06E         	movff	eval_poly@n,___wmul@multiplier
  9588  002148  C09A  F06F         	movff	eval_poly@n+1,___wmul@multiplier+1
  9589  00214C  EC46  F019         	call	___wmul	;wreg free
  9590  002150  C097  F09B         	movff	eval_poly@d,??_eval_poly
  9591  002154  C098  F09C         	movff	eval_poly@d+1,??_eval_poly+1
  9592  002158  0100               	movlb	0	; () banked
  9593  00215A  516E               	movf	?___wmul& (0+255),w,b
  9594  00215C  0100               	movlb	0	; () banked
  9595  00215E  279B               	addwf	??_eval_poly& (0+255),f,b
  9596  002160  0100               	movlb	0	; () banked
  9597  002162  516F               	movf	(?___wmul+1)& (0+255),w,b
  9598  002164  0100               	movlb	0	; () banked
  9599  002166  239C               	addwfc	(??_eval_poly+1)& (0+255),f,b
  9600  002168  C09B  FFF6         	movff	??_eval_poly,tblptrl
  9601  00216C  C09C  FFF7         	movff	??_eval_poly+1,tblptrh
  9602  002170                     	if	0	;tblptru may be non-zero
  9603  002170                     	endif
  9604  002170                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9605  002170  0E00               	movlw	low (__mediumconst shr (0+16))
  9606  002172  6EF8               	movwf	tblptru,c
  9607  002174                     	endif
  9608  002174  0009               	tblrd		*+
  9609  002176  CFF5 F08B          	movff	tablat,___ftadd@f2
  9610  00217A  0009               	tblrd		*+
  9611  00217C  CFF5 F08C          	movff	tablat,___ftadd@f2+1
  9612  002180  000A               	tblrd		*-
  9613  002182  CFF5 F08D          	movff	tablat,___ftadd@f2+2
  9614  002186  EC1E  F008         	call	___ftadd	;wreg free
  9615  00218A  C088  F09D         	movff	?___ftadd,eval_poly@res
  9616  00218E  C089  F09E         	movff	?___ftadd+1,eval_poly@res+1
  9617  002192  C08A  F09F         	movff	?___ftadd+2,eval_poly@res+2
  9618  002196  D000               	goto	l5346
  9619  002198                     l5346:
  9620  002198  0100               	movlb	0	; () banked
  9621  00219A  5199               	movf	eval_poly@n& (0+255),w,b
  9622  00219C  0100               	movlb	0	; () banked
  9623  00219E  119A               	iorwf	(eval_poly@n+1)& (0+255),w,b
  9624  0021A0  A4D8               	btfss	status,2,c
  9625  0021A2  D7B3               	goto	l5344
  9626                           
  9627                           ; BSR set to: 0
  9628  0021A4  C09D  F094         	movff	eval_poly@res,?_eval_poly
  9629  0021A8  C09E  F095         	movff	eval_poly@res+1,?_eval_poly+1
  9630  0021AC  C09F  F096         	movff	eval_poly@res+2,?_eval_poly+2
  9631                           
  9632                           ; BSR set to: 0
  9633  0021B0  0012               	return		;funcret
  9634  0021B2                     __end_of_eval_poly:
  9635                           	opt stack 0
  9636                           tblptru	equ	0xFF8
  9637                           tblptrh	equ	0xFF7
  9638                           tblptrl	equ	0xFF6
  9639                           tablat	equ	0xFF5
  9640                           prodh	equ	0xFF4
  9641                           prodl	equ	0xFF3
  9642                           intcon	equ	0xFF2
  9643                           intcon2	equ	0xFF1
  9644                           postinc0	equ	0xFEE
  9645                           wreg	equ	0xFE8
  9646                           indf2	equ	0xFDF
  9647                           postinc2	equ	0xFDE
  9648                           postdec2	equ	0xFDD
  9649                           fsr2h	equ	0xFDA
  9650                           fsr2l	equ	0xFD9
  9651                           status	equ	0xFD8
  9652                           
  9653 ;; *************** function ___wmul *****************
  9654 ;; Defined at:
  9655 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  multiplier      2   14[BANK0 ] unsigned int 
  9658 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  product         2   18[BANK0 ] unsigned int 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  2   14[BANK0 ] unsigned int 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2, status,0, prodl, prodh
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9670 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;Total ram usage:        6 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; Hardware stack levels required when called:    7
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_main
  9681 ;;		_eval_poly
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text79
  9686  00328C                     __ptext79:
  9687                           	opt stack 0
  9688  00328C                     ___wmul:
  9689                           	opt stack 23
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;incstack = 0
  9693  00328C  0100               	movlb	0	; () banked
  9694  00328E  516E               	movf	___wmul@multiplier& (0+255),w,b
  9695  003290  0100               	movlb	0	; () banked
  9696  003292  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9697  003294  CFF3 F072          	movff	prodl,___wmul@product
  9698  003298  CFF4 F073          	movff	prodh,___wmul@product+1
  9699  00329C  0100               	movlb	0	; () banked
  9700  00329E  516E               	movf	___wmul@multiplier& (0+255),w,b
  9701  0032A0  0100               	movlb	0	; () banked
  9702  0032A2  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9703  0032A4  50F3               	movf	prodl,w,c
  9704  0032A6  0100               	movlb	0	; () banked
  9705  0032A8  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9706  0032AA  0100               	movlb	0	; () banked
  9707  0032AC  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9708  0032AE  0100               	movlb	0	; () banked
  9709  0032B0  0370               	mulwf	___wmul@multiplicand& (0+255),b
  9710  0032B2  50F3               	movf	prodl,w,c
  9711  0032B4  0100               	movlb	0	; () banked
  9712  0032B6  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  9713                           
  9714                           ; BSR set to: 0
  9715  0032B8  C072  F06E         	movff	___wmul@product,?___wmul
  9716  0032BC  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  9717  0032C0  D000               	goto	l858
  9718  0032C2                     l858:
  9719                           
  9720                           ; BSR set to: 0
  9721  0032C2  0012               	return		;funcret
  9722  0032C4                     __end_of___wmul:
  9723                           	opt stack 0
  9724                           tblptru	equ	0xFF8
  9725                           tblptrh	equ	0xFF7
  9726                           tblptrl	equ	0xFF6
  9727                           tablat	equ	0xFF5
  9728                           prodh	equ	0xFF4
  9729                           prodl	equ	0xFF3
  9730                           intcon	equ	0xFF2
  9731                           intcon2	equ	0xFF1
  9732                           postinc0	equ	0xFEE
  9733                           wreg	equ	0xFE8
  9734                           indf2	equ	0xFDF
  9735                           postinc2	equ	0xFDE
  9736                           postdec2	equ	0xFDD
  9737                           fsr2h	equ	0xFDA
  9738                           fsr2l	equ	0xFD9
  9739                           status	equ	0xFD8
  9740                           
  9741 ;; *************** function ___ftmul *****************
  9742 ;; Defined at:
  9743 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  f1              3   25[BANK0 ] float 
  9746 ;;  f2              3   28[BANK0 ] float 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;  f3_as_produc    3   35[BANK0 ] unsigned um
  9749 ;;  sign            1   39[BANK0 ] unsigned char 
  9750 ;;  cntr            1   38[BANK0 ] unsigned char 
  9751 ;;  exp             1   34[BANK0 ] unsigned char 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  3   25[BANK0 ] float 
  9754 ;; Registers used:
  9755 ;;		wreg, status,2, status,0, cstack
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9761 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9762 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9764 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;Total ram usage:       15 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:    8
  9768 ;; This function calls:
  9769 ;;		___ftpack
  9770 ;; This function is called by:
  9771 ;;		_CalculateSensorSums
  9772 ;;		_pow
  9773 ;;		_exp
  9774 ;;		_log
  9775 ;;		_eval_poly
  9776 ;;		_ConvertDistanceCM
  9777 ;;		_ConvertDistanceIN
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           	psect	text80
  9782  00187A                     __ptext80:
  9783                           	opt stack 0
  9784  00187A                     ___ftmul:
  9785                           	opt stack 18
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;incstack = 0
  9789  00187A  C07B  F07F         	movff	___ftmul@f1+2,??___ftmul
  9790  00187E  0100               	movlb	0	; () banked
  9791  001880  6B80               	clrf	(??___ftmul+1)& (0+255),b
  9792  001882  6B81               	clrf	(??___ftmul+2)& (0+255),b
  9793  001884  0100               	movlb	0	; () banked
  9794  001886  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9795  001888  0100               	movlb	0	; () banked
  9796  00188A  377F               	rlcf	??___ftmul& (0+255),f,b
  9797  00188C  E301               	bnc	u4221
  9798  00188E  8180               	bsf	(??___ftmul+1)& (0+255),0,b
  9799  001890                     u4221:
  9800  001890  0100               	movlb	0	; () banked
  9801  001892  517F               	movf	??___ftmul& (0+255),w,b
  9802  001894  0100               	movlb	0	; () banked
  9803  001896  6F82               	movwf	___ftmul@exp& (0+255),b
  9804  001898  0100               	movlb	0	; () banked
  9805  00189A  5182               	movf	___ftmul@exp& (0+255),w,b
  9806  00189C  A4D8               	btfss	status,2,c
  9807  00189E  D002               	goto	l4944
  9808  0018A0  D014               	goto	l4946
  9809                           
  9810                           ; BSR set to: 0
  9811                           
  9812                           ; BSR set to: 0
  9813  0018A2  D098               	goto	l1267
  9814  0018A4                     l4944:
  9815                           
  9816                           ; BSR set to: 0
  9817  0018A4  C07E  F07F         	movff	___ftmul@f2+2,??___ftmul
  9818  0018A8  0100               	movlb	0	; () banked
  9819  0018AA  6B80               	clrf	(??___ftmul+1)& (0+255),b
  9820  0018AC  6B81               	clrf	(??___ftmul+2)& (0+255),b
  9821  0018AE  0100               	movlb	0	; () banked
  9822  0018B0  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9823  0018B2  0100               	movlb	0	; () banked
  9824  0018B4  377F               	rlcf	??___ftmul& (0+255),f,b
  9825  0018B6  E301               	bnc	u4241
  9826  0018B8  8180               	bsf	(??___ftmul+1)& (0+255),0,b
  9827  0018BA                     u4241:
  9828  0018BA  0100               	movlb	0	; () banked
  9829  0018BC  517F               	movf	??___ftmul& (0+255),w,b
  9830  0018BE  0100               	movlb	0	; () banked
  9831  0018C0  6F87               	movwf	___ftmul@sign& (0+255),b
  9832  0018C2  0100               	movlb	0	; () banked
  9833  0018C4  5187               	movf	___ftmul@sign& (0+255),w,b
  9834  0018C6  A4D8               	btfss	status,2,c
  9835  0018C8  D00A               	goto	l4950
  9836  0018CA                     l4946:
  9837                           
  9838                           ; BSR set to: 0
  9839  0018CA  0E00               	movlw	0
  9840  0018CC  0100               	movlb	0	; () banked
  9841  0018CE  6F79               	movwf	?___ftmul& (0+255),b
  9842  0018D0  0E00               	movlw	0
  9843  0018D2  0100               	movlb	0	; () banked
  9844  0018D4  6F7A               	movwf	(?___ftmul+1)& (0+255),b
  9845  0018D6  0E00               	movlw	0
  9846  0018D8  0100               	movlb	0	; () banked
  9847  0018DA  6F7B               	movwf	(?___ftmul+2)& (0+255),b
  9848                           
  9849                           ; BSR set to: 0
  9850  0018DC  D07B               	goto	l1267
  9851  0018DE                     l4950:
  9852                           
  9853                           ; BSR set to: 0
  9854  0018DE  0100               	movlb	0	; () banked
  9855  0018E0  5187               	movf	___ftmul@sign& (0+255),w,b
  9856  0018E2  0F7B               	addlw	123
  9857  0018E4  0100               	movlb	0	; () banked
  9858  0018E6  2782               	addwf	___ftmul@exp& (0+255),f,b
  9859                           
  9860                           ; BSR set to: 0
  9861  0018E8  C07B  F087         	movff	___ftmul@f1+2,___ftmul@sign
  9862  0018EC  0100               	movlb	0	; () banked
  9863  0018EE  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  9864  0018F0  0100               	movlb	0	; () banked
  9865  0018F2  1B87               	xorwf	___ftmul@sign& (0+255),f,b
  9866  0018F4  0E80               	movlw	128
  9867  0018F6  0100               	movlb	0	; () banked
  9868  0018F8  1787               	andwf	___ftmul@sign& (0+255),f,b
  9869                           
  9870                           ; BSR set to: 0
  9871  0018FA  0100               	movlb	0	; () banked
  9872  0018FC  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9873                           
  9874                           ; BSR set to: 0
  9875  0018FE  0100               	movlb	0	; () banked
  9876  001900  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9877                           
  9878                           ; BSR set to: 0
  9879  001902  0EFF               	movlw	255
  9880  001904  0100               	movlb	0	; () banked
  9881  001906  177C               	andwf	___ftmul@f2& (0+255),f,b
  9882  001908  0EFF               	movlw	255
  9883  00190A  0100               	movlb	0	; () banked
  9884  00190C  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9885  00190E  0E00               	movlw	0
  9886  001910  0100               	movlb	0	; () banked
  9887  001912  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9888                           
  9889                           ; BSR set to: 0
  9890  001914  0E00               	movlw	0
  9891  001916  0100               	movlb	0	; () banked
  9892  001918  6F83               	movwf	___ftmul@f3_as_product& (0+255),b
  9893  00191A  0E00               	movlw	0
  9894  00191C  0100               	movlb	0	; () banked
  9895  00191E  6F84               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9896  001920  0E00               	movlw	0
  9897  001922  0100               	movlb	0	; () banked
  9898  001924  6F85               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9899                           
  9900                           ; BSR set to: 0
  9901  001926  0E07               	movlw	7
  9902  001928  0100               	movlb	0	; () banked
  9903  00192A  6F86               	movwf	___ftmul@cntr& (0+255),b
  9904  00192C  D000               	goto	l4964
  9905  00192E                     l4964:
  9906                           
  9907                           ; BSR set to: 0
  9908  00192E  0100               	movlb	0	; () banked
  9909  001930  A179               	btfss	___ftmul@f1& (0+255),0,b
  9910  001932  D00D               	goto	l4968
  9911                           
  9912                           ; BSR set to: 0
  9913  001934  0100               	movlb	0	; () banked
  9914  001936  517C               	movf	___ftmul@f2& (0+255),w,b
  9915  001938  0100               	movlb	0	; () banked
  9916  00193A  2783               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9917  00193C  0100               	movlb	0	; () banked
  9918  00193E  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  9919  001940  0100               	movlb	0	; () banked
  9920  001942  2384               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9921  001944  0100               	movlb	0	; () banked
  9922  001946  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  9923  001948  0100               	movlb	0	; () banked
  9924  00194A  2385               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9925  00194C  D000               	goto	l4968
  9926  00194E                     l4968:
  9927                           
  9928                           ; BSR set to: 0
  9929  00194E  0100               	movlb	0	; () banked
  9930  001950  90D8               	bcf	status,0,c
  9931  001952  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9932  001954  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9933  001956  3379               	rrcf	___ftmul@f1& (0+255),f,b
  9934  001958  0100               	movlb	0	; () banked
  9935  00195A  90D8               	bcf	status,0,c
  9936  00195C  377C               	rlcf	___ftmul@f2& (0+255),f,b
  9937  00195E  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9938  001960  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9939                           
  9940                           ; BSR set to: 0
  9941  001962  0100               	movlb	0	; () banked
  9942  001964  2F86               	decfsz	___ftmul@cntr& (0+255),f,b
  9943  001966  D7E3               	goto	l4964
  9944  001968  D000               	goto	l4972
  9945  00196A                     l4972:
  9946                           
  9947                           ; BSR set to: 0
  9948  00196A  0E09               	movlw	9
  9949  00196C  0100               	movlb	0	; () banked
  9950  00196E  6F86               	movwf	___ftmul@cntr& (0+255),b
  9951  001970  D000               	goto	l4974
  9952  001972                     l4974:
  9953                           
  9954                           ; BSR set to: 0
  9955  001972  0100               	movlb	0	; () banked
  9956  001974  A179               	btfss	___ftmul@f1& (0+255),0,b
  9957  001976  D00D               	goto	l4978
  9958                           
  9959                           ; BSR set to: 0
  9960  001978  0100               	movlb	0	; () banked
  9961  00197A  517C               	movf	___ftmul@f2& (0+255),w,b
  9962  00197C  0100               	movlb	0	; () banked
  9963  00197E  2783               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9964  001980  0100               	movlb	0	; () banked
  9965  001982  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
  9966  001984  0100               	movlb	0	; () banked
  9967  001986  2384               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9968  001988  0100               	movlb	0	; () banked
  9969  00198A  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
  9970  00198C  0100               	movlb	0	; () banked
  9971  00198E  2385               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9972  001990  D000               	goto	l4978
  9973  001992                     l4978:
  9974                           
  9975                           ; BSR set to: 0
  9976  001992  0100               	movlb	0	; () banked
  9977  001994  90D8               	bcf	status,0,c
  9978  001996  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9979  001998  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9980  00199A  3379               	rrcf	___ftmul@f1& (0+255),f,b
  9981  00199C  0100               	movlb	0	; () banked
  9982  00199E  90D8               	bcf	status,0,c
  9983  0019A0  3385               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9984  0019A2  3384               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9985  0019A4  3383               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9986                           
  9987                           ; BSR set to: 0
  9988  0019A6  0100               	movlb	0	; () banked
  9989  0019A8  2F86               	decfsz	___ftmul@cntr& (0+255),f,b
  9990  0019AA  D7E3               	goto	l4974
  9991  0019AC  D000               	goto	l4982
  9992  0019AE                     l4982:
  9993                           
  9994                           ; BSR set to: 0
  9995  0019AE  C083  F06E         	movff	___ftmul@f3_as_product,___ftpack@arg
  9996  0019B2  C084  F06F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9997  0019B6  C085  F070         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9998  0019BA  C082  F071         	movff	___ftmul@exp,___ftpack@exp
  9999  0019BE  C087  F072         	movff	___ftmul@sign,___ftpack@sign
 10000  0019C2  ECC5  F00E         	call	___ftpack	;wreg free
 10001  0019C6  C06E  F079         	movff	?___ftpack,?___ftmul
 10002  0019CA  C06F  F07A         	movff	?___ftpack+1,?___ftmul+1
 10003  0019CE  C070  F07B         	movff	?___ftpack+2,?___ftmul+2
 10004  0019D2  D000               	goto	l1267
 10005  0019D4                     l1267:
 10006  0019D4  0012               	return		;funcret
 10007  0019D6                     __end_of___ftmul:
 10008                           	opt stack 0
 10009                           tblptru	equ	0xFF8
 10010                           tblptrh	equ	0xFF7
 10011                           tblptrl	equ	0xFF6
 10012                           tablat	equ	0xFF5
 10013                           prodh	equ	0xFF4
 10014                           prodl	equ	0xFF3
 10015                           intcon	equ	0xFF2
 10016                           intcon2	equ	0xFF1
 10017                           postinc0	equ	0xFEE
 10018                           wreg	equ	0xFE8
 10019                           indf2	equ	0xFDF
 10020                           postinc2	equ	0xFDE
 10021                           postdec2	equ	0xFDD
 10022                           fsr2h	equ	0xFDA
 10023                           fsr2l	equ	0xFD9
 10024                           status	equ	0xFD8
 10025                           
 10026 ;; *************** function ___ftsub *****************
 10027 ;; Defined at:
 10028 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  f1              3   52[BANK0 ] float 
 10031 ;;  f2              3   55[BANK0 ] float 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  3   52[BANK0 ] float 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10043 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;Total ram usage:        6 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:    9
 10050 ;; This function calls:
 10051 ;;		___ftadd
 10052 ;; This function is called by:
 10053 ;;		_exp
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text81
 10058  002FB8                     __ptext81:
 10059                           	opt stack 0
 10060  002FB8                     ___ftsub:
 10061                           	opt stack 18
 10062                           
 10063                           ;incstack = 0
 10064  002FB8  0100               	movlb	0	; () banked
 10065  002FBA  5197               	movf	___ftsub@f2& (0+255),w,b
 10066  002FBC  0100               	movlb	0	; () banked
 10067  002FBE  1198               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 10068  002FC0  0100               	movlb	0	; () banked
 10069  002FC2  1199               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 10070  002FC4  B4D8               	btfsc	status,2,c
 10071  002FC6  D00A               	goto	l5298
 10072                           
 10073                           ; BSR set to: 0
 10074  002FC8  0E00               	movlw	0
 10075  002FCA  0100               	movlb	0	; () banked
 10076  002FCC  1B97               	xorwf	___ftsub@f2& (0+255),f,b
 10077  002FCE  0E00               	movlw	0
 10078  002FD0  0100               	movlb	0	; () banked
 10079  002FD2  1B98               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10080  002FD4  0E80               	movlw	128
 10081  002FD6  0100               	movlb	0	; () banked
 10082  002FD8  1B99               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10083  002FDA  D000               	goto	l5298
 10084  002FDC                     l5298:
 10085                           
 10086                           ; BSR set to: 0
 10087  002FDC  C094  F088         	movff	___ftsub@f1,___ftadd@f1
 10088  002FE0  C095  F089         	movff	___ftsub@f1+1,___ftadd@f1+1
 10089  002FE4  C096  F08A         	movff	___ftsub@f1+2,___ftadd@f1+2
 10090  002FE8  C097  F08B         	movff	___ftsub@f2,___ftadd@f2
 10091  002FEC  C098  F08C         	movff	___ftsub@f2+1,___ftadd@f2+1
 10092  002FF0  C099  F08D         	movff	___ftsub@f2+2,___ftadd@f2+2
 10093  002FF4  EC1E  F008         	call	___ftadd	;wreg free
 10094  002FF8  C088  F094         	movff	?___ftadd,?___ftsub
 10095  002FFC  C089  F095         	movff	?___ftadd+1,?___ftsub+1
 10096  003000  C08A  F096         	movff	?___ftadd+2,?___ftsub+2
 10097  003004  D000               	goto	l1284
 10098  003006                     l1284:
 10099  003006  0012               	return		;funcret
 10100  003008                     __end_of___ftsub:
 10101                           	opt stack 0
 10102                           tblptru	equ	0xFF8
 10103                           tblptrh	equ	0xFF7
 10104                           tblptrl	equ	0xFF6
 10105                           tablat	equ	0xFF5
 10106                           prodh	equ	0xFF4
 10107                           prodl	equ	0xFF3
 10108                           intcon	equ	0xFF2
 10109                           intcon2	equ	0xFF1
 10110                           postinc0	equ	0xFEE
 10111                           wreg	equ	0xFE8
 10112                           indf2	equ	0xFDF
 10113                           postinc2	equ	0xFDE
 10114                           postdec2	equ	0xFDD
 10115                           fsr2h	equ	0xFDA
 10116                           fsr2l	equ	0xFD9
 10117                           status	equ	0xFD8
 10118                           
 10119 ;; *************** function ___ftadd *****************
 10120 ;; Defined at:
 10121 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  f1              3   40[BANK0 ] float 
 10124 ;;  f2              3   43[BANK0 ] float 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  exp1            1   51[BANK0 ] unsigned char 
 10127 ;;  exp2            1   50[BANK0 ] unsigned char 
 10128 ;;  sign            1   49[BANK0 ] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  3   40[BANK0 ] float 
 10131 ;; Registers used:
 10132 ;;		wreg, status,2, status,0, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10138 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10139 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10140 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;Total ram usage:       12 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:    8
 10145 ;; This function calls:
 10146 ;;		___ftpack
 10147 ;; This function is called by:
 10148 ;;		___ftsub
 10149 ;;		_floor
 10150 ;;		_log
 10151 ;;		_eval_poly
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           	psect	text82
 10156  00103C                     __ptext82:
 10157                           	opt stack 0
 10158  00103C                     ___ftadd:
 10159                           	opt stack 18
 10160                           
 10161                           ;incstack = 0
 10162  00103C  C08A  F08E         	movff	___ftadd@f1+2,??___ftadd
 10163  001040  0100               	movlb	0	; () banked
 10164  001042  6B8F               	clrf	(??___ftadd+1)& (0+255),b
 10165  001044  6B90               	clrf	(??___ftadd+2)& (0+255),b
 10166  001046  0100               	movlb	0	; () banked
 10167  001048  3589               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10168  00104A  0100               	movlb	0	; () banked
 10169  00104C  378E               	rlcf	??___ftadd& (0+255),f,b
 10170  00104E  E301               	bnc	u4011
 10171  001050  818F               	bsf	(??___ftadd+1)& (0+255),0,b
 10172  001052                     u4011:
 10173  001052  0100               	movlb	0	; () banked
 10174  001054  518E               	movf	??___ftadd& (0+255),w,b
 10175  001056  0100               	movlb	0	; () banked
 10176  001058  6F93               	movwf	___ftadd@exp1& (0+255),b
 10177  00105A  C08D  F08E         	movff	___ftadd@f2+2,??___ftadd
 10178  00105E  0100               	movlb	0	; () banked
 10179  001060  6B8F               	clrf	(??___ftadd+1)& (0+255),b
 10180  001062  6B90               	clrf	(??___ftadd+2)& (0+255),b
 10181  001064  0100               	movlb	0	; () banked
 10182  001066  358C               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10183  001068  0100               	movlb	0	; () banked
 10184  00106A  378E               	rlcf	??___ftadd& (0+255),f,b
 10185  00106C  E301               	bnc	u4021
 10186  00106E  818F               	bsf	(??___ftadd+1)& (0+255),0,b
 10187  001070                     u4021:
 10188  001070  0100               	movlb	0	; () banked
 10189  001072  518E               	movf	??___ftadd& (0+255),w,b
 10190  001074  0100               	movlb	0	; () banked
 10191  001076  6F92               	movwf	___ftadd@exp2& (0+255),b
 10192                           
 10193                           ; BSR set to: 0
 10194  001078  0100               	movlb	0	; () banked
 10195  00107A  5193               	movf	___ftadd@exp1& (0+255),w,b
 10196  00107C  0100               	movlb	0	; () banked
 10197  00107E  B4D8               	btfsc	status,2,c
 10198  001080  D011               	goto	l1220
 10199                           
 10200                           ; BSR set to: 0
 10201  001082  0100               	movlb	0	; () banked
 10202  001084  5192               	movf	___ftadd@exp2& (0+255),w,b
 10203  001086  0100               	movlb	0	; () banked
 10204  001088  5D93               	subwf	___ftadd@exp1& (0+255),w,b
 10205  00108A  B0D8               	btfsc	status,0,c
 10206  00108C  D012               	goto	l4876
 10207                           
 10208                           ; BSR set to: 0
 10209  00108E  0100               	movlb	0	; () banked
 10210  001090  5193               	movf	___ftadd@exp1& (0+255),w,b
 10211  001092  0800               	sublw	0
 10212  001094  0100               	movlb	0	; () banked
 10213  001096  2592               	addwf	___ftadd@exp2& (0+255),w,b
 10214  001098  0100               	movlb	0	; () banked
 10215  00109A  6F8E               	movwf	??___ftadd& (0+255),b
 10216  00109C  0E18               	movlw	24
 10217  00109E  0100               	movlb	0	; () banked
 10218  0010A0  658E               	cpfsgt	??___ftadd& (0+255),b
 10219  0010A2  D007               	goto	l4876
 10220  0010A4                     l1220:
 10221                           
 10222                           ; BSR set to: 0
 10223  0010A4  C08B  F088         	movff	___ftadd@f2,?___ftadd
 10224  0010A8  C08C  F089         	movff	___ftadd@f2+1,?___ftadd+1
 10225  0010AC  C08D  F08A         	movff	___ftadd@f2+2,?___ftadd+2
 10226  0010B0  D103               	goto	l1221
 10227  0010B2                     l4876:
 10228                           
 10229                           ; BSR set to: 0
 10230  0010B2  0100               	movlb	0	; () banked
 10231  0010B4  5192               	movf	___ftadd@exp2& (0+255),w,b
 10232  0010B6  0100               	movlb	0	; () banked
 10233  0010B8  B4D8               	btfsc	status,2,c
 10234  0010BA  D011               	goto	l1224
 10235                           
 10236                           ; BSR set to: 0
 10237  0010BC  0100               	movlb	0	; () banked
 10238  0010BE  5193               	movf	___ftadd@exp1& (0+255),w,b
 10239  0010C0  0100               	movlb	0	; () banked
 10240  0010C2  5D92               	subwf	___ftadd@exp2& (0+255),w,b
 10241  0010C4  B0D8               	btfsc	status,0,c
 10242  0010C6  D012               	goto	l4882
 10243                           
 10244                           ; BSR set to: 0
 10245  0010C8  0100               	movlb	0	; () banked
 10246  0010CA  5192               	movf	___ftadd@exp2& (0+255),w,b
 10247  0010CC  0800               	sublw	0
 10248  0010CE  0100               	movlb	0	; () banked
 10249  0010D0  2593               	addwf	___ftadd@exp1& (0+255),w,b
 10250  0010D2  0100               	movlb	0	; () banked
 10251  0010D4  6F8E               	movwf	??___ftadd& (0+255),b
 10252  0010D6  0E18               	movlw	24
 10253  0010D8  0100               	movlb	0	; () banked
 10254  0010DA  658E               	cpfsgt	??___ftadd& (0+255),b
 10255  0010DC  D007               	goto	l4882
 10256  0010DE                     l1224:
 10257                           
 10258                           ; BSR set to: 0
 10259  0010DE  C088  F088         	movff	___ftadd@f1,?___ftadd
 10260  0010E2  C089  F089         	movff	___ftadd@f1+1,?___ftadd+1
 10261  0010E6  C08A  F08A         	movff	___ftadd@f1+2,?___ftadd+2
 10262  0010EA  D0E6               	goto	l1221
 10263  0010EC                     l4882:
 10264                           
 10265                           ; BSR set to: 0
 10266  0010EC  0E06               	movlw	6
 10267  0010EE  0100               	movlb	0	; () banked
 10268  0010F0  6F91               	movwf	___ftadd@sign& (0+255),b
 10269                           
 10270                           ; BSR set to: 0
 10271  0010F2  0100               	movlb	0	; () banked
 10272  0010F4  AF8A               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10273  0010F6  D003               	goto	l4888
 10274                           
 10275                           ; BSR set to: 0
 10276  0010F8  0100               	movlb	0	; () banked
 10277  0010FA  8F91               	bsf	___ftadd@sign& (0+255),7,b
 10278  0010FC  D000               	goto	l4888
 10279  0010FE                     l4888:
 10280                           
 10281                           ; BSR set to: 0
 10282  0010FE  0100               	movlb	0	; () banked
 10283  001100  AF8D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10284  001102  D002               	goto	l1226
 10285                           
 10286                           ; BSR set to: 0
 10287  001104  0100               	movlb	0	; () banked
 10288  001106  8D91               	bsf	___ftadd@sign& (0+255),6,b
 10289  001108                     l1226:
 10290                           
 10291                           ; BSR set to: 0
 10292  001108  0100               	movlb	0	; () banked
 10293  00110A  8F89               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10294                           
 10295                           ; BSR set to: 0
 10296  00110C  0EFF               	movlw	255
 10297  00110E  0100               	movlb	0	; () banked
 10298  001110  1788               	andwf	___ftadd@f1& (0+255),f,b
 10299  001112  0EFF               	movlw	255
 10300  001114  0100               	movlb	0	; () banked
 10301  001116  1789               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10302  001118  0E00               	movlw	0
 10303  00111A  0100               	movlb	0	; () banked
 10304  00111C  178A               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10305  00111E  0100               	movlb	0	; () banked
 10306  001120  8F8C               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10307                           
 10308                           ; BSR set to: 0
 10309  001122  0EFF               	movlw	255
 10310  001124  0100               	movlb	0	; () banked
 10311  001126  178B               	andwf	___ftadd@f2& (0+255),f,b
 10312  001128  0EFF               	movlw	255
 10313  00112A  0100               	movlb	0	; () banked
 10314  00112C  178C               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10315  00112E  0E00               	movlw	0
 10316  001130  0100               	movlb	0	; () banked
 10317  001132  178D               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10318                           
 10319                           ; BSR set to: 0
 10320  001134  0100               	movlb	0	; () banked
 10321  001136  5192               	movf	___ftadd@exp2& (0+255),w,b
 10322  001138  0100               	movlb	0	; () banked
 10323  00113A  5D93               	subwf	___ftadd@exp1& (0+255),w,b
 10324  00113C  B0D8               	btfsc	status,0,c
 10325  00113E  D028               	goto	l4908
 10326  001140                     l4898:
 10327                           
 10328                           ; BSR set to: 0
 10329  001140  0100               	movlb	0	; () banked
 10330  001142  90D8               	bcf	status,0,c
 10331  001144  378B               	rlcf	___ftadd@f2& (0+255),f,b
 10332  001146  378C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10333  001148  378D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10334  00114A  0100               	movlb	0	; () banked
 10335  00114C  0792               	decf	___ftadd@exp2& (0+255),f,b
 10336                           
 10337                           ; BSR set to: 0
 10338  00114E  0100               	movlb	0	; () banked
 10339  001150  5193               	movf	___ftadd@exp1& (0+255),w,b
 10340  001152  0100               	movlb	0	; () banked
 10341  001154  1992               	xorwf	___ftadd@exp2& (0+255),w,b
 10342  001156  B4D8               	btfsc	status,2,c
 10343  001158  D013               	goto	l4906
 10344                           
 10345                           ; BSR set to: 0
 10346  00115A  0100               	movlb	0	; () banked
 10347  00115C  0791               	decf	___ftadd@sign& (0+255),f,b
 10348  00115E  C091  F08E         	movff	___ftadd@sign,??___ftadd
 10349  001162  0E07               	movlw	7
 10350  001164  0100               	movlb	0	; () banked
 10351  001166  178E               	andwf	??___ftadd& (0+255),f,b
 10352  001168  B4D8               	btfsc	status,2,c
 10353  00116A  D00A               	goto	l4906
 10354  00116C  D7E9               	goto	l4898
 10355                           
 10356                           ; BSR set to: 0
 10357                           
 10358                           ; BSR set to: 0
 10359  00116E  D008               	goto	l4906
 10360  001170                     l4904:
 10361                           
 10362                           ; BSR set to: 0
 10363  001170  0100               	movlb	0	; () banked
 10364  001172  90D8               	bcf	status,0,c
 10365  001174  338A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10366  001176  3389               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10367  001178  3388               	rrcf	___ftadd@f1& (0+255),f,b
 10368  00117A  0100               	movlb	0	; () banked
 10369  00117C  2B93               	incf	___ftadd@exp1& (0+255),f,b
 10370  00117E  D000               	goto	l4906
 10371  001180                     l4906:
 10372                           
 10373                           ; BSR set to: 0
 10374  001180  0100               	movlb	0	; () banked
 10375  001182  5192               	movf	___ftadd@exp2& (0+255),w,b
 10376  001184  0100               	movlb	0	; () banked
 10377  001186  1993               	xorwf	___ftadd@exp1& (0+255),w,b
 10378  001188  B4D8               	btfsc	status,2,c
 10379  00118A  D030               	goto	l1235
 10380  00118C  D7F1               	goto	l4904
 10381                           
 10382                           ; BSR set to: 0
 10383  00118E  D02E               	goto	l1235
 10384  001190                     l4908:
 10385                           
 10386                           ; BSR set to: 0
 10387  001190  0100               	movlb	0	; () banked
 10388  001192  5193               	movf	___ftadd@exp1& (0+255),w,b
 10389  001194  0100               	movlb	0	; () banked
 10390  001196  5D92               	subwf	___ftadd@exp2& (0+255),w,b
 10391  001198  B0D8               	btfsc	status,0,c
 10392  00119A  D028               	goto	l1235
 10393  00119C                     l4910:
 10394                           
 10395                           ; BSR set to: 0
 10396  00119C  0100               	movlb	0	; () banked
 10397  00119E  90D8               	bcf	status,0,c
 10398  0011A0  3788               	rlcf	___ftadd@f1& (0+255),f,b
 10399  0011A2  3789               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10400  0011A4  378A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10401  0011A6  0100               	movlb	0	; () banked
 10402  0011A8  0793               	decf	___ftadd@exp1& (0+255),f,b
 10403                           
 10404                           ; BSR set to: 0
 10405  0011AA  0100               	movlb	0	; () banked
 10406  0011AC  5193               	movf	___ftadd@exp1& (0+255),w,b
 10407  0011AE  0100               	movlb	0	; () banked
 10408  0011B0  1992               	xorwf	___ftadd@exp2& (0+255),w,b
 10409  0011B2  B4D8               	btfsc	status,2,c
 10410  0011B4  D013               	goto	l4918
 10411                           
 10412                           ; BSR set to: 0
 10413  0011B6  0100               	movlb	0	; () banked
 10414  0011B8  0791               	decf	___ftadd@sign& (0+255),f,b
 10415  0011BA  C091  F08E         	movff	___ftadd@sign,??___ftadd
 10416  0011BE  0E07               	movlw	7
 10417  0011C0  0100               	movlb	0	; () banked
 10418  0011C2  178E               	andwf	??___ftadd& (0+255),f,b
 10419  0011C4  B4D8               	btfsc	status,2,c
 10420  0011C6  D00A               	goto	l4918
 10421  0011C8  D7E9               	goto	l4910
 10422                           
 10423                           ; BSR set to: 0
 10424                           
 10425                           ; BSR set to: 0
 10426  0011CA  D008               	goto	l4918
 10427  0011CC                     l4916:
 10428                           
 10429                           ; BSR set to: 0
 10430  0011CC  0100               	movlb	0	; () banked
 10431  0011CE  90D8               	bcf	status,0,c
 10432  0011D0  338D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10433  0011D2  338C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10434  0011D4  338B               	rrcf	___ftadd@f2& (0+255),f,b
 10435  0011D6  0100               	movlb	0	; () banked
 10436  0011D8  2B92               	incf	___ftadd@exp2& (0+255),f,b
 10437  0011DA  D000               	goto	l4918
 10438  0011DC                     l4918:
 10439                           
 10440                           ; BSR set to: 0
 10441  0011DC  0100               	movlb	0	; () banked
 10442  0011DE  5192               	movf	___ftadd@exp2& (0+255),w,b
 10443  0011E0  0100               	movlb	0	; () banked
 10444  0011E2  1993               	xorwf	___ftadd@exp1& (0+255),w,b
 10445  0011E4  B4D8               	btfsc	status,2,c
 10446  0011E6  D002               	goto	l1235
 10447  0011E8  D7F1               	goto	l4916
 10448                           
 10449                           ; BSR set to: 0
 10450  0011EA  D000               	goto	l1235
 10451  0011EC                     l1235:
 10452                           
 10453                           ; BSR set to: 0
 10454  0011EC  0100               	movlb	0	; () banked
 10455  0011EE  AF91               	btfss	___ftadd@sign& (0+255),7,b
 10456  0011F0  D012               	goto	l1244
 10457                           
 10458                           ; BSR set to: 0
 10459  0011F2  0EFF               	movlw	255
 10460  0011F4  0100               	movlb	0	; () banked
 10461  0011F6  1B88               	xorwf	___ftadd@f1& (0+255),f,b
 10462  0011F8  0EFF               	movlw	255
 10463  0011FA  0100               	movlb	0	; () banked
 10464  0011FC  1B89               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10465  0011FE  0EFF               	movlw	255
 10466  001200  0100               	movlb	0	; () banked
 10467  001202  1B8A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10468  001204  0E01               	movlw	1
 10469  001206  0100               	movlb	0	; () banked
 10470  001208  2788               	addwf	___ftadd@f1& (0+255),f,b
 10471  00120A  0E00               	movlw	0
 10472  00120C  0100               	movlb	0	; () banked
 10473  00120E  2389               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10474  001210  0E00               	movlw	0
 10475  001212  0100               	movlb	0	; () banked
 10476  001214  238A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10477  001216                     l1244:
 10478                           
 10479                           ; BSR set to: 0
 10480  001216  0100               	movlb	0	; () banked
 10481  001218  AD91               	btfss	___ftadd@sign& (0+255),6,b
 10482  00121A  D013               	goto	l4924
 10483                           
 10484                           ; BSR set to: 0
 10485  00121C  0EFF               	movlw	255
 10486  00121E  0100               	movlb	0	; () banked
 10487  001220  1B8B               	xorwf	___ftadd@f2& (0+255),f,b
 10488  001222  0EFF               	movlw	255
 10489  001224  0100               	movlb	0	; () banked
 10490  001226  1B8C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10491  001228  0EFF               	movlw	255
 10492  00122A  0100               	movlb	0	; () banked
 10493  00122C  1B8D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10494  00122E  0E01               	movlw	1
 10495  001230  0100               	movlb	0	; () banked
 10496  001232  278B               	addwf	___ftadd@f2& (0+255),f,b
 10497  001234  0E00               	movlw	0
 10498  001236  0100               	movlb	0	; () banked
 10499  001238  238C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10500  00123A  0E00               	movlw	0
 10501  00123C  0100               	movlb	0	; () banked
 10502  00123E  238D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10503  001240  D000               	goto	l4924
 10504  001242                     l4924:
 10505                           
 10506                           ; BSR set to: 0
 10507  001242  0E00               	movlw	0
 10508  001244  0100               	movlb	0	; () banked
 10509  001246  6F91               	movwf	___ftadd@sign& (0+255),b
 10510                           
 10511                           ; BSR set to: 0
 10512  001248  0100               	movlb	0	; () banked
 10513  00124A  5188               	movf	___ftadd@f1& (0+255),w,b
 10514  00124C  0100               	movlb	0	; () banked
 10515  00124E  278B               	addwf	___ftadd@f2& (0+255),f,b
 10516  001250  0100               	movlb	0	; () banked
 10517  001252  5189               	movf	(___ftadd@f1+1)& (0+255),w,b
 10518  001254  0100               	movlb	0	; () banked
 10519  001256  238C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10520  001258  0100               	movlb	0	; () banked
 10521  00125A  518A               	movf	(___ftadd@f1+2)& (0+255),w,b
 10522  00125C  0100               	movlb	0	; () banked
 10523  00125E  238D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10524                           
 10525                           ; BSR set to: 0
 10526  001260  0100               	movlb	0	; () banked
 10527  001262  AF8D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10528  001264  D016               	goto	l4934
 10529                           
 10530                           ; BSR set to: 0
 10531  001266  0EFF               	movlw	255
 10532  001268  0100               	movlb	0	; () banked
 10533  00126A  1B8B               	xorwf	___ftadd@f2& (0+255),f,b
 10534  00126C  0EFF               	movlw	255
 10535  00126E  0100               	movlb	0	; () banked
 10536  001270  1B8C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10537  001272  0EFF               	movlw	255
 10538  001274  0100               	movlb	0	; () banked
 10539  001276  1B8D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10540  001278  0E01               	movlw	1
 10541  00127A  0100               	movlb	0	; () banked
 10542  00127C  278B               	addwf	___ftadd@f2& (0+255),f,b
 10543  00127E  0E00               	movlw	0
 10544  001280  0100               	movlb	0	; () banked
 10545  001282  238C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10546  001284  0E00               	movlw	0
 10547  001286  0100               	movlb	0	; () banked
 10548  001288  238D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10549                           
 10550                           ; BSR set to: 0
 10551  00128A  0E01               	movlw	1
 10552  00128C  0100               	movlb	0	; () banked
 10553  00128E  6F91               	movwf	___ftadd@sign& (0+255),b
 10554  001290  D000               	goto	l4934
 10555  001292                     l4934:
 10556                           
 10557                           ; BSR set to: 0
 10558  001292  C08B  F06E         	movff	___ftadd@f2,___ftpack@arg
 10559  001296  C08C  F06F         	movff	___ftadd@f2+1,___ftpack@arg+1
 10560  00129A  C08D  F070         	movff	___ftadd@f2+2,___ftpack@arg+2
 10561  00129E  C093  F071         	movff	___ftadd@exp1,___ftpack@exp
 10562  0012A2  C091  F072         	movff	___ftadd@sign,___ftpack@sign
 10563  0012A6  ECC5  F00E         	call	___ftpack	;wreg free
 10564  0012AA  C06E  F088         	movff	?___ftpack,?___ftadd
 10565  0012AE  C06F  F089         	movff	?___ftpack+1,?___ftadd+1
 10566  0012B2  C070  F08A         	movff	?___ftpack+2,?___ftadd+2
 10567  0012B6  D000               	goto	l1221
 10568  0012B8                     l1221:
 10569  0012B8  0012               	return		;funcret
 10570  0012BA                     __end_of___ftadd:
 10571                           	opt stack 0
 10572                           tblptru	equ	0xFF8
 10573                           tblptrh	equ	0xFF7
 10574                           tblptrl	equ	0xFF6
 10575                           tablat	equ	0xFF5
 10576                           prodh	equ	0xFF4
 10577                           prodl	equ	0xFF3
 10578                           intcon	equ	0xFF2
 10579                           intcon2	equ	0xFF1
 10580                           postinc0	equ	0xFEE
 10581                           wreg	equ	0xFE8
 10582                           indf2	equ	0xFDF
 10583                           postinc2	equ	0xFDE
 10584                           postdec2	equ	0xFDD
 10585                           fsr2h	equ	0xFDA
 10586                           fsr2l	equ	0xFD9
 10587                           status	equ	0xFD8
 10588                           
 10589 ;; *************** function ___ftneg *****************
 10590 ;; Defined at:
 10591 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;  f1              3   14[BANK0 ] float 
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  3   14[BANK0 ] float 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10605 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;Total ram usage:        3 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    7
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_pow
 10616 ;;		_exp
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text83
 10621  00335E                     __ptext83:
 10622                           	opt stack 0
 10623  00335E                     ___ftneg:
 10624                           	opt stack 20
 10625                           
 10626                           ;incstack = 0
 10627  00335E  0100               	movlb	0	; () banked
 10628  003360  516E               	movf	___ftneg@f1& (0+255),w,b
 10629  003362  0100               	movlb	0	; () banked
 10630  003364  116F               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10631  003366  0100               	movlb	0	; () banked
 10632  003368  1170               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 10633  00336A  B4D8               	btfsc	status,2,c
 10634  00336C  D009               	goto	l1277
 10635                           
 10636                           ; BSR set to: 0
 10637  00336E  0E00               	movlw	0
 10638  003370  0100               	movlb	0	; () banked
 10639  003372  1B6E               	xorwf	___ftneg@f1& (0+255),f,b
 10640  003374  0E00               	movlw	0
 10641  003376  0100               	movlb	0	; () banked
 10642  003378  1B6F               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10643  00337A  0E80               	movlw	128
 10644  00337C  0100               	movlb	0	; () banked
 10645  00337E  1B70               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10646  003380                     l1277:
 10647                           
 10648                           ; BSR set to: 0
 10649  003380  C06E  F06E         	movff	___ftneg@f1,?___ftneg
 10650  003384  C06F  F06F         	movff	___ftneg@f1+1,?___ftneg+1
 10651  003388  C070  F070         	movff	___ftneg@f1+2,?___ftneg+2
 10652                           
 10653                           ; BSR set to: 0
 10654  00338C  0012               	return		;funcret
 10655  00338E                     __end_of___ftneg:
 10656                           	opt stack 0
 10657                           tblptru	equ	0xFF8
 10658                           tblptrh	equ	0xFF7
 10659                           tblptrl	equ	0xFF6
 10660                           tablat	equ	0xFF5
 10661                           prodh	equ	0xFF4
 10662                           prodl	equ	0xFF3
 10663                           intcon	equ	0xFF2
 10664                           intcon2	equ	0xFF1
 10665                           postinc0	equ	0xFEE
 10666                           wreg	equ	0xFE8
 10667                           indf2	equ	0xFDF
 10668                           postinc2	equ	0xFDE
 10669                           postdec2	equ	0xFDD
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           
 10674 ;; *************** function ___ftdiv *****************
 10675 ;; Defined at:
 10676 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  f1              3   22[BANK0 ] float 
 10679 ;;  f2              3   25[BANK0 ] float 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;  f3              3   32[BANK0 ] float 
 10682 ;;  sign            1   36[BANK0 ] unsigned char 
 10683 ;;  exp             1   35[BANK0 ] unsigned char 
 10684 ;;  cntr            1   31[BANK0 ] unsigned char 
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  3   22[BANK0 ] float 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2, status,0, cstack
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10694 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10695 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10696 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;Total ram usage:       15 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    8
 10701 ;; This function calls:
 10702 ;;		___ftpack
 10703 ;; This function is called by:
 10704 ;;		_exp
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text84
 10709  0019D6                     __ptext84:
 10710                           	opt stack 0
 10711  0019D6                     ___ftdiv:
 10712                           	opt stack 19
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;incstack = 0
 10716  0019D6  C078  F07C         	movff	___ftdiv@f1+2,??___ftdiv
 10717  0019DA  0100               	movlb	0	; () banked
 10718  0019DC  6B7D               	clrf	(??___ftdiv+1)& (0+255),b
 10719  0019DE  6B7E               	clrf	(??___ftdiv+2)& (0+255),b
 10720  0019E0  0100               	movlb	0	; () banked
 10721  0019E2  3577               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 10722  0019E4  0100               	movlb	0	; () banked
 10723  0019E6  377C               	rlcf	??___ftdiv& (0+255),f,b
 10724  0019E8  E301               	bnc	u4691
 10725  0019EA  817D               	bsf	(??___ftdiv+1)& (0+255),0,b
 10726  0019EC                     u4691:
 10727  0019EC  0100               	movlb	0	; () banked
 10728  0019EE  517C               	movf	??___ftdiv& (0+255),w,b
 10729  0019F0  0100               	movlb	0	; () banked
 10730  0019F2  6F83               	movwf	___ftdiv@exp& (0+255),b
 10731  0019F4  0100               	movlb	0	; () banked
 10732  0019F6  5183               	movf	___ftdiv@exp& (0+255),w,b
 10733  0019F8  A4D8               	btfss	status,2,c
 10734  0019FA  D002               	goto	l5254
 10735  0019FC  D014               	goto	l5256
 10736                           
 10737                           ; BSR set to: 0
 10738                           
 10739                           ; BSR set to: 0
 10740  0019FE  D08B               	goto	l1252
 10741  001A00                     l5254:
 10742                           
 10743                           ; BSR set to: 0
 10744  001A00  C07B  F07C         	movff	___ftdiv@f2+2,??___ftdiv
 10745  001A04  0100               	movlb	0	; () banked
 10746  001A06  6B7D               	clrf	(??___ftdiv+1)& (0+255),b
 10747  001A08  6B7E               	clrf	(??___ftdiv+2)& (0+255),b
 10748  001A0A  0100               	movlb	0	; () banked
 10749  001A0C  357A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 10750  001A0E  0100               	movlb	0	; () banked
 10751  001A10  377C               	rlcf	??___ftdiv& (0+255),f,b
 10752  001A12  E301               	bnc	u4711
 10753  001A14  817D               	bsf	(??___ftdiv+1)& (0+255),0,b
 10754  001A16                     u4711:
 10755  001A16  0100               	movlb	0	; () banked
 10756  001A18  517C               	movf	??___ftdiv& (0+255),w,b
 10757  001A1A  0100               	movlb	0	; () banked
 10758  001A1C  6F84               	movwf	___ftdiv@sign& (0+255),b
 10759  001A1E  0100               	movlb	0	; () banked
 10760  001A20  5184               	movf	___ftdiv@sign& (0+255),w,b
 10761  001A22  A4D8               	btfss	status,2,c
 10762  001A24  D00A               	goto	l5260
 10763  001A26                     l5256:
 10764                           
 10765                           ; BSR set to: 0
 10766  001A26  0E00               	movlw	0
 10767  001A28  0100               	movlb	0	; () banked
 10768  001A2A  6F76               	movwf	?___ftdiv& (0+255),b
 10769  001A2C  0E00               	movlw	0
 10770  001A2E  0100               	movlb	0	; () banked
 10771  001A30  6F77               	movwf	(?___ftdiv+1)& (0+255),b
 10772  001A32  0E00               	movlw	0
 10773  001A34  0100               	movlb	0	; () banked
 10774  001A36  6F78               	movwf	(?___ftdiv+2)& (0+255),b
 10775                           
 10776                           ; BSR set to: 0
 10777  001A38  D06E               	goto	l1252
 10778  001A3A                     l5260:
 10779                           
 10780                           ; BSR set to: 0
 10781  001A3A  0E00               	movlw	0
 10782  001A3C  0100               	movlb	0	; () banked
 10783  001A3E  6F80               	movwf	___ftdiv@f3& (0+255),b
 10784  001A40  0E00               	movlw	0
 10785  001A42  0100               	movlb	0	; () banked
 10786  001A44  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
 10787  001A46  0E00               	movlw	0
 10788  001A48  0100               	movlb	0	; () banked
 10789  001A4A  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
 10790                           
 10791                           ; BSR set to: 0
 10792  001A4C  0100               	movlb	0	; () banked
 10793  001A4E  5184               	movf	___ftdiv@sign& (0+255),w,b
 10794  001A50  0F89               	addlw	137
 10795  001A52  0100               	movlb	0	; () banked
 10796  001A54  5F83               	subwf	___ftdiv@exp& (0+255),f,b
 10797                           
 10798                           ; BSR set to: 0
 10799  001A56  C078  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
 10800                           
 10801                           ; BSR set to: 0
 10802  001A5A  0100               	movlb	0	; () banked
 10803  001A5C  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10804  001A5E  0100               	movlb	0	; () banked
 10805  001A60  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
 10806                           
 10807                           ; BSR set to: 0
 10808  001A62  0E80               	movlw	128
 10809  001A64  0100               	movlb	0	; () banked
 10810  001A66  1784               	andwf	___ftdiv@sign& (0+255),f,b
 10811                           
 10812                           ; BSR set to: 0
 10813  001A68  0100               	movlb	0	; () banked
 10814  001A6A  8F77               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 10815                           
 10816                           ; BSR set to: 0
 10817  001A6C  0EFF               	movlw	255
 10818  001A6E  0100               	movlb	0	; () banked
 10819  001A70  1776               	andwf	___ftdiv@f1& (0+255),f,b
 10820  001A72  0EFF               	movlw	255
 10821  001A74  0100               	movlb	0	; () banked
 10822  001A76  1777               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 10823  001A78  0E00               	movlw	0
 10824  001A7A  0100               	movlb	0	; () banked
 10825  001A7C  1778               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 10826                           
 10827                           ; BSR set to: 0
 10828  001A7E  0100               	movlb	0	; () banked
 10829  001A80  8F7A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 10830                           
 10831                           ; BSR set to: 0
 10832  001A82  0EFF               	movlw	255
 10833  001A84  0100               	movlb	0	; () banked
 10834  001A86  1779               	andwf	___ftdiv@f2& (0+255),f,b
 10835  001A88  0EFF               	movlw	255
 10836  001A8A  0100               	movlb	0	; () banked
 10837  001A8C  177A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 10838  001A8E  0E00               	movlw	0
 10839  001A90  0100               	movlb	0	; () banked
 10840  001A92  177B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 10841                           
 10842                           ; BSR set to: 0
 10843  001A94  0E18               	movlw	24
 10844  001A96  0100               	movlb	0	; () banked
 10845  001A98  6F7F               	movwf	___ftdiv@cntr& (0+255),b
 10846  001A9A  D000               	goto	l5280
 10847  001A9C                     l5280:
 10848                           
 10849                           ; BSR set to: 0
 10850  001A9C  0100               	movlb	0	; () banked
 10851  001A9E  90D8               	bcf	status,0,c
 10852  001AA0  3780               	rlcf	___ftdiv@f3& (0+255),f,b
 10853  001AA2  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 10854  001AA4  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 10855                           
 10856                           ; BSR set to: 0
 10857  001AA6  0100               	movlb	0	; () banked
 10858  001AA8  5179               	movf	___ftdiv@f2& (0+255),w,b
 10859  001AAA  0100               	movlb	0	; () banked
 10860  001AAC  5D76               	subwf	___ftdiv@f1& (0+255),w,b
 10861  001AAE  0100               	movlb	0	; () banked
 10862  001AB0  517A               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10863  001AB2  0100               	movlb	0	; () banked
 10864  001AB4  5977               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 10865  001AB6  0100               	movlb	0	; () banked
 10866  001AB8  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10867  001ABA  0100               	movlb	0	; () banked
 10868  001ABC  5978               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 10869  001ABE  A0D8               	btfss	status,0,c
 10870  001AC0  D00E               	goto	l1255
 10871                           
 10872                           ; BSR set to: 0
 10873  001AC2  0100               	movlb	0	; () banked
 10874  001AC4  5179               	movf	___ftdiv@f2& (0+255),w,b
 10875  001AC6  0100               	movlb	0	; () banked
 10876  001AC8  5F76               	subwf	___ftdiv@f1& (0+255),f,b
 10877  001ACA  0100               	movlb	0	; () banked
 10878  001ACC  517A               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10879  001ACE  0100               	movlb	0	; () banked
 10880  001AD0  5B77               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 10881  001AD2  0100               	movlb	0	; () banked
 10882  001AD4  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10883  001AD6  0100               	movlb	0	; () banked
 10884  001AD8  5B78               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 10885                           
 10886                           ; BSR set to: 0
 10887  001ADA  0100               	movlb	0	; () banked
 10888  001ADC  8180               	bsf	___ftdiv@f3& (0+255),0,b
 10889  001ADE                     l1255:
 10890                           
 10891                           ; BSR set to: 0
 10892  001ADE  0100               	movlb	0	; () banked
 10893  001AE0  90D8               	bcf	status,0,c
 10894  001AE2  3776               	rlcf	___ftdiv@f1& (0+255),f,b
 10895  001AE4  3777               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 10896  001AE6  3778               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 10897                           
 10898                           ; BSR set to: 0
 10899  001AE8  0100               	movlb	0	; () banked
 10900  001AEA  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
 10901  001AEC  D7D7               	goto	l5280
 10902  001AEE  D000               	goto	l5290
 10903  001AF0                     l5290:
 10904                           
 10905                           ; BSR set to: 0
 10906  001AF0  C080  F06E         	movff	___ftdiv@f3,___ftpack@arg
 10907  001AF4  C081  F06F         	movff	___ftdiv@f3+1,___ftpack@arg+1
 10908  001AF8  C082  F070         	movff	___ftdiv@f3+2,___ftpack@arg+2
 10909  001AFC  C083  F071         	movff	___ftdiv@exp,___ftpack@exp
 10910  001B00  C084  F072         	movff	___ftdiv@sign,___ftpack@sign
 10911  001B04  ECC5  F00E         	call	___ftpack	;wreg free
 10912  001B08  C06E  F076         	movff	?___ftpack,?___ftdiv
 10913  001B0C  C06F  F077         	movff	?___ftpack+1,?___ftdiv+1
 10914  001B10  C070  F078         	movff	?___ftpack+2,?___ftdiv+2
 10915  001B14  D000               	goto	l1252
 10916  001B16                     l1252:
 10917  001B16  0012               	return		;funcret
 10918  001B18                     __end_of___ftdiv:
 10919                           	opt stack 0
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           intcon2	equ	0xFF1
 10928                           postinc0	equ	0xFEE
 10929                           wreg	equ	0xFE8
 10930                           indf2	equ	0xFDF
 10931                           postinc2	equ	0xFDE
 10932                           postdec2	equ	0xFDD
 10933                           fsr2h	equ	0xFDA
 10934                           fsr2l	equ	0xFD9
 10935                           status	equ	0xFD8
 10936                           
 10937 ;; *************** function ___awtoft *****************
 10938 ;; Defined at:
 10939 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  c               2   22[BANK0 ] int 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  sign            1   29[COMRAM] unsigned char 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  3   22[BANK0 ] float 
 10946 ;; Registers used:
 10947 ;;		wreg, status,2, status,0, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10953 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;Total ram usage:        4 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:    8
 10960 ;; This function calls:
 10961 ;;		___ftpack
 10962 ;; This function is called by:
 10963 ;;		_exp
 10964 ;;		_log
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text85
 10969  0030D8                     __ptext85:
 10970                           	opt stack 0
 10971  0030D8                     ___awtoft:
 10972                           	opt stack 19
 10973                           
 10974                           ;incstack = 0
 10975  0030D8  0E00               	movlw	0
 10976  0030DA  6E42               	movwf	___awtoft@sign,c
 10977  0030DC  0100               	movlb	0	; () banked
 10978  0030DE  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
 10979  0030E0  D008               	goto	l5310
 10980                           
 10981                           ; BSR set to: 0
 10982  0030E2  0100               	movlb	0	; () banked
 10983  0030E4  6D76               	negf	___awtoft@c& (0+255),b
 10984  0030E6  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
 10985  0030E8  B0D8               	btfsc	status,0,c
 10986  0030EA  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
 10987                           
 10988                           ; BSR set to: 0
 10989  0030EC  0E01               	movlw	1
 10990  0030EE  6E42               	movwf	___awtoft@sign,c
 10991  0030F0  D000               	goto	l5310
 10992  0030F2                     l5310:
 10993                           
 10994                           ; BSR set to: 0
 10995  0030F2  C076  F06E         	movff	___awtoft@c,___ftpack@arg
 10996  0030F6  C077  F06F         	movff	___awtoft@c+1,___ftpack@arg+1
 10997  0030FA  0100               	movlb	0	; () banked
 10998  0030FC  6B70               	clrf	(___ftpack@arg+2)& (0+255),b
 10999  0030FE  0E8E               	movlw	142
 11000  003100  0100               	movlb	0	; () banked
 11001  003102  6F71               	movwf	___ftpack@exp& (0+255),b
 11002  003104  C042  F072         	movff	___awtoft@sign,___ftpack@sign
 11003  003108  ECC5  F00E         	call	___ftpack	;wreg free
 11004  00310C  C06E  F076         	movff	?___ftpack,?___awtoft
 11005  003110  C06F  F077         	movff	?___ftpack+1,?___awtoft+1
 11006  003114  C070  F078         	movff	?___ftpack+2,?___awtoft+2
 11007  003118  D000               	goto	l1076
 11008  00311A                     l1076:
 11009  00311A  0012               	return		;funcret
 11010  00311C                     __end_of___awtoft:
 11011                           	opt stack 0
 11012                           tblptru	equ	0xFF8
 11013                           tblptrh	equ	0xFF7
 11014                           tblptrl	equ	0xFF6
 11015                           tablat	equ	0xFF5
 11016                           prodh	equ	0xFF4
 11017                           prodl	equ	0xFF3
 11018                           intcon	equ	0xFF2
 11019                           intcon2	equ	0xFF1
 11020                           postinc0	equ	0xFEE
 11021                           wreg	equ	0xFE8
 11022                           indf2	equ	0xFDF
 11023                           postinc2	equ	0xFDE
 11024                           postdec2	equ	0xFDD
 11025                           fsr2h	equ	0xFDA
 11026                           fsr2l	equ	0xFD9
 11027                           status	equ	0xFD8
 11028                           
 11029 ;; *************** function ___lltoft *****************
 11030 ;; Defined at:
 11031 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;  c               4   22[BANK0 ] unsigned long 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  exp             1   29[COMRAM] unsigned char 
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  3   22[BANK0 ] float 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0, cstack
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;Total ram usage:        9 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; Hardware stack levels required when called:    8
 11052 ;; This function calls:
 11053 ;;		___ftpack
 11054 ;; This function is called by:
 11055 ;;		_pow
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text86
 11060  002BE2                     __ptext86:
 11061                           	opt stack 0
 11062  002BE2                     ___lltoft:
 11063                           	opt stack 20
 11064                           
 11065                           ;incstack = 0
 11066  002BE2  0E8E               	movlw	142
 11067  002BE4  6E42               	movwf	___lltoft@exp,c
 11068  002BE6  D008               	goto	l5530
 11069  002BE8                     l5528:
 11070  002BE8  0100               	movlb	0	; () banked
 11071  002BEA  90D8               	bcf	status,0,c
 11072  002BEC  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11073  002BEE  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11074  002BF0  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11075  002BF2  3376               	rrcf	___lltoft@c& (0+255),f,b
 11076  002BF4  2A42               	incf	___lltoft@exp,f,c
 11077  002BF6  D000               	goto	l5530
 11078  002BF8                     l5530:
 11079  002BF8  0E00               	movlw	0
 11080  002BFA  0100               	movlb	0	; () banked
 11081  002BFC  1576               	andwf	___lltoft@c& (0+255),w,b
 11082  002BFE  0100               	movlb	0	; () banked
 11083  002C00  6F7A               	movwf	??___lltoft& (0+255),b
 11084  002C02  0E00               	movlw	0
 11085  002C04  0100               	movlb	0	; () banked
 11086  002C06  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 11087  002C08  0100               	movlb	0	; () banked
 11088  002C0A  6F7B               	movwf	(??___lltoft+1)& (0+255),b
 11089  002C0C  0E00               	movlw	0
 11090  002C0E  0100               	movlb	0	; () banked
 11091  002C10  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 11092  002C12  0100               	movlb	0	; () banked
 11093  002C14  6F7C               	movwf	(??___lltoft+2)& (0+255),b
 11094  002C16  0EFF               	movlw	255
 11095  002C18  0100               	movlb	0	; () banked
 11096  002C1A  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 11097  002C1C  0100               	movlb	0	; () banked
 11098  002C1E  6F7D               	movwf	(??___lltoft+3)& (0+255),b
 11099  002C20  0100               	movlb	0	; () banked
 11100  002C22  517A               	movf	??___lltoft& (0+255),w,b
 11101  002C24  0100               	movlb	0	; () banked
 11102  002C26  117B               	iorwf	(??___lltoft+1)& (0+255),w,b
 11103  002C28  0100               	movlb	0	; () banked
 11104  002C2A  117C               	iorwf	(??___lltoft+2)& (0+255),w,b
 11105  002C2C  0100               	movlb	0	; () banked
 11106  002C2E  117D               	iorwf	(??___lltoft+3)& (0+255),w,b
 11107  002C30  A4D8               	btfss	status,2,c
 11108  002C32  D7DA               	goto	l5528
 11109                           
 11110                           ; BSR set to: 0
 11111                           
 11112                           ; BSR set to: 0
 11113  002C34  C076  F06E         	movff	___lltoft@c,___ftpack@arg
 11114  002C38  C077  F06F         	movff	___lltoft@c+1,___ftpack@arg+1
 11115  002C3C  C078  F070         	movff	___lltoft@c+2,___ftpack@arg+2
 11116  002C40  C042  F071         	movff	___lltoft@exp,___ftpack@exp
 11117  002C44  0E00               	movlw	0
 11118  002C46  0100               	movlb	0	; () banked
 11119  002C48  6F72               	movwf	___ftpack@sign& (0+255),b
 11120  002C4A  ECC5  F00E         	call	___ftpack	;wreg free
 11121  002C4E  C06E  F076         	movff	?___ftpack,?___lltoft
 11122  002C52  C06F  F077         	movff	?___ftpack+1,?___lltoft+1
 11123  002C56  C070  F078         	movff	?___ftpack+2,?___lltoft+2
 11124  002C5A  D000               	goto	l1357
 11125  002C5C                     l1357:
 11126  002C5C  0012               	return		;funcret
 11127  002C5E                     __end_of___lltoft:
 11128                           	opt stack 0
 11129                           tblptru	equ	0xFF8
 11130                           tblptrh	equ	0xFF7
 11131                           tblptrl	equ	0xFF6
 11132                           tablat	equ	0xFF5
 11133                           prodh	equ	0xFF4
 11134                           prodl	equ	0xFF3
 11135                           intcon	equ	0xFF2
 11136                           intcon2	equ	0xFF1
 11137                           postinc0	equ	0xFEE
 11138                           wreg	equ	0xFE8
 11139                           indf2	equ	0xFDF
 11140                           postinc2	equ	0xFDE
 11141                           postdec2	equ	0xFDD
 11142                           fsr2h	equ	0xFDA
 11143                           fsr2l	equ	0xFD9
 11144                           status	equ	0xFD8
 11145                           
 11146 ;; *************** function ___lbtoft *****************
 11147 ;; Defined at:
 11148 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  c               1    wreg     unsigned char 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  c               1   29[COMRAM] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  3   22[BANK0 ] float 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11162 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;Total ram usage:        4 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    8
 11169 ;; This function calls:
 11170 ;;		___ftpack
 11171 ;; This function is called by:
 11172 ;;		_CalculateSensorSums
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text87
 11177  0033E8                     __ptext87:
 11178                           	opt stack 0
 11179  0033E8                     ___lbtoft:
 11180                           	opt stack 21
 11181                           
 11182                           ;incstack = 0
 11183                           ;___lbtoft@c stored from wreg
 11184  0033E8  6E42               	movwf	___lbtoft@c,c
 11185  0033EA  5042               	movf	___lbtoft@c,w,c
 11186  0033EC  0100               	movlb	0	; () banked
 11187  0033EE  6F6E               	movwf	___ftpack@arg& (0+255),b
 11188  0033F0  6B6F               	clrf	(___ftpack@arg+1)& (0+255),b
 11189  0033F2  6B70               	clrf	(___ftpack@arg+2)& (0+255),b
 11190  0033F4  0E8E               	movlw	142
 11191  0033F6  0100               	movlb	0	; () banked
 11192  0033F8  6F71               	movwf	___ftpack@exp& (0+255),b
 11193  0033FA  0E00               	movlw	0
 11194  0033FC  0100               	movlb	0	; () banked
 11195  0033FE  6F72               	movwf	___ftpack@sign& (0+255),b
 11196  003400  ECC5  F00E         	call	___ftpack	;wreg free
 11197  003404  C06E  F076         	movff	?___ftpack,?___lbtoft
 11198  003408  C06F  F077         	movff	?___ftpack+1,?___lbtoft+1
 11199  00340C  C070  F078         	movff	?___ftpack+2,?___lbtoft+2
 11200  003410  D000               	goto	l1324
 11201  003412                     l1324:
 11202  003412  0012               	return		;funcret
 11203  003414                     __end_of___lbtoft:
 11204                           	opt stack 0
 11205                           tblptru	equ	0xFF8
 11206                           tblptrh	equ	0xFF7
 11207                           tblptrl	equ	0xFF6
 11208                           tablat	equ	0xFF5
 11209                           prodh	equ	0xFF4
 11210                           prodl	equ	0xFF3
 11211                           intcon	equ	0xFF2
 11212                           intcon2	equ	0xFF1
 11213                           postinc0	equ	0xFEE
 11214                           wreg	equ	0xFE8
 11215                           indf2	equ	0xFDF
 11216                           postinc2	equ	0xFDE
 11217                           postdec2	equ	0xFDD
 11218                           fsr2h	equ	0xFDA
 11219                           fsr2l	equ	0xFD9
 11220                           status	equ	0xFD8
 11221                           
 11222 ;; *************** function ___ftpack *****************
 11223 ;; Defined at:
 11224 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  arg             3   14[BANK0 ] unsigned um
 11227 ;;  exp             1   17[BANK0 ] unsigned char 
 11228 ;;  sign            1   18[BANK0 ] unsigned char 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;		None
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  3   14[BANK0 ] float 
 11233 ;; Registers used:
 11234 ;;		wreg, status,2, status,0
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11240 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;Total ram usage:        8 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; Hardware stack levels required when called:    7
 11247 ;; This function calls:
 11248 ;;		Nothing
 11249 ;; This function is called by:
 11250 ;;		___altoft
 11251 ;;		___awtoft
 11252 ;;		___ftadd
 11253 ;;		___ftdiv
 11254 ;;		___ftmul
 11255 ;;		___lbtoft
 11256 ;;		___lltoft
 11257 ;;		___lwtoft
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text88
 11262  001D8A                     __ptext88:
 11263                           	opt stack 0
 11264  001D8A                     ___ftpack:
 11265                           	opt stack 18
 11266                           
 11267                           ;incstack = 0
 11268  001D8A  0100               	movlb	0	; () banked
 11269  001D8C  5171               	movf	___ftpack@exp& (0+255),w,b
 11270  001D8E  0100               	movlb	0	; () banked
 11271  001D90  B4D8               	btfsc	status,2,c
 11272  001D92  D008               	goto	l4774
 11273                           
 11274                           ; BSR set to: 0
 11275  001D94  0100               	movlb	0	; () banked
 11276  001D96  516E               	movf	___ftpack@arg& (0+255),w,b
 11277  001D98  0100               	movlb	0	; () banked
 11278  001D9A  116F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11279  001D9C  0100               	movlb	0	; () banked
 11280  001D9E  1170               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11281  001DA0  A4D8               	btfss	status,2,c
 11282  001DA2  D013               	goto	l4780
 11283  001DA4                     l4774:
 11284                           
 11285                           ; BSR set to: 0
 11286  001DA4  0E00               	movlw	0
 11287  001DA6  0100               	movlb	0	; () banked
 11288  001DA8  6F6E               	movwf	?___ftpack& (0+255),b
 11289  001DAA  0E00               	movlw	0
 11290  001DAC  0100               	movlb	0	; () banked
 11291  001DAE  6F6F               	movwf	(?___ftpack+1)& (0+255),b
 11292  001DB0  0E00               	movlw	0
 11293  001DB2  0100               	movlb	0	; () banked
 11294  001DB4  6F70               	movwf	(?___ftpack+2)& (0+255),b
 11295                           
 11296                           ; BSR set to: 0
 11297  001DB6  D078               	goto	l1180
 11298                           
 11299                           ; BSR set to: 0
 11300  001DB8  D008               	goto	l4780
 11301  001DBA                     l4778:
 11302                           
 11303                           ; BSR set to: 0
 11304  001DBA  0100               	movlb	0	; () banked
 11305  001DBC  2B71               	incf	___ftpack@exp& (0+255),f,b
 11306  001DBE  0100               	movlb	0	; () banked
 11307  001DC0  90D8               	bcf	status,0,c
 11308  001DC2  3370               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11309  001DC4  336F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11310  001DC6  336E               	rrcf	___ftpack@arg& (0+255),f,b
 11311  001DC8  D000               	goto	l4780
 11312  001DCA                     l4780:
 11313                           
 11314                           ; BSR set to: 0
 11315  001DCA  0E00               	movlw	0
 11316  001DCC  0100               	movlb	0	; () banked
 11317  001DCE  156E               	andwf	___ftpack@arg& (0+255),w,b
 11318  001DD0  0100               	movlb	0	; () banked
 11319  001DD2  6F73               	movwf	??___ftpack& (0+255),b
 11320  001DD4  0E00               	movlw	0
 11321  001DD6  0100               	movlb	0	; () banked
 11322  001DD8  156F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11323  001DDA  0100               	movlb	0	; () banked
 11324  001DDC  6F74               	movwf	(??___ftpack+1)& (0+255),b
 11325  001DDE  0EFE               	movlw	254
 11326  001DE0  0100               	movlb	0	; () banked
 11327  001DE2  1570               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11328  001DE4  0100               	movlb	0	; () banked
 11329  001DE6  6F75               	movwf	(??___ftpack+2)& (0+255),b
 11330  001DE8  0100               	movlb	0	; () banked
 11331  001DEA  5173               	movf	??___ftpack& (0+255),w,b
 11332  001DEC  0100               	movlb	0	; () banked
 11333  001DEE  1174               	iorwf	(??___ftpack+1)& (0+255),w,b
 11334  001DF0  0100               	movlb	0	; () banked
 11335  001DF2  1175               	iorwf	(??___ftpack+2)& (0+255),w,b
 11336  001DF4  B4D8               	btfsc	status,2,c
 11337  001DF6  D013               	goto	l4786
 11338  001DF8  D7E0               	goto	l4778
 11339                           
 11340                           ; BSR set to: 0
 11341  001DFA  D011               	goto	l4786
 11342  001DFC                     l4782:
 11343                           
 11344                           ; BSR set to: 0
 11345  001DFC  0100               	movlb	0	; () banked
 11346  001DFE  2B71               	incf	___ftpack@exp& (0+255),f,b
 11347                           
 11348                           ; BSR set to: 0
 11349  001E00  0E01               	movlw	1
 11350  001E02  0100               	movlb	0	; () banked
 11351  001E04  276E               	addwf	___ftpack@arg& (0+255),f,b
 11352  001E06  0E00               	movlw	0
 11353  001E08  0100               	movlb	0	; () banked
 11354  001E0A  236F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11355  001E0C  0E00               	movlw	0
 11356  001E0E  0100               	movlb	0	; () banked
 11357  001E10  2370               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11358  001E12  0100               	movlb	0	; () banked
 11359  001E14  90D8               	bcf	status,0,c
 11360  001E16  3370               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11361  001E18  336F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11362  001E1A  336E               	rrcf	___ftpack@arg& (0+255),f,b
 11363  001E1C  D000               	goto	l4786
 11364  001E1E                     l4786:
 11365                           
 11366                           ; BSR set to: 0
 11367  001E1E  0E00               	movlw	0
 11368  001E20  0100               	movlb	0	; () banked
 11369  001E22  156E               	andwf	___ftpack@arg& (0+255),w,b
 11370  001E24  0100               	movlb	0	; () banked
 11371  001E26  6F73               	movwf	??___ftpack& (0+255),b
 11372  001E28  0E00               	movlw	0
 11373  001E2A  0100               	movlb	0	; () banked
 11374  001E2C  156F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11375  001E2E  0100               	movlb	0	; () banked
 11376  001E30  6F74               	movwf	(??___ftpack+1)& (0+255),b
 11377  001E32  0EFF               	movlw	255
 11378  001E34  0100               	movlb	0	; () banked
 11379  001E36  1570               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11380  001E38  0100               	movlb	0	; () banked
 11381  001E3A  6F75               	movwf	(??___ftpack+2)& (0+255),b
 11382  001E3C  0100               	movlb	0	; () banked
 11383  001E3E  5173               	movf	??___ftpack& (0+255),w,b
 11384  001E40  0100               	movlb	0	; () banked
 11385  001E42  1174               	iorwf	(??___ftpack+1)& (0+255),w,b
 11386  001E44  0100               	movlb	0	; () banked
 11387  001E46  1175               	iorwf	(??___ftpack+2)& (0+255),w,b
 11388  001E48  B4D8               	btfsc	status,2,c
 11389  001E4A  D00A               	goto	l4790
 11390  001E4C  D7D7               	goto	l4782
 11391                           
 11392                           ; BSR set to: 0
 11393  001E4E  D008               	goto	l4790
 11394  001E50                     l4788:
 11395                           
 11396                           ; BSR set to: 0
 11397  001E50  0100               	movlb	0	; () banked
 11398  001E52  0771               	decf	___ftpack@exp& (0+255),f,b
 11399  001E54  0100               	movlb	0	; () banked
 11400  001E56  90D8               	bcf	status,0,c
 11401  001E58  376E               	rlcf	___ftpack@arg& (0+255),f,b
 11402  001E5A  376F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11403  001E5C  3770               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11404  001E5E  D000               	goto	l4790
 11405  001E60                     l4790:
 11406                           
 11407                           ; BSR set to: 0
 11408  001E60  0100               	movlb	0	; () banked
 11409  001E62  BF6F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 11410  001E64  D005               	goto	l1191
 11411                           
 11412                           ; BSR set to: 0
 11413  001E66  0E02               	movlw	2
 11414  001E68  0100               	movlb	0	; () banked
 11415  001E6A  6171               	cpfslt	___ftpack@exp& (0+255),b
 11416  001E6C  D7F1               	goto	l4788
 11417  001E6E  D000               	goto	l1191
 11418  001E70                     l1191:
 11419                           
 11420                           ; BSR set to: 0
 11421  001E70  0100               	movlb	0	; () banked
 11422  001E72  B171               	btfsc	___ftpack@exp& (0+255),0,b
 11423  001E74  D003               	goto	l4796
 11424                           
 11425                           ; BSR set to: 0
 11426  001E76  0100               	movlb	0	; () banked
 11427  001E78  9F6F               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11428  001E7A  D000               	goto	l4796
 11429  001E7C                     l4796:
 11430                           
 11431                           ; BSR set to: 0
 11432  001E7C  0100               	movlb	0	; () banked
 11433  001E7E  90D8               	bcf	status,0,c
 11434  001E80  3371               	rrcf	___ftpack@exp& (0+255),f,b
 11435  001E82  0100               	movlb	0	; () banked
 11436  001E84  5171               	movf	___ftpack@exp& (0+255),w,b
 11437  001E86  0100               	movlb	0	; () banked
 11438  001E88  1370               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11439                           
 11440                           ; BSR set to: 0
 11441  001E8A  0100               	movlb	0	; () banked
 11442  001E8C  5172               	movf	___ftpack@sign& (0+255),w,b
 11443  001E8E  0100               	movlb	0	; () banked
 11444  001E90  B4D8               	btfsc	status,2,c
 11445  001E92  D003               	goto	l4802
 11446                           
 11447                           ; BSR set to: 0
 11448  001E94  0100               	movlb	0	; () banked
 11449  001E96  8F70               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11450  001E98  D000               	goto	l4802
 11451  001E9A                     l4802:
 11452                           
 11453                           ; BSR set to: 0
 11454  001E9A  C06E  F06E         	movff	___ftpack@arg,?___ftpack
 11455  001E9E  C06F  F06F         	movff	___ftpack@arg+1,?___ftpack+1
 11456  001EA2  C070  F070         	movff	___ftpack@arg+2,?___ftpack+2
 11457  001EA6  D000               	goto	l1180
 11458  001EA8                     l1180:
 11459                           
 11460                           ; BSR set to: 0
 11461  001EA8  0012               	return		;funcret
 11462  001EAA                     __end_of___ftpack:
 11463                           	opt stack 0
 11464                           tblptru	equ	0xFF8
 11465                           tblptrh	equ	0xFF7
 11466                           tblptrl	equ	0xFF6
 11467                           tablat	equ	0xFF5
 11468                           prodh	equ	0xFF4
 11469                           prodl	equ	0xFF3
 11470                           intcon	equ	0xFF2
 11471                           intcon2	equ	0xFF1
 11472                           postinc0	equ	0xFEE
 11473                           wreg	equ	0xFE8
 11474                           indf2	equ	0xFDF
 11475                           postinc2	equ	0xFDE
 11476                           postdec2	equ	0xFDD
 11477                           fsr2h	equ	0xFDA
 11478                           fsr2l	equ	0xFD9
 11479                           status	equ	0xFD8
 11480                           
 11481 ;; *************** function _CalculateSensorError *****************
 11482 ;; Defined at:
 11483 ;;		line 391 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  sum             2   14[BANK0 ] PTR const unsigned char 
 11486 ;;		 -> main@sensor_sum(1), 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  2   14[BANK0 ] int 
 11491 ;; Registers used:
 11492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;Total ram usage:        2 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    7
 11505 ;; This function calls:
 11506 ;;		Nothing
 11507 ;; This function is called by:
 11508 ;;		_main
 11509 ;; This function uses a non-reentrant model
 11510 ;;
 11511                           
 11512                           	psect	text89
 11513  00277E                     __ptext89:
 11514                           	opt stack 0
 11515  00277E                     _CalculateSensorError:
 11516                           	opt stack 23
 11517                           
 11518                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 393: switch(*sum) {
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;incstack = 0
 11522  00277E  D031               	goto	l5926
 11523  002780                     l5892:
 11524                           
 11525                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 395: return(64);
 11526  002780  0E00               	movlw	0
 11527  002782  0100               	movlb	0	; () banked
 11528  002784  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11529  002786  0E40               	movlw	64
 11530  002788  D051               	goto	L21
 11531                           
 11532                           ; BSR set to: 0
 11533  00278A  D052               	goto	l211
 11534  00278C                     l5896:
 11535                           
 11536                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 397: return(27);
 11537  00278C  0E00               	movlw	0
 11538  00278E  0100               	movlb	0	; () banked
 11539  002790  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11540  002792  0E1B               	movlw	27
 11541  002794  D04B               	goto	L21
 11542                           
 11543                           ; BSR set to: 0
 11544  002796  D04C               	goto	l211
 11545  002798                     l5900:
 11546                           
 11547                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 399: return(8);
 11548  002798  0E00               	movlw	0
 11549  00279A  0100               	movlb	0	; () banked
 11550  00279C  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11551  00279E  0E08               	movlw	8
 11552  0027A0  D045               	goto	L21
 11553                           
 11554                           ; BSR set to: 0
 11555  0027A2  D046               	goto	l211
 11556  0027A4                     l5904:
 11557                           
 11558                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 401: return(1);
 11559  0027A4  0E00               	movlw	0
 11560  0027A6  0100               	movlb	0	; () banked
 11561  0027A8  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11562  0027AA  0E01               	movlw	1
 11563  0027AC  D03F               	goto	L21
 11564                           
 11565                           ; BSR set to: 0
 11566  0027AE  D040               	goto	l211
 11567                           
 11568                           ; BSR set to: 0
 11569                           
 11570                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 402: case(4) :
 11571  0027B0  D039               	goto	l5928
 11572                           
 11573                           ; BSR set to: 0
 11574                           
 11575                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 403: return(0);
 11576  0027B2  D03E               	goto	l211
 11577  0027B4                     l216:
 11578                           
 11579                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 405: return(-1);
 11580  0027B4  0100               	movlb	0	; () banked
 11581  0027B6  696E               	setf	?_CalculateSensorError& (0+255),b
 11582  0027B8  696F               	setf	(?_CalculateSensorError+1)& (0+255),b
 11583  0027BA  D03A               	goto	l211
 11584  0027BC                     l5912:
 11585                           
 11586                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 407: return(-8);
 11587  0027BC  0EFF               	movlw	255
 11588  0027BE  0100               	movlb	0	; () banked
 11589  0027C0  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11590  0027C2  0EF8               	movlw	248
 11591  0027C4  D033               	goto	L21
 11592                           
 11593                           ; BSR set to: 0
 11594  0027C6  D034               	goto	l211
 11595  0027C8                     l5916:
 11596                           
 11597                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 409: return(-27);
 11598  0027C8  0EFF               	movlw	255
 11599  0027CA  0100               	movlb	0	; () banked
 11600  0027CC  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11601  0027CE  0EE5               	movlw	229
 11602  0027D0  D02D               	goto	L21
 11603                           
 11604                           ; BSR set to: 0
 11605  0027D2  D02E               	goto	l211
 11606  0027D4                     l5920:
 11607                           
 11608                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 411: return(-64);
 11609  0027D4  0EFF               	movlw	255
 11610  0027D6  0100               	movlb	0	; () banked
 11611  0027D8  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11612  0027DA  0EC0               	movlw	192
 11613  0027DC  D027               	goto	L21
 11614                           
 11615                           ; BSR set to: 0
 11616  0027DE  D028               	goto	l211
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 414: }
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 413: break;
 11623                           
 11624                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 412: default :
 11625  0027E0  D021               	goto	l5928
 11626  0027E2                     l5926:
 11627  0027E2  C06E  FFD9         	movff	CalculateSensorError@sum,fsr2l
 11628  0027E6  C06F  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
 11629  0027EA  50DF               	movf	indf2,w,c
 11630                           
 11631                           ; Switch size 1, requested type "space"
 11632                           ; Number of cases is 9, Range of values is 1 to 24
 11633                           ; switch strategies available:
 11634                           ; Name         Instructions Cycles
 11635                           ; simple_byte           28    15 (average)
 11636                           ;	Chosen strategy is simple_byte
 11637  0027EC  0A01               	xorlw	1	; case 1
 11638  0027EE  B4D8               	btfsc	status,2,c
 11639  0027F0  D7F1               	goto	l5920
 11640  0027F2  0A03               	xorlw	3	; case 2
 11641  0027F4  B4D8               	btfsc	status,2,c
 11642  0027F6  D7E2               	goto	l5912
 11643  0027F8  0A01               	xorlw	1	; case 3
 11644  0027FA  B4D8               	btfsc	status,2,c
 11645  0027FC  D7E5               	goto	l5916
 11646  0027FE  0A07               	xorlw	7	; case 4
 11647  002800  B4D8               	btfsc	status,2,c
 11648  002802  D010               	goto	l5928
 11649  002804  0A02               	xorlw	2	; case 6
 11650  002806  B4D8               	btfsc	status,2,c
 11651  002808  D7D5               	goto	l216
 11652  00280A  0A0E               	xorlw	14	; case 8
 11653  00280C  B4D8               	btfsc	status,2,c
 11654  00280E  D7C4               	goto	l5900
 11655  002810  0A04               	xorlw	4	; case 12
 11656  002812  B4D8               	btfsc	status,2,c
 11657  002814  D7C7               	goto	l5904
 11658  002816  0A1C               	xorlw	28	; case 16
 11659  002818  B4D8               	btfsc	status,2,c
 11660  00281A  D7B2               	goto	l5892
 11661  00281C  0A08               	xorlw	8	; case 24
 11662  00281E  B4D8               	btfsc	status,2,c
 11663  002820  D7B5               	goto	l5896
 11664  002822  D000               	goto	l5928
 11665  002824                     l5928:
 11666                           
 11667                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 416: return(0);
 11668  002824  0E00               	movlw	0
 11669  002826  0100               	movlb	0	; () banked
 11670  002828  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 11671  00282A  0E00               	movlw	0
 11672  00282C                     L21:
 11673  00282C  6F6E               	movwf	?_CalculateSensorError& (0+255),b
 11674  00282E  D000               	goto	l211
 11675  002830                     l211:
 11676                           
 11677                           ; BSR set to: 0
 11678  002830  0012               	return		;funcret
 11679  002832                     __end_of_CalculateSensorError:
 11680                           	opt stack 0
 11681                           tblptru	equ	0xFF8
 11682                           tblptrh	equ	0xFF7
 11683                           tblptrl	equ	0xFF6
 11684                           tablat	equ	0xFF5
 11685                           prodh	equ	0xFF4
 11686                           prodl	equ	0xFF3
 11687                           intcon	equ	0xFF2
 11688                           intcon2	equ	0xFF1
 11689                           postinc0	equ	0xFEE
 11690                           wreg	equ	0xFE8
 11691                           indf2	equ	0xFDF
 11692                           postinc2	equ	0xFDE
 11693                           postdec2	equ	0xFDD
 11694                           fsr2h	equ	0xFDA
 11695                           fsr2l	equ	0xFD9
 11696                           status	equ	0xFD8
 11697                           
 11698 ;; *************** function _isrLP *****************
 11699 ;; Defined at:
 11700 ;;		line 636 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;		None               void
 11707 ;; Registers used:
 11708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;Total ram usage:       17 bytes
 11719 ;; Hardware stack levels used:    1
 11720 ;; Hardware stack levels required when called:    6
 11721 ;; This function calls:
 11722 ;;		_WirelessTx_ISR
 11723 ;;		i1_ConvertADC
 11724 ;;		i1_ReadADC
 11725 ;;		i1_SetADCChannel
 11726 ;; This function is called by:
 11727 ;;		Interrupt level 1
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	intcodelo
 11732  000018                     __pintcodelo:
 11733                           	opt stack 0
 11734  000018                     _isrLP:
 11735                           	opt stack 18
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;incstack = 0
 11739  000018  CFD8 F02D          	movff	status,??_isrLP
 11740  00001C  CFE8 F02E          	movff	wreg,??_isrLP+1
 11741  000020  CFE0 F02F          	movff	bsr,??_isrLP+2
 11742  000024  CFFA F030          	movff	pclath,??_isrLP+3
 11743  000028  CFFB F031          	movff	pclatu,??_isrLP+4
 11744  00002C  CFE9 F032          	movff	fsr0l,??_isrLP+5
 11745  000030  CFEA F033          	movff	fsr0h,??_isrLP+6
 11746  000034  CFE1 F034          	movff	fsr1l,??_isrLP+7
 11747  000038  CFE2 F035          	movff	fsr1h,??_isrLP+8
 11748  00003C  CFD9 F036          	movff	fsr2l,??_isrLP+9
 11749  000040  CFDA F037          	movff	fsr2h,??_isrLP+10
 11750  000044  CFF3 F038          	movff	prodl,??_isrLP+11
 11751  000048  CFF4 F039          	movff	prodh,??_isrLP+12
 11752  00004C  CFF6 F03A          	movff	tblptrl,??_isrLP+13
 11753  000050  CFF7 F03B          	movff	tblptrh,??_isrLP+14
 11754  000054  CFF8 F03C          	movff	tblptru,??_isrLP+15
 11755  000058  CFF5 F03D          	movff	tablat,??_isrLP+16
 11756                           
 11757                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 651: if (PIR1bits.ADIF == 1) {
 11758  00005C  AC9E               	btfss	3998,6,c	;volatile
 11759  00005E  D01D               	goto	i1l299
 11760                           
 11761                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 652: PIR1bits.ADIF = 0;
 11762  000060  9C9E               	bcf	3998,6,c	;volatile
 11763                           
 11764                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 653: if (sensor_acq_index < 5) {
 11765  000062  0E05               	movlw	5
 11766  000064  601B               	cpfslt	_sensor_acq_index,c	;volatile
 11767  000066  D015               	goto	i1l4608
 11768                           
 11769                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 654: *(sensor_readings_raw + sensor_acq_index) = 
      +                          ReadADC();
 11770  000068  EC9A  F01B         	call	i1_ReadADC	;wreg free
 11771  00006C  501B               	movf	_sensor_acq_index,w,c	;volatile
 11772  00006E  0D02               	mullw	2
 11773  000070  0ED0               	movlw	low _sensor_readings_raw
 11774  000072  24F3               	addwf	prodl,w,c
 11775  000074  6ED9               	movwf	fsr2l,c
 11776  000076  0E00               	movlw	high _sensor_readings_raw
 11777  000078  20F4               	addwfc	prodh,w,c
 11778  00007A  6EDA               	movwf	fsr2h,c
 11779  00007C  C025  FFDE         	movff	?i1_ReadADC,postinc2
 11780  000080  C026  FFDD         	movff	?i1_ReadADC+1,postdec2
 11781                           
 11782                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 655: sensor_acq_index++;
 11783  000084  2A1B               	incf	_sensor_acq_index,f,c	;volatile
 11784                           
 11785                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 656: SetADCChannel(sensor_acq_index);
 11786  000086  501B               	movf	_sensor_acq_index,w,c	;volatile
 11787  000088  EC50  F011         	call	i1_SetADCChannel
 11788                           
 11789                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 657: ConvertADC();
 11790  00008C  ECE9  F01B         	call	i1_ConvertADC	;wreg free
 11791                           
 11792                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 658: } else {
 11793  000090  D00A               	goto	i1l304
 11794  000092                     i1l4608:
 11795                           
 11796                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 659: sensor_acq_done = 1;
 11797  000092  0E01               	movlw	1
 11798  000094  6E1A               	movwf	_sensor_acq_done,c	;volatile
 11799                           
 11800                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 660: PIE1bits.ADIE = 0;
 11801  000096  9C9D               	bcf	3997,6,c	;volatile
 11802                           
 11803                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 661: }
 11804                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 662: }
 11805  000098  D006               	goto	i1l304
 11806  00009A                     i1l299:
 11807                           
 11808                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 664: else if(PIR1bits.TX1IF == 1) {
 11809  00009A  A89E               	btfss	3998,4,c	;volatile
 11810  00009C  D004               	goto	i1l304
 11811                           
 11812                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 665: PIR1bits.TX1IF = 0;
 11813  00009E  989E               	bcf	3998,4,c	;volatile
 11814                           
 11815                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 666: WirelessTx_ISR();
 11816  0000A0  EC6C  F01A         	call	_WirelessTx_ISR	;wreg free
 11817  0000A4  D000               	goto	i1l304
 11818  0000A6                     i1l304:
 11819  0000A6  C03D  FFF5         	movff	??_isrLP+16,tablat
 11820  0000AA  C03C  FFF8         	movff	??_isrLP+15,tblptru
 11821  0000AE  C03B  FFF7         	movff	??_isrLP+14,tblptrh
 11822  0000B2  C03A  FFF6         	movff	??_isrLP+13,tblptrl
 11823  0000B6  C039  FFF4         	movff	??_isrLP+12,prodh
 11824  0000BA  C038  FFF3         	movff	??_isrLP+11,prodl
 11825  0000BE  C037  FFDA         	movff	??_isrLP+10,fsr2h
 11826  0000C2  C036  FFD9         	movff	??_isrLP+9,fsr2l
 11827  0000C6  C035  FFE2         	movff	??_isrLP+8,fsr1h
 11828  0000CA  C034  FFE1         	movff	??_isrLP+7,fsr1l
 11829  0000CE  C033  FFEA         	movff	??_isrLP+6,fsr0h
 11830  0000D2  C032  FFE9         	movff	??_isrLP+5,fsr0l
 11831  0000D6  C031  FFFB         	movff	??_isrLP+4,pclatu
 11832  0000DA  C030  FFFA         	movff	??_isrLP+3,pclath
 11833  0000DE  C02F  FFE0         	movff	??_isrLP+2,bsr
 11834  0000E2  C02E  FFE8         	movff	??_isrLP+1,wreg
 11835  0000E6  C02D  FFD8         	movff	??_isrLP,status
 11836  0000EA  0010               	retfie	
 11837  0000EC                     __end_of_isrLP:
 11838                           	opt stack 0
 11839                           pclatu	equ	0xFFB
 11840                           pclath	equ	0xFFA
 11841                           tblptru	equ	0xFF8
 11842                           tblptrh	equ	0xFF7
 11843                           tblptrl	equ	0xFF6
 11844                           tablat	equ	0xFF5
 11845                           prodh	equ	0xFF4
 11846                           prodl	equ	0xFF3
 11847                           intcon	equ	0xFF2
 11848                           intcon2	equ	0xFF1
 11849                           postinc0	equ	0xFEE
 11850                           fsr0h	equ	0xFEA
 11851                           fsr0l	equ	0xFE9
 11852                           wreg	equ	0xFE8
 11853                           fsr1h	equ	0xFE2
 11854                           fsr1l	equ	0xFE1
 11855                           bsr	equ	0xFE0
 11856                           indf2	equ	0xFDF
 11857                           postinc2	equ	0xFDE
 11858                           postdec2	equ	0xFDD
 11859                           fsr2h	equ	0xFDA
 11860                           fsr2l	equ	0xFD9
 11861                           status	equ	0xFD8
 11862                           
 11863 ;; *************** function i1_SetADCChannel *****************
 11864 ;; Defined at:
 11865 ;;		line 255 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  channel         1    wreg     unsigned char 
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;  channel         1    2[COMRAM] unsigned char 
 11870 ;; Return value:  Size  Location     Type
 11871 ;;		None               void
 11872 ;; Registers used:
 11873 ;;		wreg, status,2, status,0, cstack
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11883 ;;Total ram usage:        1 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    4
 11886 ;; This function calls:
 11887 ;;		i1_SetChanADC
 11888 ;; This function is called by:
 11889 ;;		_isrLP
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           	psect	text91
 11894  0022A0                     __ptext91:
 11895                           	opt stack 0
 11896  0022A0                     i1_SetADCChannel:
 11897                           	opt stack 19
 11898                           
 11899                           ;incstack = 0
 11900                           ;i1SetADCChannel@channel stored from wreg
 11901  0022A0  6E27               	movwf	i1SetADCChannel@channel,c
 11902                           
 11903                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 257: switch (channel) {
 11904  0022A2  D040               	goto	i1l4578
 11905  0022A4                     i1l4544:
 11906                           
 11907                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 259: SetChanADC(0b10000111);
 11908  0022A4  0E87               	movlw	135
 11909  0022A6  EC34  F01B         	call	i1_SetChanADC
 11910                           
 11911                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 260: break;
 11912  0022AA  D06E               	goto	i1l176
 11913  0022AC                     i1l4546:
 11914                           
 11915                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 262: SetChanADC(0b10001111);
 11916  0022AC  0E8F               	movlw	143
 11917  0022AE  EC34  F01B         	call	i1_SetChanADC
 11918                           
 11919                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 263: break;
 11920  0022B2  D06A               	goto	i1l176
 11921  0022B4                     i1l4548:
 11922                           
 11923                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 265: SetChanADC(0b10010111);
 11924  0022B4  0E97               	movlw	151
 11925  0022B6  EC34  F01B         	call	i1_SetChanADC
 11926                           
 11927                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 266: break;
 11928  0022BA  D066               	goto	i1l176
 11929  0022BC                     i1l4550:
 11930                           
 11931                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 268: SetChanADC(0b10011111);
 11932  0022BC  0E9F               	movlw	159
 11933  0022BE  EC34  F01B         	call	i1_SetChanADC
 11934                           
 11935                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 269: break;
 11936  0022C2  D062               	goto	i1l176
 11937  0022C4                     i1l4552:
 11938                           
 11939                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 271: SetChanADC(0b10100111);
 11940  0022C4  0EA7               	movlw	167
 11941  0022C6  EC34  F01B         	call	i1_SetChanADC
 11942                           
 11943                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 272: break;
 11944  0022CA  D05E               	goto	i1l176
 11945  0022CC                     i1l4554:
 11946                           
 11947                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 274: SetChanADC(0b10101111);
 11948  0022CC  0EAF               	movlw	175
 11949  0022CE  EC34  F01B         	call	i1_SetChanADC
 11950                           
 11951                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 275: break;
 11952  0022D2  D05A               	goto	i1l176
 11953  0022D4                     i1l4556:
 11954                           
 11955                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 277: SetChanADC(0b10110111);
 11956  0022D4  0EB7               	movlw	183
 11957  0022D6  EC34  F01B         	call	i1_SetChanADC
 11958                           
 11959                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 278: break;
 11960  0022DA  D056               	goto	i1l176
 11961  0022DC                     i1l4558:
 11962                           
 11963                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 280: SetChanADC(0b10111111);
 11964  0022DC  0EBF               	movlw	191
 11965  0022DE  EC34  F01B         	call	i1_SetChanADC
 11966                           
 11967                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 281: break;
 11968  0022E2  D052               	goto	i1l176
 11969  0022E4                     i1l4560:
 11970                           
 11971                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 283: SetChanADC(0b11000111);
 11972  0022E4  0EC7               	movlw	199
 11973  0022E6  EC34  F01B         	call	i1_SetChanADC
 11974                           
 11975                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 284: break;
 11976  0022EA  D04E               	goto	i1l176
 11977  0022EC                     i1l4562:
 11978                           
 11979                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 286: SetChanADC(0b11001111);
 11980  0022EC  0ECF               	movlw	207
 11981  0022EE  EC34  F01B         	call	i1_SetChanADC
 11982                           
 11983                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 287: break;
 11984  0022F2  D04A               	goto	i1l176
 11985  0022F4                     i1l4564:
 11986                           
 11987                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 289: SetChanADC(0b11010111);
 11988  0022F4  0ED7               	movlw	215
 11989  0022F6  EC34  F01B         	call	i1_SetChanADC
 11990                           
 11991                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 290: break;
 11992  0022FA  D046               	goto	i1l176
 11993  0022FC                     i1l4566:
 11994                           
 11995                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 292: SetChanADC(0b11011111);
 11996  0022FC  0EDF               	movlw	223
 11997  0022FE  EC34  F01B         	call	i1_SetChanADC
 11998                           
 11999                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 293: break;
 12000  002302  D042               	goto	i1l176
 12001  002304                     i1l4568:
 12002                           
 12003                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 295: SetChanADC(0b11100111);
 12004  002304  0EE7               	movlw	231
 12005  002306  EC34  F01B         	call	i1_SetChanADC
 12006                           
 12007                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 296: break;
 12008  00230A  D03E               	goto	i1l176
 12009  00230C                     i1l4570:
 12010                           
 12011                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 298: SetChanADC(0b11101111);
 12012  00230C  0EEF               	movlw	239
 12013  00230E  EC34  F01B         	call	i1_SetChanADC
 12014                           
 12015                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 299: break;
 12016  002312  D03A               	goto	i1l176
 12017  002314                     i1l4572:
 12018                           
 12019                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 301: SetChanADC(0b11110111);
 12020  002314  0EF7               	movlw	247
 12021  002316  EC34  F01B         	call	i1_SetChanADC
 12022                           
 12023                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 302: break;
 12024  00231A  D036               	goto	i1l176
 12025  00231C                     i1l4574:
 12026                           
 12027                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 304: SetChanADC(0b11111111);
 12028  00231C  0EFF               	movlw	255
 12029  00231E  EC34  F01B         	call	i1_SetChanADC
 12030                           
 12031                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 308: }
 12032                           
 12033                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 307: break;
 12034                           
 12035                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 306: default:
 12036                           
 12037                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 305: break;
 12038  002322  D032               	goto	i1l176
 12039  002324                     i1l4578:
 12040  002324  5027               	movf	i1SetADCChannel@channel,w,c
 12041                           
 12042                           ; Switch size 1, requested type "space"
 12043                           ; Number of cases is 16, Range of values is 0 to 15
 12044                           ; switch strategies available:
 12045                           ; Name         Instructions Cycles
 12046                           ; simple_byte           49    25 (average)
 12047                           ;	Chosen strategy is simple_byte
 12048  002326  0A00               	xorlw	0	; case 0
 12049  002328  B4D8               	btfsc	status,2,c
 12050  00232A  D7BC               	goto	i1l4544
 12051  00232C  0A01               	xorlw	1	; case 1
 12052  00232E  B4D8               	btfsc	status,2,c
 12053  002330  D7BD               	goto	i1l4546
 12054  002332  0A03               	xorlw	3	; case 2
 12055  002334  B4D8               	btfsc	status,2,c
 12056  002336  D7BE               	goto	i1l4548
 12057  002338  0A01               	xorlw	1	; case 3
 12058  00233A  B4D8               	btfsc	status,2,c
 12059  00233C  D7BF               	goto	i1l4550
 12060  00233E  0A07               	xorlw	7	; case 4
 12061  002340  B4D8               	btfsc	status,2,c
 12062  002342  D7C0               	goto	i1l4552
 12063  002344  0A01               	xorlw	1	; case 5
 12064  002346  B4D8               	btfsc	status,2,c
 12065  002348  D7C1               	goto	i1l4554
 12066  00234A  0A03               	xorlw	3	; case 6
 12067  00234C  B4D8               	btfsc	status,2,c
 12068  00234E  D7C2               	goto	i1l4556
 12069  002350  0A01               	xorlw	1	; case 7
 12070  002352  B4D8               	btfsc	status,2,c
 12071  002354  D7C3               	goto	i1l4558
 12072  002356  0A0F               	xorlw	15	; case 8
 12073  002358  B4D8               	btfsc	status,2,c
 12074  00235A  D7C4               	goto	i1l4560
 12075  00235C  0A01               	xorlw	1	; case 9
 12076  00235E  B4D8               	btfsc	status,2,c
 12077  002360  D7C5               	goto	i1l4562
 12078  002362  0A03               	xorlw	3	; case 10
 12079  002364  B4D8               	btfsc	status,2,c
 12080  002366  D7C6               	goto	i1l4564
 12081  002368  0A01               	xorlw	1	; case 11
 12082  00236A  B4D8               	btfsc	status,2,c
 12083  00236C  D7C7               	goto	i1l4566
 12084  00236E  0A07               	xorlw	7	; case 12
 12085  002370  B4D8               	btfsc	status,2,c
 12086  002372  D7C8               	goto	i1l4568
 12087  002374  0A01               	xorlw	1	; case 13
 12088  002376  B4D8               	btfsc	status,2,c
 12089  002378  D7C9               	goto	i1l4570
 12090  00237A  0A03               	xorlw	3	; case 14
 12091  00237C  B4D8               	btfsc	status,2,c
 12092  00237E  D7CA               	goto	i1l4572
 12093  002380  0A01               	xorlw	1	; case 15
 12094  002382  B4D8               	btfsc	status,2,c
 12095  002384  D7CB               	goto	i1l4574
 12096  002386  D000               	goto	i1l176
 12097  002388                     i1l176:
 12098  002388  0012               	return		;funcret
 12099  00238A                     __end_ofi1_SetADCChannel:
 12100                           	opt stack 0
 12101                           pclatu	equ	0xFFB
 12102                           pclath	equ	0xFFA
 12103                           tblptru	equ	0xFF8
 12104                           tblptrh	equ	0xFF7
 12105                           tblptrl	equ	0xFF6
 12106                           tablat	equ	0xFF5
 12107                           prodh	equ	0xFF4
 12108                           prodl	equ	0xFF3
 12109                           intcon	equ	0xFF2
 12110                           intcon2	equ	0xFF1
 12111                           postinc0	equ	0xFEE
 12112                           fsr0h	equ	0xFEA
 12113                           fsr0l	equ	0xFE9
 12114                           wreg	equ	0xFE8
 12115                           fsr1h	equ	0xFE2
 12116                           fsr1l	equ	0xFE1
 12117                           bsr	equ	0xFE0
 12118                           indf2	equ	0xFDF
 12119                           postinc2	equ	0xFDE
 12120                           postdec2	equ	0xFDD
 12121                           fsr2h	equ	0xFDA
 12122                           fsr2l	equ	0xFD9
 12123                           status	equ	0xFD8
 12124                           
 12125 ;; *************** function i1_SetChanADC *****************
 12126 ;; Defined at:
 12127 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;  channel         1    wreg     unsigned char 
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;  channel         1    1[COMRAM] unsigned char 
 12132 ;; Return value:  Size  Location     Type
 12133 ;;		None               void
 12134 ;; Registers used:
 12135 ;;		wreg, status,2, status,0
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12145 ;;Total ram usage:        2 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:    3
 12148 ;; This function calls:
 12149 ;;		Nothing
 12150 ;; This function is called by:
 12151 ;;		i1_SetADCChannel
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text92
 12156  003668                     __ptext92:
 12157                           	opt stack 0
 12158  003668                     i1_SetChanADC:
 12159                           	opt stack 19
 12160                           
 12161                           ;incstack = 0
 12162                           ;i1SetChanADC@channel stored from wreg
 12163  003668  6E26               	movwf	i1SetChanADC@channel,c
 12164  00366A  CFC2 F025          	movff	4034,??i1_SetChanADC	;volatile
 12165  00366E  0EC3               	movlw	195
 12166  003670  1625               	andwf	??i1_SetChanADC,f,c
 12167  003672  90D8               	bcf	status,0,c
 12168  003674  3026               	rrcf	i1SetChanADC@channel,w,c
 12169  003676  0B3C               	andlw	60
 12170  003678  1025               	iorwf	??i1_SetChanADC,w,c
 12171  00367A  6EC2               	movwf	4034,c	;volatile
 12172  00367C  0012               	return		;funcret
 12173  00367E                     __end_ofi1_SetChanADC:
 12174                           	opt stack 0
 12175                           pclatu	equ	0xFFB
 12176                           pclath	equ	0xFFA
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           intcon2	equ	0xFF1
 12185                           postinc0	equ	0xFEE
 12186                           fsr0h	equ	0xFEA
 12187                           fsr0l	equ	0xFE9
 12188                           wreg	equ	0xFE8
 12189                           fsr1h	equ	0xFE2
 12190                           fsr1l	equ	0xFE1
 12191                           bsr	equ	0xFE0
 12192                           indf2	equ	0xFDF
 12193                           postinc2	equ	0xFDE
 12194                           postdec2	equ	0xFDD
 12195                           fsr2h	equ	0xFDA
 12196                           fsr2l	equ	0xFD9
 12197                           status	equ	0xFD8
 12198                           
 12199 ;; *************** function i1_ReadADC *****************
 12200 ;; Defined at:
 12201 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;		None
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  2    0[COMRAM] int 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;Total ram usage:        4 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    3
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_isrLP
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           	psect	text93
 12230  003734                     __ptext93:
 12231                           	opt stack 0
 12232  003734                     i1_ReadADC:
 12233                           	opt stack 20
 12234                           
 12235                           ;incstack = 0
 12236  003734  50C4               	movf	4036,w,c	;volatile
 12237  003736  6E27               	movwf	??i1_ReadADC& (0+255),c
 12238  003738  50C3               	movf	4035,w,c	;volatile
 12239  00373A  6E25               	movwf	?i1_ReadADC,c
 12240  00373C  C027  F026         	movff	??i1_ReadADC,?i1_ReadADC+1
 12241  003740  D000               	goto	i1l686
 12242  003742                     i1l686:
 12243  003742  0012               	return		;funcret
 12244  003744                     __end_ofi1_ReadADC:
 12245                           	opt stack 0
 12246                           pclatu	equ	0xFFB
 12247                           pclath	equ	0xFFA
 12248                           tblptru	equ	0xFF8
 12249                           tblptrh	equ	0xFF7
 12250                           tblptrl	equ	0xFF6
 12251                           tablat	equ	0xFF5
 12252                           prodh	equ	0xFF4
 12253                           prodl	equ	0xFF3
 12254                           intcon	equ	0xFF2
 12255                           intcon2	equ	0xFF1
 12256                           postinc0	equ	0xFEE
 12257                           fsr0h	equ	0xFEA
 12258                           fsr0l	equ	0xFE9
 12259                           wreg	equ	0xFE8
 12260                           fsr1h	equ	0xFE2
 12261                           fsr1l	equ	0xFE1
 12262                           bsr	equ	0xFE0
 12263                           indf2	equ	0xFDF
 12264                           postinc2	equ	0xFDE
 12265                           postdec2	equ	0xFDD
 12266                           fsr2h	equ	0xFDA
 12267                           fsr2l	equ	0xFD9
 12268                           status	equ	0xFD8
 12269                           
 12270 ;; *************** function i1_ConvertADC *****************
 12271 ;; Defined at:
 12272 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;		None
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;		None
 12277 ;; Return value:  Size  Location     Type
 12278 ;;		None               void
 12279 ;; Registers used:
 12280 ;;		None
 12281 ;; Tracked objects:
 12282 ;;		On entry : 0/0
 12283 ;;		On exit  : 0/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12290 ;;Total ram usage:        0 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    3
 12293 ;; This function calls:
 12294 ;;		Nothing
 12295 ;; This function is called by:
 12296 ;;		_isrLP
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text94
 12301  0037D2                     __ptext94:
 12302                           	opt stack 0
 12303  0037D2                     i1_ConvertADC:
 12304                           	opt stack 20
 12305                           
 12306                           ;incstack = 0
 12307  0037D2  82C2               	bsf	4034,1,c	;volatile
 12308  0037D4  0012               	return		;funcret
 12309  0037D6                     __end_ofi1_ConvertADC:
 12310                           	opt stack 0
 12311                           pclatu	equ	0xFFB
 12312                           pclath	equ	0xFFA
 12313                           tblptru	equ	0xFF8
 12314                           tblptrh	equ	0xFF7
 12315                           tblptrl	equ	0xFF6
 12316                           tablat	equ	0xFF5
 12317                           prodh	equ	0xFF4
 12318                           prodl	equ	0xFF3
 12319                           intcon	equ	0xFF2
 12320                           intcon2	equ	0xFF1
 12321                           postinc0	equ	0xFEE
 12322                           fsr0h	equ	0xFEA
 12323                           fsr0l	equ	0xFE9
 12324                           wreg	equ	0xFE8
 12325                           fsr1h	equ	0xFE2
 12326                           fsr1l	equ	0xFE1
 12327                           bsr	equ	0xFE0
 12328                           indf2	equ	0xFDF
 12329                           postinc2	equ	0xFDE
 12330                           postdec2	equ	0xFDD
 12331                           fsr2h	equ	0xFDA
 12332                           fsr2l	equ	0xFD9
 12333                           status	equ	0xFD8
 12334                           
 12335 ;; *************** function _WirelessTx_ISR *****************
 12336 ;; Defined at:
 12337 ;;		line 35 in file "Wireless.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;		None
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;		None
 12342 ;; Return value:  Size  Location     Type
 12343 ;;		None               void
 12344 ;; Registers used:
 12345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12346 ;; Tracked objects:
 12347 ;;		On entry : 0/0
 12348 ;;		On exit  : 0/0
 12349 ;;		Unchanged: 0/0
 12350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12355 ;;Total ram usage:        0 bytes
 12356 ;; Hardware stack levels used:    1
 12357 ;; Hardware stack levels required when called:    5
 12358 ;; This function calls:
 12359 ;;		_GetCharTxBuf
 12360 ;;		_Write1USART
 12361 ;; This function is called by:
 12362 ;;		_isrLP
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text95
 12367  0034D8                     __ptext95:
 12368                           	opt stack 0
 12369  0034D8                     _WirelessTx_ISR:
 12370                           	opt stack 18
 12371                           
 12372                           ;Wireless.c: 36: character = GetCharTxBuf();
 12373                           
 12374                           ;incstack = 0
 12375  0034D8  EC62  F019         	call	_GetCharTxBuf	;wreg free
 12376  0034DC  6E15               	movwf	_character,c	;volatile
 12377                           
 12378                           ;Wireless.c: 37: if(character == 0x0A) {
 12379  0034DE  0E0A               	movlw	10
 12380  0034E0  1815               	xorwf	_character,w,c	;volatile
 12381  0034E2  A4D8               	btfss	status,2,c
 12382  0034E4  D007               	goto	i1l4492
 12383                           
 12384                           ;Wireless.c: 38: Write1USART(character);
 12385  0034E6  5015               	movf	_character,w,c	;volatile
 12386  0034E8  EC3F  F01B         	call	_Write1USART
 12387                           
 12388                           ;Wireless.c: 39: Tx_complete = 1;
 12389  0034EC  0E01               	movlw	1
 12390  0034EE  6E13               	movwf	_Tx_complete,c
 12391                           
 12392                           ;Wireless.c: 40: PIE1bits.TX1IE = 0;
 12393  0034F0  989D               	bcf	3997,4,c	;volatile
 12394                           
 12395                           ;Wireless.c: 41: }
 12396  0034F2  D004               	goto	i1l600
 12397  0034F4                     i1l4492:
 12398                           
 12399                           ;Wireless.c: 42: else {
 12400                           ;Wireless.c: 43: Write1USART(character);
 12401  0034F4  5015               	movf	_character,w,c	;volatile
 12402  0034F6  EC3F  F01B         	call	_Write1USART
 12403  0034FA  D000               	goto	i1l600
 12404  0034FC                     i1l600:
 12405  0034FC  0012               	return		;funcret
 12406  0034FE                     __end_of_WirelessTx_ISR:
 12407                           	opt stack 0
 12408                           pclatu	equ	0xFFB
 12409                           pclath	equ	0xFFA
 12410                           tblptru	equ	0xFF8
 12411                           tblptrh	equ	0xFF7
 12412                           tblptrl	equ	0xFF6
 12413                           tablat	equ	0xFF5
 12414                           prodh	equ	0xFF4
 12415                           prodl	equ	0xFF3
 12416                           intcon	equ	0xFF2
 12417                           intcon2	equ	0xFF1
 12418                           postinc0	equ	0xFEE
 12419                           fsr0h	equ	0xFEA
 12420                           fsr0l	equ	0xFE9
 12421                           wreg	equ	0xFE8
 12422                           fsr1h	equ	0xFE2
 12423                           fsr1l	equ	0xFE1
 12424                           bsr	equ	0xFE0
 12425                           indf2	equ	0xFDF
 12426                           postinc2	equ	0xFDE
 12427                           postdec2	equ	0xFDD
 12428                           fsr2h	equ	0xFDA
 12429                           fsr2l	equ	0xFD9
 12430                           status	equ	0xFD8
 12431                           
 12432 ;; *************** function _Write1USART *****************
 12433 ;; Defined at:
 12434 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;  data            1    wreg     unsigned char 
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  data            1    0[COMRAM] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;		None               void
 12441 ;; Registers used:
 12442 ;;		wreg
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;Total ram usage:        1 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    3
 12455 ;; This function calls:
 12456 ;;		Nothing
 12457 ;; This function is called by:
 12458 ;;		_WirelessTx_ISR
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text96
 12463  00367E                     __ptext96:
 12464                           	opt stack 0
 12465  00367E                     _Write1USART:
 12466                           	opt stack 19
 12467                           
 12468                           ;incstack = 0
 12469                           ;Write1USART@data stored from wreg
 12470  00367E  6E25               	movwf	Write1USART@data,c
 12471  003680  ACAC               	btfss	4012,6,c	;volatile
 12472  003682  D005               	goto	i1l4322
 12473  003684  90AC               	bcf	4012,0,c	;volatile
 12474  003686  A214               	btfss	_USART1_Status,1,c
 12475  003688  D002               	goto	i1l4322
 12476  00368A  80AC               	bsf	4012,0,c	;volatile
 12477  00368C  D000               	goto	i1l4322
 12478  00368E                     i1l4322:
 12479  00368E  C025  FFAD         	movff	Write1USART@data,4013	;volatile
 12480  003692  0012               	return		;funcret
 12481  003694                     __end_of_Write1USART:
 12482                           	opt stack 0
 12483                           pclatu	equ	0xFFB
 12484                           pclath	equ	0xFFA
 12485                           tblptru	equ	0xFF8
 12486                           tblptrh	equ	0xFF7
 12487                           tblptrl	equ	0xFF6
 12488                           tablat	equ	0xFF5
 12489                           prodh	equ	0xFF4
 12490                           prodl	equ	0xFF3
 12491                           intcon	equ	0xFF2
 12492                           intcon2	equ	0xFF1
 12493                           postinc0	equ	0xFEE
 12494                           fsr0h	equ	0xFEA
 12495                           fsr0l	equ	0xFE9
 12496                           wreg	equ	0xFE8
 12497                           fsr1h	equ	0xFE2
 12498                           fsr1l	equ	0xFE1
 12499                           bsr	equ	0xFE0
 12500                           indf2	equ	0xFDF
 12501                           postinc2	equ	0xFDE
 12502                           postdec2	equ	0xFDD
 12503                           fsr2h	equ	0xFDA
 12504                           fsr2l	equ	0xFD9
 12505                           status	equ	0xFD8
 12506                           
 12507 ;; *************** function _GetCharTxBuf *****************
 12508 ;; Defined at:
 12509 ;;		line 15 in file "Wireless.c"
 12510 ;; Parameters:    Size  Location     Type
 12511 ;;		None
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;  ch              1    7[COMRAM] unsigned char 
 12514 ;; Return value:  Size  Location     Type
 12515 ;;                  1    wreg      unsigned char 
 12516 ;; Registers used:
 12517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12518 ;; Tracked objects:
 12519 ;;		On entry : 0/0
 12520 ;;		On exit  : 0/0
 12521 ;;		Unchanged: 0/0
 12522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12527 ;;Total ram usage:        2 bytes
 12528 ;; Hardware stack levels used:    1
 12529 ;; Hardware stack levels required when called:    4
 12530 ;; This function calls:
 12531 ;;		i1___awmod
 12532 ;; This function is called by:
 12533 ;;		_WirelessTx_ISR
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text97
 12538  0032C4                     __ptext97:
 12539                           	opt stack 0
 12540  0032C4                     _GetCharTxBuf:
 12541                           	opt stack 18
 12542                           
 12543                           ;Wireless.c: 16: unsigned char ch;
 12544                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 12545                           
 12546                           ;incstack = 0
 12547  0032C4  5017               	movf	_get_Tx_index,w,c
 12548  0032C6  0D01               	mullw	1
 12549  0032C8  0EB2               	movlw	low _Tx_buffer
 12550  0032CA  24F3               	addwf	prodl,w,c
 12551  0032CC  6ED9               	movwf	fsr2l,c
 12552  0032CE  0E00               	movlw	high _Tx_buffer
 12553  0032D0  20F4               	addwfc	prodh,w,c
 12554  0032D2  6EDA               	movwf	fsr2h,c
 12555  0032D4  50DF               	movf	indf2,w,c
 12556  0032D6  6E2C               	movwf	GetCharTxBuf@ch,c
 12557                           
 12558                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 20;
 12559  0032D8  C017  F02B         	movff	_get_Tx_index,??_GetCharTxBuf
 12560  0032DC  0E01               	movlw	1
 12561  0032DE  262B               	addwf	??_GetCharTxBuf,f,c
 12562  0032E0  502B               	movf	??_GetCharTxBuf,w,c
 12563  0032E2  6E25               	movwf	i1___awmod@dividend,c
 12564  0032E4  6A26               	clrf	i1___awmod@dividend+1,c
 12565  0032E6  0E00               	movlw	0
 12566  0032E8  6E28               	movwf	i1___awmod@divisor+1,c
 12567  0032EA  0E14               	movlw	20
 12568  0032EC  6E27               	movwf	i1___awmod@divisor,c
 12569  0032EE  ECB0  F015         	call	i1___awmod	;wreg free
 12570  0032F2  5025               	movf	?i1___awmod,w,c
 12571  0032F4  6E17               	movwf	_get_Tx_index,c
 12572                           
 12573                           ;Wireless.c: 21: return(ch);
 12574  0032F6  502C               	movf	GetCharTxBuf@ch,w,c
 12575  0032F8  D000               	goto	i1l589
 12576  0032FA                     i1l589:
 12577  0032FA  0012               	return		;funcret
 12578  0032FC                     __end_of_GetCharTxBuf:
 12579                           	opt stack 0
 12580                           pclatu	equ	0xFFB
 12581                           pclath	equ	0xFFA
 12582                           tblptru	equ	0xFF8
 12583                           tblptrh	equ	0xFF7
 12584                           tblptrl	equ	0xFF6
 12585                           tablat	equ	0xFF5
 12586                           prodh	equ	0xFF4
 12587                           prodl	equ	0xFF3
 12588                           intcon	equ	0xFF2
 12589                           intcon2	equ	0xFF1
 12590                           postinc0	equ	0xFEE
 12591                           fsr0h	equ	0xFEA
 12592                           fsr0l	equ	0xFE9
 12593                           wreg	equ	0xFE8
 12594                           fsr1h	equ	0xFE2
 12595                           fsr1l	equ	0xFE1
 12596                           bsr	equ	0xFE0
 12597                           indf2	equ	0xFDF
 12598                           postinc2	equ	0xFDE
 12599                           postdec2	equ	0xFDD
 12600                           fsr2h	equ	0xFDA
 12601                           fsr2l	equ	0xFD9
 12602                           status	equ	0xFD8
 12603                           
 12604 ;; *************** function i1___awmod *****************
 12605 ;; Defined at:
 12606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  dividend        2    0[COMRAM] int 
 12609 ;;  divisor         2    2[COMRAM] int 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;  __awmod         1    5[COMRAM] unsigned char 
 12612 ;;  __awmod         1    4[COMRAM] unsigned char 
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  2    0[COMRAM] int 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2, status,0
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;Total ram usage:        6 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    3
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_GetCharTxBuf
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text98
 12637  002B60                     __ptext98:
 12638                           	opt stack 0
 12639  002B60                     i1___awmod:
 12640                           	opt stack 18
 12641                           
 12642                           ;incstack = 0
 12643  002B60  0E00               	movlw	0
 12644  002B62  6E2A               	movwf	i1___awmod@sign,c
 12645  002B64  AE26               	btfss	i1___awmod@dividend+1,7,c
 12646  002B66  D007               	goto	i1l4050
 12647  002B68  6C25               	negf	i1___awmod@dividend,c
 12648  002B6A  1E26               	comf	i1___awmod@dividend+1,f,c
 12649  002B6C  B0D8               	btfsc	status,0,c
 12650  002B6E  2A26               	incf	i1___awmod@dividend+1,f,c
 12651  002B70  0E01               	movlw	1
 12652  002B72  6E2A               	movwf	i1___awmod@sign,c
 12653  002B74  D000               	goto	i1l4050
 12654  002B76                     i1l4050:
 12655  002B76  AE28               	btfss	i1___awmod@divisor+1,7,c
 12656  002B78  D005               	goto	i1l4054
 12657  002B7A  6C27               	negf	i1___awmod@divisor,c
 12658  002B7C  1E28               	comf	i1___awmod@divisor+1,f,c
 12659  002B7E  B0D8               	btfsc	status,0,c
 12660  002B80  2A28               	incf	i1___awmod@divisor+1,f,c
 12661  002B82  D000               	goto	i1l4054
 12662  002B84                     i1l4054:
 12663  002B84  5027               	movf	i1___awmod@divisor,w,c
 12664  002B86  1028               	iorwf	i1___awmod@divisor+1,w,c
 12665  002B88  B4D8               	btfsc	status,2,c
 12666  002B8A  D01D               	goto	i1l4070
 12667  002B8C  0E01               	movlw	1
 12668  002B8E  6E29               	movwf	i1___awmod@counter,c
 12669  002B90  D005               	goto	i1l4060
 12670  002B92                     i1l4058:
 12671  002B92  90D8               	bcf	status,0,c
 12672  002B94  3627               	rlcf	i1___awmod@divisor,f,c
 12673  002B96  3628               	rlcf	i1___awmod@divisor+1,f,c
 12674  002B98  2A29               	incf	i1___awmod@counter,f,c
 12675  002B9A  D000               	goto	i1l4060
 12676  002B9C                     i1l4060:
 12677  002B9C  BE28               	btfsc	i1___awmod@divisor+1,7,c
 12678  002B9E  D002               	goto	i1l4062
 12679  002BA0  D7F8               	goto	i1l4058
 12680  002BA2  D000               	goto	i1l4062
 12681  002BA4                     i1l4062:
 12682  002BA4  5027               	movf	i1___awmod@divisor,w,c
 12683  002BA6  5C25               	subwf	i1___awmod@dividend,w,c
 12684  002BA8  5028               	movf	i1___awmod@divisor+1,w,c
 12685  002BAA  5826               	subwfb	i1___awmod@dividend+1,w,c
 12686  002BAC  A0D8               	btfss	status,0,c
 12687  002BAE  D005               	goto	i1l4066
 12688  002BB0  5027               	movf	i1___awmod@divisor,w,c
 12689  002BB2  5E25               	subwf	i1___awmod@dividend,f,c
 12690  002BB4  5028               	movf	i1___awmod@divisor+1,w,c
 12691  002BB6  5A26               	subwfb	i1___awmod@dividend+1,f,c
 12692  002BB8  D000               	goto	i1l4066
 12693  002BBA                     i1l4066:
 12694  002BBA  90D8               	bcf	status,0,c
 12695  002BBC  3228               	rrcf	i1___awmod@divisor+1,f,c
 12696  002BBE  3227               	rrcf	i1___awmod@divisor,f,c
 12697  002BC0  2E29               	decfsz	i1___awmod@counter,f,c
 12698  002BC2  D7F0               	goto	i1l4062
 12699  002BC4  D000               	goto	i1l4070
 12700  002BC6                     i1l4070:
 12701  002BC6  502A               	movf	i1___awmod@sign,w,c
 12702  002BC8  B4D8               	btfsc	status,2,c
 12703  002BCA  D005               	goto	i1l4074
 12704  002BCC  6C25               	negf	i1___awmod@dividend,c
 12705  002BCE  1E26               	comf	i1___awmod@dividend+1,f,c
 12706  002BD0  B0D8               	btfsc	status,0,c
 12707  002BD2  2A26               	incf	i1___awmod@dividend+1,f,c
 12708  002BD4  D000               	goto	i1l4074
 12709  002BD6                     i1l4074:
 12710  002BD6  C025  F025         	movff	i1___awmod@dividend,?i1___awmod
 12711  002BDA  C026  F026         	movff	i1___awmod@dividend+1,?i1___awmod+1
 12712  002BDE  D000               	goto	i1l1064
 12713  002BE0                     i1l1064:
 12714  002BE0  0012               	return		;funcret
 12715  002BE2                     __end_ofi1___awmod:
 12716                           	opt stack 0
 12717                           pclatu	equ	0xFFB
 12718                           pclath	equ	0xFFA
 12719                           tblptru	equ	0xFF8
 12720                           tblptrh	equ	0xFF7
 12721                           tblptrl	equ	0xFF6
 12722                           tablat	equ	0xFF5
 12723                           prodh	equ	0xFF4
 12724                           prodl	equ	0xFF3
 12725                           intcon	equ	0xFF2
 12726                           intcon2	equ	0xFF1
 12727                           postinc0	equ	0xFEE
 12728                           fsr0h	equ	0xFEA
 12729                           fsr0l	equ	0xFE9
 12730                           wreg	equ	0xFE8
 12731                           fsr1h	equ	0xFE2
 12732                           fsr1l	equ	0xFE1
 12733                           bsr	equ	0xFE0
 12734                           indf2	equ	0xFDF
 12735                           postinc2	equ	0xFDE
 12736                           postdec2	equ	0xFDD
 12737                           fsr2h	equ	0xFDA
 12738                           fsr2l	equ	0xFD9
 12739                           status	equ	0xFD8
 12740                           
 12741 ;; *************** function _isrHP *****************
 12742 ;; Defined at:
 12743 ;;		line 616 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;		None               void
 12750 ;; Registers used:
 12751 ;;		wreg, status,2, status,0, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;Total ram usage:       14 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    2
 12764 ;; This function calls:
 12765 ;;		_MillisecondTimerISR
 12766 ;; This function is called by:
 12767 ;;		Interrupt level 2
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	intcode
 12772  000008                     __pintcode:
 12773                           	opt stack 0
 12774  000008                     _isrHP:
 12775                           	opt stack 18
 12776                           
 12777                           ;incstack = 0
 12778  000008  CFFA F060          	movff	pclath,??_isrHP
 12779  00000C  CFFB F061          	movff	pclatu,??_isrHP+1
 12780  000010  CFE9 F062          	movff	fsr0l,??_isrHP+2
 12781  000014  EDE0  F016         	call	int_func,f	;refresh shadow registers
 12782                           pclatu	equ	0xFFB
 12783                           pclath	equ	0xFFA
 12784                           tblptru	equ	0xFF8
 12785                           tblptrh	equ	0xFF7
 12786                           tblptrl	equ	0xFF6
 12787                           tablat	equ	0xFF5
 12788                           prodh	equ	0xFF4
 12789                           prodl	equ	0xFF3
 12790                           intcon	equ	0xFF2
 12791                           intcon2	equ	0xFF1
 12792                           postinc0	equ	0xFEE
 12793                           fsr0h	equ	0xFEA
 12794                           fsr0l	equ	0xFE9
 12795                           wreg	equ	0xFE8
 12796                           fsr1h	equ	0xFE2
 12797                           fsr1l	equ	0xFE1
 12798                           bsr	equ	0xFE0
 12799                           indf2	equ	0xFDF
 12800                           postinc2	equ	0xFDE
 12801                           postdec2	equ	0xFDD
 12802                           fsr2h	equ	0xFDA
 12803                           fsr2l	equ	0xFD9
 12804                           status	equ	0xFD8
 12805                           
 12806                           	psect	intcode_body
 12807  002DC0                     __pintcode_body:
 12808                           	opt stack 18
 12809  002DC0                     int_func:
 12810                           	opt stack 18
 12811  002DC0  0006               	pop		; remove dummy address from shadow register refresh
 12812  002DC2  CFEA F063          	movff	fsr0h,??_isrHP+3
 12813  002DC6  CFE1 F064          	movff	fsr1l,??_isrHP+4
 12814  002DCA  CFE2 F065          	movff	fsr1h,??_isrHP+5
 12815  002DCE  CFD9 F066          	movff	fsr2l,??_isrHP+6
 12816  002DD2  CFDA F067          	movff	fsr2h,??_isrHP+7
 12817  002DD6  CFF3 F068          	movff	prodl,??_isrHP+8
 12818  002DDA  CFF4 F069          	movff	prodh,??_isrHP+9
 12819  002DDE  CFF6 F06A          	movff	tblptrl,??_isrHP+10
 12820  002DE2  CFF7 F06B          	movff	tblptrh,??_isrHP+11
 12821  002DE6  CFF8 F06C          	movff	tblptru,??_isrHP+12
 12822  002DEA  CFF5 F06D          	movff	tablat,??_isrHP+13
 12823                           
 12824                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 619: if (INTCONbits.TMR0IF == 1) {
 12825  002DEE  A4F2               	btfss	intcon,2,c	;volatile
 12826  002DF0  D004               	goto	i2l296
 12827                           
 12828                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 620: INTCONbits.TMR0IF = 0;
 12829  002DF2  94F2               	bcf	intcon,2,c	;volatile
 12830                           
 12831                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 622: MillisecondTimerISR();
 12832  002DF4  EC05  F01B         	call	_MillisecondTimerISR	;wreg free
 12833  002DF8  D000               	goto	i2l296
 12834  002DFA                     i2l296:
 12835  002DFA  C06D  FFF5         	movff	??_isrHP+13,tablat
 12836  002DFE  C06C  FFF8         	movff	??_isrHP+12,tblptru
 12837  002E02  C06B  FFF7         	movff	??_isrHP+11,tblptrh
 12838  002E06  C06A  FFF6         	movff	??_isrHP+10,tblptrl
 12839  002E0A  C069  FFF4         	movff	??_isrHP+9,prodh
 12840  002E0E  C068  FFF3         	movff	??_isrHP+8,prodl
 12841  002E12  C067  FFDA         	movff	??_isrHP+7,fsr2h
 12842  002E16  C066  FFD9         	movff	??_isrHP+6,fsr2l
 12843  002E1A  C065  FFE2         	movff	??_isrHP+5,fsr1h
 12844  002E1E  C064  FFE1         	movff	??_isrHP+4,fsr1l
 12845  002E22  C063  FFEA         	movff	??_isrHP+3,fsr0h
 12846  002E26  C062  FFE9         	movff	??_isrHP+2,fsr0l
 12847  002E2A  C061  FFFB         	movff	??_isrHP+1,pclatu
 12848  002E2E  C060  FFFA         	movff	??_isrHP,pclath
 12849  002E32  0011               	retfie		f
 12850  002E34                     __end_of_isrHP:
 12851                           	opt stack 0
 12852                           pclatu	equ	0xFFB
 12853                           pclath	equ	0xFFA
 12854                           tblptru	equ	0xFF8
 12855                           tblptrh	equ	0xFF7
 12856                           tblptrl	equ	0xFF6
 12857                           tablat	equ	0xFF5
 12858                           prodh	equ	0xFF4
 12859                           prodl	equ	0xFF3
 12860                           intcon	equ	0xFF2
 12861                           intcon2	equ	0xFF1
 12862                           postinc0	equ	0xFEE
 12863                           fsr0h	equ	0xFEA
 12864                           fsr0l	equ	0xFE9
 12865                           wreg	equ	0xFE8
 12866                           fsr1h	equ	0xFE2
 12867                           fsr1l	equ	0xFE1
 12868                           bsr	equ	0xFE0
 12869                           indf2	equ	0xFDF
 12870                           postinc2	equ	0xFDE
 12871                           postdec2	equ	0xFDD
 12872                           fsr2h	equ	0xFDA
 12873                           fsr2l	equ	0xFD9
 12874                           status	equ	0xFD8
 12875                           
 12876 ;; *************** function _MillisecondTimerISR *****************
 12877 ;; Defined at:
 12878 ;;		line 44 in file "MillisecondTimer.c"
 12879 ;; Parameters:    Size  Location     Type
 12880 ;;		None
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;		None
 12883 ;; Return value:  Size  Location     Type
 12884 ;;		None               void
 12885 ;; Registers used:
 12886 ;;		wreg, status,2, status,0, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12896 ;;Total ram usage:        0 bytes
 12897 ;; Hardware stack levels used:    1
 12898 ;; Hardware stack levels required when called:    1
 12899 ;; This function calls:
 12900 ;;		i2_WriteTimer0
 12901 ;; This function is called by:
 12902 ;;		_isrHP
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text100
 12907  00360A                     __ptext100:
 12908                           	opt stack 0
 12909  00360A                     _MillisecondTimerISR:
 12910                           	opt stack 18
 12911                           
 12912                           ;MillisecondTimer.c: 46: WriteTimer0(63036);
 12913                           
 12914                           ;incstack = 0
 12915  00360A  0EF6               	movlw	246
 12916  00360C  6E3F               	movwf	i2WriteTimer0@timer0+1,c
 12917  00360E  0E3C               	movlw	60
 12918  003610  6E3E               	movwf	i2WriteTimer0@timer0,c
 12919  003612  EC79  F01B         	call	i2_WriteTimer0	;wreg free
 12920                           
 12921                           ;MillisecondTimer.c: 47: millisecond_COUNT0++;
 12922  003616  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 12923  003618  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 12924                           
 12925                           ;MillisecondTimer.c: 48: millisecond_COUNT1++;
 12926  00361A  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 12927  00361C  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 12928                           
 12929                           ;MillisecondTimer.c: 49: millisecond_COUNT2++;
 12930  00361E  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 12931  003620  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 12932  003622  0012               	return		;funcret
 12933  003624                     __end_of_MillisecondTimerISR:
 12934                           	opt stack 0
 12935                           pclatu	equ	0xFFB
 12936                           pclath	equ	0xFFA
 12937                           tblptru	equ	0xFF8
 12938                           tblptrh	equ	0xFF7
 12939                           tblptrl	equ	0xFF6
 12940                           tablat	equ	0xFF5
 12941                           prodh	equ	0xFF4
 12942                           prodl	equ	0xFF3
 12943                           intcon	equ	0xFF2
 12944                           intcon2	equ	0xFF1
 12945                           postinc0	equ	0xFEE
 12946                           fsr0h	equ	0xFEA
 12947                           fsr0l	equ	0xFE9
 12948                           wreg	equ	0xFE8
 12949                           fsr1h	equ	0xFE2
 12950                           fsr1l	equ	0xFE1
 12951                           bsr	equ	0xFE0
 12952                           indf2	equ	0xFDF
 12953                           postinc2	equ	0xFDE
 12954                           postdec2	equ	0xFDD
 12955                           fsr2h	equ	0xFDA
 12956                           fsr2l	equ	0xFD9
 12957                           status	equ	0xFD8
 12958                           
 12959 ;; *************** function i2_WriteTimer0 *****************
 12960 ;; Defined at:
 12961 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;  timer0          2   25[COMRAM] unsigned int 
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;  WriteTimer0     2   27[COMRAM] struct Timers
 12966 ;; Return value:  Size  Location     Type
 12967 ;;		None               void
 12968 ;; Registers used:
 12969 ;;		None
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/0
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12979 ;;Total ram usage:        4 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; This function calls:
 12982 ;;		Nothing
 12983 ;; This function is called by:
 12984 ;;		_MillisecondTimerISR
 12985 ;; This function uses a non-reentrant model
 12986 ;;
 12987                           
 12988                           	psect	text101
 12989  0036F2                     __ptext101:
 12990                           	opt stack 0
 12991  0036F2                     i2_WriteTimer0:
 12992                           	opt stack 18
 12993                           
 12994                           ;incstack = 0
 12995  0036F2  C03E  F040         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 12996  0036F6  C03F  F041         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 12997  0036FA  C041  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 12998  0036FE  C040  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 12999  003702  0012               	return		;funcret
 13000  003704                     __end_ofi2_WriteTimer0:
 13001                           	opt stack 0
 13002                           pclatu	equ	0xFFB
 13003                           pclath	equ	0xFFA
 13004                           tblptru	equ	0xFF8
 13005                           tblptrh	equ	0xFF7
 13006                           tblptrl	equ	0xFF6
 13007                           tablat	equ	0xFF5
 13008                           prodh	equ	0xFF4
 13009                           prodl	equ	0xFF3
 13010                           intcon	equ	0xFF2
 13011                           intcon2	equ	0xFF1
 13012                           postinc0	equ	0xFEE
 13013                           fsr0h	equ	0xFEA
 13014                           fsr0l	equ	0xFE9
 13015                           wreg	equ	0xFE8
 13016                           fsr1h	equ	0xFE2
 13017                           fsr1l	equ	0xFE1
 13018                           bsr	equ	0xFE0
 13019                           indf2	equ	0xFDF
 13020                           postinc2	equ	0xFDE
 13021                           postdec2	equ	0xFDD
 13022                           fsr2h	equ	0xFDA
 13023                           fsr2l	equ	0xFD9
 13024                           status	equ	0xFD8
 13025                           pclatu	equ	0xFFB
 13026                           pclath	equ	0xFFA
 13027                           tblptru	equ	0xFF8
 13028                           tblptrh	equ	0xFF7
 13029                           tblptrl	equ	0xFF6
 13030                           tablat	equ	0xFF5
 13031                           prodh	equ	0xFF4
 13032                           prodl	equ	0xFF3
 13033                           intcon	equ	0xFF2
 13034                           intcon2	equ	0xFF1
 13035                           postinc0	equ	0xFEE
 13036                           fsr0h	equ	0xFEA
 13037                           fsr0l	equ	0xFE9
 13038                           wreg	equ	0xFE8
 13039                           fsr1h	equ	0xFE2
 13040                           fsr1l	equ	0xFE1
 13041                           bsr	equ	0xFE0
 13042                           indf2	equ	0xFDF
 13043                           postinc2	equ	0xFDE
 13044                           postdec2	equ	0xFDD
 13045                           fsr2h	equ	0xFDA
 13046                           fsr2l	equ	0xFD9
 13047                           status	equ	0xFD8
 13048                           
 13049                           	psect	rparam
 13050  0000                     pclatu	equ	0xFFB
 13051                           pclath	equ	0xFFA
 13052                           tblptru	equ	0xFF8
 13053                           tblptrh	equ	0xFF7
 13054                           tblptrl	equ	0xFF6
 13055                           tablat	equ	0xFF5
 13056                           prodh	equ	0xFF4
 13057                           prodl	equ	0xFF3
 13058                           intcon	equ	0xFF2
 13059                           intcon2	equ	0xFF1
 13060                           postinc0	equ	0xFEE
 13061                           fsr0h	equ	0xFEA
 13062                           fsr0l	equ	0xFE9
 13063                           wreg	equ	0xFE8
 13064                           fsr1h	equ	0xFE2
 13065                           fsr1l	equ	0xFE1
 13066                           bsr	equ	0xFE0
 13067                           indf2	equ	0xFDF
 13068                           postinc2	equ	0xFDE
 13069                           postdec2	equ	0xFDD
 13070                           fsr2h	equ	0xFDA
 13071                           fsr2l	equ	0xFD9
 13072                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         112
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      66
    BANK0           160     82     146
    BANK1           256     28      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 

    sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 


Critical Paths under _main in COMRAM

    _main->_CalculateSensorStatuses
    _main->_DisplaySensorStatuses
    _main->_NormaliseSensorReadings
    _SendLineMode->_FlushTxBuf
    _SendLineMode->_PutCharTxBuf
    _GenerateCalibration->_Delay10KTCYx
    _SendThreshold->_FlushTxBuf
    _SendThreshold->_PutCharTxBuf
    _SendStatus->_FlushTxBuf
    _SendStatus->_PutCharTxBuf
    _SendOffsets->_FlushTxBuf
    _SendOffsets->_PutCharTxBuf
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_CalculateSensorStatuses
    _CalibrateThreshold->_DisplaySensorStatuses
    _CalibrateThreshold->_NormaliseSensorReadings
    _SetADCChannel->_SetChanADC
    _ConfigureWireless->_FlushRxBuf
    _ConfigureWireless->_FlushTxBuf
    _ConfigureWireless->_Open1USART
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_OpenTimer1
    _ConfigureTimer0->_OpenTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _CalculateSensorSums->___lbtoft
    _pow->___lbtoft
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___fttol->___lbtoft
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___awtoft
    ___ftadd->___awtoft

Critical Paths under _isrHP in COMRAM

    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendLineMode->_PutCharTxBuf
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_SendOffsets
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _SendThreshold->_PutCharTxBuf
    _SendStatus->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_DisplaySensorStatuses
    _CalibrateThreshold->_NormaliseSensorReadings
    _CalibrateThreshold->_ReadADC
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _ConfigureWireless->_Open1USART
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigureADC->_OpenADC
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_CalculateSensorSums
    _CalculateSensorSums->_pow

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   93857
                                             22 BANK1      6     6      0
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                  _GetSensorReadings
                    _LoadCalibration
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                        _ReadMillis0
                       _ResetMillis0
                       _SendLineMode
                        _SendOffsets
                         _SendStatus
                      _SendThreshold
                      _SetDCMotorPID
                _SetDirectionForward
                        _SetUnipolar
                         _StopMotors
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0     910
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1130
                                             22 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     455
                                             20 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     455
                                             20 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2     849
                                             21 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0       0
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0    6752
                                             29 BANK0      3     3      0
                          _FlashLEDS
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadIntEEPROM                                        7     5      2     517
                                             16 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     384
                                             16 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM                                           2     0      2     288
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0    5690
                                             26 BANK0      3     3      0
                   _CalibrateOffsets
                 _CalibrateThreshold
                       _Delay10KTCYx
                          _FlashLEDS
                         _PB1pressed
                        _SendOffsets
                         _SendStatus
                      _SendThreshold
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteIntEEPROM                                       4     0      4     898
                                             17 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteCharEEPROM                                      3     0      3     706
                                             17 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteEEPROM                                          3     0      3     514
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _SendThreshold                                        4     2      2     945
                                             21 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendStatus                                           1     1      0     784
                                             21 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1075
                                             21 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (2) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PutCharTxBuf                                         2     2      0     654
                                             29 COMRAM     1     1      0
                                             20 BANK0      1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     623
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0       0
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (2) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadMillis2                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             29 COMRAM     1     1      0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   2     2      0     898
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     161
                                             29 COMRAM     1     1      0
                                             14 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     291
                                             29 COMRAM     1     1      0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                              4     4      0     322
                                             29 COMRAM     1     1      0
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0     192
                                             16 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             15 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             29 COMRAM     1     1      0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     638
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     440
                                             29 COMRAM     1     1      0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FlushTxBuf                                           1     1      0      99
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     192
                                             14 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     322
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     229
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             29 COMRAM     1     1      0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSums                                  5     5      0   72079
                                             17 BANK1      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   64988
                                              0 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   21117
                                             64 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   35220
                                             73 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     489
                                             64 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9118
                                             65 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     582
                                             14 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     631
                                             40 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     718
                                             14 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2529
                                             55 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9459
                                             52 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     622
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3968
                                             25 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4541
                                             52 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4225
                                             40 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     260
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2900
                                             22 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2523
                                             29 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2427
                                             29 COMRAM     1     1      0
                                             22 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2291
                                             29 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2260
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      96
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     131
                                              0 BANK0     14    14      0
                _MillisecondTimerISR
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _ReadADC
       _SetADCChannel
         _SetChanADC
     _Delay10KTCYx
     _FlashLEDS
       _Delay10KTCYx
     _PB1pressed
       _ReadMillis2
       _ResetMillis2
     _SendOffsets
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendThreshold
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _FlashLEDS
       _Delay10KTCYx
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _ReadADC
         _SetADCChannel
           _SetChanADC
       _Delay10KTCYx
       _FlashLEDS
         _Delay10KTCYx
       _PB1pressed
         _ReadMillis2
         _ResetMillis2
       _SendOffsets
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendThreshold
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _ReadMillis2
     _ResetMillis2
   _ReadMillis0
   _ResetMillis0
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendThreshold
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDirectionForward
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     1C      30       8       18.8%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      92       5       91.3%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      42       1       69.5%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104       6        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 12 21:15:27 2017

             __size_of_WriteEEPROM 0040                       ___altoft@exp 009F  
             __end_of_GetCharTxBuf 32FC                      ___altoft@sign 00A0  
              WriteCharEEPROM@data 0073                                 bsr 000FE0  
              ___wmul@multiplicand 0070                        __CFG_BORV$0 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                       ___ftadd@exp1 0093  
                     ___ftadd@exp2 0092                       __CFG_CP6$OFF 000000  
                     __CFG_CP7$OFF 000000                       ___ftadd@sign 0091  
             LoadCalibration@index 007F                                l201 2544  
                              l211 2830                                l206 2984  
                              l216 27B4                                l226 304E  
                              l250 3198                                l182 3732  
                              l238 31E2                                l239 3214  
                              l176 229E                                l265 2D4A  
                              l249 3166                                l187 2F08  
                              l292 2B5E                                l613 34B0  
                              l710 3544                                l536 312A  
                              l560 2F66                                l537 315A  
                              l811 35B6                                l619 3722  
                              l539 314E                                l547 335C  
                              l563 3712                                l459 26C8  
                              l708 353A                                l812 35B8  
                              l549 3354                                l734 3514  
                              l656 376C                                l841 2DA0  
                              l842 2DA2                                l835 2D78  
                              l756 3560                                l780 33CC  
                              l844 2DBE                                l757 3562  
                              l678 2CD2                                l782 33E2  
                              l686 36A6                                l783 33E4  
                              l839 2D94                                l858 32C2  
                              l955 2AC8                       __CFG_CPB$OFF 000000  
                              _PR2 000FCB                                _PR4 000F77  
                     __CFG_CPD$OFF 000000             __size_of_SetDCMotorPID 00B6  
             __size_of_WriteTimer0 0012               __size_of_WriteTimer1 0012  
            CalibrateOffsets@index 0072                                _exp 12BA  
                              _log 1B18                                _pow 16E0  
                    _SetADCChannel 21B2                       ___awmod@sign 0073  
                              prod 000FF3                                wreg 000FE8  
                       _TXSTA1bits 000FAC        __end_of_CalculateSensorSums 2986  
                     __CFG_MODE$MC 000000          ??_CalculateSensorStatuses 006E  
                      ?_PB1pressed 0025                  main@line_mode_ptr 0119  
                      ?_PB2pressed 0025                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 007F                       ___ftdiv@sign 0084  
                     __CFG_WDT$OFF 000000                               l1220 10A4  
                             l1221 12B8                               l1224 10DE  
                             l1064 277C                               l1226 1108  
                             l1235 11EC                               l1083 359E  
                             l1180 1EA8                               l1324 3412  
                             l1076 311A                               l1252 1B16  
                             l1244 1216                               l1261 2612  
                             l1191 1E70                               l1255 1ADE  
                             l1432 186C                               l1450 14E0  
                             l1267 19D4                               l1284 3006  
                             l1428 1878                               l1357 2C5C  
                             l1277 3380                               l1453 1390  
                             l1470 28DE                               l1462 20BA  
                             l1454 14D4                               l1288 1D88  
                             l1464 20AE                               l1474 1FBE  
                             l5010 274C                               l5002 270E  
                             l1492 1C56                               l5004 271C  
                             l5030 25CA                               l5006 2726  
                             l5014 275C                               l5120 2EA4  
                             l5026 2588                               l5018 2772  
                             l5036 260E                               l5124 2EAC  
                             l5310 30F2                               l5070 1D22  
                             l5046 1C82                               l5142 24BE  
                             l5134 247A                               l6006 3218  
                             l6030 269E                               l5064 1D06  
                             l5232 3392                               l5160 2528  
                             l5152 24E4                               l5144 24D4  
                             l6024 2628                               l5082 1D76  
                             l5074 1D38                               l5242 33B2  
                             l5162 253E                               l5138 2482  
                             l6026 2662                               l6122 1604  
                             l6106 15C2                               l5260 1A3A  
                             l5076 1D4A                               l5068 1D1A  
                             l5332 200E                               l5236 339A  
                             l5156 24EC                               l5148 24DA  
                             l5172 3014                               l5412 320A  
                             l5404 31EC                               l6140 1646  
                             l6116 15F4                               l5254 1A00  
                             l5078 1D58                               l5094 2866  
                             l5430 2CF6                               l5422 2CDC  
                             l6142 164C                               l5280 1A9C  
                             l5256 1A26                               l5344 210A  
                             l5336 202C                               l5328 1FFA  
                             l5168 300C                               l5416 3210  
                             l6160 16D2                               l4802 1E9A  
                             l5530 2BF8                               l5290 1AF0  
                             l5346 2198                               l5362 1F24  
                             l5354 1EBE                               l4810 21C0  
                             l5426 2CEC                               l5442 2F78  
                             l5178 3588                               l5514 333C  
                             l5380 1FB0                               l5700 2D68  
                             l4820 21E8                               l4812 21C8  
                             l6084 157A                               l4910 119C  
                             l5374 1F56                               l5542 1B2A  
                             l5622 33D0                               l4830 2210  
                             l4822 21F0                               l4814 21D0  
                             l5470 29A8                               l5454 3258  
                             l6158 16BA                               l6078 156A  
                             l5528 2BE8                               l4904 1170  
                             l5720 2D98                               l5712 2D84  
                             l5704 2D70                               l4832 2218  
                             l4824 21F8                               l4816 21D8  
                             l4808 21B8                               l5448 2F94  
                             l5480 2A0A                               l5464 2988  
                             l6088 158C                               l4906 1180  
                             l5298 2FDC                               l5378 1F6C  
                             l5570 1320                               l4834 2220  
                             l4826 2200                               l4818 21E0  
                             l4842 2238                               l5482 2A18  
                             l5474 29B2                               l5490 2E36  
                             l5802 2406                               l6098 15AC  
                             l5900 2798                               l4780 1DCA  
                             l4924 1242                               l4916 11CC  
                             l4908 1190                               l4860 2A54  
                             l5564 12DC                               l5548 1B58  
                             l5716 2D8C                               l5708 2D7C  
                             l4836 2228                               l4828 2208  
                             l5812 242E                               ?_exp 00A9  
                             ?_log 00A0                               l4790 1E60  
                             l4782 1DFC                               l4774 1DA4  
                             l4934 1292                               l4918 11DC  
                             l4950 18DE                               l4862 2A66  
                             l5750 1722                               l4838 2230  
                             l5494 2E90                               l5920 27D4  
                             l5912 27BC                               l5904 27A4  
                             l4944 18A4                               l5576 135A  
                             l5808 2422                               l4786 1E1E  
                             l4778 1DBA                               l4882 10EC  
                             l4946 18CA                               l5594 1492  
                             l5834 3490                               l5916 27C8  
                             l4796 1E7C                               l4788 1E50  
                             l4876 10B2                               l4972 196A  
                             l4964 192E                               l5764 17BC  
                             l5756 1744                               l5676 351E  
                             l5926 27E2                               l4982 19AE  
                             l4974 1972                               l5598 14A4  
                             l5838 3498                               l5928 2824  
                             l4888 10FE                               l4968 194E  
                             l5768 17E4                               l5696 2D5E  
                             l5792 23B2                               l5784 2396  
                             l5952 318E                               l5944 3170  
                             l4898 1140                               l4978 1992  
                             l5874 28EC                               l4994 26E8  
                             l5970 2B04                               l5892 2780  
                             l5796 23BC                               l5788 23A2  
                             l5956 3194                               l5886 297E  
                             l5878 28F6                               l4998 26FA  
                             l5974 2B0E                               l5966 2AE8  
                             l5896 278C                               ?_pow 0100  
                             _LATE 000F8D                               u4011 1052  
                             u4021 1070                               _LATJ 000F91  
                             u4221 1890                               u4241 18BA  
                             u5130 1364                               u5035 309E  
                             u5140 1366                               u5045 305A  
                             u5410 179E                               u4371 1C6E  
                             u4460 2898                               u4620 3768  
                             u4604 303E                               u4605 3038  
                             u4390 1CA8                               u4470 372E  
                             u4711 1A16                               u5600 2676  
                             u5530 3184                               u4395 1C9E  
                             u4468 289C                               u4830 1EF0  
                             u4670 371E                               u4691 19EC  
                             u5717 358E                               u4790 201E  
                             u4838 1EF4                               u4890 3200  
                             _TMR2 000FCC          __size_of_ConfigureBuggyIO 001A  
                             _main 14E2           __end_of_EnableSensorLEDS 37C6  
          _NormaliseSensorReadings 2EA0                       ___ftpack@arg 006E  
                     ___ftpack@exp 0071             __end_of_WirelessTx_ISR 34FE  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               exp@x 00A9  
                             log@x 00A0             __size_ofi2_WriteTimer0 0012  
                             pclat 000FFA                               pow@x 0100  
                             pow@y 0103                               prodh 000FF4  
                             prodl 000FF3                     _ReadCharEEPROM 3704  
                             start 00EC                      __CFG_IESO$OFF 000000  
              _ConfigureInterrupts 34B2                      _BusySensorAcq 3724  
     __end_of_CalculateSensorError 2832                      _ReadIntEEPROM 2F0A  
             __end_of_EnableMotors 37CE                      __CFG_MCLRE$ON 000000  
                     ___ftmul@cntr 0086                       ___param_bank 000010  
                     ___ftmul@sign 0087                    __end_of_BusyADC 376E  
                  __end_of_ReadADC 36A8                      ??_ReadMillis0 0042  
                    ??_ReadMillis2 0042                    __end_of_OpenADC 2CD6  
                     ___fttol@exp1 0096                              ??_exp 0043  
                            ??_log 0043                       ___fttol@lval 0092  
                            ??_pow 0043                      ??_SetDCMotorL 0042  
                    ??_SetDCMotorR 0042              _DisplaySensorStatuses 3008  
                    __CFG_WAIT$OFF 000000                    __end_of_StartTx 37AC  
                            ?_main 0025                              _EEADR 000FA9  
                  __end_of___ftadd 12BA                    __end_of___awmod 277E  
                  __end_of___ftdiv 1B18                    __end_of___ftneg 338E  
                  __end_of___ftmul 19D6                              _T0CON 000FD5  
                            _T1CON 000FCD                    __end_of___ftsub 3008  
                  __end_of___fttol 1D8A                              _T2CON 000FCA  
                            i1l304 00A6                              i1l600 34FC  
                            i1l176 2388                              i1l299 009A  
                   ?_SetADCChannel 0025                              i1l589 32FA  
                            i1l686 3742                              i2l296 2DFA  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                   PutCharTxBuf@ch 0074                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TRISG 000F98                              _TRISJ 000F9A  
             ?_ConfigureInterrupts 0025              __size_of_Delay10KTCYx 001C  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
                    __CFG_WRT5$OFF 000000                       ___lltoft@exp 0042  
                    __CFG_WRT6$OFF 000000                      __CFG_WRT7$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                   __CFG_EBTR5$OFF 000000                     __CFG_EBTR6$OFF 000000  
                   __CFG_EBTR7$OFF 000000             WriteCharEEPROM@address 0071  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     i1___awmod@sign 002A  
                   __CFG_EBTRB$OFF 000000                      ___awtoft@sign 0042  
               __size_ofi1_ReadADC 0010                              _floor 1FC0  
                            _isrHP 0008                              _ldexp 1EAA  
                            _isrLP 0018                              _frexp 2832  
                            _errno 00DC                      ___ftpack@sign 0072  
                       _ConvertADC 37C6                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              pow@yi 010D  
                       _ReadEEPROM 332E             __end_of_ReadCharEEPROM 3714  
                            status 000FD8                    ?_WirelessTx_ISR 0025  
               __size_ofi1___awmod 0082                      _SetDCMotorPID 2614  
                   ?_BusySensorAcq 0025                        exp@exponent 00AF  
                   ?_ReadIntEEPROM 0070                         _FlushRxBuf 348C  
                  _ConfigureTimer0 3652                    _ConfigureTimer1 3624  
                  _ConfigureTimer2 37AC                        ldexp@newexp 00A3  
                       _FlushTxBuf 338E                    __initialization 3414  
                 ?_LoadCalibration 0025                        log@exponent 00A3  
               main@sensor_sum_ptr 0117                       __end_of_main 16E0  
              __size_of_PB1pressed 003E                __size_of_PB2pressed 003E  
                     _Delay10KTCYx 3584                      ??_SendOffsets 0077  
          __size_of_WriteIntEEPROM 0032                         _Open1USART 2D4C  
                 __end_of_OpenPWM4 3546                   __end_of_OpenPWM5 3522  
                           ??_main 0043               __end_of_ConfigureADC 36BC  
                    ___fttol@sign1 0091                      i2_WriteTimer0 36F2  
             __end_of_ConfigurePWM 377C                      __activetblptr 000003  
              __end_of_ReadMillis0 3790                __end_of_ReadMillis2 37A4  
            ??_ConfigureInterrupts 0042                 __size_of_FlashLEDS 0028  
                       _SetChanADC 35BC                _ConfigureUltrasound 35D6  
      __size_of_CalibrateThreshold 0050                __end_of_SetDCMotorL 3760  
              __end_of_SetDCMotorR 3752              __end_of_DisableMotors 37D2  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                  ReadEEPROM@address 006E  
                           ?_floor 00A1                             ?_isrHP 0025  
                           ?_ldexp 00A0                             ?_isrLP 0025  
                           ?_frexp 006E                   __end_of___altoft 2ACA  
                           _ADRESH 000FC4                             _EEADRH 000FAA  
                           _ADRESL 000FC3                             _EEDATA 000FA8  
                    ??_SetUnipolar 0042                             _CCPR4L 000F74  
                           _CCPR5L 000F71                             _EECON2 000FA7  
                  i1_SetADCChannel 22A0                   __end_of___awtoft 311C  
                 __end_of___ftpack 1EAA          ??_NormaliseSensorReadings 006E  
                 __end_of___lbtoft 3414                         _SendStatus 3252  
                 __end_of___lltoft 2C5E                             i1l1064 2BE0  
                           i1l4050 2B76                             i1l4060 2B9C  
                           i1l4062 2BA4                             i1l4070 2BC6  
                           i1l4054 2B84                             i1l4074 2BD6  
                           i1l4066 2BBA                             i1l4058 2B92  
                           i1l4322 368E                    __CFG_BBSIZ$BB2K 000000  
                           i1l4550 22BC                             i1l4560 22E4  
                           i1l4552 22C4                             i1l4544 22A4  
                           i1l4608 0092                             i1l4570 230C  
                           i1l4562 22EC                             i1l4554 22CC  
                           i1l4546 22AC                             i1l4492 34F4  
                           i1l4572 2314                             i1l4564 22F4  
                           i1l4556 22D4                             i1l4548 22B4  
                           i1l4574 231C                             i1l4566 22FC  
                           i1l4558 22DC                             i1l4568 2304  
                       _OpenTimer0 3546                             i1l4578 2324  
                       _OpenTimer1 33BC                         _OpenTimer2 35A0  
                           _RCSTA1 000FAB           GenerateCalibration@index 007C  
                           _SPBRG1 000FAF                    ?_ReadCharEEPROM 0070  
               __size_of_SetDCPWM4 0044                 __size_of_SetDCPWM5 0044  
                 _CalibrateOffsets 2CD6                     ?_SetDCMotorPID 0076  
                        ??_BusyADC 0042                             _TXREG1 000FAD  
                        ??_ReadADC 0070                             _TXSTA1 000FAC  
             ?_ConfigureUltrasound 006E                _SetDirectionForward 37BA  
                        ??_OpenADC 0070             CalculateSensorSums@sum 0114  
            __size_of_GetCharTxBuf 0038         _sensor_readings_normalised 00C6  
                           _BusyTx 3714                     __CFG_XINST$OFF 000000  
                           ___ftge 2546                          ??_StartTx 0042  
                __end_ofi1_ReadADC 3744                             ___wmul 328C  
              _sensor_readings_raw 00D0             ?_DisplaySensorStatuses 006E  
                        ??___ftadd 008E                          ??___awmod 0042  
                        ??___ftdiv 007C                          ??___ftneg 0042  
                        ??___ftmul 007F                          ??___ftsub 0043  
                        ??___fttol 008C                   OpenTimer0@config 0042  
                 OpenTimer1@config 0042                   OpenTimer2@config 0042  
                           clear_0 341A                             clear_1 3426  
                           clear_2 3432                    ___awmod@divisor 0070  
                  ??_SetADCChannel 0043                     ?i2_WriteTimer0 003E  
                  ___awmod@counter 0072              ReadCharEEPROM@address 0070  
                    ?_SendLineMode 0075           __size_of_WriteCharEEPROM 0012  
                           floor@i 00A4                             floor@x 00A1  
            ___ftmul@f3_as_product 0083                  __end_ofi1___awmod 2BE2  
             ?_SetDirectionForward 0025                __end_of_SendOffsets 2A28  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
            WriteIntEEPROM@address 0071               _CalculateSensorError 277E  
                      ?_ConvertADC 0025                       _GetCharTxBuf 32C4  
          __end_of_ConfigureTimer0 3668            __end_of_ConfigureTimer1 363C  
                 __end_ofexp@coeff 101F            __end_of_ConfigureTimer2 37B4  
                 _ConfigureBuggyIO 35F0                   __end_oflog@coeff 103A  
                      ?_ReadEEPROM 006E                         __accesstop 0060  
          __end_of__initialization 3438                         ___altoft@c 0097  
            __size_of_EnableMotors 0004                    ??_BusySensorAcq 0042  
                       ___ftadd@f1 0088                         ___ftadd@f2 008B  
               _millisecond_COUNT0 000D                 _millisecond_COUNT1 000F  
               _millisecond_COUNT2 0011                    ??_ReadIntEEPROM 0072  
                       _StopMotors 3566                         ___ftge@ff1 006E  
                       ___ftge@ff2 0071              ??_ConfigureUltrasound 0042  
    ConfigureUltrasound@echo_to_cm 006E      ConfigureUltrasound@echo_to_in 0071  
                     eval_poly@res 009D                      ___rparam_used 000001  
                       ___ftdiv@f1 0076                         ___ftdiv@f2 0079  
                       ___ftdiv@f3 0080                __end_of_SetUnipolar 37BA  
                __end_of_FlashLEDS 3466                         ___ftneg@f1 006E  
                       ___awtoft@c 0076                         ___lbtoft@c 0042  
                      ?_FlushRxBuf 0025                        ?_FlushTxBuf 0025  
                       ___ftmul@f1 0079                         ___ftmul@f2 007C  
                       ___ftsub@f1 0094                         ___ftsub@f2 0097  
                       ___fttol@f1 0088                     __pcstackCOMRAM 0025  
                       ___lltoft@c 0076                        _ReadMillis0 3786  
                      _ReadMillis2 379A                      __end_of_floor 20BC  
                    __end_of_isrHP 2E34                      __end_of_ldexp 1FC0  
                    __end_of_isrLP 00EC                      __end_of_frexp 28E0  
                      _SetDCMotorL 3752                        _SetDCMotorR 3744  
                   ??_SendLineMode 0043                        ?_Open1USART 006E  
                __end_of_SetDCPWM4 3094                  __end_of_SetDCPWM5 30D8  
            ??_SetDirectionForward 0042                      ?_ResetMillis0 0025  
                    ?_ResetMillis2 0025                i1SetChanADC@channel 0026  
                      ?_SetChanADC 0025            __end_ofi1_SetADCChannel 238A  
                  _sensor_acq_done 001A        __end_of_MillisecondTimerISR 3624  
             ReadIntEEPROM@address 0070       CalculateSensorStatuses@index 0042  
            ?_CalculateSensorError 006E                       _EnableMotors 37CA  
                     ??_PB1pressed 0042                       ??_PB2pressed 0042  
                          ??_floor 0043                            ??_isrHP 0060  
                          ??_ldexp 00A5                            ??_isrLP 002D  
      __end_of_GenerateCalibration 2470                            ??_frexp 0073  
                      ?_SendStatus 0025                         __pbssBANK0 00B2  
                       __pbssBANK1 011C                    ??_SetDCMotorPID 0078  
                      ?_OpenTimer0 0025                        ?_OpenTimer1 0025  
                      ?_OpenTimer2 0025                 __size_of_eval_poly 00F6  
                    ??_Write1USART 0025             __size_of_SendThreshold 006C  
                ?_EnableSensorLEDS 0025                      ??_WriteEEPROM 0042  
                        ?_OpenPWM4 0025                          ?_OpenPWM5 0025  
                          ?_BusyTx 0025                 ??_EnableSensorLEDS 0042  
          CalculateSensorError@sum 006E                            ?___ftge 006E  
            __size_of_ConfigureADC 0014                            ?___wmul 006E  
            __size_of_ConfigurePWM 000E                    ??i2_WriteTimer0 0040  
               __end_of_PB1pressed 3216                     _WriteIntEEPROM 32FC  
                          _CCP4CON 000F73                            _CCP5CON 000F70  
                 WriteTimer0@timer 0070                          ?___altoft 0097  
               __end_of_PB2pressed 319A                        _SendOffsets 2986  
                 WriteTimer1@timer 0070                      ??_WriteTimer0 0042  
                    ??_WriteTimer1 0042                __size_of_ConvertADC 0004  
                        ?___awtoft 0076                          ?___ftpack 006E  
                        ?___lbtoft 0076                   SendOffsets@index 0079  
                    ?_PutCharTxBuf 0025                     ??_ResetMillis0 0042  
                   ??_ResetMillis2 0042                          ?___lltoft 0076  
              __size_of_ReadEEPROM 0030                   Open1USART@config 0042  
              __size_of_FlushRxBuf 0026                            _SPBRGH1 000F7F  
              __size_of_FlushTxBuf 002E                  ??_WriteCharEEPROM 0042  
                 ??_WirelessTx_ISR 002D                        _SetUnipolar 37B4  
           SetDCMotorPID@PIDoutput 0076                   ?_ConfigureTimer0 0025  
                 ?_ConfigureTimer1 0025                   ?_ConfigureTimer2 0025  
                       _convert_cm 00EA                         _convert_in 00ED  
     __size_of_CalculateSensorSums 00A6                        ?_StopMotors 0025  
              __size_of_Open1USART 0074                       _ConfigureADC 36A8  
                          _BusyADC 3760                            _ReadADC 3694  
                     _ConfigurePWM 376E                i2WriteTimer0@timer0 003E  
                       ??_OpenPWM4 0042                         ??_OpenPWM5 0042  
                          _OpenADC 2C5E                            __Hparam 0000  
              __size_of_SetChanADC 001A                    __size_of_BusyTx 0010  
                          __Lparam 0000                __end_of_Write1USART 3694  
           __end_of_WriteIntEEPROM 332E                            _StartTx 37A4  
                  __size_of___ftge 00CE                            ___ftadd 103C  
                          ___awmod 26CA                            ___ftdiv 19D6  
                          ___ftneg 335E                    __size_of___wmul 0038  
                          ___ftmul 187A                            ___ftsub 2FB8  
                          ___fttol 1C58                __end_of_WriteEEPROM 315C  
                    ?i1_ConvertADC 0025                       __psmallconst 1000  
                ReadIntEEPROM@data 0075                         ??___altoft 009B  
                  __CFG_STVREN$OFF 000000                     ??_PutCharTxBuf 0042  
                          __pcinit 3414                 WriteEEPROM@address 006E  
                       ??___awtoft 0042                         ??___ftpack 0073  
                       ??___lbtoft 0042                  __end_of_eval_poly 21B2  
                          __ramtop 1000                __size_of_SendStatus 003A  
                   main@loop_count 0116                __size_of_OpenTimer0 0020  
              __size_of_OpenTimer1 002C                __size_of_OpenTimer2 001C  
                       ??___lltoft 007A                            __ptext0 14E2  
                          __ptext1 3566                            __ptext2 37B4  
                          __ptext3 37BA                            __ptext4 2614  
                          __ptext5 3744                            __ptext6 3050  
                          __ptext7 3752                            __ptext8 3094  
                          __ptext9 3216           __end_of_CalibrateOffsets 2D4C  
                    _SendThreshold 2E34                          _T0CONbits 000FD5  
         ?_CalculateSensorStatuses 0025                          _T1CONbits 000FCD  
                     _get_Tx_index 0017                          _T2CONbits 000FCA  
                     __size_of_exp 0228                       __size_of_log 0140  
           ??_CalculateSensorError 0042                       __size_of_pow 019A  
                 ?i1_SetADCChannel 0025                          _T3CONbits 000FB1  
                 ___awmod@dividend 006E                          _T4CONbits 000F76  
              __end_of_WriteTimer0 36F2                __end_of_WriteTimer1 36E0  
                 ??_ReadCharEEPROM 0042                     OpenADC@config2 006E  
                   __pintcode_body 2DC0                  _GetSensorReadings 363C  
             end_of_initialization 3438                            exp@sign 00B1  
                   main@sensor_sum 011B                    FlushRxBuf@index 0042  
               ?_GetSensorReadings 0025               __end_of_SendLineMode 3252  
                          int_func 2DC0                      ?i1_SetChanADC 0025  
          ??_DisplaySensorStatuses 0070                            pow@sign 010C  
              ??_GetSensorReadings 0043                    ?_WriteIntEEPROM 0071  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                     ??i1_ConvertADC 0025  
                        _PID_error 00E8        __end_of_ConfigureInterrupts 34D8  
                  FlushTxBuf@index 0042           __end_of_ConfigureBuggyIO 360A  
                   ?_SendThreshold 0075         __end_of_CalibrateThreshold 2FB8  
                        i1_ReadADC 3734                          _PORTBbits 000F81  
         __size_of_LoadCalibration 0096                     GetCharTxBuf@ch 002C  
              __size_of_StopMotors 001E                        _Tx_complete 0013  
                        _TRISCbits 000F94                          _TRISGbits 000F98  
        __end_of_GetSensorReadings 3652                          i1___awmod 2B60  
                     ??_ConvertADC 0042                       ??_ReadEEPROM 0042  
                      _Write1USART 367E                        ___ftdiv@exp 0083  
                   ??i1_SetChanADC 0025               __end_of_ResetMillis0 3786  
             __end_of_ResetMillis2 379A             i1SetADCChannel@channel 0027  
                      _WriteEEPROM 311C                       ??_FlushRxBuf 0042  
                     ??_FlushTxBuf 0042                        ___ftmul@exp 0082  
            SetDCMotorL@duty_cycle 0074                     __end_of_BusyTx 3724  
                _ConfigureWireless 3466                          _FlashLEDS 343E  
                     ?_ReadMillis0 006E                       ?_ReadMillis2 006E  
             _second_rollover_flag 0019             __size_of_DisableMotors 0004  
  __end_of_CalculateSensorStatuses 2546                     __end_of___ftge 2614  
               ?_ConfigureWireless 0025                     __end_of___wmul 32C4  
                     ?_SetDCMotorL 0074                       ?_SetDCMotorR 0074  
                     ??_Open1USART 0042                        _WriteTimer0 36E0  
                      _WriteTimer1 36CE                         ?i1_ReadADC 0025  
               __end_of_ConvertADC 37CA                         floor@expon 00A7  
            __end_of_SetADCChannel 22A0                       ??_SetChanADC 0042  
               __end_of_ReadEEPROM 335E                ??_ConfigureWireless 0043  
              start_initialization 3414           ?_NormaliseSensorReadings 0025  
                       eval_poly@d 0097                         eval_poly@n 0099  
                       eval_poly@x 0094                         ldexp@value 00A0  
                        _SetDCPWM4 3050                          _SetDCPWM5 3094  
                      __end_of_exp 14E2                        __end_of_log 1C58  
                      __end_of_pow 187A                         ?i1___awmod 0025  
               __end_of_FlushRxBuf 34B2                 __end_of_FlushTxBuf 33BC  
                  SetDCPWM4@DCycle 0072        __end_of_ConfigureUltrasound 35F0  
                  SetDCPWM5@DCycle 0072                       ??_SendStatus 0043  
                     ??_OpenTimer0 0042                       ??_OpenTimer1 0042  
                     ??_OpenTimer2 0042                      _echo_acq_done 0016  
                       frexp@value 006E               __end_of_PutCharTxBuf 31D8  
                      _SystemClock 0001                   _sensor_acq_index 001B  
               __end_of_Open1USART 2DC0              __end_of_BusySensorAcq 3734  
             SetADCChannel@channel 006F              __end_of_ReadIntEEPROM 2F68  
        __end_of_ConfigureWireless 348C                           ??_BusyTx 0042  
DisplaySensorStatuses@status_array 006E                 __end_of_SetChanADC 35D6  
                __size_of_OpenPWM4 0024                  __size_of_OpenPWM5 0024  
                         ??___ftge 0074                           ??___wmul 0042  
                       ?_FlashLEDS 0025        __end_of_SetDirectionForward 37C0  
                  ??_SendThreshold 0077                 i1___awmod@dividend 0025  
                 __CFG_LPT1OSC$OFF 000000                       ?_SendOffsets 0075  
                        _Rx_buffer 011C                    _WriteCharEEPROM 36BC  
        __size_of_EnableSensorLEDS 0006                _CalculateSensorSums 28E0  
               __end_of_SendStatus 328C                 __end_of_OpenTimer0 3566  
               __end_of_OpenTimer1 33E8                 __end_of_OpenTimer2 35BC  
                __size_of___altoft 00A2                          _Tx_buffer 00B2  
                __size_of___awtoft 0044                  __size_of___ftpack 0120  
                __size_of___lbtoft 002C                  __size_of___lltoft 007C  
                      __pbssCOMRAM 0001                      __pcstackBANK0 0060  
                    __pcstackBANK1 0100                         ?_SetDCPWM4 006E  
                       ?_SetDCPWM5 006E         __size_of_GetSensorReadings 0016  
            __size_of_SendLineMode 003C                  ??_LoadCalibration 007D  
                    _DisableMotors 37CE                       ?_SetUnipolar 0025  
             __end_ofi1_ConvertADC 37D6       __size_of_MillisecondTimerISR 001A  
             ?_CalculateSensorSums 0025              __end_of_SetDCMotorPID 26CA  
                     ??_StopMotors 0042                 WriteIntEEPROM@data 0073  
                         ?_BusyADC 0025                           ?_ReadADC 006E  
                        __pnvBANK0 00EA       __size_of_GenerateCalibration 00E6  
                        _character 0015                  OpenADC@portconfig 006F  
                         ?_OpenADC 006E                     _sensor_offsets 00DE  
                        _echo_time 000B                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                           ?_StartTx 0025  
                        __ptext100 360A                          __ptext101 36F2  
                         ?___ftadd 0088                           ?___awmod 006E  
                         ?___ftdiv 0076                           ?___ftneg 006E  
                         ?___ftmul 0079                           ?___ftsub 0094  
                         ?___fttol 0088                      ?_Delay10KTCYx 0025  
                      __pintcodelo 0018                    Open1USART@spbrg 006E  
            __end_ofi2_WriteTimer0 3704    __end_of_NormaliseSensorReadings 2F0A  
                      ??i1_ReadADC 0027                   _sensor_threshold 0022  
                     _SendLineMode 3216                  ?_CalibrateOffsets 0025  
            SendLineMode@line_mode 0075                        __smallconst 1000  
                WriteTimer0@timer0 006E               __end_ofi1_SetChanADC 367E  
                WriteTimer1@timer1 006E                          _eval_poly 20BC  
               i2WriteTimer0@timer 0040                 __end_of_StopMotors 3584  
               ??_CalibrateOffsets 0070                        ??i1___awmod 0029  
                   ?_DisableMotors 0025                          _line_mode 0024  
                   __size_of_floor 00FC                     __size_of_isrHP 2E2C  
                   __size_of_ldexp 0116                     __size_of_isrLP 00D4  
                   __size_of_frexp 00AE                    Write1USART@data 0025  
            __size_of_ResetMillis0 000A              __size_of_ResetMillis2 000A  
            ??_CalculateSensorSums 0043   __size_of_CalculateSensorStatuses 00D6  
                   ___wmul@product 0072                      OpenADC@config 0042  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                 ??_WriteIntEEPROM 0042                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D         __size_of_ConfigureWireless 0026  
       DisplaySensorStatuses@index 0042                           _PIR1bits 000F9E  
                         _DCmotorL 0007                           _DCmotorR 0009  
            __CFG_DATABW$DATA16BIT 000000            __end_of_WriteCharEEPROM 36CE  
   __size_of_DisplaySensorStatuses 0048                           _RCONbits 000FD0  
         __size_of_ConfigureTimer0 0016           __size_of_ConfigureTimer1 0018  
         __size_of_ConfigureTimer2 0008      __end_of_DisplaySensorStatuses 3050  
                 __CFG_WDTPS$32768 000000                     ??_Delay10KTCYx 0042  
            SetDCMotorR@duty_cycle 0074                        ??_FlashLEDS 0043  
             __size_of_ReadMillis0 000A               __size_of_ReadMillis2 000A  
                __CFG_ECCPMX$PORTH 000000                         _ADCON0bits 000FC2  
                ?_ConfigureBuggyIO 0025                  ___wmul@multiplier 006E  
             __size_of_SetDCMotorL 000E               __size_of_SetDCMotorR 000E  
                     _ResetMillis0 377C                       _ResetMillis2 3790  
               ??_ConfigureBuggyIO 0042                         ?_eval_poly 0094  
                      ??_SetDCPWM4 0070                        ??_SetDCPWM5 0070  
                 Delay10KTCYx@unit 006E      __size_of_CalculateSensorError 00B4  
            __size_of_PutCharTxBuf 003E           CalculateSensorSums@index 0115  
                      _INTCON2bits 000FF1                        _INTCON3bits 000FF0  
                    ?_GetCharTxBuf 0025                 _CalibrateThreshold 2F68  
         __size_ofi1_SetADCChannel 00EA                       ?_Write1USART 0025  
                        frexp@eptr 0071                         _EECON1bits 000FA6  
                         _OpenPWM4 3522                           _OpenPWM5 34FE  
                     ?_WriteEEPROM 006E                ?_CalibrateThreshold 0025  
                 __size_of_BusyADC 000E                   __size_of_ReadADC 0014  
                         __Hrparam 0000            __size_of_WirelessTx_ISR 0026  
                 __size_of_OpenADC 0078                           __Lrparam 0000  
    SendThreshold@sensor_threshold 0075           _CalculateSensorSums$3188 0111  
                i1___awmod@divisor 0027                  i1___awmod@counter 0029  
                 __size_of_StartTx 0008                   __size_of___ftadd 027E  
                 __size_of___awmod 00B4                   __size_of___ftdiv 0142  
                 __size_of___ftneg 0030                           ___altoft 2A28  
                 __size_of___ftmul 015C                   __size_of___ftsub 0050  
                 __size_of___fttol 0132                       ?_WriteTimer0 006E  
                     ?_WriteTimer1 006E                           ___awtoft 30D8  
                         ___ftpack 1D8A                           ___lbtoft 33E8  
                 _EnableSensorLEDS 37C0                           ___lltoft 2BE2  
                     _PutCharTxBuf 319A               __size_of_SendOffsets 00A2  
              _system_clock_enable 001C               ??_CalibrateThreshold 0043  
                         _exp$3191 00AC       __size_of_ConfigureInterrupts 0026  
            __size_ofi1_ConvertADC 0004                    ??_DisableMotors 0042  
                    ?_EnableMotors 0025                 SetDCPWM4@dutycycle 006E  
                   OpenPWM4@period 0042                           __ptext10 377C  
                         __ptext11 3786                           __ptext20 311C  
                         __ptext12 315C                           __ptext21 2E34  
                         __ptext13 2ACA                           __ptext30 379A  
                         __ptext22 3252                           __ptext14 2F0A  
                    _sensor_status 001D                           __ptext31 343E  
                         __ptext23 2986                           __ptext15 3704  
                         __ptext40 363C                           __ptext32 3584  
                         __ptext24 37A4                           __ptext16 332E  
                         __ptext41 21B2                           __ptext33 2F68  
                         __ptext25 319A                           __ptext17 238A  
                         __ptext50 338E                           __ptext42 35BC  
                         __ptext34 3694                           __ptext26 26CA  
                         __ptext18 32FC                           __ptext51 348C  
                         __ptext43 37C6                           __ptext35 2EA0  
                         __ptext27 3714                           __ptext19 36BC  
                         __ptext60 3546                           __ptext52 35D6  
                         __ptext44 3724                           __ptext36 3008  
                         __ptext28 31D8                           __ptext61 376E  
                         __ptext53 37AC                           __ptext45 37C0  
                         __ptext37 2470                           __ptext29 3790  
                         __ptext70 1B18                           __ptext62 34FE  
                         __ptext54 35A0                           __ptext46 37CA  
                         __ptext38 3760                           __ptext71 12BA  
                         __ptext63 3522                           __ptext55 3624  
                         __ptext47 37CE                           __ptext39 2CD6  
                         __ptext80 187A                           __ptext72 1EAA  
                         __ptext64 34B2                           __ptext56 36CE  
                         __ptext48 3466                           __ptext81 2FB8  
                         __ptext73 1FC0                           __ptext65 35F0  
                         __ptext57 33BC                           __ptext49 2D4C  
                         __ptext82 103C                           __ptext74 2832  
                         __ptext66 36A8                           __ptext58 3652  
                         __ptext91 22A0                           __ptext83 335E  
                         __ptext75 1C58                           __ptext67 2C5E  
                         __ptext59 36E0                           __ptext92 3668  
                         __ptext84 19D6                           __ptext76 2546  
                         __ptext68 28E0                           __ptext93 3734  
                         __ptext85 30D8                           __ptext77 2A28  
                         __ptext69 16E0                           __ptext94 37D2  
                         __ptext86 2BE2                           __ptext78 20BC  
                         __ptext95 34D8                           __ptext87 33E8  
                         __ptext79 328C                           __ptext96 367E  
                         __ptext88 1D8A                           __ptext97 32C4  
                         __ptext89 277E                     OpenPWM5@period 0042  
                         __ptext98 2B60                     ??_GetCharTxBuf 002B  
                         _pow$3190 0109                           _pow$3189 0106  
               SetDCPWM5@dutycycle 006E               __size_of_SetUnipolar 0006  
                    __size_of_main 01FE   __size_of_NormaliseSensorReadings 006A  
          __size_of_ReadCharEEPROM 0010                   ?_WriteCharEEPROM 0071  
            __size_ofi1_SetChanADC 0016                       i1_ConvertADC 37D2  
              _MillisecondTimerISR 360A                    _LoadCalibration 2ACA  
                    _USART1_Status 0014                  ??_ConfigureTimer0 0043  
                ??_ConfigureTimer1 0043                  ??_ConfigureTimer2 0043  
                         exp@coeff 1001                           log@coeff 101F  
            __CFG_ADDRBW$ADDR20BIT 000000       NormaliseSensorReadings@index 0042  
              _GenerateCalibration 238A                         _INTCONbits 000FF2  
                      ??_eval_poly 009B                     ??_EnableMotors 0042  
                       _PB1pressed 31D8                         _PB2pressed 315C  
             __end_of_Delay10KTCYx 35A0               ?_MillisecondTimerISR 0025  
                         intlevel1 0000                           intlevel2 0000  
          _CalculateSensorStatuses 2470                      ?_ConfigureADC 0025  
                    ?_ConfigurePWM 0025               ?_GenerateCalibration 0025  
                SetChanADC@channel 006E                         _RCSTA1bits 000FAB  
     __size_of_ConfigureUltrasound 001A                    WriteEEPROM@data 0070  
                     i1_SetChanADC 3668             __size_of_SetADCChannel 00EE  
            SendStatus@status_code 0075                  ??i1_SetADCChannel 0027  
            __end_of_SendThreshold 2EA0                         _PID_output 00DA  
     __size_of_SetDirectionForward 0006           SendOffsets@offsets_array 0075  
           __size_of_BusySensorAcq 0010             __size_of_ReadIntEEPROM 005E  
            ??_MillisecondTimerISR 0042               _sensor_threshold_ptr 00F0  
                   ??_ConfigureADC 0043                     ??_ConfigurePWM 0043  
        __size_of_CalibrateOffsets 0076              ??_GenerateCalibration 007A  
             __size_of_Write1USART 0016                     _WirelessTx_ISR 34D8  
          __end_of_LoadCalibration 2B60                       _put_Tx_index 0018  
