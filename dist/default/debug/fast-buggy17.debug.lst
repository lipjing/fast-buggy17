

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 26 12:12:54 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	text101,global,reloc=2,class=CODE,delta=1
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1
   116                           	psect	text104,global,reloc=2,class=CODE,delta=1
   117                           	psect	text105,global,reloc=2,class=CODE,delta=1
   118                           	psect	text106,global,reloc=2,class=CODE,delta=1
   119                           	psect	text107,global,reloc=2,class=CODE,delta=1
   120                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   122                           	psect	text109,global,reloc=2,class=CODE,delta=1
   123                           	psect	text110,global,reloc=2,class=CODE,delta=1
   124                           	psect	text111,global,reloc=2,class=CODE,delta=1
   125                           	psect	text112,global,reloc=2,class=CODE,delta=1
   126                           	psect	text113,global,reloc=2,class=CODE,delta=1
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   128                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   129  0000                     
   130                           	psect	nvBANK0
   131  0000E6                     __pnvBANK0:
   132                           	opt stack 0
   133  0000E6                     _convert_cm:
   134                           	opt stack 0
   135  0000E6                     	ds	3
   136  0000E9                     _convert_in:
   137                           	opt stack 0
   138  0000E9                     	ds	3
   139  0000                     _CCP4CON	set	3955
   140  0000                     _CCP5CON	set	3952
   141  0000                     _CCPR4L	set	3956
   142  0000                     _CCPR5L	set	3953
   143  0000                     _LATDbits	set	3980
   144  0000                     _LATE	set	3981
   145  0000                     _LATEbits	set	3981
   146  0000                     _LATHbits	set	3984
   147  0000                     _LATJ	set	3985
   148  0000                     _PORTBbits	set	3969
   149  0000                     _PORTHbits	set	3975
   150  0000                     _PR4	set	3959
   151  0000                     _SPBRGH1	set	3967
   152  0000                     _T4CONbits	set	3958
   153  0000                     _TRISA	set	3986
   154  0000                     _TRISB	set	3987
   155  0000                     _TRISC	set	3988
   156  0000                     _TRISCbits	set	3988
   157  0000                     _TRISD	set	3989
   158  0000                     _TRISE	set	3990
   159  0000                     _TRISG	set	3992
   160  0000                     _TRISGbits	set	3992
   161  0000                     _TRISHbits	set	3993
   162  0000                     _TRISJ	set	3994
   163  0000                     _ADCON0	set	4034
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1	set	4033
   166  0000                     _ADCON2	set	4032
   167  0000                     _ADRESH	set	4036
   168  0000                     _ADRESL	set	4035
   169  0000                     _EEADR	set	4009
   170  0000                     _EEADRH	set	4010
   171  0000                     _EECON1bits	set	4006
   172  0000                     _EECON2	set	4007
   173  0000                     _EEDATA	set	4008
   174  0000                     _IPR1bits	set	3999
   175  0000                     _PIE1bits	set	3997
   176  0000                     _PIR1bits	set	3998
   177  0000                     _PR2	set	4043
   178  0000                     _RCONbits	set	4048
   179  0000                     _RCREG1	set	4014
   180  0000                     _RCSTA1	set	4011
   181  0000                     _RCSTA1bits	set	4011
   182  0000                     _SPBRG1	set	4015
   183  0000                     _T1CON	set	4045
   184  0000                     _T1CONbits	set	4045
   185  0000                     _T2CON	set	4042
   186  0000                     _T2CONbits	set	4042
   187  0000                     _T3CONbits	set	4017
   188  0000                     _TMR1H	set	4047
   189  0000                     _TMR1L	set	4046
   190  0000                     _TMR2	set	4044
   191  0000                     _TXREG1	set	4013
   192  0000                     _TXSTA1	set	4012
   193  0000                     _TXSTA1bits	set	4012
   194  0000                     _T0CON	set	4053
   195  0000                     _T0CONbits	set	4053
   196  0000                     _TMR0H	set	4055
   197  0000                     _TMR0L	set	4054
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _INTCON3bits	set	4080
   200  0000                     _INTCONbits	set	4082
   201                           
   202                           ; #config settings
   203  0000                     
   204                           	psect	cinit
   205  0020F6                     __pcinit:
   206                           	opt stack 0
   207  0020F6                     start_initialization:
   208                           	opt stack 0
   209  0020F6                     __initialization:
   210                           	opt stack 0
   211                           
   212                           ; Clear objects allocated to BANK0 (96 bytes)
   213  0020F6  EE00  F060         	lfsr	0,__pbssBANK0
   214  0020FA  0E60               	movlw	96
   215  0020FC                     clear_0:
   216  0020FC  6AEE               	clrf	postinc0,c
   217  0020FE  06E8               	decf	wreg,f,c
   218  002100  E1FD               	bnz	clear_0
   219                           
   220                           ; Clear objects allocated to COMRAM (42 bytes)
   221  002102  EE00  F001         	lfsr	0,__pbssCOMRAM
   222  002106  0E2A               	movlw	42
   223  002108                     clear_1:
   224  002108  6AEE               	clrf	postinc0,c
   225  00210A  06E8               	decf	wreg,f,c
   226  00210C  E1FD               	bnz	clear_1
   227  00210E                     end_of_initialization:
   228                           	opt stack 0
   229  00210E                     __end_of__initialization:
   230                           	opt stack 0
   231  00210E  0100               	movlb	0
   232  002110  EF78  F000         	goto	_main	;jump to C main() function
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	bssCOMRAM
   237  000001                     __pbssCOMRAM:
   238                           	opt stack 0
   239  000001                     _SystemClock:
   240                           	opt stack 0
   241  000001                     	ds	6
   242  000007                     _DCmotorL:
   243                           	opt stack 0
   244  000007                     	ds	2
   245  000009                     _DCmotorR:
   246                           	opt stack 0
   247  000009                     	ds	2
   248  00000B                     _echo_time:
   249                           	opt stack 0
   250  00000B                     	ds	2
   251  00000D                     _millisecond_COUNT0:
   252                           	opt stack 0
   253  00000D                     	ds	2
   254  00000F                     _millisecond_COUNT1:
   255                           	opt stack 0
   256  00000F                     	ds	2
   257  000011                     _millisecond_COUNT2:
   258                           	opt stack 0
   259  000011                     	ds	2
   260  000013                     _millisecond_COUNT3:
   261                           	opt stack 0
   262  000013                     	ds	2
   263  000015                     _RxCharacter:
   264                           	opt stack 0
   265  000015                     	ds	1
   266  000016                     _Rx_chars_received:
   267                           	opt stack 0
   268  000016                     	ds	1
   269  000017                     _Rx_complete:
   270                           	opt stack 0
   271  000017                     	ds	1
   272  000018                     _Rx_msg_length:
   273                           	opt stack 0
   274  000018                     	ds	1
   275  000019                     _TxCharacter:
   276                           	opt stack 0
   277  000019                     	ds	1
   278  00001A                     _Tx_complete:
   279                           	opt stack 0
   280  00001A                     	ds	1
   281  00001B                     _USART1_Status:
   282                           	opt stack 0
   283  00001B                     	ds	1
   284  00001C                     _echo_acq_done:
   285                           	opt stack 0
   286  00001C                     	ds	1
   287  00001D                     _get_Rx_index:
   288                           	opt stack 0
   289  00001D                     	ds	1
   290  00001E                     _get_Tx_index:
   291                           	opt stack 0
   292  00001E                     	ds	1
   293  00001F                     _put_Rx_index:
   294                           	opt stack 0
   295  00001F                     	ds	1
   296  000020                     _put_Tx_index:
   297                           	opt stack 0
   298  000020                     	ds	1
   299  000021                     _second_rollover_flag:
   300                           	opt stack 0
   301  000021                     	ds	1
   302  000022                     _sensor_acq_done:
   303                           	opt stack 0
   304  000022                     	ds	1
   305  000023                     _sensor_acq_index:
   306                           	opt stack 0
   307  000023                     	ds	1
   308  000024                     _system_clock_enable:
   309                           	opt stack 0
   310  000024                     	ds	1
   311  000025                     _sensor_statuses:
   312                           	opt stack 0
   313  000025                     	ds	5
   314  00002A                     _line_mode:
   315                           	opt stack 0
   316  00002A                     	ds	1
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           
   320                           	psect	bssBANK0
   321  000060                     __pbssBANK0:
   322                           	opt stack 0
   323  000060                     _Rx_buffer:
   324                           	opt stack 0
   325  000060                     	ds	25
   326  000079                     _Tx_buffer:
   327                           	opt stack 0
   328  000079                     	ds	25
   329  000092                     _PID_Kd:
   330                           	opt stack 0
   331  000092                     	ds	2
   332  000094                     _PID_Ki:
   333                           	opt stack 0
   334  000094                     	ds	2
   335  000096                     _PID_Kp:
   336                           	opt stack 0
   337  000096                     	ds	2
   338  000098                     _PID_output:
   339                           	opt stack 0
   340  000098                     	ds	2
   341  00009A                     _sensor_offsets:
   342                           	opt stack 0
   343  00009A                     	ds	10
   344  0000A4                     _sensor_readings_normalised:
   345                           	opt stack 0
   346  0000A4                     	ds	10
   347  0000AE                     _sensor_readings_raw:
   348                           	opt stack 0
   349  0000AE                     	ds	10
   350  0000B8                     _PID_error:
   351                           	opt stack 0
   352  0000B8                     	ds	2
   353  0000BA                     _PID_set_point:
   354                           	opt stack 0
   355  0000BA                     	ds	2
   356  0000BC                     _off_line_sum:
   357                           	opt stack 0
   358  0000BC                     	ds	2
   359  0000BE                     _sensor_threshold:
   360                           	opt stack 0
   361  0000BE                     	ds	2
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365                           	psect	cstackBANK1
   366  000100                     __pcstackBANK1:
   367                           	opt stack 0
   368  000100                     main@sensor_sum_ptr:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x0
   372  000100                     	ds	2
   373  000102                     main@PID_error_ptr:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x2
   377  000102                     	ds	2
   378  000104                     main@battery_current_ptr:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x4
   382  000104                     	ds	2
   383  000106                     main@battery_current_acc_ptr:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x6
   387  000106                     	ds	2
   388  000108                     main@line_end_flag:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x8
   392  000108                     	ds	1
   393  000109                     main@send_battery_stats_flag:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x9
   397  000109                     	ds	1
   398  00010A                     main@find_line_flag:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0xA
   402  00010A                     	ds	1
   403  00010B                     main@battery_current_acc:
   404                           	opt stack 0
   405                           
   406                           ; 4 bytes @ 0xB
   407  00010B                     	ds	4
   408  00010F                     main@battery_current:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0xF
   412  00010F                     	ds	2
   413  000111                     main@line_mode_ptr:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x11
   417  000111                     	ds	2
   418  000113                     main@PID_set_point_ptr:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x13
   422  000113                     	ds	2
   423  000115                     main@off_line_sum_ptr:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x15
   427  000115                     	ds	2
   428  000117                     main@battery_voltage_ptr:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x17
   432  000117                     	ds	2
   433  000119                     main@wall_detected_flag:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x19
   437  000119                     	ds	1
   438  00011A                     main@battery_voltage:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x1A
   442  00011A                     	ds	2
   443  00011C                     main@D_temp:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x1C
   447  00011C                     	ds	2
   448  00011E                     main@I_temp:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x1E
   452  00011E                     	ds	2
   453  000120                     main@stop_flag:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x20
   457  000120                     	ds	1
   458  000121                     main@sensor_threshold_ptr:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x21
   462  000121                     	ds	2
   463  000123                     main@command_msg:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x23
   467  000123                     	ds	1
   468  000124                     main@Kp_stored:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x24
   472  000124                     	ds	2
   473  000126                     main@Kd_stored:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x26
   477  000126                     	ds	2
   478  000128                     main@Ki_stored:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x28
   482  000128                     	ds	2
   483  00012A                     main@sensor_sum:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x2A
   487  00012A                     	ds	2
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           
   491                           	psect	cstackBANK0
   492  0000C0                     __pcstackBANK0:
   493                           	opt stack 0
   494  0000C0                     ReadTimer1@timer:
   495                           	opt stack 0
   496  0000C0                     i2WriteTimer0@timer:
   497                           	opt stack 0
   498  0000C0                     i2WriteTimer1@timer:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x0
   502  0000C0                     	ds	2
   503  0000C2                     ??_isrHP:
   504                           
   505                           ; 0 bytes @ 0x2
   506  0000C2                     	ds	14
   507  0000D0                     ??_SetChanADC:
   508  0000D0                     ??_Delay10KTCYx:
   509  0000D0                     ?_ReadEchoLength:
   510                           	opt stack 0
   511  0000D0                     ?_ReadMillis0:
   512                           	opt stack 0
   513  0000D0                     ?_ReadMillis1:
   514                           	opt stack 0
   515  0000D0                     ?_ReadMillis2:
   516                           	opt stack 0
   517  0000D0                     ?___wmul:
   518                           	opt stack 0
   519  0000D0                     ?___awdiv:
   520                           	opt stack 0
   521  0000D0                     ?___awmod:
   522                           	opt stack 0
   523  0000D0                     FlushTxBuf@index:
   524                           	opt stack 0
   525  0000D0                     FlushRxBuf@index:
   526                           	opt stack 0
   527  0000D0                     OWReset@result:
   528                           	opt stack 0
   529  0000D0                     OWWriteBit@b:
   530                           	opt stack 0
   531  0000D0                     OWReadBit@result:
   532                           	opt stack 0
   533  0000D0                     OpenADC@config2:
   534                           	opt stack 0
   535  0000D0                     OpenPWM4@period:
   536                           	opt stack 0
   537  0000D0                     OpenPWM5@period:
   538                           	opt stack 0
   539  0000D0                     OpenTimer0@config:
   540                           	opt stack 0
   541  0000D0                     OpenTimer1@config:
   542                           	opt stack 0
   543  0000D0                     OpenTimer2@config:
   544                           	opt stack 0
   545  0000D0                     Read1USART@data:
   546                           	opt stack 0
   547  0000D0                     Delay1TCYx@unit:
   548                           	opt stack 0
   549  0000D0                     WriteEEPROM@address:
   550                           	opt stack 0
   551  0000D0                     ReadEEPROM@address:
   552                           	opt stack 0
   553  0000D0                     NormaliseSensorReadings@sensor_readings_raw:
   554                           	opt stack 0
   555  0000D0                     CalculateSensorStatuses@sensor_readings_normalised:
   556                           	opt stack 0
   557  0000D0                     CalculateDiscreteSensorSum@sensor_statuses:
   558                           	opt stack 0
   559  0000D0                     DisplaySensorStatuses@sensor_statuses:
   560                           	opt stack 0
   561  0000D0                     SetDCPWM4@dutycycle:
   562                           	opt stack 0
   563  0000D0                     SetDCPWM5@dutycycle:
   564                           	opt stack 0
   565  0000D0                     WriteTimer0@timer0:
   566                           	opt stack 0
   567  0000D0                     WriteTimer1@timer1:
   568                           	opt stack 0
   569  0000D0                     Open1USART@spbrg:
   570                           	opt stack 0
   571  0000D0                     ___wmul@multiplier:
   572                           	opt stack 0
   573  0000D0                     ___awdiv@dividend:
   574                           	opt stack 0
   575  0000D0                     ___awmod@dividend:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x10
   579  0000D0                     	ds	1
   580  0000D1                     OWWriteByte@byte:
   581                           	opt stack 0
   582  0000D1                     OWReadByte@result:
   583                           	opt stack 0
   584  0000D1                     OpenADC@portconfig:
   585                           	opt stack 0
   586  0000D1                     SetChanADC@channel:
   587                           	opt stack 0
   588  0000D1                     Delay10KTCYx@unit:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x11
   592  0000D1                     	ds	1
   593  0000D2                     ??_SetDCPWM5:
   594  0000D2                     ??_SetDCPWM4:
   595  0000D2                     ??_OpenADC:
   596  0000D2                     ??_DisplaySensorStatuses:
   597  0000D2                     ?_ReadIntEEPROM:
   598                           	opt stack 0
   599  0000D2                     WriteEEPROM@data:
   600                           	opt stack 0
   601  0000D2                     OWWriteByte@i:
   602                           	opt stack 0
   603  0000D2                     OWReadByte@i:
   604                           	opt stack 0
   605  0000D2                     SetADCChannel@channel:
   606                           	opt stack 0
   607  0000D2                     CalculateDiscreteSensorSum@sum:
   608                           	opt stack 0
   609  0000D2                     Open1USART@config:
   610                           	opt stack 0
   611  0000D2                     ReadIntEEPROM@address:
   612                           	opt stack 0
   613  0000D2                     ReadCharEEPROM@address:
   614                           	opt stack 0
   615  0000D2                     NormaliseSensorReadings@sensor_offsets:
   616                           	opt stack 0
   617  0000D2                     CalculateSensorStatuses@sensor_threshold:
   618                           	opt stack 0
   619  0000D2                     WriteTimer0@timer:
   620                           	opt stack 0
   621  0000D2                     WriteTimer1@timer:
   622                           	opt stack 0
   623  0000D2                     ___wmul@multiplicand:
   624                           	opt stack 0
   625  0000D2                     ___awdiv@divisor:
   626                           	opt stack 0
   627  0000D2                     ___awmod@divisor:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x12
   631  0000D2                     	ds	1
   632  0000D3                     ?_ReadVoltage:
   633                           	opt stack 0
   634  0000D3                     CalculateDiscreteSensorSum@index:
   635                           	opt stack 0
   636  0000D3                     WriteIntEEPROM@address:
   637                           	opt stack 0
   638  0000D3                     WriteCharEEPROM@address:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x13
   642  0000D3                     	ds	1
   643  0000D4                     ??_ReadIntEEPROM:
   644  0000D4                     ??_NormaliseSensorReadings:
   645  0000D4                     ??_CalculateSensorStatuses:
   646  0000D4                     DisplaySensorStatuses@index:
   647                           	opt stack 0
   648  0000D4                     OpenADC@config:
   649                           	opt stack 0
   650  0000D4                     ___awdiv@counter:
   651                           	opt stack 0
   652  0000D4                     ___awmod@counter:
   653                           	opt stack 0
   654  0000D4                     SetDCPWM4@DCycle:
   655                           	opt stack 0
   656  0000D4                     SetDCPWM5@DCycle:
   657                           	opt stack 0
   658  0000D4                     ___wmul@product:
   659                           	opt stack 0
   660  0000D4                     ConfigureUltrasound@echo_to_cm:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x14
   664  0000D4                     	ds	1
   665  0000D5                     ??_ReadVoltage:
   666  0000D5                     WriteCharEEPROM@data:
   667                           	opt stack 0
   668  0000D5                     ___awdiv@sign:
   669                           	opt stack 0
   670  0000D5                     ___awmod@sign:
   671                           	opt stack 0
   672  0000D5                     WriteIntEEPROM@data:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x15
   676  0000D5                     	ds	1
   677  0000D6                     ??_PutCharTxBuf:
   678  0000D6                     ??_PutCharRxBuf:
   679  0000D6                     ??_GetCharRxBuf:
   680  0000D6                     ?_CalculateSensorSum:
   681                           	opt stack 0
   682  0000D6                     SetDCMotorL@duty_cycle:
   683                           	opt stack 0
   684  0000D6                     SetDCMotorR@duty_cycle:
   685                           	opt stack 0
   686  0000D6                     CalculateSensorSum@sensor_readings_normalised:
   687                           	opt stack 0
   688  0000D6                     ___awdiv@quotient:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x16
   692  0000D6                     	ds	1
   693  0000D7                     PutCharTxBuf@ch:
   694                           	opt stack 0
   695  0000D7                     PutCharRxBuf@ch:
   696                           	opt stack 0
   697  0000D7                     GetCharRxBuf@ch:
   698                           	opt stack 0
   699  0000D7                     ReadIntEEPROM@data:
   700                           	opt stack 0
   701  0000D7                     ConfigureUltrasound@echo_to_in:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x17
   705  0000D7                     	ds	1
   706  0000D8                     ??_CalculateSensorSum:
   707  0000D8                     SendStatus@status_code:
   708                           	opt stack 0
   709  0000D8                     NormaliseSensorReadings@index:
   710                           	opt stack 0
   711  0000D8                     SetDCMotorPID@PIDoutput:
   712                           	opt stack 0
   713  0000D8                     SendLineMode@line_mode:
   714                           	opt stack 0
   715  0000D8                     SendOffsets@offsets_array:
   716                           	opt stack 0
   717  0000D8                     SendDefaultPIDValues@Kp:
   718                           	opt stack 0
   719  0000D8                     SendStoredPIDValues@Kp:
   720                           	opt stack 0
   721  0000D8                     SendCurrentPIDValues@Kp:
   722                           	opt stack 0
   723  0000D8                     SendBattVoltageInitial@reading:
   724                           	opt stack 0
   725  0000D8                     SendPIDSetPointOnLine@set_point:
   726                           	opt stack 0
   727  0000D8                     SendPIDSetPointOffLine@set_point:
   728                           	opt stack 0
   729  0000D8                     ReadVoltage@result:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x18
   733  0000D8                     	ds	1
   734  0000D9                     ??_CalibrateOffsets:
   735  0000D9                     ??_SetPIDValues:
   736                           
   737                           ; 0 bytes @ 0x19
   738  0000D9                     	ds	1
   739  0000DA                     ??_SetDCMotorPID:
   740  0000DA                     ??_SendOffsets:
   741  0000DA                     ??_SendBattVoltageInitial:
   742  0000DA                     ??_SendPIDSetPointOnLine:
   743  0000DA                     ??_SendPIDSetPointOffLine:
   744  0000DA                     SendDefaultPIDValues@Kd:
   745                           	opt stack 0
   746  0000DA                     SendStoredPIDValues@Kd:
   747                           	opt stack 0
   748  0000DA                     SendCurrentPIDValues@Kd:
   749                           	opt stack 0
   750  0000DA                     CalculateSensorSum@sum:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x1A
   754  0000DA                     	ds	1
   755  0000DB                     CalculateSensorStatuses@index:
   756                           	opt stack 0
   757  0000DB                     CalibrateOffsets@index:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x1B
   761  0000DB                     	ds	1
   762  0000DC                     ??_GenerateCalibration:
   763  0000DC                     SendOffsets@index:
   764                           	opt stack 0
   765  0000DC                     SetPIDValues@char_index:
   766                           	opt stack 0
   767  0000DC                     SendDefaultPIDValues@Ki:
   768                           	opt stack 0
   769  0000DC                     SendStoredPIDValues@Ki:
   770                           	opt stack 0
   771  0000DC                     SendCurrentPIDValues@Ki:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x1C
   775  0000DC                     	ds	1
   776  0000DD                     
   777                           ; 0 bytes @ 0x1D
   778  0000DD                     	ds	1
   779  0000DE                     GenerateCalibration@index:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x1E
   783  0000DE                     	ds	1
   784  0000DF                     ??_LoadCalibration:
   785                           
   786                           ; 0 bytes @ 0x1F
   787  0000DF                     	ds	2
   788  0000E1                     LoadCalibration@index:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x21
   792  0000E1                     	ds	1
   793  0000E2                     ??_main:
   794                           
   795                           ; 0 bytes @ 0x22
   796  0000E2                     	ds	4
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           
   800                           	psect	cstackCOMRAM
   801  00002B                     __pcstackCOMRAM:
   802                           	opt stack 0
   803  00002B                     ??i1_SetChanADC:
   804  00002B                     ?_ReadADC:
   805                           	opt stack 0
   806  00002B                     ?i1___awmod:
   807                           	opt stack 0
   808  00002B                     Write1USART@data:
   809                           	opt stack 0
   810  00002B                     i1___awmod@dividend:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x0
   814  00002B                     	ds	1
   815  00002C                     i1SetChanADC@channel:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x1
   819  00002C                     	ds	1
   820  00002D                     ??_ReadADC:
   821  00002D                     i1SetADCChannel@channel:
   822                           	opt stack 0
   823  00002D                     i1___awmod@divisor:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x2
   827  00002D                     	ds	2
   828  00002F                     i1___awmod@counter:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x4
   832  00002F                     	ds	1
   833  000030                     i1___awmod@sign:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x5
   837  000030                     	ds	1
   838  000031                     ??_GetCharTxBuf:
   839                           
   840                           ; 0 bytes @ 0x6
   841  000031                     	ds	1
   842  000032                     GetCharTxBuf@ch:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x7
   846  000032                     	ds	1
   847  000033                     ??_isrLP:
   848                           
   849                           ; 0 bytes @ 0x8
   850  000033                     	ds	17
   851  000044                     ?_ReadTimer1:
   852                           	opt stack 0
   853  000044                     i2WriteTimer0@timer0:
   854                           	opt stack 0
   855  000044                     i2WriteTimer1@timer1:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x19
   859  000044                     	ds	2
   860  000046                     postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           
   863                           ; 0 bytes @ 0x1B
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 665 in file "FastBuggy17_Main_Code_TUNING.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  battery_curr    4   11[BANK1 ] unsigned long 
   874 ;;  sensor_sum      2   42[BANK1 ] int 
   875 ;;  Ki_stored       2   40[BANK1 ] int 
   876 ;;  Kd_stored       2   38[BANK1 ] int 
   877 ;;  Kp_stored       2   36[BANK1 ] int 
   878 ;;  sensor_thres    2   33[BANK1 ] PTR int 
   879 ;;		 -> sensor_threshold(2), 
   880 ;;  I_temp          2   30[BANK1 ] int 
   881 ;;  D_temp          2   28[BANK1 ] int 
   882 ;;  battery_volt    2   26[BANK1 ] unsigned int 
   883 ;;  battery_volt    2   23[BANK1 ] PTR unsigned int 
   884 ;;		 -> main@battery_voltage(2), 
   885 ;;  off_line_sum    2   21[BANK1 ] PTR int 
   886 ;;		 -> off_line_sum(2), 
   887 ;;  PID_set_poin    2   19[BANK1 ] PTR int 
   888 ;;		 -> PID_set_point(2), 
   889 ;;  line_mode_pt    2   17[BANK1 ] PTR unsigned char 
   890 ;;		 -> line_mode(1), 
   891 ;;  battery_curr    2   15[BANK1 ] unsigned int 
   892 ;;  battery_curr    2    6[BANK1 ] PTR unsigned long 
   893 ;;		 -> main@battery_current_acc(4), 
   894 ;;  battery_curr    2    4[BANK1 ] PTR unsigned int 
   895 ;;		 -> main@battery_current(2), 
   896 ;;  PID_error_pt    2    2[BANK1 ] PTR int 
   897 ;;		 -> PID_error(2), 
   898 ;;  sensor_sum_p    2    0[BANK1 ] PTR int 
   899 ;;		 -> main@sensor_sum(2), 
   900 ;;  I_min           2    0        int 
   901 ;;  I_max           2    0        int 
   902 ;;  echo_length     2    0        unsigned int 
   903 ;;  command_msg     1   35[BANK1 ] unsigned char 
   904 ;;  stop_flag       1   32[BANK1 ] unsigned char 
   905 ;;  wall_detecte    1   25[BANK1 ] unsigned char 
   906 ;;  find_line_fl    1   10[BANK1 ] unsigned char 
   907 ;;  send_battery    1    9[BANK1 ] unsigned char 
   908 ;;  line_end_fla    1    8[BANK1 ] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         0       4      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:       48 bytes
   923 ;; Hardware stack levels required when called:   13
   924 ;; This function calls:
   925 ;;		_BusyDistanceAcq
   926 ;;		_BusySensorAcq
   927 ;;		_CalculateDiscreteSensorSum
   928 ;;		_CalculateSensorStatuses
   929 ;;		_CalculateSensorSum
   930 ;;		_CommandAvailable
   931 ;;		_ConfigureADC
   932 ;;		_ConfigureBuggyIO
   933 ;;		_ConfigureInterrupts
   934 ;;		_ConfigurePWM
   935 ;;		_ConfigureTimer0
   936 ;;		_ConfigureTimer1
   937 ;;		_ConfigureTimer2
   938 ;;		_ConfigureUltrasound
   939 ;;		_ConfigureWireless
   940 ;;		_Delay10KTCYx
   941 ;;		_DisableMotors
   942 ;;		_DisplaySensorStatuses
   943 ;;		_EnableMotors
   944 ;;		_EnableSensorLEDS
   945 ;;		_FlashLEDS
   946 ;;		_GenerateCalibration
   947 ;;		_GetCommand
   948 ;;		_GetDistance
   949 ;;		_GetSensorReadings
   950 ;;		_LoadCalibration
   951 ;;		_LoadPIDValues
   952 ;;		_NormaliseSensorReadings
   953 ;;		_PB1pressed
   954 ;;		_PB2pressed
   955 ;;		_ReadEchoLength
   956 ;;		_ReadIntEEPROM
   957 ;;		_ReadMillis0
   958 ;;		_ReadMillis1
   959 ;;		_ReadVoltage
   960 ;;		_ResetAccumulatedCurrent
   961 ;;		_ResetMillis0
   962 ;;		_ResetMillis1
   963 ;;		_ResetMillis2
   964 ;;		_ResetMillis3
   965 ;;		_SendBattVoltageInitial
   966 ;;		_SendCurrentPIDValues
   967 ;;		_SendDefaultPIDValues
   968 ;;		_SendLineMode
   969 ;;		_SendOffsets
   970 ;;		_SendPIDSetPointOffLine
   971 ;;		_SendPIDSetPointOnLine
   972 ;;		_SendStatus
   973 ;;		_SendStoredPIDValues
   974 ;;		_SetDCMotorL
   975 ;;		_SetDCMotorPID
   976 ;;		_SetDCMotorR
   977 ;;		_SetDirectionForward
   978 ;;		_SetForwardsMotorR
   979 ;;		_SetPIDValues
   980 ;;		_SetReverseMotorL
   981 ;;		_SetUnipolar
   982 ;;		_StopMotors
   983 ;;		___awdiv
   984 ;;		___wmul
   985 ;; This function is called by:
   986 ;;		Startup code after reset
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text0
   991  0000F0                     __ptext0:
   992                           	opt stack 0
   993  0000F0                     _main:
   994                           	opt stack 18
   995                           
   996                           ;FastBuggy17_Main_Code_TUNING.c: 668: unsigned char stop_flag, find_line_flag, line_end_
      +                          flag, wall_detected_flag, send_battery_stats_flag, command_msg;
   997                           ;FastBuggy17_Main_Code_TUNING.c: 669: unsigned int echo_length, battery_voltage, battery
      +                          _current;
   998                           ;FastBuggy17_Main_Code_TUNING.c: 670: unsigned long int battery_current_acc;
   999                           ;FastBuggy17_Main_Code_TUNING.c: 671: int sensor_sum, D_temp, I_temp, I_max, I_min, Kp_s
      +                          tored, Kd_stored, Ki_stored;
  1000                           ;FastBuggy17_Main_Code_TUNING.c: 674: unsigned char *line_mode_ptr;
  1001                           
  1002                           ;incstack = 0
  1003  0000F0  0E2A               	movlw	low _line_mode
  1004  0000F2  0101               	movlb	1	; () banked
  1005  0000F4  6F11               	movwf	main@line_mode_ptr& (0+255),b
  1006  0000F6  0E00               	movlw	high _line_mode
  1007  0000F8  0101               	movlb	1	; () banked
  1008  0000FA  6F12               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1009                           
  1010                           ;FastBuggy17_Main_Code_TUNING.c: 678: sensor_threshold_ptr = &sensor_threshold;
  1011  0000FC  0EBE               	movlw	low _sensor_threshold
  1012  0000FE  0101               	movlb	1	; () banked
  1013  000100  6F21               	movwf	main@sensor_threshold_ptr& (0+255),b
  1014  000102  0E00               	movlw	high _sensor_threshold
  1015  000104  0101               	movlb	1	; () banked
  1016  000106  6F22               	movwf	(main@sensor_threshold_ptr+1)& (0+255),b
  1017                           
  1018                           ;FastBuggy17_Main_Code_TUNING.c: 679: sensor_sum_ptr = &sensor_sum;
  1019  000108  0E2A               	movlw	low main@sensor_sum
  1020  00010A  0101               	movlb	1	; () banked
  1021  00010C  6F00               	movwf	main@sensor_sum_ptr& (0+255),b
  1022  00010E  0E01               	movlw	high main@sensor_sum
  1023  000110  0101               	movlb	1	; () banked
  1024  000112  6F01               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1025                           
  1026                           ;FastBuggy17_Main_Code_TUNING.c: 680: PID_error_ptr = &PID_error;
  1027  000114  0EB8               	movlw	low _PID_error
  1028  000116  0101               	movlb	1	; () banked
  1029  000118  6F02               	movwf	main@PID_error_ptr& (0+255),b
  1030  00011A  0E00               	movlw	high _PID_error
  1031  00011C  0101               	movlb	1	; () banked
  1032  00011E  6F03               	movwf	(main@PID_error_ptr+1)& (0+255),b
  1033                           
  1034                           ;FastBuggy17_Main_Code_TUNING.c: 681: PID_set_point_ptr = &PID_set_point;
  1035  000120  0EBA               	movlw	low _PID_set_point
  1036  000122  0101               	movlb	1	; () banked
  1037  000124  6F13               	movwf	main@PID_set_point_ptr& (0+255),b
  1038  000126  0E00               	movlw	high _PID_set_point
  1039  000128  0101               	movlb	1	; () banked
  1040  00012A  6F14               	movwf	(main@PID_set_point_ptr+1)& (0+255),b
  1041                           
  1042                           ;FastBuggy17_Main_Code_TUNING.c: 682: off_line_sum_ptr = &off_line_sum;
  1043  00012C  0EBC               	movlw	low _off_line_sum
  1044  00012E  0101               	movlb	1	; () banked
  1045  000130  6F15               	movwf	main@off_line_sum_ptr& (0+255),b
  1046  000132  0E00               	movlw	high _off_line_sum
  1047  000134  0101               	movlb	1	; () banked
  1048  000136  6F16               	movwf	(main@off_line_sum_ptr+1)& (0+255),b
  1049                           
  1050                           ;FastBuggy17_Main_Code_TUNING.c: 685: unsigned int *battery_voltage_ptr, *battery_curren
      +                          t_ptr;
  1051                           ;FastBuggy17_Main_Code_TUNING.c: 686: unsigned long int *battery_current_acc_ptr;
  1052                           ;FastBuggy17_Main_Code_TUNING.c: 688: battery_voltage_ptr = &battery_voltage;
  1053  000138  0E1A               	movlw	low main@battery_voltage
  1054  00013A  0101               	movlb	1	; () banked
  1055  00013C  6F17               	movwf	main@battery_voltage_ptr& (0+255),b
  1056  00013E  0E01               	movlw	high main@battery_voltage
  1057  000140  0101               	movlb	1	; () banked
  1058  000142  6F18               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1059                           
  1060                           ;FastBuggy17_Main_Code_TUNING.c: 689: battery_current_ptr = &battery_current;
  1061  000144  0E0F               	movlw	low main@battery_current
  1062  000146  0101               	movlb	1	; () banked
  1063  000148  6F04               	movwf	main@battery_current_ptr& (0+255),b
  1064  00014A  0E01               	movlw	high main@battery_current
  1065  00014C  0101               	movlb	1	; () banked
  1066  00014E  6F05               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1067                           
  1068                           ;FastBuggy17_Main_Code_TUNING.c: 690: battery_current_acc_ptr = &battery_current_acc;
  1069  000150  0E0B               	movlw	low main@battery_current_acc
  1070  000152  0101               	movlb	1	; () banked
  1071  000154  6F06               	movwf	main@battery_current_acc_ptr& (0+255),b
  1072  000156  0E01               	movlw	high main@battery_current_acc
  1073  000158  0101               	movlb	1	; () banked
  1074  00015A  6F07               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1075                           
  1076                           ; BSR set to: 1
  1077                           ;FastBuggy17_Main_Code_TUNING.c: 692: ConfigureUltrasound(0.0137, 0.054);
  1078  00015C  0E76               	movlw	118
  1079  00015E  0100               	movlb	0	; () banked
  1080  000160  6FD4               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1081  000162  0E60               	movlw	96
  1082  000164  0100               	movlb	0	; () banked
  1083  000166  6FD5               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1084  000168  0E3C               	movlw	60
  1085  00016A  0100               	movlb	0	; () banked
  1086  00016C  6FD6               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1087  00016E  0E2F               	movlw	47
  1088  000170  0100               	movlb	0	; () banked
  1089  000172  6FD7               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1090  000174  0E5D               	movlw	93
  1091  000176  0100               	movlb	0	; () banked
  1092  000178  6FD8               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1093  00017A  0E3D               	movlw	61
  1094  00017C  0100               	movlb	0	; () banked
  1095  00017E  6FD9               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1096  000180  ECE3  F00F         	call	_ConfigureUltrasound	;wreg free
  1097                           
  1098                           ;FastBuggy17_Main_Code_TUNING.c: 693: ConfigureBuggyIO();
  1099  000184  ECD5  F010         	call	_ConfigureBuggyIO	;wreg free
  1100                           
  1101                           ;FastBuggy17_Main_Code_TUNING.c: 694: ConfigureInterrupts();
  1102  000188  ECF7  F00F         	call	_ConfigureInterrupts	;wreg free
  1103                           
  1104                           ;FastBuggy17_Main_Code_TUNING.c: 695: ConfigureTimer0();
  1105  00018C  ECF9  F010         	call	_ConfigureTimer0	;wreg free
  1106                           
  1107                           ;FastBuggy17_Main_Code_TUNING.c: 696: ConfigureTimer1();
  1108  000190  ECE2  F010         	call	_ConfigureTimer1	;wreg free
  1109                           
  1110                           ;FastBuggy17_Main_Code_TUNING.c: 697: ConfigureTimer2();
  1111  000194  ECE0  F011         	call	_ConfigureTimer2	;wreg free
  1112                           
  1113                           ;FastBuggy17_Main_Code_TUNING.c: 698: ConfigurePWM();
  1114  000198  ECA9  F011         	call	_ConfigurePWM	;wreg free
  1115                           
  1116                           ;FastBuggy17_Main_Code_TUNING.c: 699: ConfigureADC();
  1117  00019C  EC24  F011         	call	_ConfigureADC	;wreg free
  1118                           
  1119                           ;FastBuggy17_Main_Code_TUNING.c: 700: ConfigureWireless();
  1120  0001A0  ECB7  F010         	call	_ConfigureWireless	;wreg free
  1121                           
  1122                           ;FastBuggy17_Main_Code_TUNING.c: 702: DisableMotors();
  1123  0001A4  ECF5  F011         	call	_DisableMotors	;wreg free
  1124                           
  1125                           ;FastBuggy17_Main_Code_TUNING.c: 704: Delay10KTCYx(100);
  1126  0001A8  0E64               	movlw	100
  1127  0001AA  EC99  F010         	call	_Delay10KTCYx
  1128                           
  1129                           ;FastBuggy17_Main_Code_TUNING.c: 706: battery_voltage = ReadVoltage();
  1130  0001AE  ECC4  F00B         	call	_ReadVoltage	;wreg free
  1131  0001B2  C0D3  F11A         	movff	?_ReadVoltage,main@battery_voltage
  1132  0001B6  C0D4  F11B         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1133                           
  1134                           ;FastBuggy17_Main_Code_TUNING.c: 708: SendStatus(0x00);
  1135  0001BA  0E00               	movlw	0
  1136  0001BC  EC66  F00E         	call	_SendStatus
  1137                           
  1138                           ;FastBuggy17_Main_Code_TUNING.c: 710: SendBattVoltageInitial(battery_voltage_ptr);
  1139  0001C0  C117  F0D8         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1140  0001C4  C118  F0D9         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1141  0001C8  ECF9  F00B         	call	_SendBattVoltageInitial	;wreg free
  1142                           
  1143                           ;FastBuggy17_Main_Code_TUNING.c: 713: LATJ = 0x1F;
  1144  0001CC  0E1F               	movlw	31
  1145  0001CE  6E91               	movwf	3985,c	;volatile
  1146                           
  1147                           ;FastBuggy17_Main_Code_TUNING.c: 714: SendStatus(0x01);
  1148  0001D0  0E01               	movlw	1
  1149  0001D2  EC66  F00E         	call	_SendStatus
  1150  0001D6  D000               	goto	l6590
  1151  0001D8                     l6590:
  1152                           
  1153                           ;FastBuggy17_Main_Code_TUNING.c: 717: if(PB1pressed() == 1) {
  1154  0001D8  ECBD  F00C         	call	_PB1pressed	;wreg free
  1155  0001DC  06E8               	decf	wreg,f,c
  1156  0001DE  A4D8               	btfss	status,2,c
  1157  0001E0  D003               	goto	l6596
  1158                           
  1159                           ;FastBuggy17_Main_Code_TUNING.c: 718: line_mode = 0;
  1160  0001E2  0E00               	movlw	0
  1161  0001E4  D007               	goto	L1
  1162                           
  1163                           ;FastBuggy17_Main_Code_TUNING.c: 720: }
  1164                           
  1165                           ;FastBuggy17_Main_Code_TUNING.c: 719: break;
  1166  0001E6  D7F8               	goto	l6590
  1167  0001E8                     l6596:
  1168                           
  1169                           ;FastBuggy17_Main_Code_TUNING.c: 721: else if(PB2pressed() == 1) {
  1170  0001E8  EC5F  F00C         	call	_PB2pressed	;wreg free
  1171  0001EC  06E8               	decf	wreg,f,c
  1172  0001EE  A4D8               	btfss	status,2,c
  1173  0001F0  D7F3               	goto	l6590
  1174                           
  1175                           ;FastBuggy17_Main_Code_TUNING.c: 722: line_mode = 1;
  1176  0001F2  0E01               	movlw	1
  1177  0001F4                     L1:
  1178  0001F4  6E2A               	movwf	_line_mode,c
  1179                           
  1180                           ;FastBuggy17_Main_Code_TUNING.c: 723: break;
  1181  0001F6  D001               	goto	l6600
  1182  0001F8  D7EF               	goto	l6590
  1183  0001FA                     l6600:
  1184                           
  1185                           ;FastBuggy17_Main_Code_TUNING.c: 724: }
  1186                           ;FastBuggy17_Main_Code_TUNING.c: 725: }
  1187                           ;FastBuggy17_Main_Code_TUNING.c: 727: SendLineMode(line_mode_ptr);
  1188  0001FA  C111  F0D8         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1189  0001FE  C112  F0D9         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1190  000202  EC2B  F00E         	call	_SendLineMode	;wreg free
  1191                           
  1192                           ;FastBuggy17_Main_Code_TUNING.c: 728: FlashLEDS();
  1193  000206  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1194                           
  1195                           ;FastBuggy17_Main_Code_TUNING.c: 730: EnableSensorLEDS();
  1196  00020A  ECEA  F011         	call	_EnableSensorLEDS	;wreg free
  1197                           
  1198                           ;FastBuggy17_Main_Code_TUNING.c: 733: LATJ = 0x0F;
  1199  00020E  0E0F               	movlw	15
  1200  000210  6E91               	movwf	3985,c	;volatile
  1201                           
  1202                           ;FastBuggy17_Main_Code_TUNING.c: 734: SendStatus(0x02);
  1203  000212  0E02               	movlw	2
  1204  000214  EC66  F00E         	call	_SendStatus
  1205  000218  D000               	goto	l6610
  1206  00021A                     l6610:
  1207                           
  1208                           ;FastBuggy17_Main_Code_TUNING.c: 737: if(PB1pressed() == 1) {
  1209  00021A  ECBD  F00C         	call	_PB1pressed	;wreg free
  1210  00021E  06E8               	decf	wreg,f,c
  1211  000220  A4D8               	btfss	status,2,c
  1212  000222  D006               	goto	l6618
  1213                           
  1214                           ;FastBuggy17_Main_Code_TUNING.c: 738: FlashLEDS();
  1215  000224  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1216                           
  1217                           ;FastBuggy17_Main_Code_TUNING.c: 739: GenerateCalibration();
  1218  000228  ECE1  F007         	call	_GenerateCalibration	;wreg free
  1219                           
  1220                           ;FastBuggy17_Main_Code_TUNING.c: 740: break;
  1221  00022C  D00C               	goto	l6624
  1222                           
  1223                           ;FastBuggy17_Main_Code_TUNING.c: 741: }
  1224  00022E  D7F5               	goto	l6610
  1225  000230                     l6618:
  1226                           
  1227                           ;FastBuggy17_Main_Code_TUNING.c: 742: else if(PB2pressed() == 1) {
  1228  000230  EC5F  F00C         	call	_PB2pressed	;wreg free
  1229  000234  06E8               	decf	wreg,f,c
  1230  000236  A4D8               	btfss	status,2,c
  1231  000238  D7F0               	goto	l6610
  1232                           
  1233                           ;FastBuggy17_Main_Code_TUNING.c: 743: FlashLEDS();
  1234  00023A  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1235                           
  1236                           ;FastBuggy17_Main_Code_TUNING.c: 744: LoadCalibration();
  1237  00023E  EC8D  F008         	call	_LoadCalibration	;wreg free
  1238                           
  1239                           ;FastBuggy17_Main_Code_TUNING.c: 745: break;
  1240  000242  D001               	goto	l6624
  1241  000244  D7EA               	goto	l6610
  1242  000246                     l6624:
  1243                           
  1244                           ;FastBuggy17_Main_Code_TUNING.c: 746: }
  1245                           ;FastBuggy17_Main_Code_TUNING.c: 748: }
  1246                           ;FastBuggy17_Main_Code_TUNING.c: 750: SendOffsets(sensor_offsets);
  1247  000246  0E9A               	movlw	low _sensor_offsets
  1248  000248  0100               	movlb	0	; () banked
  1249  00024A  6FD8               	movwf	SendOffsets@offsets_array& (0+255),b
  1250  00024C  0E00               	movlw	high _sensor_offsets
  1251  00024E  0100               	movlb	0	; () banked
  1252  000250  6FD9               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1253  000252  ECE1  F008         	call	_SendOffsets	;wreg free
  1254                           
  1255                           ;FastBuggy17_Main_Code_TUNING.c: 751: SendPIDSetPointOnLine(PID_set_point_ptr);
  1256  000256  C113  F0D8         	movff	main@PID_set_point_ptr,SendPIDSetPointOnLine@set_point
  1257  00025A  C114  F0D9         	movff	main@PID_set_point_ptr+1,SendPIDSetPointOnLine@set_point+1
  1258  00025E  ECB9  F00A         	call	_SendPIDSetPointOnLine	;wreg free
  1259                           
  1260                           ;FastBuggy17_Main_Code_TUNING.c: 752: SendPIDSetPointOffLine(off_line_sum_ptr);
  1261  000262  C115  F0D8         	movff	main@off_line_sum_ptr,SendPIDSetPointOffLine@set_point
  1262  000266  C116  F0D9         	movff	main@off_line_sum_ptr+1,SendPIDSetPointOffLine@set_point+1
  1263  00026A  ECEF  F00A         	call	_SendPIDSetPointOffLine	;wreg free
  1264                           
  1265                           ;FastBuggy17_Main_Code_TUNING.c: 754: FlashLEDS();
  1266  00026E  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1267                           
  1268                           ;FastBuggy17_Main_Code_TUNING.c: 757: LATJ = 0x03;
  1269  000272  0E03               	movlw	3
  1270  000274  6E91               	movwf	3985,c	;volatile
  1271                           
  1272                           ;FastBuggy17_Main_Code_TUNING.c: 758: SendStatus(0x06);
  1273  000276  0E06               	movlw	6
  1274  000278  EC66  F00E         	call	_SendStatus
  1275                           
  1276                           ;FastBuggy17_Main_Code_TUNING.c: 760: SendDefaultPIDValues(20, 0, 0);
  1277  00027C  0E00               	movlw	0
  1278  00027E  0100               	movlb	0	; () banked
  1279  000280  6FD9               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1280  000282  0E14               	movlw	20
  1281  000284  6FD8               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1282  000286  0E00               	movlw	0
  1283  000288  0100               	movlb	0	; () banked
  1284  00028A  6FDB               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1285  00028C  0E00               	movlw	0
  1286  00028E  6FDA               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1287  000290  0E00               	movlw	0
  1288  000292  0100               	movlb	0	; () banked
  1289  000294  6FDD               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1290  000296  0E00               	movlw	0
  1291  000298  6FDC               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1292  00029A  EC5A  F00B         	call	_SendDefaultPIDValues	;wreg free
  1293                           
  1294                           ;FastBuggy17_Main_Code_TUNING.c: 762: Kp_stored = ReadIntEEPROM(0x0006);
  1295  00029E  0E00               	movlw	0
  1296  0002A0  0100               	movlb	0	; () banked
  1297  0002A2  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1298  0002A4  0E06               	movlw	6
  1299  0002A6  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  1300  0002A8  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  1301  0002AC  C0D2  F124         	movff	?_ReadIntEEPROM,main@Kp_stored
  1302  0002B0  C0D3  F125         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1303                           
  1304                           ;FastBuggy17_Main_Code_TUNING.c: 763: Kd_stored = ReadIntEEPROM(0x0009);
  1305  0002B4  0E00               	movlw	0
  1306  0002B6  0100               	movlb	0	; () banked
  1307  0002B8  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1308  0002BA  0E09               	movlw	9
  1309  0002BC  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  1310  0002BE  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  1311  0002C2  C0D2  F126         	movff	?_ReadIntEEPROM,main@Kd_stored
  1312  0002C6  C0D3  F127         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1313                           
  1314                           ;FastBuggy17_Main_Code_TUNING.c: 764: Ki_stored = ReadIntEEPROM(0x000C);
  1315  0002CA  0E00               	movlw	0
  1316  0002CC  0100               	movlb	0	; () banked
  1317  0002CE  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1318  0002D0  0E0C               	movlw	12
  1319  0002D2  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  1320  0002D4  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  1321  0002D8  C0D2  F128         	movff	?_ReadIntEEPROM,main@Ki_stored
  1322  0002DC  C0D3  F129         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1323                           
  1324                           ;FastBuggy17_Main_Code_TUNING.c: 766: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  1325  0002E0  C124  F0D8         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1326  0002E4  C125  F0D9         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1327  0002E8  C126  F0DA         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1328  0002EC  C127  F0DB         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1329  0002F0  C128  F0DC         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1330  0002F4  C129  F0DD         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1331  0002F8  EC25  F00B         	call	_SendStoredPIDValues	;wreg free
  1332  0002FC  D000               	goto	l6642
  1333  0002FE                     l6642:
  1334                           
  1335                           ;FastBuggy17_Main_Code_TUNING.c: 769: if(PB1pressed() == 1) {
  1336  0002FE  ECBD  F00C         	call	_PB1pressed	;wreg free
  1337  000302  06E8               	decf	wreg,f,c
  1338  000304  A4D8               	btfss	status,2,c
  1339  000306  D008               	goto	l6652
  1340                           
  1341                           ;FastBuggy17_Main_Code_TUNING.c: 770: FlashLEDS();
  1342  000308  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1343                           
  1344                           ;FastBuggy17_Main_Code_TUNING.c: 771: LATJ = 0x03;
  1345  00030C  0E03               	movlw	3
  1346  00030E  6E91               	movwf	3985,c	;volatile
  1347                           
  1348                           ;FastBuggy17_Main_Code_TUNING.c: 772: SetPIDValues();
  1349  000310  EC9B  F004         	call	_SetPIDValues	;wreg free
  1350                           
  1351                           ;FastBuggy17_Main_Code_TUNING.c: 773: break;
  1352  000314  D00E               	goto	l6660
  1353                           
  1354                           ;FastBuggy17_Main_Code_TUNING.c: 774: }
  1355  000316  D7F3               	goto	l6642
  1356  000318                     l6652:
  1357                           
  1358                           ;FastBuggy17_Main_Code_TUNING.c: 775: else if(PB2pressed() == 1) {
  1359  000318  EC5F  F00C         	call	_PB2pressed	;wreg free
  1360  00031C  06E8               	decf	wreg,f,c
  1361  00031E  A4D8               	btfss	status,2,c
  1362  000320  D7EE               	goto	l6642
  1363                           
  1364                           ;FastBuggy17_Main_Code_TUNING.c: 776: FlashLEDS();
  1365  000322  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1366                           
  1367                           ;FastBuggy17_Main_Code_TUNING.c: 777: LATJ = 0x03;
  1368  000326  0E03               	movlw	3
  1369  000328  6E91               	movwf	3985,c	;volatile
  1370                           
  1371                           ;FastBuggy17_Main_Code_TUNING.c: 778: LoadPIDValues();
  1372  00032A  ECB8  F005         	call	_LoadPIDValues	;wreg free
  1373                           
  1374                           ;FastBuggy17_Main_Code_TUNING.c: 779: break;
  1375  00032E  D001               	goto	l6660
  1376  000330  D7E6               	goto	l6642
  1377  000332                     l6660:
  1378                           
  1379                           ;FastBuggy17_Main_Code_TUNING.c: 780: }
  1380                           ;FastBuggy17_Main_Code_TUNING.c: 781: }
  1381                           ;FastBuggy17_Main_Code_TUNING.c: 783: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  1382  000332  C096  F0D8         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1383  000336  C097  F0D9         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1384  00033A  C092  F0DA         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1385  00033E  C093  F0DB         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1386  000342  C094  F0DC         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1387  000346  C095  F0DD         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1388  00034A  EC8F  F00B         	call	_SendCurrentPIDValues	;wreg free
  1389  00034E  D000               	goto	l6662
  1390  000350                     l6662:
  1391                           
  1392                           ;FastBuggy17_Main_Code_TUNING.c: 789: FlashLEDS();
  1393  000350  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1394                           
  1395                           ;FastBuggy17_Main_Code_TUNING.c: 791: LATJ = 0x01;
  1396  000354  0E01               	movlw	1
  1397  000356  6E91               	movwf	3985,c	;volatile
  1398                           
  1399                           ;FastBuggy17_Main_Code_TUNING.c: 792: SendStatus(0x09);
  1400  000358  0E09               	movlw	9
  1401  00035A  EC66  F00E         	call	_SendStatus
  1402  00035E  D000               	goto	l6668
  1403  000360                     l6668:
  1404                           
  1405                           ;FastBuggy17_Main_Code_TUNING.c: 795: if(PB1pressed() == 1) {
  1406  000360  ECBD  F00C         	call	_PB1pressed	;wreg free
  1407  000364  06E8               	decf	wreg,f,c
  1408  000366  B4D8               	btfsc	status,2,c
  1409  000368  D00F               	goto	l6678
  1410  00036A  D001               	goto	l6672
  1411                           
  1412                           ;FastBuggy17_Main_Code_TUNING.c: 796: break;
  1413  00036C  D00D               	goto	l6678
  1414  00036E                     l6672:
  1415                           
  1416                           ;FastBuggy17_Main_Code_TUNING.c: 797: }
  1417                           ;FastBuggy17_Main_Code_TUNING.c: 798: if(CommandAvailable() == 1 && GetCommand() == 0x02
      +                          ) {
  1418  00036E  ECA2  F011         	call	_CommandAvailable	;wreg free
  1419  000372  06E8               	decf	wreg,f,c
  1420  000374  A4D8               	btfss	status,2,c
  1421  000376  D7F4               	goto	l6668
  1422  000378  ECDC  F011         	call	_GetCommand	;wreg free
  1423  00037C  0A02               	xorlw	2
  1424  00037E  B4D8               	btfsc	status,2,c
  1425  000380  D003               	goto	l6678
  1426  000382  D7EE               	goto	l6668
  1427                           
  1428                           ;FastBuggy17_Main_Code_TUNING.c: 799: break;
  1429  000384  D001               	goto	l6678
  1430  000386  D7EC               	goto	l6668
  1431  000388                     l6678:
  1432                           
  1433                           ;FastBuggy17_Main_Code_TUNING.c: 800: }
  1434                           ;FastBuggy17_Main_Code_TUNING.c: 801: }
  1435                           ;FastBuggy17_Main_Code_TUNING.c: 804: PID_error = 0;
  1436  000388  0E00               	movlw	0
  1437  00038A  0100               	movlb	0	; () banked
  1438  00038C  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1439  00038E  0E00               	movlw	0
  1440  000390  6FB8               	movwf	_PID_error& (0+255),b
  1441                           
  1442                           ;FastBuggy17_Main_Code_TUNING.c: 805: PID_output = 0;
  1443  000392  0E00               	movlw	0
  1444  000394  0100               	movlb	0	; () banked
  1445  000396  6F99               	movwf	(_PID_output+1)& (0+255),b
  1446  000398  0E00               	movlw	0
  1447  00039A  6F98               	movwf	_PID_output& (0+255),b
  1448                           
  1449                           ;FastBuggy17_Main_Code_TUNING.c: 806: D_temp = 0;
  1450  00039C  0E00               	movlw	0
  1451  00039E  0101               	movlb	1	; () banked
  1452  0003A0  6F1D               	movwf	(main@D_temp+1)& (0+255),b
  1453  0003A2  0E00               	movlw	0
  1454  0003A4  6F1C               	movwf	main@D_temp& (0+255),b
  1455                           
  1456                           ;FastBuggy17_Main_Code_TUNING.c: 807: I_temp = 0;
  1457  0003A6  0E00               	movlw	0
  1458  0003A8  0101               	movlb	1	; () banked
  1459  0003AA  6F1F               	movwf	(main@I_temp+1)& (0+255),b
  1460  0003AC  0E00               	movlw	0
  1461  0003AE  6F1E               	movwf	main@I_temp& (0+255),b
  1462                           
  1463                           ;FastBuggy17_Main_Code_TUNING.c: 809: stop_flag = 0;
  1464  0003B0  0E00               	movlw	0
  1465  0003B2  0101               	movlb	1	; () banked
  1466  0003B4  6F20               	movwf	main@stop_flag& (0+255),b
  1467                           
  1468                           ;FastBuggy17_Main_Code_TUNING.c: 810: find_line_flag = 0;
  1469  0003B6  0E00               	movlw	0
  1470  0003B8  0101               	movlb	1	; () banked
  1471  0003BA  6F0A               	movwf	main@find_line_flag& (0+255),b
  1472                           
  1473                           ;FastBuggy17_Main_Code_TUNING.c: 811: line_end_flag = 0;
  1474  0003BC  0E00               	movlw	0
  1475  0003BE  0101               	movlb	1	; () banked
  1476  0003C0  6F08               	movwf	main@line_end_flag& (0+255),b
  1477                           
  1478                           ;FastBuggy17_Main_Code_TUNING.c: 812: wall_detected_flag = 0;
  1479  0003C2  0E00               	movlw	0
  1480  0003C4  0101               	movlb	1	; () banked
  1481  0003C6  6F19               	movwf	main@wall_detected_flag& (0+255),b
  1482                           
  1483                           ;FastBuggy17_Main_Code_TUNING.c: 813: send_battery_stats_flag = 0;
  1484  0003C8  0E00               	movlw	0
  1485  0003CA  0101               	movlb	1	; () banked
  1486  0003CC  6F09               	movwf	main@send_battery_stats_flag& (0+255),b
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;FastBuggy17_Main_Code_TUNING.c: 815: GetDistance();
  1490  0003CE  EC1A  F011         	call	_GetDistance	;wreg free
  1491                           
  1492                           ;FastBuggy17_Main_Code_TUNING.c: 817: LATJ = 0x00;
  1493  0003D2  0E00               	movlw	0
  1494  0003D4  6E91               	movwf	3985,c	;volatile
  1495                           
  1496                           ;FastBuggy17_Main_Code_TUNING.c: 819: FlashLEDS();
  1497  0003D6  ECCF  F00F         	call	_FlashLEDS	;wreg free
  1498                           
  1499                           ;FastBuggy17_Main_Code_TUNING.c: 820: SendStatus(0x0A);
  1500  0003DA  0E0A               	movlw	10
  1501  0003DC  EC66  F00E         	call	_SendStatus
  1502                           
  1503                           ;FastBuggy17_Main_Code_TUNING.c: 822: ResetAccumulatedCurrent();
  1504  0003E0  EC8D  F00F         	call	_ResetAccumulatedCurrent	;wreg free
  1505                           
  1506                           ;FastBuggy17_Main_Code_TUNING.c: 824: ResetMillis0();
  1507  0003E4  ECBA  F011         	call	_ResetMillis0	;wreg free
  1508                           
  1509                           ;FastBuggy17_Main_Code_TUNING.c: 825: ResetMillis1();
  1510  0003E8  ECB5  F011         	call	_ResetMillis1	;wreg free
  1511                           
  1512                           ;FastBuggy17_Main_Code_TUNING.c: 826: ResetMillis2();
  1513  0003EC  ECCE  F011         	call	_ResetMillis2	;wreg free
  1514                           
  1515                           ;FastBuggy17_Main_Code_TUNING.c: 827: ResetMillis3();
  1516  0003F0  ECB0  F011         	call	_ResetMillis3	;wreg free
  1517                           
  1518                           ;FastBuggy17_Main_Code_TUNING.c: 829: SetUnipolar();
  1519  0003F4  ECE4  F011         	call	_SetUnipolar	;wreg free
  1520                           
  1521                           ;FastBuggy17_Main_Code_TUNING.c: 830: StopMotors();
  1522  0003F8  EC8A  F010         	call	_StopMotors	;wreg free
  1523                           
  1524                           ;FastBuggy17_Main_Code_TUNING.c: 831: SetDirectionForward();
  1525  0003FC  ECE7  F011         	call	_SetDirectionForward	;wreg free
  1526                           
  1527                           ;FastBuggy17_Main_Code_TUNING.c: 832: EnableMotors();
  1528  000400  ECF3  F011         	call	_EnableMotors	;wreg free
  1529  000404  D000               	goto	l6704
  1530  000406                     l6704:
  1531                           
  1532                           ;FastBuggy17_Main_Code_TUNING.c: 837: ResetMillis1();
  1533  000406  ECB5  F011         	call	_ResetMillis1	;wreg free
  1534                           
  1535                           ;FastBuggy17_Main_Code_TUNING.c: 840: GetSensorReadings();
  1536  00040A  ECEE  F010         	call	_GetSensorReadings	;wreg free
  1537                           
  1538                           ;FastBuggy17_Main_Code_TUNING.c: 842: while(BusySensorAcq());
  1539  00040E  D000               	goto	l6708
  1540  000410                     l6708:
  1541  000410  EC74  F011         	call	_BusySensorAcq	;wreg free
  1542  000414  0900               	iorlw	0
  1543  000416  A4D8               	btfss	status,2,c
  1544  000418  D7FB               	goto	l6708
  1545                           
  1546                           ;FastBuggy17_Main_Code_TUNING.c: 843: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1547  00041A  0EAE               	movlw	low _sensor_readings_raw
  1548  00041C  0100               	movlb	0	; () banked
  1549  00041E  6FD0               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1550  000420  0E00               	movlw	high _sensor_readings_raw
  1551  000422  0100               	movlb	0	; () banked
  1552  000424  6FD1               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1553  000426  0E9A               	movlw	low _sensor_offsets
  1554  000428  0100               	movlb	0	; () banked
  1555  00042A  6FD2               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1556  00042C  0E00               	movlw	high _sensor_offsets
  1557  00042E  0100               	movlb	0	; () banked
  1558  000430  6FD3               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1559  000432  EC3C  F00A         	call	_NormaliseSensorReadings	;wreg free
  1560                           
  1561                           ;FastBuggy17_Main_Code_TUNING.c: 844: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1562  000436  0EA4               	movlw	low _sensor_readings_normalised
  1563  000438  0100               	movlb	0	; () banked
  1564  00043A  6FD0               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1565  00043C  0E00               	movlw	high _sensor_readings_normalised
  1566  00043E  0100               	movlb	0	; () banked
  1567  000440  6FD1               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1568  000442  C121  F0D2         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1569  000446  C122  F0D3         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1570  00044A  ECF9  F003         	call	_CalculateSensorStatuses	;wreg free
  1571                           
  1572                           ;FastBuggy17_Main_Code_TUNING.c: 846: sensor_sum = CalculateSensorSum(sensor_readings_no
      +                          rmalised);
  1573  00044E  0EA4               	movlw	low _sensor_readings_normalised
  1574  000450  0100               	movlb	0	; () banked
  1575  000452  6FD6               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  1576  000454  0E00               	movlw	high _sensor_readings_normalised
  1577  000456  0100               	movlb	0	; () banked
  1578  000458  6FD7               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  1579  00045A  EC3C  F005         	call	_CalculateSensorSum	;wreg free
  1580  00045E  C0D6  F12A         	movff	?_CalculateSensorSum,main@sensor_sum
  1581  000462  C0D7  F12B         	movff	?_CalculateSensorSum+1,main@sensor_sum+1
  1582                           
  1583                           ;FastBuggy17_Main_Code_TUNING.c: 849: PID_error = (PID_set_point - sensor_sum) / 100;
  1584  000466  C12A  F0E2         	movff	main@sensor_sum,??_main
  1585  00046A  C12B  F0E3         	movff	main@sensor_sum+1,??_main+1
  1586  00046E  0100               	movlb	0	; () banked
  1587  000470  1FE2               	comf	??_main& (0+255),f,b
  1588  000472  1FE3               	comf	(??_main+1)& (0+255),f,b
  1589  000474  4BE2               	infsnz	??_main& (0+255),f,b
  1590  000476  2BE3               	incf	(??_main+1)& (0+255),f,b
  1591  000478  0100               	movlb	0	; () banked
  1592  00047A  51BA               	movf	_PID_set_point& (0+255),w,b
  1593  00047C  0100               	movlb	0	; () banked
  1594  00047E  25E2               	addwf	??_main& (0+255),w,b
  1595  000480  0100               	movlb	0	; () banked
  1596  000482  6FD0               	movwf	___awdiv@dividend& (0+255),b
  1597  000484  0100               	movlb	0	; () banked
  1598  000486  51BB               	movf	(_PID_set_point+1)& (0+255),w,b
  1599  000488  0100               	movlb	0	; () banked
  1600  00048A  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1601  00048C  0100               	movlb	0	; () banked
  1602  00048E  6FD1               	movwf	(___awdiv@dividend+1)& (0+255),b
  1603  000490  0E00               	movlw	0
  1604  000492  0100               	movlb	0	; () banked
  1605  000494  6FD3               	movwf	(___awdiv@divisor+1)& (0+255),b
  1606  000496  0E64               	movlw	100
  1607  000498  6FD2               	movwf	___awdiv@divisor& (0+255),b
  1608  00049A  EC1F  F007         	call	___awdiv	;wreg free
  1609  00049E  C0D0  F0B8         	movff	?___awdiv,_PID_error
  1610  0004A2  C0D1  F0B9         	movff	?___awdiv+1,_PID_error+1
  1611                           
  1612                           ;FastBuggy17_Main_Code_TUNING.c: 850: PID_output = PID_Kp * PID_error + PID_Kd * (D_temp
      +                           - PID_error) + PID_Ki * I_temp;
  1613  0004A6  C096  F0D0         	movff	_PID_Kp,___wmul@multiplier
  1614  0004AA  C097  F0D1         	movff	_PID_Kp+1,___wmul@multiplier+1
  1615  0004AE  C0B8  F0D2         	movff	_PID_error,___wmul@multiplicand
  1616  0004B2  C0B9  F0D3         	movff	_PID_error+1,___wmul@multiplicand+1
  1617  0004B6  ECBB  F00E         	call	___wmul	;wreg free
  1618  0004BA  C0D0  F0E2         	movff	?___wmul,??_main
  1619  0004BE  C0D1  F0E3         	movff	?___wmul+1,??_main+1
  1620  0004C2  C0B8  F0E4         	movff	_PID_error,??_main+2
  1621  0004C6  C0B9  F0E5         	movff	_PID_error+1,??_main+3
  1622  0004CA  0100               	movlb	0	; () banked
  1623  0004CC  1FE4               	comf	(??_main+2)& (0+255),f,b
  1624  0004CE  1FE5               	comf	(??_main+3)& (0+255),f,b
  1625  0004D0  4BE4               	infsnz	(??_main+2)& (0+255),f,b
  1626  0004D2  2BE5               	incf	(??_main+3)& (0+255),f,b
  1627  0004D4  0101               	movlb	1	; () banked
  1628  0004D6  511C               	movf	main@D_temp& (0+255),w,b
  1629  0004D8  0100               	movlb	0	; () banked
  1630  0004DA  25E4               	addwf	(??_main+2)& (0+255),w,b
  1631  0004DC  0100               	movlb	0	; () banked
  1632  0004DE  6FD0               	movwf	___wmul@multiplier& (0+255),b
  1633  0004E0  0101               	movlb	1	; () banked
  1634  0004E2  511D               	movf	(main@D_temp+1)& (0+255),w,b
  1635  0004E4  0100               	movlb	0	; () banked
  1636  0004E6  21E5               	addwfc	(??_main+3)& (0+255),w,b
  1637  0004E8  0100               	movlb	0	; () banked
  1638  0004EA  6FD1               	movwf	(___wmul@multiplier+1)& (0+255),b
  1639  0004EC  C092  F0D2         	movff	_PID_Kd,___wmul@multiplicand
  1640  0004F0  C093  F0D3         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1641  0004F4  ECBB  F00E         	call	___wmul	;wreg free
  1642  0004F8  0100               	movlb	0	; () banked
  1643  0004FA  51D0               	movf	?___wmul& (0+255),w,b
  1644  0004FC  0100               	movlb	0	; () banked
  1645  0004FE  27E2               	addwf	??_main& (0+255),f,b
  1646  000500  0100               	movlb	0	; () banked
  1647  000502  51D1               	movf	(?___wmul+1)& (0+255),w,b
  1648  000504  0100               	movlb	0	; () banked
  1649  000506  23E3               	addwfc	(??_main+1)& (0+255),f,b
  1650  000508  C094  F0D0         	movff	_PID_Ki,___wmul@multiplier
  1651  00050C  C095  F0D1         	movff	_PID_Ki+1,___wmul@multiplier+1
  1652  000510  C11E  F0D2         	movff	main@I_temp,___wmul@multiplicand
  1653  000514  C11F  F0D3         	movff	main@I_temp+1,___wmul@multiplicand+1
  1654  000518  ECBB  F00E         	call	___wmul	;wreg free
  1655  00051C  0100               	movlb	0	; () banked
  1656  00051E  51D0               	movf	?___wmul& (0+255),w,b
  1657  000520  0100               	movlb	0	; () banked
  1658  000522  25E2               	addwf	??_main& (0+255),w,b
  1659  000524  0100               	movlb	0	; () banked
  1660  000526  6F98               	movwf	_PID_output& (0+255),b
  1661  000528  0100               	movlb	0	; () banked
  1662  00052A  51D1               	movf	(?___wmul+1)& (0+255),w,b
  1663  00052C  0100               	movlb	0	; () banked
  1664  00052E  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1665  000530  0100               	movlb	0	; () banked
  1666  000532  6F99               	movwf	(_PID_output+1)& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;FastBuggy17_Main_Code_TUNING.c: 851: D_temp = PID_error;
  1670  000534  C0B8  F11C         	movff	_PID_error,main@D_temp
  1671  000538  C0B9  F11D         	movff	_PID_error+1,main@D_temp+1
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;FastBuggy17_Main_Code_TUNING.c: 852: I_temp += PID_error;
  1675  00053C  0100               	movlb	0	; () banked
  1676  00053E  51B8               	movf	_PID_error& (0+255),w,b
  1677  000540  0101               	movlb	1	; () banked
  1678  000542  271E               	addwf	main@I_temp& (0+255),f,b
  1679  000544  0100               	movlb	0	; () banked
  1680  000546  51B9               	movf	(_PID_error+1)& (0+255),w,b
  1681  000548  0101               	movlb	1	; () banked
  1682  00054A  231F               	addwfc	(main@I_temp+1)& (0+255),f,b
  1683                           
  1684                           ; BSR set to: 1
  1685                           ;FastBuggy17_Main_Code_TUNING.c: 854: SetDCMotorPID(PID_output);
  1686  00054C  C098  F0D8         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1687  000550  C099  F0D9         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1688  000554  EC39  F008         	call	_SetDCMotorPID	;wreg free
  1689                           
  1690                           ;FastBuggy17_Main_Code_TUNING.c: 855: DisplaySensorStatuses(sensor_statuses);
  1691  000558  0E25               	movlw	low _sensor_statuses
  1692  00055A  0100               	movlb	0	; () banked
  1693  00055C  6FD0               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1694  00055E  0E00               	movlw	high _sensor_statuses
  1695  000560  0100               	movlb	0	; () banked
  1696  000562  6FD1               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1697  000564  EC1A  F00D         	call	_DisplaySensorStatuses	;wreg free
  1698                           
  1699                           ;FastBuggy17_Main_Code_TUNING.c: 858: if(BusyDistanceAcq() == 0 && wall_detected_flag ==
      +                           0 && ReadMillis0() >= 60) {
  1700  000568  EC84  F011         	call	_BusyDistanceAcq	;wreg free
  1701  00056C  0900               	iorlw	0
  1702  00056E  A4D8               	btfss	status,2,c
  1703  000570  D0B0               	goto	l6784
  1704  000572  0101               	movlb	1	; () banked
  1705  000574  5119               	movf	main@wall_detected_flag& (0+255),w,b
  1706  000576  0101               	movlb	1	; () banked
  1707  000578  A4D8               	btfss	status,2,c
  1708  00057A  D0AB               	goto	l6784
  1709                           
  1710                           ; BSR set to: 1
  1711  00057C  ECC4  F011         	call	_ReadMillis0	;wreg free
  1712  000580  0100               	movlb	0	; () banked
  1713  000582  51D1               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1714  000584  E105               	bnz	u5960
  1715  000586  0E3C               	movlw	60
  1716  000588  0100               	movlb	0	; () banked
  1717  00058A  5DD0               	subwf	?_ReadMillis0& (0+255),w,b
  1718  00058C  A0D8               	btfss	status,0,c
  1719  00058E  D0A1               	goto	l6784
  1720  000590                     u5960:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;FastBuggy17_Main_Code_TUNING.c: 860: ResetMillis0();
  1724  000590  ECBA  F011         	call	_ResetMillis0	;wreg free
  1725                           
  1726                           ;FastBuggy17_Main_Code_TUNING.c: 862: if(ReadEchoLength() < 1232) {
  1727  000594  ECC9  F011         	call	_ReadEchoLength	;wreg free
  1728  000598  0ED0               	movlw	208
  1729  00059A  0100               	movlb	0	; () banked
  1730  00059C  5DD0               	subwf	?_ReadEchoLength& (0+255),w,b
  1731  00059E  0E04               	movlw	4
  1732  0005A0  0100               	movlb	0	; () banked
  1733  0005A2  59D1               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1734  0005A4  B0D8               	btfsc	status,0,c
  1735  0005A6  D092               	goto	l6782
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;FastBuggy17_Main_Code_TUNING.c: 863: wall_detected_flag = 1;
  1739  0005A8  0E01               	movlw	1
  1740  0005AA  0101               	movlb	1	; () banked
  1741  0005AC  6F19               	movwf	main@wall_detected_flag& (0+255),b
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;FastBuggy17_Main_Code_TUNING.c: 866: DisableMotors();
  1745  0005AE  ECF5  F011         	call	_DisableMotors	;wreg free
  1746                           
  1747                           ;FastBuggy17_Main_Code_TUNING.c: 868: PID_error = 0;
  1748  0005B2  0E00               	movlw	0
  1749  0005B4  0100               	movlb	0	; () banked
  1750  0005B6  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1751  0005B8  0E00               	movlw	0
  1752  0005BA  6FB8               	movwf	_PID_error& (0+255),b
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;FastBuggy17_Main_Code_TUNING.c: 869: PID_output = 0;
  1756  0005BC  0E00               	movlw	0
  1757  0005BE  0100               	movlb	0	; () banked
  1758  0005C0  6F99               	movwf	(_PID_output+1)& (0+255),b
  1759  0005C2  0E00               	movlw	0
  1760  0005C4  6F98               	movwf	_PID_output& (0+255),b
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;FastBuggy17_Main_Code_TUNING.c: 870: D_temp = 0;
  1764  0005C6  0E00               	movlw	0
  1765  0005C8  0101               	movlb	1	; () banked
  1766  0005CA  6F1D               	movwf	(main@D_temp+1)& (0+255),b
  1767  0005CC  0E00               	movlw	0
  1768  0005CE  6F1C               	movwf	main@D_temp& (0+255),b
  1769                           
  1770                           ; BSR set to: 1
  1771                           ;FastBuggy17_Main_Code_TUNING.c: 871: I_temp = 0;
  1772  0005D0  0E00               	movlw	0
  1773  0005D2  0101               	movlb	1	; () banked
  1774  0005D4  6F1F               	movwf	(main@I_temp+1)& (0+255),b
  1775  0005D6  0E00               	movlw	0
  1776  0005D8  6F1E               	movwf	main@I_temp& (0+255),b
  1777                           
  1778                           ; BSR set to: 1
  1779                           ;FastBuggy17_Main_Code_TUNING.c: 873: SetForwardsMotorR();
  1780  0005DA  ECEF  F011         	call	_SetForwardsMotorR	;wreg free
  1781                           
  1782                           ;FastBuggy17_Main_Code_TUNING.c: 874: SetReverseMotorL();
  1783  0005DE  ECED  F011         	call	_SetReverseMotorL	;wreg free
  1784                           
  1785                           ;FastBuggy17_Main_Code_TUNING.c: 876: SetDCMotorL(250);
  1786  0005E2  0E00               	movlw	0
  1787  0005E4  0100               	movlb	0	; () banked
  1788  0005E6  6FD7               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1789  0005E8  0EFA               	movlw	250
  1790  0005EA  6FD6               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1791  0005EC  EC9B  F011         	call	_SetDCMotorL	;wreg free
  1792                           
  1793                           ;FastBuggy17_Main_Code_TUNING.c: 877: SetDCMotorR(340);
  1794  0005F0  0E01               	movlw	1
  1795  0005F2  0100               	movlb	0	; () banked
  1796  0005F4  6FD7               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1797  0005F6  0E54               	movlw	84
  1798  0005F8  6FD6               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1799  0005FA  EC94  F011         	call	_SetDCMotorR	;wreg free
  1800                           
  1801                           ;FastBuggy17_Main_Code_TUNING.c: 879: EnableMotors();
  1802  0005FE  ECF3  F011         	call	_EnableMotors	;wreg free
  1803                           
  1804                           ;FastBuggy17_Main_Code_TUNING.c: 881: sensor_sum = 0;
  1805  000602  0E00               	movlw	0
  1806  000604  0101               	movlb	1	; () banked
  1807  000606  6F2B               	movwf	(main@sensor_sum+1)& (0+255),b
  1808  000608  0E00               	movlw	0
  1809  00060A  6F2A               	movwf	main@sensor_sum& (0+255),b
  1810                           
  1811                           ; BSR set to: 1
  1812                           ;FastBuggy17_Main_Code_TUNING.c: 883: ResetMillis0();
  1813  00060C  ECBA  F011         	call	_ResetMillis0	;wreg free
  1814                           
  1815                           ;FastBuggy17_Main_Code_TUNING.c: 884: while(ReadMillis0() < 300);
  1816  000610  D000               	goto	l6762
  1817  000612                     l6762:
  1818  000612  ECC4  F011         	call	_ReadMillis0	;wreg free
  1819  000616  0E2C               	movlw	44
  1820  000618  0100               	movlb	0	; () banked
  1821  00061A  5DD0               	subwf	?_ReadMillis0& (0+255),w,b
  1822  00061C  0E01               	movlw	1
  1823  00061E  0100               	movlb	0	; () banked
  1824  000620  59D1               	subwfb	(?_ReadMillis0+1)& (0+255),w,b
  1825  000622  B0D8               	btfsc	status,0,c
  1826  000624  D03C               	goto	l6776
  1827  000626  D7F5               	goto	l6762
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;FastBuggy17_Main_Code_TUNING.c: 886: while(sensor_sum == 0) {
  1831  000628  D03A               	goto	l6776
  1832  00062A                     l6764:
  1833                           
  1834                           ;FastBuggy17_Main_Code_TUNING.c: 888: GetSensorReadings();
  1835  00062A  ECEE  F010         	call	_GetSensorReadings	;wreg free
  1836                           
  1837                           ;FastBuggy17_Main_Code_TUNING.c: 889: while(BusySensorAcq());
  1838  00062E  D000               	goto	l6766
  1839  000630                     l6766:
  1840  000630  EC74  F011         	call	_BusySensorAcq	;wreg free
  1841  000634  0900               	iorlw	0
  1842  000636  A4D8               	btfss	status,2,c
  1843  000638  D7FB               	goto	l6766
  1844                           
  1845                           ;FastBuggy17_Main_Code_TUNING.c: 890: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1846  00063A  0EAE               	movlw	low _sensor_readings_raw
  1847  00063C  0100               	movlb	0	; () banked
  1848  00063E  6FD0               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1849  000640  0E00               	movlw	high _sensor_readings_raw
  1850  000642  0100               	movlb	0	; () banked
  1851  000644  6FD1               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1852  000646  0E9A               	movlw	low _sensor_offsets
  1853  000648  0100               	movlb	0	; () banked
  1854  00064A  6FD2               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1855  00064C  0E00               	movlw	high _sensor_offsets
  1856  00064E  0100               	movlb	0	; () banked
  1857  000650  6FD3               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1858  000652  EC3C  F00A         	call	_NormaliseSensorReadings	;wreg free
  1859                           
  1860                           ;FastBuggy17_Main_Code_TUNING.c: 891: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1861  000656  0EA4               	movlw	low _sensor_readings_normalised
  1862  000658  0100               	movlb	0	; () banked
  1863  00065A  6FD0               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1864  00065C  0E00               	movlw	high _sensor_readings_normalised
  1865  00065E  0100               	movlb	0	; () banked
  1866  000660  6FD1               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1867  000662  C121  F0D2         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1868  000666  C122  F0D3         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1869  00066A  ECF9  F003         	call	_CalculateSensorStatuses	;wreg free
  1870                           
  1871                           ;FastBuggy17_Main_Code_TUNING.c: 893: sensor_sum = CalculateDiscreteSensorSum(sensor_sta
      +                          tuses);
  1872  00066E  0E25               	movlw	low _sensor_statuses
  1873  000670  0100               	movlb	0	; () banked
  1874  000672  6FD0               	movwf	CalculateDiscreteSensorSum@sensor_statuses& (0+255),b
  1875  000674  0E00               	movlw	high _sensor_statuses
  1876  000676  0100               	movlb	0	; () banked
  1877  000678  6FD1               	movwf	(CalculateDiscreteSensorSum@sensor_statuses+1)& (0+255),b
  1878  00067A  EC0B  F00E         	call	_CalculateDiscreteSensorSum	;wreg free
  1879  00067E  0100               	movlb	0	; () banked
  1880  000680  6FE2               	movwf	??_main& (0+255),b
  1881  000682  0100               	movlb	0	; () banked
  1882  000684  51E2               	movf	??_main& (0+255),w,b
  1883  000686  0101               	movlb	1	; () banked
  1884  000688  6F2A               	movwf	main@sensor_sum& (0+255),b
  1885  00068A  6B2B               	clrf	(main@sensor_sum+1)& (0+255),b
  1886                           
  1887                           ; BSR set to: 1
  1888                           ;FastBuggy17_Main_Code_TUNING.c: 895: DisplaySensorStatuses(sensor_statuses);
  1889  00068C  0E25               	movlw	low _sensor_statuses
  1890  00068E  0100               	movlb	0	; () banked
  1891  000690  6FD0               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1892  000692  0E00               	movlw	high _sensor_statuses
  1893  000694  0100               	movlb	0	; () banked
  1894  000696  6FD1               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1895  000698  EC1A  F00D         	call	_DisplaySensorStatuses	;wreg free
  1896  00069C  D000               	goto	l6776
  1897  00069E                     l6776:
  1898  00069E  0101               	movlb	1	; () banked
  1899  0006A0  512A               	movf	main@sensor_sum& (0+255),w,b
  1900  0006A2  0101               	movlb	1	; () banked
  1901  0006A4  112B               	iorwf	(main@sensor_sum+1)& (0+255),w,b
  1902  0006A6  B4D8               	btfsc	status,2,c
  1903  0006A8  D7C0               	goto	l6764
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;FastBuggy17_Main_Code_TUNING.c: 896: }
  1907                           ;FastBuggy17_Main_Code_TUNING.c: 898: SetDCMotorL(526);
  1908                           
  1909                           ; BSR set to: 1
  1910  0006AA  0E02               	movlw	2
  1911  0006AC  0100               	movlb	0	; () banked
  1912  0006AE  6FD7               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1913  0006B0  0E0E               	movlw	14
  1914  0006B2  6FD6               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1915  0006B4  EC9B  F011         	call	_SetDCMotorL	;wreg free
  1916                           
  1917                           ;FastBuggy17_Main_Code_TUNING.c: 899: SetDCMotorR(526);
  1918  0006B8  0E02               	movlw	2
  1919  0006BA  0100               	movlb	0	; () banked
  1920  0006BC  6FD7               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1921  0006BE  0E0E               	movlw	14
  1922  0006C0  6FD6               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1923  0006C2  EC94  F011         	call	_SetDCMotorR	;wreg free
  1924                           
  1925                           ;FastBuggy17_Main_Code_TUNING.c: 900: SetDirectionForward();
  1926  0006C6  ECE7  F011         	call	_SetDirectionForward	;wreg free
  1927                           
  1928                           ;FastBuggy17_Main_Code_TUNING.c: 902: }
  1929  0006CA  D03E               	goto	l6804
  1930  0006CC                     l6782:
  1931                           
  1932                           ;FastBuggy17_Main_Code_TUNING.c: 903: else {
  1933                           ;FastBuggy17_Main_Code_TUNING.c: 904: GetDistance();
  1934  0006CC  EC1A  F011         	call	_GetDistance	;wreg free
  1935                           
  1936                           ;FastBuggy17_Main_Code_TUNING.c: 905: }
  1937                           ;FastBuggy17_Main_Code_TUNING.c: 906: }
  1938  0006D0  D03B               	goto	l6804
  1939  0006D2                     l6784:
  1940                           
  1941                           ;FastBuggy17_Main_Code_TUNING.c: 925: else if(CommandAvailable() == 1) {
  1942  0006D2  ECA2  F011         	call	_CommandAvailable	;wreg free
  1943  0006D6  06E8               	decf	wreg,f,c
  1944  0006D8  A4D8               	btfss	status,2,c
  1945  0006DA  D014               	goto	l6796
  1946                           
  1947                           ;FastBuggy17_Main_Code_TUNING.c: 926: command_msg = GetCommand();
  1948  0006DC  ECDC  F011         	call	_GetCommand	;wreg free
  1949  0006E0  0101               	movlb	1	; () banked
  1950  0006E2  6F23               	movwf	main@command_msg& (0+255),b
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;FastBuggy17_Main_Code_TUNING.c: 927: if(command_msg == 0x03) {
  1954  0006E4  0E03               	movlw	3
  1955  0006E6  0101               	movlb	1	; () banked
  1956  0006E8  1923               	xorwf	main@command_msg& (0+255),w,b
  1957  0006EA  A4D8               	btfss	status,2,c
  1958  0006EC  D004               	goto	l6792
  1959                           
  1960                           ; BSR set to: 1
  1961                           ;FastBuggy17_Main_Code_TUNING.c: 928: find_line_flag = 1;
  1962  0006EE  0E01               	movlw	1
  1963  0006F0  0101               	movlb	1	; () banked
  1964  0006F2  6F0A               	movwf	main@find_line_flag& (0+255),b
  1965                           
  1966                           ;FastBuggy17_Main_Code_TUNING.c: 929: }
  1967  0006F4  D029               	goto	l6804
  1968  0006F6                     l6792:
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;FastBuggy17_Main_Code_TUNING.c: 930: else if(command_msg == 0x04) {
  1972  0006F6  0E04               	movlw	4
  1973  0006F8  0101               	movlb	1	; () banked
  1974  0006FA  1923               	xorwf	main@command_msg& (0+255),w,b
  1975  0006FC  A4D8               	btfss	status,2,c
  1976  0006FE  D024               	goto	l6804
  1977  000700  D017               	goto	l6798
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;FastBuggy17_Main_Code_TUNING.c: 932: }
  1981                           ;FastBuggy17_Main_Code_TUNING.c: 934: }
  1982                           
  1983                           ; BSR set to: 1
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;FastBuggy17_Main_Code_TUNING.c: 931: stop_flag = 1;
  1987  000702  D022               	goto	l6804
  1988  000704                     l6796:
  1989                           
  1990                           ;FastBuggy17_Main_Code_TUNING.c: 937: else if(PB1pressed() == 1 | PB2pressed() == 1) {
  1991  000704  EC5F  F00C         	call	_PB2pressed	;wreg free
  1992  000708  06E8               	decf	wreg,f,c
  1993  00070A  A4D8               	btfss	status,2,c
  1994  00070C  D002               	goto	u6040
  1995  00070E  0E01               	movlw	1
  1996  000710  D001               	goto	u6042
  1997  000712                     u6040:
  1998  000712  0E00               	movlw	0
  1999  000714                     u6042:
  2000  000714  0100               	movlb	0	; () banked
  2001  000716  6FE2               	movwf	??_main& (0+255),b
  2002  000718  ECBD  F00C         	call	_PB1pressed	;wreg free
  2003  00071C  06E8               	decf	wreg,f,c
  2004  00071E  A4D8               	btfss	status,2,c
  2005  000720  D002               	goto	u6050
  2006  000722  0E01               	movlw	1
  2007  000724  D001               	goto	u6052
  2008  000726                     u6050:
  2009  000726  0E00               	movlw	0
  2010  000728                     u6052:
  2011  000728  0100               	movlb	0	; () banked
  2012  00072A  11E2               	iorwf	??_main& (0+255),w,b
  2013  00072C  A0E8               	btfss	wreg,0,c
  2014  00072E  D004               	goto	l6800
  2015  000730                     l6798:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;FastBuggy17_Main_Code_TUNING.c: 938: stop_flag = 1;
  2019  000730  0E01               	movlw	1
  2020  000732  0101               	movlb	1	; () banked
  2021  000734  6F20               	movwf	main@stop_flag& (0+255),b
  2022                           
  2023                           ;FastBuggy17_Main_Code_TUNING.c: 939: }
  2024  000736  D008               	goto	l6804
  2025  000738                     l6800:
  2026                           
  2027                           ;FastBuggy17_Main_Code_TUNING.c: 970: else if(stop_flag == 1) {
  2028  000738  0101               	movlb	1	; () banked
  2029  00073A  0520               	decf	main@stop_flag& (0+255),w,b
  2030  00073C  A4D8               	btfss	status,2,c
  2031  00073E  D004               	goto	l6804
  2032                           
  2033                           ; BSR set to: 1
  2034                           ;FastBuggy17_Main_Code_TUNING.c: 971: StopMotors();
  2035  000740  EC8A  F010         	call	_StopMotors	;wreg free
  2036                           
  2037                           ;FastBuggy17_Main_Code_TUNING.c: 972: break;
  2038  000744  D00D               	goto	l6806
  2039                           
  2040                           ;FastBuggy17_Main_Code_TUNING.c: 973: }
  2041                           ;FastBuggy17_Main_Code_TUNING.c: 976: while(ReadMillis1() < 25);
  2042  000746  D000               	goto	l6804
  2043  000748                     l6804:
  2044  000748  ECBF  F011         	call	_ReadMillis1	;wreg free
  2045  00074C  0100               	movlb	0	; () banked
  2046  00074E  51D1               	movf	(?_ReadMillis1+1)& (0+255),w,b
  2047  000750  E106               	bnz	u6080
  2048  000752  0E19               	movlw	25
  2049  000754  0100               	movlb	0	; () banked
  2050  000756  5DD0               	subwf	?_ReadMillis1& (0+255),w,b
  2051  000758  B0D8               	btfsc	status,0,c
  2052  00075A  D655               	goto	l6704
  2053  00075C  D7F5               	goto	l6804
  2054  00075E                     u6080:
  2055                           
  2056                           ; BSR set to: 0
  2057                           
  2058                           ; BSR set to: 0
  2059  00075E  D653               	goto	l6704
  2060  000760                     l6806:
  2061                           
  2062                           ;FastBuggy17_Main_Code_TUNING.c: 978: }
  2063                           ;FastBuggy17_Main_Code_TUNING.c: 981: FlashLEDS();
  2064  000760  ECCF  F00F         	call	_FlashLEDS	;wreg free
  2065                           
  2066                           ;FastBuggy17_Main_Code_TUNING.c: 982: LATJ = 0x03;
  2067  000764  0E03               	movlw	3
  2068  000766  6E91               	movwf	3985,c	;volatile
  2069                           
  2070                           ;FastBuggy17_Main_Code_TUNING.c: 983: SendStatus(0x05);
  2071  000768  0E05               	movlw	5
  2072  00076A  EC66  F00E         	call	_SendStatus
  2073                           
  2074                           ;FastBuggy17_Main_Code_TUNING.c: 985: Kp_stored = ReadIntEEPROM(0x0006);
  2075  00076E  0E00               	movlw	0
  2076  000770  0100               	movlb	0	; () banked
  2077  000772  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2078  000774  0E06               	movlw	6
  2079  000776  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  2080  000778  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  2081  00077C  C0D2  F124         	movff	?_ReadIntEEPROM,main@Kp_stored
  2082  000780  C0D3  F125         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  2083                           
  2084                           ;FastBuggy17_Main_Code_TUNING.c: 986: Kd_stored = ReadIntEEPROM(0x0009);
  2085  000784  0E00               	movlw	0
  2086  000786  0100               	movlb	0	; () banked
  2087  000788  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2088  00078A  0E09               	movlw	9
  2089  00078C  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  2090  00078E  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  2091  000792  C0D2  F126         	movff	?_ReadIntEEPROM,main@Kd_stored
  2092  000796  C0D3  F127         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  2093                           
  2094                           ;FastBuggy17_Main_Code_TUNING.c: 987: Ki_stored = ReadIntEEPROM(0x000C);
  2095  00079A  0E00               	movlw	0
  2096  00079C  0100               	movlb	0	; () banked
  2097  00079E  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2098  0007A0  0E0C               	movlw	12
  2099  0007A2  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  2100  0007A4  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  2101  0007A8  C0D2  F128         	movff	?_ReadIntEEPROM,main@Ki_stored
  2102  0007AC  C0D3  F129         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  2103                           
  2104                           ;FastBuggy17_Main_Code_TUNING.c: 989: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  2105  0007B0  C124  F0D8         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  2106  0007B4  C125  F0D9         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  2107  0007B8  C126  F0DA         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  2108  0007BC  C127  F0DB         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  2109  0007C0  C128  F0DC         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  2110  0007C4  C129  F0DD         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  2111  0007C8  EC25  F00B         	call	_SendStoredPIDValues	;wreg free
  2112                           
  2113                           ;FastBuggy17_Main_Code_TUNING.c: 991: SetPIDValues();
  2114  0007CC  EC9B  F004         	call	_SetPIDValues	;wreg free
  2115                           
  2116                           ;FastBuggy17_Main_Code_TUNING.c: 993: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  2117  0007D0  C096  F0D8         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  2118  0007D4  C097  F0D9         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  2119  0007D8  C092  F0DA         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  2120  0007DC  C093  F0DB         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  2121  0007E0  C094  F0DC         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  2122  0007E4  C095  F0DD         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  2123  0007E8  EC8F  F00B         	call	_SendCurrentPIDValues	;wreg free
  2124  0007EC  D5B1               	goto	l6662
  2125  0007EE  EF76  F000         	goto	start
  2126  0007F2                     __end_of_main:
  2127                           	opt stack 0
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           status	equ	0xFD8
  2131                           
  2132 ;; *************** function ___awdiv *****************
  2133 ;; Defined at:
  2134 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  dividend        2   16[BANK0 ] int 
  2137 ;;  divisor         2   18[BANK0 ] int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  quotient        2   22[BANK0 ] int 
  2140 ;;  sign            1   21[BANK0 ] unsigned char 
  2141 ;;  counter         1   20[BANK0 ] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  2   16[BANK0 ] int 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        8 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    7
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text1
  2166  000E3E                     __ptext1:
  2167                           	opt stack 0
  2168  000E3E                     ___awdiv:
  2169                           	opt stack 23
  2170                           
  2171                           ;incstack = 0
  2172  000E3E  0E00               	movlw	0
  2173  000E40  0100               	movlb	0	; () banked
  2174  000E42  6FD5               	movwf	___awdiv@sign& (0+255),b
  2175                           
  2176                           ; BSR set to: 0
  2177  000E44  0100               	movlb	0	; () banked
  2178  000E46  AFD3               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2179  000E48  D009               	goto	l6354
  2180                           
  2181                           ; BSR set to: 0
  2182  000E4A  0100               	movlb	0	; () banked
  2183  000E4C  6DD2               	negf	___awdiv@divisor& (0+255),b
  2184  000E4E  1FD3               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2185  000E50  B0D8               	btfsc	status,0,c
  2186  000E52  2BD3               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2187                           
  2188                           ; BSR set to: 0
  2189  000E54  0E01               	movlw	1
  2190  000E56  0100               	movlb	0	; () banked
  2191  000E58  6FD5               	movwf	___awdiv@sign& (0+255),b
  2192  000E5A  D000               	goto	l6354
  2193  000E5C                     l6354:
  2194                           
  2195                           ; BSR set to: 0
  2196  000E5C  0100               	movlb	0	; () banked
  2197  000E5E  AFD1               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2198  000E60  D009               	goto	l6360
  2199                           
  2200                           ; BSR set to: 0
  2201  000E62  0100               	movlb	0	; () banked
  2202  000E64  6DD0               	negf	___awdiv@dividend& (0+255),b
  2203  000E66  1FD1               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2204  000E68  B0D8               	btfsc	status,0,c
  2205  000E6A  2BD1               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2206                           
  2207                           ; BSR set to: 0
  2208  000E6C  0E01               	movlw	1
  2209  000E6E  0100               	movlb	0	; () banked
  2210  000E70  1BD5               	xorwf	___awdiv@sign& (0+255),f,b
  2211  000E72  D000               	goto	l6360
  2212  000E74                     l6360:
  2213                           
  2214                           ; BSR set to: 0
  2215  000E74  0E00               	movlw	0
  2216  000E76  0100               	movlb	0	; () banked
  2217  000E78  6FD7               	movwf	(___awdiv@quotient+1)& (0+255),b
  2218  000E7A  0E00               	movlw	0
  2219  000E7C  6FD6               	movwf	___awdiv@quotient& (0+255),b
  2220                           
  2221                           ; BSR set to: 0
  2222  000E7E  0100               	movlb	0	; () banked
  2223  000E80  51D2               	movf	___awdiv@divisor& (0+255),w,b
  2224  000E82  0100               	movlb	0	; () banked
  2225  000E84  11D3               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2226  000E86  B4D8               	btfsc	status,2,c
  2227  000E88  D031               	goto	l6382
  2228                           
  2229                           ; BSR set to: 0
  2230  000E8A  0E01               	movlw	1
  2231  000E8C  0100               	movlb	0	; () banked
  2232  000E8E  6FD4               	movwf	___awdiv@counter& (0+255),b
  2233  000E90  D007               	goto	l6368
  2234  000E92                     l6366:
  2235                           
  2236                           ; BSR set to: 0
  2237  000E92  0100               	movlb	0	; () banked
  2238  000E94  90D8               	bcf	status,0,c
  2239  000E96  37D2               	rlcf	___awdiv@divisor& (0+255),f,b
  2240  000E98  37D3               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2241  000E9A  0100               	movlb	0	; () banked
  2242  000E9C  2BD4               	incf	___awdiv@counter& (0+255),f,b
  2243  000E9E  D000               	goto	l6368
  2244  000EA0                     l6368:
  2245                           
  2246                           ; BSR set to: 0
  2247  000EA0  0100               	movlb	0	; () banked
  2248  000EA2  BFD3               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2249  000EA4  D002               	goto	l6370
  2250  000EA6  D7F5               	goto	l6366
  2251                           
  2252                           ; BSR set to: 0
  2253  000EA8  D000               	goto	l6370
  2254  000EAA                     l6370:
  2255                           
  2256                           ; BSR set to: 0
  2257  000EAA  0100               	movlb	0	; () banked
  2258  000EAC  90D8               	bcf	status,0,c
  2259  000EAE  37D6               	rlcf	___awdiv@quotient& (0+255),f,b
  2260  000EB0  37D7               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2261                           
  2262                           ; BSR set to: 0
  2263  000EB2  0100               	movlb	0	; () banked
  2264  000EB4  51D2               	movf	___awdiv@divisor& (0+255),w,b
  2265  000EB6  0100               	movlb	0	; () banked
  2266  000EB8  5DD0               	subwf	___awdiv@dividend& (0+255),w,b
  2267  000EBA  0100               	movlb	0	; () banked
  2268  000EBC  51D3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2269  000EBE  0100               	movlb	0	; () banked
  2270  000EC0  59D1               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2271  000EC2  A0D8               	btfss	status,0,c
  2272  000EC4  D00B               	goto	l6378
  2273                           
  2274                           ; BSR set to: 0
  2275  000EC6  0100               	movlb	0	; () banked
  2276  000EC8  51D2               	movf	___awdiv@divisor& (0+255),w,b
  2277  000ECA  0100               	movlb	0	; () banked
  2278  000ECC  5FD0               	subwf	___awdiv@dividend& (0+255),f,b
  2279  000ECE  0100               	movlb	0	; () banked
  2280  000ED0  51D3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2281  000ED2  0100               	movlb	0	; () banked
  2282  000ED4  5BD1               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2283                           
  2284                           ; BSR set to: 0
  2285  000ED6  0100               	movlb	0	; () banked
  2286  000ED8  81D6               	bsf	___awdiv@quotient& (0+255),0,b
  2287  000EDA  D000               	goto	l6378
  2288  000EDC                     l6378:
  2289                           
  2290                           ; BSR set to: 0
  2291  000EDC  0100               	movlb	0	; () banked
  2292  000EDE  90D8               	bcf	status,0,c
  2293  000EE0  33D3               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2294  000EE2  33D2               	rrcf	___awdiv@divisor& (0+255),f,b
  2295                           
  2296                           ; BSR set to: 0
  2297  000EE4  0100               	movlb	0	; () banked
  2298  000EE6  2FD4               	decfsz	___awdiv@counter& (0+255),f,b
  2299  000EE8  D7E0               	goto	l6370
  2300                           
  2301                           ; BSR set to: 0
  2302  000EEA  D000               	goto	l6382
  2303  000EEC                     l6382:
  2304                           
  2305                           ; BSR set to: 0
  2306  000EEC  0100               	movlb	0	; () banked
  2307  000EEE  51D5               	movf	___awdiv@sign& (0+255),w,b
  2308  000EF0  0100               	movlb	0	; () banked
  2309  000EF2  B4D8               	btfsc	status,2,c
  2310  000EF4  D006               	goto	l6386
  2311                           
  2312                           ; BSR set to: 0
  2313  000EF6  0100               	movlb	0	; () banked
  2314  000EF8  6DD6               	negf	___awdiv@quotient& (0+255),b
  2315  000EFA  1FD7               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2316  000EFC  B0D8               	btfsc	status,0,c
  2317  000EFE  2BD7               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2318  000F00  D000               	goto	l6386
  2319  000F02                     l6386:
  2320                           
  2321                           ; BSR set to: 0
  2322  000F02  C0D6  F0D0         	movff	___awdiv@quotient,?___awdiv
  2323  000F06  C0D7  F0D1         	movff	___awdiv@quotient+1,?___awdiv+1
  2324  000F0A  D000               	goto	l1422
  2325  000F0C                     l1422:
  2326                           
  2327                           ; BSR set to: 0
  2328  000F0C  0012               	return		;funcret
  2329  000F0E                     __end_of___awdiv:
  2330                           	opt stack 0
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _StopMotors *****************
  2336 ;; Defined at:
  2337 ;;		line 128 in file "Motors.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    9
  2358 ;; This function calls:
  2359 ;;		_SetDCMotorL
  2360 ;;		_SetDCMotorR
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text2
  2367  002114                     __ptext2:
  2368                           	opt stack 0
  2369  002114                     _StopMotors:
  2370                           	opt stack 21
  2371                           
  2372                           ;Motors.c: 130: SetDCMotorR(526);
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;incstack = 0
  2376  002114  0E02               	movlw	2
  2377  002116  0100               	movlb	0	; () banked
  2378  002118  6FD7               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2379  00211A  0E0E               	movlw	14
  2380  00211C  6FD6               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2381  00211E  EC94  F011         	call	_SetDCMotorR	;wreg free
  2382                           
  2383                           ;Motors.c: 131: SetDCMotorL(526);
  2384  002122  0E02               	movlw	2
  2385  002124  0100               	movlb	0	; () banked
  2386  002126  6FD7               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2387  002128  0E0E               	movlw	14
  2388  00212A  6FD6               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2389  00212C  EC9B  F011         	call	_SetDCMotorL	;wreg free
  2390  002130  0012               	return		;funcret
  2391  002132                     __end_of_StopMotors:
  2392                           	opt stack 0
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _SetUnipolar *****************
  2398 ;; Defined at:
  2399 ;;		line 121 in file "Motors.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		None
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    7
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text3
  2428  0023C8                     __ptext3:
  2429                           	opt stack 0
  2430  0023C8                     _SetUnipolar:
  2431                           	opt stack 23
  2432                           
  2433                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2434                           
  2435                           ;incstack = 0
  2436  0023C8  908C               	bcf	3980,0,c	;volatile
  2437                           
  2438                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2439  0023CA  948C               	bcf	3980,2,c	;volatile
  2440  0023CC  0012               	return		;funcret
  2441  0023CE                     __end_of_SetUnipolar:
  2442                           	opt stack 0
  2443                           postinc0	equ	0xFEE
  2444                           wreg	equ	0xFE8
  2445                           status	equ	0xFD8
  2446                           
  2447 ;; *************** function _SetReverseMotorL *****************
  2448 ;; Defined at:
  2449 ;;		line 96 in file "Motors.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;		None               void
  2456 ;; Registers used:
  2457 ;;		None
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    7
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text4
  2478  0023DA                     __ptext4:
  2479                           	opt stack 0
  2480  0023DA                     _SetReverseMotorL:
  2481                           	opt stack 23
  2482                           
  2483                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2484                           
  2485                           ;incstack = 0
  2486  0023DA  968C               	bcf	3980,3,c	;volatile
  2487  0023DC  0012               	return		;funcret
  2488  0023DE                     __end_of_SetReverseMotorL:
  2489                           	opt stack 0
  2490                           postinc0	equ	0xFEE
  2491                           wreg	equ	0xFE8
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _SetForwardsMotorR *****************
  2495 ;; Defined at:
  2496 ;;		line 78 in file "Motors.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		None
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    7
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text5
  2525  0023DE                     __ptext5:
  2526                           	opt stack 0
  2527  0023DE                     _SetForwardsMotorR:
  2528                           	opt stack 23
  2529                           
  2530                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2531                           
  2532                           ;incstack = 0
  2533  0023DE  828C               	bsf	3980,1,c	;volatile
  2534  0023E0  0012               	return		;funcret
  2535  0023E2                     __end_of_SetForwardsMotorR:
  2536                           	opt stack 0
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           status	equ	0xFD8
  2540                           
  2541 ;; *************** function _SetDirectionForward *****************
  2542 ;; Defined at:
  2543 ;;		line 64 in file "Motors.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		None
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    7
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text6
  2572  0023CE                     __ptext6:
  2573                           	opt stack 0
  2574  0023CE                     _SetDirectionForward:
  2575                           	opt stack 23
  2576                           
  2577                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2578                           
  2579                           ;incstack = 0
  2580  0023CE  868C               	bsf	3980,3,c	;volatile
  2581                           
  2582                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2583  0023D0  828C               	bsf	3980,1,c	;volatile
  2584  0023D2  0012               	return		;funcret
  2585  0023D4                     __end_of_SetDirectionForward:
  2586                           	opt stack 0
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _SetDCMotorPID *****************
  2592 ;; Defined at:
  2593 ;;		line 47 in file "Motors.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  PIDoutput       2   24[BANK0 ] int 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        4 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    9
  2614 ;; This function calls:
  2615 ;;		_SetDCMotorL
  2616 ;;		_SetDCMotorR
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text7
  2623  001072                     __ptext7:
  2624                           	opt stack 0
  2625  001072                     _SetDCMotorPID:
  2626                           	opt stack 21
  2627                           
  2628                           ;Motors.c: 49: if(PIDoutput < 0) {
  2629                           
  2630                           ;incstack = 0
  2631  001072  0100               	movlb	0	; () banked
  2632  001074  AFD9               	btfss	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2633  001076  D01D               	goto	l6056
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;Motors.c: 50: SetDCMotorL(350 - PIDoutput);
  2637  001078  C0D8  F0DA         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2638  00107C  C0D9  F0DB         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2639  001080  0100               	movlb	0	; () banked
  2640  001082  1FDA               	comf	??_SetDCMotorPID& (0+255),f,b
  2641  001084  1FDB               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2642  001086  4BDA               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2643  001088  2BDB               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2644  00108A  0E5E               	movlw	94
  2645  00108C  0100               	movlb	0	; () banked
  2646  00108E  25DA               	addwf	??_SetDCMotorPID& (0+255),w,b
  2647  001090  0100               	movlb	0	; () banked
  2648  001092  6FD6               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2649  001094  0E01               	movlw	1
  2650  001096  0100               	movlb	0	; () banked
  2651  001098  21DB               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2652  00109A  0100               	movlb	0	; () banked
  2653  00109C  6FD7               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2654  00109E  EC9B  F011         	call	_SetDCMotorL	;wreg free
  2655                           
  2656                           ;Motors.c: 51: SetDCMotorR(350);
  2657  0010A2  0E01               	movlw	1
  2658  0010A4  0100               	movlb	0	; () banked
  2659  0010A6  6FD7               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2660  0010A8  0E5E               	movlw	94
  2661  0010AA  6FD6               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2662  0010AC  EC94  F011         	call	_SetDCMotorR	;wreg free
  2663                           
  2664                           ;Motors.c: 52: }
  2665  0010B0  D033               	goto	l128
  2666  0010B2                     l6056:
  2667                           
  2668                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2669  0010B2  0100               	movlb	0	; () banked
  2670  0010B4  BFD9               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2671  0010B6  D01B               	goto	l6060
  2672  0010B8  0100               	movlb	0	; () banked
  2673  0010BA  51D9               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2674  0010BC  E104               	bnz	u5070
  2675  0010BE  0100               	movlb	0	; () banked
  2676  0010C0  05D8               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2677  0010C2  A0D8               	btfss	status,0,c
  2678  0010C4  D014               	goto	l6060
  2679  0010C6                     u5070:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;Motors.c: 54: SetDCMotorL(350);
  2683  0010C6  0E01               	movlw	1
  2684  0010C8  0100               	movlb	0	; () banked
  2685  0010CA  6FD7               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2686  0010CC  0E5E               	movlw	94
  2687  0010CE  6FD6               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2688  0010D0  EC9B  F011         	call	_SetDCMotorL	;wreg free
  2689                           
  2690                           ;Motors.c: 55: SetDCMotorR(350 + PIDoutput);
  2691  0010D4  0E5E               	movlw	94
  2692  0010D6  0100               	movlb	0	; () banked
  2693  0010D8  25D8               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2694  0010DA  0100               	movlb	0	; () banked
  2695  0010DC  6FD6               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2696  0010DE  0E01               	movlw	1
  2697  0010E0  0100               	movlb	0	; () banked
  2698  0010E2  21D9               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2699  0010E4  0100               	movlb	0	; () banked
  2700  0010E6  6FD7               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2701  0010E8  EC94  F011         	call	_SetDCMotorR	;wreg free
  2702                           
  2703                           ;Motors.c: 56: }
  2704  0010EC  D015               	goto	l128
  2705  0010EE                     l6060:
  2706                           
  2707                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2708  0010EE  0100               	movlb	0	; () banked
  2709  0010F0  51D8               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2710  0010F2  0100               	movlb	0	; () banked
  2711  0010F4  11D9               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2712  0010F6  A4D8               	btfss	status,2,c
  2713  0010F8  D00F               	goto	l128
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;Motors.c: 58: SetDCMotorL(350);
  2717  0010FA  0E01               	movlw	1
  2718  0010FC  0100               	movlb	0	; () banked
  2719  0010FE  6FD7               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2720  001100  0E5E               	movlw	94
  2721  001102  6FD6               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2722  001104  EC9B  F011         	call	_SetDCMotorL	;wreg free
  2723                           
  2724                           ;Motors.c: 59: SetDCMotorR(350);
  2725  001108  0E01               	movlw	1
  2726  00110A  0100               	movlb	0	; () banked
  2727  00110C  6FD7               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2728  00110E  0E5E               	movlw	94
  2729  001110  6FD6               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2730  001112  EC94  F011         	call	_SetDCMotorR	;wreg free
  2731  001116  D000               	goto	l128
  2732  001118                     l128:
  2733  001118  0012               	return		;funcret
  2734  00111A                     __end_of_SetDCMotorPID:
  2735                           	opt stack 0
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _SetDCMotorR *****************
  2741 ;; Defined at:
  2742 ;;		line 19 in file "Motors.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        2 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    8
  2763 ;; This function calls:
  2764 ;;		_SetDCPWM4
  2765 ;; This function is called by:
  2766 ;;		_SetDCMotorPID
  2767 ;;		_StopMotors
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text8
  2773  002328                     __ptext8:
  2774                           	opt stack 0
  2775  002328                     _SetDCMotorR:
  2776                           	opt stack 21
  2777                           
  2778                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2779                           
  2780                           ;incstack = 0
  2781  002328  C0D6  F0D0         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2782  00232C  C0D7  F0D1         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2783  002330  EC65  F00D         	call	_SetDCPWM4	;wreg free
  2784  002334  0012               	return		;funcret
  2785  002336                     __end_of_SetDCMotorR:
  2786                           	opt stack 0
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _SetDCPWM4 *****************
  2792 ;; Defined at:
  2793 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2798 ;; Return value:  Size  Location     Type
  2799 ;;		None               void
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        6 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    7
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_SetDCMotorR
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text9
  2822  001ACA                     __ptext9:
  2823                           	opt stack 0
  2824  001ACA                     _SetDCPWM4:
  2825                           	opt stack 21
  2826                           
  2827                           ;incstack = 0
  2828  001ACA  C0D0  F0D2         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2829  001ACE  C0D1  F0D3         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2830  001AD2  0E06               	movlw	6
  2831  001AD4                     u4515:
  2832  001AD4  90D8               	bcf	status,0,c
  2833  001AD6  0100               	movlb	0	; () banked
  2834  001AD8  37D2               	rlcf	??_SetDCPWM4& (0+255),f,b
  2835  001ADA  37D3               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2836  001ADC  2EE8               	decfsz	wreg,f,c
  2837  001ADE  D7FA               	goto	u4515
  2838  001AE0  C0D2  F0D4         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  2839  001AE4  C0D3  F0D5         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  2840                           
  2841                           ; BSR set to: 0
  2842  001AE8  C0D5  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  2843  001AEC  C0D4  F0D2         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  2844  001AF0  0100               	movlb	0	; () banked
  2845  001AF2  90D8               	bcf	status,0,c
  2846  001AF4  33D2               	rrcf	??_SetDCPWM4& (0+255),f,b
  2847  001AF6  0100               	movlb	0	; () banked
  2848  001AF8  90D8               	bcf	status,0,c
  2849  001AFA  33D2               	rrcf	??_SetDCPWM4& (0+255),f,b
  2850  001AFC  0E30               	movlw	48
  2851  001AFE  0100               	movlb	0	; () banked
  2852  001B00  17D2               	andwf	??_SetDCPWM4& (0+255),f,b
  2853  001B02  5073               	movf	3955,w,c	;volatile
  2854  001B04  0BCF               	andlw	207
  2855  001B06  0100               	movlb	0	; () banked
  2856  001B08  11D2               	iorwf	??_SetDCPWM4& (0+255),w,b
  2857  001B0A  6E73               	movwf	3955,c	;volatile
  2858                           
  2859                           ; BSR set to: 0
  2860  001B0C  0012               	return		;funcret
  2861  001B0E                     __end_of_SetDCPWM4:
  2862                           	opt stack 0
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           status	equ	0xFD8
  2866                           
  2867 ;; *************** function _SetDCMotorL *****************
  2868 ;; Defined at:
  2869 ;;		line 6 in file "Motors.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    8
  2890 ;; This function calls:
  2891 ;;		_SetDCPWM5
  2892 ;; This function is called by:
  2893 ;;		_SetDCMotorPID
  2894 ;;		_StopMotors
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text10
  2900  002336                     __ptext10:
  2901                           	opt stack 0
  2902  002336                     _SetDCMotorL:
  2903                           	opt stack 21
  2904                           
  2905                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;incstack = 0
  2909  002336  C0D6  F0D0         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  2910  00233A  C0D7  F0D1         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  2911  00233E  EC87  F00D         	call	_SetDCPWM5	;wreg free
  2912  002342  0012               	return		;funcret
  2913  002344                     __end_of_SetDCMotorL:
  2914                           	opt stack 0
  2915                           postinc0	equ	0xFEE
  2916                           wreg	equ	0xFE8
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _SetDCPWM5 *****************
  2920 ;; Defined at:
  2921 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2926 ;; Return value:  Size  Location     Type
  2927 ;;		None               void
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;Total ram usage:        6 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    7
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_SetDCMotorL
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text11
  2950  001B0E                     __ptext11:
  2951                           	opt stack 0
  2952  001B0E                     _SetDCPWM5:
  2953                           	opt stack 21
  2954                           
  2955                           ;incstack = 0
  2956  001B0E  C0D0  F0D2         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  2957  001B12  C0D1  F0D3         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  2958  001B16  0E06               	movlw	6
  2959  001B18                     u4505:
  2960  001B18  90D8               	bcf	status,0,c
  2961  001B1A  0100               	movlb	0	; () banked
  2962  001B1C  37D2               	rlcf	??_SetDCPWM5& (0+255),f,b
  2963  001B1E  37D3               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  2964  001B20  2EE8               	decfsz	wreg,f,c
  2965  001B22  D7FA               	goto	u4505
  2966  001B24  C0D2  F0D4         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  2967  001B28  C0D3  F0D5         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  2968                           
  2969                           ; BSR set to: 0
  2970  001B2C  C0D5  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  2971  001B30  C0D4  F0D2         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  2972  001B34  0100               	movlb	0	; () banked
  2973  001B36  90D8               	bcf	status,0,c
  2974  001B38  33D2               	rrcf	??_SetDCPWM5& (0+255),f,b
  2975  001B3A  0100               	movlb	0	; () banked
  2976  001B3C  90D8               	bcf	status,0,c
  2977  001B3E  33D2               	rrcf	??_SetDCPWM5& (0+255),f,b
  2978  001B40  0E30               	movlw	48
  2979  001B42  0100               	movlb	0	; () banked
  2980  001B44  17D2               	andwf	??_SetDCPWM5& (0+255),f,b
  2981  001B46  5070               	movf	3952,w,c	;volatile
  2982  001B48  0BCF               	andlw	207
  2983  001B4A  0100               	movlb	0	; () banked
  2984  001B4C  11D2               	iorwf	??_SetDCPWM5& (0+255),w,b
  2985  001B4E  6E70               	movwf	3952,c	;volatile
  2986                           
  2987                           ; BSR set to: 0
  2988  001B50  0012               	return		;funcret
  2989  001B52                     __end_of_SetDCPWM5:
  2990                           	opt stack 0
  2991                           postinc0	equ	0xFEE
  2992                           wreg	equ	0xFE8
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _SendStoredPIDValues *****************
  2996 ;; Defined at:
  2997 ;;		line 223 in file "Wireless.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  Kp              2   24[BANK0 ] int 
  3000 ;;  Kd              2   26[BANK0 ] int 
  3001 ;;  Ki              2   28[BANK0 ] int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        6 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    9
  3020 ;; This function calls:
  3021 ;;		_BusyTx
  3022 ;;		_FlushTxBuf
  3023 ;;		_PutCharTxBuf
  3024 ;;		_StartTx
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text12
  3031  00164A                     __ptext12:
  3032                           	opt stack 0
  3033  00164A                     _SendStoredPIDValues:
  3034                           	opt stack 21
  3035                           
  3036                           ;Wireless.c: 224: while(BusyTx());
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;incstack = 0
  3040  00164A  D000               	goto	l6150
  3041  00164C                     l6150:
  3042  00164C  EC6C  F011         	call	_BusyTx	;wreg free
  3043  001650  0900               	iorlw	0
  3044  001652  A4D8               	btfss	status,2,c
  3045  001654  D7FB               	goto	l6150
  3046                           
  3047                           ;Wireless.c: 225: FlushTxBuf();
  3048  001656  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3049                           
  3050                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3051  00165A  0EAA               	movlw	170
  3052  00165C  ECCA  F00D         	call	_PutCharTxBuf
  3053                           
  3054                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3055  001660  0E42               	movlw	66
  3056  001662  ECCA  F00D         	call	_PutCharTxBuf
  3057                           
  3058                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3059  001666  0100               	movlb	0	; () banked
  3060  001668  51D9               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3061  00166A  ECCA  F00D         	call	_PutCharTxBuf
  3062                           
  3063                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3064  00166E  0100               	movlb	0	; () banked
  3065  001670  51D8               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3066  001672  ECCA  F00D         	call	_PutCharTxBuf
  3067                           
  3068                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3069  001676  0100               	movlb	0	; () banked
  3070  001678  51DB               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3071  00167A  ECCA  F00D         	call	_PutCharTxBuf
  3072                           
  3073                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3074  00167E  0100               	movlb	0	; () banked
  3075  001680  51DA               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3076  001682  ECCA  F00D         	call	_PutCharTxBuf
  3077                           
  3078                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3079  001686  0100               	movlb	0	; () banked
  3080  001688  51DD               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3081  00168A  ECCA  F00D         	call	_PutCharTxBuf
  3082                           
  3083                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3084  00168E  0100               	movlb	0	; () banked
  3085  001690  51DC               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3086  001692  ECCA  F00D         	call	_PutCharTxBuf
  3087                           
  3088                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3089  001696  0E0D               	movlw	13
  3090  001698  ECCA  F00D         	call	_PutCharTxBuf
  3091                           
  3092                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3093  00169C  0E0A               	movlw	10
  3094  00169E  ECCA  F00D         	call	_PutCharTxBuf
  3095                           
  3096                           ;Wireless.c: 239: while (BusyTx());
  3097  0016A2  D000               	goto	l6154
  3098  0016A4                     l6154:
  3099  0016A4  EC6C  F011         	call	_BusyTx	;wreg free
  3100  0016A8  0900               	iorlw	0
  3101  0016AA  A4D8               	btfss	status,2,c
  3102  0016AC  D7FB               	goto	l6154
  3103                           
  3104                           ;Wireless.c: 240: StartTx();
  3105  0016AE  ECD8  F011         	call	_StartTx	;wreg free
  3106  0016B2  0012               	return		;funcret
  3107  0016B4                     __end_of_SendStoredPIDValues:
  3108                           	opt stack 0
  3109                           postinc0	equ	0xFEE
  3110                           wreg	equ	0xFE8
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _SendPIDSetPointOnLine *****************
  3114 ;; Defined at:
  3115 ;;		line 337 in file "Wireless.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  set_point       2   24[BANK0 ] PTR const int 
  3118 ;;		 -> PID_set_point(2), 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;		None               void
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:        4 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    9
  3137 ;; This function calls:
  3138 ;;		_BusyTx
  3139 ;;		_FlushTxBuf
  3140 ;;		_PutCharTxBuf
  3141 ;;		_StartTx
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text13
  3148  001572                     __ptext13:
  3149                           	opt stack 0
  3150  001572                     _SendPIDSetPointOnLine:
  3151                           	opt stack 21
  3152                           
  3153                           ;Wireless.c: 338: while(BusyTx());
  3154                           
  3155                           ;incstack = 0
  3156  001572  D000               	goto	l6180
  3157  001574                     l6180:
  3158  001574  EC6C  F011         	call	_BusyTx	;wreg free
  3159  001578  0900               	iorlw	0
  3160  00157A  A4D8               	btfss	status,2,c
  3161  00157C  D7FB               	goto	l6180
  3162                           
  3163                           ;Wireless.c: 339: FlushTxBuf();
  3164  00157E  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3165                           
  3166                           ;Wireless.c: 341: PutCharTxBuf(0xAA);
  3167  001582  0EAA               	movlw	170
  3168  001584  ECCA  F00D         	call	_PutCharTxBuf
  3169                           
  3170                           ;Wireless.c: 342: PutCharTxBuf(0x07);
  3171  001588  0E07               	movlw	7
  3172  00158A  ECCA  F00D         	call	_PutCharTxBuf
  3173                           
  3174                           ;Wireless.c: 344: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3175  00158E  C0D8  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3176  001592  C0D9  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3177  001596  CFDE F0DA          	movff	postinc2,??_SendPIDSetPointOnLine
  3178  00159A  CFDD F0DB          	movff	postdec2,??_SendPIDSetPointOnLine+1
  3179  00159E  C0DB  F0DA         	movff	??_SendPIDSetPointOnLine+1,??_SendPIDSetPointOnLine
  3180  0015A2  0100               	movlb	0	; () banked
  3181  0015A4  6BDB               	clrf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3182  0015A6  BFDA               	btfsc	??_SendPIDSetPointOnLine& (0+255),7,b
  3183  0015A8  69DB               	setf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3184  0015AA  0100               	movlb	0	; () banked
  3185  0015AC  51DA               	movf	??_SendPIDSetPointOnLine& (0+255),w,b
  3186  0015AE  ECCA  F00D         	call	_PutCharTxBuf
  3187                           
  3188                           ;Wireless.c: 345: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3189  0015B2  C0D8  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3190  0015B6  C0D9  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3191  0015BA  50DF               	movf	indf2,w,c
  3192  0015BC  ECCA  F00D         	call	_PutCharTxBuf
  3193                           
  3194                           ;Wireless.c: 347: PutCharTxBuf('\r');
  3195  0015C0  0E0D               	movlw	13
  3196  0015C2  ECCA  F00D         	call	_PutCharTxBuf
  3197                           
  3198                           ;Wireless.c: 348: PutCharTxBuf('\n');
  3199  0015C6  0E0A               	movlw	10
  3200  0015C8  ECCA  F00D         	call	_PutCharTxBuf
  3201                           
  3202                           ;Wireless.c: 349: while (BusyTx());
  3203  0015CC  D000               	goto	l6184
  3204  0015CE                     l6184:
  3205  0015CE  EC6C  F011         	call	_BusyTx	;wreg free
  3206  0015D2  0900               	iorlw	0
  3207  0015D4  A4D8               	btfss	status,2,c
  3208  0015D6  D7FB               	goto	l6184
  3209                           
  3210                           ;Wireless.c: 350: StartTx();
  3211  0015D8  ECD8  F011         	call	_StartTx	;wreg free
  3212  0015DC  0012               	return		;funcret
  3213  0015DE                     __end_of_SendPIDSetPointOnLine:
  3214                           	opt stack 0
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           indf2	equ	0xFDF
  3218                           postinc2	equ	0xFDE
  3219                           postdec2	equ	0xFDD
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _SendPIDSetPointOffLine *****************
  3225 ;; Defined at:
  3226 ;;		line 354 in file "Wireless.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  set_point       2   24[BANK0 ] PTR const int 
  3229 ;;		 -> off_line_sum(2), 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;Total ram usage:        4 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    9
  3248 ;; This function calls:
  3249 ;;		_BusyTx
  3250 ;;		_FlushTxBuf
  3251 ;;		_PutCharTxBuf
  3252 ;;		_StartTx
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text14
  3259  0015DE                     __ptext14:
  3260                           	opt stack 0
  3261  0015DE                     _SendPIDSetPointOffLine:
  3262                           	opt stack 21
  3263                           
  3264                           ;Wireless.c: 355: while(BusyTx());
  3265                           
  3266                           ;incstack = 0
  3267  0015DE  D000               	goto	l6190
  3268  0015E0                     l6190:
  3269  0015E0  EC6C  F011         	call	_BusyTx	;wreg free
  3270  0015E4  0900               	iorlw	0
  3271  0015E6  A4D8               	btfss	status,2,c
  3272  0015E8  D7FB               	goto	l6190
  3273                           
  3274                           ;Wireless.c: 356: FlushTxBuf();
  3275  0015EA  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3276                           
  3277                           ;Wireless.c: 358: PutCharTxBuf(0xAA);
  3278  0015EE  0EAA               	movlw	170
  3279  0015F0  ECCA  F00D         	call	_PutCharTxBuf
  3280                           
  3281                           ;Wireless.c: 359: PutCharTxBuf(0x08);
  3282  0015F4  0E08               	movlw	8
  3283  0015F6  ECCA  F00D         	call	_PutCharTxBuf
  3284                           
  3285                           ;Wireless.c: 361: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3286  0015FA  C0D8  FFD9         	movff	SendPIDSetPointOffLine@set_point,fsr2l
  3287  0015FE  C0D9  FFDA         	movff	SendPIDSetPointOffLine@set_point+1,fsr2h
  3288  001602  CFDE F0DA          	movff	postinc2,??_SendPIDSetPointOffLine
  3289  001606  CFDD F0DB          	movff	postdec2,??_SendPIDSetPointOffLine+1
  3290  00160A  C0DB  F0DA         	movff	??_SendPIDSetPointOffLine+1,??_SendPIDSetPointOffLine
  3291  00160E  0100               	movlb	0	; () banked
  3292  001610  6BDB               	clrf	(??_SendPIDSetPointOffLine+1)& (0+255),b
  3293  001612  BFDA               	btfsc	??_SendPIDSetPointOffLine& (0+255),7,b
  3294  001614  69DB               	setf	(??_SendPIDSetPointOffLine+1)& (0+255),b
  3295  001616  0100               	movlb	0	; () banked
  3296  001618  51DA               	movf	??_SendPIDSetPointOffLine& (0+255),w,b
  3297  00161A  ECCA  F00D         	call	_PutCharTxBuf
  3298                           
  3299                           ;Wireless.c: 362: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3300  00161E  C0D8  FFD9         	movff	SendPIDSetPointOffLine@set_point,fsr2l
  3301  001622  C0D9  FFDA         	movff	SendPIDSetPointOffLine@set_point+1,fsr2h
  3302  001626  50DF               	movf	indf2,w,c
  3303  001628  ECCA  F00D         	call	_PutCharTxBuf
  3304                           
  3305                           ;Wireless.c: 364: PutCharTxBuf('\r');
  3306  00162C  0E0D               	movlw	13
  3307  00162E  ECCA  F00D         	call	_PutCharTxBuf
  3308                           
  3309                           ;Wireless.c: 365: PutCharTxBuf('\n');
  3310  001632  0E0A               	movlw	10
  3311  001634  ECCA  F00D         	call	_PutCharTxBuf
  3312                           
  3313                           ;Wireless.c: 366: while (BusyTx());
  3314  001638  D000               	goto	l6194
  3315  00163A                     l6194:
  3316  00163A  EC6C  F011         	call	_BusyTx	;wreg free
  3317  00163E  0900               	iorlw	0
  3318  001640  A4D8               	btfss	status,2,c
  3319  001642  D7FB               	goto	l6194
  3320                           
  3321                           ;Wireless.c: 367: StartTx();
  3322  001644  ECD8  F011         	call	_StartTx	;wreg free
  3323  001648  0012               	return		;funcret
  3324  00164A                     __end_of_SendPIDSetPointOffLine:
  3325                           	opt stack 0
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           indf2	equ	0xFDF
  3329                           postinc2	equ	0xFDE
  3330                           postdec2	equ	0xFDD
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _SendOffsets *****************
  3336 ;; Defined at:
  3337 ;;		line 165 in file "Wireless.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  3340 ;;		 -> sensor_offsets(10), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  index           1   28[BANK0 ] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;Total ram usage:        5 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    9
  3359 ;; This function calls:
  3360 ;;		_BusyTx
  3361 ;;		_FlushTxBuf
  3362 ;;		_PutCharTxBuf
  3363 ;;		_StartTx
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text15
  3370  0011C2                     __ptext15:
  3371                           	opt stack 0
  3372  0011C2                     _SendOffsets:
  3373                           	opt stack 21
  3374                           
  3375                           ;Wireless.c: 166: unsigned char index;
  3376                           ;Wireless.c: 168: while(BusyTx());
  3377                           
  3378                           ;incstack = 0
  3379  0011C2  D000               	goto	l6116
  3380  0011C4                     l6116:
  3381  0011C4  EC6C  F011         	call	_BusyTx	;wreg free
  3382  0011C8  0900               	iorlw	0
  3383  0011CA  A4D8               	btfss	status,2,c
  3384  0011CC  D7FB               	goto	l6116
  3385                           
  3386                           ;Wireless.c: 169: FlushTxBuf();
  3387  0011CE  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3388                           
  3389                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  3390  0011D2  0EAA               	movlw	170
  3391  0011D4  ECCA  F00D         	call	_PutCharTxBuf
  3392                           
  3393                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  3394  0011D8  0E21               	movlw	33
  3395  0011DA  ECCA  F00D         	call	_PutCharTxBuf
  3396                           
  3397                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  3398  0011DE  0E00               	movlw	0
  3399  0011E0  0100               	movlb	0	; () banked
  3400  0011E2  6FDC               	movwf	SendOffsets@index& (0+255),b
  3401  0011E4                     l6122:
  3402                           
  3403                           ; BSR set to: 0
  3404  0011E4  0E04               	movlw	4
  3405  0011E6  0100               	movlb	0	; () banked
  3406  0011E8  65DC               	cpfsgt	SendOffsets@index& (0+255),b
  3407  0011EA  D001               	goto	l6126
  3408                           
  3409                           ; BSR set to: 0
  3410  0011EC  D02C               	goto	l6132
  3411  0011EE                     l6126:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3415  0011EE  0100               	movlb	0	; () banked
  3416  0011F0  51DC               	movf	SendOffsets@index& (0+255),w,b
  3417  0011F2  0D02               	mullw	2
  3418  0011F4  50F3               	movf	prodl,w,c
  3419  0011F6  0100               	movlb	0	; () banked
  3420  0011F8  25D8               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3421  0011FA  6ED9               	movwf	fsr2l,c
  3422  0011FC  50F4               	movf	prodh,w,c
  3423  0011FE  0100               	movlb	0	; () banked
  3424  001200  21D9               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3425  001202  6EDA               	movwf	fsr2h,c
  3426  001204  CFDE F0DA          	movff	postinc2,??_SendOffsets
  3427  001208  CFDD F0DB          	movff	postdec2,??_SendOffsets+1
  3428  00120C  C0DB  F0DA         	movff	??_SendOffsets+1,??_SendOffsets
  3429  001210  0100               	movlb	0	; () banked
  3430  001212  6BDB               	clrf	(??_SendOffsets+1)& (0+255),b
  3431  001214  BFDA               	btfsc	??_SendOffsets& (0+255),7,b
  3432  001216  69DB               	setf	(??_SendOffsets+1)& (0+255),b
  3433  001218  0100               	movlb	0	; () banked
  3434  00121A  51DA               	movf	??_SendOffsets& (0+255),w,b
  3435  00121C  ECCA  F00D         	call	_PutCharTxBuf
  3436                           
  3437                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3438  001220  0100               	movlb	0	; () banked
  3439  001222  51DC               	movf	SendOffsets@index& (0+255),w,b
  3440  001224  0D02               	mullw	2
  3441  001226  50F3               	movf	prodl,w,c
  3442  001228  0100               	movlb	0	; () banked
  3443  00122A  25D8               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3444  00122C  6ED9               	movwf	fsr2l,c
  3445  00122E  50F4               	movf	prodh,w,c
  3446  001230  0100               	movlb	0	; () banked
  3447  001232  21D9               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3448  001234  6EDA               	movwf	fsr2h,c
  3449  001236  50DF               	movf	indf2,w,c
  3450  001238  0DFF               	mullw	255
  3451  00123A  50F3               	movf	prodl,w,c
  3452  00123C  ECCA  F00D         	call	_PutCharTxBuf
  3453  001240  0100               	movlb	0	; () banked
  3454  001242  2BDC               	incf	SendOffsets@index& (0+255),f,b
  3455  001244  D7CF               	goto	l6122
  3456  001246                     l6132:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;Wireless.c: 177: }
  3460                           ;Wireless.c: 179: PutCharTxBuf('\r');
  3461  001246  0E0D               	movlw	13
  3462  001248  ECCA  F00D         	call	_PutCharTxBuf
  3463                           
  3464                           ;Wireless.c: 180: PutCharTxBuf('\n');
  3465  00124C  0E0A               	movlw	10
  3466  00124E  ECCA  F00D         	call	_PutCharTxBuf
  3467                           
  3468                           ;Wireless.c: 181: while(BusyTx());
  3469  001252  D000               	goto	l6134
  3470  001254                     l6134:
  3471  001254  EC6C  F011         	call	_BusyTx	;wreg free
  3472  001258  0900               	iorlw	0
  3473  00125A  A4D8               	btfss	status,2,c
  3474  00125C  D7FB               	goto	l6134
  3475                           
  3476                           ;Wireless.c: 182: StartTx();
  3477  00125E  ECD8  F011         	call	_StartTx	;wreg free
  3478  001262  0012               	return		;funcret
  3479  001264                     __end_of_SendOffsets:
  3480                           	opt stack 0
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _SendLineMode *****************
  3493 ;; Defined at:
  3494 ;;		line 152 in file "Wireless.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3497 ;;		 -> line_mode(1), 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    9
  3516 ;; This function calls:
  3517 ;;		_BusyTx
  3518 ;;		_FlushTxBuf
  3519 ;;		_PutCharTxBuf
  3520 ;;		_StartTx
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text16
  3527  001C56                     __ptext16:
  3528                           	opt stack 0
  3529  001C56                     _SendLineMode:
  3530                           	opt stack 21
  3531                           
  3532                           ;Wireless.c: 153: while(BusyTx());
  3533                           
  3534                           ;incstack = 0
  3535  001C56  D000               	goto	l6108
  3536  001C58                     l6108:
  3537  001C58  EC6C  F011         	call	_BusyTx	;wreg free
  3538  001C5C  0900               	iorlw	0
  3539  001C5E  A4D8               	btfss	status,2,c
  3540  001C60  D7FB               	goto	l6108
  3541                           
  3542                           ;Wireless.c: 154: FlushTxBuf();
  3543  001C62  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3544                           
  3545                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3546  001C66  0EAA               	movlw	170
  3547  001C68  ECCA  F00D         	call	_PutCharTxBuf
  3548                           
  3549                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3550  001C6C  0E11               	movlw	17
  3551  001C6E  ECCA  F00D         	call	_PutCharTxBuf
  3552                           
  3553                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3554  001C72  C0D8  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3555  001C76  C0D9  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3556  001C7A  50DF               	movf	indf2,w,c
  3557  001C7C  ECCA  F00D         	call	_PutCharTxBuf
  3558                           
  3559                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3560  001C80  0E0D               	movlw	13
  3561  001C82  ECCA  F00D         	call	_PutCharTxBuf
  3562                           
  3563                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3564  001C86  0E0A               	movlw	10
  3565  001C88  ECCA  F00D         	call	_PutCharTxBuf
  3566                           
  3567                           ;Wireless.c: 162: StartTx();
  3568  001C8C  ECD8  F011         	call	_StartTx	;wreg free
  3569  001C90  0012               	return		;funcret
  3570  001C92                     __end_of_SendLineMode:
  3571                           	opt stack 0
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           indf2	equ	0xFDF
  3577                           postinc2	equ	0xFDE
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function _SendDefaultPIDValues *****************
  3584 ;; Defined at:
  3585 ;;		line 203 in file "Wireless.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  Kp              2   24[BANK0 ] int 
  3588 ;;  Kd              2   26[BANK0 ] int 
  3589 ;;  Ki              2   28[BANK0 ] int 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;		None               void
  3594 ;; Registers used:
  3595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        6 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    9
  3608 ;; This function calls:
  3609 ;;		_BusyTx
  3610 ;;		_FlushTxBuf
  3611 ;;		_PutCharTxBuf
  3612 ;;		_StartTx
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text17
  3619  0016B4                     __ptext17:
  3620                           	opt stack 0
  3621  0016B4                     _SendDefaultPIDValues:
  3622                           	opt stack 21
  3623                           
  3624                           ;Wireless.c: 204: while(BusyTx());
  3625                           
  3626                           ;incstack = 0
  3627  0016B4  D000               	goto	l6140
  3628  0016B6                     l6140:
  3629  0016B6  EC6C  F011         	call	_BusyTx	;wreg free
  3630  0016BA  0900               	iorlw	0
  3631  0016BC  A4D8               	btfss	status,2,c
  3632  0016BE  D7FB               	goto	l6140
  3633                           
  3634                           ;Wireless.c: 205: FlushTxBuf();
  3635  0016C0  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3636                           
  3637                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3638  0016C4  0EAA               	movlw	170
  3639  0016C6  ECCA  F00D         	call	_PutCharTxBuf
  3640                           
  3641                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3642  0016CA  0E41               	movlw	65
  3643  0016CC  ECCA  F00D         	call	_PutCharTxBuf
  3644                           
  3645                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3646  0016D0  0100               	movlb	0	; () banked
  3647  0016D2  51D9               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3648  0016D4  ECCA  F00D         	call	_PutCharTxBuf
  3649                           
  3650                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3651  0016D8  0100               	movlb	0	; () banked
  3652  0016DA  51D8               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3653  0016DC  ECCA  F00D         	call	_PutCharTxBuf
  3654                           
  3655                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3656  0016E0  0100               	movlb	0	; () banked
  3657  0016E2  51DB               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3658  0016E4  ECCA  F00D         	call	_PutCharTxBuf
  3659                           
  3660                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3661  0016E8  0100               	movlb	0	; () banked
  3662  0016EA  51DA               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3663  0016EC  ECCA  F00D         	call	_PutCharTxBuf
  3664                           
  3665                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3666  0016F0  0100               	movlb	0	; () banked
  3667  0016F2  51DD               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3668  0016F4  ECCA  F00D         	call	_PutCharTxBuf
  3669                           
  3670                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3671  0016F8  0100               	movlb	0	; () banked
  3672  0016FA  51DC               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3673  0016FC  ECCA  F00D         	call	_PutCharTxBuf
  3674                           
  3675                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3676  001700  0E0D               	movlw	13
  3677  001702  ECCA  F00D         	call	_PutCharTxBuf
  3678                           
  3679                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3680  001706  0E0A               	movlw	10
  3681  001708  ECCA  F00D         	call	_PutCharTxBuf
  3682                           
  3683                           ;Wireless.c: 219: while (BusyTx());
  3684  00170C  D000               	goto	l6144
  3685  00170E                     l6144:
  3686  00170E  EC6C  F011         	call	_BusyTx	;wreg free
  3687  001712  0900               	iorlw	0
  3688  001714  A4D8               	btfss	status,2,c
  3689  001716  D7FB               	goto	l6144
  3690                           
  3691                           ;Wireless.c: 220: StartTx();
  3692  001718  ECD8  F011         	call	_StartTx	;wreg free
  3693  00171C  0012               	return		;funcret
  3694  00171E                     __end_of_SendDefaultPIDValues:
  3695                           	opt stack 0
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           indf2	equ	0xFDF
  3701                           postinc2	equ	0xFDE
  3702                           postdec2	equ	0xFDD
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function _SendCurrentPIDValues *****************
  3708 ;; Defined at:
  3709 ;;		line 243 in file "Wireless.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  Kp              2   24[BANK0 ] int 
  3712 ;;  Kd              2   26[BANK0 ] int 
  3713 ;;  Ki              2   28[BANK0 ] int 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3725 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        6 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    9
  3732 ;; This function calls:
  3733 ;;		_BusyTx
  3734 ;;		_FlushTxBuf
  3735 ;;		_PutCharTxBuf
  3736 ;;		_StartTx
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text18
  3743  00171E                     __ptext18:
  3744                           	opt stack 0
  3745  00171E                     _SendCurrentPIDValues:
  3746                           	opt stack 21
  3747                           
  3748                           ;Wireless.c: 244: while(BusyTx());
  3749                           
  3750                           ;incstack = 0
  3751  00171E  D000               	goto	l6160
  3752  001720                     l6160:
  3753  001720  EC6C  F011         	call	_BusyTx	;wreg free
  3754  001724  0900               	iorlw	0
  3755  001726  A4D8               	btfss	status,2,c
  3756  001728  D7FB               	goto	l6160
  3757                           
  3758                           ;Wireless.c: 245: FlushTxBuf();
  3759  00172A  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3760                           
  3761                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3762  00172E  0EAA               	movlw	170
  3763  001730  ECCA  F00D         	call	_PutCharTxBuf
  3764                           
  3765                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3766  001734  0E43               	movlw	67
  3767  001736  ECCA  F00D         	call	_PutCharTxBuf
  3768                           
  3769                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3770  00173A  0100               	movlb	0	; () banked
  3771  00173C  51D9               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3772  00173E  ECCA  F00D         	call	_PutCharTxBuf
  3773                           
  3774                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3775  001742  0100               	movlb	0	; () banked
  3776  001744  51D8               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3777  001746  ECCA  F00D         	call	_PutCharTxBuf
  3778                           
  3779                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3780  00174A  0100               	movlb	0	; () banked
  3781  00174C  51DB               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3782  00174E  ECCA  F00D         	call	_PutCharTxBuf
  3783                           
  3784                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3785  001752  0100               	movlb	0	; () banked
  3786  001754  51DA               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3787  001756  ECCA  F00D         	call	_PutCharTxBuf
  3788                           
  3789                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3790  00175A  0100               	movlb	0	; () banked
  3791  00175C  51DD               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3792  00175E  ECCA  F00D         	call	_PutCharTxBuf
  3793                           
  3794                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3795  001762  0100               	movlb	0	; () banked
  3796  001764  51DC               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3797  001766  ECCA  F00D         	call	_PutCharTxBuf
  3798                           
  3799                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3800  00176A  0E0D               	movlw	13
  3801  00176C  ECCA  F00D         	call	_PutCharTxBuf
  3802                           
  3803                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3804  001770  0E0A               	movlw	10
  3805  001772  ECCA  F00D         	call	_PutCharTxBuf
  3806                           
  3807                           ;Wireless.c: 259: while (BusyTx());
  3808  001776  D000               	goto	l6164
  3809  001778                     l6164:
  3810  001778  EC6C  F011         	call	_BusyTx	;wreg free
  3811  00177C  0900               	iorlw	0
  3812  00177E  A4D8               	btfss	status,2,c
  3813  001780  D7FB               	goto	l6164
  3814                           
  3815                           ;Wireless.c: 260: StartTx();
  3816  001782  ECD8  F011         	call	_StartTx	;wreg free
  3817  001786  0012               	return		;funcret
  3818  001788                     __end_of_SendCurrentPIDValues:
  3819                           	opt stack 0
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf2	equ	0xFDF
  3825                           postinc2	equ	0xFDE
  3826                           postdec2	equ	0xFDD
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           status	equ	0xFD8
  3830                           
  3831 ;; *************** function _SendBattVoltageInitial *****************
  3832 ;; Defined at:
  3833 ;;		line 265 in file "Wireless.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3836 ;;		 -> main@battery_voltage(2), 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;		None               void
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;Total ram usage:        4 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    9
  3855 ;; This function calls:
  3856 ;;		_BusyTx
  3857 ;;		_FlushTxBuf
  3858 ;;		_PutCharTxBuf
  3859 ;;		_StartTx
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text19
  3866  0017F2                     __ptext19:
  3867                           	opt stack 0
  3868  0017F2                     _SendBattVoltageInitial:
  3869                           	opt stack 21
  3870                           
  3871                           ;Wireless.c: 266: while(BusyTx());
  3872                           
  3873                           ;incstack = 0
  3874  0017F2  D000               	goto	l6170
  3875  0017F4                     l6170:
  3876  0017F4  EC6C  F011         	call	_BusyTx	;wreg free
  3877  0017F8  0900               	iorlw	0
  3878  0017FA  A4D8               	btfss	status,2,c
  3879  0017FC  D7FB               	goto	l6170
  3880                           
  3881                           ;Wireless.c: 267: FlushTxBuf();
  3882  0017FE  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  3883                           
  3884                           ;Wireless.c: 269: PutCharTxBuf(0xAA);
  3885  001802  0EAA               	movlw	170
  3886  001804  ECCA  F00D         	call	_PutCharTxBuf
  3887                           
  3888                           ;Wireless.c: 270: PutCharTxBuf(0x06);
  3889  001808  0E06               	movlw	6
  3890  00180A  ECCA  F00D         	call	_PutCharTxBuf
  3891                           
  3892                           ;Wireless.c: 272: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  3893  00180E  C0D8  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3894  001812  C0D9  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3895  001816  CFDE F0DA          	movff	postinc2,??_SendBattVoltageInitial
  3896  00181A  CFDD F0DB          	movff	postdec2,??_SendBattVoltageInitial+1
  3897  00181E  C0DB  F0DA         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  3898  001822  0100               	movlb	0	; () banked
  3899  001824  6BDB               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  3900  001826  0100               	movlb	0	; () banked
  3901  001828  51DA               	movf	??_SendBattVoltageInitial& (0+255),w,b
  3902  00182A  ECCA  F00D         	call	_PutCharTxBuf
  3903                           
  3904                           ;Wireless.c: 273: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  3905  00182E  C0D8  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3906  001832  C0D9  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3907  001836  50DF               	movf	indf2,w,c
  3908  001838  ECCA  F00D         	call	_PutCharTxBuf
  3909                           
  3910                           ;Wireless.c: 275: PutCharTxBuf('\r');
  3911  00183C  0E0D               	movlw	13
  3912  00183E  ECCA  F00D         	call	_PutCharTxBuf
  3913                           
  3914                           ;Wireless.c: 276: PutCharTxBuf('\n');
  3915  001842  0E0A               	movlw	10
  3916  001844  ECCA  F00D         	call	_PutCharTxBuf
  3917                           
  3918                           ;Wireless.c: 277: while (BusyTx());
  3919  001848  D000               	goto	l6174
  3920  00184A                     l6174:
  3921  00184A  EC6C  F011         	call	_BusyTx	;wreg free
  3922  00184E  0900               	iorlw	0
  3923  001850  A4D8               	btfss	status,2,c
  3924  001852  D7FB               	goto	l6174
  3925                           
  3926                           ;Wireless.c: 278: StartTx();
  3927  001854  ECD8  F011         	call	_StartTx	;wreg free
  3928  001858  0012               	return		;funcret
  3929  00185A                     __end_of_SendBattVoltageInitial:
  3930                           	opt stack 0
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           postinc0	equ	0xFEE
  3934                           wreg	equ	0xFE8
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           postdec2	equ	0xFDD
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _ResetMillis3 *****************
  3943 ;; Defined at:
  3944 ;;		line 50 in file "MillisecondTimer.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;		None               void
  3951 ;; Registers used:
  3952 ;;		wreg, status,2
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    7
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text20
  3973  002360                     __ptext20:
  3974                           	opt stack 0
  3975  002360                     _ResetMillis3:
  3976                           	opt stack 23
  3977                           
  3978                           ;MillisecondTimer.c: 52: millisecond_COUNT3 = 0;
  3979                           
  3980                           ;incstack = 0
  3981  002360  0E00               	movlw	0
  3982  002362  6E14               	movwf	_millisecond_COUNT3+1,c	;volatile
  3983  002364  0E00               	movlw	0
  3984  002366  6E13               	movwf	_millisecond_COUNT3,c	;volatile
  3985  002368  0012               	return		;funcret
  3986  00236A                     __end_of_ResetMillis3:
  3987                           	opt stack 0
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           postinc0	equ	0xFEE
  3991                           wreg	equ	0xFE8
  3992                           indf2	equ	0xFDF
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _ResetMillis1 *****************
  4000 ;; Defined at:
  4001 ;;		line 39 in file "MillisecondTimer.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;		None               void
  4008 ;; Registers used:
  4009 ;;		wreg, status,2
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    7
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text21
  4030  00236A                     __ptext21:
  4031                           	opt stack 0
  4032  00236A                     _ResetMillis1:
  4033                           	opt stack 23
  4034                           
  4035                           ;MillisecondTimer.c: 41: millisecond_COUNT1 = 0;
  4036                           
  4037                           ;incstack = 0
  4038  00236A  0E00               	movlw	0
  4039  00236C  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  4040  00236E  0E00               	movlw	0
  4041  002370  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  4042  002372  0012               	return		;funcret
  4043  002374                     __end_of_ResetMillis1:
  4044                           	opt stack 0
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           postinc0	equ	0xFEE
  4048                           wreg	equ	0xFE8
  4049                           indf2	equ	0xFDF
  4050                           postinc2	equ	0xFDE
  4051                           postdec2	equ	0xFDD
  4052                           fsr2h	equ	0xFDA
  4053                           fsr2l	equ	0xFD9
  4054                           status	equ	0xFD8
  4055                           
  4056 ;; *************** function _ResetMillis0 *****************
  4057 ;; Defined at:
  4058 ;;		line 33 in file "MillisecondTimer.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		wreg, status,2
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;Total ram usage:        0 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    7
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text22
  4087  002374                     __ptext22:
  4088                           	opt stack 0
  4089  002374                     _ResetMillis0:
  4090                           	opt stack 23
  4091                           
  4092                           ;MillisecondTimer.c: 35: millisecond_COUNT0 = 0;
  4093                           
  4094                           ;incstack = 0
  4095  002374  0E00               	movlw	0
  4096  002376  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  4097  002378  0E00               	movlw	0
  4098  00237A  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  4099  00237C  0012               	return		;funcret
  4100  00237E                     __end_of_ResetMillis0:
  4101                           	opt stack 0
  4102                           prodh	equ	0xFF4
  4103                           prodl	equ	0xFF3
  4104                           postinc0	equ	0xFEE
  4105                           wreg	equ	0xFE8
  4106                           indf2	equ	0xFDF
  4107                           postinc2	equ	0xFDE
  4108                           postdec2	equ	0xFDD
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function _ResetAccumulatedCurrent *****************
  4114 ;; Defined at:
  4115 ;;		line 103 in file "BatteryLib/ds2781.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;		None               void
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    9
  4136 ;; This function calls:
  4137 ;;		_OWReset
  4138 ;;		_OWWriteByte
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text23
  4145  001F1A                     __ptext23:
  4146                           	opt stack 0
  4147  001F1A                     _ResetAccumulatedCurrent:
  4148                           	opt stack 21
  4149                           
  4150                           ;ds2781.c: 105: if( OWReset() == TRUE)
  4151                           
  4152                           ;incstack = 0
  4153  001F1A  EC83  F00E         	call	_OWReset	;wreg free
  4154  001F1E  06E8               	decf	wreg,f,c
  4155  001F20  A4D8               	btfss	status,2,c
  4156  001F22  D010               	goto	l487
  4157                           
  4158                           ;ds2781.c: 106: {
  4159                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  4160  001F24  0ECC               	movlw	204
  4161  001F26  ECA3  F00F         	call	_OWWriteByte
  4162                           
  4163                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  4164  001F2A  0E6C               	movlw	108
  4165  001F2C  ECA3  F00F         	call	_OWWriteByte
  4166                           
  4167                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  4168  001F30  0E10               	movlw	16
  4169  001F32  ECA3  F00F         	call	_OWWriteByte
  4170                           
  4171                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  4172  001F36  0E00               	movlw	0
  4173  001F38  ECA3  F00F         	call	_OWWriteByte
  4174                           
  4175                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  4176  001F3C  0E00               	movlw	0
  4177  001F3E  ECA3  F00F         	call	_OWWriteByte
  4178  001F42  D000               	goto	l487
  4179  001F44                     l487:
  4180  001F44  0012               	return		;funcret
  4181  001F46                     __end_of_ResetAccumulatedCurrent:
  4182                           	opt stack 0
  4183                           prodh	equ	0xFF4
  4184                           prodl	equ	0xFF3
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           postdec2	equ	0xFDD
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _ReadVoltage *****************
  4195 ;; Defined at:
  4196 ;;		line 33 in file "BatteryLib/ds2781.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  result          2   24[BANK0 ] unsigned short 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2   19[BANK0 ] unsigned short 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        7 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    9
  4217 ;; This function calls:
  4218 ;;		_OWReadByte
  4219 ;;		_OWReset
  4220 ;;		_OWWriteByte
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text24
  4227  001788                     __ptext24:
  4228                           	opt stack 0
  4229  001788                     _ReadVoltage:
  4230                           	opt stack 21
  4231                           
  4232                           ;ds2781.c: 35: WORD result = 0;
  4233                           
  4234                           ;incstack = 0
  4235  001788  0E00               	movlw	0
  4236  00178A  0100               	movlb	0	; () banked
  4237  00178C  6FD9               	movwf	(ReadVoltage@result+1)& (0+255),b
  4238  00178E  0E00               	movlw	0
  4239  001790  6FD8               	movwf	ReadVoltage@result& (0+255),b
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4243  001792  EC83  F00E         	call	_OWReset	;wreg free
  4244  001796  06E8               	decf	wreg,f,c
  4245  001798  A4D8               	btfss	status,2,c
  4246  00179A  D017               	goto	l6204
  4247                           
  4248                           ;ds2781.c: 37: {
  4249                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4250  00179C  0ECC               	movlw	204
  4251  00179E  ECA3  F00F         	call	_OWWriteByte
  4252                           
  4253                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4254  0017A2  0E69               	movlw	105
  4255  0017A4  ECA3  F00F         	call	_OWWriteByte
  4256                           
  4257                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4258  0017A8  0E0C               	movlw	12
  4259  0017AA  ECA3  F00F         	call	_OWWriteByte
  4260                           
  4261                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4262  0017AE  EC9F  F00E         	call	_OWReadByte	;wreg free
  4263  0017B2  0100               	movlb	0	; () banked
  4264  0017B4  6FD9               	movwf	(ReadVoltage@result+1)& (0+255),b
  4265  0017B6  6BD8               	clrf	ReadVoltage@result& (0+255),b
  4266                           
  4267                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4268  0017B8  EC9F  F00E         	call	_OWReadByte	;wreg free
  4269  0017BC  0100               	movlb	0	; () banked
  4270  0017BE  6FD5               	movwf	??_ReadVoltage& (0+255),b
  4271  0017C0  0100               	movlb	0	; () banked
  4272  0017C2  51D5               	movf	??_ReadVoltage& (0+255),w,b
  4273  0017C4  0100               	movlb	0	; () banked
  4274  0017C6  13D8               	iorwf	ReadVoltage@result& (0+255),f,b
  4275  0017C8  D000               	goto	l6204
  4276  0017CA                     l6204:
  4277                           
  4278                           ;ds2781.c: 43: }
  4279                           ;ds2781.c: 44: return (result >> 5);
  4280  0017CA  C0D8  F0D5         	movff	ReadVoltage@result,??_ReadVoltage
  4281  0017CE  C0D9  F0D6         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4282  0017D2  0E05               	movlw	5
  4283  0017D4  0100               	movlb	0	; () banked
  4284  0017D6  6FD7               	movwf	(??_ReadVoltage+2)& (0+255),b
  4285  0017D8                     u5275:
  4286  0017D8  0100               	movlb	0	; () banked
  4287  0017DA  90D8               	bcf	status,0,c
  4288  0017DC  33D6               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4289  0017DE  33D5               	rrcf	??_ReadVoltage& (0+255),f,b
  4290  0017E0  0100               	movlb	0	; () banked
  4291  0017E2  2FD7               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4292  0017E4  D7F9               	goto	u5275
  4293  0017E6  C0D5  F0D3         	movff	??_ReadVoltage,?_ReadVoltage
  4294  0017EA  C0D6  F0D4         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4295  0017EE  D000               	goto	l475
  4296  0017F0                     l475:
  4297                           
  4298                           ; BSR set to: 0
  4299  0017F0  0012               	return		;funcret
  4300  0017F2                     __end_of_ReadVoltage:
  4301                           	opt stack 0
  4302                           prodh	equ	0xFF4
  4303                           prodl	equ	0xFF3
  4304                           postinc0	equ	0xFEE
  4305                           wreg	equ	0xFE8
  4306                           indf2	equ	0xFDF
  4307                           postinc2	equ	0xFDE
  4308                           postdec2	equ	0xFDD
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _OWWriteByte *****************
  4314 ;; Defined at:
  4315 ;;		line 143 in file "BatteryLib/OneWire.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  byte            1    wreg     unsigned char 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  byte            1   17[BANK0 ] unsigned char 
  4320 ;;  i               1   18[BANK0 ] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;		None               void
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;Total ram usage:        2 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    8
  4337 ;; This function calls:
  4338 ;;		_OWWriteBit
  4339 ;; This function is called by:
  4340 ;;		_ReadVoltage
  4341 ;;		_ResetAccumulatedCurrent
  4342 ;;		_ReadCurrent
  4343 ;;		_ReadAccumulatedCurrent
  4344 ;;		_ReadNetAddress
  4345 ;;		_ReadTemperature
  4346 ;;		_ReadCurrentOffset
  4347 ;;		_WriteCurrentOffset
  4348 ;;		_AdjustCurrentOffset
  4349 ;;		_UpdateControlRegister
  4350 ;;		_ReadRAM
  4351 ;;		_WriteRAM
  4352 ;;		_CopyEEPROM
  4353 ;;		_RecallEEPROM
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text25
  4358  001F46                     __ptext25:
  4359                           	opt stack 0
  4360  001F46                     _OWWriteByte:
  4361                           	opt stack 21
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;incstack = 0
  4365                           ;OWWriteByte@byte stored from wreg
  4366  001F46  0100               	movlb	0	; () banked
  4367  001F48  6FD1               	movwf	OWWriteByte@byte& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;OneWire.c: 145: BYTE i;
  4371                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4372  001F4A  0E00               	movlw	0
  4373  001F4C  0100               	movlb	0	; () banked
  4374  001F4E  6FD2               	movwf	OWWriteByte@i& (0+255),b
  4375  001F50                     l5806:
  4376                           
  4377                           ; BSR set to: 0
  4378  001F50  0E07               	movlw	7
  4379  001F52  0100               	movlb	0	; () banked
  4380  001F54  65D2               	cpfsgt	OWWriteByte@i& (0+255),b
  4381  001F56  D001               	goto	l5810
  4382                           
  4383                           ; BSR set to: 0
  4384  001F58  D00B               	goto	l562
  4385  001F5A                     l5810:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;OneWire.c: 148: {
  4389                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4390  001F5A  0100               	movlb	0	; () banked
  4391  001F5C  51D1               	movf	OWWriteByte@byte& (0+255),w,b
  4392  001F5E  0B01               	andlw	1
  4393  001F60  EC49  F00E         	call	_OWWriteBit
  4394                           
  4395                           ;OneWire.c: 150: byte >>= 1;
  4396  001F64  0100               	movlb	0	; () banked
  4397  001F66  90D8               	bcf	status,0,c
  4398  001F68  33D1               	rrcf	OWWriteByte@byte& (0+255),f,b
  4399                           
  4400                           ; BSR set to: 0
  4401  001F6A  0100               	movlb	0	; () banked
  4402  001F6C  2BD2               	incf	OWWriteByte@i& (0+255),f,b
  4403  001F6E  D7F0               	goto	l5806
  4404  001F70                     l562:
  4405                           
  4406                           ; BSR set to: 0
  4407  001F70  0012               	return		;funcret
  4408  001F72                     __end_of_OWWriteByte:
  4409                           	opt stack 0
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           postinc0	equ	0xFEE
  4413                           wreg	equ	0xFE8
  4414                           indf2	equ	0xFDF
  4415                           postinc2	equ	0xFDE
  4416                           postdec2	equ	0xFDD
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function _OWWriteBit *****************
  4422 ;; Defined at:
  4423 ;;		line 72 in file "BatteryLib/OneWire.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  b               1    wreg     unsigned char 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  b               1   16[BANK0 ] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;		None               void
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;Total ram usage:        1 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    7
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_OWWriteByte
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text26
  4452  001C92                     __ptext26:
  4453                           	opt stack 0
  4454  001C92                     _OWWriteBit:
  4455                           	opt stack 21
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;incstack = 0
  4459                           ;OWWriteBit@b stored from wreg
  4460  001C92  0100               	movlb	0	; () banked
  4461  001C94  6FD0               	movwf	OWWriteBit@b& (0+255),b
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;OneWire.c: 74: if (b)
  4465  001C96  0100               	movlb	0	; () banked
  4466  001C98  51D0               	movf	OWWriteBit@b& (0+255),w,b
  4467  001C9A  0100               	movlb	0	; () banked
  4468  001C9C  B4D8               	btfsc	status,2,c
  4469  001C9E  D00A               	goto	l552
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;OneWire.c: 75: {
  4473                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4474  001CA0  9690               	bcf	3984,3,c	;volatile
  4475                           
  4476                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4477  001CA2  9699               	bcf	3993,3,c	;volatile
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4481  001CA4  0E04               	movlw	4
  4482  001CA6                     u6097:
  4483  001CA6  2EE8               	decfsz	wreg,f,c
  4484  001CA8  D7FE               	goto	u6097
  4485                           
  4486                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4487  001CAA  8699               	bsf	3993,3,c	;volatile
  4488                           
  4489                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4490  001CAC  0E35               	movlw	53
  4491  001CAE                     u6107:
  4492  001CAE  2EE8               	decfsz	wreg,f,c
  4493  001CB0  D7FE               	goto	u6107
  4494  001CB2  D009               	goto	L2
  4495  001CB4                     l552:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;OneWire.c: 87: else
  4499                           ;OneWire.c: 88: {
  4500                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4501  001CB4  9690               	bcf	3984,3,c	;volatile
  4502                           
  4503                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4504  001CB6  9699               	bcf	3993,3,c	;volatile
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4508  001CB8  0E32               	movlw	50
  4509  001CBA                     u6117:
  4510  001CBA  2EE8               	decfsz	wreg,f,c
  4511  001CBC  D7FE               	goto	u6117
  4512                           
  4513                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4514  001CBE  8699               	bsf	3993,3,c	;volatile
  4515                           
  4516                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4517  001CC0  0E08               	movlw	8
  4518  001CC2                     u6127:
  4519  001CC2  2EE8               	decfsz	wreg,f,c
  4520  001CC4  D7FE               	goto	u6127
  4521  001CC6                     L2:
  4522  001CC6  F000               	nop	
  4523  001CC8  D000               	goto	l554
  4524  001CCA                     l554:
  4525  001CCA  0012               	return		;funcret
  4526  001CCC                     __end_of_OWWriteBit:
  4527                           	opt stack 0
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           postinc0	equ	0xFEE
  4531                           wreg	equ	0xFE8
  4532                           indf2	equ	0xFDF
  4533                           postinc2	equ	0xFDE
  4534                           postdec2	equ	0xFDD
  4535                           fsr2h	equ	0xFDA
  4536                           fsr2l	equ	0xFD9
  4537                           status	equ	0xFD8
  4538                           
  4539 ;; *************** function _OWReset *****************
  4540 ;; Defined at:
  4541 ;;		line 41 in file "BatteryLib/OneWire.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  result          1   16[BANK0 ] enum E6350
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      enum E6350
  4548 ;; Registers used:
  4549 ;;		wreg, status,2
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;Total ram usage:        1 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    7
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_ReadVoltage
  4566 ;;		_ResetAccumulatedCurrent
  4567 ;;		_ReadCurrent
  4568 ;;		_ReadAccumulatedCurrent
  4569 ;;		_ReadNetAddress
  4570 ;;		_ReadTemperature
  4571 ;;		_ReadCurrentOffset
  4572 ;;		_WriteCurrentOffset
  4573 ;;		_AdjustCurrentOffset
  4574 ;;		_UpdateControlRegister
  4575 ;;		_ReadRAM
  4576 ;;		_WriteRAM
  4577 ;;		_CopyEEPROM
  4578 ;;		_RecallEEPROM
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text27
  4583  001D06                     __ptext27:
  4584                           	opt stack 0
  4585  001D06                     _OWReset:
  4586                           	opt stack 22
  4587                           
  4588                           ;OneWire.c: 43: BOOL result = FALSE;
  4589                           
  4590                           ;incstack = 0
  4591  001D06  0E00               	movlw	0
  4592  001D08  0100               	movlb	0	; () banked
  4593  001D0A  6FD0               	movwf	OWReset@result& (0+255),b
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  4597  001D0C  9690               	bcf	3984,3,c	;volatile
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  4601  001D0E  9699               	bcf	3993,3,c	;volatile
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  4605  001D10  0EF0               	movlw	240
  4606  001D12                     u6137:
  4607  001D12  D000               	nop2	
  4608  001D14  2EE8               	decfsz	wreg,f,c
  4609  001D16  D7FD               	goto	u6137
  4610                           
  4611                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  4612  001D18  8699               	bsf	3993,3,c	;volatile
  4613                           
  4614                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  4615  001D1A  0E38               	movlw	56
  4616  001D1C                     u6147:
  4617  001D1C  2EE8               	decfsz	wreg,f,c
  4618  001D1E  D7FE               	goto	u6147
  4619  001D20  D000               	nop2		;nop
  4620                           
  4621                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  4622  001D22  B690               	btfsc	3984,3,c	;volatile
  4623  001D24  D004               	goto	l5798
  4624                           
  4625                           ;OneWire.c: 54: {
  4626                           ;OneWire.c: 55: result = TRUE;
  4627  001D26  0E01               	movlw	1
  4628  001D28  0100               	movlb	0	; () banked
  4629  001D2A  6FD0               	movwf	OWReset@result& (0+255),b
  4630  001D2C  D000               	goto	l5798
  4631  001D2E                     l5798:
  4632                           
  4633                           ;OneWire.c: 56: }
  4634                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  4635  001D2E  0EFD               	movlw	253
  4636  001D30                     u6157:
  4637  001D30  F000               	nop	
  4638  001D32  2EE8               	decfsz	wreg,f,c
  4639  001D34  D7FD               	goto	u6157
  4640                           
  4641                           ;OneWire.c: 59: return result;
  4642  001D36  0100               	movlb	0	; () banked
  4643  001D38  51D0               	movf	OWReset@result& (0+255),w,b
  4644  001D3A  D000               	goto	l549
  4645  001D3C                     l549:
  4646                           
  4647                           ; BSR set to: 0
  4648  001D3C  0012               	return		;funcret
  4649  001D3E                     __end_of_OWReset:
  4650                           	opt stack 0
  4651                           prodh	equ	0xFF4
  4652                           prodl	equ	0xFF3
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           indf2	equ	0xFDF
  4656                           postinc2	equ	0xFDE
  4657                           postdec2	equ	0xFDD
  4658                           fsr2h	equ	0xFDA
  4659                           fsr2l	equ	0xFD9
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _OWReadByte *****************
  4663 ;; Defined at:
  4664 ;;		line 163 in file "BatteryLib/OneWire.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  i               1   18[BANK0 ] unsigned char 
  4669 ;;  result          1   17[BANK0 ] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      unsigned char 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        2 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    8
  4686 ;; This function calls:
  4687 ;;		_OWReadBit
  4688 ;; This function is called by:
  4689 ;;		_ReadVoltage
  4690 ;;		_ReadCurrent
  4691 ;;		_ReadAccumulatedCurrent
  4692 ;;		_ReadTemperature
  4693 ;;		_ReadCurrentOffset
  4694 ;;		_AdjustCurrentOffset
  4695 ;;		_ReadRAM
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text28
  4700  001D3E                     __ptext28:
  4701                           	opt stack 0
  4702  001D3E                     _OWReadByte:
  4703                           	opt stack 21
  4704                           
  4705                           ;OneWire.c: 165: BYTE i, result=0;
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;incstack = 0
  4709  001D3E  0E00               	movlw	0
  4710  001D40  0100               	movlb	0	; () banked
  4711  001D42  6FD1               	movwf	OWReadByte@result& (0+255),b
  4712                           
  4713                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  4714  001D44  0E00               	movlw	0
  4715  001D46  0100               	movlb	0	; () banked
  4716  001D48  6FD2               	movwf	OWReadByte@i& (0+255),b
  4717  001D4A                     l5820:
  4718                           
  4719                           ; BSR set to: 0
  4720  001D4A  0E07               	movlw	7
  4721  001D4C  0100               	movlb	0	; () banked
  4722  001D4E  65D2               	cpfsgt	OWReadByte@i& (0+255),b
  4723  001D50  D001               	goto	l5824
  4724                           
  4725                           ; BSR set to: 0
  4726  001D52  D00D               	goto	l5832
  4727  001D54                     l5824:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;OneWire.c: 168: {
  4731                           ;OneWire.c: 169: result >>= 1;
  4732  001D54  0100               	movlb	0	; () banked
  4733  001D56  90D8               	bcf	status,0,c
  4734  001D58  33D1               	rrcf	OWReadByte@result& (0+255),f,b
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;OneWire.c: 171: if (OWReadBit())
  4738  001D5A  EC75  F00F         	call	_OWReadBit	;wreg free
  4739  001D5E  0900               	iorlw	0
  4740  001D60  B4D8               	btfsc	status,2,c
  4741  001D62  D002               	goto	l567
  4742                           
  4743                           ;OneWire.c: 172: result |= 0x80;
  4744  001D64  0100               	movlb	0	; () banked
  4745  001D66  8FD1               	bsf	OWReadByte@result& (0+255),7,b
  4746  001D68                     l567:
  4747  001D68  0100               	movlb	0	; () banked
  4748  001D6A  2BD2               	incf	OWReadByte@i& (0+255),f,b
  4749  001D6C  D7EE               	goto	l5820
  4750  001D6E                     l5832:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;OneWire.c: 173: }
  4754                           ;OneWire.c: 174: return result;
  4755  001D6E  0100               	movlb	0	; () banked
  4756  001D70  51D1               	movf	OWReadByte@result& (0+255),w,b
  4757  001D72  D000               	goto	l568
  4758  001D74                     l568:
  4759                           
  4760                           ; BSR set to: 0
  4761  001D74  0012               	return		;funcret
  4762  001D76                     __end_of_OWReadByte:
  4763                           	opt stack 0
  4764                           prodh	equ	0xFF4
  4765                           prodl	equ	0xFF3
  4766                           postinc0	equ	0xFEE
  4767                           wreg	equ	0xFE8
  4768                           indf2	equ	0xFDF
  4769                           postinc2	equ	0xFDE
  4770                           postdec2	equ	0xFDD
  4771                           fsr2h	equ	0xFDA
  4772                           fsr2l	equ	0xFD9
  4773                           status	equ	0xFD8
  4774                           
  4775 ;; *************** function _OWReadBit *****************
  4776 ;; Defined at:
  4777 ;;		line 112 in file "BatteryLib/OneWire.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;		None
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  result          1   16[BANK0 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      unsigned char 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;Total ram usage:        1 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    7
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_OWReadByte
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text29
  4806  001EEA                     __ptext29:
  4807                           	opt stack 0
  4808  001EEA                     _OWReadBit:
  4809                           	opt stack 21
  4810                           
  4811                           ;OneWire.c: 114: BYTE result;
  4812                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;incstack = 0
  4816  001EEA  9690               	bcf	3984,3,c	;volatile
  4817                           
  4818                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  4819  001EEC  9699               	bcf	3993,3,c	;volatile
  4820                           
  4821                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4822  001EEE  0E04               	movlw	4
  4823  001EF0                     u6167:
  4824  001EF0  2EE8               	decfsz	wreg,f,c
  4825  001EF2  D7FE               	goto	u6167
  4826                           
  4827                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  4828  001EF4  8699               	bsf	3993,3,c	;volatile
  4829                           
  4830                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4831  001EF6  0E08               	movlw	8
  4832  001EF8                     u6177:
  4833  001EF8  2EE8               	decfsz	wreg,f,c
  4834  001EFA  D7FE               	goto	u6177
  4835  001EFC  F000               	nop	
  4836                           
  4837                           ;OneWire.c: 127: result = PORTHbits.RH3;
  4838  001EFE  0E00               	movlw	0
  4839  001F00  B687               	btfsc	3975,3,c	;volatile
  4840  001F02  0E01               	movlw	1
  4841  001F04  0100               	movlb	0	; () banked
  4842  001F06  6FD0               	movwf	OWReadBit@result& (0+255),b
  4843                           
  4844                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  4845  001F08  0E2D               	movlw	45
  4846  001F0A                     u6187:
  4847  001F0A  2EE8               	decfsz	wreg,f,c
  4848  001F0C  D7FE               	goto	u6187
  4849  001F0E  D000               	nop2		;nop
  4850                           
  4851                           ;OneWire.c: 131: return result & 0x01;
  4852  001F10  0100               	movlb	0	; () banked
  4853  001F12  51D0               	movf	OWReadBit@result& (0+255),w,b
  4854  001F14  0B01               	andlw	1
  4855  001F16  D000               	goto	l557
  4856  001F18                     l557:
  4857                           
  4858                           ; BSR set to: 0
  4859  001F18  0012               	return		;funcret
  4860  001F1A                     __end_of_OWReadBit:
  4861                           	opt stack 0
  4862                           prodh	equ	0xFF4
  4863                           prodl	equ	0xFF3
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           postdec2	equ	0xFDD
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _ReadMillis1 *****************
  4874 ;; Defined at:
  4875 ;;		line 13 in file "MillisecondTimer.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  2   16[BANK0 ] unsigned int 
  4882 ;; Registers used:
  4883 ;;		None
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;Total ram usage:        2 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    7
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text30
  4904  00237E                     __ptext30:
  4905                           	opt stack 0
  4906  00237E                     _ReadMillis1:
  4907                           	opt stack 23
  4908                           
  4909                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;incstack = 0
  4913  00237E  C00F  F0D0         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  4914  002382  C010  F0D1         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  4915  002386  0012               	return		;funcret
  4916  002388                     __end_of_ReadMillis1:
  4917                           	opt stack 0
  4918                           prodh	equ	0xFF4
  4919                           prodl	equ	0xFF3
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _ReadMillis0 *****************
  4930 ;; Defined at:
  4931 ;;		line 7 in file "MillisecondTimer.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  2   16[BANK0 ] unsigned int 
  4938 ;; Registers used:
  4939 ;;		None
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;Total ram usage:        2 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    7
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text31
  4960  002388                     __ptext31:
  4961                           	opt stack 0
  4962  002388                     _ReadMillis0:
  4963                           	opt stack 23
  4964                           
  4965                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  4966                           
  4967                           ;incstack = 0
  4968  002388  C00D  F0D0         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  4969  00238C  C00E  F0D1         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  4970  002390  0012               	return		;funcret
  4971  002392                     __end_of_ReadMillis0:
  4972                           	opt stack 0
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           indf2	equ	0xFDF
  4978                           postinc2	equ	0xFDE
  4979                           postdec2	equ	0xFDD
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _ReadEchoLength *****************
  4985 ;; Defined at:
  4986 ;;		line 68 in file "Ultrasound.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2   16[BANK0 ] unsigned int 
  4993 ;; Registers used:
  4994 ;;		None
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;Total ram usage:        2 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    7
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text32
  5015  002392                     __ptext32:
  5016                           	opt stack 0
  5017  002392                     _ReadEchoLength:
  5018                           	opt stack 23
  5019                           
  5020                           ;Ultrasound.c: 70: return (echo_time);
  5021                           
  5022                           ;incstack = 0
  5023  002392  C00B  F0D0         	movff	_echo_time,?_ReadEchoLength	;volatile
  5024  002396  C00C  F0D1         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  5025  00239A  0012               	return		;funcret
  5026  00239C                     __end_of_ReadEchoLength:
  5027                           	opt stack 0
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           postinc0	equ	0xFEE
  5031                           wreg	equ	0xFE8
  5032                           indf2	equ	0xFDF
  5033                           postinc2	equ	0xFDE
  5034                           postdec2	equ	0xFDD
  5035                           fsr2h	equ	0xFDA
  5036                           fsr2l	equ	0xFD9
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function _LoadPIDValues *****************
  5040 ;; Defined at:
  5041 ;;		line 588 in file "FastBuggy17_Main_Code_TUNING.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;		None               void
  5048 ;; Registers used:
  5049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:   11
  5062 ;; This function calls:
  5063 ;;		_PB1pressed
  5064 ;;		_PB2pressed
  5065 ;;		_ReadCharEEPROM
  5066 ;;		_ReadIntEEPROM
  5067 ;;		_SendStatus
  5068 ;;		_SetPIDValues
  5069 ;;		_WriteCharEEPROM
  5070 ;;		_WriteIntEEPROM
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text33
  5077  000B70                     __ptext33:
  5078                           	opt stack 0
  5079  000B70                     _LoadPIDValues:
  5080                           	opt stack 19
  5081                           
  5082                           ;FastBuggy17_Main_Code_TUNING.c: 589: SendStatus(0x07);
  5083                           
  5084                           ;incstack = 0
  5085  000B70  0E07               	movlw	7
  5086  000B72  EC66  F00E         	call	_SendStatus
  5087  000B76  D000               	goto	l6324
  5088  000B78                     l6324:
  5089                           
  5090                           ;FastBuggy17_Main_Code_TUNING.c: 592: if(PB1pressed() == 1) {
  5091  000B78  ECBD  F00C         	call	_PB1pressed	;wreg free
  5092  000B7C  06E8               	decf	wreg,f,c
  5093  000B7E  A4D8               	btfss	status,2,c
  5094  000B80  D03C               	goto	l6338
  5095                           
  5096                           ;FastBuggy17_Main_Code_TUNING.c: 593: PID_Kp = 20;
  5097  000B82  0E00               	movlw	0
  5098  000B84  0100               	movlb	0	; () banked
  5099  000B86  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5100  000B88  0E14               	movlw	20
  5101  000B8A  6F96               	movwf	_PID_Kp& (0+255),b
  5102                           
  5103                           ;FastBuggy17_Main_Code_TUNING.c: 594: PID_Kd = 0;
  5104  000B8C  0E00               	movlw	0
  5105  000B8E  0100               	movlb	0	; () banked
  5106  000B90  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5107  000B92  0E00               	movlw	0
  5108  000B94  6F92               	movwf	_PID_Kd& (0+255),b
  5109                           
  5110                           ;FastBuggy17_Main_Code_TUNING.c: 595: PID_Ki = 0;
  5111  000B96  0E00               	movlw	0
  5112  000B98  0100               	movlb	0	; () banked
  5113  000B9A  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5114  000B9C  0E00               	movlw	0
  5115  000B9E  6F94               	movwf	_PID_Ki& (0+255),b
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;FastBuggy17_Main_Code_TUNING.c: 596: WriteIntEEPROM(0x0006, PID_Kp);
  5119  000BA0  0E00               	movlw	0
  5120  000BA2  0100               	movlb	0	; () banked
  5121  000BA4  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5122  000BA6  0E06               	movlw	6
  5123  000BA8  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  5124  000BAA  C096  F0D5         	movff	_PID_Kp,WriteIntEEPROM@data
  5125  000BAE  C097  F0D6         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5126  000BB2  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  5127                           
  5128                           ;FastBuggy17_Main_Code_TUNING.c: 597: WriteIntEEPROM(0x0009, PID_Kd);
  5129  000BB6  0E00               	movlw	0
  5130  000BB8  0100               	movlb	0	; () banked
  5131  000BBA  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5132  000BBC  0E09               	movlw	9
  5133  000BBE  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  5134  000BC0  C092  F0D5         	movff	_PID_Kd,WriteIntEEPROM@data
  5135  000BC4  C093  F0D6         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5136  000BC8  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  5137                           
  5138                           ;FastBuggy17_Main_Code_TUNING.c: 598: WriteIntEEPROM(0x000C, PID_Ki);
  5139  000BCC  0E00               	movlw	0
  5140  000BCE  0100               	movlb	0	; () banked
  5141  000BD0  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5142  000BD2  0E0C               	movlw	12
  5143  000BD4  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  5144  000BD6  C094  F0D5         	movff	_PID_Ki,WriteIntEEPROM@data
  5145  000BDA  C095  F0D6         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5146  000BDE  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  5147                           
  5148                           ;FastBuggy17_Main_Code_TUNING.c: 600: WriteCharEEPROM(0x0005, 1);
  5149  000BE2  0E00               	movlw	0
  5150  000BE4  0100               	movlb	0	; () banked
  5151  000BE6  6FD4               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5152  000BE8  0E05               	movlw	5
  5153  000BEA  6FD3               	movwf	WriteCharEEPROM@address& (0+255),b
  5154  000BEC  0E01               	movlw	1
  5155  000BEE  0100               	movlb	0	; () banked
  5156  000BF0  6FD5               	movwf	WriteCharEEPROM@data& (0+255),b
  5157  000BF2  EC2E  F011         	call	_WriteCharEEPROM	;wreg free
  5158                           
  5159                           ;FastBuggy17_Main_Code_TUNING.c: 601: break;
  5160  000BF6  D036               	goto	l941
  5161                           
  5162                           ;FastBuggy17_Main_Code_TUNING.c: 602: }
  5163  000BF8  D7BF               	goto	l6324
  5164  000BFA                     l6338:
  5165                           
  5166                           ;FastBuggy17_Main_Code_TUNING.c: 603: else if(PB2pressed() == 1) {
  5167  000BFA  EC5F  F00C         	call	_PB2pressed	;wreg free
  5168  000BFE  06E8               	decf	wreg,f,c
  5169  000C00  A4D8               	btfss	status,2,c
  5170  000C02  D7BA               	goto	l6324
  5171                           
  5172                           ;FastBuggy17_Main_Code_TUNING.c: 604: if(ReadCharEEPROM(0x0005) == 0xFF) {
  5173  000C04  0E00               	movlw	0
  5174  000C06  0100               	movlb	0	; () banked
  5175  000C08  6FD3               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5176  000C0A  0E05               	movlw	5
  5177  000C0C  6FD2               	movwf	ReadCharEEPROM@address& (0+255),b
  5178  000C0E  EC64  F011         	call	_ReadCharEEPROM	;wreg free
  5179  000C12  0AFF               	xorlw	255
  5180  000C14  A4D8               	btfss	status,2,c
  5181  000C16  D003               	goto	l6344
  5182                           
  5183                           ;FastBuggy17_Main_Code_TUNING.c: 605: SetPIDValues();
  5184  000C18  EC9B  F004         	call	_SetPIDValues	;wreg free
  5185                           
  5186                           ;FastBuggy17_Main_Code_TUNING.c: 606: }
  5187  000C1C  D023               	goto	l941
  5188  000C1E                     l6344:
  5189                           
  5190                           ;FastBuggy17_Main_Code_TUNING.c: 607: else {
  5191                           ;FastBuggy17_Main_Code_TUNING.c: 608: PID_Kp = ReadIntEEPROM(0x0006);
  5192  000C1E  0E00               	movlw	0
  5193  000C20  0100               	movlb	0	; () banked
  5194  000C22  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5195  000C24  0E06               	movlw	6
  5196  000C26  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  5197  000C28  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  5198  000C2C  C0D2  F096         	movff	?_ReadIntEEPROM,_PID_Kp
  5199  000C30  C0D3  F097         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  5200                           
  5201                           ;FastBuggy17_Main_Code_TUNING.c: 609: PID_Kd = ReadIntEEPROM(0x0009);
  5202  000C34  0E00               	movlw	0
  5203  000C36  0100               	movlb	0	; () banked
  5204  000C38  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5205  000C3A  0E09               	movlw	9
  5206  000C3C  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  5207  000C3E  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  5208  000C42  C0D2  F092         	movff	?_ReadIntEEPROM,_PID_Kd
  5209  000C46  C0D3  F093         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  5210                           
  5211                           ;FastBuggy17_Main_Code_TUNING.c: 610: PID_Ki = ReadIntEEPROM(0x000C);
  5212  000C4A  0E00               	movlw	0
  5213  000C4C  0100               	movlb	0	; () banked
  5214  000C4E  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5215  000C50  0E0C               	movlw	12
  5216  000C52  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  5217  000C54  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  5218  000C58  C0D2  F094         	movff	?_ReadIntEEPROM,_PID_Ki
  5219  000C5C  C0D3  F095         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5220                           
  5221                           ;FastBuggy17_Main_Code_TUNING.c: 611: }
  5222                           ;FastBuggy17_Main_Code_TUNING.c: 612: break;
  5223  000C60  D001               	goto	l941
  5224  000C62  D78A               	goto	l6324
  5225  000C64                     l941:
  5226  000C64  0012               	return		;funcret
  5227  000C66                     __end_of_LoadPIDValues:
  5228                           	opt stack 0
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           postinc0	equ	0xFEE
  5232                           wreg	equ	0xFE8
  5233                           indf2	equ	0xFDF
  5234                           postinc2	equ	0xFDE
  5235                           postdec2	equ	0xFDD
  5236                           fsr2h	equ	0xFDA
  5237                           fsr2l	equ	0xFD9
  5238                           status	equ	0xFD8
  5239                           
  5240 ;; *************** function _SetPIDValues *****************
  5241 ;; Defined at:
  5242 ;;		line 556 in file "FastBuggy17_Main_Code_TUNING.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  char_index      1   28[BANK0 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;		None               void
  5249 ;; Registers used:
  5250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;Total ram usage:        4 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:   10
  5263 ;; This function calls:
  5264 ;;		_FlushRxBuf
  5265 ;;		_GetCharRxBuf
  5266 ;;		_PutCharRxBuf
  5267 ;;		_Read1USART
  5268 ;;		_SendStatus
  5269 ;;		_WriteCharEEPROM
  5270 ;;		_WriteIntEEPROM
  5271 ;; This function is called by:
  5272 ;;		_LoadPIDValues
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text34
  5278  000936                     __ptext34:
  5279                           	opt stack 0
  5280  000936                     _SetPIDValues:
  5281                           	opt stack 20
  5282                           
  5283                           ;FastBuggy17_Main_Code_TUNING.c: 557: SendStatus(0x08);
  5284                           
  5285                           ;incstack = 0
  5286  000936  0E08               	movlw	8
  5287  000938  EC66  F00E         	call	_SendStatus
  5288                           
  5289                           ;FastBuggy17_Main_Code_TUNING.c: 559: unsigned char char_index;
  5290                           ;FastBuggy17_Main_Code_TUNING.c: 561: FlushRxBuf();
  5291  00093C  EC0E  F00F         	call	_FlushRxBuf	;wreg free
  5292                           
  5293                           ;FastBuggy17_Main_Code_TUNING.c: 563: for(char_index = 0; char_index <= 8; char_index++)
      +                           {
  5294  000940  0E00               	movlw	0
  5295  000942  0100               	movlb	0	; () banked
  5296  000944  6FDC               	movwf	SetPIDValues@char_index& (0+255),b
  5297  000946                     l5986:
  5298                           
  5299                           ; BSR set to: 0
  5300  000946  0E08               	movlw	8
  5301  000948  0100               	movlb	0	; () banked
  5302  00094A  65DC               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5303  00094C  D002               	goto	l921
  5304                           
  5305                           ; BSR set to: 0
  5306  00094E  D00B               	goto	l5996
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;FastBuggy17_Main_Code_TUNING.c: 564: while(!(PIR1bits.RCIF));
  5310  000950  D000               	goto	l921
  5311  000952                     l921:
  5312  000952  AA9E               	btfss	3998,5,c	;volatile
  5313  000954  D7FE               	goto	l921
  5314                           
  5315                           ;FastBuggy17_Main_Code_TUNING.c: 566: PutCharRxBuf(Read1USART());
  5316  000956  EC0B  F010         	call	_Read1USART	;wreg free
  5317  00095A  ECA9  F00D         	call	_PutCharRxBuf
  5318  00095E  0100               	movlb	0	; () banked
  5319  000960  2BDC               	incf	SetPIDValues@char_index& (0+255),f,b
  5320  000962  D7F1               	goto	l5986
  5321                           
  5322                           ; BSR set to: 0
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;FastBuggy17_Main_Code_TUNING.c: 567: }
  5326                           ;FastBuggy17_Main_Code_TUNING.c: 569: while(GetCharRxBuf() != 0xAA);
  5327                           
  5328                           ; BSR set to: 0
  5329  000964  D000               	goto	l5996
  5330  000966                     l5996:
  5331  000966  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5332  00096A  0AAA               	xorlw	170
  5333  00096C  B4D8               	btfsc	status,2,c
  5334  00096E  D002               	goto	l5998
  5335  000970  D7FA               	goto	l5996
  5336                           
  5337                           ;FastBuggy17_Main_Code_TUNING.c: 570: while(GetCharRxBuf() != 0x01);
  5338  000972  D000               	goto	l5998
  5339  000974                     l5998:
  5340  000974  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5341  000978  06E8               	decf	wreg,f,c
  5342  00097A  A4D8               	btfss	status,2,c
  5343  00097C  D7FB               	goto	l5998
  5344                           
  5345                           ;FastBuggy17_Main_Code_TUNING.c: 572: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5346  00097E  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5347  000982  0100               	movlb	0	; () banked
  5348  000984  6FD9               	movwf	??_SetPIDValues& (0+255),b
  5349  000986  0100               	movlb	0	; () banked
  5350  000988  51D9               	movf	??_SetPIDValues& (0+255),w,b
  5351  00098A  0100               	movlb	0	; () banked
  5352  00098C  6FDB               	movwf	(??_SetPIDValues+2)& (0+255),b
  5353  00098E  6BDA               	clrf	(??_SetPIDValues+1)& (0+255),b
  5354  000990  0E00               	movlw	0
  5355  000992  0100               	movlb	0	; () banked
  5356  000994  15DA               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5357  000996  0100               	movlb	0	; () banked
  5358  000998  6F96               	movwf	_PID_Kp& (0+255),b
  5359  00099A  0EFF               	movlw	255
  5360  00099C  0100               	movlb	0	; () banked
  5361  00099E  15DB               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5362  0009A0  0100               	movlb	0	; () banked
  5363  0009A2  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5364                           
  5365                           ;FastBuggy17_Main_Code_TUNING.c: 573: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5366  0009A4  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5367  0009A8  0100               	movlb	0	; () banked
  5368  0009AA  6FD9               	movwf	??_SetPIDValues& (0+255),b
  5369  0009AC  0100               	movlb	0	; () banked
  5370  0009AE  51D9               	movf	??_SetPIDValues& (0+255),w,b
  5371  0009B0  0100               	movlb	0	; () banked
  5372  0009B2  1396               	iorwf	_PID_Kp& (0+255),f,b
  5373                           
  5374                           ;FastBuggy17_Main_Code_TUNING.c: 575: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5375  0009B4  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5376  0009B8  0100               	movlb	0	; () banked
  5377  0009BA  6FD9               	movwf	??_SetPIDValues& (0+255),b
  5378  0009BC  0100               	movlb	0	; () banked
  5379  0009BE  51D9               	movf	??_SetPIDValues& (0+255),w,b
  5380  0009C0  0100               	movlb	0	; () banked
  5381  0009C2  6FDB               	movwf	(??_SetPIDValues+2)& (0+255),b
  5382  0009C4  6BDA               	clrf	(??_SetPIDValues+1)& (0+255),b
  5383  0009C6  0E00               	movlw	0
  5384  0009C8  0100               	movlb	0	; () banked
  5385  0009CA  15DA               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5386  0009CC  0100               	movlb	0	; () banked
  5387  0009CE  6F92               	movwf	_PID_Kd& (0+255),b
  5388  0009D0  0EFF               	movlw	255
  5389  0009D2  0100               	movlb	0	; () banked
  5390  0009D4  15DB               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5391  0009D6  0100               	movlb	0	; () banked
  5392  0009D8  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5393                           
  5394                           ;FastBuggy17_Main_Code_TUNING.c: 576: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5395  0009DA  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5396  0009DE  0100               	movlb	0	; () banked
  5397  0009E0  6FD9               	movwf	??_SetPIDValues& (0+255),b
  5398  0009E2  0100               	movlb	0	; () banked
  5399  0009E4  51D9               	movf	??_SetPIDValues& (0+255),w,b
  5400  0009E6  0100               	movlb	0	; () banked
  5401  0009E8  1392               	iorwf	_PID_Kd& (0+255),f,b
  5402                           
  5403                           ;FastBuggy17_Main_Code_TUNING.c: 578: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5404  0009EA  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5405  0009EE  0100               	movlb	0	; () banked
  5406  0009F0  6FD9               	movwf	??_SetPIDValues& (0+255),b
  5407  0009F2  0100               	movlb	0	; () banked
  5408  0009F4  51D9               	movf	??_SetPIDValues& (0+255),w,b
  5409  0009F6  0100               	movlb	0	; () banked
  5410  0009F8  6FDB               	movwf	(??_SetPIDValues+2)& (0+255),b
  5411  0009FA  6BDA               	clrf	(??_SetPIDValues+1)& (0+255),b
  5412  0009FC  0E00               	movlw	0
  5413  0009FE  0100               	movlb	0	; () banked
  5414  000A00  15DA               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5415  000A02  0100               	movlb	0	; () banked
  5416  000A04  6F94               	movwf	_PID_Ki& (0+255),b
  5417  000A06  0EFF               	movlw	255
  5418  000A08  0100               	movlb	0	; () banked
  5419  000A0A  15DB               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5420  000A0C  0100               	movlb	0	; () banked
  5421  000A0E  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5422                           
  5423                           ;FastBuggy17_Main_Code_TUNING.c: 579: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5424  000A10  EC42  F00D         	call	_GetCharRxBuf	;wreg free
  5425  000A14  0100               	movlb	0	; () banked
  5426  000A16  6FD9               	movwf	??_SetPIDValues& (0+255),b
  5427  000A18  0100               	movlb	0	; () banked
  5428  000A1A  51D9               	movf	??_SetPIDValues& (0+255),w,b
  5429  000A1C  0100               	movlb	0	; () banked
  5430  000A1E  1394               	iorwf	_PID_Ki& (0+255),f,b
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;FastBuggy17_Main_Code_TUNING.c: 581: WriteIntEEPROM(0x0006, PID_Kp);
  5434  000A20  0E00               	movlw	0
  5435  000A22  0100               	movlb	0	; () banked
  5436  000A24  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5437  000A26  0E06               	movlw	6
  5438  000A28  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  5439  000A2A  C096  F0D5         	movff	_PID_Kp,WriteIntEEPROM@data
  5440  000A2E  C097  F0D6         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5441  000A32  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  5442                           
  5443                           ;FastBuggy17_Main_Code_TUNING.c: 582: WriteIntEEPROM(0x0009, PID_Kd);
  5444  000A36  0E00               	movlw	0
  5445  000A38  0100               	movlb	0	; () banked
  5446  000A3A  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5447  000A3C  0E09               	movlw	9
  5448  000A3E  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  5449  000A40  C092  F0D5         	movff	_PID_Kd,WriteIntEEPROM@data
  5450  000A44  C093  F0D6         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5451  000A48  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  5452                           
  5453                           ;FastBuggy17_Main_Code_TUNING.c: 583: WriteIntEEPROM(0x000C, PID_Ki);
  5454  000A4C  0E00               	movlw	0
  5455  000A4E  0100               	movlb	0	; () banked
  5456  000A50  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5457  000A52  0E0C               	movlw	12
  5458  000A54  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  5459  000A56  C094  F0D5         	movff	_PID_Ki,WriteIntEEPROM@data
  5460  000A5A  C095  F0D6         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5461  000A5E  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  5462                           
  5463                           ;FastBuggy17_Main_Code_TUNING.c: 585: WriteCharEEPROM(0x0005, 1);
  5464  000A62  0E00               	movlw	0
  5465  000A64  0100               	movlb	0	; () banked
  5466  000A66  6FD4               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5467  000A68  0E05               	movlw	5
  5468  000A6A  6FD3               	movwf	WriteCharEEPROM@address& (0+255),b
  5469  000A6C  0E01               	movlw	1
  5470  000A6E  0100               	movlb	0	; () banked
  5471  000A70  6FD5               	movwf	WriteCharEEPROM@data& (0+255),b
  5472  000A72  EC2E  F011         	call	_WriteCharEEPROM	;wreg free
  5473  000A76  0012               	return		;funcret
  5474  000A78                     __end_of_SetPIDValues:
  5475                           	opt stack 0
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           postinc0	equ	0xFEE
  5479                           wreg	equ	0xFE8
  5480                           indf2	equ	0xFDF
  5481                           postinc2	equ	0xFDE
  5482                           postdec2	equ	0xFDD
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _PutCharRxBuf *****************
  5488 ;; Defined at:
  5489 ;;		line 25 in file "Wireless.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  ch              1    wreg     unsigned char 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  ch              1   23[BANK0 ] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;Total ram usage:        2 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    8
  5510 ;; This function calls:
  5511 ;;		___awmod
  5512 ;; This function is called by:
  5513 ;;		_SetPIDValues
  5514 ;;		_WirelessRx_ISR
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text35
  5519  001B52                     __ptext35:
  5520                           	opt stack 0
  5521  001B52                     _PutCharRxBuf:
  5522                           	opt stack 21
  5523                           
  5524                           ;incstack = 0
  5525                           ;PutCharRxBuf@ch stored from wreg
  5526  001B52  0100               	movlb	0	; () banked
  5527  001B54  6FD7               	movwf	PutCharRxBuf@ch& (0+255),b
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5531  001B56  501F               	movf	_put_Rx_index,w,c
  5532  001B58  0D01               	mullw	1
  5533  001B5A  0E60               	movlw	low _Rx_buffer
  5534  001B5C  24F3               	addwf	prodl,w,c
  5535  001B5E  6ED9               	movwf	fsr2l,c
  5536  001B60  0E00               	movlw	high _Rx_buffer
  5537  001B62  20F4               	addwfc	prodh,w,c
  5538  001B64  6EDA               	movwf	fsr2h,c
  5539  001B66  C0D7  FFDF         	movff	PutCharRxBuf@ch,indf2
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5543  001B6A  C01F  F0D6         	movff	_put_Rx_index,??_PutCharRxBuf
  5544  001B6E  0E01               	movlw	1
  5545  001B70  0100               	movlb	0	; () banked
  5546  001B72  27D6               	addwf	??_PutCharRxBuf& (0+255),f,b
  5547  001B74  0100               	movlb	0	; () banked
  5548  001B76  51D6               	movf	??_PutCharRxBuf& (0+255),w,b
  5549  001B78  0100               	movlb	0	; () banked
  5550  001B7A  6FD0               	movwf	___awmod@dividend& (0+255),b
  5551  001B7C  6BD1               	clrf	(___awmod@dividend+1)& (0+255),b
  5552  001B7E  0E00               	movlw	0
  5553  001B80  0100               	movlb	0	; () banked
  5554  001B82  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  5555  001B84  0E19               	movlw	25
  5556  001B86  6FD2               	movwf	___awmod@divisor& (0+255),b
  5557  001B88  EC87  F007         	call	___awmod	;wreg free
  5558  001B8C  0100               	movlb	0	; () banked
  5559  001B8E  51D0               	movf	?___awmod& (0+255),w,b
  5560  001B90  6E1F               	movwf	_put_Rx_index,c
  5561                           
  5562                           ; BSR set to: 0
  5563  001B92  0012               	return		;funcret
  5564  001B94                     __end_of_PutCharRxBuf:
  5565                           	opt stack 0
  5566                           prodh	equ	0xFF4
  5567                           prodl	equ	0xFF3
  5568                           postinc0	equ	0xFEE
  5569                           wreg	equ	0xFE8
  5570                           indf2	equ	0xFDF
  5571                           postinc2	equ	0xFDE
  5572                           postdec2	equ	0xFDD
  5573                           fsr2h	equ	0xFDA
  5574                           fsr2l	equ	0xFD9
  5575                           status	equ	0xFD8
  5576                           
  5577 ;; *************** function _GetCharRxBuf *****************
  5578 ;; Defined at:
  5579 ;;		line 31 in file "Wireless.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  ch              1   23[BANK0 ] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      unsigned char 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;Total ram usage:        2 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    8
  5600 ;; This function calls:
  5601 ;;		___awmod
  5602 ;; This function is called by:
  5603 ;;		_SetPIDValues
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text36
  5608  001A84                     __ptext36:
  5609                           	opt stack 0
  5610  001A84                     _GetCharRxBuf:
  5611                           	opt stack 21
  5612                           
  5613                           ;Wireless.c: 32: unsigned char ch;
  5614                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;incstack = 0
  5618  001A84  501D               	movf	_get_Rx_index,w,c
  5619  001A86  0D01               	mullw	1
  5620  001A88  0E60               	movlw	low _Rx_buffer
  5621  001A8A  24F3               	addwf	prodl,w,c
  5622  001A8C  6ED9               	movwf	fsr2l,c
  5623  001A8E  0E00               	movlw	high _Rx_buffer
  5624  001A90  20F4               	addwfc	prodh,w,c
  5625  001A92  6EDA               	movwf	fsr2h,c
  5626  001A94  50DF               	movf	indf2,w,c
  5627  001A96  0100               	movlb	0	; () banked
  5628  001A98  6FD7               	movwf	GetCharRxBuf@ch& (0+255),b
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5632  001A9A  C01D  F0D6         	movff	_get_Rx_index,??_GetCharRxBuf
  5633  001A9E  0E01               	movlw	1
  5634  001AA0  0100               	movlb	0	; () banked
  5635  001AA2  27D6               	addwf	??_GetCharRxBuf& (0+255),f,b
  5636  001AA4  0100               	movlb	0	; () banked
  5637  001AA6  51D6               	movf	??_GetCharRxBuf& (0+255),w,b
  5638  001AA8  0100               	movlb	0	; () banked
  5639  001AAA  6FD0               	movwf	___awmod@dividend& (0+255),b
  5640  001AAC  6BD1               	clrf	(___awmod@dividend+1)& (0+255),b
  5641  001AAE  0E00               	movlw	0
  5642  001AB0  0100               	movlb	0	; () banked
  5643  001AB2  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  5644  001AB4  0E19               	movlw	25
  5645  001AB6  6FD2               	movwf	___awmod@divisor& (0+255),b
  5646  001AB8  EC87  F007         	call	___awmod	;wreg free
  5647  001ABC  0100               	movlb	0	; () banked
  5648  001ABE  51D0               	movf	?___awmod& (0+255),w,b
  5649  001AC0  6E1D               	movwf	_get_Rx_index,c
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;Wireless.c: 37: return(ch);
  5653  001AC2  0100               	movlb	0	; () banked
  5654  001AC4  51D7               	movf	GetCharRxBuf@ch& (0+255),w,b
  5655  001AC6  D000               	goto	l286
  5656  001AC8                     l286:
  5657                           
  5658                           ; BSR set to: 0
  5659  001AC8  0012               	return		;funcret
  5660  001ACA                     __end_of_GetCharRxBuf:
  5661                           	opt stack 0
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           postinc0	equ	0xFEE
  5665                           wreg	equ	0xFE8
  5666                           indf2	equ	0xFDF
  5667                           postinc2	equ	0xFDE
  5668                           postdec2	equ	0xFDD
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8
  5672                           
  5673 ;; *************** function _PB2pressed *****************
  5674 ;; Defined at:
  5675 ;;		line 439 in file "FastBuggy17_Main_Code_TUNING.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      unsigned char 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;Total ram usage:        0 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    9
  5696 ;; This function calls:
  5697 ;;		_CommandAvailable
  5698 ;;		_GetCommand
  5699 ;;		_ReadMillis2
  5700 ;;		_ResetMillis2
  5701 ;; This function is called by:
  5702 ;;		_LoadPIDValues
  5703 ;;		_main
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text37
  5708  0018BE                     __ptext37:
  5709                           	opt stack 0
  5710  0018BE                     _PB2pressed:
  5711                           	opt stack 21
  5712                           
  5713                           ;FastBuggy17_Main_Code_TUNING.c: 440: if(CommandAvailable() == 1) {
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;incstack = 0
  5717  0018BE  ECA2  F011         	call	_CommandAvailable	;wreg free
  5718  0018C2  06E8               	decf	wreg,f,c
  5719  0018C4  A4D8               	btfss	status,2,c
  5720  0018C6  D00B               	goto	l863
  5721                           
  5722                           ;FastBuggy17_Main_Code_TUNING.c: 441: if(GetCommand() == 0x06) {
  5723  0018C8  ECDC  F011         	call	_GetCommand	;wreg free
  5724  0018CC  0A06               	xorlw	6
  5725  0018CE  A4D8               	btfss	status,2,c
  5726  0018D0  D01F               	goto	l5950
  5727  0018D2  D01B               	goto	l5944
  5728                           
  5729                           ;FastBuggy17_Main_Code_TUNING.c: 442: return(1);
  5730  0018D4  D022               	goto	l865
  5731                           
  5732                           ;FastBuggy17_Main_Code_TUNING.c: 443: }
  5733  0018D6  D01F               	goto	l5954
  5734  0018D8  D01B               	goto	l5950
  5735                           
  5736                           ;FastBuggy17_Main_Code_TUNING.c: 444: else {
  5737                           ;FastBuggy17_Main_Code_TUNING.c: 445: return(0);
  5738  0018DA  D01F               	goto	l865
  5739                           
  5740                           ;FastBuggy17_Main_Code_TUNING.c: 446: }
  5741                           ;FastBuggy17_Main_Code_TUNING.c: 447: }
  5742  0018DC  D01C               	goto	l5954
  5743  0018DE                     l863:
  5744                           
  5745                           ;FastBuggy17_Main_Code_TUNING.c: 448: else if(PORTBbits.RB2 == 0) {
  5746  0018DE  B481               	btfsc	3969,2,c	;volatile
  5747  0018E0  D003               	goto	l868
  5748  0018E2  D016               	goto	l5950
  5749                           
  5750                           ;FastBuggy17_Main_Code_TUNING.c: 449: return(0);
  5751  0018E4  D01A               	goto	l865
  5752                           
  5753                           ;FastBuggy17_Main_Code_TUNING.c: 450: }
  5754  0018E6  D017               	goto	l5954
  5755  0018E8                     l868:
  5756                           
  5757                           ;FastBuggy17_Main_Code_TUNING.c: 451: else if(PORTBbits.RB2 == 1) {
  5758  0018E8  A481               	btfss	3969,2,c	;volatile
  5759  0018EA  D015               	goto	l5954
  5760                           
  5761                           ;FastBuggy17_Main_Code_TUNING.c: 452: ResetMillis2();
  5762  0018EC  ECCE  F011         	call	_ResetMillis2	;wreg free
  5763                           
  5764                           ;FastBuggy17_Main_Code_TUNING.c: 453: while(ReadMillis2() < 10);
  5765  0018F0  D000               	goto	l5942
  5766  0018F2                     l5942:
  5767  0018F2  ECD3  F011         	call	_ReadMillis2	;wreg free
  5768  0018F6  0100               	movlb	0	; () banked
  5769  0018F8  51D1               	movf	(?_ReadMillis2+1)& (0+255),w,b
  5770  0018FA  E105               	bnz	u4940
  5771  0018FC  0E0A               	movlw	10
  5772  0018FE  0100               	movlb	0	; () banked
  5773  001900  5DD0               	subwf	?_ReadMillis2& (0+255),w,b
  5774  001902  A0D8               	btfss	status,0,c
  5775  001904  D7F6               	goto	l5942
  5776  001906                     u4940:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;FastBuggy17_Main_Code_TUNING.c: 454: if(PORTBbits.RB2 == 1) {
  5780  001906  A481               	btfss	3969,2,c	;volatile
  5781  001908  D003               	goto	l5950
  5782  00190A                     l5944:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;FastBuggy17_Main_Code_TUNING.c: 455: return(1);
  5786  00190A  0E01               	movlw	1
  5787                           
  5788                           ; BSR set to: 0
  5789  00190C  D006               	goto	l865
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;FastBuggy17_Main_Code_TUNING.c: 456: }
  5793  00190E  D003               	goto	l5954
  5794  001910                     l5950:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;FastBuggy17_Main_Code_TUNING.c: 457: else {
  5798                           ;FastBuggy17_Main_Code_TUNING.c: 458: return(0);
  5799  001910  0E00               	movlw	0
  5800                           
  5801                           ; BSR set to: 0
  5802  001912  D003               	goto	l865
  5803                           
  5804                           ; BSR set to: 0
  5805                           
  5806                           ; BSR set to: 0
  5807                           
  5808                           ; BSR set to: 0
  5809  001914  D000               	goto	l5954
  5810  001916                     l5954:
  5811                           
  5812                           ;FastBuggy17_Main_Code_TUNING.c: 459: }
  5813                           ;FastBuggy17_Main_Code_TUNING.c: 460: }
  5814                           ;FastBuggy17_Main_Code_TUNING.c: 462: return(0);
  5815  001916  0E00               	movlw	0
  5816  001918  D000               	goto	l865
  5817  00191A                     l865:
  5818  00191A  0012               	return		;funcret
  5819  00191C                     __end_of_PB2pressed:
  5820                           	opt stack 0
  5821                           prodh	equ	0xFF4
  5822                           prodl	equ	0xFF3
  5823                           postinc0	equ	0xFEE
  5824                           wreg	equ	0xFE8
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function _LoadCalibration *****************
  5833 ;; Defined at:
  5834 ;;		line 537 in file "FastBuggy17_Main_Code_TUNING.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  index           1   33[BANK0 ] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;		None               void
  5841 ;; Registers used:
  5842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;Total ram usage:        3 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:   12
  5855 ;; This function calls:
  5856 ;;		_GenerateCalibration
  5857 ;;		_ReadCharEEPROM
  5858 ;;		_ReadIntEEPROM
  5859 ;; This function is called by:
  5860 ;;		_main
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text38
  5865  00111A                     __ptext38:
  5866                           	opt stack 0
  5867  00111A                     _LoadCalibration:
  5868                           	opt stack 18
  5869                           
  5870                           ;FastBuggy17_Main_Code_TUNING.c: 538: unsigned char index;
  5871                           ;FastBuggy17_Main_Code_TUNING.c: 540: if(ReadCharEEPROM(0x00) == 0xFF) {
  5872                           
  5873                           ;incstack = 0
  5874  00111A  0E00               	movlw	0
  5875  00111C  0100               	movlb	0	; () banked
  5876  00111E  6FD3               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5877  001120  0E00               	movlw	0
  5878  001122  6FD2               	movwf	ReadCharEEPROM@address& (0+255),b
  5879  001124  EC64  F011         	call	_ReadCharEEPROM	;wreg free
  5880  001128  0AFF               	xorlw	255
  5881  00112A  A4D8               	btfss	status,2,c
  5882  00112C  D003               	goto	l6308
  5883                           
  5884                           ;FastBuggy17_Main_Code_TUNING.c: 541: GenerateCalibration();
  5885  00112E  ECE1  F007         	call	_GenerateCalibration	;wreg free
  5886                           
  5887                           ;FastBuggy17_Main_Code_TUNING.c: 542: }
  5888  001132  D046               	goto	l916
  5889  001134                     l6308:
  5890                           
  5891                           ;FastBuggy17_Main_Code_TUNING.c: 544: else {
  5892                           ;FastBuggy17_Main_Code_TUNING.c: 545: for(index = 0; index < 5; index++) {
  5893  001134  0E00               	movlw	0
  5894  001136  0100               	movlb	0	; () banked
  5895  001138  6FE1               	movwf	LoadCalibration@index& (0+255),b
  5896  00113A                     l6310:
  5897                           
  5898                           ; BSR set to: 0
  5899  00113A  0E04               	movlw	4
  5900  00113C  0100               	movlb	0	; () banked
  5901  00113E  65E1               	cpfsgt	LoadCalibration@index& (0+255),b
  5902  001140  D001               	goto	l6314
  5903                           
  5904                           ; BSR set to: 0
  5905  001142  D027               	goto	l6320
  5906  001144                     l6314:
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;FastBuggy17_Main_Code_TUNING.c: 546: sensor_offsets[index] = ReadIntEEPROM(0x00E0 + (2 
      +                          * index));
  5910  001144  0100               	movlb	0	; () banked
  5911  001146  51E1               	movf	LoadCalibration@index& (0+255),w,b
  5912  001148  0100               	movlb	0	; () banked
  5913  00114A  6FDF               	movwf	??_LoadCalibration& (0+255),b
  5914  00114C  6BE0               	clrf	(??_LoadCalibration+1)& (0+255),b
  5915  00114E  90D8               	bcf	status,0,c
  5916  001150  0100               	movlb	0	; () banked
  5917  001152  37DF               	rlcf	??_LoadCalibration& (0+255),f,b
  5918  001154  37E0               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  5919  001156  0EE0               	movlw	224
  5920  001158  0100               	movlb	0	; () banked
  5921  00115A  25DF               	addwf	??_LoadCalibration& (0+255),w,b
  5922  00115C  0100               	movlb	0	; () banked
  5923  00115E  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  5924  001160  0E00               	movlw	0
  5925  001162  0100               	movlb	0	; () banked
  5926  001164  21E0               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  5927  001166  0100               	movlb	0	; () banked
  5928  001168  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5929  00116A  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  5930  00116E  0100               	movlb	0	; () banked
  5931  001170  51E1               	movf	LoadCalibration@index& (0+255),w,b
  5932  001172  0D02               	mullw	2
  5933  001174  0E9A               	movlw	low _sensor_offsets
  5934  001176  24F3               	addwf	prodl,w,c
  5935  001178  6ED9               	movwf	fsr2l,c
  5936  00117A  0E00               	movlw	high _sensor_offsets
  5937  00117C  20F4               	addwfc	prodh,w,c
  5938  00117E  6EDA               	movwf	fsr2h,c
  5939  001180  0100               	movlb	0	; () banked
  5940  001182  C0D2  FFDE         	movff	?_ReadIntEEPROM,postinc2
  5941  001186  0100               	movlb	0	; () banked
  5942  001188  C0D3  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  5943                           
  5944                           ; BSR set to: 0
  5945  00118C  0100               	movlb	0	; () banked
  5946  00118E  2BE1               	incf	LoadCalibration@index& (0+255),f,b
  5947  001190  D7D4               	goto	l6310
  5948  001192                     l6320:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;FastBuggy17_Main_Code_TUNING.c: 547: }
  5952                           ;FastBuggy17_Main_Code_TUNING.c: 549: PID_set_point = ReadIntEEPROM(0x0001);
  5953  001192  0E00               	movlw	0
  5954  001194  0100               	movlb	0	; () banked
  5955  001196  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5956  001198  0E01               	movlw	1
  5957  00119A  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  5958  00119C  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  5959  0011A0  C0D2  F0BA         	movff	?_ReadIntEEPROM,_PID_set_point
  5960  0011A4  C0D3  F0BB         	movff	?_ReadIntEEPROM+1,_PID_set_point+1
  5961                           
  5962                           ;FastBuggy17_Main_Code_TUNING.c: 551: off_line_sum = ReadIntEEPROM(0x0003);
  5963  0011A8  0E00               	movlw	0
  5964  0011AA  0100               	movlb	0	; () banked
  5965  0011AC  6FD3               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5966  0011AE  0E03               	movlw	3
  5967  0011B0  6FD2               	movwf	ReadIntEEPROM@address& (0+255),b
  5968  0011B2  EC8E  F00C         	call	_ReadIntEEPROM	;wreg free
  5969  0011B6  C0D2  F0BC         	movff	?_ReadIntEEPROM,_off_line_sum
  5970  0011BA  C0D3  F0BD         	movff	?_ReadIntEEPROM+1,_off_line_sum+1
  5971  0011BE  D000               	goto	l916
  5972  0011C0                     l916:
  5973  0011C0  0012               	return		;funcret
  5974  0011C2                     __end_of_LoadCalibration:
  5975                           	opt stack 0
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           postinc0	equ	0xFEE
  5979                           wreg	equ	0xFE8
  5980                           indf2	equ	0xFDF
  5981                           postinc2	equ	0xFDE
  5982                           postdec2	equ	0xFDD
  5983                           fsr2h	equ	0xFDA
  5984                           fsr2l	equ	0xFD9
  5985                           status	equ	0xFD8
  5986                           
  5987 ;; *************** function _ReadIntEEPROM *****************
  5988 ;; Defined at:
  5989 ;;		line 84 in file "eeprom.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  address         2   18[BANK0 ] unsigned int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  data            2   23[BANK0 ] unsigned int 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  2   18[BANK0 ] unsigned int 
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        7 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    8
  6010 ;; This function calls:
  6011 ;;		_ReadEEPROM
  6012 ;; This function is called by:
  6013 ;;		_LoadCalibration
  6014 ;;		_LoadPIDValues
  6015 ;;		_main
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text39
  6020  00191C                     __ptext39:
  6021                           	opt stack 0
  6022  00191C                     _ReadIntEEPROM:
  6023                           	opt stack 22
  6024                           
  6025                           ;eeprom.c: 85: unsigned int data;
  6026                           ;eeprom.c: 87: data = (ReadEEPROM(address) << 8) & 0xFF00;
  6027                           
  6028                           ;incstack = 0
  6029  00191C  C0D2  F0D0         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  6030  001920  C0D3  F0D1         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  6031  001924  ECB9  F00F         	call	_ReadEEPROM	;wreg free
  6032  001928  0100               	movlb	0	; () banked
  6033  00192A  6FD4               	movwf	??_ReadIntEEPROM& (0+255),b
  6034  00192C  0100               	movlb	0	; () banked
  6035  00192E  51D4               	movf	??_ReadIntEEPROM& (0+255),w,b
  6036  001930  0100               	movlb	0	; () banked
  6037  001932  6FD6               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  6038  001934  6BD5               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  6039  001936  0E00               	movlw	0
  6040  001938  0100               	movlb	0	; () banked
  6041  00193A  15D5               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  6042  00193C  0100               	movlb	0	; () banked
  6043  00193E  6FD7               	movwf	ReadIntEEPROM@data& (0+255),b
  6044  001940  0EFF               	movlw	255
  6045  001942  0100               	movlb	0	; () banked
  6046  001944  15D6               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  6047  001946  0100               	movlb	0	; () banked
  6048  001948  6FD8               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  6049                           
  6050                           ;eeprom.c: 88: data |= ReadEEPROM(address + 1) & 0x00FF;
  6051  00194A  0E01               	movlw	1
  6052  00194C  0100               	movlb	0	; () banked
  6053  00194E  25D2               	addwf	ReadIntEEPROM@address& (0+255),w,b
  6054  001950  0100               	movlb	0	; () banked
  6055  001952  6FD0               	movwf	ReadEEPROM@address& (0+255),b
  6056  001954  0E00               	movlw	0
  6057  001956  0100               	movlb	0	; () banked
  6058  001958  21D3               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  6059  00195A  0100               	movlb	0	; () banked
  6060  00195C  6FD1               	movwf	(ReadEEPROM@address+1)& (0+255),b
  6061  00195E  ECB9  F00F         	call	_ReadEEPROM	;wreg free
  6062  001962  0100               	movlb	0	; () banked
  6063  001964  6FD4               	movwf	??_ReadIntEEPROM& (0+255),b
  6064  001966  0100               	movlb	0	; () banked
  6065  001968  51D4               	movf	??_ReadIntEEPROM& (0+255),w,b
  6066  00196A  0100               	movlb	0	; () banked
  6067  00196C  13D7               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;eeprom.c: 90: return(data);
  6071  00196E  C0D7  F0D2         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  6072  001972  C0D8  F0D3         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  6073  001976  D000               	goto	l237
  6074  001978                     l237:
  6075                           
  6076                           ; BSR set to: 0
  6077  001978  0012               	return		;funcret
  6078  00197A                     __end_of_ReadIntEEPROM:
  6079                           	opt stack 0
  6080                           prodh	equ	0xFF4
  6081                           prodl	equ	0xFF3
  6082                           postinc0	equ	0xFEE
  6083                           wreg	equ	0xFE8
  6084                           indf2	equ	0xFDF
  6085                           postinc2	equ	0xFDE
  6086                           postdec2	equ	0xFDD
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091 ;; *************** function _ReadCharEEPROM *****************
  6092 ;; Defined at:
  6093 ;;		line 94 in file "eeprom.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  address         2   18[BANK0 ] unsigned int 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      unsigned char 
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;Total ram usage:        2 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    8
  6114 ;; This function calls:
  6115 ;;		_ReadEEPROM
  6116 ;; This function is called by:
  6117 ;;		_LoadCalibration
  6118 ;;		_LoadPIDValues
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text40
  6123  0022C8                     __ptext40:
  6124                           	opt stack 0
  6125  0022C8                     _ReadCharEEPROM:
  6126                           	opt stack 21
  6127                           
  6128                           ;eeprom.c: 95: return(ReadEEPROM(address));
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;incstack = 0
  6132  0022C8  C0D2  F0D0         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6133  0022CC  C0D3  F0D1         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6134  0022D0  ECB9  F00F         	call	_ReadEEPROM	;wreg free
  6135  0022D4  D000               	goto	l240
  6136  0022D6                     l240:
  6137  0022D6  0012               	return		;funcret
  6138  0022D8                     __end_of_ReadCharEEPROM:
  6139                           	opt stack 0
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           postinc0	equ	0xFEE
  6143                           wreg	equ	0xFE8
  6144                           indf2	equ	0xFDF
  6145                           postinc2	equ	0xFDE
  6146                           postdec2	equ	0xFDD
  6147                           fsr2h	equ	0xFDA
  6148                           fsr2l	equ	0xFD9
  6149                           status	equ	0xFD8
  6150                           
  6151 ;; *************** function _ReadEEPROM *****************
  6152 ;; Defined at:
  6153 ;;		line 37 in file "eeprom.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  address         2   16[BANK0 ] unsigned int 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      unsigned char 
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, status,0
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;Total ram usage:        2 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    7
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_ReadIntEEPROM
  6178 ;;		_ReadCharEEPROM
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text41
  6183  001F72                     __ptext41:
  6184                           	opt stack 0
  6185  001F72                     _ReadEEPROM:
  6186                           	opt stack 22
  6187                           
  6188                           ;eeprom.c: 38: if(address > 0x03FF) {
  6189                           
  6190                           ;incstack = 0
  6191  001F72  0E04               	movlw	4
  6192  001F74  0100               	movlb	0	; () banked
  6193  001F76  5DD1               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6194  001F78  A0D8               	btfss	status,0,c
  6195  001F7A  D002               	goto	l223
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;eeprom.c: 39: return(0);
  6199  001F7C  0E00               	movlw	0
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;eeprom.c: 40: }
  6203                           
  6204                           ; BSR set to: 0
  6205  001F7E  D00E               	goto	l224
  6206  001F80                     l223:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;eeprom.c: 41: else {
  6210                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6211  001F80  C0D0  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6215  001F84  0100               	movlb	0	; () banked
  6216  001F86  51D1               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6217  001F88  0B03               	andlw	3
  6218  001F8A  6EAA               	movwf	4010,c	;volatile
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6222  001F8C  9EA6               	bcf	4006,7,c	;volatile
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6226  001F8E  9CA6               	bcf	4006,6,c	;volatile
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6230  001F90  80A6               	bsf	4006,0,c	;volatile
  6231                           
  6232                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6233  001F92  D000               	goto	l226
  6234  001F94                     l226:
  6235  001F94  B0A6               	btfsc	4006,0,c	;volatile
  6236  001F96  D7FE               	goto	l226
  6237                           
  6238                           ;eeprom.c: 50: return(EEDATA);
  6239  001F98  50A8               	movf	4008,w,c	;volatile
  6240  001F9A  D000               	goto	l224
  6241  001F9C                     l224:
  6242  001F9C  0012               	return		;funcret
  6243  001F9E                     __end_of_ReadEEPROM:
  6244                           	opt stack 0
  6245                           prodh	equ	0xFF4
  6246                           prodl	equ	0xFF3
  6247                           postinc0	equ	0xFEE
  6248                           wreg	equ	0xFE8
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256 ;; *************** function _GenerateCalibration *****************
  6257 ;; Defined at:
  6258 ;;		line 513 in file "FastBuggy17_Main_Code_TUNING.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  index           1   30[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;Total ram usage:        3 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:   11
  6279 ;; This function calls:
  6280 ;;		_CalibrateOffLine
  6281 ;;		_CalibrateOffsets
  6282 ;;		_CalibrateOnLine
  6283 ;;		_FlashLEDS
  6284 ;;		_WriteCharEEPROM
  6285 ;;		_WriteIntEEPROM
  6286 ;; This function is called by:
  6287 ;;		_LoadCalibration
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text42
  6293  000FC2                     __ptext42:
  6294                           	opt stack 0
  6295  000FC2                     _GenerateCalibration:
  6296                           	opt stack 18
  6297                           
  6298                           ;FastBuggy17_Main_Code_TUNING.c: 514: unsigned char index;
  6299                           ;FastBuggy17_Main_Code_TUNING.c: 516: CalibrateOffsets();
  6300                           
  6301                           ;incstack = 0
  6302  000FC2  EC32  F009         	call	_CalibrateOffsets	;wreg free
  6303                           
  6304                           ;FastBuggy17_Main_Code_TUNING.c: 518: for(index = 0; index < 5; index++) {
  6305  000FC6  0E00               	movlw	0
  6306  000FC8  0100               	movlb	0	; () banked
  6307  000FCA  6FDE               	movwf	GenerateCalibration@index& (0+255),b
  6308  000FCC                     l5962:
  6309                           
  6310                           ; BSR set to: 0
  6311  000FCC  0E04               	movlw	4
  6312  000FCE  0100               	movlb	0	; () banked
  6313  000FD0  65DE               	cpfsgt	GenerateCalibration@index& (0+255),b
  6314  000FD2  D001               	goto	l5966
  6315                           
  6316                           ; BSR set to: 0
  6317  000FD4  D025               	goto	l5972
  6318  000FD6                     l5966:
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;FastBuggy17_Main_Code_TUNING.c: 519: WriteIntEEPROM(0x00E0 + (2* index), sensor_offsets
      +                          [index]);
  6322  000FD6  0100               	movlb	0	; () banked
  6323  000FD8  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6324  000FDA  0100               	movlb	0	; () banked
  6325  000FDC  6FDC               	movwf	??_GenerateCalibration& (0+255),b
  6326  000FDE  6BDD               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6327  000FE0  90D8               	bcf	status,0,c
  6328  000FE2  0100               	movlb	0	; () banked
  6329  000FE4  37DC               	rlcf	??_GenerateCalibration& (0+255),f,b
  6330  000FE6  37DD               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6331  000FE8  0EE0               	movlw	224
  6332  000FEA  0100               	movlb	0	; () banked
  6333  000FEC  25DC               	addwf	??_GenerateCalibration& (0+255),w,b
  6334  000FEE  0100               	movlb	0	; () banked
  6335  000FF0  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  6336  000FF2  0E00               	movlw	0
  6337  000FF4  0100               	movlb	0	; () banked
  6338  000FF6  21DD               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6339  000FF8  0100               	movlb	0	; () banked
  6340  000FFA  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6341  000FFC  0100               	movlb	0	; () banked
  6342  000FFE  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6343  001000  0D02               	mullw	2
  6344  001002  0E9A               	movlw	low _sensor_offsets
  6345  001004  24F3               	addwf	prodl,w,c
  6346  001006  6ED9               	movwf	fsr2l,c
  6347  001008  0E00               	movlw	high _sensor_offsets
  6348  00100A  20F4               	addwfc	prodh,w,c
  6349  00100C  6EDA               	movwf	fsr2h,c
  6350  00100E  CFDE F0D5          	movff	postinc2,WriteIntEEPROM@data
  6351  001012  CFDD F0D6          	movff	postdec2,WriteIntEEPROM@data+1
  6352  001016  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  6353  00101A  0100               	movlb	0	; () banked
  6354  00101C  2BDE               	incf	GenerateCalibration@index& (0+255),f,b
  6355  00101E  D7D6               	goto	l5962
  6356  001020                     l5972:
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;FastBuggy17_Main_Code_TUNING.c: 520: }
  6360                           ;FastBuggy17_Main_Code_TUNING.c: 522: FlashLEDS();
  6361  001020  ECCF  F00F         	call	_FlashLEDS	;wreg free
  6362                           
  6363                           ;FastBuggy17_Main_Code_TUNING.c: 524: CalibrateOnLine();
  6364  001024  EC2D  F00C         	call	_CalibrateOnLine	;wreg free
  6365                           
  6366                           ;FastBuggy17_Main_Code_TUNING.c: 526: WriteIntEEPROM(0x0001, PID_set_point);
  6367  001028  0E00               	movlw	0
  6368  00102A  0100               	movlb	0	; () banked
  6369  00102C  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6370  00102E  0E01               	movlw	1
  6371  001030  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  6372  001032  C0BA  F0D5         	movff	_PID_set_point,WriteIntEEPROM@data
  6373  001036  C0BB  F0D6         	movff	_PID_set_point+1,WriteIntEEPROM@data+1
  6374  00103A  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  6375                           
  6376                           ;FastBuggy17_Main_Code_TUNING.c: 528: FlashLEDS();
  6377  00103E  ECCF  F00F         	call	_FlashLEDS	;wreg free
  6378                           
  6379                           ;FastBuggy17_Main_Code_TUNING.c: 530: CalibrateOffLine();
  6380  001042  ECEC  F00C         	call	_CalibrateOffLine	;wreg free
  6381                           
  6382                           ;FastBuggy17_Main_Code_TUNING.c: 532: WriteIntEEPROM(0x0003, off_line_sum);
  6383  001046  0E00               	movlw	0
  6384  001048  0100               	movlb	0	; () banked
  6385  00104A  6FD4               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6386  00104C  0E03               	movlw	3
  6387  00104E  6FD3               	movwf	WriteIntEEPROM@address& (0+255),b
  6388  001050  C0BC  F0D5         	movff	_off_line_sum,WriteIntEEPROM@data
  6389  001054  C0BD  F0D6         	movff	_off_line_sum+1,WriteIntEEPROM@data+1
  6390  001058  EC43  F00F         	call	_WriteIntEEPROM	;wreg free
  6391                           
  6392                           ;FastBuggy17_Main_Code_TUNING.c: 533: WriteCharEEPROM(0x0000, 1);
  6393  00105C  0E00               	movlw	0
  6394  00105E  0100               	movlb	0	; () banked
  6395  001060  6FD4               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6396  001062  0E00               	movlw	0
  6397  001064  6FD3               	movwf	WriteCharEEPROM@address& (0+255),b
  6398  001066  0E01               	movlw	1
  6399  001068  0100               	movlb	0	; () banked
  6400  00106A  6FD5               	movwf	WriteCharEEPROM@data& (0+255),b
  6401  00106C  EC2E  F011         	call	_WriteCharEEPROM	;wreg free
  6402  001070  0012               	return		;funcret
  6403  001072                     __end_of_GenerateCalibration:
  6404                           	opt stack 0
  6405                           prodh	equ	0xFF4
  6406                           prodl	equ	0xFF3
  6407                           postinc0	equ	0xFEE
  6408                           wreg	equ	0xFE8
  6409                           indf2	equ	0xFDF
  6410                           postinc2	equ	0xFDE
  6411                           postdec2	equ	0xFDD
  6412                           fsr2h	equ	0xFDA
  6413                           fsr2l	equ	0xFD9
  6414                           status	equ	0xFD8
  6415                           
  6416 ;; *************** function _WriteIntEEPROM *****************
  6417 ;; Defined at:
  6418 ;;		line 63 in file "eeprom.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  address         2   19[BANK0 ] unsigned int 
  6421 ;;  data            2   21[BANK0 ] unsigned int 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;		None               void
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0, cstack
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;Total ram usage:        4 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    8
  6440 ;; This function calls:
  6441 ;;		_WriteEEPROM
  6442 ;; This function is called by:
  6443 ;;		_GenerateCalibration
  6444 ;;		_SetPIDValues
  6445 ;;		_LoadPIDValues
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text43
  6450  001E86                     __ptext43:
  6451                           	opt stack 0
  6452  001E86                     _WriteIntEEPROM:
  6453                           	opt stack 21
  6454                           
  6455                           ;eeprom.c: 64: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6456                           
  6457                           ;incstack = 0
  6458  001E86  C0D3  F0D0         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6459  001E8A  C0D4  F0D1         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6460  001E8E  0100               	movlb	0	; () banked
  6461  001E90  51D6               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6462  001E92  0100               	movlb	0	; () banked
  6463  001E94  6FD2               	movwf	WriteEEPROM@data& (0+255),b
  6464  001E96  ECEB  F00D         	call	_WriteEEPROM	;wreg free
  6465                           
  6466                           ;eeprom.c: 65: WriteEEPROM(address + 1, (data & 0x00FF));
  6467  001E9A  0E01               	movlw	1
  6468  001E9C  0100               	movlb	0	; () banked
  6469  001E9E  25D3               	addwf	WriteIntEEPROM@address& (0+255),w,b
  6470  001EA0  0100               	movlb	0	; () banked
  6471  001EA2  6FD0               	movwf	WriteEEPROM@address& (0+255),b
  6472  001EA4  0E00               	movlw	0
  6473  001EA6  0100               	movlb	0	; () banked
  6474  001EA8  21D4               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  6475  001EAA  0100               	movlb	0	; () banked
  6476  001EAC  6FD1               	movwf	(WriteEEPROM@address+1)& (0+255),b
  6477  001EAE  C0D5  F0D2         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  6478  001EB2  ECEB  F00D         	call	_WriteEEPROM	;wreg free
  6479  001EB6  0012               	return		;funcret
  6480  001EB8                     __end_of_WriteIntEEPROM:
  6481                           	opt stack 0
  6482                           prodh	equ	0xFF4
  6483                           prodl	equ	0xFF3
  6484                           postinc0	equ	0xFEE
  6485                           wreg	equ	0xFE8
  6486                           indf2	equ	0xFDF
  6487                           postinc2	equ	0xFDE
  6488                           postdec2	equ	0xFDD
  6489                           fsr2h	equ	0xFDA
  6490                           fsr2l	equ	0xFD9
  6491                           status	equ	0xFD8
  6492                           
  6493 ;; *************** function _WriteCharEEPROM *****************
  6494 ;; Defined at:
  6495 ;;		line 69 in file "eeprom.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  address         2   19[BANK0 ] unsigned int 
  6498 ;;  data            1   21[BANK0 ] unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;		None               void
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6510 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;Total ram usage:        3 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    8
  6517 ;; This function calls:
  6518 ;;		_WriteEEPROM
  6519 ;; This function is called by:
  6520 ;;		_GenerateCalibration
  6521 ;;		_SetPIDValues
  6522 ;;		_LoadPIDValues
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text44
  6527  00225C                     __ptext44:
  6528                           	opt stack 0
  6529  00225C                     _WriteCharEEPROM:
  6530                           	opt stack 21
  6531                           
  6532                           ;eeprom.c: 70: WriteEEPROM(address, data);
  6533                           
  6534                           ;incstack = 0
  6535  00225C  C0D3  F0D0         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  6536  002260  C0D4  F0D1         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  6537  002264  C0D5  F0D2         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  6538  002268  ECEB  F00D         	call	_WriteEEPROM	;wreg free
  6539  00226C  0012               	return		;funcret
  6540  00226E                     __end_of_WriteCharEEPROM:
  6541                           	opt stack 0
  6542                           prodh	equ	0xFF4
  6543                           prodl	equ	0xFF3
  6544                           postinc0	equ	0xFEE
  6545                           wreg	equ	0xFE8
  6546                           indf2	equ	0xFDF
  6547                           postinc2	equ	0xFDE
  6548                           postdec2	equ	0xFDD
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function _WriteEEPROM *****************
  6554 ;; Defined at:
  6555 ;;		line 3 in file "eeprom.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  address         2   16[BANK0 ] unsigned int 
  6558 ;;  data            1   18[BANK0 ] unsigned char 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      unsigned char 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6570 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;Total ram usage:        3 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    7
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_WriteIntEEPROM
  6581 ;;		_WriteCharEEPROM
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text45
  6586  001BD6                     __ptext45:
  6587                           	opt stack 0
  6588  001BD6                     _WriteEEPROM:
  6589                           	opt stack 21
  6590                           
  6591                           ;eeprom.c: 4: if(address > 0x03FF) {
  6592                           
  6593                           ;incstack = 0
  6594  001BD6  0E04               	movlw	4
  6595  001BD8  0100               	movlb	0	; () banked
  6596  001BDA  5DD1               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  6597  001BDC  B0D8               	btfsc	status,0,c
  6598  001BDE  D01A               	goto	l214
  6599  001BE0  D001               	goto	l213
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;eeprom.c: 6: }
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;eeprom.c: 5: return(1);
  6606                           ;	Return value of _WriteEEPROM is never used
  6607  001BE2  D018               	goto	l214
  6608  001BE4                     l213:
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;eeprom.c: 7: else {
  6612                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  6613  001BE4  C0D0  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  6617  001BE8  0100               	movlb	0	; () banked
  6618  001BEA  51D1               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  6619  001BEC  0B03               	andlw	3
  6620  001BEE  6EAA               	movwf	4010,c	;volatile
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;eeprom.c: 10: EEDATA = data;
  6624  001BF0  C0D2  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  6628  001BF4  9EA6               	bcf	4006,7,c	;volatile
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  6632  001BF6  9CA6               	bcf	4006,6,c	;volatile
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  6636  001BF8  84A6               	bsf	4006,2,c	;volatile
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  6640  001BFA  9EF2               	bcf	intcon,7,c	;volatile
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;eeprom.c: 17: EECON2 = 0x55;
  6644  001BFC  0E55               	movlw	85
  6645  001BFE  6EA7               	movwf	4007,c	;volatile
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;eeprom.c: 18: EECON2 = 0x0AA;
  6649  001C00  0EAA               	movlw	170
  6650  001C02  6EA7               	movwf	4007,c	;volatile
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;eeprom.c: 19: EECON1bits.WR = 1;
  6654  001C04  82A6               	bsf	4006,1,c	;volatile
  6655                           
  6656                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  6657  001C06  D000               	goto	l216
  6658  001C08                     l216:
  6659  001C08  B2A6               	btfsc	4006,1,c	;volatile
  6660  001C0A  D7FE               	goto	l216
  6661                           
  6662                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  6663  001C0C  94A6               	bcf	4006,2,c	;volatile
  6664                           
  6665                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  6666  001C0E  8EF2               	bsf	intcon,7,c	;volatile
  6667                           
  6668                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  6669  001C10  50A6               	movf	4006,w,c	;volatile
  6670                           
  6671                           ;eeprom.c: 29: else {
  6672                           ;eeprom.c: 30: return(1);
  6673                           ;	Return value of _WriteEEPROM is never used
  6674                           
  6675                           ;eeprom.c: 28: }
  6676                           
  6677                           ;eeprom.c: 27: return(0);
  6678                           ;	Return value of _WriteEEPROM is never used
  6679  001C12  D000               	goto	l214
  6680  001C14                     l214:
  6681  001C14  0012               	return		;funcret
  6682  001C16                     __end_of_WriteEEPROM:
  6683                           	opt stack 0
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           postinc0	equ	0xFEE
  6688                           wreg	equ	0xFE8
  6689                           indf2	equ	0xFDF
  6690                           postinc2	equ	0xFDE
  6691                           postdec2	equ	0xFDD
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _FlashLEDS *****************
  6697 ;; Defined at:
  6698 ;;		line 399 in file "FastBuggy17_Main_Code_TUNING.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;		None               void
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;Total ram usage:        0 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    8
  6719 ;; This function calls:
  6720 ;;		_Delay10KTCYx
  6721 ;; This function is called by:
  6722 ;;		_GenerateCalibration
  6723 ;;		_main
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text46
  6728  001F9E                     __ptext46:
  6729                           	opt stack 0
  6730  001F9E                     _FlashLEDS:
  6731                           	opt stack 20
  6732                           
  6733                           ;FastBuggy17_Main_Code_TUNING.c: 400: LATJ = 0x00;
  6734                           
  6735                           ;incstack = 0
  6736  001F9E  0E00               	movlw	0
  6737  001FA0  6E91               	movwf	3985,c	;volatile
  6738                           
  6739                           ;FastBuggy17_Main_Code_TUNING.c: 401: LATJ = 0x1F;
  6740  001FA2  0E1F               	movlw	31
  6741  001FA4  6E91               	movwf	3985,c	;volatile
  6742                           
  6743                           ;FastBuggy17_Main_Code_TUNING.c: 402: Delay10KTCYx(75);
  6744  001FA6  0E4B               	movlw	75
  6745  001FA8  EC99  F010         	call	_Delay10KTCYx
  6746                           
  6747                           ;FastBuggy17_Main_Code_TUNING.c: 403: LATJ = 0x00;
  6748  001FAC  0E00               	movlw	0
  6749  001FAE  6E91               	movwf	3985,c	;volatile
  6750                           
  6751                           ;FastBuggy17_Main_Code_TUNING.c: 404: Delay10KTCYx(75);
  6752  001FB0  0E4B               	movlw	75
  6753  001FB2  EC99  F010         	call	_Delay10KTCYx
  6754                           
  6755                           ;FastBuggy17_Main_Code_TUNING.c: 405: LATJ = 0x1F;
  6756  001FB6  0E1F               	movlw	31
  6757  001FB8  6E91               	movwf	3985,c	;volatile
  6758                           
  6759                           ;FastBuggy17_Main_Code_TUNING.c: 406: Delay10KTCYx(75);
  6760  001FBA  0E4B               	movlw	75
  6761  001FBC  EC99  F010         	call	_Delay10KTCYx
  6762                           
  6763                           ;FastBuggy17_Main_Code_TUNING.c: 407: LATJ = 0x00;
  6764  001FC0  0E00               	movlw	0
  6765  001FC2  6E91               	movwf	3985,c	;volatile
  6766  001FC4  0012               	return		;funcret
  6767  001FC6                     __end_of_FlashLEDS:
  6768                           	opt stack 0
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           intcon	equ	0xFF2
  6772                           postinc0	equ	0xFEE
  6773                           wreg	equ	0xFE8
  6774                           indf2	equ	0xFDF
  6775                           postinc2	equ	0xFDE
  6776                           postdec2	equ	0xFDD
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _Delay10KTCYx *****************
  6782 ;; Defined at:
  6783 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  unit            1    wreg     unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  unit            1   17[BANK0 ] unsigned char 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;		None               void
  6790 ;; Registers used:
  6791 ;;		wreg
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;Total ram usage:        2 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    7
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_FlashLEDS
  6808 ;;		_main
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text47
  6813  002132                     __ptext47:
  6814                           	opt stack 0
  6815  002132                     _Delay10KTCYx:
  6816                           	opt stack 20
  6817                           
  6818                           ;incstack = 0
  6819                           ;Delay10KTCYx@unit stored from wreg
  6820  002132  0100               	movlb	0	; () banked
  6821  002134  6FD1               	movwf	Delay10KTCYx@unit& (0+255),b
  6822  002136                     
  6823                           ; BSR set to: 0
  6824  002136  0E0D               	movlw	13
  6825  002138  0100               	movlb	0	; () banked
  6826  00213A  6FD0               	movwf	??_Delay10KTCYx& (0+255),b
  6827  00213C  0EFC               	movlw	252
  6828  00213E                     u6197:
  6829  00213E  2EE8               	decfsz	wreg,f,c
  6830  002140  D7FE               	goto	u6197
  6831  002142  2FD0               	decfsz	??_Delay10KTCYx& (0+255),f,b
  6832  002144  D7FC               	goto	u6197
  6833  002146  0100               	movlb	0	; () banked
  6834  002148  2FD1               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  6835  00214A  D7F5               	goto	l5530
  6836  00214C  D000               	goto	l1454
  6837  00214E                     l1454:
  6838                           
  6839                           ; BSR set to: 0
  6840  00214E  0012               	return		;funcret
  6841  002150                     __end_of_Delay10KTCYx:
  6842                           	opt stack 0
  6843                           prodh	equ	0xFF4
  6844                           prodl	equ	0xFF3
  6845                           intcon	equ	0xFF2
  6846                           postinc0	equ	0xFEE
  6847                           wreg	equ	0xFE8
  6848                           indf2	equ	0xFDF
  6849                           postinc2	equ	0xFDE
  6850                           postdec2	equ	0xFDD
  6851                           fsr2h	equ	0xFDA
  6852                           fsr2l	equ	0xFD9
  6853                           status	equ	0xFD8
  6854                           
  6855 ;; *************** function _CalibrateOnLine *****************
  6856 ;; Defined at:
  6857 ;;		line 484 in file "FastBuggy17_Main_Code_TUNING.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;		None               void
  6864 ;; Registers used:
  6865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;Total ram usage:        0 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:   10
  6878 ;; This function calls:
  6879 ;;		_BusySensorAcq
  6880 ;;		_CalculateSensorSum
  6881 ;;		_GetSensorReadings
  6882 ;;		_NormaliseSensorReadings
  6883 ;;		_PB1pressed
  6884 ;;		_SendStatus
  6885 ;; This function is called by:
  6886 ;;		_GenerateCalibration
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text48
  6891  00185A                     __ptext48:
  6892                           	opt stack 0
  6893  00185A                     _CalibrateOnLine:
  6894                           	opt stack 18
  6895                           
  6896                           ;FastBuggy17_Main_Code_TUNING.c: 485: SendStatus(0x04);
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;incstack = 0
  6900  00185A  0E04               	movlw	4
  6901  00185C  EC66  F00E         	call	_SendStatus
  6902                           
  6903                           ;FastBuggy17_Main_Code_TUNING.c: 486: LATJ = 0x07;
  6904  001860  0E07               	movlw	7
  6905  001862  6E91               	movwf	3985,c	;volatile
  6906                           
  6907                           ;FastBuggy17_Main_Code_TUNING.c: 488: while(PB1pressed() == 0);
  6908  001864  D000               	goto	l5688
  6909  001866                     l5688:
  6910  001866  ECBD  F00C         	call	_PB1pressed	;wreg free
  6911  00186A  0900               	iorlw	0
  6912  00186C  B4D8               	btfsc	status,2,c
  6913  00186E  D7FB               	goto	l5688
  6914                           
  6915                           ;FastBuggy17_Main_Code_TUNING.c: 490: GetSensorReadings();
  6916  001870  ECEE  F010         	call	_GetSensorReadings	;wreg free
  6917                           
  6918                           ;FastBuggy17_Main_Code_TUNING.c: 491: while(BusySensorAcq() == 1);
  6919  001874  D000               	goto	l5692
  6920  001876                     l5692:
  6921  001876  EC74  F011         	call	_BusySensorAcq	;wreg free
  6922  00187A  06E8               	decf	wreg,f,c
  6923  00187C  B4D8               	btfsc	status,2,c
  6924  00187E  D7FB               	goto	l5692
  6925                           
  6926                           ;FastBuggy17_Main_Code_TUNING.c: 492: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  6927  001880  0EAE               	movlw	low _sensor_readings_raw
  6928  001882  0100               	movlb	0	; () banked
  6929  001884  6FD0               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  6930  001886  0E00               	movlw	high _sensor_readings_raw
  6931  001888  0100               	movlb	0	; () banked
  6932  00188A  6FD1               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  6933  00188C  0E9A               	movlw	low _sensor_offsets
  6934  00188E  0100               	movlb	0	; () banked
  6935  001890  6FD2               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  6936  001892  0E00               	movlw	high _sensor_offsets
  6937  001894  0100               	movlb	0	; () banked
  6938  001896  6FD3               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  6939  001898  EC3C  F00A         	call	_NormaliseSensorReadings	;wreg free
  6940                           
  6941                           ;FastBuggy17_Main_Code_TUNING.c: 494: sensor_threshold = sensor_readings_normalised[2];
  6942  00189C  C0A8  F0BE         	movff	_sensor_readings_normalised+4,_sensor_threshold
  6943  0018A0  C0A9  F0BF         	movff	_sensor_readings_normalised+5,_sensor_threshold+1
  6944                           
  6945                           ;FastBuggy17_Main_Code_TUNING.c: 495: PID_set_point = CalculateSensorSum(sensor_readings
      +                          _normalised);
  6946  0018A4  0EA4               	movlw	low _sensor_readings_normalised
  6947  0018A6  0100               	movlb	0	; () banked
  6948  0018A8  6FD6               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  6949  0018AA  0E00               	movlw	high _sensor_readings_normalised
  6950  0018AC  0100               	movlb	0	; () banked
  6951  0018AE  6FD7               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  6952  0018B0  EC3C  F005         	call	_CalculateSensorSum	;wreg free
  6953  0018B4  C0D6  F0BA         	movff	?_CalculateSensorSum,_PID_set_point
  6954  0018B8  C0D7  F0BB         	movff	?_CalculateSensorSum+1,_PID_set_point+1
  6955  0018BC  0012               	return		;funcret
  6956  0018BE                     __end_of_CalibrateOnLine:
  6957                           	opt stack 0
  6958                           prodh	equ	0xFF4
  6959                           prodl	equ	0xFF3
  6960                           intcon	equ	0xFF2
  6961                           postinc0	equ	0xFEE
  6962                           wreg	equ	0xFE8
  6963                           indf2	equ	0xFDF
  6964                           postinc2	equ	0xFDE
  6965                           postdec2	equ	0xFDD
  6966                           fsr2h	equ	0xFDA
  6967                           fsr2l	equ	0xFD9
  6968                           status	equ	0xFD8
  6969                           
  6970 ;; *************** function _CalibrateOffsets *****************
  6971 ;; Defined at:
  6972 ;;		line 465 in file "FastBuggy17_Main_Code_TUNING.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;		None
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  index           1   27[BANK0 ] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;		None               void
  6979 ;; Registers used:
  6980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:        3 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:   10
  6993 ;; This function calls:
  6994 ;;		_BusySensorAcq
  6995 ;;		_GetSensorReadings
  6996 ;;		_PB1pressed
  6997 ;;		_SendStatus
  6998 ;; This function is called by:
  6999 ;;		_GenerateCalibration
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text49
  7004  001264                     __ptext49:
  7005                           	opt stack 0
  7006  001264                     _CalibrateOffsets:
  7007                           	opt stack 18
  7008                           
  7009                           ;FastBuggy17_Main_Code_TUNING.c: 466: unsigned char index;
  7010                           ;FastBuggy17_Main_Code_TUNING.c: 468: SendStatus(0x03);
  7011                           
  7012                           ;incstack = 0
  7013  001264  0E03               	movlw	3
  7014  001266  EC66  F00E         	call	_SendStatus
  7015                           
  7016                           ;FastBuggy17_Main_Code_TUNING.c: 469: LATJ = 0x07;
  7017  00126A  0E07               	movlw	7
  7018  00126C  6E91               	movwf	3985,c	;volatile
  7019                           
  7020                           ;FastBuggy17_Main_Code_TUNING.c: 471: while(PB1pressed() == 0);
  7021  00126E  D000               	goto	l5666
  7022  001270                     l5666:
  7023  001270  ECBD  F00C         	call	_PB1pressed	;wreg free
  7024  001274  0900               	iorlw	0
  7025  001276  B4D8               	btfsc	status,2,c
  7026  001278  D7FB               	goto	l5666
  7027                           
  7028                           ;FastBuggy17_Main_Code_TUNING.c: 473: GetSensorReadings();
  7029  00127A  ECEE  F010         	call	_GetSensorReadings	;wreg free
  7030                           
  7031                           ;FastBuggy17_Main_Code_TUNING.c: 474: while(BusySensorAcq());
  7032  00127E  D000               	goto	l5670
  7033  001280                     l5670:
  7034  001280  EC74  F011         	call	_BusySensorAcq	;wreg free
  7035  001284  0900               	iorlw	0
  7036  001286  A4D8               	btfss	status,2,c
  7037  001288  D7FB               	goto	l5670
  7038                           
  7039                           ;FastBuggy17_Main_Code_TUNING.c: 476: for(index = 0; index < 5; index++) {
  7040  00128A  0E00               	movlw	0
  7041  00128C  0100               	movlb	0	; () banked
  7042  00128E  6FDB               	movwf	CalibrateOffsets@index& (0+255),b
  7043  001290                     l5674:
  7044                           
  7045                           ; BSR set to: 0
  7046  001290  0E04               	movlw	4
  7047  001292  0100               	movlb	0	; () banked
  7048  001294  65DB               	cpfsgt	CalibrateOffsets@index& (0+255),b
  7049  001296  D001               	goto	l5678
  7050                           
  7051                           ; BSR set to: 0
  7052  001298  D02A               	goto	l886
  7053  00129A                     l5678:
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;FastBuggy17_Main_Code_TUNING.c: 478: sensor_offsets[index] = sensor_readings_raw[2] - s
      +                          ensor_readings_raw[index];
  7057  00129A  0100               	movlb	0	; () banked
  7058  00129C  51DB               	movf	CalibrateOffsets@index& (0+255),w,b
  7059  00129E  0D02               	mullw	2
  7060  0012A0  0EAE               	movlw	low _sensor_readings_raw
  7061  0012A2  24F3               	addwf	prodl,w,c
  7062  0012A4  6ED9               	movwf	fsr2l,c
  7063  0012A6  0E00               	movlw	high _sensor_readings_raw
  7064  0012A8  20F4               	addwfc	prodh,w,c
  7065  0012AA  6EDA               	movwf	fsr2h,c
  7066  0012AC  CFDE F0D9          	movff	postinc2,??_CalibrateOffsets
  7067  0012B0  CFDD F0DA          	movff	postdec2,??_CalibrateOffsets+1
  7068  0012B4  0100               	movlb	0	; () banked
  7069  0012B6  1FD9               	comf	??_CalibrateOffsets& (0+255),f,b
  7070  0012B8  1FDA               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  7071  0012BA  4BD9               	infsnz	??_CalibrateOffsets& (0+255),f,b
  7072  0012BC  2BDA               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  7073  0012BE  0100               	movlb	0	; () banked
  7074  0012C0  51B2               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  7075  0012C2  0100               	movlb	0	; () banked
  7076  0012C4  27D9               	addwf	??_CalibrateOffsets& (0+255),f,b
  7077  0012C6  0100               	movlb	0	; () banked
  7078  0012C8  51B3               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  7079  0012CA  0100               	movlb	0	; () banked
  7080  0012CC  23DA               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  7081  0012CE  0100               	movlb	0	; () banked
  7082  0012D0  51DB               	movf	CalibrateOffsets@index& (0+255),w,b
  7083  0012D2  0D02               	mullw	2
  7084  0012D4  0E9A               	movlw	low _sensor_offsets
  7085  0012D6  24F3               	addwf	prodl,w,c
  7086  0012D8  6ED9               	movwf	fsr2l,c
  7087  0012DA  0E00               	movlw	high _sensor_offsets
  7088  0012DC  20F4               	addwfc	prodh,w,c
  7089  0012DE  6EDA               	movwf	fsr2h,c
  7090  0012E0  C0D9  FFDE         	movff	??_CalibrateOffsets,postinc2
  7091  0012E4  C0DA  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  7092                           
  7093                           ; BSR set to: 0
  7094  0012E8  0100               	movlb	0	; () banked
  7095  0012EA  2BDB               	incf	CalibrateOffsets@index& (0+255),f,b
  7096  0012EC  D7D1               	goto	l5674
  7097  0012EE                     l886:
  7098                           
  7099                           ; BSR set to: 0
  7100  0012EE  0012               	return		;funcret
  7101  0012F0                     __end_of_CalibrateOffsets:
  7102                           	opt stack 0
  7103                           prodh	equ	0xFF4
  7104                           prodl	equ	0xFF3
  7105                           intcon	equ	0xFF2
  7106                           postinc0	equ	0xFEE
  7107                           wreg	equ	0xFE8
  7108                           indf2	equ	0xFDF
  7109                           postinc2	equ	0xFDE
  7110                           postdec2	equ	0xFDD
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8
  7114                           
  7115 ;; *************** function _CalibrateOffLine *****************
  7116 ;; Defined at:
  7117 ;;		line 499 in file "FastBuggy17_Main_Code_TUNING.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;		None               void
  7124 ;; Registers used:
  7125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:   10
  7138 ;; This function calls:
  7139 ;;		_BusySensorAcq
  7140 ;;		_CalculateSensorSum
  7141 ;;		_GetSensorReadings
  7142 ;;		_NormaliseSensorReadings
  7143 ;;		_PB1pressed
  7144 ;;		_SendStatus
  7145 ;; This function is called by:
  7146 ;;		_GenerateCalibration
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text50
  7151  0019D8                     __ptext50:
  7152                           	opt stack 0
  7153  0019D8                     _CalibrateOffLine:
  7154                           	opt stack 18
  7155                           
  7156                           ;FastBuggy17_Main_Code_TUNING.c: 500: SendStatus(0x05);
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;incstack = 0
  7160  0019D8  0E05               	movlw	5
  7161  0019DA  EC66  F00E         	call	_SendStatus
  7162                           
  7163                           ;FastBuggy17_Main_Code_TUNING.c: 501: LATJ = 0x07;
  7164  0019DE  0E07               	movlw	7
  7165  0019E0  6E91               	movwf	3985,c	;volatile
  7166                           
  7167                           ;FastBuggy17_Main_Code_TUNING.c: 503: while(PB1pressed() == 0);
  7168  0019E2  D000               	goto	l5702
  7169  0019E4                     l5702:
  7170  0019E4  ECBD  F00C         	call	_PB1pressed	;wreg free
  7171  0019E8  0900               	iorlw	0
  7172  0019EA  B4D8               	btfsc	status,2,c
  7173  0019EC  D7FB               	goto	l5702
  7174                           
  7175                           ;FastBuggy17_Main_Code_TUNING.c: 505: GetSensorReadings();
  7176  0019EE  ECEE  F010         	call	_GetSensorReadings	;wreg free
  7177                           
  7178                           ;FastBuggy17_Main_Code_TUNING.c: 506: while(BusySensorAcq() == 1);
  7179  0019F2  D000               	goto	l5706
  7180  0019F4                     l5706:
  7181  0019F4  EC74  F011         	call	_BusySensorAcq	;wreg free
  7182  0019F8  06E8               	decf	wreg,f,c
  7183  0019FA  B4D8               	btfsc	status,2,c
  7184  0019FC  D7FB               	goto	l5706
  7185                           
  7186                           ;FastBuggy17_Main_Code_TUNING.c: 507: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7187  0019FE  0EAE               	movlw	low _sensor_readings_raw
  7188  001A00  0100               	movlb	0	; () banked
  7189  001A02  6FD0               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7190  001A04  0E00               	movlw	high _sensor_readings_raw
  7191  001A06  0100               	movlb	0	; () banked
  7192  001A08  6FD1               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7193  001A0A  0E9A               	movlw	low _sensor_offsets
  7194  001A0C  0100               	movlb	0	; () banked
  7195  001A0E  6FD2               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7196  001A10  0E00               	movlw	high _sensor_offsets
  7197  001A12  0100               	movlb	0	; () banked
  7198  001A14  6FD3               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7199  001A16  EC3C  F00A         	call	_NormaliseSensorReadings	;wreg free
  7200                           
  7201                           ;FastBuggy17_Main_Code_TUNING.c: 509: off_line_sum = CalculateSensorSum(sensor_readings_
      +                          normalised);
  7202  001A1A  0EA4               	movlw	low _sensor_readings_normalised
  7203  001A1C  0100               	movlb	0	; () banked
  7204  001A1E  6FD6               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  7205  001A20  0E00               	movlw	high _sensor_readings_normalised
  7206  001A22  0100               	movlb	0	; () banked
  7207  001A24  6FD7               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  7208  001A26  EC3C  F005         	call	_CalculateSensorSum	;wreg free
  7209  001A2A  C0D6  F0BC         	movff	?_CalculateSensorSum,_off_line_sum
  7210  001A2E  C0D7  F0BD         	movff	?_CalculateSensorSum+1,_off_line_sum+1
  7211  001A32  0012               	return		;funcret
  7212  001A34                     __end_of_CalibrateOffLine:
  7213                           	opt stack 0
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           intcon	equ	0xFF2
  7217                           postinc0	equ	0xFEE
  7218                           wreg	equ	0xFE8
  7219                           indf2	equ	0xFDF
  7220                           postinc2	equ	0xFDE
  7221                           postdec2	equ	0xFDD
  7222                           fsr2h	equ	0xFDA
  7223                           fsr2l	equ	0xFD9
  7224                           status	equ	0xFD8
  7225                           
  7226 ;; *************** function _SendStatus *****************
  7227 ;; Defined at:
  7228 ;;		line 139 in file "Wireless.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  status_code     1    wreg     const unsigned char 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  status_code     1   24[BANK0 ] const unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;		None               void
  7235 ;; Registers used:
  7236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;Total ram usage:        1 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    9
  7249 ;; This function calls:
  7250 ;;		_BusyTx
  7251 ;;		_FlushTxBuf
  7252 ;;		_PutCharTxBuf
  7253 ;;		_StartTx
  7254 ;; This function is called by:
  7255 ;;		_CalibrateOffsets
  7256 ;;		_CalibrateOnLine
  7257 ;;		_CalibrateOffLine
  7258 ;;		_SetPIDValues
  7259 ;;		_LoadPIDValues
  7260 ;;		_main
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text51
  7265  001CCC                     __ptext51:
  7266                           	opt stack 0
  7267  001CCC                     _SendStatus:
  7268                           	opt stack 20
  7269                           
  7270                           ;incstack = 0
  7271                           ;SendStatus@status_code stored from wreg
  7272  001CCC  0100               	movlb	0	; () banked
  7273  001CCE  6FD8               	movwf	SendStatus@status_code& (0+255),b
  7274                           
  7275                           ; BSR set to: 0
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;Wireless.c: 140: while(BusyTx());
  7279  001CD0  D000               	goto	l5484
  7280  001CD2                     l5484:
  7281  001CD2  EC6C  F011         	call	_BusyTx	;wreg free
  7282  001CD6  0900               	iorlw	0
  7283  001CD8  A4D8               	btfss	status,2,c
  7284  001CDA  D7FB               	goto	l5484
  7285                           
  7286                           ;Wireless.c: 141: FlushTxBuf();
  7287  001CDC  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  7288                           
  7289                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  7290  001CE0  0EAA               	movlw	170
  7291  001CE2  ECCA  F00D         	call	_PutCharTxBuf
  7292                           
  7293                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  7294  001CE6  0E01               	movlw	1
  7295  001CE8  ECCA  F00D         	call	_PutCharTxBuf
  7296                           
  7297                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  7298  001CEC  0100               	movlb	0	; () banked
  7299  001CEE  51D8               	movf	SendStatus@status_code& (0+255),w,b
  7300  001CF0  ECCA  F00D         	call	_PutCharTxBuf
  7301                           
  7302                           ;Wireless.c: 146: PutCharTxBuf('\r');
  7303  001CF4  0E0D               	movlw	13
  7304  001CF6  ECCA  F00D         	call	_PutCharTxBuf
  7305                           
  7306                           ;Wireless.c: 147: PutCharTxBuf('\n');
  7307  001CFA  0E0A               	movlw	10
  7308  001CFC  ECCA  F00D         	call	_PutCharTxBuf
  7309                           
  7310                           ;Wireless.c: 149: StartTx();
  7311  001D00  ECD8  F011         	call	_StartTx	;wreg free
  7312  001D04  0012               	return		;funcret
  7313  001D06                     __end_of_SendStatus:
  7314                           	opt stack 0
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           intcon	equ	0xFF2
  7318                           postinc0	equ	0xFEE
  7319                           wreg	equ	0xFE8
  7320                           indf2	equ	0xFDF
  7321                           postinc2	equ	0xFDE
  7322                           postdec2	equ	0xFDD
  7323                           fsr2h	equ	0xFDA
  7324                           fsr2l	equ	0xFD9
  7325                           status	equ	0xFD8
  7326                           
  7327 ;; *************** function _StartTx *****************
  7328 ;; Defined at:
  7329 ;;		line 41 in file "Wireless.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;		None               void
  7336 ;; Registers used:
  7337 ;;		wreg, status,2
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;Total ram usage:        0 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    7
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_SendStatus
  7354 ;;		_SendLineMode
  7355 ;;		_SendOffsets
  7356 ;;		_SendDefaultPIDValues
  7357 ;;		_SendStoredPIDValues
  7358 ;;		_SendCurrentPIDValues
  7359 ;;		_SendBattVoltageInitial
  7360 ;;		_SendPIDSetPointOnLine
  7361 ;;		_SendPIDSetPointOffLine
  7362 ;;		_SendThreshold
  7363 ;;		_SendBattVoltage
  7364 ;;		_SendBattCurrent
  7365 ;;		_SendBattCurrentAcc
  7366 ;;		_SendPIDError
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text52
  7371  0023B0                     __ptext52:
  7372                           	opt stack 0
  7373  0023B0                     _StartTx:
  7374                           	opt stack 21
  7375                           
  7376                           ;Wireless.c: 42: Tx_complete = 0;
  7377                           
  7378                           ;incstack = 0
  7379  0023B0  0E00               	movlw	0
  7380  0023B2  6E1A               	movwf	_Tx_complete,c
  7381                           
  7382                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  7383  0023B4  889D               	bsf	3997,4,c	;volatile
  7384  0023B6  0012               	return		;funcret
  7385  0023B8                     __end_of_StartTx:
  7386                           	opt stack 0
  7387                           prodh	equ	0xFF4
  7388                           prodl	equ	0xFF3
  7389                           intcon	equ	0xFF2
  7390                           postinc0	equ	0xFEE
  7391                           wreg	equ	0xFE8
  7392                           indf2	equ	0xFDF
  7393                           postinc2	equ	0xFDE
  7394                           postdec2	equ	0xFDD
  7395                           fsr2h	equ	0xFDA
  7396                           fsr2l	equ	0xFD9
  7397                           status	equ	0xFD8
  7398                           
  7399 ;; *************** function _PutCharTxBuf *****************
  7400 ;; Defined at:
  7401 ;;		line 9 in file "Wireless.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  ch              1    wreg     unsigned char 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  ch              1   23[BANK0 ] unsigned char 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;		None               void
  7408 ;; Registers used:
  7409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;Total ram usage:        2 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    8
  7422 ;; This function calls:
  7423 ;;		___awmod
  7424 ;; This function is called by:
  7425 ;;		_SendStatus
  7426 ;;		_SendLineMode
  7427 ;;		_SendOffsets
  7428 ;;		_SendDefaultPIDValues
  7429 ;;		_SendStoredPIDValues
  7430 ;;		_SendCurrentPIDValues
  7431 ;;		_SendBattVoltageInitial
  7432 ;;		_SendPIDSetPointOnLine
  7433 ;;		_SendPIDSetPointOffLine
  7434 ;;		_SendThreshold
  7435 ;;		_SendBattVoltage
  7436 ;;		_SendBattCurrent
  7437 ;;		_SendBattCurrentAcc
  7438 ;;		_SendPIDError
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text53
  7443  001B94                     __ptext53:
  7444                           	opt stack 0
  7445  001B94                     _PutCharTxBuf:
  7446                           	opt stack 20
  7447                           
  7448                           ;incstack = 0
  7449                           ;PutCharTxBuf@ch stored from wreg
  7450  001B94  0100               	movlb	0	; () banked
  7451  001B96  6FD7               	movwf	PutCharTxBuf@ch& (0+255),b
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  7455  001B98  5020               	movf	_put_Tx_index,w,c
  7456  001B9A  0D01               	mullw	1
  7457  001B9C  0E79               	movlw	low _Tx_buffer
  7458  001B9E  24F3               	addwf	prodl,w,c
  7459  001BA0  6ED9               	movwf	fsr2l,c
  7460  001BA2  0E00               	movlw	high _Tx_buffer
  7461  001BA4  20F4               	addwfc	prodh,w,c
  7462  001BA6  6EDA               	movwf	fsr2h,c
  7463  001BA8  C0D7  FFDF         	movff	PutCharTxBuf@ch,indf2
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  7467  001BAC  C020  F0D6         	movff	_put_Tx_index,??_PutCharTxBuf
  7468  001BB0  0E01               	movlw	1
  7469  001BB2  0100               	movlb	0	; () banked
  7470  001BB4  27D6               	addwf	??_PutCharTxBuf& (0+255),f,b
  7471  001BB6  0100               	movlb	0	; () banked
  7472  001BB8  51D6               	movf	??_PutCharTxBuf& (0+255),w,b
  7473  001BBA  0100               	movlb	0	; () banked
  7474  001BBC  6FD0               	movwf	___awmod@dividend& (0+255),b
  7475  001BBE  6BD1               	clrf	(___awmod@dividend+1)& (0+255),b
  7476  001BC0  0E00               	movlw	0
  7477  001BC2  0100               	movlb	0	; () banked
  7478  001BC4  6FD3               	movwf	(___awmod@divisor+1)& (0+255),b
  7479  001BC6  0E19               	movlw	25
  7480  001BC8  6FD2               	movwf	___awmod@divisor& (0+255),b
  7481  001BCA  EC87  F007         	call	___awmod	;wreg free
  7482  001BCE  0100               	movlb	0	; () banked
  7483  001BD0  51D0               	movf	?___awmod& (0+255),w,b
  7484  001BD2  6E20               	movwf	_put_Tx_index,c
  7485                           
  7486                           ; BSR set to: 0
  7487  001BD4  0012               	return		;funcret
  7488  001BD6                     __end_of_PutCharTxBuf:
  7489                           	opt stack 0
  7490                           prodh	equ	0xFF4
  7491                           prodl	equ	0xFF3
  7492                           intcon	equ	0xFF2
  7493                           postinc0	equ	0xFEE
  7494                           wreg	equ	0xFE8
  7495                           indf2	equ	0xFDF
  7496                           postinc2	equ	0xFDE
  7497                           postdec2	equ	0xFDD
  7498                           fsr2h	equ	0xFDA
  7499                           fsr2l	equ	0xFD9
  7500                           status	equ	0xFD8
  7501                           
  7502 ;; *************** function ___awmod *****************
  7503 ;; Defined at:
  7504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  dividend        2   16[BANK0 ] int 
  7507 ;;  divisor         2   18[BANK0 ] int 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  sign            1   21[BANK0 ] unsigned char 
  7510 ;;  counter         1   20[BANK0 ] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  2   16[BANK0 ] int 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;Total ram usage:        6 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    7
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_PutCharTxBuf
  7531 ;;		_PutCharRxBuf
  7532 ;;		_GetCharRxBuf
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text54
  7537  000F0E                     __ptext54:
  7538                           	opt stack 0
  7539  000F0E                     ___awmod:
  7540                           	opt stack 20
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;incstack = 0
  7544  000F0E  0E00               	movlw	0
  7545  000F10  0100               	movlb	0	; () banked
  7546  000F12  6FD5               	movwf	___awmod@sign& (0+255),b
  7547                           
  7548                           ; BSR set to: 0
  7549  000F14  0100               	movlb	0	; () banked
  7550  000F16  AFD1               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7551  000F18  D009               	goto	l5342
  7552                           
  7553                           ; BSR set to: 0
  7554  000F1A  0100               	movlb	0	; () banked
  7555  000F1C  6DD0               	negf	___awmod@dividend& (0+255),b
  7556  000F1E  1FD1               	comf	(___awmod@dividend+1)& (0+255),f,b
  7557  000F20  B0D8               	btfsc	status,0,c
  7558  000F22  2BD1               	incf	(___awmod@dividend+1)& (0+255),f,b
  7559                           
  7560                           ; BSR set to: 0
  7561  000F24  0E01               	movlw	1
  7562  000F26  0100               	movlb	0	; () banked
  7563  000F28  6FD5               	movwf	___awmod@sign& (0+255),b
  7564  000F2A  D000               	goto	l5342
  7565  000F2C                     l5342:
  7566                           
  7567                           ; BSR set to: 0
  7568  000F2C  0100               	movlb	0	; () banked
  7569  000F2E  AFD3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7570  000F30  D006               	goto	l5346
  7571                           
  7572                           ; BSR set to: 0
  7573  000F32  0100               	movlb	0	; () banked
  7574  000F34  6DD2               	negf	___awmod@divisor& (0+255),b
  7575  000F36  1FD3               	comf	(___awmod@divisor+1)& (0+255),f,b
  7576  000F38  B0D8               	btfsc	status,0,c
  7577  000F3A  2BD3               	incf	(___awmod@divisor+1)& (0+255),f,b
  7578  000F3C  D000               	goto	l5346
  7579  000F3E                     l5346:
  7580                           
  7581                           ; BSR set to: 0
  7582  000F3E  0100               	movlb	0	; () banked
  7583  000F40  51D2               	movf	___awmod@divisor& (0+255),w,b
  7584  000F42  0100               	movlb	0	; () banked
  7585  000F44  11D3               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7586  000F46  B4D8               	btfsc	status,2,c
  7587  000F48  D02B               	goto	l5362
  7588                           
  7589                           ; BSR set to: 0
  7590  000F4A  0E01               	movlw	1
  7591  000F4C  0100               	movlb	0	; () banked
  7592  000F4E  6FD4               	movwf	___awmod@counter& (0+255),b
  7593  000F50  D007               	goto	l5352
  7594  000F52                     l5350:
  7595                           
  7596                           ; BSR set to: 0
  7597  000F52  0100               	movlb	0	; () banked
  7598  000F54  90D8               	bcf	status,0,c
  7599  000F56  37D2               	rlcf	___awmod@divisor& (0+255),f,b
  7600  000F58  37D3               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7601  000F5A  0100               	movlb	0	; () banked
  7602  000F5C  2BD4               	incf	___awmod@counter& (0+255),f,b
  7603  000F5E  D000               	goto	l5352
  7604  000F60                     l5352:
  7605                           
  7606                           ; BSR set to: 0
  7607  000F60  0100               	movlb	0	; () banked
  7608  000F62  BFD3               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7609  000F64  D002               	goto	l5354
  7610  000F66  D7F5               	goto	l5350
  7611                           
  7612                           ; BSR set to: 0
  7613  000F68  D000               	goto	l5354
  7614  000F6A                     l5354:
  7615                           
  7616                           ; BSR set to: 0
  7617  000F6A  0100               	movlb	0	; () banked
  7618  000F6C  51D2               	movf	___awmod@divisor& (0+255),w,b
  7619  000F6E  0100               	movlb	0	; () banked
  7620  000F70  5DD0               	subwf	___awmod@dividend& (0+255),w,b
  7621  000F72  0100               	movlb	0	; () banked
  7622  000F74  51D3               	movf	(___awmod@divisor+1)& (0+255),w,b
  7623  000F76  0100               	movlb	0	; () banked
  7624  000F78  59D1               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7625  000F7A  A0D8               	btfss	status,0,c
  7626  000F7C  D009               	goto	l5358
  7627                           
  7628                           ; BSR set to: 0
  7629  000F7E  0100               	movlb	0	; () banked
  7630  000F80  51D2               	movf	___awmod@divisor& (0+255),w,b
  7631  000F82  0100               	movlb	0	; () banked
  7632  000F84  5FD0               	subwf	___awmod@dividend& (0+255),f,b
  7633  000F86  0100               	movlb	0	; () banked
  7634  000F88  51D3               	movf	(___awmod@divisor+1)& (0+255),w,b
  7635  000F8A  0100               	movlb	0	; () banked
  7636  000F8C  5BD1               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7637  000F8E  D000               	goto	l5358
  7638  000F90                     l5358:
  7639                           
  7640                           ; BSR set to: 0
  7641  000F90  0100               	movlb	0	; () banked
  7642  000F92  90D8               	bcf	status,0,c
  7643  000F94  33D3               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7644  000F96  33D2               	rrcf	___awmod@divisor& (0+255),f,b
  7645                           
  7646                           ; BSR set to: 0
  7647  000F98  0100               	movlb	0	; () banked
  7648  000F9A  2FD4               	decfsz	___awmod@counter& (0+255),f,b
  7649  000F9C  D7E6               	goto	l5354
  7650                           
  7651                           ; BSR set to: 0
  7652  000F9E  D000               	goto	l5362
  7653  000FA0                     l5362:
  7654                           
  7655                           ; BSR set to: 0
  7656  000FA0  0100               	movlb	0	; () banked
  7657  000FA2  51D5               	movf	___awmod@sign& (0+255),w,b
  7658  000FA4  0100               	movlb	0	; () banked
  7659  000FA6  B4D8               	btfsc	status,2,c
  7660  000FA8  D006               	goto	l5366
  7661                           
  7662                           ; BSR set to: 0
  7663  000FAA  0100               	movlb	0	; () banked
  7664  000FAC  6DD0               	negf	___awmod@dividend& (0+255),b
  7665  000FAE  1FD1               	comf	(___awmod@dividend+1)& (0+255),f,b
  7666  000FB0  B0D8               	btfsc	status,0,c
  7667  000FB2  2BD1               	incf	(___awmod@dividend+1)& (0+255),f,b
  7668  000FB4  D000               	goto	l5366
  7669  000FB6                     l5366:
  7670                           
  7671                           ; BSR set to: 0
  7672  000FB6  C0D0  F0D0         	movff	___awmod@dividend,?___awmod
  7673  000FBA  C0D1  F0D1         	movff	___awmod@dividend+1,?___awmod+1
  7674  000FBE  D000               	goto	l1435
  7675  000FC0                     l1435:
  7676                           
  7677                           ; BSR set to: 0
  7678  000FC0  0012               	return		;funcret
  7679  000FC2                     __end_of___awmod:
  7680                           	opt stack 0
  7681                           prodh	equ	0xFF4
  7682                           prodl	equ	0xFF3
  7683                           intcon	equ	0xFF2
  7684                           postinc0	equ	0xFEE
  7685                           wreg	equ	0xFE8
  7686                           indf2	equ	0xFDF
  7687                           postinc2	equ	0xFDE
  7688                           postdec2	equ	0xFDD
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8
  7692                           
  7693 ;; *************** function _BusyTx *****************
  7694 ;; Defined at:
  7695 ;;		line 131 in file "Wireless.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  1    wreg      unsigned char 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;Total ram usage:        0 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    7
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_SendStatus
  7720 ;;		_SendLineMode
  7721 ;;		_SendOffsets
  7722 ;;		_SendDefaultPIDValues
  7723 ;;		_SendStoredPIDValues
  7724 ;;		_SendCurrentPIDValues
  7725 ;;		_SendBattVoltageInitial
  7726 ;;		_SendPIDSetPointOnLine
  7727 ;;		_SendPIDSetPointOffLine
  7728 ;;		_SendThreshold
  7729 ;;		_SendBattVoltage
  7730 ;;		_SendBattCurrent
  7731 ;;		_SendBattCurrentAcc
  7732 ;;		_SendPIDError
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	text55
  7737  0022D8                     __ptext55:
  7738                           	opt stack 0
  7739  0022D8                     _BusyTx:
  7740                           	opt stack 21
  7741                           
  7742                           ;Wireless.c: 132: return(!Tx_complete);
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;incstack = 0
  7746  0022D8  501A               	movf	_Tx_complete,w,c
  7747  0022DA  A4D8               	btfss	status,2,c
  7748  0022DC  D002               	goto	u4340
  7749  0022DE  0E01               	movlw	1
  7750  0022E0  D002               	goto	l324
  7751  0022E2                     u4340:
  7752  0022E2  0E00               	movlw	0
  7753  0022E4  D000               	goto	l324
  7754  0022E6                     l324:
  7755  0022E6  0012               	return		;funcret
  7756  0022E8                     __end_of_BusyTx:
  7757                           	opt stack 0
  7758                           prodh	equ	0xFF4
  7759                           prodl	equ	0xFF3
  7760                           intcon	equ	0xFF2
  7761                           postinc0	equ	0xFEE
  7762                           wreg	equ	0xFE8
  7763                           indf2	equ	0xFDF
  7764                           postinc2	equ	0xFDE
  7765                           postdec2	equ	0xFDD
  7766                           fsr2h	equ	0xFDA
  7767                           fsr2l	equ	0xFD9
  7768                           status	equ	0xFD8
  7769                           
  7770 ;; *************** function _PB1pressed *****************
  7771 ;; Defined at:
  7772 ;;		line 411 in file "FastBuggy17_Main_Code_TUNING.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      unsigned char 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;Total ram usage:        0 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    9
  7793 ;; This function calls:
  7794 ;;		_CommandAvailable
  7795 ;;		_GetCommand
  7796 ;;		_ReadMillis2
  7797 ;;		_ResetMillis2
  7798 ;; This function is called by:
  7799 ;;		_CalibrateOffsets
  7800 ;;		_CalibrateOnLine
  7801 ;;		_CalibrateOffLine
  7802 ;;		_LoadPIDValues
  7803 ;;		_main
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text56
  7808  00197A                     __ptext56:
  7809                           	opt stack 0
  7810  00197A                     _PB1pressed:
  7811                           	opt stack 21
  7812                           
  7813                           ;FastBuggy17_Main_Code_TUNING.c: 412: if(CommandAvailable() == 1) {
  7814                           
  7815                           ;incstack = 0
  7816  00197A  ECA2  F011         	call	_CommandAvailable	;wreg free
  7817  00197E  06E8               	decf	wreg,f,c
  7818  001980  A4D8               	btfss	status,2,c
  7819  001982  D00B               	goto	l848
  7820                           
  7821                           ;FastBuggy17_Main_Code_TUNING.c: 413: if(GetCommand() == 0x05) {
  7822  001984  ECDC  F011         	call	_GetCommand	;wreg free
  7823  001988  0A05               	xorlw	5
  7824  00198A  A4D8               	btfss	status,2,c
  7825  00198C  D01F               	goto	l5564
  7826  00198E  D01B               	goto	l5558
  7827                           
  7828                           ;FastBuggy17_Main_Code_TUNING.c: 414: return(1);
  7829  001990  D022               	goto	l850
  7830                           
  7831                           ;FastBuggy17_Main_Code_TUNING.c: 415: }
  7832  001992  D01F               	goto	l5568
  7833  001994  D01B               	goto	l5564
  7834                           
  7835                           ;FastBuggy17_Main_Code_TUNING.c: 416: else {
  7836                           ;FastBuggy17_Main_Code_TUNING.c: 417: return(0);
  7837  001996  D01F               	goto	l850
  7838                           
  7839                           ;FastBuggy17_Main_Code_TUNING.c: 418: }
  7840                           ;FastBuggy17_Main_Code_TUNING.c: 419: }
  7841  001998  D01C               	goto	l5568
  7842  00199A                     l848:
  7843                           
  7844                           ;FastBuggy17_Main_Code_TUNING.c: 420: else if(PORTBbits.RB1 == 0) {
  7845  00199A  B281               	btfsc	3969,1,c	;volatile
  7846  00199C  D003               	goto	l853
  7847  00199E  D016               	goto	l5564
  7848                           
  7849                           ;FastBuggy17_Main_Code_TUNING.c: 421: return(0);
  7850  0019A0  D01A               	goto	l850
  7851                           
  7852                           ;FastBuggy17_Main_Code_TUNING.c: 422: }
  7853  0019A2  D017               	goto	l5568
  7854  0019A4                     l853:
  7855                           
  7856                           ;FastBuggy17_Main_Code_TUNING.c: 423: else if(PORTBbits.RB1 == 1) {
  7857  0019A4  A281               	btfss	3969,1,c	;volatile
  7858  0019A6  D015               	goto	l5568
  7859                           
  7860                           ;FastBuggy17_Main_Code_TUNING.c: 424: ResetMillis2();
  7861  0019A8  ECCE  F011         	call	_ResetMillis2	;wreg free
  7862                           
  7863                           ;FastBuggy17_Main_Code_TUNING.c: 425: while(ReadMillis2() < 10);
  7864  0019AC  D000               	goto	l5556
  7865  0019AE                     l5556:
  7866  0019AE  ECD3  F011         	call	_ReadMillis2	;wreg free
  7867  0019B2  0100               	movlb	0	; () banked
  7868  0019B4  51D1               	movf	(?_ReadMillis2+1)& (0+255),w,b
  7869  0019B6  E105               	bnz	u4480
  7870  0019B8  0E0A               	movlw	10
  7871  0019BA  0100               	movlb	0	; () banked
  7872  0019BC  5DD0               	subwf	?_ReadMillis2& (0+255),w,b
  7873  0019BE  A0D8               	btfss	status,0,c
  7874  0019C0  D7F6               	goto	l5556
  7875  0019C2                     u4480:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;FastBuggy17_Main_Code_TUNING.c: 426: if(PORTBbits.RB1 == 1) {
  7879  0019C2  A281               	btfss	3969,1,c	;volatile
  7880  0019C4  D003               	goto	l5564
  7881  0019C6                     l5558:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;FastBuggy17_Main_Code_TUNING.c: 427: return(1);
  7885  0019C6  0E01               	movlw	1
  7886                           
  7887                           ; BSR set to: 0
  7888  0019C8  D006               	goto	l850
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;FastBuggy17_Main_Code_TUNING.c: 428: }
  7892  0019CA  D003               	goto	l5568
  7893  0019CC                     l5564:
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;FastBuggy17_Main_Code_TUNING.c: 429: else {
  7897                           ;FastBuggy17_Main_Code_TUNING.c: 430: return(0);
  7898  0019CC  0E00               	movlw	0
  7899                           
  7900                           ; BSR set to: 0
  7901  0019CE  D003               	goto	l850
  7902                           
  7903                           ; BSR set to: 0
  7904                           
  7905                           ; BSR set to: 0
  7906                           
  7907                           ; BSR set to: 0
  7908  0019D0  D000               	goto	l5568
  7909  0019D2                     l5568:
  7910                           
  7911                           ;FastBuggy17_Main_Code_TUNING.c: 431: }
  7912                           ;FastBuggy17_Main_Code_TUNING.c: 432: }
  7913                           ;FastBuggy17_Main_Code_TUNING.c: 434: return(0);
  7914  0019D2  0E00               	movlw	0
  7915  0019D4  D000               	goto	l850
  7916  0019D6                     l850:
  7917  0019D6  0012               	return		;funcret
  7918  0019D8                     __end_of_PB1pressed:
  7919                           	opt stack 0
  7920                           prodh	equ	0xFF4
  7921                           prodl	equ	0xFF3
  7922                           intcon	equ	0xFF2
  7923                           postinc0	equ	0xFEE
  7924                           wreg	equ	0xFE8
  7925                           indf2	equ	0xFDF
  7926                           postinc2	equ	0xFDE
  7927                           postdec2	equ	0xFDD
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _ResetMillis2 *****************
  7933 ;; Defined at:
  7934 ;;		line 45 in file "MillisecondTimer.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;		None               void
  7941 ;; Registers used:
  7942 ;;		wreg, status,2
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;Total ram usage:        0 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    7
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_PB1pressed
  7959 ;;		_PB2pressed
  7960 ;;		_main
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text57
  7965  00239C                     __ptext57:
  7966                           	opt stack 0
  7967  00239C                     _ResetMillis2:
  7968                           	opt stack 23
  7969                           
  7970                           ;MillisecondTimer.c: 47: millisecond_COUNT2 = 0;
  7971                           
  7972                           ;incstack = 0
  7973  00239C  0E00               	movlw	0
  7974  00239E  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  7975  0023A0  0E00               	movlw	0
  7976  0023A2  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  7977  0023A4  0012               	return		;funcret
  7978  0023A6                     __end_of_ResetMillis2:
  7979                           	opt stack 0
  7980                           prodh	equ	0xFF4
  7981                           prodl	equ	0xFF3
  7982                           intcon	equ	0xFF2
  7983                           postinc0	equ	0xFEE
  7984                           wreg	equ	0xFE8
  7985                           indf2	equ	0xFDF
  7986                           postinc2	equ	0xFDE
  7987                           postdec2	equ	0xFDD
  7988                           fsr2h	equ	0xFDA
  7989                           fsr2l	equ	0xFD9
  7990                           status	equ	0xFD8
  7991                           
  7992 ;; *************** function _ReadMillis2 *****************
  7993 ;; Defined at:
  7994 ;;		line 19 in file "MillisecondTimer.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;		None
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  2   16[BANK0 ] unsigned int 
  8001 ;; Registers used:
  8002 ;;		None
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;Total ram usage:        2 bytes
  8013 ;; Hardware stack levels used:    1
  8014 ;; Hardware stack levels required when called:    7
  8015 ;; This function calls:
  8016 ;;		Nothing
  8017 ;; This function is called by:
  8018 ;;		_PB1pressed
  8019 ;;		_PB2pressed
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text58
  8024  0023A6                     __ptext58:
  8025                           	opt stack 0
  8026  0023A6                     _ReadMillis2:
  8027                           	opt stack 22
  8028                           
  8029                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  8030                           
  8031                           ;incstack = 0
  8032  0023A6  C011  F0D0         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  8033  0023AA  C012  F0D1         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  8034  0023AE  0012               	return		;funcret
  8035  0023B0                     __end_of_ReadMillis2:
  8036                           	opt stack 0
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           intcon	equ	0xFF2
  8040                           postinc0	equ	0xFEE
  8041                           wreg	equ	0xFE8
  8042                           indf2	equ	0xFDF
  8043                           postinc2	equ	0xFDE
  8044                           postdec2	equ	0xFDD
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function _GetCommand *****************
  8050 ;; Defined at:
  8051 ;;		line 407 in file "Wireless.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      unsigned char 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    8
  8072 ;; This function calls:
  8073 ;;		_Read1USART
  8074 ;; This function is called by:
  8075 ;;		_PB1pressed
  8076 ;;		_PB2pressed
  8077 ;;		_main
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text59
  8082  0023B8                     __ptext59:
  8083                           	opt stack 0
  8084  0023B8                     _GetCommand:
  8085                           	opt stack 21
  8086                           
  8087                           ;Wireless.c: 409: return(Read1USART());
  8088                           
  8089                           ;incstack = 0
  8090  0023B8  EC0B  F010         	call	_Read1USART	;wreg free
  8091  0023BC  D000               	goto	l461
  8092  0023BE                     l461:
  8093  0023BE  0012               	return		;funcret
  8094  0023C0                     __end_of_GetCommand:
  8095                           	opt stack 0
  8096                           prodh	equ	0xFF4
  8097                           prodl	equ	0xFF3
  8098                           intcon	equ	0xFF2
  8099                           postinc0	equ	0xFEE
  8100                           wreg	equ	0xFE8
  8101                           indf2	equ	0xFDF
  8102                           postinc2	equ	0xFDE
  8103                           postdec2	equ	0xFDD
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function _Read1USART *****************
  8109 ;; Defined at:
  8110 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  data            1   16[BANK0 ] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      unsigned char 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;Total ram usage:        1 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    7
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_GetCommand
  8135 ;;		_SetPIDValues
  8136 ;;		_WirelessRx_ISR
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text60
  8141  002016                     __ptext60:
  8142                           	opt stack 0
  8143  002016                     _Read1USART:
  8144                           	opt stack 22
  8145                           
  8146                           ;incstack = 0
  8147  002016  0EF2               	movlw	242
  8148  002018  161B               	andwf	_USART1_Status,f,c
  8149  00201A  ACAB               	btfss	4011,6,c	;volatile
  8150  00201C  D005               	goto	l1211
  8151  00201E  901B               	bcf	_USART1_Status,0,c
  8152  002020  A0AB               	btfss	4011,0,c	;volatile
  8153  002022  D002               	goto	l1211
  8154  002024  801B               	bsf	_USART1_Status,0,c
  8155  002026  D000               	goto	l1211
  8156  002028                     l1211:
  8157  002028  B4AB               	btfsc	4011,2,c	;volatile
  8158  00202A  841B               	bsf	_USART1_Status,2,c
  8159  00202C  B2AB               	btfsc	4011,1,c	;volatile
  8160  00202E  861B               	bsf	_USART1_Status,3,c
  8161  002030  CFAE F0D0          	movff	4014,Read1USART@data	;volatile
  8162  002034  0100               	movlb	0	; () banked
  8163  002036  51D0               	movf	Read1USART@data& (0+255),w,b
  8164  002038  D000               	goto	l1215
  8165  00203A                     l1215:
  8166                           
  8167                           ; BSR set to: 0
  8168  00203A  0012               	return		;funcret
  8169  00203C                     __end_of_Read1USART:
  8170                           	opt stack 0
  8171                           prodh	equ	0xFF4
  8172                           prodl	equ	0xFF3
  8173                           intcon	equ	0xFF2
  8174                           postinc0	equ	0xFEE
  8175                           wreg	equ	0xFE8
  8176                           indf2	equ	0xFDF
  8177                           postinc2	equ	0xFDE
  8178                           postdec2	equ	0xFDD
  8179                           fsr2h	equ	0xFDA
  8180                           fsr2l	equ	0xFD9
  8181                           status	equ	0xFD8
  8182                           
  8183 ;; *************** function _CommandAvailable *****************
  8184 ;; Defined at:
  8185 ;;		line 403 in file "Wireless.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      unsigned char 
  8192 ;; Registers used:
  8193 ;;		wreg
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    7
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_PB1pressed
  8210 ;;		_PB2pressed
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text61
  8216  002344                     __ptext61:
  8217                           	opt stack 0
  8218  002344                     _CommandAvailable:
  8219                           	opt stack 22
  8220                           
  8221                           ;Wireless.c: 404: return((PIR1bits.RCIF));
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;incstack = 0
  8225  002344  AA9E               	btfss	3998,5,c	;volatile
  8226  002346  D002               	goto	u4360
  8227  002348  0E01               	movlw	1
  8228  00234A  D002               	goto	l458
  8229  00234C                     u4360:
  8230  00234C  0E00               	movlw	0
  8231  00234E  D000               	goto	l458
  8232  002350                     l458:
  8233  002350  0012               	return		;funcret
  8234  002352                     __end_of_CommandAvailable:
  8235                           	opt stack 0
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           intcon	equ	0xFF2
  8239                           postinc0	equ	0xFEE
  8240                           wreg	equ	0xFE8
  8241                           indf2	equ	0xFDF
  8242                           postinc2	equ	0xFDE
  8243                           postdec2	equ	0xFDD
  8244                           fsr2h	equ	0xFDA
  8245                           fsr2l	equ	0xFD9
  8246                           status	equ	0xFD8
  8247                           
  8248 ;; *************** function _NormaliseSensorReadings *****************
  8249 ;; Defined at:
  8250 ;;		line 313 in file "FastBuggy17_Main_Code_TUNING.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  sensor_readi    2   16[BANK0 ] PTR  int 
  8253 ;;		 -> sensor_readings_raw(10), 
  8254 ;;  sensor_offse    2   18[BANK0 ] PTR const int 
  8255 ;;		 -> sensor_offsets(10), 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  index           1   24[BANK0 ] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;		None               void
  8260 ;; Registers used:
  8261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;Total ram usage:        9 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    7
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_CalibrateOnLine
  8278 ;;		_CalibrateOffLine
  8279 ;;		_main
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text62
  8284  001478                     __ptext62:
  8285                           	opt stack 0
  8286  001478                     _NormaliseSensorReadings:
  8287                           	opt stack 23
  8288                           
  8289                           ;FastBuggy17_Main_Code_TUNING.c: 314: unsigned char index;
  8290                           ;FastBuggy17_Main_Code_TUNING.c: 316: for(index = 0; index < 5; index++) {
  8291                           
  8292                           ;incstack = 0
  8293  001478  0E00               	movlw	0
  8294  00147A  0100               	movlb	0	; () banked
  8295  00147C  6FD8               	movwf	NormaliseSensorReadings@index& (0+255),b
  8296  00147E                     l5504:
  8297                           
  8298                           ; BSR set to: 0
  8299  00147E  0E04               	movlw	4
  8300  001480  0100               	movlb	0	; () banked
  8301  001482  65D8               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  8302  001484  D001               	goto	l5508
  8303                           
  8304                           ; BSR set to: 0
  8305  001486  D036               	goto	l809
  8306  001488                     l5508:
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;FastBuggy17_Main_Code_TUNING.c: 317: sensor_readings_normalised[index] = *(sensor_readi
      +                          ngs_raw + index) + *(sensor_offsets + index);
  8310  001488  0100               	movlb	0	; () banked
  8311  00148A  51D8               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8312  00148C  0D02               	mullw	2
  8313  00148E  50F3               	movf	prodl,w,c
  8314  001490  0100               	movlb	0	; () banked
  8315  001492  25D2               	addwf	NormaliseSensorReadings@sensor_offsets& (0+255),w,b
  8316  001494  6ED9               	movwf	fsr2l,c
  8317  001496  50F4               	movf	prodh,w,c
  8318  001498  0100               	movlb	0	; () banked
  8319  00149A  21D3               	addwfc	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),w,b
  8320  00149C  6EDA               	movwf	fsr2h,c
  8321  00149E  CFDE F0D4          	movff	postinc2,??_NormaliseSensorReadings
  8322  0014A2  CFDD F0D5          	movff	postdec2,??_NormaliseSensorReadings+1
  8323  0014A6  0100               	movlb	0	; () banked
  8324  0014A8  51D8               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8325  0014AA  0D02               	mullw	2
  8326  0014AC  50F3               	movf	prodl,w,c
  8327  0014AE  0100               	movlb	0	; () banked
  8328  0014B0  25D0               	addwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),w,b
  8329  0014B2  6ED9               	movwf	fsr2l,c
  8330  0014B4  50F4               	movf	prodh,w,c
  8331  0014B6  0100               	movlb	0	; () banked
  8332  0014B8  21D1               	addwfc	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),w,b
  8333  0014BA  6EDA               	movwf	fsr2h,c
  8334  0014BC  CFDE F0D6          	movff	postinc2,??_NormaliseSensorReadings+2
  8335  0014C0  CFDD F0D7          	movff	postdec2,??_NormaliseSensorReadings+3
  8336  0014C4  0100               	movlb	0	; () banked
  8337  0014C6  51D4               	movf	??_NormaliseSensorReadings& (0+255),w,b
  8338  0014C8  0100               	movlb	0	; () banked
  8339  0014CA  27D6               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  8340  0014CC  0100               	movlb	0	; () banked
  8341  0014CE  51D5               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  8342  0014D0  0100               	movlb	0	; () banked
  8343  0014D2  23D7               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  8344  0014D4  0100               	movlb	0	; () banked
  8345  0014D6  51D8               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8346  0014D8  0D02               	mullw	2
  8347  0014DA  0EA4               	movlw	low _sensor_readings_normalised
  8348  0014DC  24F3               	addwf	prodl,w,c
  8349  0014DE  6ED9               	movwf	fsr2l,c
  8350  0014E0  0E00               	movlw	high _sensor_readings_normalised
  8351  0014E2  20F4               	addwfc	prodh,w,c
  8352  0014E4  6EDA               	movwf	fsr2h,c
  8353  0014E6  C0D6  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  8354  0014EA  C0D7  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  8355                           
  8356                           ; BSR set to: 0
  8357  0014EE  0100               	movlb	0	; () banked
  8358  0014F0  2BD8               	incf	NormaliseSensorReadings@index& (0+255),f,b
  8359  0014F2  D7C5               	goto	l5504
  8360  0014F4                     l809:
  8361                           
  8362                           ; BSR set to: 0
  8363  0014F4  0012               	return		;funcret
  8364  0014F6                     __end_of_NormaliseSensorReadings:
  8365                           	opt stack 0
  8366                           prodh	equ	0xFF4
  8367                           prodl	equ	0xFF3
  8368                           intcon	equ	0xFF2
  8369                           postinc0	equ	0xFEE
  8370                           wreg	equ	0xFE8
  8371                           indf2	equ	0xFDF
  8372                           postinc2	equ	0xFDE
  8373                           postdec2	equ	0xFDD
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function _GetSensorReadings *****************
  8379 ;; Defined at:
  8380 ;;		line 296 in file "FastBuggy17_Main_Code_TUNING.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;		None               void
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;Total ram usage:        0 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    9
  8401 ;; This function calls:
  8402 ;;		_ConvertADC
  8403 ;;		_SetADCChannel
  8404 ;; This function is called by:
  8405 ;;		_CalibrateOffsets
  8406 ;;		_CalibrateOnLine
  8407 ;;		_CalibrateOffLine
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text63
  8413  0021DC                     __ptext63:
  8414                           	opt stack 0
  8415  0021DC                     _GetSensorReadings:
  8416                           	opt stack 18
  8417                           
  8418                           ;FastBuggy17_Main_Code_TUNING.c: 298: sensor_acq_index = 0;
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;incstack = 0
  8422  0021DC  0E00               	movlw	0
  8423  0021DE  6E23               	movwf	_sensor_acq_index,c	;volatile
  8424                           
  8425                           ;FastBuggy17_Main_Code_TUNING.c: 299: sensor_acq_done = 0;
  8426  0021E0  0E00               	movlw	0
  8427  0021E2  6E22               	movwf	_sensor_acq_done,c	;volatile
  8428                           
  8429                           ;FastBuggy17_Main_Code_TUNING.c: 300: SetADCChannel(sensor_acq_index);
  8430  0021E4  5023               	movf	_sensor_acq_index,w,c	;volatile
  8431  0021E6  EC33  F006         	call	_SetADCChannel
  8432                           
  8433                           ;FastBuggy17_Main_Code_TUNING.c: 301: ConvertADC();
  8434  0021EA  ECF1  F011         	call	_ConvertADC	;wreg free
  8435                           
  8436                           ;FastBuggy17_Main_Code_TUNING.c: 302: PIE1bits.ADIE = 1;
  8437  0021EE  8C9D               	bsf	3997,6,c	;volatile
  8438  0021F0  0012               	return		;funcret
  8439  0021F2                     __end_of_GetSensorReadings:
  8440                           	opt stack 0
  8441                           prodh	equ	0xFF4
  8442                           prodl	equ	0xFF3
  8443                           intcon	equ	0xFF2
  8444                           postinc0	equ	0xFEE
  8445                           wreg	equ	0xFE8
  8446                           indf2	equ	0xFDF
  8447                           postinc2	equ	0xFDE
  8448                           postdec2	equ	0xFDD
  8449                           fsr2h	equ	0xFDA
  8450                           fsr2l	equ	0xFD9
  8451                           status	equ	0xFD8
  8452                           
  8453 ;; *************** function _SetADCChannel *****************
  8454 ;; Defined at:
  8455 ;;		line 238 in file "FastBuggy17_Main_Code_TUNING.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  channel         1    wreg     unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  channel         1   18[BANK0 ] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;		None               void
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;Total ram usage:        1 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:    8
  8476 ;; This function calls:
  8477 ;;		_SetChanADC
  8478 ;; This function is called by:
  8479 ;;		_GetSensorReadings
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text64
  8484  000C66                     __ptext64:
  8485                           	opt stack 0
  8486  000C66                     _SetADCChannel:
  8487                           	opt stack 18
  8488                           
  8489                           ;incstack = 0
  8490                           ;SetADCChannel@channel stored from wreg
  8491  000C66  0100               	movlb	0	; () banked
  8492  000C68  6FD2               	movwf	SetADCChannel@channel& (0+255),b
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;FastBuggy17_Main_Code_TUNING.c: 240: switch (channel) {
  8496  000C6A  D040               	goto	l5444
  8497  000C6C                     l5410:
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;FastBuggy17_Main_Code_TUNING.c: 242: SetChanADC(0b10000111);
  8501  000C6C  0E87               	movlw	135
  8502  000C6E  ECA8  F010         	call	_SetChanADC
  8503                           
  8504                           ;FastBuggy17_Main_Code_TUNING.c: 243: break;
  8505  000C72  D06F               	goto	l798
  8506  000C74                     l5412:
  8507                           
  8508                           ;FastBuggy17_Main_Code_TUNING.c: 245: SetChanADC(0b10001111);
  8509  000C74  0E8F               	movlw	143
  8510  000C76  ECA8  F010         	call	_SetChanADC
  8511                           
  8512                           ;FastBuggy17_Main_Code_TUNING.c: 246: break;
  8513  000C7A  D06B               	goto	l798
  8514  000C7C                     l5414:
  8515                           
  8516                           ;FastBuggy17_Main_Code_TUNING.c: 248: SetChanADC(0b10010111);
  8517  000C7C  0E97               	movlw	151
  8518  000C7E  ECA8  F010         	call	_SetChanADC
  8519                           
  8520                           ;FastBuggy17_Main_Code_TUNING.c: 249: break;
  8521  000C82  D067               	goto	l798
  8522  000C84                     l5416:
  8523                           
  8524                           ;FastBuggy17_Main_Code_TUNING.c: 251: SetChanADC(0b10011111);
  8525  000C84  0E9F               	movlw	159
  8526  000C86  ECA8  F010         	call	_SetChanADC
  8527                           
  8528                           ;FastBuggy17_Main_Code_TUNING.c: 252: break;
  8529  000C8A  D063               	goto	l798
  8530  000C8C                     l5418:
  8531                           
  8532                           ;FastBuggy17_Main_Code_TUNING.c: 254: SetChanADC(0b10100111);
  8533  000C8C  0EA7               	movlw	167
  8534  000C8E  ECA8  F010         	call	_SetChanADC
  8535                           
  8536                           ;FastBuggy17_Main_Code_TUNING.c: 255: break;
  8537  000C92  D05F               	goto	l798
  8538  000C94                     l5420:
  8539                           
  8540                           ;FastBuggy17_Main_Code_TUNING.c: 257: SetChanADC(0b10101111);
  8541  000C94  0EAF               	movlw	175
  8542  000C96  ECA8  F010         	call	_SetChanADC
  8543                           
  8544                           ;FastBuggy17_Main_Code_TUNING.c: 258: break;
  8545  000C9A  D05B               	goto	l798
  8546  000C9C                     l5422:
  8547                           
  8548                           ;FastBuggy17_Main_Code_TUNING.c: 260: SetChanADC(0b10110111);
  8549  000C9C  0EB7               	movlw	183
  8550  000C9E  ECA8  F010         	call	_SetChanADC
  8551                           
  8552                           ;FastBuggy17_Main_Code_TUNING.c: 261: break;
  8553  000CA2  D057               	goto	l798
  8554  000CA4                     l5424:
  8555                           
  8556                           ;FastBuggy17_Main_Code_TUNING.c: 263: SetChanADC(0b10111111);
  8557  000CA4  0EBF               	movlw	191
  8558  000CA6  ECA8  F010         	call	_SetChanADC
  8559                           
  8560                           ;FastBuggy17_Main_Code_TUNING.c: 264: break;
  8561  000CAA  D053               	goto	l798
  8562  000CAC                     l5426:
  8563                           
  8564                           ;FastBuggy17_Main_Code_TUNING.c: 266: SetChanADC(0b11000111);
  8565  000CAC  0EC7               	movlw	199
  8566  000CAE  ECA8  F010         	call	_SetChanADC
  8567                           
  8568                           ;FastBuggy17_Main_Code_TUNING.c: 267: break;
  8569  000CB2  D04F               	goto	l798
  8570  000CB4                     l5428:
  8571                           
  8572                           ;FastBuggy17_Main_Code_TUNING.c: 269: SetChanADC(0b11001111);
  8573  000CB4  0ECF               	movlw	207
  8574  000CB6  ECA8  F010         	call	_SetChanADC
  8575                           
  8576                           ;FastBuggy17_Main_Code_TUNING.c: 270: break;
  8577  000CBA  D04B               	goto	l798
  8578  000CBC                     l5430:
  8579                           
  8580                           ;FastBuggy17_Main_Code_TUNING.c: 272: SetChanADC(0b11010111);
  8581  000CBC  0ED7               	movlw	215
  8582  000CBE  ECA8  F010         	call	_SetChanADC
  8583                           
  8584                           ;FastBuggy17_Main_Code_TUNING.c: 273: break;
  8585  000CC2  D047               	goto	l798
  8586  000CC4                     l5432:
  8587                           
  8588                           ;FastBuggy17_Main_Code_TUNING.c: 275: SetChanADC(0b11011111);
  8589  000CC4  0EDF               	movlw	223
  8590  000CC6  ECA8  F010         	call	_SetChanADC
  8591                           
  8592                           ;FastBuggy17_Main_Code_TUNING.c: 276: break;
  8593  000CCA  D043               	goto	l798
  8594  000CCC                     l5434:
  8595                           
  8596                           ;FastBuggy17_Main_Code_TUNING.c: 278: SetChanADC(0b11100111);
  8597  000CCC  0EE7               	movlw	231
  8598  000CCE  ECA8  F010         	call	_SetChanADC
  8599                           
  8600                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
  8601  000CD2  D03F               	goto	l798
  8602  000CD4                     l5436:
  8603                           
  8604                           ;FastBuggy17_Main_Code_TUNING.c: 281: SetChanADC(0b11101111);
  8605  000CD4  0EEF               	movlw	239
  8606  000CD6  ECA8  F010         	call	_SetChanADC
  8607                           
  8608                           ;FastBuggy17_Main_Code_TUNING.c: 282: break;
  8609  000CDA  D03B               	goto	l798
  8610  000CDC                     l5438:
  8611                           
  8612                           ;FastBuggy17_Main_Code_TUNING.c: 284: SetChanADC(0b11110111);
  8613  000CDC  0EF7               	movlw	247
  8614  000CDE  ECA8  F010         	call	_SetChanADC
  8615                           
  8616                           ;FastBuggy17_Main_Code_TUNING.c: 285: break;
  8617  000CE2  D037               	goto	l798
  8618  000CE4                     l5440:
  8619                           
  8620                           ;FastBuggy17_Main_Code_TUNING.c: 287: SetChanADC(0b11111111);
  8621  000CE4  0EFF               	movlw	255
  8622  000CE6  ECA8  F010         	call	_SetChanADC
  8623                           
  8624                           ;FastBuggy17_Main_Code_TUNING.c: 291: }
  8625                           
  8626                           ;FastBuggy17_Main_Code_TUNING.c: 290: break;
  8627                           
  8628                           ;FastBuggy17_Main_Code_TUNING.c: 289: default:
  8629                           
  8630                           ;FastBuggy17_Main_Code_TUNING.c: 288: break;
  8631  000CEA  D033               	goto	l798
  8632  000CEC                     l5444:
  8633  000CEC  0100               	movlb	0	; () banked
  8634  000CEE  51D2               	movf	SetADCChannel@channel& (0+255),w,b
  8635                           
  8636                           ; Switch size 1, requested type "space"
  8637                           ; Number of cases is 16, Range of values is 0 to 15
  8638                           ; switch strategies available:
  8639                           ; Name         Instructions Cycles
  8640                           ; simple_byte           49    25 (average)
  8641                           ;	Chosen strategy is simple_byte
  8642  000CF0  0A00               	xorlw	0	; case 0
  8643  000CF2  B4D8               	btfsc	status,2,c
  8644  000CF4  D7BB               	goto	l5410
  8645  000CF6  0A01               	xorlw	1	; case 1
  8646  000CF8  B4D8               	btfsc	status,2,c
  8647  000CFA  D7BC               	goto	l5412
  8648  000CFC  0A03               	xorlw	3	; case 2
  8649  000CFE  B4D8               	btfsc	status,2,c
  8650  000D00  D7BD               	goto	l5414
  8651  000D02  0A01               	xorlw	1	; case 3
  8652  000D04  B4D8               	btfsc	status,2,c
  8653  000D06  D7BE               	goto	l5416
  8654  000D08  0A07               	xorlw	7	; case 4
  8655  000D0A  B4D8               	btfsc	status,2,c
  8656  000D0C  D7BF               	goto	l5418
  8657  000D0E  0A01               	xorlw	1	; case 5
  8658  000D10  B4D8               	btfsc	status,2,c
  8659  000D12  D7C0               	goto	l5420
  8660  000D14  0A03               	xorlw	3	; case 6
  8661  000D16  B4D8               	btfsc	status,2,c
  8662  000D18  D7C1               	goto	l5422
  8663  000D1A  0A01               	xorlw	1	; case 7
  8664  000D1C  B4D8               	btfsc	status,2,c
  8665  000D1E  D7C2               	goto	l5424
  8666  000D20  0A0F               	xorlw	15	; case 8
  8667  000D22  B4D8               	btfsc	status,2,c
  8668  000D24  D7C3               	goto	l5426
  8669  000D26  0A01               	xorlw	1	; case 9
  8670  000D28  B4D8               	btfsc	status,2,c
  8671  000D2A  D7C4               	goto	l5428
  8672  000D2C  0A03               	xorlw	3	; case 10
  8673  000D2E  B4D8               	btfsc	status,2,c
  8674  000D30  D7C5               	goto	l5430
  8675  000D32  0A01               	xorlw	1	; case 11
  8676  000D34  B4D8               	btfsc	status,2,c
  8677  000D36  D7C6               	goto	l5432
  8678  000D38  0A07               	xorlw	7	; case 12
  8679  000D3A  B4D8               	btfsc	status,2,c
  8680  000D3C  D7C7               	goto	l5434
  8681  000D3E  0A01               	xorlw	1	; case 13
  8682  000D40  B4D8               	btfsc	status,2,c
  8683  000D42  D7C8               	goto	l5436
  8684  000D44  0A03               	xorlw	3	; case 14
  8685  000D46  B4D8               	btfsc	status,2,c
  8686  000D48  D7C9               	goto	l5438
  8687  000D4A  0A01               	xorlw	1	; case 15
  8688  000D4C  B4D8               	btfsc	status,2,c
  8689  000D4E  D7CA               	goto	l5440
  8690  000D50  D000               	goto	l798
  8691  000D52                     l798:
  8692  000D52  0012               	return		;funcret
  8693  000D54                     __end_of_SetADCChannel:
  8694                           	opt stack 0
  8695                           prodh	equ	0xFF4
  8696                           prodl	equ	0xFF3
  8697                           intcon	equ	0xFF2
  8698                           postinc0	equ	0xFEE
  8699                           wreg	equ	0xFE8
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           fsr2h	equ	0xFDA
  8704                           fsr2l	equ	0xFD9
  8705                           status	equ	0xFD8
  8706                           
  8707 ;; *************** function _SetChanADC *****************
  8708 ;; Defined at:
  8709 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  channel         1    wreg     unsigned char 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  channel         1   17[BANK0 ] unsigned char 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;		None               void
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;Total ram usage:        2 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    7
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_SetADCChannel
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text65
  8738  002150                     __ptext65:
  8739                           	opt stack 0
  8740  002150                     _SetChanADC:
  8741                           	opt stack 18
  8742                           
  8743                           ;incstack = 0
  8744                           ;SetChanADC@channel stored from wreg
  8745  002150  0100               	movlb	0	; () banked
  8746  002152  6FD1               	movwf	SetChanADC@channel& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749  002154  CFC2 F0D0          	movff	4034,??_SetChanADC	;volatile
  8750  002158  0EC3               	movlw	195
  8751  00215A  0100               	movlb	0	; () banked
  8752  00215C  17D0               	andwf	??_SetChanADC& (0+255),f,b
  8753  00215E  0100               	movlb	0	; () banked
  8754  002160  90D8               	bcf	status,0,c
  8755  002162  31D1               	rrcf	SetChanADC@channel& (0+255),w,b
  8756  002164  0B3C               	andlw	60
  8757  002166  0100               	movlb	0	; () banked
  8758  002168  11D0               	iorwf	??_SetChanADC& (0+255),w,b
  8759  00216A  6EC2               	movwf	4034,c	;volatile
  8760                           
  8761                           ; BSR set to: 0
  8762  00216C  0012               	return		;funcret
  8763  00216E                     __end_of_SetChanADC:
  8764                           	opt stack 0
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           postinc0	equ	0xFEE
  8769                           wreg	equ	0xFE8
  8770                           indf2	equ	0xFDF
  8771                           postinc2	equ	0xFDE
  8772                           postdec2	equ	0xFDD
  8773                           fsr2h	equ	0xFDA
  8774                           fsr2l	equ	0xFD9
  8775                           status	equ	0xFD8
  8776                           
  8777 ;; *************** function _ConvertADC *****************
  8778 ;; Defined at:
  8779 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;		None               void
  8786 ;; Registers used:
  8787 ;;		None
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:    7
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_GetSensorReadings
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text66
  8808  0023E2                     __ptext66:
  8809                           	opt stack 0
  8810  0023E2                     _ConvertADC:
  8811                           	opt stack 19
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;incstack = 0
  8815  0023E2  82C2               	bsf	4034,1,c	;volatile
  8816  0023E4  0012               	return		;funcret
  8817  0023E6                     __end_of_ConvertADC:
  8818                           	opt stack 0
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           postinc0	equ	0xFEE
  8823                           wreg	equ	0xFE8
  8824                           indf2	equ	0xFDF
  8825                           postinc2	equ	0xFDE
  8826                           postdec2	equ	0xFDD
  8827                           fsr2h	equ	0xFDA
  8828                           fsr2l	equ	0xFD9
  8829                           status	equ	0xFD8
  8830                           
  8831 ;; *************** function _CalculateSensorSum *****************
  8832 ;; Defined at:
  8833 ;;		line 348 in file "FastBuggy17_Main_Code_TUNING.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  sensor_readi    2   22[BANK0 ] PTR const int 
  8836 ;;		 -> sensor_readings_normalised(10), 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;  sum             2   26[BANK0 ] int 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  2   22[BANK0 ] int 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;Total ram usage:        6 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    8
  8855 ;; This function calls:
  8856 ;;		___wmul
  8857 ;; This function is called by:
  8858 ;;		_CalibrateOnLine
  8859 ;;		_CalibrateOffLine
  8860 ;;		_main
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text67
  8865  000A78                     __ptext67:
  8866                           	opt stack 0
  8867  000A78                     _CalculateSensorSum:
  8868                           	opt stack 19
  8869                           
  8870                           ;FastBuggy17_Main_Code_TUNING.c: 350: int sum = 0;
  8871                           
  8872                           ;incstack = 0
  8873  000A78  0E00               	movlw	0
  8874  000A7A  0100               	movlb	0	; () banked
  8875  000A7C  6FDB               	movwf	(CalculateSensorSum@sum+1)& (0+255),b
  8876  000A7E  0E00               	movlw	0
  8877  000A80  6FDA               	movwf	CalculateSensorSum@sum& (0+255),b
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;FastBuggy17_Main_Code_TUNING.c: 352: sum += *(sensor_readings_normalised + 0) * 3;
  8881  000A82  C0D6  FFD9         	movff	CalculateSensorSum@sensor_readings_normalised,fsr2l
  8882  000A86  C0D7  FFDA         	movff	CalculateSensorSum@sensor_readings_normalised+1,fsr2h
  8883  000A8A  CFDE F0D0          	movff	postinc2,___wmul@multiplier
  8884  000A8E  CFDD F0D1          	movff	postdec2,___wmul@multiplier+1
  8885  000A92  0E00               	movlw	0
  8886  000A94  0100               	movlb	0	; () banked
  8887  000A96  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8888  000A98  0E03               	movlw	3
  8889  000A9A  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  8890  000A9C  ECBB  F00E         	call	___wmul	;wreg free
  8891  000AA0  0100               	movlb	0	; () banked
  8892  000AA2  51D0               	movf	?___wmul& (0+255),w,b
  8893  000AA4  0100               	movlb	0	; () banked
  8894  000AA6  27DA               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8895  000AA8  0100               	movlb	0	; () banked
  8896  000AAA  51D1               	movf	(?___wmul+1)& (0+255),w,b
  8897  000AAC  0100               	movlb	0	; () banked
  8898  000AAE  23DB               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;FastBuggy17_Main_Code_TUNING.c: 353: sum += *(sensor_readings_normalised + 1) * 2;
  8902  000AB0  0100               	movlb	0	; () banked
  8903  000AB2  EE20 F002          	lfsr	2,2
  8904  000AB6  51D6               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8905  000AB8  26D9               	addwf	fsr2l,f,c
  8906  000ABA  51D7               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8907  000ABC  22DA               	addwfc	fsr2h,f,c
  8908  000ABE  CFDE F0D8          	movff	postinc2,??_CalculateSensorSum
  8909  000AC2  CFDD F0D9          	movff	postdec2,??_CalculateSensorSum+1
  8910  000AC6  90D8               	bcf	status,0,c
  8911  000AC8  0100               	movlb	0	; () banked
  8912  000ACA  37D8               	rlcf	??_CalculateSensorSum& (0+255),f,b
  8913  000ACC  37D9               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  8914  000ACE  0100               	movlb	0	; () banked
  8915  000AD0  51D8               	movf	??_CalculateSensorSum& (0+255),w,b
  8916  000AD2  0100               	movlb	0	; () banked
  8917  000AD4  27DA               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8918  000AD6  0100               	movlb	0	; () banked
  8919  000AD8  51D9               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8920  000ADA  0100               	movlb	0	; () banked
  8921  000ADC  23DB               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;FastBuggy17_Main_Code_TUNING.c: 354: sum += *(sensor_readings_normalised + 2) * 1;
  8925  000ADE  0100               	movlb	0	; () banked
  8926  000AE0  EE20 F004          	lfsr	2,4
  8927  000AE4  51D6               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8928  000AE6  26D9               	addwf	fsr2l,f,c
  8929  000AE8  51D7               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8930  000AEA  22DA               	addwfc	fsr2h,f,c
  8931  000AEC  50DE               	movf	postinc2,w,c
  8932  000AEE  0100               	movlb	0	; () banked
  8933  000AF0  27DA               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8934  000AF2  50DD               	movf	postdec2,w,c
  8935  000AF4  0100               	movlb	0	; () banked
  8936  000AF6  23DB               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;FastBuggy17_Main_Code_TUNING.c: 355: sum += *(sensor_readings_normalised + 3) * -2;
  8940  000AF8  0100               	movlb	0	; () banked
  8941  000AFA  EE20 F006          	lfsr	2,6
  8942  000AFE  51D6               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8943  000B00  26D9               	addwf	fsr2l,f,c
  8944  000B02  51D7               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8945  000B04  22DA               	addwfc	fsr2h,f,c
  8946  000B06  CFDE F0D8          	movff	postinc2,??_CalculateSensorSum
  8947  000B0A  CFDD F0D9          	movff	postdec2,??_CalculateSensorSum+1
  8948  000B0E  90D8               	bcf	status,0,c
  8949  000B10  0100               	movlb	0	; () banked
  8950  000B12  37D8               	rlcf	??_CalculateSensorSum& (0+255),f,b
  8951  000B14  37D9               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  8952  000B16  0100               	movlb	0	; () banked
  8953  000B18  1FD8               	comf	??_CalculateSensorSum& (0+255),f,b
  8954  000B1A  1FD9               	comf	(??_CalculateSensorSum+1)& (0+255),f,b
  8955  000B1C  4BD8               	infsnz	??_CalculateSensorSum& (0+255),f,b
  8956  000B1E  2BD9               	incf	(??_CalculateSensorSum+1)& (0+255),f,b
  8957  000B20  0100               	movlb	0	; () banked
  8958  000B22  51D8               	movf	??_CalculateSensorSum& (0+255),w,b
  8959  000B24  0100               	movlb	0	; () banked
  8960  000B26  27DA               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8961  000B28  0100               	movlb	0	; () banked
  8962  000B2A  51D9               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8963  000B2C  0100               	movlb	0	; () banked
  8964  000B2E  23DB               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;FastBuggy17_Main_Code_TUNING.c: 356: sum += *(sensor_readings_normalised + 4) * -3;
  8968  000B30  0100               	movlb	0	; () banked
  8969  000B32  EE20 F008          	lfsr	2,8
  8970  000B36  51D6               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8971  000B38  26D9               	addwf	fsr2l,f,c
  8972  000B3A  51D7               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8973  000B3C  22DA               	addwfc	fsr2h,f,c
  8974  000B3E  CFDE F0D0          	movff	postinc2,___wmul@multiplier
  8975  000B42  CFDD F0D1          	movff	postdec2,___wmul@multiplier+1
  8976  000B46  0EFF               	movlw	255
  8977  000B48  0100               	movlb	0	; () banked
  8978  000B4A  6FD3               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8979  000B4C  0EFD               	movlw	253
  8980  000B4E  6FD2               	movwf	___wmul@multiplicand& (0+255),b
  8981  000B50  ECBB  F00E         	call	___wmul	;wreg free
  8982  000B54  0100               	movlb	0	; () banked
  8983  000B56  51D0               	movf	?___wmul& (0+255),w,b
  8984  000B58  0100               	movlb	0	; () banked
  8985  000B5A  27DA               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8986  000B5C  0100               	movlb	0	; () banked
  8987  000B5E  51D1               	movf	(?___wmul+1)& (0+255),w,b
  8988  000B60  0100               	movlb	0	; () banked
  8989  000B62  23DB               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;FastBuggy17_Main_Code_TUNING.c: 358: return(sum);
  8993  000B64  C0DA  F0D6         	movff	CalculateSensorSum@sum,?_CalculateSensorSum
  8994  000B68  C0DB  F0D7         	movff	CalculateSensorSum@sum+1,?_CalculateSensorSum+1
  8995  000B6C  D000               	goto	l826
  8996  000B6E                     l826:
  8997                           
  8998                           ; BSR set to: 0
  8999  000B6E  0012               	return		;funcret
  9000  000B70                     __end_of_CalculateSensorSum:
  9001                           	opt stack 0
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           intcon	equ	0xFF2
  9005                           postinc0	equ	0xFEE
  9006                           wreg	equ	0xFE8
  9007                           indf2	equ	0xFDF
  9008                           postinc2	equ	0xFDE
  9009                           postdec2	equ	0xFDD
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8
  9013                           
  9014 ;; *************** function ___wmul *****************
  9015 ;; Defined at:
  9016 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  multiplier      2   16[BANK0 ] unsigned int 
  9019 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  product         2   20[BANK0 ] unsigned int 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2   16[BANK0 ] unsigned int 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0, prodl, prodh
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;Total ram usage:        6 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    7
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_CalculateSensorSum
  9042 ;;		_main
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text68
  9047  001D76                     __ptext68:
  9048                           	opt stack 0
  9049  001D76                     ___wmul:
  9050                           	opt stack 23
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;incstack = 0
  9054  001D76  0100               	movlb	0	; () banked
  9055  001D78  51D0               	movf	___wmul@multiplier& (0+255),w,b
  9056  001D7A  0100               	movlb	0	; () banked
  9057  001D7C  03D2               	mulwf	___wmul@multiplicand& (0+255),b
  9058  001D7E  CFF3 F0D4          	movff	prodl,___wmul@product
  9059  001D82  CFF4 F0D5          	movff	prodh,___wmul@product+1
  9060  001D86  0100               	movlb	0	; () banked
  9061  001D88  51D0               	movf	___wmul@multiplier& (0+255),w,b
  9062  001D8A  0100               	movlb	0	; () banked
  9063  001D8C  03D3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9064  001D8E  50F3               	movf	prodl,w,c
  9065  001D90  0100               	movlb	0	; () banked
  9066  001D92  27D5               	addwf	(___wmul@product+1)& (0+255),f,b
  9067  001D94  0100               	movlb	0	; () banked
  9068  001D96  51D1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9069  001D98  0100               	movlb	0	; () banked
  9070  001D9A  03D2               	mulwf	___wmul@multiplicand& (0+255),b
  9071  001D9C  50F3               	movf	prodl,w,c
  9072  001D9E  0100               	movlb	0	; () banked
  9073  001DA0  27D5               	addwf	(___wmul@product+1)& (0+255),f,b
  9074                           
  9075                           ; BSR set to: 0
  9076  001DA2  C0D4  F0D0         	movff	___wmul@product,?___wmul
  9077  001DA6  C0D5  F0D1         	movff	___wmul@product+1,?___wmul+1
  9078  001DAA  D000               	goto	l1229
  9079  001DAC                     l1229:
  9080                           
  9081                           ; BSR set to: 0
  9082  001DAC  0012               	return		;funcret
  9083  001DAE                     __end_of___wmul:
  9084                           	opt stack 0
  9085                           prodh	equ	0xFF4
  9086                           prodl	equ	0xFF3
  9087                           intcon	equ	0xFF2
  9088                           postinc0	equ	0xFEE
  9089                           wreg	equ	0xFE8
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           fsr2h	equ	0xFDA
  9094                           fsr2l	equ	0xFD9
  9095                           status	equ	0xFD8
  9096                           
  9097 ;; *************** function _BusySensorAcq *****************
  9098 ;; Defined at:
  9099 ;;		line 307 in file "FastBuggy17_Main_Code_TUNING.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      unsigned char 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;Total ram usage:        0 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; Hardware stack levels required when called:    7
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		_CalibrateOffsets
  9124 ;;		_CalibrateOnLine
  9125 ;;		_CalibrateOffLine
  9126 ;;		_main
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text69
  9131  0022E8                     __ptext69:
  9132                           	opt stack 0
  9133  0022E8                     _BusySensorAcq:
  9134                           	opt stack 20
  9135                           
  9136                           ;FastBuggy17_Main_Code_TUNING.c: 309: return (!sensor_acq_done);
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;incstack = 0
  9140  0022E8  5022               	movf	_sensor_acq_done,w,c	;volatile
  9141  0022EA  A4D8               	btfss	status,2,c
  9142  0022EC  D002               	goto	u4400
  9143  0022EE  0E01               	movlw	1
  9144  0022F0  D002               	goto	l804
  9145  0022F2                     u4400:
  9146  0022F2  0E00               	movlw	0
  9147  0022F4  D000               	goto	l804
  9148  0022F6                     l804:
  9149  0022F6  0012               	return		;funcret
  9150  0022F8                     __end_of_BusySensorAcq:
  9151                           	opt stack 0
  9152                           prodh	equ	0xFF4
  9153                           prodl	equ	0xFF3
  9154                           intcon	equ	0xFF2
  9155                           postinc0	equ	0xFEE
  9156                           wreg	equ	0xFE8
  9157                           indf2	equ	0xFDF
  9158                           postinc2	equ	0xFDE
  9159                           postdec2	equ	0xFDD
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function _GetDistance *****************
  9165 ;; Defined at:
  9166 ;;		line 48 in file "Ultrasound.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;		None               void
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;Total ram usage:        0 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    8
  9187 ;; This function calls:
  9188 ;;		_Delay1TCYx
  9189 ;; This function is called by:
  9190 ;;		_main
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text70
  9195  002234                     __ptext70:
  9196                           	opt stack 0
  9197  002234                     _GetDistance:
  9198                           	opt stack 22
  9199                           
  9200                           ;Ultrasound.c: 50: LATEbits.LATE5 = 1;
  9201                           
  9202                           ;incstack = 0
  9203  002234  8A8D               	bsf	3981,5,c	;volatile
  9204                           
  9205                           ;Ultrasound.c: 51: Delay1TCYx(25);
  9206  002236  0E19               	movlw	25
  9207  002238  EC7C  F011         	call	_Delay1TCYx
  9208                           
  9209                           ;Ultrasound.c: 52: LATEbits.LATE5 = 0;
  9210  00223C  9A8D               	bcf	3981,5,c	;volatile
  9211                           
  9212                           ;Ultrasound.c: 53: INTCON2bits.INTEDG3 = 1;
  9213  00223E  86F1               	bsf	intcon2,3,c	;volatile
  9214                           
  9215                           ;Ultrasound.c: 54: INTCON3bits.INT3IE = 1;
  9216  002240  8AF0               	bsf	intcon3,5,c	;volatile
  9217                           
  9218                           ;Ultrasound.c: 56: echo_acq_done = 0;
  9219  002242  0E00               	movlw	0
  9220  002244  6E1C               	movwf	_echo_acq_done,c
  9221  002246  0012               	return		;funcret
  9222  002248                     __end_of_GetDistance:
  9223                           	opt stack 0
  9224                           prodh	equ	0xFF4
  9225                           prodl	equ	0xFF3
  9226                           intcon	equ	0xFF2
  9227                           intcon2	equ	0xFF1
  9228                           intcon3	equ	0xFF0
  9229                           postinc0	equ	0xFEE
  9230                           wreg	equ	0xFE8
  9231                           indf2	equ	0xFDF
  9232                           postinc2	equ	0xFDE
  9233                           postdec2	equ	0xFDD
  9234                           fsr2h	equ	0xFDA
  9235                           fsr2l	equ	0xFD9
  9236                           status	equ	0xFD8
  9237                           
  9238 ;; *************** function _Delay1TCYx *****************
  9239 ;; Defined at:
  9240 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  unit            1    wreg     unsigned char 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  unit            1   16[BANK0 ] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;		None               void
  9247 ;; Registers used:
  9248 ;;		wreg
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;Total ram usage:        1 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    7
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_GetDistance
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text71
  9269  0022F8                     __ptext71:
  9270                           	opt stack 0
  9271  0022F8                     _Delay1TCYx:
  9272                           	opt stack 22
  9273                           
  9274                           ;incstack = 0
  9275                           ;Delay1TCYx@unit stored from wreg
  9276  0022F8  0100               	movlb	0	; () banked
  9277  0022FA  6FD0               	movwf	Delay1TCYx@unit& (0+255),b
  9278  0022FC                     l1459:
  9279                           
  9280                           ; BSR set to: 0
  9281  0022FC  F000               	nop	
  9282  0022FE  0100               	movlb	0	; () banked
  9283  002300  2FD0               	decfsz	Delay1TCYx@unit& (0+255),f,b
  9284  002302  D7FC               	goto	l1459
  9285  002304  D000               	goto	l1461
  9286  002306                     l1461:
  9287                           
  9288                           ; BSR set to: 0
  9289  002306  0012               	return		;funcret
  9290  002308                     __end_of_Delay1TCYx:
  9291                           	opt stack 0
  9292                           prodh	equ	0xFF4
  9293                           prodl	equ	0xFF3
  9294                           intcon	equ	0xFF2
  9295                           intcon2	equ	0xFF1
  9296                           intcon3	equ	0xFF0
  9297                           postinc0	equ	0xFEE
  9298                           wreg	equ	0xFE8
  9299                           indf2	equ	0xFDF
  9300                           postinc2	equ	0xFDE
  9301                           postdec2	equ	0xFDD
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8
  9305                           
  9306 ;; *************** function _EnableSensorLEDS *****************
  9307 ;; Defined at:
  9308 ;;		line 385 in file "FastBuggy17_Main_Code_TUNING.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;		None               void
  9315 ;; Registers used:
  9316 ;;		wreg, status,2
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    7
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_main
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text72
  9337  0023D4                     __ptext72:
  9338                           	opt stack 0
  9339  0023D4                     _EnableSensorLEDS:
  9340                           	opt stack 23
  9341                           
  9342                           ;FastBuggy17_Main_Code_TUNING.c: 387: LATE = 0x1F;
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;incstack = 0
  9346  0023D4  0E1F               	movlw	31
  9347  0023D6  6E8D               	movwf	3981,c	;volatile
  9348  0023D8  0012               	return		;funcret
  9349  0023DA                     __end_of_EnableSensorLEDS:
  9350                           	opt stack 0
  9351                           prodh	equ	0xFF4
  9352                           prodl	equ	0xFF3
  9353                           intcon	equ	0xFF2
  9354                           intcon2	equ	0xFF1
  9355                           intcon3	equ	0xFF0
  9356                           postinc0	equ	0xFEE
  9357                           wreg	equ	0xFE8
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           postdec2	equ	0xFDD
  9361                           fsr2h	equ	0xFDA
  9362                           fsr2l	equ	0xFD9
  9363                           status	equ	0xFD8
  9364                           
  9365 ;; *************** function _EnableMotors *****************
  9366 ;; Defined at:
  9367 ;;		line 102 in file "Motors.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;		None
  9372 ;; Return value:  Size  Location     Type
  9373 ;;		None               void
  9374 ;; Registers used:
  9375 ;;		None
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;Total ram usage:        0 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:    7
  9388 ;; This function calls:
  9389 ;;		Nothing
  9390 ;; This function is called by:
  9391 ;;		_main
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           	psect	text73
  9396  0023E6                     __ptext73:
  9397                           	opt stack 0
  9398  0023E6                     _EnableMotors:
  9399                           	opt stack 23
  9400                           
  9401                           ;Motors.c: 104: LATDbits.LATD4 = 1;
  9402                           
  9403                           ;incstack = 0
  9404  0023E6  888C               	bsf	3980,4,c	;volatile
  9405  0023E8  0012               	return		;funcret
  9406  0023EA                     __end_of_EnableMotors:
  9407                           	opt stack 0
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           intcon2	equ	0xFF1
  9412                           intcon3	equ	0xFF0
  9413                           postinc0	equ	0xFEE
  9414                           wreg	equ	0xFE8
  9415                           indf2	equ	0xFDF
  9416                           postinc2	equ	0xFDE
  9417                           postdec2	equ	0xFDD
  9418                           fsr2h	equ	0xFDA
  9419                           fsr2l	equ	0xFD9
  9420                           status	equ	0xFD8
  9421                           
  9422 ;; *************** function _DisplaySensorStatuses *****************
  9423 ;; Defined at:
  9424 ;;		line 376 in file "FastBuggy17_Main_Code_TUNING.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
  9427 ;;		 -> sensor_statuses(5), 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  index           1   20[BANK0 ] unsigned char 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;		None               void
  9432 ;; Registers used:
  9433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;Total ram usage:        5 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    7
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_main
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text74
  9454  001A34                     __ptext74:
  9455                           	opt stack 0
  9456  001A34                     _DisplaySensorStatuses:
  9457                           	opt stack 23
  9458                           
  9459                           ;FastBuggy17_Main_Code_TUNING.c: 377: unsigned char index;
  9460                           ;FastBuggy17_Main_Code_TUNING.c: 379: for(index = 0; index < 5; index++) {
  9461                           
  9462                           ;incstack = 0
  9463  001A34  0E00               	movlw	0
  9464  001A36  0100               	movlb	0	; () banked
  9465  001A38  6FD4               	movwf	DisplaySensorStatuses@index& (0+255),b
  9466  001A3A                     l6292:
  9467                           
  9468                           ; BSR set to: 0
  9469  001A3A  0E04               	movlw	4
  9470  001A3C  0100               	movlb	0	; () banked
  9471  001A3E  65D4               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  9472  001A40  D001               	goto	l6296
  9473                           
  9474                           ; BSR set to: 0
  9475  001A42  D01F               	goto	l836
  9476  001A44                     l6296:
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;FastBuggy17_Main_Code_TUNING.c: 380: LATJ ^= *(sensor_statuses + index) << index;
  9480  001A44  C0D4  F0D2         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  9481  001A48  0100               	movlb	0	; () banked
  9482  001A4A  51D4               	movf	DisplaySensorStatuses@index& (0+255),w,b
  9483  001A4C  0D01               	mullw	1
  9484  001A4E  50F3               	movf	prodl,w,c
  9485  001A50  0100               	movlb	0	; () banked
  9486  001A52  25D0               	addwf	DisplaySensorStatuses@sensor_statuses& (0+255),w,b
  9487  001A54  6ED9               	movwf	fsr2l,c
  9488  001A56  50F4               	movf	prodh,w,c
  9489  001A58  0100               	movlb	0	; () banked
  9490  001A5A  21D1               	addwfc	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),w,b
  9491  001A5C  6EDA               	movwf	fsr2h,c
  9492  001A5E  50DF               	movf	indf2,w,c
  9493  001A60  0100               	movlb	0	; () banked
  9494  001A62  6FD3               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  9495  001A64  0100               	movlb	0	; () banked
  9496  001A66  2BD2               	incf	??_DisplaySensorStatuses& (0+255),f,b
  9497  001A68  D003               	goto	u5414
  9498  001A6A                     u5415:
  9499  001A6A  0100               	movlb	0	; () banked
  9500  001A6C  90D8               	bcf	status,0,c
  9501  001A6E  37D3               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  9502  001A70                     u5414:
  9503  001A70  0100               	movlb	0	; () banked
  9504  001A72  2FD2               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  9505  001A74  D7FA               	goto	u5415
  9506  001A76  0100               	movlb	0	; () banked
  9507  001A78  51D3               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  9508  001A7A  1A91               	xorwf	3985,f,c	;volatile
  9509                           
  9510                           ; BSR set to: 0
  9511  001A7C  0100               	movlb	0	; () banked
  9512  001A7E  2BD4               	incf	DisplaySensorStatuses@index& (0+255),f,b
  9513  001A80  D7DC               	goto	l6292
  9514  001A82                     l836:
  9515                           
  9516                           ; BSR set to: 0
  9517  001A82  0012               	return		;funcret
  9518  001A84                     __end_of_DisplaySensorStatuses:
  9519                           	opt stack 0
  9520                           prodh	equ	0xFF4
  9521                           prodl	equ	0xFF3
  9522                           intcon	equ	0xFF2
  9523                           intcon2	equ	0xFF1
  9524                           intcon3	equ	0xFF0
  9525                           postinc0	equ	0xFEE
  9526                           wreg	equ	0xFE8
  9527                           indf2	equ	0xFDF
  9528                           postinc2	equ	0xFDE
  9529                           postdec2	equ	0xFDD
  9530                           fsr2h	equ	0xFDA
  9531                           fsr2l	equ	0xFD9
  9532                           status	equ	0xFD8
  9533                           
  9534 ;; *************** function _DisableMotors *****************
  9535 ;; Defined at:
  9536 ;;		line 108 in file "Motors.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;		None               void
  9543 ;; Registers used:
  9544 ;;		None
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;Total ram usage:        0 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    7
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_main
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text75
  9565  0023EA                     __ptext75:
  9566                           	opt stack 0
  9567  0023EA                     _DisableMotors:
  9568                           	opt stack 23
  9569                           
  9570                           ;Motors.c: 110: LATDbits.LATD4 = 0;
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;incstack = 0
  9574  0023EA  988C               	bcf	3980,4,c	;volatile
  9575  0023EC  0012               	return		;funcret
  9576  0023EE                     __end_of_DisableMotors:
  9577                           	opt stack 0
  9578                           prodh	equ	0xFF4
  9579                           prodl	equ	0xFF3
  9580                           intcon	equ	0xFF2
  9581                           intcon2	equ	0xFF1
  9582                           intcon3	equ	0xFF0
  9583                           postinc0	equ	0xFEE
  9584                           wreg	equ	0xFE8
  9585                           indf2	equ	0xFDF
  9586                           postinc2	equ	0xFDE
  9587                           postdec2	equ	0xFDD
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function _ConfigureWireless *****************
  9593 ;; Defined at:
  9594 ;;		line 114 in file "Wireless.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;		None               void
  9601 ;; Registers used:
  9602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;Total ram usage:        0 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    8
  9615 ;; This function calls:
  9616 ;;		_FlushRxBuf
  9617 ;;		_FlushTxBuf
  9618 ;;		_Open1USART
  9619 ;; This function is called by:
  9620 ;;		_main
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text76
  9625  00216E                     __ptext76:
  9626                           	opt stack 0
  9627  00216E                     _ConfigureWireless:
  9628                           	opt stack 22
  9629                           
  9630                           ;Wireless.c: 116: Open1USART(0b01111111
  9631                           ;Wireless.c: 117: & 0b10111111
  9632                           ;Wireless.c: 118: & 0b11111110
  9633                           ;Wireless.c: 119: & 0b11111101
  9634                           ;Wireless.c: 120: & 0b11111111
  9635                           ;Wireless.c: 121: & 0b11111111,
  9636                           ;Wireless.c: 122: 64);
  9637                           
  9638                           ;incstack = 0
  9639  00216E  0E00               	movlw	0
  9640  002170  0100               	movlb	0	; () banked
  9641  002172  6FD1               	movwf	(Open1USART@spbrg+1)& (0+255),b
  9642  002174  0E40               	movlw	64
  9643  002176  6FD0               	movwf	Open1USART@spbrg& (0+255),b
  9644  002178  0E3C               	movlw	60
  9645  00217A  EC78  F009         	call	_Open1USART
  9646                           
  9647                           ;Wireless.c: 124: FlushTxBuf();
  9648  00217E  ECF3  F00E         	call	_FlushTxBuf	;wreg free
  9649                           
  9650                           ;Wireless.c: 125: FlushRxBuf();
  9651  002182  EC0E  F00F         	call	_FlushRxBuf	;wreg free
  9652                           
  9653                           ;Wireless.c: 127: Tx_complete = 1;
  9654  002186  0E01               	movlw	1
  9655  002188  6E1A               	movwf	_Tx_complete,c
  9656  00218A  0012               	return		;funcret
  9657  00218C                     __end_of_ConfigureWireless:
  9658                           	opt stack 0
  9659                           prodh	equ	0xFF4
  9660                           prodl	equ	0xFF3
  9661                           intcon	equ	0xFF2
  9662                           intcon2	equ	0xFF1
  9663                           intcon3	equ	0xFF0
  9664                           postinc0	equ	0xFEE
  9665                           wreg	equ	0xFE8
  9666                           indf2	equ	0xFDF
  9667                           postinc2	equ	0xFDE
  9668                           postdec2	equ	0xFDD
  9669                           fsr2h	equ	0xFDA
  9670                           fsr2l	equ	0xFD9
  9671                           status	equ	0xFD8
  9672                           
  9673 ;; *************** function _Open1USART *****************
  9674 ;; Defined at:
  9675 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  config          1    wreg     unsigned char 
  9678 ;;  spbrg           2   16[BANK0 ] unsigned int 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;  config          1   18[BANK0 ] unsigned char 
  9681 ;; Return value:  Size  Location     Type
  9682 ;;		None               void
  9683 ;; Registers used:
  9684 ;;		wreg, status,2
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9693 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9694 ;;Total ram usage:        3 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:    7
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_ConfigureWireless
  9701 ;;		_ConfigureSerial
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text77
  9706  0012F0                     __ptext77:
  9707                           	opt stack 0
  9708  0012F0                     _Open1USART:
  9709                           	opt stack 22
  9710                           
  9711                           ;incstack = 0
  9712                           ;Open1USART@config stored from wreg
  9713  0012F0  0100               	movlb	0	; () banked
  9714  0012F2  6FD2               	movwf	Open1USART@config& (0+255),b
  9715                           
  9716                           ; BSR set to: 0
  9717  0012F4  0E00               	movlw	0
  9718  0012F6  6EAC               	movwf	4012,c	;volatile
  9719  0012F8  0E00               	movlw	0
  9720  0012FA  6EAB               	movwf	4011,c	;volatile
  9721                           
  9722                           ; BSR set to: 0
  9723  0012FC  0100               	movlb	0	; () banked
  9724  0012FE  A1D2               	btfss	Open1USART@config& (0+255),0,b
  9725  001300  D002               	goto	l5738
  9726                           
  9727                           ; BSR set to: 0
  9728  001302  88AC               	bsf	4012,4,c	;volatile
  9729  001304  D000               	goto	l5738
  9730  001306                     l5738:
  9731                           
  9732                           ; BSR set to: 0
  9733  001306  0100               	movlb	0	; () banked
  9734  001308  A3D2               	btfss	Open1USART@config& (0+255),1,b
  9735  00130A  D003               	goto	l5742
  9736                           
  9737                           ; BSR set to: 0
  9738  00130C  8CAC               	bsf	4012,6,c	;volatile
  9739  00130E  8CAB               	bsf	4011,6,c	;volatile
  9740  001310  D000               	goto	l5742
  9741  001312                     l5742:
  9742                           
  9743                           ; BSR set to: 0
  9744  001312  0100               	movlb	0	; () banked
  9745  001314  A5D2               	btfss	Open1USART@config& (0+255),2,b
  9746  001316  D002               	goto	l5746
  9747                           
  9748                           ; BSR set to: 0
  9749  001318  8EAC               	bsf	4012,7,c	;volatile
  9750  00131A  D000               	goto	l5746
  9751  00131C                     l5746:
  9752                           
  9753                           ; BSR set to: 0
  9754  00131C  0100               	movlb	0	; () banked
  9755  00131E  A7D2               	btfss	Open1USART@config& (0+255),3,b
  9756  001320  D002               	goto	l1193
  9757                           
  9758                           ; BSR set to: 0
  9759  001322  88AB               	bsf	4011,4,c	;volatile
  9760  001324  D002               	goto	l5750
  9761  001326                     l1193:
  9762                           
  9763                           ; BSR set to: 0
  9764  001326  8AAB               	bsf	4011,5,c	;volatile
  9765  001328  D000               	goto	l5750
  9766  00132A                     l5750:
  9767                           
  9768                           ; BSR set to: 0
  9769  00132A  0100               	movlb	0	; () banked
  9770  00132C  A9D2               	btfss	Open1USART@config& (0+255),4,b
  9771  00132E  D002               	goto	l5754
  9772                           
  9773                           ; BSR set to: 0
  9774  001330  84AC               	bsf	4012,2,c	;volatile
  9775  001332  D000               	goto	l5754
  9776  001334                     l5754:
  9777                           
  9778                           ; BSR set to: 0
  9779  001334  0100               	movlb	0	; () banked
  9780  001336  ABD2               	btfss	Open1USART@config& (0+255),5,b
  9781  001338  D002               	goto	l5758
  9782                           
  9783                           ; BSR set to: 0
  9784  00133A  86AB               	bsf	4011,3,c	;volatile
  9785  00133C  D000               	goto	l5758
  9786  00133E                     l5758:
  9787                           
  9788                           ; BSR set to: 0
  9789  00133E  0100               	movlb	0	; () banked
  9790  001340  ADD2               	btfss	Open1USART@config& (0+255),6,b
  9791  001342  D002               	goto	l1197
  9792                           
  9793                           ; BSR set to: 0
  9794  001344  8A9D               	bsf	3997,5,c	;volatile
  9795  001346  D002               	goto	l5762
  9796  001348                     l1197:
  9797                           
  9798                           ; BSR set to: 0
  9799  001348  9A9D               	bcf	3997,5,c	;volatile
  9800  00134A  D000               	goto	l5762
  9801  00134C                     l5762:
  9802                           
  9803                           ; BSR set to: 0
  9804  00134C  0100               	movlb	0	; () banked
  9805  00134E  AFD2               	btfss	Open1USART@config& (0+255),7,b
  9806  001350  D002               	goto	l1199
  9807                           
  9808                           ; BSR set to: 0
  9809  001352  889D               	bsf	3997,4,c	;volatile
  9810  001354  D001               	goto	l1200
  9811  001356                     l1199:
  9812                           
  9813                           ; BSR set to: 0
  9814  001356  989D               	bcf	3997,4,c	;volatile
  9815  001358                     l1200:
  9816                           
  9817                           ; BSR set to: 0
  9818  001358  C0D0  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  9819                           
  9820                           ; BSR set to: 0
  9821  00135C  0100               	movlb	0	; () banked
  9822  00135E  51D1               	movf	(Open1USART@spbrg+1)& (0+255),w,b
  9823  001360  6E7F               	movwf	3967,c	;volatile
  9824                           
  9825                           ; BSR set to: 0
  9826  001362  8AAC               	bsf	4012,5,c	;volatile
  9827                           
  9828                           ; BSR set to: 0
  9829  001364  8EAB               	bsf	4011,7,c	;volatile
  9830                           
  9831                           ; BSR set to: 0
  9832  001366  9C94               	bcf	3988,6,c	;volatile
  9833                           
  9834                           ; BSR set to: 0
  9835  001368  8E94               	bsf	3988,7,c	;volatile
  9836                           
  9837                           ; BSR set to: 0
  9838  00136A  B8AC               	btfsc	4012,4,c	;volatile
  9839                           
  9840                           ; BSR set to: 0
  9841  00136C  BEAC               	btfsc	4012,7,c	;volatile
  9842  00136E  D002               	goto	l1202
  9843                           
  9844                           ; BSR set to: 0
  9845  001370  8C94               	bsf	3988,6,c	;volatile
  9846  001372  D000               	goto	l1202
  9847  001374                     l1202:
  9848                           
  9849                           ; BSR set to: 0
  9850  001374  0012               	return		;funcret
  9851  001376                     __end_of_Open1USART:
  9852                           	opt stack 0
  9853                           prodh	equ	0xFF4
  9854                           prodl	equ	0xFF3
  9855                           intcon	equ	0xFF2
  9856                           intcon2	equ	0xFF1
  9857                           intcon3	equ	0xFF0
  9858                           postinc0	equ	0xFEE
  9859                           wreg	equ	0xFE8
  9860                           indf2	equ	0xFDF
  9861                           postinc2	equ	0xFDE
  9862                           postdec2	equ	0xFDD
  9863                           fsr2h	equ	0xFDA
  9864                           fsr2l	equ	0xFD9
  9865                           status	equ	0xFD8
  9866                           
  9867 ;; *************** function _FlushTxBuf *****************
  9868 ;; Defined at:
  9869 ;;		line 90 in file "Wireless.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  index           1   16[BANK0 ] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;		None               void
  9876 ;; Registers used:
  9877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;Total ram usage:        1 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    7
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_ConfigureWireless
  9894 ;;		_SendStatus
  9895 ;;		_SendLineMode
  9896 ;;		_SendOffsets
  9897 ;;		_SendDefaultPIDValues
  9898 ;;		_SendStoredPIDValues
  9899 ;;		_SendCurrentPIDValues
  9900 ;;		_SendBattVoltageInitial
  9901 ;;		_SendPIDSetPointOnLine
  9902 ;;		_SendPIDSetPointOffLine
  9903 ;;		_SendThreshold
  9904 ;;		_SendBattVoltage
  9905 ;;		_SendBattCurrent
  9906 ;;		_SendBattCurrentAcc
  9907 ;;		_SendPIDError
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text78
  9912  001DE6                     __ptext78:
  9913                           	opt stack 0
  9914  001DE6                     _FlushTxBuf:
  9915                           	opt stack 21
  9916                           
  9917                           ;Wireless.c: 91: unsigned char index;
  9918                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;incstack = 0
  9922  001DE6  0E00               	movlw	0
  9923  001DE8  0100               	movlb	0	; () banked
  9924  001DEA  6FD0               	movwf	FlushTxBuf@index& (0+255),b
  9925  001DEC                     l5384:
  9926                           
  9927                           ; BSR set to: 0
  9928  001DEC  0E18               	movlw	24
  9929  001DEE  0100               	movlb	0	; () banked
  9930  001DF0  65D0               	cpfsgt	FlushTxBuf@index& (0+255),b
  9931  001DF2  D001               	goto	l5388
  9932                           
  9933                           ; BSR set to: 0
  9934  001DF4  D00E               	goto	l5394
  9935  001DF6                     l5388:
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;Wireless.c: 94: Tx_buffer[index] = 0;
  9939  001DF6  0100               	movlb	0	; () banked
  9940  001DF8  51D0               	movf	FlushTxBuf@index& (0+255),w,b
  9941  001DFA  0D01               	mullw	1
  9942  001DFC  0E79               	movlw	low _Tx_buffer
  9943  001DFE  24F3               	addwf	prodl,w,c
  9944  001E00  6ED9               	movwf	fsr2l,c
  9945  001E02  0E00               	movlw	high _Tx_buffer
  9946  001E04  20F4               	addwfc	prodh,w,c
  9947  001E06  6EDA               	movwf	fsr2h,c
  9948  001E08  0E00               	movlw	0
  9949  001E0A  6EDF               	movwf	indf2,c
  9950                           
  9951                           ; BSR set to: 0
  9952  001E0C  0100               	movlb	0	; () banked
  9953  001E0E  2BD0               	incf	FlushTxBuf@index& (0+255),f,b
  9954  001E10  D7ED               	goto	l5384
  9955  001E12                     l5394:
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;Wireless.c: 95: }
  9959                           ;Wireless.c: 97: put_Tx_index = 0;
  9960  001E12  0E00               	movlw	0
  9961  001E14  6E20               	movwf	_put_Tx_index,c
  9962                           
  9963                           ;Wireless.c: 98: get_Tx_index = 0;
  9964  001E16  0E00               	movlw	0
  9965  001E18  6E1E               	movwf	_get_Tx_index,c
  9966                           
  9967                           ; BSR set to: 0
  9968  001E1A  0012               	return		;funcret
  9969  001E1C                     __end_of_FlushTxBuf:
  9970                           	opt stack 0
  9971                           prodh	equ	0xFF4
  9972                           prodl	equ	0xFF3
  9973                           intcon	equ	0xFF2
  9974                           intcon2	equ	0xFF1
  9975                           intcon3	equ	0xFF0
  9976                           postinc0	equ	0xFEE
  9977                           wreg	equ	0xFE8
  9978                           indf2	equ	0xFDF
  9979                           postinc2	equ	0xFDE
  9980                           postdec2	equ	0xFDD
  9981                           fsr2h	equ	0xFDA
  9982                           fsr2l	equ	0xFD9
  9983                           status	equ	0xFD8
  9984                           
  9985 ;; *************** function _FlushRxBuf *****************
  9986 ;; Defined at:
  9987 ;;		line 102 in file "Wireless.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;  index           1   16[BANK0 ] unsigned char 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;		None               void
  9994 ;; Registers used:
  9995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;Total ram usage:        1 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    7
 10008 ;; This function calls:
 10009 ;;		Nothing
 10010 ;; This function is called by:
 10011 ;;		_ConfigureWireless
 10012 ;;		_SetPIDValues
 10013 ;;		_ReceiveCommandsEnable
 10014 ;; This function uses a non-reentrant model
 10015 ;;
 10016                           
 10017                           	psect	text79
 10018  001E1C                     __ptext79:
 10019                           	opt stack 0
 10020  001E1C                     _FlushRxBuf:
 10021                           	opt stack 22
 10022                           
 10023                           ;Wireless.c: 103: unsigned char index;
 10024                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;incstack = 0
 10028  001E1C  0E00               	movlw	0
 10029  001E1E  0100               	movlb	0	; () banked
 10030  001E20  6FD0               	movwf	FlushRxBuf@index& (0+255),b
 10031  001E22                     l5618:
 10032                           
 10033                           ; BSR set to: 0
 10034  001E22  0E18               	movlw	24
 10035  001E24  0100               	movlb	0	; () banked
 10036  001E26  65D0               	cpfsgt	FlushRxBuf@index& (0+255),b
 10037  001E28  D001               	goto	l5622
 10038                           
 10039                           ; BSR set to: 0
 10040  001E2A  D00E               	goto	l5628
 10041  001E2C                     l5622:
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10045  001E2C  0100               	movlb	0	; () banked
 10046  001E2E  51D0               	movf	FlushRxBuf@index& (0+255),w,b
 10047  001E30  0D01               	mullw	1
 10048  001E32  0E60               	movlw	low _Rx_buffer
 10049  001E34  24F3               	addwf	prodl,w,c
 10050  001E36  6ED9               	movwf	fsr2l,c
 10051  001E38  0E00               	movlw	high _Rx_buffer
 10052  001E3A  20F4               	addwfc	prodh,w,c
 10053  001E3C  6EDA               	movwf	fsr2h,c
 10054  001E3E  0E00               	movlw	0
 10055  001E40  6EDF               	movwf	indf2,c
 10056                           
 10057                           ; BSR set to: 0
 10058  001E42  0100               	movlb	0	; () banked
 10059  001E44  2BD0               	incf	FlushRxBuf@index& (0+255),f,b
 10060  001E46  D7ED               	goto	l5618
 10061  001E48                     l5628:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;Wireless.c: 107: }
 10065                           ;Wireless.c: 109: put_Rx_index = 0;
 10066  001E48  0E00               	movlw	0
 10067  001E4A  6E1F               	movwf	_put_Rx_index,c
 10068                           
 10069                           ;Wireless.c: 110: get_Rx_index = 0;
 10070  001E4C  0E00               	movlw	0
 10071  001E4E  6E1D               	movwf	_get_Rx_index,c
 10072                           
 10073                           ; BSR set to: 0
 10074  001E50  0012               	return		;funcret
 10075  001E52                     __end_of_FlushRxBuf:
 10076                           	opt stack 0
 10077                           prodh	equ	0xFF4
 10078                           prodl	equ	0xFF3
 10079                           intcon	equ	0xFF2
 10080                           intcon2	equ	0xFF1
 10081                           intcon3	equ	0xFF0
 10082                           postinc0	equ	0xFEE
 10083                           wreg	equ	0xFE8
 10084                           indf2	equ	0xFDF
 10085                           postinc2	equ	0xFDE
 10086                           postdec2	equ	0xFDD
 10087                           fsr2h	equ	0xFDA
 10088                           fsr2l	equ	0xFD9
 10089                           status	equ	0xFD8
 10090                           
 10091 ;; *************** function _ConfigureUltrasound *****************
 10092 ;; Defined at:
 10093 ;;		line 9 in file "Ultrasound.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  echo_to_cm      3   20[BANK0 ] float 
 10096 ;;  echo_to_in      3   23[BANK0 ] float 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;		None               void
 10101 ;; Registers used:
 10102 ;;		wreg, status,2, cstack
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;Total ram usage:        6 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; Hardware stack levels required when called:    8
 10115 ;; This function calls:
 10116 ;;		_WriteTimer1
 10117 ;; This function is called by:
 10118 ;;		_main
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text80
 10123  001FC6                     __ptext80:
 10124                           	opt stack 0
 10125  001FC6                     _ConfigureUltrasound:
 10126                           	opt stack 22
 10127                           
 10128                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;incstack = 0
 10132  001FC6  C0D4  F0E6         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10133  001FCA  C0D5  F0E7         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10134  001FCE  C0D6  F0E8         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10135                           
 10136                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10137  001FD2  C0D7  F0E9         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10138  001FD6  C0D8  F0EA         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10139  001FDA  C0D9  F0EB         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10140                           
 10141                           ;Ultrasound.c: 12: WriteTimer1(0);
 10142  001FDE  0E00               	movlw	0
 10143  001FE0  0100               	movlb	0	; () banked
 10144  001FE2  6FD1               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10145  001FE4  0E00               	movlw	0
 10146  001FE6  6FD0               	movwf	WriteTimer1@timer1& (0+255),b
 10147  001FE8  EC37  F011         	call	_WriteTimer1	;wreg free
 10148  001FEC  0012               	return		;funcret
 10149  001FEE                     __end_of_ConfigureUltrasound:
 10150                           	opt stack 0
 10151                           prodh	equ	0xFF4
 10152                           prodl	equ	0xFF3
 10153                           intcon	equ	0xFF2
 10154                           intcon2	equ	0xFF1
 10155                           intcon3	equ	0xFF0
 10156                           postinc0	equ	0xFEE
 10157                           wreg	equ	0xFE8
 10158                           indf2	equ	0xFDF
 10159                           postinc2	equ	0xFDE
 10160                           postdec2	equ	0xFDD
 10161                           fsr2h	equ	0xFDA
 10162                           fsr2l	equ	0xFD9
 10163                           status	equ	0xFD8
 10164                           
 10165 ;; *************** function _ConfigureTimer2 *****************
 10166 ;; Defined at:
 10167 ;;		line 144 in file "FastBuggy17_Main_Code_TUNING.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;		None               void
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:    8
 10188 ;; This function calls:
 10189 ;;		_OpenTimer2
 10190 ;; This function is called by:
 10191 ;;		_main
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text81
 10196  0023C0                     __ptext81:
 10197                           	opt stack 0
 10198  0023C0                     _ConfigureTimer2:
 10199                           	opt stack 22
 10200                           
 10201                           ;FastBuggy17_Main_Code_TUNING.c: 146: OpenTimer2(0b01111111
 10202                           ;FastBuggy17_Main_Code_TUNING.c: 147: & 0b11111100
 10203                           ;FastBuggy17_Main_Code_TUNING.c: 148: & 0b10000111
 10204                           ;FastBuggy17_Main_Code_TUNING.c: 149: & 0b10110111);
 10205                           
 10206                           ;incstack = 0
 10207  0023C0  0E04               	movlw	4
 10208  0023C2  EC6A  F010         	call	_OpenTimer2
 10209  0023C6  0012               	return		;funcret
 10210  0023C8                     __end_of_ConfigureTimer2:
 10211                           	opt stack 0
 10212                           prodh	equ	0xFF4
 10213                           prodl	equ	0xFF3
 10214                           intcon	equ	0xFF2
 10215                           intcon2	equ	0xFF1
 10216                           intcon3	equ	0xFF0
 10217                           postinc0	equ	0xFEE
 10218                           wreg	equ	0xFE8
 10219                           indf2	equ	0xFDF
 10220                           postinc2	equ	0xFDE
 10221                           postdec2	equ	0xFDD
 10222                           fsr2h	equ	0xFDA
 10223                           fsr2l	equ	0xFD9
 10224                           status	equ	0xFD8
 10225                           
 10226 ;; *************** function _OpenTimer2 *****************
 10227 ;; Defined at:
 10228 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  config          1    wreg     unsigned char 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;  config          1   16[BANK0 ] unsigned char 
 10233 ;; Return value:  Size  Location     Type
 10234 ;;		None               void
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10246 ;;Total ram usage:        1 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; Hardware stack levels required when called:    7
 10249 ;; This function calls:
 10250 ;;		Nothing
 10251 ;; This function is called by:
 10252 ;;		_ConfigureTimer2
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text82
 10257  0020D4                     __ptext82:
 10258                           	opt stack 0
 10259  0020D4                     _OpenTimer2:
 10260                           	opt stack 22
 10261                           
 10262                           ;incstack = 0
 10263                           ;OpenTimer2@config stored from wreg
 10264  0020D4  0100               	movlb	0	; () banked
 10265  0020D6  6FD0               	movwf	OpenTimer2@config& (0+255),b
 10266                           
 10267                           ; BSR set to: 0
 10268  0020D8  0100               	movlb	0	; () banked
 10269  0020DA  51D0               	movf	OpenTimer2@config& (0+255),w,b
 10270  0020DC  0BFB               	andlw	251
 10271  0020DE  6ECA               	movwf	4042,c	;volatile
 10272                           
 10273                           ; BSR set to: 0
 10274  0020E0  0E00               	movlw	0
 10275  0020E2  6ECC               	movwf	4044,c	;volatile
 10276                           
 10277                           ; BSR set to: 0
 10278  0020E4  929E               	bcf	3998,1,c	;volatile
 10279                           
 10280                           ; BSR set to: 0
 10281  0020E6  0100               	movlb	0	; () banked
 10282  0020E8  AFD0               	btfss	OpenTimer2@config& (0+255),7,b
 10283  0020EA  D002               	goto	l1169
 10284                           
 10285                           ; BSR set to: 0
 10286  0020EC  829D               	bsf	3997,1,c	;volatile
 10287  0020EE  D001               	goto	l1170
 10288  0020F0                     l1169:
 10289                           
 10290                           ; BSR set to: 0
 10291  0020F0  929D               	bcf	3997,1,c	;volatile
 10292  0020F2                     l1170:
 10293                           
 10294                           ; BSR set to: 0
 10295  0020F2  84CA               	bsf	4042,2,c	;volatile
 10296                           
 10297                           ; BSR set to: 0
 10298  0020F4  0012               	return		;funcret
 10299  0020F6                     __end_of_OpenTimer2:
 10300                           	opt stack 0
 10301                           prodh	equ	0xFF4
 10302                           prodl	equ	0xFF3
 10303                           intcon	equ	0xFF2
 10304                           intcon2	equ	0xFF1
 10305                           intcon3	equ	0xFF0
 10306                           postinc0	equ	0xFEE
 10307                           wreg	equ	0xFE8
 10308                           indf2	equ	0xFDF
 10309                           postinc2	equ	0xFDE
 10310                           postdec2	equ	0xFDD
 10311                           fsr2h	equ	0xFDA
 10312                           fsr2l	equ	0xFD9
 10313                           status	equ	0xFD8
 10314                           
 10315 ;; *************** function _ConfigureTimer1 *****************
 10316 ;; Defined at:
 10317 ;;		line 126 in file "FastBuggy17_Main_Code_TUNING.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;		None
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;		None
 10322 ;; Return value:  Size  Location     Type
 10323 ;;		None               void
 10324 ;; Registers used:
 10325 ;;		wreg, status,2, status,0, cstack
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;Total ram usage:        0 bytes
 10336 ;; Hardware stack levels used:    1
 10337 ;; Hardware stack levels required when called:    8
 10338 ;; This function calls:
 10339 ;;		_OpenTimer1
 10340 ;;		_WriteTimer1
 10341 ;; This function is called by:
 10342 ;;		_main
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text83
 10347  0021C4                     __ptext83:
 10348                           	opt stack 0
 10349  0021C4                     _ConfigureTimer1:
 10350                           	opt stack 22
 10351                           
 10352                           ;FastBuggy17_Main_Code_TUNING.c: 128: OpenTimer1(0b01111111
 10353                           ;FastBuggy17_Main_Code_TUNING.c: 129: & 0b11111111
 10354                           ;FastBuggy17_Main_Code_TUNING.c: 130: & 0b11111101
 10355                           ;FastBuggy17_Main_Code_TUNING.c: 131: & 0b11011111
 10356                           ;FastBuggy17_Main_Code_TUNING.c: 132: & 0b11110111
 10357                           ;FastBuggy17_Main_Code_TUNING.c: 133: & 0b11111111);
 10358                           
 10359                           ; BSR set to: 0
 10360                           ;incstack = 0
 10361  0021C4  0E55               	movlw	85
 10362  0021C6  EC29  F00F         	call	_OpenTimer1
 10363                           
 10364                           ;FastBuggy17_Main_Code_TUNING.c: 137: T1CONbits.TMR1ON = 0;
 10365  0021CA  90CD               	bcf	4045,0,c	;volatile
 10366                           
 10367                           ;FastBuggy17_Main_Code_TUNING.c: 139: WriteTimer1(0);
 10368  0021CC  0E00               	movlw	0
 10369  0021CE  0100               	movlb	0	; () banked
 10370  0021D0  6FD1               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10371  0021D2  0E00               	movlw	0
 10372  0021D4  6FD0               	movwf	WriteTimer1@timer1& (0+255),b
 10373  0021D6  EC37  F011         	call	_WriteTimer1	;wreg free
 10374  0021DA  0012               	return		;funcret
 10375  0021DC                     __end_of_ConfigureTimer1:
 10376                           	opt stack 0
 10377                           prodh	equ	0xFF4
 10378                           prodl	equ	0xFF3
 10379                           intcon	equ	0xFF2
 10380                           intcon2	equ	0xFF1
 10381                           intcon3	equ	0xFF0
 10382                           postinc0	equ	0xFEE
 10383                           wreg	equ	0xFE8
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           postdec2	equ	0xFDD
 10387                           fsr2h	equ	0xFDA
 10388                           fsr2l	equ	0xFD9
 10389                           status	equ	0xFD8
 10390                           
 10391 ;; *************** function _WriteTimer1 *****************
 10392 ;; Defined at:
 10393 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  timer1          2   16[BANK0 ] unsigned int 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  timer           2   18[BANK0 ] struct Timers
 10398 ;; Return value:  Size  Location     Type
 10399 ;;		None               void
 10400 ;; Registers used:
 10401 ;;		None
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;Total ram usage:        4 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    7
 10414 ;; This function calls:
 10415 ;;		Nothing
 10416 ;; This function is called by:
 10417 ;;		_ConfigureUltrasound
 10418 ;;		_ConfigureTimer1
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text84
 10423  00226E                     __ptext84:
 10424                           	opt stack 0
 10425  00226E                     _WriteTimer1:
 10426                           	opt stack 22
 10427                           
 10428                           ;incstack = 0
 10429  00226E  C0D0  F0D2         	movff	WriteTimer1@timer1,WriteTimer1@timer
 10430  002272  C0D1  F0D3         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 10431  002276  C0D3  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 10432  00227A  C0D2  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 10433  00227E  0012               	return		;funcret
 10434  002280                     __end_of_WriteTimer1:
 10435                           	opt stack 0
 10436                           prodh	equ	0xFF4
 10437                           prodl	equ	0xFF3
 10438                           intcon	equ	0xFF2
 10439                           intcon2	equ	0xFF1
 10440                           intcon3	equ	0xFF0
 10441                           postinc0	equ	0xFEE
 10442                           wreg	equ	0xFE8
 10443                           indf2	equ	0xFDF
 10444                           postinc2	equ	0xFDE
 10445                           postdec2	equ	0xFDD
 10446                           fsr2h	equ	0xFDA
 10447                           fsr2l	equ	0xFD9
 10448                           status	equ	0xFD8
 10449                           
 10450 ;; *************** function _OpenTimer1 *****************
 10451 ;; Defined at:
 10452 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  config          1    wreg     unsigned char 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;  config          1   16[BANK0 ] unsigned char 
 10457 ;; Return value:  Size  Location     Type
 10458 ;;		None               void
 10459 ;; Registers used:
 10460 ;;		wreg, status,2, status,0
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;Total ram usage:        1 bytes
 10471 ;; Hardware stack levels used:    1
 10472 ;; Hardware stack levels required when called:    7
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_ConfigureTimer1
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text85
 10481  001E52                     __ptext85:
 10482                           	opt stack 0
 10483  001E52                     _OpenTimer1:
 10484                           	opt stack 22
 10485                           
 10486                           ;incstack = 0
 10487                           ;OpenTimer1@config stored from wreg
 10488  001E52  0100               	movlb	0	; () banked
 10489  001E54  6FD0               	movwf	OpenTimer1@config& (0+255),b
 10490                           
 10491                           ; BSR set to: 0
 10492  001E56  0100               	movlb	0	; () banked
 10493  001E58  51D0               	movf	OpenTimer1@config& (0+255),w,b
 10494  001E5A  0B7E               	andlw	126
 10495  001E5C  6ECD               	movwf	4045,c	;volatile
 10496                           
 10497                           ; BSR set to: 0
 10498  001E5E  0100               	movlb	0	; () banked
 10499  001E60  ADD0               	btfss	OpenTimer1@config& (0+255),6,b
 10500  001E62  D002               	goto	l1138
 10501                           
 10502                           ; BSR set to: 0
 10503  001E64  8ECD               	bsf	4045,7,c	;volatile
 10504  001E66  D002               	goto	l5854
 10505  001E68                     l1138:
 10506                           
 10507                           ; BSR set to: 0
 10508  001E68  9ECD               	bcf	4045,7,c	;volatile
 10509  001E6A  D000               	goto	l5854
 10510  001E6C                     l5854:
 10511                           
 10512                           ; BSR set to: 0
 10513  001E6C  0E00               	movlw	0
 10514  001E6E  6ECF               	movwf	4047,c	;volatile
 10515  001E70  0E00               	movlw	0
 10516  001E72  6ECE               	movwf	4046,c	;volatile
 10517                           
 10518                           ; BSR set to: 0
 10519  001E74  909E               	bcf	3998,0,c	;volatile
 10520                           
 10521                           ; BSR set to: 0
 10522  001E76  0100               	movlb	0	; () banked
 10523  001E78  AFD0               	btfss	OpenTimer1@config& (0+255),7,b
 10524  001E7A  D002               	goto	l1140
 10525                           
 10526                           ; BSR set to: 0
 10527  001E7C  809D               	bsf	3997,0,c	;volatile
 10528  001E7E  D001               	goto	l1141
 10529  001E80                     l1140:
 10530                           
 10531                           ; BSR set to: 0
 10532  001E80  909D               	bcf	3997,0,c	;volatile
 10533  001E82                     l1141:
 10534                           
 10535                           ; BSR set to: 0
 10536  001E82  80CD               	bsf	4045,0,c	;volatile
 10537                           
 10538                           ; BSR set to: 0
 10539  001E84  0012               	return		;funcret
 10540  001E86                     __end_of_OpenTimer1:
 10541                           	opt stack 0
 10542                           prodh	equ	0xFF4
 10543                           prodl	equ	0xFF3
 10544                           intcon	equ	0xFF2
 10545                           intcon2	equ	0xFF1
 10546                           intcon3	equ	0xFF0
 10547                           postinc0	equ	0xFEE
 10548                           wreg	equ	0xFE8
 10549                           indf2	equ	0xFDF
 10550                           postinc2	equ	0xFDE
 10551                           postdec2	equ	0xFDD
 10552                           fsr2h	equ	0xFDA
 10553                           fsr2l	equ	0xFD9
 10554                           status	equ	0xFD8
 10555                           
 10556 ;; *************** function _ConfigureTimer0 *****************
 10557 ;; Defined at:
 10558 ;;		line 112 in file "FastBuggy17_Main_Code_TUNING.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;		None
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;		None               void
 10565 ;; Registers used:
 10566 ;;		wreg, status,2, status,0, cstack
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;Total ram usage:        0 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; Hardware stack levels required when called:    8
 10579 ;; This function calls:
 10580 ;;		_OpenTimer0
 10581 ;;		_WriteTimer0
 10582 ;; This function is called by:
 10583 ;;		_main
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text86
 10588  0021F2                     __ptext86:
 10589                           	opt stack 0
 10590  0021F2                     _ConfigureTimer0:
 10591                           	opt stack 22
 10592                           
 10593                           ;FastBuggy17_Main_Code_TUNING.c: 114: OpenTimer0(0b11111111
 10594                           ;FastBuggy17_Main_Code_TUNING.c: 115: & 0b10111111
 10595                           ;FastBuggy17_Main_Code_TUNING.c: 116: & 0b11011111
 10596                           ;FastBuggy17_Main_Code_TUNING.c: 117: & 0b11111111);
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;incstack = 0
 10600  0021F2  0E9F               	movlw	159
 10601  0021F4  EC1E  F010         	call	_OpenTimer0
 10602                           
 10603                           ;FastBuggy17_Main_Code_TUNING.c: 121: WriteTimer0(63036);
 10604  0021F8  0EF6               	movlw	246
 10605  0021FA  0100               	movlb	0	; () banked
 10606  0021FC  6FD1               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 10607  0021FE  0E3C               	movlw	60
 10608  002200  6FD0               	movwf	WriteTimer0@timer0& (0+255),b
 10609  002202  EC40  F011         	call	_WriteTimer0	;wreg free
 10610  002206  0012               	return		;funcret
 10611  002208                     __end_of_ConfigureTimer0:
 10612                           	opt stack 0
 10613                           prodh	equ	0xFF4
 10614                           prodl	equ	0xFF3
 10615                           intcon	equ	0xFF2
 10616                           intcon2	equ	0xFF1
 10617                           intcon3	equ	0xFF0
 10618                           postinc0	equ	0xFEE
 10619                           wreg	equ	0xFE8
 10620                           indf2	equ	0xFDF
 10621                           postinc2	equ	0xFDE
 10622                           postdec2	equ	0xFDD
 10623                           fsr2h	equ	0xFDA
 10624                           fsr2l	equ	0xFD9
 10625                           status	equ	0xFD8
 10626                           
 10627 ;; *************** function _WriteTimer0 *****************
 10628 ;; Defined at:
 10629 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  timer0          2   16[BANK0 ] unsigned int 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;  timer           2   18[BANK0 ] struct Timers
 10634 ;; Return value:  Size  Location     Type
 10635 ;;		None               void
 10636 ;; Registers used:
 10637 ;;		None
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10646 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10647 ;;Total ram usage:        4 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; Hardware stack levels required when called:    7
 10650 ;; This function calls:
 10651 ;;		Nothing
 10652 ;; This function is called by:
 10653 ;;		_ConfigureTimer0
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text87
 10658  002280                     __ptext87:
 10659                           	opt stack 0
 10660  002280                     _WriteTimer0:
 10661                           	opt stack 22
 10662                           
 10663                           ;incstack = 0
 10664  002280  C0D0  F0D2         	movff	WriteTimer0@timer0,WriteTimer0@timer
 10665  002284  C0D1  F0D3         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 10666  002288  C0D3  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 10667  00228C  C0D2  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 10668  002290  0012               	return		;funcret
 10669  002292                     __end_of_WriteTimer0:
 10670                           	opt stack 0
 10671                           prodh	equ	0xFF4
 10672                           prodl	equ	0xFF3
 10673                           intcon	equ	0xFF2
 10674                           intcon2	equ	0xFF1
 10675                           intcon3	equ	0xFF0
 10676                           postinc0	equ	0xFEE
 10677                           wreg	equ	0xFE8
 10678                           indf2	equ	0xFDF
 10679                           postinc2	equ	0xFDE
 10680                           postdec2	equ	0xFDD
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function _OpenTimer0 *****************
 10686 ;; Defined at:
 10687 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  config          1    wreg     unsigned char 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  config          1   16[BANK0 ] unsigned char 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;		None               void
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;Total ram usage:        1 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    7
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_ConfigureTimer0
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text88
 10716  00203C                     __ptext88:
 10717                           	opt stack 0
 10718  00203C                     _OpenTimer0:
 10719                           	opt stack 22
 10720                           
 10721                           ;incstack = 0
 10722                           ;OpenTimer0@config stored from wreg
 10723  00203C  0100               	movlb	0	; () banked
 10724  00203E  6FD0               	movwf	OpenTimer0@config& (0+255),b
 10725                           
 10726                           ; BSR set to: 0
 10727  002040  0100               	movlb	0	; () banked
 10728  002042  51D0               	movf	OpenTimer0@config& (0+255),w,b
 10729  002044  0B7F               	andlw	127
 10730  002046  6ED5               	movwf	4053,c	;volatile
 10731                           
 10732                           ; BSR set to: 0
 10733  002048  0E00               	movlw	0
 10734  00204A  6ED7               	movwf	4055,c	;volatile
 10735                           
 10736                           ; BSR set to: 0
 10737  00204C  0E00               	movlw	0
 10738  00204E  6ED6               	movwf	4054,c	;volatile
 10739                           
 10740                           ; BSR set to: 0
 10741  002050  94F2               	bcf	intcon,2,c	;volatile
 10742                           
 10743                           ; BSR set to: 0
 10744  002052  0100               	movlb	0	; () banked
 10745  002054  AFD0               	btfss	OpenTimer0@config& (0+255),7,b
 10746  002056  D002               	goto	l1114
 10747                           
 10748                           ; BSR set to: 0
 10749  002058  8AF2               	bsf	intcon,5,c	;volatile
 10750  00205A  D001               	goto	l1115
 10751  00205C                     l1114:
 10752                           
 10753                           ; BSR set to: 0
 10754  00205C  9AF2               	bcf	intcon,5,c	;volatile
 10755  00205E                     l1115:
 10756                           
 10757                           ; BSR set to: 0
 10758  00205E  8ED5               	bsf	4053,7,c	;volatile
 10759                           
 10760                           ; BSR set to: 0
 10761  002060  0012               	return		;funcret
 10762  002062                     __end_of_OpenTimer0:
 10763                           	opt stack 0
 10764                           prodh	equ	0xFF4
 10765                           prodl	equ	0xFF3
 10766                           intcon	equ	0xFF2
 10767                           intcon2	equ	0xFF1
 10768                           intcon3	equ	0xFF0
 10769                           postinc0	equ	0xFEE
 10770                           wreg	equ	0xFE8
 10771                           indf2	equ	0xFDF
 10772                           postinc2	equ	0xFDE
 10773                           postdec2	equ	0xFDD
 10774                           fsr2h	equ	0xFDA
 10775                           fsr2l	equ	0xFD9
 10776                           status	equ	0xFD8
 10777                           
 10778 ;; *************** function _ConfigurePWM *****************
 10779 ;; Defined at:
 10780 ;;		line 162 in file "FastBuggy17_Main_Code_TUNING.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;		None
 10785 ;; Return value:  Size  Location     Type
 10786 ;;		None               void
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;Total ram usage:        0 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    8
 10801 ;; This function calls:
 10802 ;;		_OpenPWM4
 10803 ;;		_OpenPWM5
 10804 ;; This function is called by:
 10805 ;;		_main
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809                           	psect	text89
 10810  002352                     __ptext89:
 10811                           	opt stack 0
 10812  002352                     _ConfigurePWM:
 10813                           	opt stack 22
 10814                           
 10815                           ;FastBuggy17_Main_Code_TUNING.c: 164: OpenPWM4(130);
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;incstack = 0
 10819  002352  0E82               	movlw	130
 10820  002354  EC44  F010         	call	_OpenPWM4
 10821                           
 10822                           ;FastBuggy17_Main_Code_TUNING.c: 165: OpenPWM5(130);
 10823  002358  0E82               	movlw	130
 10824  00235A  EC31  F010         	call	_OpenPWM5
 10825  00235E  0012               	return		;funcret
 10826  002360                     __end_of_ConfigurePWM:
 10827                           	opt stack 0
 10828                           prodh	equ	0xFF4
 10829                           prodl	equ	0xFF3
 10830                           intcon	equ	0xFF2
 10831                           intcon2	equ	0xFF1
 10832                           intcon3	equ	0xFF0
 10833                           postinc0	equ	0xFEE
 10834                           wreg	equ	0xFE8
 10835                           indf2	equ	0xFDF
 10836                           postinc2	equ	0xFDE
 10837                           postdec2	equ	0xFDD
 10838                           fsr2h	equ	0xFDA
 10839                           fsr2l	equ	0xFD9
 10840                           status	equ	0xFD8
 10841                           
 10842 ;; *************** function _OpenPWM5 *****************
 10843 ;; Defined at:
 10844 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;  period          1    wreg     unsigned char 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;  period          1   16[BANK0 ] unsigned char 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;		None               void
 10851 ;; Registers used:
 10852 ;;		wreg, status,2
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;Total ram usage:        1 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    7
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_ConfigurePWM
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text90
 10873  002062                     __ptext90:
 10874                           	opt stack 0
 10875  002062                     _OpenPWM5:
 10876                           	opt stack 22
 10877                           
 10878                           ;incstack = 0
 10879                           ;OpenPWM5@period stored from wreg
 10880  002062  0100               	movlb	0	; () banked
 10881  002064  6FD0               	movwf	OpenPWM5@period& (0+255),b
 10882                           
 10883                           ; BSR set to: 0
 10884  002066  0E0C               	movlw	12
 10885  002068  6E70               	movwf	3952,c	;volatile
 10886                           
 10887                           ; BSR set to: 0
 10888  00206A  ACB1               	btfss	4017,6,c	;volatile
 10889                           
 10890                           ; BSR set to: 0
 10891  00206C  B6B1               	btfsc	4017,3,c	;volatile
 10892  00206E  D005               	goto	l1092
 10893                           
 10894                           ; BSR set to: 0
 10895  002070  94CA               	bcf	4042,2,c	;volatile
 10896                           
 10897                           ; BSR set to: 0
 10898  002072  C0D0  FFCB         	movff	OpenPWM5@period,4043	;volatile
 10899                           
 10900                           ; BSR set to: 0
 10901  002076  84CA               	bsf	4042,2,c	;volatile
 10902  002078  D005               	goto	l5906
 10903  00207A                     l1092:
 10904                           
 10905                           ; BSR set to: 0
 10906  00207A  9476               	bcf	3958,2,c	;volatile
 10907                           
 10908                           ; BSR set to: 0
 10909  00207C  C0D0  FF77         	movff	OpenPWM5@period,3959	;volatile
 10910                           
 10911                           ; BSR set to: 0
 10912  002080  8476               	bsf	3958,2,c	;volatile
 10913  002082  D000               	goto	l5906
 10914  002084                     l5906:
 10915                           
 10916                           ; BSR set to: 0
 10917  002084  9898               	bcf	3992,4,c	;volatile
 10918                           
 10919                           ; BSR set to: 0
 10920  002086  0012               	return		;funcret
 10921  002088                     __end_of_OpenPWM5:
 10922                           	opt stack 0
 10923                           prodh	equ	0xFF4
 10924                           prodl	equ	0xFF3
 10925                           intcon	equ	0xFF2
 10926                           intcon2	equ	0xFF1
 10927                           intcon3	equ	0xFF0
 10928                           postinc0	equ	0xFEE
 10929                           wreg	equ	0xFE8
 10930                           indf2	equ	0xFDF
 10931                           postinc2	equ	0xFDE
 10932                           postdec2	equ	0xFDD
 10933                           fsr2h	equ	0xFDA
 10934                           fsr2l	equ	0xFD9
 10935                           status	equ	0xFD8
 10936                           
 10937 ;; *************** function _OpenPWM4 *****************
 10938 ;; Defined at:
 10939 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  period          1    wreg     unsigned char 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  period          1   16[BANK0 ] unsigned char 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;		None               void
 10946 ;; Registers used:
 10947 ;;		wreg, status,2
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;Total ram usage:        1 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:    7
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_ConfigurePWM
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text91
 10968  002088                     __ptext91:
 10969                           	opt stack 0
 10970  002088                     _OpenPWM4:
 10971                           	opt stack 22
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;incstack = 0
 10975                           ;OpenPWM4@period stored from wreg
 10976  002088  0100               	movlb	0	; () banked
 10977  00208A  6FD0               	movwf	OpenPWM4@period& (0+255),b
 10978                           
 10979                           ; BSR set to: 0
 10980  00208C  0E0C               	movlw	12
 10981  00208E  6E73               	movwf	3955,c	;volatile
 10982                           
 10983                           ; BSR set to: 0
 10984  002090  9698               	bcf	3992,3,c	;volatile
 10985                           
 10986                           ; BSR set to: 0
 10987  002092  ACB1               	btfss	4017,6,c	;volatile
 10988                           
 10989                           ; BSR set to: 0
 10990  002094  B6B1               	btfsc	4017,3,c	;volatile
 10991  002096  D005               	goto	l1066
 10992                           
 10993                           ; BSR set to: 0
 10994  002098  94CA               	bcf	4042,2,c	;volatile
 10995                           
 10996                           ; BSR set to: 0
 10997  00209A  C0D0  FFCB         	movff	OpenPWM4@period,4043	;volatile
 10998                           
 10999                           ; BSR set to: 0
 11000  00209E  84CA               	bsf	4042,2,c	;volatile
 11001  0020A0  D005               	goto	l1068
 11002  0020A2                     l1066:
 11003                           
 11004                           ; BSR set to: 0
 11005  0020A2  9476               	bcf	3958,2,c	;volatile
 11006                           
 11007                           ; BSR set to: 0
 11008  0020A4  C0D0  FF77         	movff	OpenPWM4@period,3959	;volatile
 11009                           
 11010                           ; BSR set to: 0
 11011  0020A8  8476               	bsf	3958,2,c	;volatile
 11012  0020AA  D000               	goto	l1068
 11013  0020AC                     l1068:
 11014                           
 11015                           ; BSR set to: 0
 11016  0020AC  0012               	return		;funcret
 11017  0020AE                     __end_of_OpenPWM4:
 11018                           	opt stack 0
 11019                           prodh	equ	0xFF4
 11020                           prodl	equ	0xFF3
 11021                           intcon	equ	0xFF2
 11022                           intcon2	equ	0xFF1
 11023                           intcon3	equ	0xFF0
 11024                           postinc0	equ	0xFEE
 11025                           wreg	equ	0xFE8
 11026                           indf2	equ	0xFDF
 11027                           postinc2	equ	0xFDE
 11028                           postdec2	equ	0xFDD
 11029                           fsr2h	equ	0xFDA
 11030                           fsr2l	equ	0xFD9
 11031                           status	equ	0xFD8
 11032                           
 11033 ;; *************** function _ConfigureInterrupts *****************
 11034 ;; Defined at:
 11035 ;;		line 55 in file "FastBuggy17_Main_Code_TUNING.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;		None               void
 11042 ;; Registers used:
 11043 ;;		None
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    7
 11056 ;; This function calls:
 11057 ;;		Nothing
 11058 ;; This function is called by:
 11059 ;;		_main
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text92
 11064  001FEE                     __ptext92:
 11065                           	opt stack 0
 11066  001FEE                     _ConfigureInterrupts:
 11067                           	opt stack 23
 11068                           
 11069                           ;FastBuggy17_Main_Code_TUNING.c: 57: INTCONbits.GIE = 1;
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;incstack = 0
 11073  001FEE  8EF2               	bsf	intcon,7,c	;volatile
 11074                           
 11075                           ;FastBuggy17_Main_Code_TUNING.c: 58: INTCONbits.PEIE = 1;
 11076  001FF0  8CF2               	bsf	intcon,6,c	;volatile
 11077                           
 11078                           ;FastBuggy17_Main_Code_TUNING.c: 59: RCONbits.IPEN = 1;
 11079  001FF2  8ED0               	bsf	4048,7,c	;volatile
 11080                           
 11081                           ;FastBuggy17_Main_Code_TUNING.c: 81: INTCON3bits.INT3IE = 0;
 11082  001FF4  9AF0               	bcf	intcon3,5,c	;volatile
 11083                           
 11084                           ;FastBuggy17_Main_Code_TUNING.c: 82: INTCON3bits.INT3IF = 0;
 11085  001FF6  94F0               	bcf	intcon3,2,c	;volatile
 11086                           
 11087                           ;FastBuggy17_Main_Code_TUNING.c: 83: INTCON2bits.INTEDG3 = 1;
 11088  001FF8  86F1               	bsf	intcon2,3,c	;volatile
 11089                           
 11090                           ;FastBuggy17_Main_Code_TUNING.c: 84: INTCON2bits.INT3IP = 1;
 11091  001FFA  82F1               	bsf	intcon2,1,c	;volatile
 11092                           
 11093                           ;FastBuggy17_Main_Code_TUNING.c: 87: INTCONbits.TMR0IE = 1;
 11094  001FFC  8AF2               	bsf	intcon,5,c	;volatile
 11095                           
 11096                           ;FastBuggy17_Main_Code_TUNING.c: 88: INTCONbits.TMR0IF = 0;
 11097  001FFE  94F2               	bcf	intcon,2,c	;volatile
 11098                           
 11099                           ;FastBuggy17_Main_Code_TUNING.c: 89: INTCON2bits.TMR0IP = 1;
 11100  002000  84F1               	bsf	intcon2,2,c	;volatile
 11101                           
 11102                           ;FastBuggy17_Main_Code_TUNING.c: 98: PIE1bits.ADIE = 0;
 11103  002002  9C9D               	bcf	3997,6,c	;volatile
 11104                           
 11105                           ;FastBuggy17_Main_Code_TUNING.c: 99: PIR1bits.ADIF = 0;
 11106  002004  9C9E               	bcf	3998,6,c	;volatile
 11107                           
 11108                           ;FastBuggy17_Main_Code_TUNING.c: 100: IPR1bits.ADIP = 0;
 11109  002006  9C9F               	bcf	3999,6,c	;volatile
 11110                           
 11111                           ;FastBuggy17_Main_Code_TUNING.c: 103: PIE1bits.RC1IE = 0;
 11112  002008  9A9D               	bcf	3997,5,c	;volatile
 11113                           
 11114                           ;FastBuggy17_Main_Code_TUNING.c: 104: PIE1bits.TX1IE = 0;
 11115  00200A  989D               	bcf	3997,4,c	;volatile
 11116                           
 11117                           ;FastBuggy17_Main_Code_TUNING.c: 105: PIR1bits.RC1IF = 0;
 11118  00200C  9A9E               	bcf	3998,5,c	;volatile
 11119                           
 11120                           ;FastBuggy17_Main_Code_TUNING.c: 106: PIR1bits.TX1IF = 0;
 11121  00200E  989E               	bcf	3998,4,c	;volatile
 11122                           
 11123                           ;FastBuggy17_Main_Code_TUNING.c: 107: IPR1bits.RC1IP = 0;
 11124  002010  9A9F               	bcf	3999,5,c	;volatile
 11125                           
 11126                           ;FastBuggy17_Main_Code_TUNING.c: 108: IPR1bits.TX1IP = 0;
 11127  002012  989F               	bcf	3999,4,c	;volatile
 11128  002014  0012               	return		;funcret
 11129  002016                     __end_of_ConfigureInterrupts:
 11130                           	opt stack 0
 11131                           prodh	equ	0xFF4
 11132                           prodl	equ	0xFF3
 11133                           intcon	equ	0xFF2
 11134                           intcon2	equ	0xFF1
 11135                           intcon3	equ	0xFF0
 11136                           postinc0	equ	0xFEE
 11137                           wreg	equ	0xFE8
 11138                           indf2	equ	0xFDF
 11139                           postinc2	equ	0xFDE
 11140                           postdec2	equ	0xFDD
 11141                           fsr2h	equ	0xFDA
 11142                           fsr2l	equ	0xFD9
 11143                           status	equ	0xFD8
 11144                           
 11145 ;; *************** function _ConfigureBuggyIO *****************
 11146 ;; Defined at:
 11147 ;;		line 185 in file "FastBuggy17_Main_Code_TUNING.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;		None
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;		None               void
 11154 ;; Registers used:
 11155 ;;		wreg, status,2
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;Total ram usage:        0 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:    7
 11168 ;; This function calls:
 11169 ;;		Nothing
 11170 ;; This function is called by:
 11171 ;;		_main
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           	psect	text93
 11176  0021AA                     __ptext93:
 11177                           	opt stack 0
 11178  0021AA                     _ConfigureBuggyIO:
 11179                           	opt stack 23
 11180                           
 11181                           ;FastBuggy17_Main_Code_TUNING.c: 188: TRISA = 0xFF;
 11182                           
 11183                           ;incstack = 0
 11184  0021AA  6892               	setf	3986,c	;volatile
 11185                           
 11186                           ;FastBuggy17_Main_Code_TUNING.c: 191: TRISB = 0xFF;
 11187  0021AC  6893               	setf	3987,c	;volatile
 11188                           
 11189                           ;FastBuggy17_Main_Code_TUNING.c: 194: TRISC = 0x9F;
 11190  0021AE  0E9F               	movlw	159
 11191  0021B0  6E94               	movwf	3988,c	;volatile
 11192                           
 11193                           ;FastBuggy17_Main_Code_TUNING.c: 197: TRISD = 0xE0;
 11194  0021B2  0EE0               	movlw	224
 11195  0021B4  6E95               	movwf	3989,c	;volatile
 11196                           
 11197                           ;FastBuggy17_Main_Code_TUNING.c: 200: TRISE = 0x00;
 11198  0021B6  0E00               	movlw	0
 11199  0021B8  6E96               	movwf	3990,c	;volatile
 11200                           
 11201                           ;FastBuggy17_Main_Code_TUNING.c: 203: TRISG = 0xE7;
 11202  0021BA  0EE7               	movlw	231
 11203  0021BC  6E98               	movwf	3992,c	;volatile
 11204                           
 11205                           ;FastBuggy17_Main_Code_TUNING.c: 206: TRISJ = 0x00;
 11206  0021BE  0E00               	movlw	0
 11207  0021C0  6E9A               	movwf	3994,c	;volatile
 11208  0021C2  0012               	return		;funcret
 11209  0021C4                     __end_of_ConfigureBuggyIO:
 11210                           	opt stack 0
 11211                           prodh	equ	0xFF4
 11212                           prodl	equ	0xFF3
 11213                           intcon	equ	0xFF2
 11214                           intcon2	equ	0xFF1
 11215                           intcon3	equ	0xFF0
 11216                           postinc0	equ	0xFEE
 11217                           wreg	equ	0xFE8
 11218                           indf2	equ	0xFDF
 11219                           postinc2	equ	0xFDE
 11220                           postdec2	equ	0xFDD
 11221                           fsr2h	equ	0xFDA
 11222                           fsr2l	equ	0xFD9
 11223                           status	equ	0xFD8
 11224                           
 11225 ;; *************** function _ConfigureADC *****************
 11226 ;; Defined at:
 11227 ;;		line 211 in file "FastBuggy17_Main_Code_TUNING.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;		None
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;		None
 11232 ;; Return value:  Size  Location     Type
 11233 ;;		None               void
 11234 ;; Registers used:
 11235 ;;		wreg, status,2, status,0, cstack
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;Total ram usage:        0 bytes
 11246 ;; Hardware stack levels used:    1
 11247 ;; Hardware stack levels required when called:    8
 11248 ;; This function calls:
 11249 ;;		_OpenADC
 11250 ;; This function is called by:
 11251 ;;		_main
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text94
 11256  002248                     __ptext94:
 11257                           	opt stack 0
 11258  002248                     _ConfigureADC:
 11259                           	opt stack 22
 11260                           
 11261                           ;FastBuggy17_Main_Code_TUNING.c: 213: OpenADC(0b10011111
 11262                           ;FastBuggy17_Main_Code_TUNING.c: 214: & 0b11111111
 11263                           ;FastBuggy17_Main_Code_TUNING.c: 215: & 0b11110101,
 11264                           ;FastBuggy17_Main_Code_TUNING.c: 216: 0b10000111
 11265                           ;FastBuggy17_Main_Code_TUNING.c: 217: & 0b01111111
 11266                           ;FastBuggy17_Main_Code_TUNING.c: 218: & 0b11111110
 11267                           ;FastBuggy17_Main_Code_TUNING.c: 219: & 0b11111101,
 11268                           ;FastBuggy17_Main_Code_TUNING.c: 220: 9);
 11269                           
 11270                           ;incstack = 0
 11271  002248  0E04               	movlw	4
 11272  00224A  0100               	movlb	0	; () banked
 11273  00224C  6FD0               	movwf	OpenADC@config2& (0+255),b
 11274  00224E  0E09               	movlw	9
 11275  002250  0100               	movlb	0	; () banked
 11276  002252  6FD1               	movwf	OpenADC@portconfig& (0+255),b
 11277  002254  0E95               	movlw	149
 11278  002256  EC7B  F00A         	call	_OpenADC
 11279  00225A  0012               	return		;funcret
 11280  00225C                     __end_of_ConfigureADC:
 11281                           	opt stack 0
 11282                           prodh	equ	0xFF4
 11283                           prodl	equ	0xFF3
 11284                           intcon	equ	0xFF2
 11285                           intcon2	equ	0xFF1
 11286                           intcon3	equ	0xFF0
 11287                           postinc0	equ	0xFEE
 11288                           wreg	equ	0xFE8
 11289                           indf2	equ	0xFDF
 11290                           postinc2	equ	0xFDE
 11291                           postdec2	equ	0xFDD
 11292                           fsr2h	equ	0xFDA
 11293                           fsr2l	equ	0xFD9
 11294                           status	equ	0xFD8
 11295                           
 11296 ;; *************** function _OpenADC *****************
 11297 ;; Defined at:
 11298 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  config          1    wreg     unsigned char 
 11301 ;;  config2         1   16[BANK0 ] unsigned char 
 11302 ;;  portconfig      1   17[BANK0 ] unsigned char 
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;  config          1   20[BANK0 ] unsigned char 
 11305 ;; Return value:  Size  Location     Type
 11306 ;;		None               void
 11307 ;; Registers used:
 11308 ;;		wreg, status,2, status,0
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11316 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11317 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;Total ram usage:        5 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    7
 11321 ;; This function calls:
 11322 ;;		Nothing
 11323 ;; This function is called by:
 11324 ;;		_ConfigureADC
 11325 ;; This function uses a non-reentrant model
 11326 ;;
 11327                           
 11328                           	psect	text95
 11329  0014F6                     __ptext95:
 11330                           	opt stack 0
 11331  0014F6                     _OpenADC:
 11332                           	opt stack 22
 11333                           
 11334                           ;incstack = 0
 11335                           ;OpenADC@config stored from wreg
 11336  0014F6  0100               	movlb	0	; () banked
 11337  0014F8  6FD4               	movwf	OpenADC@config& (0+255),b
 11338                           
 11339                           ; BSR set to: 0
 11340  0014FA  0E00               	movlw	0
 11341  0014FC  6EC2               	movwf	4034,c	;volatile
 11342  0014FE  0E00               	movlw	0
 11343  001500  6EC0               	movwf	4032,c	;volatile
 11344                           
 11345                           ; BSR set to: 0
 11346  001502  0100               	movlb	0	; () banked
 11347  001504  90D8               	bcf	status,0,c
 11348  001506  31D0               	rrcf	OpenADC@config2& (0+255),w,b
 11349  001508  0B3C               	andlw	60
 11350  00150A  6EC2               	movwf	4034,c	;volatile
 11351                           
 11352                           ; BSR set to: 0
 11353  00150C  C0D0  F0D2         	movff	OpenADC@config2,??_OpenADC
 11354  001510  0100               	movlb	0	; () banked
 11355  001512  3BD2               	swapf	??_OpenADC& (0+255),f,b
 11356  001514  0EF0               	movlw	240
 11357  001516  17D2               	andwf	??_OpenADC& (0+255),f,b
 11358  001518  0E30               	movlw	48
 11359  00151A  0100               	movlb	0	; () banked
 11360  00151C  17D2               	andwf	??_OpenADC& (0+255),f,b
 11361  00151E  0100               	movlb	0	; () banked
 11362  001520  51D1               	movf	OpenADC@portconfig& (0+255),w,b
 11363  001522  0B0F               	andlw	15
 11364  001524  0100               	movlb	0	; () banked
 11365  001526  11D2               	iorwf	??_OpenADC& (0+255),w,b
 11366  001528  6EC1               	movwf	4033,c	;volatile
 11367                           
 11368                           ; BSR set to: 0
 11369  00152A  C0D4  F0D2         	movff	OpenADC@config,??_OpenADC
 11370  00152E  0100               	movlb	0	; () banked
 11371  001530  90D8               	bcf	status,0,c
 11372  001532  37D2               	rlcf	??_OpenADC& (0+255),f,b
 11373  001534  0100               	movlb	0	; () banked
 11374  001536  90D8               	bcf	status,0,c
 11375  001538  37D2               	rlcf	??_OpenADC& (0+255),f,b
 11376  00153A  0E38               	movlw	56
 11377  00153C  0100               	movlb	0	; () banked
 11378  00153E  17D2               	andwf	??_OpenADC& (0+255),f,b
 11379  001540  C0D4  F0D3         	movff	OpenADC@config,??_OpenADC+1
 11380  001544  0100               	movlb	0	; () banked
 11381  001546  3BD3               	swapf	(??_OpenADC+1)& (0+255),f,b
 11382  001548  0E0F               	movlw	15
 11383  00154A  17D3               	andwf	(??_OpenADC+1)& (0+255),f,b
 11384  00154C  0E07               	movlw	7
 11385  00154E  0100               	movlb	0	; () banked
 11386  001550  17D3               	andwf	(??_OpenADC+1)& (0+255),f,b
 11387  001552  0100               	movlb	0	; () banked
 11388  001554  51D4               	movf	OpenADC@config& (0+255),w,b
 11389  001556  0B80               	andlw	128
 11390  001558  0100               	movlb	0	; () banked
 11391  00155A  11D3               	iorwf	(??_OpenADC+1)& (0+255),w,b
 11392  00155C  0100               	movlb	0	; () banked
 11393  00155E  11D2               	iorwf	??_OpenADC& (0+255),w,b
 11394  001560  6EC0               	movwf	4032,c	;volatile
 11395                           
 11396                           ; BSR set to: 0
 11397  001562  0100               	movlb	0	; () banked
 11398  001564  AFD0               	btfss	OpenADC@config2& (0+255),7,b
 11399  001566  D003               	goto	l1036
 11400                           
 11401                           ; BSR set to: 0
 11402  001568  9C9E               	bcf	3998,6,c	;volatile
 11403  00156A  8C9D               	bsf	3997,6,c	;volatile
 11404  00156C  8CF2               	bsf	intcon,6,c	;volatile
 11405  00156E                     l1036:
 11406                           
 11407                           ; BSR set to: 0
 11408  00156E  80C2               	bsf	4034,0,c	;volatile
 11409                           
 11410                           ; BSR set to: 0
 11411  001570  0012               	return		;funcret
 11412  001572                     __end_of_OpenADC:
 11413                           	opt stack 0
 11414                           prodh	equ	0xFF4
 11415                           prodl	equ	0xFF3
 11416                           intcon	equ	0xFF2
 11417                           intcon2	equ	0xFF1
 11418                           intcon3	equ	0xFF0
 11419                           postinc0	equ	0xFEE
 11420                           wreg	equ	0xFE8
 11421                           indf2	equ	0xFDF
 11422                           postinc2	equ	0xFDE
 11423                           postdec2	equ	0xFDD
 11424                           fsr2h	equ	0xFDA
 11425                           fsr2l	equ	0xFD9
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function _CalculateSensorStatuses *****************
 11429 ;; Defined at:
 11430 ;;		line 322 in file "FastBuggy17_Main_Code_TUNING.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  sensor_readi    2   16[BANK0 ] PTR const int 
 11433 ;;		 -> sensor_readings_normalised(10), 
 11434 ;;  sensor_thres    2   18[BANK0 ] PTR const int 
 11435 ;;		 -> sensor_threshold(2), 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  index           1   27[BANK0 ] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;		None               void
 11440 ;; Registers used:
 11441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;Total ram usage:       12 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    7
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_main
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text96
 11462  0007F2                     __ptext96:
 11463                           	opt stack 0
 11464  0007F2                     _CalculateSensorStatuses:
 11465                           	opt stack 23
 11466                           
 11467                           ;FastBuggy17_Main_Code_TUNING.c: 323: unsigned char index;
 11468                           ;FastBuggy17_Main_Code_TUNING.c: 325: if(line_mode == 0) {
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;incstack = 0
 11472  0007F2  502A               	movf	_line_mode,w,c
 11473  0007F4  A4D8               	btfss	status,2,c
 11474  0007F6  D049               	goto	l6256
 11475                           
 11476                           ;FastBuggy17_Main_Code_TUNING.c: 326: for(index = 0; index < 5; index++) {
 11477  0007F8  0E00               	movlw	0
 11478  0007FA  0100               	movlb	0	; () banked
 11479  0007FC  6FDB               	movwf	CalculateSensorStatuses@index& (0+255),b
 11480  0007FE                     l6242:
 11481                           
 11482                           ; BSR set to: 0
 11483  0007FE  0E04               	movlw	4
 11484  000800  0100               	movlb	0	; () banked
 11485  000802  65DB               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
 11486  000804  D001               	goto	l6246
 11487                           
 11488                           ; BSR set to: 0
 11489  000806  D096               	goto	l823
 11490  000808                     l6246:
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;FastBuggy17_Main_Code_TUNING.c: 327: if(*(sensor_readings_normalised + index) < (*senso
      +                          r_threshold + 50)) {
 11494  000808  C0D2  FFD9         	movff	CalculateSensorStatuses@sensor_threshold,fsr2l
 11495  00080C  C0D3  FFDA         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr2h
 11496  000810  CFDE F0D4          	movff	postinc2,??_CalculateSensorStatuses
 11497  000814  CFDD F0D5          	movff	postdec2,??_CalculateSensorStatuses+1
 11498  000818  0E32               	movlw	50
 11499  00081A  0100               	movlb	0	; () banked
 11500  00081C  27D4               	addwf	??_CalculateSensorStatuses& (0+255),f,b
 11501  00081E  0E00               	movlw	0
 11502  000820  23D5               	addwfc	(??_CalculateSensorStatuses+1)& (0+255),f,b
 11503  000822  0100               	movlb	0	; () banked
 11504  000824  51DB               	movf	CalculateSensorStatuses@index& (0+255),w,b
 11505  000826  0D02               	mullw	2
 11506  000828  50F3               	movf	prodl,w,c
 11507  00082A  0100               	movlb	0	; () banked
 11508  00082C  25D0               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
 11509  00082E  6ED9               	movwf	fsr2l,c
 11510  000830  50F4               	movf	prodh,w,c
 11511  000832  0100               	movlb	0	; () banked
 11512  000834  21D1               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
 11513  000836  6EDA               	movwf	fsr2h,c
 11514  000838  0100               	movlb	0	; () banked
 11515  00083A  51D4               	movf	??_CalculateSensorStatuses& (0+255),w,b
 11516  00083C  5CDE               	subwf	postinc2,w,c
 11517  00083E  50DE               	movf	postinc2,w,c
 11518  000840  0A80               	xorlw	128
 11519  000842  0100               	movlb	0	; () banked
 11520  000844  6FD8               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
 11521  000846  0100               	movlb	0	; () banked
 11522  000848  51D5               	movf	(??_CalculateSensorStatuses+1)& (0+255),w,b
 11523  00084A  0A80               	xorlw	128
 11524  00084C  0100               	movlb	0	; () banked
 11525  00084E  59D8               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
 11526  000850  B0D8               	btfsc	status,0,c
 11527  000852  D00B               	goto	l6250
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;FastBuggy17_Main_Code_TUNING.c: 328: sensor_statuses[index] = 1;
 11531  000854  0100               	movlb	0	; () banked
 11532  000856  51DB               	movf	CalculateSensorStatuses@index& (0+255),w,b
 11533  000858  0D01               	mullw	1
 11534  00085A  0E25               	movlw	low _sensor_statuses
 11535  00085C  24F3               	addwf	prodl,w,c
 11536  00085E  6ED9               	movwf	fsr2l,c
 11537  000860  0E00               	movlw	high _sensor_statuses
 11538  000862  20F4               	addwfc	prodh,w,c
 11539  000864  6EDA               	movwf	fsr2h,c
 11540  000866  0E01               	movlw	1
 11541  000868  D00A               	goto	L3
 11542  00086A                     l6250:
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;FastBuggy17_Main_Code_TUNING.c: 330: else {
 11546                           ;FastBuggy17_Main_Code_TUNING.c: 331: sensor_statuses[index] = 0;
 11547  00086A  0100               	movlb	0	; () banked
 11548  00086C  51DB               	movf	CalculateSensorStatuses@index& (0+255),w,b
 11549  00086E  0D01               	mullw	1
 11550  000870  0E25               	movlw	low _sensor_statuses
 11551  000872  24F3               	addwf	prodl,w,c
 11552  000874  6ED9               	movwf	fsr2l,c
 11553  000876  0E00               	movlw	high _sensor_statuses
 11554  000878  20F4               	addwfc	prodh,w,c
 11555  00087A  6EDA               	movwf	fsr2h,c
 11556  00087C  0E00               	movlw	0
 11557  00087E                     L3:
 11558  00087E  6EDF               	movwf	indf2,c
 11559  000880  D000               	goto	l6252
 11560  000882                     l6252:
 11561                           
 11562                           ; BSR set to: 0
 11563  000882  0100               	movlb	0	; () banked
 11564  000884  2BDB               	incf	CalculateSensorStatuses@index& (0+255),f,b
 11565  000886  D7BB               	goto	l6242
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;FastBuggy17_Main_Code_TUNING.c: 332: }
 11569                           ;FastBuggy17_Main_Code_TUNING.c: 333: }
 11570                           ;FastBuggy17_Main_Code_TUNING.c: 334: }
 11571                           
 11572                           ; BSR set to: 0
 11573  000888  D055               	goto	l823
 11574  00088A                     l6256:
 11575                           
 11576                           ;FastBuggy17_Main_Code_TUNING.c: 335: else if(line_mode == 1) {
 11577  00088A  042A               	decf	_line_mode,w,c
 11578  00088C  A4D8               	btfss	status,2,c
 11579  00088E  D052               	goto	l823
 11580                           
 11581                           ;FastBuggy17_Main_Code_TUNING.c: 336: for(index = 0; index < 5; index++) {
 11582  000890  0E00               	movlw	0
 11583  000892  0100               	movlb	0	; () banked
 11584  000894  6FDB               	movwf	CalculateSensorStatuses@index& (0+255),b
 11585  000896                     l6260:
 11586                           
 11587                           ; BSR set to: 0
 11588  000896  0E04               	movlw	4
 11589  000898  0100               	movlb	0	; () banked
 11590  00089A  65DB               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
 11591  00089C  D001               	goto	l6264
 11592                           
 11593                           ; BSR set to: 0
 11594  00089E  D04A               	goto	l823
 11595  0008A0                     l6264:
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;FastBuggy17_Main_Code_TUNING.c: 337: if(*(sensor_readings_normalised + index) > (*senso
      +                          r_threshold - 50)) {
 11599  0008A0  0100               	movlb	0	; () banked
 11600  0008A2  51DB               	movf	CalculateSensorStatuses@index& (0+255),w,b
 11601  0008A4  0D02               	mullw	2
 11602  0008A6  50F3               	movf	prodl,w,c
 11603  0008A8  0100               	movlb	0	; () banked
 11604  0008AA  25D0               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
 11605  0008AC  6ED9               	movwf	fsr2l,c
 11606  0008AE  50F4               	movf	prodh,w,c
 11607  0008B0  0100               	movlb	0	; () banked
 11608  0008B2  21D1               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
 11609  0008B4  6EDA               	movwf	fsr2h,c
 11610  0008B6  0ECE               	movlw	206
 11611  0008B8  0100               	movlb	0	; () banked
 11612  0008BA  6FD6               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
 11613  0008BC  0EFF               	movlw	255
 11614  0008BE  0100               	movlb	0	; () banked
 11615  0008C0  6FD7               	movwf	(??_CalculateSensorStatuses+3)& (0+255),b
 11616  0008C2  C0D2  FFE1         	movff	CalculateSensorStatuses@sensor_threshold,fsr1l
 11617  0008C6  C0D3  FFE2         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr1h
 11618  0008CA  CFE6 F0D8          	movff	postinc1,??_CalculateSensorStatuses+4
 11619  0008CE  CFE5 F0D9          	movff	postdec1,??_CalculateSensorStatuses+5
 11620  0008D2  0100               	movlb	0	; () banked
 11621  0008D4  51D6               	movf	(??_CalculateSensorStatuses+2)& (0+255),w,b
 11622  0008D6  0100               	movlb	0	; () banked
 11623  0008D8  27D8               	addwf	(??_CalculateSensorStatuses+4)& (0+255),f,b
 11624  0008DA  0100               	movlb	0	; () banked
 11625  0008DC  51D7               	movf	(??_CalculateSensorStatuses+3)& (0+255),w,b
 11626  0008DE  0100               	movlb	0	; () banked
 11627  0008E0  23D9               	addwfc	(??_CalculateSensorStatuses+5)& (0+255),f,b
 11628  0008E2  50DE               	movf	postinc2,w,c
 11629  0008E4  0100               	movlb	0	; () banked
 11630  0008E6  5DD8               	subwf	(??_CalculateSensorStatuses+4)& (0+255),w,b
 11631  0008E8  0100               	movlb	0	; () banked
 11632  0008EA  51D9               	movf	(??_CalculateSensorStatuses+5)& (0+255),w,b
 11633  0008EC  0A80               	xorlw	128
 11634  0008EE  0100               	movlb	0	; () banked
 11635  0008F0  6FDA               	movwf	(??_CalculateSensorStatuses+6)& (0+255),b
 11636  0008F2  50DE               	movf	postinc2,w,c
 11637  0008F4  0A80               	xorlw	128
 11638  0008F6  0100               	movlb	0	; () banked
 11639  0008F8  59DA               	subwfb	(??_CalculateSensorStatuses+6)& (0+255),w,b
 11640  0008FA  B0D8               	btfsc	status,0,c
 11641  0008FC  D00B               	goto	l6268
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;FastBuggy17_Main_Code_TUNING.c: 338: sensor_statuses[index] = 1;
 11645  0008FE  0100               	movlb	0	; () banked
 11646  000900  51DB               	movf	CalculateSensorStatuses@index& (0+255),w,b
 11647  000902  0D01               	mullw	1
 11648  000904  0E25               	movlw	low _sensor_statuses
 11649  000906  24F3               	addwf	prodl,w,c
 11650  000908  6ED9               	movwf	fsr2l,c
 11651  00090A  0E00               	movlw	high _sensor_statuses
 11652  00090C  20F4               	addwfc	prodh,w,c
 11653  00090E  6EDA               	movwf	fsr2h,c
 11654  000910  0E01               	movlw	1
 11655  000912  D00A               	goto	L4
 11656  000914                     l6268:
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;FastBuggy17_Main_Code_TUNING.c: 340: else {
 11660                           ;FastBuggy17_Main_Code_TUNING.c: 341: sensor_statuses[index] = 0;
 11661  000914  0100               	movlb	0	; () banked
 11662  000916  51DB               	movf	CalculateSensorStatuses@index& (0+255),w,b
 11663  000918  0D01               	mullw	1
 11664  00091A  0E25               	movlw	low _sensor_statuses
 11665  00091C  24F3               	addwf	prodl,w,c
 11666  00091E  6ED9               	movwf	fsr2l,c
 11667  000920  0E00               	movlw	high _sensor_statuses
 11668  000922  20F4               	addwfc	prodh,w,c
 11669  000924  6EDA               	movwf	fsr2h,c
 11670  000926  0E00               	movlw	0
 11671  000928                     L4:
 11672  000928  6EDF               	movwf	indf2,c
 11673  00092A  D000               	goto	l6270
 11674  00092C                     l6270:
 11675                           
 11676                           ; BSR set to: 0
 11677  00092C  0100               	movlb	0	; () banked
 11678  00092E  2BDB               	incf	CalculateSensorStatuses@index& (0+255),f,b
 11679  000930  D7B2               	goto	l6260
 11680                           
 11681                           ; BSR set to: 0
 11682                           
 11683                           ; BSR set to: 0
 11684                           
 11685                           ; BSR set to: 0
 11686  000932  D000               	goto	l823
 11687  000934                     l823:
 11688  000934  0012               	return		;funcret
 11689  000936                     __end_of_CalculateSensorStatuses:
 11690                           	opt stack 0
 11691                           prodh	equ	0xFF4
 11692                           prodl	equ	0xFF3
 11693                           intcon	equ	0xFF2
 11694                           intcon2	equ	0xFF1
 11695                           intcon3	equ	0xFF0
 11696                           postinc0	equ	0xFEE
 11697                           wreg	equ	0xFE8
 11698                           postinc1	equ	0xFE6
 11699                           postdec1	equ	0xFE5
 11700                           fsr1h	equ	0xFE2
 11701                           fsr1l	equ	0xFE1
 11702                           indf2	equ	0xFDF
 11703                           postinc2	equ	0xFDE
 11704                           postdec2	equ	0xFDD
 11705                           fsr2h	equ	0xFDA
 11706                           fsr2l	equ	0xFD9
 11707                           status	equ	0xFD8
 11708                           
 11709 ;; *************** function _CalculateDiscreteSensorSum *****************
 11710 ;; Defined at:
 11711 ;;		line 362 in file "FastBuggy17_Main_Code_TUNING.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
 11714 ;;		 -> sensor_statuses(5), 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;  index           1   19[BANK0 ] unsigned char 
 11717 ;;  sum             1   18[BANK0 ] unsigned char 
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      unsigned char 
 11720 ;; Registers used:
 11721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;Total ram usage:        4 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    7
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_main
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text97
 11742  001C16                     __ptext97:
 11743                           	opt stack 0
 11744  001C16                     _CalculateDiscreteSensorSum:
 11745                           	opt stack 23
 11746                           
 11747                           ;FastBuggy17_Main_Code_TUNING.c: 363: unsigned char index, sum = 0;
 11748                           
 11749                           ;incstack = 0
 11750  001C16  0E00               	movlw	0
 11751  001C18  0100               	movlb	0	; () banked
 11752  001C1A  6FD2               	movwf	CalculateDiscreteSensorSum@sum& (0+255),b
 11753                           
 11754                           ;FastBuggy17_Main_Code_TUNING.c: 365: for(index = 0; index < 5; index++) {
 11755  001C1C  0E00               	movlw	0
 11756  001C1E  0100               	movlb	0	; () banked
 11757  001C20  6FD3               	movwf	CalculateDiscreteSensorSum@index& (0+255),b
 11758  001C22                     l6276:
 11759                           
 11760                           ; BSR set to: 0
 11761  001C22  0E04               	movlw	4
 11762  001C24  0100               	movlb	0	; () banked
 11763  001C26  65D3               	cpfsgt	CalculateDiscreteSensorSum@index& (0+255),b
 11764  001C28  D001               	goto	l6280
 11765                           
 11766                           ; BSR set to: 0
 11767  001C2A  D011               	goto	l6286
 11768  001C2C                     l6280:
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;FastBuggy17_Main_Code_TUNING.c: 367: sum += *(sensor_statuses + index);
 11772  001C2C  0100               	movlb	0	; () banked
 11773  001C2E  51D3               	movf	CalculateDiscreteSensorSum@index& (0+255),w,b
 11774  001C30  0D01               	mullw	1
 11775  001C32  50F3               	movf	prodl,w,c
 11776  001C34  0100               	movlb	0	; () banked
 11777  001C36  25D0               	addwf	CalculateDiscreteSensorSum@sensor_statuses& (0+255),w,b
 11778  001C38  6ED9               	movwf	fsr2l,c
 11779  001C3A  50F4               	movf	prodh,w,c
 11780  001C3C  0100               	movlb	0	; () banked
 11781  001C3E  21D1               	addwfc	(CalculateDiscreteSensorSum@sensor_statuses+1)& (0+255),w,b
 11782  001C40  6EDA               	movwf	fsr2h,c
 11783  001C42  50DF               	movf	indf2,w,c
 11784  001C44  0100               	movlb	0	; () banked
 11785  001C46  27D2               	addwf	CalculateDiscreteSensorSum@sum& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 0
 11788  001C48  0100               	movlb	0	; () banked
 11789  001C4A  2BD3               	incf	CalculateDiscreteSensorSum@index& (0+255),f,b
 11790  001C4C  D7EA               	goto	l6276
 11791  001C4E                     l6286:
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;FastBuggy17_Main_Code_TUNING.c: 369: }
 11795                           ;FastBuggy17_Main_Code_TUNING.c: 371: return(sum);
 11796  001C4E  0100               	movlb	0	; () banked
 11797  001C50  51D2               	movf	CalculateDiscreteSensorSum@sum& (0+255),w,b
 11798  001C52  D000               	goto	l831
 11799  001C54                     l831:
 11800                           
 11801                           ; BSR set to: 0
 11802  001C54  0012               	return		;funcret
 11803  001C56                     __end_of_CalculateDiscreteSensorSum:
 11804                           	opt stack 0
 11805                           prodh	equ	0xFF4
 11806                           prodl	equ	0xFF3
 11807                           intcon	equ	0xFF2
 11808                           intcon2	equ	0xFF1
 11809                           intcon3	equ	0xFF0
 11810                           postinc0	equ	0xFEE
 11811                           wreg	equ	0xFE8
 11812                           postinc1	equ	0xFE6
 11813                           postdec1	equ	0xFE5
 11814                           fsr1h	equ	0xFE2
 11815                           fsr1l	equ	0xFE1
 11816                           indf2	equ	0xFDF
 11817                           postinc2	equ	0xFDE
 11818                           postdec2	equ	0xFDD
 11819                           fsr2h	equ	0xFDA
 11820                           fsr2l	equ	0xFD9
 11821                           status	equ	0xFD8
 11822                           
 11823 ;; *************** function _BusyDistanceAcq *****************
 11824 ;; Defined at:
 11825 ;;		line 61 in file "Ultrasound.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      unsigned char 
 11832 ;; Registers used:
 11833 ;;		wreg, status,2
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11843 ;;Total ram usage:        0 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    7
 11846 ;; This function calls:
 11847 ;;		Nothing
 11848 ;; This function is called by:
 11849 ;;		_main
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text98
 11854  002308                     __ptext98:
 11855                           	opt stack 0
 11856  002308                     _BusyDistanceAcq:
 11857                           	opt stack 23
 11858                           
 11859                           ;Ultrasound.c: 63: return (!echo_acq_done);
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;incstack = 0
 11863  002308  501C               	movf	_echo_acq_done,w,c
 11864  00230A  A4D8               	btfss	status,2,c
 11865  00230C  D002               	goto	u5040
 11866  00230E  0E01               	movlw	1
 11867  002310  D002               	goto	l36
 11868  002312                     u5040:
 11869  002312  0E00               	movlw	0
 11870  002314  D000               	goto	l36
 11871  002316                     l36:
 11872  002316  0012               	return		;funcret
 11873  002318                     __end_of_BusyDistanceAcq:
 11874                           	opt stack 0
 11875                           prodh	equ	0xFF4
 11876                           prodl	equ	0xFF3
 11877                           intcon	equ	0xFF2
 11878                           intcon2	equ	0xFF1
 11879                           intcon3	equ	0xFF0
 11880                           postinc0	equ	0xFEE
 11881                           wreg	equ	0xFE8
 11882                           postinc1	equ	0xFE6
 11883                           postdec1	equ	0xFE5
 11884                           fsr1h	equ	0xFE2
 11885                           fsr1l	equ	0xFE1
 11886                           indf2	equ	0xFDF
 11887                           postinc2	equ	0xFDE
 11888                           postdec2	equ	0xFDD
 11889                           fsr2h	equ	0xFDA
 11890                           fsr2l	equ	0xFD9
 11891                           status	equ	0xFD8
 11892                           
 11893 ;; *************** function _isrLP *****************
 11894 ;; Defined at:
 11895 ;;		line 641 in file "FastBuggy17_Main_Code_TUNING.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;		None
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;		None
 11900 ;; Return value:  Size  Location     Type
 11901 ;;		None               void
 11902 ;; Registers used:
 11903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11904 ;; Tracked objects:
 11905 ;;		On entry : 0/0
 11906 ;;		On exit  : 0/0
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11912 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;Total ram usage:       17 bytes
 11914 ;; Hardware stack levels used:    1
 11915 ;; Hardware stack levels required when called:    6
 11916 ;; This function calls:
 11917 ;;		_ReadADC
 11918 ;;		_WirelessTx_ISR
 11919 ;;		i1_ConvertADC
 11920 ;;		i1_SetADCChannel
 11921 ;; This function is called by:
 11922 ;;		Interrupt level 1
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           	psect	intcodelo
 11927  000018                     __pintcodelo:
 11928                           	opt stack 0
 11929  000018                     _isrLP:
 11930                           	opt stack 18
 11931                           
 11932                           ;incstack = 0
 11933  000018  CFD8 F033          	movff	status,??_isrLP
 11934  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 11935  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 11936  000024  CFFA F036          	movff	pclath,??_isrLP+3
 11937  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 11938  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 11939  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 11940  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 11941  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 11942  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 11943  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 11944  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 11945  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 11946  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 11947  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 11948  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 11949  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 11950                           
 11951                           ;FastBuggy17_Main_Code_TUNING.c: 644: if (PIR1bits.ADIF == 1) {
 11952  00005C  AC9E               	btfss	3998,6,c	;volatile
 11953  00005E  D01D               	goto	i1l950
 11954                           
 11955                           ;FastBuggy17_Main_Code_TUNING.c: 645: PIR1bits.ADIF = 0;
 11956  000060  9C9E               	bcf	3998,6,c	;volatile
 11957                           
 11958                           ;FastBuggy17_Main_Code_TUNING.c: 646: if (sensor_acq_index < 5) {
 11959  000062  0E05               	movlw	5
 11960  000064  6023               	cpfslt	_sensor_acq_index,c	;volatile
 11961  000066  D015               	goto	i1l4994
 11962                           
 11963                           ;FastBuggy17_Main_Code_TUNING.c: 647: *(sensor_readings_raw + sensor_acq_index) = ReadAD
      +                          C();
 11964  000068  EC8C  F011         	call	_ReadADC	;wreg free
 11965  00006C  5023               	movf	_sensor_acq_index,w,c	;volatile
 11966  00006E  0D02               	mullw	2
 11967  000070  0EAE               	movlw	low _sensor_readings_raw
 11968  000072  24F3               	addwf	prodl,w,c
 11969  000074  6ED9               	movwf	fsr2l,c
 11970  000076  0E00               	movlw	high _sensor_readings_raw
 11971  000078  20F4               	addwfc	prodh,w,c
 11972  00007A  6EDA               	movwf	fsr2h,c
 11973  00007C  C02B  FFDE         	movff	?_ReadADC,postinc2
 11974  000080  C02C  FFDD         	movff	?_ReadADC+1,postdec2
 11975                           
 11976                           ;FastBuggy17_Main_Code_TUNING.c: 648: sensor_acq_index++;
 11977  000084  2A23               	incf	_sensor_acq_index,f,c	;volatile
 11978                           
 11979                           ;FastBuggy17_Main_Code_TUNING.c: 649: SetADCChannel(sensor_acq_index);
 11980  000086  5023               	movf	_sensor_acq_index,w,c	;volatile
 11981  000088  ECAA  F006         	call	i1_SetADCChannel
 11982                           
 11983                           ;FastBuggy17_Main_Code_TUNING.c: 650: ConvertADC();
 11984  00008C  ECF7  F011         	call	i1_ConvertADC	;wreg free
 11985                           
 11986                           ;FastBuggy17_Main_Code_TUNING.c: 651: } else {
 11987  000090  D00A               	goto	i1l955
 11988  000092                     i1l4994:
 11989                           
 11990                           ;FastBuggy17_Main_Code_TUNING.c: 652: sensor_acq_done = 1;
 11991  000092  0E01               	movlw	1
 11992  000094  6E22               	movwf	_sensor_acq_done,c	;volatile
 11993                           
 11994                           ;FastBuggy17_Main_Code_TUNING.c: 653: PIE1bits.ADIE = 0;
 11995  000096  9C9D               	bcf	3997,6,c	;volatile
 11996                           
 11997                           ;FastBuggy17_Main_Code_TUNING.c: 654: }
 11998                           ;FastBuggy17_Main_Code_TUNING.c: 655: }
 11999  000098  D006               	goto	i1l955
 12000  00009A                     i1l950:
 12001                           
 12002                           ;FastBuggy17_Main_Code_TUNING.c: 657: else if(PIR1bits.TX1IF == 1) {
 12003  00009A  A89E               	btfss	3998,4,c	;volatile
 12004  00009C  D004               	goto	i1l955
 12005                           
 12006                           ;FastBuggy17_Main_Code_TUNING.c: 658: PIR1bits.TX1IF = 0;
 12007  00009E  989E               	bcf	3998,4,c	;volatile
 12008                           
 12009                           ;FastBuggy17_Main_Code_TUNING.c: 659: WirelessTx_ISR();
 12010  0000A0  EC57  F010         	call	_WirelessTx_ISR	;wreg free
 12011  0000A4  D000               	goto	i1l955
 12012  0000A6                     i1l955:
 12013  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 12014  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 12015  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 12016  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 12017  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 12018  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 12019  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 12020  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 12021  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 12022  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 12023  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 12024  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 12025  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 12026  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 12027  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 12028  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 12029  0000E6  C033  FFD8         	movff	??_isrLP,status
 12030  0000EA  0010               	retfie	
 12031  0000EC                     __end_of_isrLP:
 12032                           	opt stack 0
 12033                           pclatu	equ	0xFFB
 12034                           pclath	equ	0xFFA
 12035                           tblptru	equ	0xFF8
 12036                           tblptrh	equ	0xFF7
 12037                           tblptrl	equ	0xFF6
 12038                           tablat	equ	0xFF5
 12039                           prodh	equ	0xFF4
 12040                           prodl	equ	0xFF3
 12041                           intcon	equ	0xFF2
 12042                           intcon2	equ	0xFF1
 12043                           intcon3	equ	0xFF0
 12044                           postinc0	equ	0xFEE
 12045                           fsr0h	equ	0xFEA
 12046                           fsr0l	equ	0xFE9
 12047                           wreg	equ	0xFE8
 12048                           postinc1	equ	0xFE6
 12049                           postdec1	equ	0xFE5
 12050                           fsr1h	equ	0xFE2
 12051                           fsr1l	equ	0xFE1
 12052                           bsr	equ	0xFE0
 12053                           indf2	equ	0xFDF
 12054                           postinc2	equ	0xFDE
 12055                           postdec2	equ	0xFDD
 12056                           fsr2h	equ	0xFDA
 12057                           fsr2l	equ	0xFD9
 12058                           status	equ	0xFD8
 12059                           
 12060 ;; *************** function i1_SetADCChannel *****************
 12061 ;; Defined at:
 12062 ;;		line 238 in file "FastBuggy17_Main_Code_TUNING.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;  channel         1    wreg     unsigned char 
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;  channel         1    2[COMRAM] unsigned char 
 12067 ;; Return value:  Size  Location     Type
 12068 ;;		None               void
 12069 ;; Registers used:
 12070 ;;		wreg, status,2, status,0, cstack
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;Total ram usage:        1 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; Hardware stack levels required when called:    4
 12083 ;; This function calls:
 12084 ;;		i1_SetChanADC
 12085 ;; This function is called by:
 12086 ;;		_isrLP
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text100
 12091  000D54                     __ptext100:
 12092                           	opt stack 0
 12093  000D54                     i1_SetADCChannel:
 12094                           	opt stack 19
 12095                           
 12096                           ;incstack = 0
 12097                           ;i1SetADCChannel@channel stored from wreg
 12098  000D54  6E2D               	movwf	i1SetADCChannel@channel,c
 12099                           
 12100                           ;FastBuggy17_Main_Code_TUNING.c: 240: switch (channel) {
 12101  000D56  D040               	goto	i1l4796
 12102  000D58                     i1l4762:
 12103                           
 12104                           ;FastBuggy17_Main_Code_TUNING.c: 242: SetChanADC(0b10000111);
 12105  000D58  0E87               	movlw	135
 12106  000D5A  EC04  F011         	call	i1_SetChanADC
 12107                           
 12108                           ;FastBuggy17_Main_Code_TUNING.c: 243: break;
 12109  000D5E  D06E               	goto	i1l798
 12110  000D60                     i1l4764:
 12111                           
 12112                           ;FastBuggy17_Main_Code_TUNING.c: 245: SetChanADC(0b10001111);
 12113  000D60  0E8F               	movlw	143
 12114  000D62  EC04  F011         	call	i1_SetChanADC
 12115                           
 12116                           ;FastBuggy17_Main_Code_TUNING.c: 246: break;
 12117  000D66  D06A               	goto	i1l798
 12118  000D68                     i1l4766:
 12119                           
 12120                           ;FastBuggy17_Main_Code_TUNING.c: 248: SetChanADC(0b10010111);
 12121  000D68  0E97               	movlw	151
 12122  000D6A  EC04  F011         	call	i1_SetChanADC
 12123                           
 12124                           ;FastBuggy17_Main_Code_TUNING.c: 249: break;
 12125  000D6E  D066               	goto	i1l798
 12126  000D70                     i1l4768:
 12127                           
 12128                           ;FastBuggy17_Main_Code_TUNING.c: 251: SetChanADC(0b10011111);
 12129  000D70  0E9F               	movlw	159
 12130  000D72  EC04  F011         	call	i1_SetChanADC
 12131                           
 12132                           ;FastBuggy17_Main_Code_TUNING.c: 252: break;
 12133  000D76  D062               	goto	i1l798
 12134  000D78                     i1l4770:
 12135                           
 12136                           ;FastBuggy17_Main_Code_TUNING.c: 254: SetChanADC(0b10100111);
 12137  000D78  0EA7               	movlw	167
 12138  000D7A  EC04  F011         	call	i1_SetChanADC
 12139                           
 12140                           ;FastBuggy17_Main_Code_TUNING.c: 255: break;
 12141  000D7E  D05E               	goto	i1l798
 12142  000D80                     i1l4772:
 12143                           
 12144                           ;FastBuggy17_Main_Code_TUNING.c: 257: SetChanADC(0b10101111);
 12145  000D80  0EAF               	movlw	175
 12146  000D82  EC04  F011         	call	i1_SetChanADC
 12147                           
 12148                           ;FastBuggy17_Main_Code_TUNING.c: 258: break;
 12149  000D86  D05A               	goto	i1l798
 12150  000D88                     i1l4774:
 12151                           
 12152                           ;FastBuggy17_Main_Code_TUNING.c: 260: SetChanADC(0b10110111);
 12153  000D88  0EB7               	movlw	183
 12154  000D8A  EC04  F011         	call	i1_SetChanADC
 12155                           
 12156                           ;FastBuggy17_Main_Code_TUNING.c: 261: break;
 12157  000D8E  D056               	goto	i1l798
 12158  000D90                     i1l4776:
 12159                           
 12160                           ;FastBuggy17_Main_Code_TUNING.c: 263: SetChanADC(0b10111111);
 12161  000D90  0EBF               	movlw	191
 12162  000D92  EC04  F011         	call	i1_SetChanADC
 12163                           
 12164                           ;FastBuggy17_Main_Code_TUNING.c: 264: break;
 12165  000D96  D052               	goto	i1l798
 12166  000D98                     i1l4778:
 12167                           
 12168                           ;FastBuggy17_Main_Code_TUNING.c: 266: SetChanADC(0b11000111);
 12169  000D98  0EC7               	movlw	199
 12170  000D9A  EC04  F011         	call	i1_SetChanADC
 12171                           
 12172                           ;FastBuggy17_Main_Code_TUNING.c: 267: break;
 12173  000D9E  D04E               	goto	i1l798
 12174  000DA0                     i1l4780:
 12175                           
 12176                           ;FastBuggy17_Main_Code_TUNING.c: 269: SetChanADC(0b11001111);
 12177  000DA0  0ECF               	movlw	207
 12178  000DA2  EC04  F011         	call	i1_SetChanADC
 12179                           
 12180                           ;FastBuggy17_Main_Code_TUNING.c: 270: break;
 12181  000DA6  D04A               	goto	i1l798
 12182  000DA8                     i1l4782:
 12183                           
 12184                           ;FastBuggy17_Main_Code_TUNING.c: 272: SetChanADC(0b11010111);
 12185  000DA8  0ED7               	movlw	215
 12186  000DAA  EC04  F011         	call	i1_SetChanADC
 12187                           
 12188                           ;FastBuggy17_Main_Code_TUNING.c: 273: break;
 12189  000DAE  D046               	goto	i1l798
 12190  000DB0                     i1l4784:
 12191                           
 12192                           ;FastBuggy17_Main_Code_TUNING.c: 275: SetChanADC(0b11011111);
 12193  000DB0  0EDF               	movlw	223
 12194  000DB2  EC04  F011         	call	i1_SetChanADC
 12195                           
 12196                           ;FastBuggy17_Main_Code_TUNING.c: 276: break;
 12197  000DB6  D042               	goto	i1l798
 12198  000DB8                     i1l4786:
 12199                           
 12200                           ;FastBuggy17_Main_Code_TUNING.c: 278: SetChanADC(0b11100111);
 12201  000DB8  0EE7               	movlw	231
 12202  000DBA  EC04  F011         	call	i1_SetChanADC
 12203                           
 12204                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
 12205  000DBE  D03E               	goto	i1l798
 12206  000DC0                     i1l4788:
 12207                           
 12208                           ;FastBuggy17_Main_Code_TUNING.c: 281: SetChanADC(0b11101111);
 12209  000DC0  0EEF               	movlw	239
 12210  000DC2  EC04  F011         	call	i1_SetChanADC
 12211                           
 12212                           ;FastBuggy17_Main_Code_TUNING.c: 282: break;
 12213  000DC6  D03A               	goto	i1l798
 12214  000DC8                     i1l4790:
 12215                           
 12216                           ;FastBuggy17_Main_Code_TUNING.c: 284: SetChanADC(0b11110111);
 12217  000DC8  0EF7               	movlw	247
 12218  000DCA  EC04  F011         	call	i1_SetChanADC
 12219                           
 12220                           ;FastBuggy17_Main_Code_TUNING.c: 285: break;
 12221  000DCE  D036               	goto	i1l798
 12222  000DD0                     i1l4792:
 12223                           
 12224                           ;FastBuggy17_Main_Code_TUNING.c: 287: SetChanADC(0b11111111);
 12225  000DD0  0EFF               	movlw	255
 12226  000DD2  EC04  F011         	call	i1_SetChanADC
 12227                           
 12228                           ;FastBuggy17_Main_Code_TUNING.c: 291: }
 12229                           
 12230                           ;FastBuggy17_Main_Code_TUNING.c: 290: break;
 12231                           
 12232                           ;FastBuggy17_Main_Code_TUNING.c: 289: default:
 12233                           
 12234                           ;FastBuggy17_Main_Code_TUNING.c: 288: break;
 12235  000DD6  D032               	goto	i1l798
 12236  000DD8                     i1l4796:
 12237  000DD8  502D               	movf	i1SetADCChannel@channel,w,c
 12238                           
 12239                           ; Switch size 1, requested type "space"
 12240                           ; Number of cases is 16, Range of values is 0 to 15
 12241                           ; switch strategies available:
 12242                           ; Name         Instructions Cycles
 12243                           ; simple_byte           49    25 (average)
 12244                           ;	Chosen strategy is simple_byte
 12245  000DDA  0A00               	xorlw	0	; case 0
 12246  000DDC  B4D8               	btfsc	status,2,c
 12247  000DDE  D7BC               	goto	i1l4762
 12248  000DE0  0A01               	xorlw	1	; case 1
 12249  000DE2  B4D8               	btfsc	status,2,c
 12250  000DE4  D7BD               	goto	i1l4764
 12251  000DE6  0A03               	xorlw	3	; case 2
 12252  000DE8  B4D8               	btfsc	status,2,c
 12253  000DEA  D7BE               	goto	i1l4766
 12254  000DEC  0A01               	xorlw	1	; case 3
 12255  000DEE  B4D8               	btfsc	status,2,c
 12256  000DF0  D7BF               	goto	i1l4768
 12257  000DF2  0A07               	xorlw	7	; case 4
 12258  000DF4  B4D8               	btfsc	status,2,c
 12259  000DF6  D7C0               	goto	i1l4770
 12260  000DF8  0A01               	xorlw	1	; case 5
 12261  000DFA  B4D8               	btfsc	status,2,c
 12262  000DFC  D7C1               	goto	i1l4772
 12263  000DFE  0A03               	xorlw	3	; case 6
 12264  000E00  B4D8               	btfsc	status,2,c
 12265  000E02  D7C2               	goto	i1l4774
 12266  000E04  0A01               	xorlw	1	; case 7
 12267  000E06  B4D8               	btfsc	status,2,c
 12268  000E08  D7C3               	goto	i1l4776
 12269  000E0A  0A0F               	xorlw	15	; case 8
 12270  000E0C  B4D8               	btfsc	status,2,c
 12271  000E0E  D7C4               	goto	i1l4778
 12272  000E10  0A01               	xorlw	1	; case 9
 12273  000E12  B4D8               	btfsc	status,2,c
 12274  000E14  D7C5               	goto	i1l4780
 12275  000E16  0A03               	xorlw	3	; case 10
 12276  000E18  B4D8               	btfsc	status,2,c
 12277  000E1A  D7C6               	goto	i1l4782
 12278  000E1C  0A01               	xorlw	1	; case 11
 12279  000E1E  B4D8               	btfsc	status,2,c
 12280  000E20  D7C7               	goto	i1l4784
 12281  000E22  0A07               	xorlw	7	; case 12
 12282  000E24  B4D8               	btfsc	status,2,c
 12283  000E26  D7C8               	goto	i1l4786
 12284  000E28  0A01               	xorlw	1	; case 13
 12285  000E2A  B4D8               	btfsc	status,2,c
 12286  000E2C  D7C9               	goto	i1l4788
 12287  000E2E  0A03               	xorlw	3	; case 14
 12288  000E30  B4D8               	btfsc	status,2,c
 12289  000E32  D7CA               	goto	i1l4790
 12290  000E34  0A01               	xorlw	1	; case 15
 12291  000E36  B4D8               	btfsc	status,2,c
 12292  000E38  D7CB               	goto	i1l4792
 12293  000E3A  D000               	goto	i1l798
 12294  000E3C                     i1l798:
 12295  000E3C  0012               	return		;funcret
 12296  000E3E                     __end_ofi1_SetADCChannel:
 12297                           	opt stack 0
 12298                           pclatu	equ	0xFFB
 12299                           pclath	equ	0xFFA
 12300                           tblptru	equ	0xFF8
 12301                           tblptrh	equ	0xFF7
 12302                           tblptrl	equ	0xFF6
 12303                           tablat	equ	0xFF5
 12304                           prodh	equ	0xFF4
 12305                           prodl	equ	0xFF3
 12306                           intcon	equ	0xFF2
 12307                           intcon2	equ	0xFF1
 12308                           intcon3	equ	0xFF0
 12309                           postinc0	equ	0xFEE
 12310                           fsr0h	equ	0xFEA
 12311                           fsr0l	equ	0xFE9
 12312                           wreg	equ	0xFE8
 12313                           postinc1	equ	0xFE6
 12314                           postdec1	equ	0xFE5
 12315                           fsr1h	equ	0xFE2
 12316                           fsr1l	equ	0xFE1
 12317                           bsr	equ	0xFE0
 12318                           indf2	equ	0xFDF
 12319                           postinc2	equ	0xFDE
 12320                           postdec2	equ	0xFDD
 12321                           fsr2h	equ	0xFDA
 12322                           fsr2l	equ	0xFD9
 12323                           status	equ	0xFD8
 12324                           
 12325 ;; *************** function i1_SetChanADC *****************
 12326 ;; Defined at:
 12327 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;  channel         1    wreg     unsigned char 
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;  channel         1    1[COMRAM] unsigned char 
 12332 ;; Return value:  Size  Location     Type
 12333 ;;		None               void
 12334 ;; Registers used:
 12335 ;;		wreg, status,2, status,0
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;Total ram usage:        2 bytes
 12346 ;; Hardware stack levels used:    1
 12347 ;; Hardware stack levels required when called:    3
 12348 ;; This function calls:
 12349 ;;		Nothing
 12350 ;; This function is called by:
 12351 ;;		i1_SetADCChannel
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355                           	psect	text101
 12356  002208                     __ptext101:
 12357                           	opt stack 0
 12358  002208                     i1_SetChanADC:
 12359                           	opt stack 19
 12360                           
 12361                           ;incstack = 0
 12362                           ;i1SetChanADC@channel stored from wreg
 12363  002208  6E2C               	movwf	i1SetChanADC@channel,c
 12364  00220A  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 12365  00220E  0EC3               	movlw	195
 12366  002210  162B               	andwf	??i1_SetChanADC,f,c
 12367  002212  90D8               	bcf	status,0,c
 12368  002214  302C               	rrcf	i1SetChanADC@channel,w,c
 12369  002216  0B3C               	andlw	60
 12370  002218  102B               	iorwf	??i1_SetChanADC,w,c
 12371  00221A  6EC2               	movwf	4034,c	;volatile
 12372  00221C  0012               	return		;funcret
 12373  00221E                     __end_ofi1_SetChanADC:
 12374                           	opt stack 0
 12375                           pclatu	equ	0xFFB
 12376                           pclath	equ	0xFFA
 12377                           tblptru	equ	0xFF8
 12378                           tblptrh	equ	0xFF7
 12379                           tblptrl	equ	0xFF6
 12380                           tablat	equ	0xFF5
 12381                           prodh	equ	0xFF4
 12382                           prodl	equ	0xFF3
 12383                           intcon	equ	0xFF2
 12384                           intcon2	equ	0xFF1
 12385                           intcon3	equ	0xFF0
 12386                           postinc0	equ	0xFEE
 12387                           fsr0h	equ	0xFEA
 12388                           fsr0l	equ	0xFE9
 12389                           wreg	equ	0xFE8
 12390                           postinc1	equ	0xFE6
 12391                           postdec1	equ	0xFE5
 12392                           fsr1h	equ	0xFE2
 12393                           fsr1l	equ	0xFE1
 12394                           bsr	equ	0xFE0
 12395                           indf2	equ	0xFDF
 12396                           postinc2	equ	0xFDE
 12397                           postdec2	equ	0xFDD
 12398                           fsr2h	equ	0xFDA
 12399                           fsr2l	equ	0xFD9
 12400                           status	equ	0xFD8
 12401                           
 12402 ;; *************** function i1_ConvertADC *****************
 12403 ;; Defined at:
 12404 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12405 ;; Parameters:    Size  Location     Type
 12406 ;;		None
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;		None               void
 12411 ;; Registers used:
 12412 ;;		None
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/0
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;Total ram usage:        0 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; Hardware stack levels required when called:    3
 12425 ;; This function calls:
 12426 ;;		Nothing
 12427 ;; This function is called by:
 12428 ;;		_isrLP
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text102
 12433  0023EE                     __ptext102:
 12434                           	opt stack 0
 12435  0023EE                     i1_ConvertADC:
 12436                           	opt stack 20
 12437                           
 12438                           ;incstack = 0
 12439  0023EE  82C2               	bsf	4034,1,c	;volatile
 12440  0023F0  0012               	return		;funcret
 12441  0023F2                     __end_ofi1_ConvertADC:
 12442                           	opt stack 0
 12443                           pclatu	equ	0xFFB
 12444                           pclath	equ	0xFFA
 12445                           tblptru	equ	0xFF8
 12446                           tblptrh	equ	0xFF7
 12447                           tblptrl	equ	0xFF6
 12448                           tablat	equ	0xFF5
 12449                           prodh	equ	0xFF4
 12450                           prodl	equ	0xFF3
 12451                           intcon	equ	0xFF2
 12452                           intcon2	equ	0xFF1
 12453                           intcon3	equ	0xFF0
 12454                           postinc0	equ	0xFEE
 12455                           fsr0h	equ	0xFEA
 12456                           fsr0l	equ	0xFE9
 12457                           wreg	equ	0xFE8
 12458                           postinc1	equ	0xFE6
 12459                           postdec1	equ	0xFE5
 12460                           fsr1h	equ	0xFE2
 12461                           fsr1l	equ	0xFE1
 12462                           bsr	equ	0xFE0
 12463                           indf2	equ	0xFDF
 12464                           postinc2	equ	0xFDE
 12465                           postdec2	equ	0xFDD
 12466                           fsr2h	equ	0xFDA
 12467                           fsr2l	equ	0xFD9
 12468                           status	equ	0xFD8
 12469                           
 12470 ;; *************** function _WirelessTx_ISR *****************
 12471 ;; Defined at:
 12472 ;;		line 61 in file "Wireless.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;		None
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;		None
 12477 ;; Return value:  Size  Location     Type
 12478 ;;		None               void
 12479 ;; Registers used:
 12480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;Total ram usage:        0 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:    5
 12493 ;; This function calls:
 12494 ;;		_GetCharTxBuf
 12495 ;;		_Write1USART
 12496 ;; This function is called by:
 12497 ;;		_isrLP
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text103
 12502  0020AE                     __ptext103:
 12503                           	opt stack 0
 12504  0020AE                     _WirelessTx_ISR:
 12505                           	opt stack 18
 12506                           
 12507                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 12508                           
 12509                           ;incstack = 0
 12510  0020AE  ECD7  F00E         	call	_GetCharTxBuf	;wreg free
 12511  0020B2  6E19               	movwf	_TxCharacter,c	;volatile
 12512                           
 12513                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 12514  0020B4  0E0A               	movlw	10
 12515  0020B6  1819               	xorwf	_TxCharacter,w,c	;volatile
 12516  0020B8  A4D8               	btfss	status,2,c
 12517  0020BA  D007               	goto	i1l4426
 12518                           
 12519                           ;Wireless.c: 64: Write1USART(TxCharacter);
 12520  0020BC  5019               	movf	_TxCharacter,w,c	;volatile
 12521  0020BE  EC0F  F011         	call	_Write1USART
 12522                           
 12523                           ;Wireless.c: 65: Tx_complete = 1;
 12524  0020C2  0E01               	movlw	1
 12525  0020C4  6E1A               	movwf	_Tx_complete,c
 12526                           
 12527                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 12528  0020C6  989D               	bcf	3997,4,c	;volatile
 12529                           
 12530                           ;Wireless.c: 67: }
 12531  0020C8  D004               	goto	i1l303
 12532  0020CA                     i1l4426:
 12533                           
 12534                           ;Wireless.c: 68: else {
 12535                           ;Wireless.c: 69: Write1USART(TxCharacter);
 12536  0020CA  5019               	movf	_TxCharacter,w,c	;volatile
 12537  0020CC  EC0F  F011         	call	_Write1USART
 12538  0020D0  D000               	goto	i1l303
 12539  0020D2                     i1l303:
 12540  0020D2  0012               	return		;funcret
 12541  0020D4                     __end_of_WirelessTx_ISR:
 12542                           	opt stack 0
 12543                           pclatu	equ	0xFFB
 12544                           pclath	equ	0xFFA
 12545                           tblptru	equ	0xFF8
 12546                           tblptrh	equ	0xFF7
 12547                           tblptrl	equ	0xFF6
 12548                           tablat	equ	0xFF5
 12549                           prodh	equ	0xFF4
 12550                           prodl	equ	0xFF3
 12551                           intcon	equ	0xFF2
 12552                           intcon2	equ	0xFF1
 12553                           intcon3	equ	0xFF0
 12554                           postinc0	equ	0xFEE
 12555                           fsr0h	equ	0xFEA
 12556                           fsr0l	equ	0xFE9
 12557                           wreg	equ	0xFE8
 12558                           postinc1	equ	0xFE6
 12559                           postdec1	equ	0xFE5
 12560                           fsr1h	equ	0xFE2
 12561                           fsr1l	equ	0xFE1
 12562                           bsr	equ	0xFE0
 12563                           indf2	equ	0xFDF
 12564                           postinc2	equ	0xFDE
 12565                           postdec2	equ	0xFDD
 12566                           fsr2h	equ	0xFDA
 12567                           fsr2l	equ	0xFD9
 12568                           status	equ	0xFD8
 12569                           
 12570 ;; *************** function _Write1USART *****************
 12571 ;; Defined at:
 12572 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;  data            1    wreg     unsigned char 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  data            1    0[COMRAM] unsigned char 
 12577 ;; Return value:  Size  Location     Type
 12578 ;;		None               void
 12579 ;; Registers used:
 12580 ;;		wreg
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12590 ;;Total ram usage:        1 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:    3
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_WirelessTx_ISR
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text104
 12601  00221E                     __ptext104:
 12602                           	opt stack 0
 12603  00221E                     _Write1USART:
 12604                           	opt stack 19
 12605                           
 12606                           ;incstack = 0
 12607                           ;Write1USART@data stored from wreg
 12608  00221E  6E2B               	movwf	Write1USART@data,c
 12609  002220  ACAC               	btfss	4012,6,c	;volatile
 12610  002222  D005               	goto	i1l4046
 12611  002224  90AC               	bcf	4012,0,c	;volatile
 12612  002226  A21B               	btfss	_USART1_Status,1,c
 12613  002228  D002               	goto	i1l4046
 12614  00222A  80AC               	bsf	4012,0,c	;volatile
 12615  00222C  D000               	goto	i1l4046
 12616  00222E                     i1l4046:
 12617  00222E  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 12618  002232  0012               	return		;funcret
 12619  002234                     __end_of_Write1USART:
 12620                           	opt stack 0
 12621                           pclatu	equ	0xFFB
 12622                           pclath	equ	0xFFA
 12623                           tblptru	equ	0xFF8
 12624                           tblptrh	equ	0xFF7
 12625                           tblptrl	equ	0xFF6
 12626                           tablat	equ	0xFF5
 12627                           prodh	equ	0xFF4
 12628                           prodl	equ	0xFF3
 12629                           intcon	equ	0xFF2
 12630                           intcon2	equ	0xFF1
 12631                           intcon3	equ	0xFF0
 12632                           postinc0	equ	0xFEE
 12633                           fsr0h	equ	0xFEA
 12634                           fsr0l	equ	0xFE9
 12635                           wreg	equ	0xFE8
 12636                           postinc1	equ	0xFE6
 12637                           postdec1	equ	0xFE5
 12638                           fsr1h	equ	0xFE2
 12639                           fsr1l	equ	0xFE1
 12640                           bsr	equ	0xFE0
 12641                           indf2	equ	0xFDF
 12642                           postinc2	equ	0xFDE
 12643                           postdec2	equ	0xFDD
 12644                           fsr2h	equ	0xFDA
 12645                           fsr2l	equ	0xFD9
 12646                           status	equ	0xFD8
 12647                           
 12648 ;; *************** function _GetCharTxBuf *****************
 12649 ;; Defined at:
 12650 ;;		line 15 in file "Wireless.c"
 12651 ;; Parameters:    Size  Location     Type
 12652 ;;		None
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  ch              1    7[COMRAM] unsigned char 
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  1    wreg      unsigned char 
 12657 ;; Registers used:
 12658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;Total ram usage:        2 bytes
 12669 ;; Hardware stack levels used:    1
 12670 ;; Hardware stack levels required when called:    4
 12671 ;; This function calls:
 12672 ;;		i1___awmod
 12673 ;; This function is called by:
 12674 ;;		_WirelessTx_ISR
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           	psect	text105
 12679  001DAE                     __ptext105:
 12680                           	opt stack 0
 12681  001DAE                     _GetCharTxBuf:
 12682                           	opt stack 18
 12683                           
 12684                           ;Wireless.c: 16: unsigned char ch;
 12685                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 12686                           
 12687                           ;incstack = 0
 12688  001DAE  501E               	movf	_get_Tx_index,w,c
 12689  001DB0  0D01               	mullw	1
 12690  001DB2  0E79               	movlw	low _Tx_buffer
 12691  001DB4  24F3               	addwf	prodl,w,c
 12692  001DB6  6ED9               	movwf	fsr2l,c
 12693  001DB8  0E00               	movlw	high _Tx_buffer
 12694  001DBA  20F4               	addwfc	prodh,w,c
 12695  001DBC  6EDA               	movwf	fsr2h,c
 12696  001DBE  50DF               	movf	indf2,w,c
 12697  001DC0  6E32               	movwf	GetCharTxBuf@ch,c
 12698                           
 12699                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 12700  001DC2  C01E  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 12701  001DC6  0E01               	movlw	1
 12702  001DC8  2631               	addwf	??_GetCharTxBuf,f,c
 12703  001DCA  5031               	movf	??_GetCharTxBuf,w,c
 12704  001DCC  6E2B               	movwf	i1___awmod@dividend,c
 12705  001DCE  6A2C               	clrf	i1___awmod@dividend+1,c
 12706  001DD0  0E00               	movlw	0
 12707  001DD2  6E2E               	movwf	i1___awmod@divisor+1,c
 12708  001DD4  0E19               	movlw	25
 12709  001DD6  6E2D               	movwf	i1___awmod@divisor,c
 12710  001DD8  ECBB  F009         	call	i1___awmod	;wreg free
 12711  001DDC  502B               	movf	?i1___awmod,w,c
 12712  001DDE  6E1E               	movwf	_get_Tx_index,c
 12713                           
 12714                           ;Wireless.c: 21: return(ch);
 12715  001DE0  5032               	movf	GetCharTxBuf@ch,w,c
 12716  001DE2  D000               	goto	i1l280
 12717  001DE4                     i1l280:
 12718  001DE4  0012               	return		;funcret
 12719  001DE6                     __end_of_GetCharTxBuf:
 12720                           	opt stack 0
 12721                           pclatu	equ	0xFFB
 12722                           pclath	equ	0xFFA
 12723                           tblptru	equ	0xFF8
 12724                           tblptrh	equ	0xFF7
 12725                           tblptrl	equ	0xFF6
 12726                           tablat	equ	0xFF5
 12727                           prodh	equ	0xFF4
 12728                           prodl	equ	0xFF3
 12729                           intcon	equ	0xFF2
 12730                           intcon2	equ	0xFF1
 12731                           intcon3	equ	0xFF0
 12732                           postinc0	equ	0xFEE
 12733                           fsr0h	equ	0xFEA
 12734                           fsr0l	equ	0xFE9
 12735                           wreg	equ	0xFE8
 12736                           postinc1	equ	0xFE6
 12737                           postdec1	equ	0xFE5
 12738                           fsr1h	equ	0xFE2
 12739                           fsr1l	equ	0xFE1
 12740                           bsr	equ	0xFE0
 12741                           indf2	equ	0xFDF
 12742                           postinc2	equ	0xFDE
 12743                           postdec2	equ	0xFDD
 12744                           fsr2h	equ	0xFDA
 12745                           fsr2l	equ	0xFD9
 12746                           status	equ	0xFD8
 12747                           
 12748 ;; *************** function i1___awmod *****************
 12749 ;; Defined at:
 12750 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  dividend        2    0[COMRAM] int 
 12753 ;;  divisor         2    2[COMRAM] int 
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;  __awmod         1    5[COMRAM] unsigned char 
 12756 ;;  __awmod         1    4[COMRAM] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  2    0[COMRAM] int 
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;Total ram usage:        6 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:    3
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		_GetCharTxBuf
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text106
 12781  001376                     __ptext106:
 12782                           	opt stack 0
 12783  001376                     i1___awmod:
 12784                           	opt stack 18
 12785                           
 12786                           ;incstack = 0
 12787  001376  0E00               	movlw	0
 12788  001378  6E30               	movwf	i1___awmod@sign,c
 12789  00137A  AE2C               	btfss	i1___awmod@dividend+1,7,c
 12790  00137C  D007               	goto	i1l3982
 12791  00137E  6C2B               	negf	i1___awmod@dividend,c
 12792  001380  1E2C               	comf	i1___awmod@dividend+1,f,c
 12793  001382  B0D8               	btfsc	status,0,c
 12794  001384  2A2C               	incf	i1___awmod@dividend+1,f,c
 12795  001386  0E01               	movlw	1
 12796  001388  6E30               	movwf	i1___awmod@sign,c
 12797  00138A  D000               	goto	i1l3982
 12798  00138C                     i1l3982:
 12799  00138C  AE2E               	btfss	i1___awmod@divisor+1,7,c
 12800  00138E  D005               	goto	i1l3986
 12801  001390  6C2D               	negf	i1___awmod@divisor,c
 12802  001392  1E2E               	comf	i1___awmod@divisor+1,f,c
 12803  001394  B0D8               	btfsc	status,0,c
 12804  001396  2A2E               	incf	i1___awmod@divisor+1,f,c
 12805  001398  D000               	goto	i1l3986
 12806  00139A                     i1l3986:
 12807  00139A  502D               	movf	i1___awmod@divisor,w,c
 12808  00139C  102E               	iorwf	i1___awmod@divisor+1,w,c
 12809  00139E  B4D8               	btfsc	status,2,c
 12810  0013A0  D01D               	goto	i1l4002
 12811  0013A2  0E01               	movlw	1
 12812  0013A4  6E2F               	movwf	i1___awmod@counter,c
 12813  0013A6  D005               	goto	i1l3992
 12814  0013A8                     i1l3990:
 12815  0013A8  90D8               	bcf	status,0,c
 12816  0013AA  362D               	rlcf	i1___awmod@divisor,f,c
 12817  0013AC  362E               	rlcf	i1___awmod@divisor+1,f,c
 12818  0013AE  2A2F               	incf	i1___awmod@counter,f,c
 12819  0013B0  D000               	goto	i1l3992
 12820  0013B2                     i1l3992:
 12821  0013B2  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 12822  0013B4  D002               	goto	i1l3994
 12823  0013B6  D7F8               	goto	i1l3990
 12824  0013B8  D000               	goto	i1l3994
 12825  0013BA                     i1l3994:
 12826  0013BA  502D               	movf	i1___awmod@divisor,w,c
 12827  0013BC  5C2B               	subwf	i1___awmod@dividend,w,c
 12828  0013BE  502E               	movf	i1___awmod@divisor+1,w,c
 12829  0013C0  582C               	subwfb	i1___awmod@dividend+1,w,c
 12830  0013C2  A0D8               	btfss	status,0,c
 12831  0013C4  D005               	goto	i1l3998
 12832  0013C6  502D               	movf	i1___awmod@divisor,w,c
 12833  0013C8  5E2B               	subwf	i1___awmod@dividend,f,c
 12834  0013CA  502E               	movf	i1___awmod@divisor+1,w,c
 12835  0013CC  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 12836  0013CE  D000               	goto	i1l3998
 12837  0013D0                     i1l3998:
 12838  0013D0  90D8               	bcf	status,0,c
 12839  0013D2  322E               	rrcf	i1___awmod@divisor+1,f,c
 12840  0013D4  322D               	rrcf	i1___awmod@divisor,f,c
 12841  0013D6  2E2F               	decfsz	i1___awmod@counter,f,c
 12842  0013D8  D7F0               	goto	i1l3994
 12843  0013DA  D000               	goto	i1l4002
 12844  0013DC                     i1l4002:
 12845  0013DC  5030               	movf	i1___awmod@sign,w,c
 12846  0013DE  B4D8               	btfsc	status,2,c
 12847  0013E0  D005               	goto	i1l4006
 12848  0013E2  6C2B               	negf	i1___awmod@dividend,c
 12849  0013E4  1E2C               	comf	i1___awmod@dividend+1,f,c
 12850  0013E6  B0D8               	btfsc	status,0,c
 12851  0013E8  2A2C               	incf	i1___awmod@dividend+1,f,c
 12852  0013EA  D000               	goto	i1l4006
 12853  0013EC                     i1l4006:
 12854  0013EC  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 12855  0013F0  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 12856  0013F4  D000               	goto	i1l1435
 12857  0013F6                     i1l1435:
 12858  0013F6  0012               	return		;funcret
 12859  0013F8                     __end_ofi1___awmod:
 12860                           	opt stack 0
 12861                           pclatu	equ	0xFFB
 12862                           pclath	equ	0xFFA
 12863                           tblptru	equ	0xFF8
 12864                           tblptrh	equ	0xFF7
 12865                           tblptrl	equ	0xFF6
 12866                           tablat	equ	0xFF5
 12867                           prodh	equ	0xFF4
 12868                           prodl	equ	0xFF3
 12869                           intcon	equ	0xFF2
 12870                           intcon2	equ	0xFF1
 12871                           intcon3	equ	0xFF0
 12872                           postinc0	equ	0xFEE
 12873                           fsr0h	equ	0xFEA
 12874                           fsr0l	equ	0xFE9
 12875                           wreg	equ	0xFE8
 12876                           postinc1	equ	0xFE6
 12877                           postdec1	equ	0xFE5
 12878                           fsr1h	equ	0xFE2
 12879                           fsr1l	equ	0xFE1
 12880                           bsr	equ	0xFE0
 12881                           indf2	equ	0xFDF
 12882                           postinc2	equ	0xFDE
 12883                           postdec2	equ	0xFDD
 12884                           fsr2h	equ	0xFDA
 12885                           fsr2l	equ	0xFD9
 12886                           status	equ	0xFD8
 12887                           
 12888 ;; *************** function _ReadADC *****************
 12889 ;; Defined at:
 12890 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;		None
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  2    0[COMRAM] int 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12908 ;;Total ram usage:        4 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    3
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_isrLP
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text107
 12919  002318                     __ptext107:
 12920                           	opt stack 0
 12921  002318                     _ReadADC:
 12922                           	opt stack 20
 12923                           
 12924                           ;incstack = 0
 12925  002318  50C4               	movf	4036,w,c	;volatile
 12926  00231A  6E2D               	movwf	??_ReadADC& (0+255),c
 12927  00231C  50C3               	movf	4035,w,c	;volatile
 12928  00231E  6E2B               	movwf	?_ReadADC,c
 12929  002320  C02D  F02C         	movff	??_ReadADC,?_ReadADC+1
 12930  002324  D000               	goto	i1l1044
 12931  002326                     i1l1044:
 12932  002326  0012               	return		;funcret
 12933  002328                     __end_of_ReadADC:
 12934                           	opt stack 0
 12935                           pclatu	equ	0xFFB
 12936                           pclath	equ	0xFFA
 12937                           tblptru	equ	0xFF8
 12938                           tblptrh	equ	0xFF7
 12939                           tblptrl	equ	0xFF6
 12940                           tablat	equ	0xFF5
 12941                           prodh	equ	0xFF4
 12942                           prodl	equ	0xFF3
 12943                           intcon	equ	0xFF2
 12944                           intcon2	equ	0xFF1
 12945                           intcon3	equ	0xFF0
 12946                           postinc0	equ	0xFEE
 12947                           fsr0h	equ	0xFEA
 12948                           fsr0l	equ	0xFE9
 12949                           wreg	equ	0xFE8
 12950                           postinc1	equ	0xFE6
 12951                           postdec1	equ	0xFE5
 12952                           fsr1h	equ	0xFE2
 12953                           fsr1l	equ	0xFE1
 12954                           bsr	equ	0xFE0
 12955                           indf2	equ	0xFDF
 12956                           postinc2	equ	0xFDE
 12957                           postdec2	equ	0xFDD
 12958                           fsr2h	equ	0xFDA
 12959                           fsr2l	equ	0xFD9
 12960                           status	equ	0xFD8
 12961                           
 12962 ;; *************** function _isrHP *****************
 12963 ;; Defined at:
 12964 ;;		line 619 in file "FastBuggy17_Main_Code_TUNING.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;		None
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;		None
 12969 ;; Return value:  Size  Location     Type
 12970 ;;		None               void
 12971 ;; Registers used:
 12972 ;;		wreg, status,2, status,0, cstack
 12973 ;; Tracked objects:
 12974 ;;		On entry : 0/0
 12975 ;;		On exit  : 0/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12980 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12981 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;Total ram usage:       14 bytes
 12983 ;; Hardware stack levels used:    1
 12984 ;; Hardware stack levels required when called:    2
 12985 ;; This function calls:
 12986 ;;		_MillisecondTimerISR
 12987 ;;		_UltrasoundISR
 12988 ;; This function is called by:
 12989 ;;		Interrupt level 2
 12990 ;; This function uses a non-reentrant model
 12991 ;;
 12992                           
 12993                           	psect	intcode
 12994  000008                     __pintcode:
 12995                           	opt stack 0
 12996  000008                     _isrHP:
 12997                           	opt stack 18
 12998                           
 12999                           ;incstack = 0
 13000  000008  CFFA F0C2          	movff	pclath,??_isrHP
 13001  00000C  CFFB F0C3          	movff	pclatu,??_isrHP+1
 13002  000010  CFE9 F0C4          	movff	fsr0l,??_isrHP+2
 13003  000014  EDFC  F009         	call	int_func,f	;refresh shadow registers
 13004                           pclatu	equ	0xFFB
 13005                           pclath	equ	0xFFA
 13006                           tblptru	equ	0xFF8
 13007                           tblptrh	equ	0xFF7
 13008                           tblptrl	equ	0xFF6
 13009                           tablat	equ	0xFF5
 13010                           prodh	equ	0xFF4
 13011                           prodl	equ	0xFF3
 13012                           intcon	equ	0xFF2
 13013                           intcon2	equ	0xFF1
 13014                           intcon3	equ	0xFF0
 13015                           postinc0	equ	0xFEE
 13016                           fsr0h	equ	0xFEA
 13017                           fsr0l	equ	0xFE9
 13018                           wreg	equ	0xFE8
 13019                           postinc1	equ	0xFE6
 13020                           postdec1	equ	0xFE5
 13021                           fsr1h	equ	0xFE2
 13022                           fsr1l	equ	0xFE1
 13023                           bsr	equ	0xFE0
 13024                           indf2	equ	0xFDF
 13025                           postinc2	equ	0xFDE
 13026                           postdec2	equ	0xFDD
 13027                           fsr2h	equ	0xFDA
 13028                           fsr2l	equ	0xFD9
 13029                           status	equ	0xFD8
 13030                           
 13031                           	psect	intcode_body
 13032  0013F8                     __pintcode_body:
 13033                           	opt stack 18
 13034  0013F8                     int_func:
 13035                           	opt stack 18
 13036  0013F8  0006               	pop		; remove dummy address from shadow register refresh
 13037  0013FA  CFEA F0C5          	movff	fsr0h,??_isrHP+3
 13038  0013FE  CFE1 F0C6          	movff	fsr1l,??_isrHP+4
 13039  001402  CFE2 F0C7          	movff	fsr1h,??_isrHP+5
 13040  001406  CFD9 F0C8          	movff	fsr2l,??_isrHP+6
 13041  00140A  CFDA F0C9          	movff	fsr2h,??_isrHP+7
 13042  00140E  CFF3 F0CA          	movff	prodl,??_isrHP+8
 13043  001412  CFF4 F0CB          	movff	prodh,??_isrHP+9
 13044  001416  CFF6 F0CC          	movff	tblptrl,??_isrHP+10
 13045  00141A  CFF7 F0CD          	movff	tblptrh,??_isrHP+11
 13046  00141E  CFF8 F0CE          	movff	tblptru,??_isrHP+12
 13047  001422  CFF5 F0CF          	movff	tablat,??_isrHP+13
 13048                           
 13049                           ;FastBuggy17_Main_Code_TUNING.c: 622: if (INTCONbits.TMR0IF == 1) {
 13050  001426  A4F2               	btfss	intcon,2,c	;volatile
 13051  001428  D004               	goto	i2l944
 13052                           
 13053                           ;FastBuggy17_Main_Code_TUNING.c: 623: INTCONbits.TMR0IF = 0;
 13054  00142A  94F2               	bcf	intcon,2,c	;volatile
 13055                           
 13056                           ;FastBuggy17_Main_Code_TUNING.c: 625: MillisecondTimerISR();
 13057  00142C  ECC6  F010         	call	_MillisecondTimerISR	;wreg free
 13058                           
 13059                           ;FastBuggy17_Main_Code_TUNING.c: 629: }
 13060  001430  D006               	goto	i2l947
 13061  001432                     i2l944:
 13062                           
 13063                           ;FastBuggy17_Main_Code_TUNING.c: 632: else if (INTCON3bits.INT3IF == 1) {
 13064  001432  A4F0               	btfss	intcon3,2,c	;volatile
 13065  001434  D004               	goto	i2l947
 13066                           
 13067                           ;FastBuggy17_Main_Code_TUNING.c: 633: INTCON3bits.INT3IF = 0;
 13068  001436  94F0               	bcf	intcon3,2,c	;volatile
 13069                           
 13070                           ;FastBuggy17_Main_Code_TUNING.c: 635: UltrasoundISR();
 13071  001438  EC5C  F00F         	call	_UltrasoundISR	;wreg free
 13072  00143C  D000               	goto	i2l947
 13073  00143E                     i2l947:
 13074  00143E  C0CF  FFF5         	movff	??_isrHP+13,tablat
 13075  001442  C0CE  FFF8         	movff	??_isrHP+12,tblptru
 13076  001446  C0CD  FFF7         	movff	??_isrHP+11,tblptrh
 13077  00144A  C0CC  FFF6         	movff	??_isrHP+10,tblptrl
 13078  00144E  C0CB  FFF4         	movff	??_isrHP+9,prodh
 13079  001452  C0CA  FFF3         	movff	??_isrHP+8,prodl
 13080  001456  C0C9  FFDA         	movff	??_isrHP+7,fsr2h
 13081  00145A  C0C8  FFD9         	movff	??_isrHP+6,fsr2l
 13082  00145E  C0C7  FFE2         	movff	??_isrHP+5,fsr1h
 13083  001462  C0C6  FFE1         	movff	??_isrHP+4,fsr1l
 13084  001466  C0C5  FFEA         	movff	??_isrHP+3,fsr0h
 13085  00146A  C0C4  FFE9         	movff	??_isrHP+2,fsr0l
 13086  00146E  C0C3  FFFB         	movff	??_isrHP+1,pclatu
 13087  001472  C0C2  FFFA         	movff	??_isrHP,pclath
 13088  001476  0011               	retfie		f
 13089  001478                     __end_of_isrHP:
 13090                           	opt stack 0
 13091                           pclatu	equ	0xFFB
 13092                           pclath	equ	0xFFA
 13093                           tblptru	equ	0xFF8
 13094                           tblptrh	equ	0xFF7
 13095                           tblptrl	equ	0xFF6
 13096                           tablat	equ	0xFF5
 13097                           prodh	equ	0xFF4
 13098                           prodl	equ	0xFF3
 13099                           intcon	equ	0xFF2
 13100                           intcon2	equ	0xFF1
 13101                           intcon3	equ	0xFF0
 13102                           postinc0	equ	0xFEE
 13103                           fsr0h	equ	0xFEA
 13104                           fsr0l	equ	0xFE9
 13105                           wreg	equ	0xFE8
 13106                           postinc1	equ	0xFE6
 13107                           postdec1	equ	0xFE5
 13108                           fsr1h	equ	0xFE2
 13109                           fsr1l	equ	0xFE1
 13110                           bsr	equ	0xFE0
 13111                           indf2	equ	0xFDF
 13112                           postinc2	equ	0xFDE
 13113                           postdec2	equ	0xFDD
 13114                           fsr2h	equ	0xFDA
 13115                           fsr2l	equ	0xFD9
 13116                           status	equ	0xFD8
 13117                           
 13118 ;; *************** function _UltrasoundISR *****************
 13119 ;; Defined at:
 13120 ;;		line 17 in file "Ultrasound.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;		None
 13123 ;; Auto vars:     Size  Location     Type
 13124 ;;		None
 13125 ;; Return value:  Size  Location     Type
 13126 ;;		None               void
 13127 ;; Registers used:
 13128 ;;		wreg, status,2, cstack
 13129 ;; Tracked objects:
 13130 ;;		On entry : 0/0
 13131 ;;		On exit  : 0/0
 13132 ;;		Unchanged: 0/0
 13133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13138 ;;Total ram usage:        0 bytes
 13139 ;; Hardware stack levels used:    1
 13140 ;; Hardware stack levels required when called:    1
 13141 ;; This function calls:
 13142 ;;		_ReadTimer1
 13143 ;;		i2_WriteTimer1
 13144 ;; This function is called by:
 13145 ;;		_isrHP
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           	psect	text109
 13150  001EB8                     __ptext109:
 13151                           	opt stack 0
 13152  001EB8                     _UltrasoundISR:
 13153                           	opt stack 18
 13154                           
 13155                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 13156                           
 13157                           ;incstack = 0
 13158  001EB8  9AF0               	bcf	intcon3,5,c	;volatile
 13159                           
 13160                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 13161  001EBA  B0CD               	btfsc	4045,0,c	;volatile
 13162  001EBC  D009               	goto	i2l28
 13163                           
 13164                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 13165  001EBE  80CD               	bsf	4045,0,c	;volatile
 13166                           
 13167                           ;Ultrasound.c: 35: WriteTimer1(0);
 13168  001EC0  0E00               	movlw	0
 13169  001EC2  6E45               	movwf	i2WriteTimer1@timer1+1,c
 13170  001EC4  0E00               	movlw	0
 13171  001EC6  6E44               	movwf	i2WriteTimer1@timer1,c
 13172  001EC8  EC49  F011         	call	i2_WriteTimer1	;wreg free
 13173                           
 13174                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 13175  001ECC  96F1               	bcf	intcon2,3,c	;volatile
 13176                           
 13177                           ;Ultrasound.c: 37: }
 13178  001ECE  D00A               	goto	i2l6030
 13179  001ED0                     i2l28:
 13180                           
 13181                           ;Ultrasound.c: 38: else {
 13182                           ;Ultrasound.c: 39: T1CONbits.TMR1ON = 0;
 13183  001ED0  90CD               	bcf	4045,0,c	;volatile
 13184                           
 13185                           ;Ultrasound.c: 40: echo_time = ReadTimer1();
 13186  001ED2  EC52  F011         	call	_ReadTimer1	;wreg free
 13187  001ED6  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 13188  001EDA  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 13189                           
 13190                           ;Ultrasound.c: 41: echo_acq_done = 1;
 13191  001EDE  0E01               	movlw	1
 13192  001EE0  6E1C               	movwf	_echo_acq_done,c
 13193  001EE2  D000               	goto	i2l6030
 13194  001EE4                     i2l6030:
 13195                           
 13196                           ;Ultrasound.c: 42: }
 13197                           ;Ultrasound.c: 43: INTCON3bits.INT3IF = 0;
 13198  001EE4  94F0               	bcf	intcon3,2,c	;volatile
 13199                           
 13200                           ;Ultrasound.c: 44: INTCON3bits.INT3IE = 1;
 13201  001EE6  8AF0               	bsf	intcon3,5,c	;volatile
 13202  001EE8  0012               	return		;funcret
 13203  001EEA                     __end_of_UltrasoundISR:
 13204                           	opt stack 0
 13205                           pclatu	equ	0xFFB
 13206                           pclath	equ	0xFFA
 13207                           tblptru	equ	0xFF8
 13208                           tblptrh	equ	0xFF7
 13209                           tblptrl	equ	0xFF6
 13210                           tablat	equ	0xFF5
 13211                           prodh	equ	0xFF4
 13212                           prodl	equ	0xFF3
 13213                           intcon	equ	0xFF2
 13214                           intcon2	equ	0xFF1
 13215                           intcon3	equ	0xFF0
 13216                           postinc0	equ	0xFEE
 13217                           fsr0h	equ	0xFEA
 13218                           fsr0l	equ	0xFE9
 13219                           wreg	equ	0xFE8
 13220                           postinc1	equ	0xFE6
 13221                           postdec1	equ	0xFE5
 13222                           fsr1h	equ	0xFE2
 13223                           fsr1l	equ	0xFE1
 13224                           bsr	equ	0xFE0
 13225                           indf2	equ	0xFDF
 13226                           postinc2	equ	0xFDE
 13227                           postdec2	equ	0xFDD
 13228                           fsr2h	equ	0xFDA
 13229                           fsr2l	equ	0xFD9
 13230                           status	equ	0xFD8
 13231                           
 13232 ;; *************** function i2_WriteTimer1 *****************
 13233 ;; Defined at:
 13234 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;  timer1          2   25[COMRAM] unsigned int 
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 13239 ;; Return value:  Size  Location     Type
 13240 ;;		None               void
 13241 ;; Registers used:
 13242 ;;		None
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13251 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13252 ;;Total ram usage:        4 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; This function calls:
 13255 ;;		Nothing
 13256 ;; This function is called by:
 13257 ;;		_UltrasoundISR
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260                           
 13261                           	psect	text110
 13262  002292                     __ptext110:
 13263                           	opt stack 0
 13264  002292                     i2_WriteTimer1:
 13265                           	opt stack 18
 13266                           
 13267                           ;incstack = 0
 13268  002292  C044  F0C0         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 13269  002296  C045  F0C1         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 13270  00229A  C0C1  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 13271  00229E  C0C0  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 13272  0022A2  0012               	return		;funcret
 13273  0022A4                     __end_ofi2_WriteTimer1:
 13274                           	opt stack 0
 13275                           pclatu	equ	0xFFB
 13276                           pclath	equ	0xFFA
 13277                           tblptru	equ	0xFF8
 13278                           tblptrh	equ	0xFF7
 13279                           tblptrl	equ	0xFF6
 13280                           tablat	equ	0xFF5
 13281                           prodh	equ	0xFF4
 13282                           prodl	equ	0xFF3
 13283                           intcon	equ	0xFF2
 13284                           intcon2	equ	0xFF1
 13285                           intcon3	equ	0xFF0
 13286                           postinc0	equ	0xFEE
 13287                           fsr0h	equ	0xFEA
 13288                           fsr0l	equ	0xFE9
 13289                           wreg	equ	0xFE8
 13290                           postinc1	equ	0xFE6
 13291                           postdec1	equ	0xFE5
 13292                           fsr1h	equ	0xFE2
 13293                           fsr1l	equ	0xFE1
 13294                           bsr	equ	0xFE0
 13295                           indf2	equ	0xFDF
 13296                           postinc2	equ	0xFDE
 13297                           postdec2	equ	0xFDD
 13298                           fsr2h	equ	0xFDA
 13299                           fsr2l	equ	0xFD9
 13300                           status	equ	0xFD8
 13301                           
 13302 ;; *************** function _ReadTimer1 *****************
 13303 ;; Defined at:
 13304 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;		None
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;  timer           2    0[BANK0 ] struct Timers
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  2   25[COMRAM] unsigned int 
 13311 ;; Registers used:
 13312 ;;		None
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;Total ram usage:        4 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_UltrasoundISR
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text111
 13332  0022A4                     __ptext111:
 13333                           	opt stack 0
 13334  0022A4                     _ReadTimer1:
 13335                           	opt stack 18
 13336                           
 13337                           ;incstack = 0
 13338  0022A4  CFCE F0C0          	movff	4046,ReadTimer1@timer	;volatile
 13339  0022A8  CFCF F0C1          	movff	4047,ReadTimer1@timer+1	;volatile
 13340  0022AC  C0C0  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 13341  0022B0  C0C1  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 13342  0022B4  0012               	return		;funcret
 13343  0022B6                     __end_of_ReadTimer1:
 13344                           	opt stack 0
 13345                           pclatu	equ	0xFFB
 13346                           pclath	equ	0xFFA
 13347                           tblptru	equ	0xFF8
 13348                           tblptrh	equ	0xFF7
 13349                           tblptrl	equ	0xFF6
 13350                           tablat	equ	0xFF5
 13351                           prodh	equ	0xFF4
 13352                           prodl	equ	0xFF3
 13353                           intcon	equ	0xFF2
 13354                           intcon2	equ	0xFF1
 13355                           intcon3	equ	0xFF0
 13356                           postinc0	equ	0xFEE
 13357                           fsr0h	equ	0xFEA
 13358                           fsr0l	equ	0xFE9
 13359                           wreg	equ	0xFE8
 13360                           postinc1	equ	0xFE6
 13361                           postdec1	equ	0xFE5
 13362                           fsr1h	equ	0xFE2
 13363                           fsr1l	equ	0xFE1
 13364                           bsr	equ	0xFE0
 13365                           indf2	equ	0xFDF
 13366                           postinc2	equ	0xFDE
 13367                           postdec2	equ	0xFDD
 13368                           fsr2h	equ	0xFDA
 13369                           fsr2l	equ	0xFD9
 13370                           status	equ	0xFD8
 13371                           
 13372 ;; *************** function _MillisecondTimerISR *****************
 13373 ;; Defined at:
 13374 ;;		line 55 in file "MillisecondTimer.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;		None
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;		None
 13379 ;; Return value:  Size  Location     Type
 13380 ;;		None               void
 13381 ;; Registers used:
 13382 ;;		wreg, status,2, status,0, cstack
 13383 ;; Tracked objects:
 13384 ;;		On entry : 0/0
 13385 ;;		On exit  : 0/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13392 ;;Total ram usage:        0 bytes
 13393 ;; Hardware stack levels used:    1
 13394 ;; Hardware stack levels required when called:    1
 13395 ;; This function calls:
 13396 ;;		i2_WriteTimer0
 13397 ;; This function is called by:
 13398 ;;		_isrHP
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           	psect	text112
 13403  00218C                     __ptext112:
 13404                           	opt stack 0
 13405  00218C                     _MillisecondTimerISR:
 13406                           	opt stack 18
 13407                           
 13408                           ;MillisecondTimer.c: 57: WriteTimer0(63036);
 13409                           
 13410                           ;incstack = 0
 13411  00218C  0EF6               	movlw	246
 13412  00218E  6E45               	movwf	i2WriteTimer0@timer0+1,c
 13413  002190  0E3C               	movlw	60
 13414  002192  6E44               	movwf	i2WriteTimer0@timer0,c
 13415  002194  EC5B  F011         	call	i2_WriteTimer0	;wreg free
 13416                           
 13417                           ;MillisecondTimer.c: 58: millisecond_COUNT0++;
 13418  002198  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 13419  00219A  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 13420                           
 13421                           ;MillisecondTimer.c: 59: millisecond_COUNT1++;
 13422  00219C  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 13423  00219E  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 13424                           
 13425                           ;MillisecondTimer.c: 60: millisecond_COUNT2++;
 13426  0021A0  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 13427  0021A2  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 13428                           
 13429                           ;MillisecondTimer.c: 61: millisecond_COUNT3++;
 13430  0021A4  4A13               	infsnz	_millisecond_COUNT3,f,c	;volatile
 13431  0021A6  2A14               	incf	_millisecond_COUNT3+1,f,c	;volatile
 13432  0021A8  0012               	return		;funcret
 13433  0021AA                     __end_of_MillisecondTimerISR:
 13434                           	opt stack 0
 13435                           pclatu	equ	0xFFB
 13436                           pclath	equ	0xFFA
 13437                           tblptru	equ	0xFF8
 13438                           tblptrh	equ	0xFF7
 13439                           tblptrl	equ	0xFF6
 13440                           tablat	equ	0xFF5
 13441                           prodh	equ	0xFF4
 13442                           prodl	equ	0xFF3
 13443                           intcon	equ	0xFF2
 13444                           intcon2	equ	0xFF1
 13445                           intcon3	equ	0xFF0
 13446                           postinc0	equ	0xFEE
 13447                           fsr0h	equ	0xFEA
 13448                           fsr0l	equ	0xFE9
 13449                           wreg	equ	0xFE8
 13450                           postinc1	equ	0xFE6
 13451                           postdec1	equ	0xFE5
 13452                           fsr1h	equ	0xFE2
 13453                           fsr1l	equ	0xFE1
 13454                           bsr	equ	0xFE0
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           postdec2	equ	0xFDD
 13458                           fsr2h	equ	0xFDA
 13459                           fsr2l	equ	0xFD9
 13460                           status	equ	0xFD8
 13461                           
 13462 ;; *************** function i2_WriteTimer0 *****************
 13463 ;; Defined at:
 13464 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  timer0          2   25[COMRAM] unsigned int 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 13469 ;; Return value:  Size  Location     Type
 13470 ;;		None               void
 13471 ;; Registers used:
 13472 ;;		None
 13473 ;; Tracked objects:
 13474 ;;		On entry : 0/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13479 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;Total ram usage:        4 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; This function calls:
 13485 ;;		Nothing
 13486 ;; This function is called by:
 13487 ;;		_MillisecondTimerISR
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text113
 13492  0022B6                     __ptext113:
 13493                           	opt stack 0
 13494  0022B6                     i2_WriteTimer0:
 13495                           	opt stack 18
 13496                           
 13497                           ;incstack = 0
 13498  0022B6  C044  F0C0         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 13499  0022BA  C045  F0C1         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 13500  0022BE  C0C1  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 13501  0022C2  C0C0  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 13502  0022C6  0012               	return		;funcret
 13503  0022C8                     __end_ofi2_WriteTimer0:
 13504                           	opt stack 0
 13505  0000                     pclatu	equ	0xFFB
 13506                           pclath	equ	0xFFA
 13507                           tblptru	equ	0xFF8
 13508                           tblptrh	equ	0xFF7
 13509                           tblptrl	equ	0xFF6
 13510                           tablat	equ	0xFF5
 13511                           prodh	equ	0xFF4
 13512                           prodl	equ	0xFF3
 13513                           intcon	equ	0xFF2
 13514                           intcon2	equ	0xFF1
 13515                           intcon3	equ	0xFF0
 13516                           postinc0	equ	0xFEE
 13517                           fsr0h	equ	0xFEA
 13518                           fsr0l	equ	0xFE9
 13519                           wreg	equ	0xFE8
 13520                           postinc1	equ	0xFE6
 13521                           postdec1	equ	0xFE5
 13522                           fsr1h	equ	0xFE2
 13523                           fsr1l	equ	0xFE1
 13524                           bsr	equ	0xFE0
 13525                           indf2	equ	0xFDF
 13526                           postinc2	equ	0xFDE
 13527                           postdec2	equ	0xFDD
 13528                           fsr2h	equ	0xFDA
 13529                           fsr2l	equ	0xFD9
 13530                           status	equ	0xFD8
 13531                           pclatu	equ	0xFFB
 13532                           pclath	equ	0xFFA
 13533                           tblptru	equ	0xFF8
 13534                           tblptrh	equ	0xFF7
 13535                           tblptrl	equ	0xFF6
 13536                           tablat	equ	0xFF5
 13537                           prodh	equ	0xFF4
 13538                           prodl	equ	0xFF3
 13539                           intcon	equ	0xFF2
 13540                           intcon2	equ	0xFF1
 13541                           intcon3	equ	0xFF0
 13542                           postinc0	equ	0xFEE
 13543                           fsr0h	equ	0xFEA
 13544                           fsr0l	equ	0xFE9
 13545                           wreg	equ	0xFE8
 13546                           postinc1	equ	0xFE6
 13547                           postdec1	equ	0xFE5
 13548                           fsr1h	equ	0xFE2
 13549                           fsr1l	equ	0xFE1
 13550                           bsr	equ	0xFE0
 13551                           indf2	equ	0xFDF
 13552                           postinc2	equ	0xFDE
 13553                           postdec2	equ	0xFDD
 13554                           fsr2h	equ	0xFDA
 13555                           fsr2l	equ	0xFD9
 13556                           status	equ	0xFD8
 13557                           
 13558                           	psect	rparam
 13559  0000                     pclatu	equ	0xFFB
 13560                           pclath	equ	0xFFA
 13561                           tblptru	equ	0xFF8
 13562                           tblptrh	equ	0xFF7
 13563                           tblptrl	equ	0xFF6
 13564                           tablat	equ	0xFF5
 13565                           prodh	equ	0xFF4
 13566                           prodl	equ	0xFF3
 13567                           intcon	equ	0xFF2
 13568                           intcon2	equ	0xFF1
 13569                           intcon3	equ	0xFF0
 13570                           postinc0	equ	0xFEE
 13571                           fsr0h	equ	0xFEA
 13572                           fsr0l	equ	0xFE9
 13573                           wreg	equ	0xFE8
 13574                           postinc1	equ	0xFE6
 13575                           postdec1	equ	0xFE5
 13576                           fsr1h	equ	0xFE2
 13577                           fsr1l	equ	0xFE1
 13578                           bsr	equ	0xFE0
 13579                           indf2	equ	0xFDF
 13580                           postinc2	equ	0xFDE
 13581                           postdec2	equ	0xFDD
 13582                           fsr2h	equ	0xFDA
 13583                           fsr2l	equ	0xFD9
 13584                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         138
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160     38     140
    BANK1           256     44      44
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@off_line_sum_ptr	PTR int  size(2) Largest target is 2
		 -> off_line_sum(BANK0[2]), 

    main@PID_set_point_ptr	PTR int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    main@PID_error_ptr	PTR int  size(2) Largest target is 2
		 -> PID_error(BANK0[2]), 

    main@sensor_sum_ptr	PTR int  size(2) Largest target is 2
		 -> main@sensor_sum(BANK1[2]), 

    main@sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    DisplaySensorStatuses@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateDiscreteSensorSum@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSum@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    CalculateSensorStatuses@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    CalculateSensorStatuses@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    NormaliseSensorReadings@sensor_offsets	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    NormaliseSensorReadings@sensor_readings_raw	PTR  int  size(2) Largest target is 10
		 -> sensor_readings_raw(BANK0[10]), 

    SendPIDSetPointOffLine@set_point	PTR const int  size(2) Largest target is 2
		 -> off_line_sum(BANK0[2]), 

    SendPIDSetPointOnLine@set_point	PTR const int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_LoadCalibration
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendStoredPIDValues->_PutCharTxBuf
    _SendPIDSetPointOnLine->_PutCharTxBuf
    _SendPIDSetPointOffLine->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_CalibrateOffsets
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _FlashLEDS->_Delay10KTCYx
    _CalibrateOnLine->_CalculateSensorSum
    _CalibrateOffsets->_SendStatus
    _CalibrateOffLine->_CalculateSensorSum
    _SendStatus->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _CalculateSensorSum->___wmul
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0   64909
                                             34 BANK0      4     4      0
                                              0 BANK1     44    44      0
                    _BusyDistanceAcq
                      _BusySensorAcq
         _CalculateDiscreteSensorSum
            _CalculateSensorStatuses
                 _CalculateSensorSum
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
                       _ResetMillis3
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                        _SendOffsets
             _SendPIDSetPointOffLine
              _SendPIDSetPointOnLine
                         _SendStatus
                _SendStoredPIDValues
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     575
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1170
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1390
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOnLine                                4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOffLine                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1270
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11352
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5850
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   12279
                                             31 BANK0      3     3      0
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1167
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     449
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0   10533
                                             28 BANK0      3     3      0
                   _CalibrateOffLine
                   _CalibrateOffsets
                    _CalibrateOnLine
                          _FlashLEDS
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3     966
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOnLine                                      0     0      0    3164
                      _BusySensorAcq
                 _CalculateSensorSum
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0    1270
                                             25 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffLine                                     0     0      0    3164
                      _BusySensorAcq
                 _CalculateSensorSum
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              9     5      4     743
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (5) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (6) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorSum                                   6     4      2    1281
                                             22 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplaySensorStatuses                                5     3      2     291
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     638
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     440
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorStatuses                             12     8      4     706
                                             16 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (1) _CalculateDiscreteSensorSum                           4     2      2     232
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                            _ReadADC
                     _WirelessTx_ISR
                       i1_ConvertADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateDiscreteSensorSum
   _CalculateSensorStatuses
   _CalculateSensorSum
     ___wmul
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffLine
       _BusySensorAcq
       _CalculateSensorSum
         ___wmul
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateOnLine
       _BusySensorAcq
       _CalculateSensorSum
         ___wmul
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _FlashLEDS
       _Delay10KTCYx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _GenerateCalibration
       _CalibrateOffLine
         _BusySensorAcq
         _CalculateSensorSum
           ___wmul
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateOnLine
         _BusySensorAcq
         _CalculateSensorSum
           ___wmul
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _FlashLEDS
         _Delay10KTCYx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _ResetMillis3
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOffLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOnLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___awdiv
   ___wmul

 _isrLP (ROOT)
   _ReadADC
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     2C      2C       8       17.2%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      8C       5       87.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD       6        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 26 12:12:54 2017

                             __size_of_WriteEEPROM 0040                                __end_of_OWWriteByte 1F72  
                             __end_of_GetCharRxBuf 1ACA                               __end_of_GetCharTxBuf 1DE6  
                                               l36 2316                                       ___awdiv@sign 00D5  
                              WriteCharEEPROM@data 00D5                                                 bsr 000FE0  
                              ___wmul@multiplicand 00D2                                        __CFG_BORV$0 000000  
                       __end_of_CalculateSensorSum 0B70                                  main@line_end_flag 0108  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                      __CFG_OSC$HS 000000                                       __CFG_CP4$OFF 000000  
                                     __CFG_CP5$OFF 000000                                __end_of_GetDistance 2248  
                                     __CFG_CP6$OFF 000000                                       __CFG_CP7$OFF 000000  
                             LoadCalibration@index 00E1                                                l213 1BE4  
                                              l214 1C14                                                l223 1F80  
                                              l216 1C08                                                l224 1F9C  
                                              l240 22D6                                                l128 1118  
                                              l226 1F94                                                l324 22E6  
                                              l237 1978                                                l461 23BE  
                                              l286 1AC8                                                l552 1CB4  
                                              l458 2350                                                l554 1CCA  
                                              l562 1F70                                                l475 17F0  
                                              l804 22F6                                                l557 1F18  
                                              l549 1D3C                                                l831 1C54  
                                              l823 0934                                                l567 1D68  
                                              l487 1F44                                                l568 1D74  
                                              l809 14F4                                                l921 0952  
                                              l826 0B6E                                                l850 19D6  
                                              l836 1A82                                                l916 11C0  
                                              l853 19A4                                                l941 0C64  
                                              l863 18DE                                                l848 199A  
                                              l865 191A                                                l868 18E8  
                                              l798 0D52                                                l886 12EE  
                                     __CFG_CPB$OFF 000000                                                _PR2 000FCB  
                                              _PR4 000F77                                       __CFG_CPD$OFF 000000  
                    __size_of_SendCurrentPIDValues 006A                             __size_of_SetDCMotorPID 00A8  
                             __size_of_WriteTimer0 0012                               __size_of_WriteTimer1 0012  
                            CalibrateOffsets@index 00DB                                         _OWReadByte 1D3E  
                                    _SetADCChannel 0C66                                       ___awmod@sign 00D5  
                                              prod 000FF3                               ?_SendStoredPIDValues 00D8  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                                     __CFG_MODE$MC 000000                          ??_CalculateSensorStatuses 00D4  
                                      ?_PB1pressed 002B                                    ReadTimer1@timer 00C0  
                                    main@Kd_stored 0126                                  main@line_mode_ptr 0111  
                                      ?_PB2pressed 002B                                       __CFG_LVP$OFF 000000  
                                       _Delay1TCYx 22F8                                       __CFG_WDT$OFF 000000  
                                             l1200 1358                                               l1114 205C  
                                             l1202 1374                                               l1115 205E  
                                             l1211 2028                                               l1036 156E  
                                             l1140 1E80                                               l1141 1E82  
                                             l1215 203A                                               l1066 20A2  
                                             l1138 1E68                                               l1170 20F2  
                                             l1068 20AC                                               l1092 207A  
                                             l1229 1DAC                                               l1422 0F0C  
                                             l1169 20F0                                               l1193 1326  
                                             l1435 0FC0                                               l1197 1348  
                                             l1461 2306                                               l1454 214E  
                                             l1199 1356                                               l1459 22FC  
                                             l5410 0C6C                                               l6122 11E4  
                                             l5420 0C94                                               l5412 0C74  
                                             l6204 17CA                                               l6140 16B6  
                                             l6108 1C58                                               l6132 1246  
                                             l6116 11C4                                               l6060 10EE  
                                             l5430 0CBC                                               l5422 0C9C  
                                             l5414 0C7C                                               l5350 0F52  
                                             l5342 0F2C                                               l6310 113A  
                                             l6134 1254                                               l6126 11EE  
                                             l6150 164C                                               l5440 0CE4  
                                             l5432 0CC4                                               l5424 0CA4  
                                             l5416 0C84                                               l5504 147E  
                                             l5352 0F60                                               l6320 1192  
                                             l6160 1720                                               l6144 170E  
                                             l6056 10B2                                               l6250 086A  
                                             l6242 07FE                                               l5434 0CCC  
                                             l5426 0CAC                                               l5418 0C8C  
                                             l5354 0F6A                                               l5362 0FA0  
                                             l5346 0F3E                                               l5530 2136  
                                             l6314 1144                                               l6170 17F4  
                                             l6154 16A4                                               l6260 0896  
                                             l6252 0882                                               l5436 0CD4  
                                             l5428 0CB4                                               l5444 0CEC  
                                             l5508 1488                                               l6308 1134  
                                             l6324 0B78                                               l6164 1778  
                                             l6180 1574                                               l6270 092C  
                                             l6246 0808                                               l5622 1E2C  
                                             l5438 0CDC                                               l5366 0FB6  
                                             l5358 0F90                                               l5702 19E4  
                                             l6174 184A                                               l6190 15E0  
                                             l6280 1C2C                                               l6264 08A0  
                                             l6256 088A                                               l5384 1DEC  
                                             l6344 0C1E                                               l6184 15CE  
                                             l6360 0E74                                               l6600 01FA  
                                             l5618 1E22                                               l5394 1E12  
                                             l5706 19F4                                               l6338 0BFA  
                                             l5810 1F5A                                               l6194 163A  
                                             l6370 0EAA                                               l6354 0E5C  
                                             l6610 021A                                               l6276 1C22  
                                             l6268 0914                                               l5628 1E48  
                                             l5388 1DF6                                               l6292 1A3A  
                                             l5564 19CC                                               l5556 19AE  
                                             l5484 1CD2                                               l5820 1D4A  
                                             l6286 1C4E                                               l5750 132A  
                                             l5742 1312                                               l5558 19C6  
                                             l5670 1280                                               l5806 1F50  
                                             l6366 0E92                                               l6382 0EEC  
                                             l6296 1A44                                               l5568 19D2  
                                             l5832 1D6E                                               l5824 1D54  
                                             l6368 0EA0                                               l6800 0738  
                                             l6704 0406                                               l6624 0246  
                                             l5906 2084                                               l5762 134C  
                                             l5754 1334                                               l5746 131C  
                                             l5738 1306                                               l5674 1290  
                                             l5666 1270                                               l6386 0F02  
                                             l6378 0EDC                                               l6642 02FE  
                                             l6618 0230                                               l5692 1876  
                                             l6804 0748                                               l6708 0410  
                                             l6660 0332                                               l6652 0318  
                                             l5854 1E6C                                               l5758 133E  
                                             l5678 129A                                               l5950 1910  
                                             l5942 18F2                                               l6806 0760  
                                             l6662 0350                                               l6590 01D8  
                                             l5688 1866                                               l5944 190A  
                                             l6672 036E                                               l5962 0FCC  
                                             l5954 1916                                               l6762 0612  
                                             l5972 1020                                               l6764 062A  
                                             l6668 0360                                               l6596 01E8  
                                             l5966 0FD6                                               l5798 1D2E  
                                             l6766 0630                                               l6782 06CC  
                                             l6678 0388                                               l6792 06F6  
                                             l6776 069E                                               l6784 06D2  
                                             l5986 0946                                               l5996 0966  
                                             l6796 0704                                               l5998 0974  
                                             l6798 0730                                               _LATE 000F8D  
                                             _LATJ 000F91                                               u5040 2312  
                                             u4400 22F2                                               u4340 22E2  
                                             u5070 10C6                                               u4360 234C  
                                             u6040 0712                                               u4505 1B18  
                                             u6050 0726                                               u6042 0714  
                                             u6107 1CAE                                               u4515 1AD4  
                                             u6052 0728                                               u6117 1CBA  
                                             u5414 1A70                                               u5415 1A6A  
                                             u6127 1CC2                                               u4480 19C2  
                                             u6080 075E                                               u6137 1D12  
                                             u6147 1D1C                                               u5275 17D8  
                                             u6157 1D30                                               u6167 1EF0  
                                             u6177 1EF8                                               u6097 1CA6  
                                             u6187 1F0A                                               i2l28 1ED0  
                                             u4940 1906                                               u6197 213E  
                                             u5960 0590                                    _BusyDistanceAcq 2308  
                                             _TMR2 000FCC                                      main@Ki_stored 0128  
                        __size_of_ConfigureBuggyIO 001A                                     Read1USART@data 00D0  
                                             _main 00F0                           __end_of_EnableSensorLEDS 23DA  
                          _NormaliseSensorReadings 1478                             __end_of_WirelessTx_ISR 20D4  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr0l 000FE9                                               fsr2h 000FDA  
                                             fsr1l 000FE1                                               indf2 000FDF  
                                             fsr2l 000FD9                             __size_ofi2_WriteTimer0 0012  
                           __size_ofi2_WriteTimer1 0012                                               pclat 000FFA  
                          ??_SendPIDSetPointOnLine 00DA               DisplaySensorStatuses@sensor_statuses 00D0  
                                             prodh 000FF4                                               prodl 000FF3  
                                   _ReadCharEEPROM 22C8                                               start 00EC  
                                  __end_of_OWReset 1D3E                                         _OWWriteBit 1C92  
                                    __CFG_IESO$OFF 000000                                _ConfigureInterrupts 1FEE  
                                    main@Kp_stored 0124                                      _BusySensorAcq 22E8  
                                    _ReadIntEEPROM 191C                               __end_of_EnableMotors 23EA  
                                    __CFG_MCLRE$ON 000000                                         _GetCommand 23B8  
                                     ___param_bank 000010                                    __end_of_ReadADC 2328  
                                    ??_ReadMillis0 00D2                                      ??_ReadMillis1 00D2  
                                    ??_ReadMillis2 00D2                                    __end_of_OpenADC 1572  
                                    ??_SetDCMotorL 00D8                                      ??_SetDCMotorR 00D8  
                            _DisplaySensorStatuses 1A34                                      __CFG_WAIT$OFF 000000  
                                  __end_of_StartTx 23B8                                      ??_ReadVoltage 00D5  
                                   _ReadEchoLength 2392                                              ?_main 002B  
                                  __end_of___awdiv 0F0E                                              _EEADR 000FA9  
                                  __end_of___awmod 0FC2                                     PutCharRxBuf@ch 00D7  
                                            _T0CON 000FD5                                    ___awdiv@divisor 00D2  
                                            _T1CON 000FCD                                              _T2CON 000FCA  
                                            i1l303 20D2                                              i1l280 1DE4  
                                   ?_SetADCChannel 002B                                              i1l950 009A  
                 __size_of_ResetAccumulatedCurrent 002C                                              i1l955 00A6  
                                            i1l798 0E3C                                    _CalibrateOnLine 185A  
                                            i2l944 1432                                              i2l947 143E  
                                  ___awdiv@counter 00D4                                      _UltrasoundISR 1EB8  
                                            _TMR0H 000FD7                                              _TMR1H 000FCF  
                                            _TMR0L 000FD6                                              _TMR1L 000FCE  
                                   PutCharTxBuf@ch 00D7                              ??_SendStoredPIDValues 00DE  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                              CalculateSensorSum@sum 00DA  
                                            _TRISG 000F98                                              _TRISJ 000F9A  
                             ?_ConfigureInterrupts 002B                              __size_of_Delay10KTCYx 001E  
                                    __CFG_PWRT$OFF 000000                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                                    __CFG_WRT3$OFF 000000                                      __CFG_WRT4$OFF 000000  
                                    __CFG_WRT5$OFF 000000                                      __CFG_WRT6$OFF 000000  
                                    __CFG_WRT7$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                   __CFG_EBTR4$OFF 000000                                     __CFG_EBTR5$OFF 000000  
                                   __CFG_EBTR6$OFF 000000                                     __CFG_EBTR7$OFF 000000  
                           WriteCharEEPROM@address 00D3                                      __CFG_WRTB$OFF 000000  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                   i1___awmod@sign 0030            CalculateSensorStatuses@sensor_threshold 00D2  
                                   __CFG_EBTRB$OFF 000000                                              _isrHP 0008  
                                            _isrLP 0018                                         _Read1USART 2016  
                                       _ConvertADC 23E2                                    ??_LoadPIDValues 00DD  
                                   __CFG_BOREN$OFF 000000                                              tablat 000FF5  
                         ??_SendPIDSetPointOffLine 00DA                                         _ReadEEPROM 1F72  
                           __end_of_ReadCharEEPROM 22D8                                              status 000FD8  
                            SendStoredPIDValues@Kd 00DA                              SendStoredPIDValues@Ki 00DC  
                            SendStoredPIDValues@Kp 00D8                                    ?_WirelessTx_ISR 002B  
                               __size_ofi1___awmod 0082                                        _OWWriteByte 1F46  
                                    _SetDCMotorPID 1072                __size_of_CalculateDiscreteSensorSum 0040  
                                   ?_BusySensorAcq 002B                                     ?_ReadIntEEPROM 00D2  
                                    ?_SetPIDValues 002B                                         _FlushRxBuf 1E1C  
                                  _ConfigureTimer0 21F2                                    _ConfigureTimer1 21C4  
                                  _ConfigureTimer2 23C0                                         _FlushTxBuf 1DE6  
                               __size_of_OWReadBit 0030                                    __initialization 20F6  
                                 ?_LoadCalibration 002B                                        _GetDistance 2234  
                               main@sensor_sum_ptr 0100                                       __end_of_main 07F2  
                                       _ReadTimer1 22A4                                __size_of_PB1pressed 005E  
                              __size_of_PB2pressed 005E                                       _Delay10KTCYx 2132  
                                    ??_SendOffsets 00DA                             __end_of_ReadEchoLength 239C  
                          __size_of_WriteIntEEPROM 0032                                   _CommandAvailable 2344  
                                       _Open1USART 12F0                                   __end_of_OpenPWM4 20AE  
                                 __end_of_OpenPWM5 2088                                             ??_main 00E2  
                             __end_of_ConfigureADC 225C                                     ?_UltrasoundISR 002B  
                                    i2_WriteTimer0 22B6                               __end_of_ConfigurePWM 2360  
                                    i2_WriteTimer1 2292                                      __activetblptr 000003  
                                ReadVoltage@result 00D8                                __end_of_ReadMillis0 2392  
                              __end_of_ReadMillis1 2388                                __end_of_ReadMillis2 23B0  
                            ??_ConfigureInterrupts 00D0                                 __size_of_FlashLEDS 0028  
                                       _SetChanADC 2150                                _ConfigureUltrasound 1FC6  
                                      ?_OWReadByte 002B                            __end_of_BusyDistanceAcq 2318  
                              __end_of_SetDCMotorL 2344                                __end_of_SetDCMotorR 2336  
                              __end_of_ReadVoltage 17F2                              __end_of_DisableMotors 23EE  
                                           _ADCON0 000FC2                                             _ADCON1 000FC1  
                                           _ADCON2 000FC0                                  ReadEEPROM@address 00D0  
                                           ?_isrHP 002B                                             ?_isrLP 002B  
                                           _ADRESH 000FC4                                             _EEADRH 000FAA  
                                           _ADRESL 000FC3                                             _EEDATA 000FA8  
                                      ?_Delay1TCYx 002B                                      ??_SetUnipolar 00D0  
                                           _CCPR4L 000F74                                             _CCPR5L 000F71  
                                           _EECON2 000FA7                                   ___awdiv@dividend 00D0  
                                  i1_SetADCChannel 0D54                          ??_NormaliseSensorReadings 00D4  
                                       _SendStatus 1CCC                                             i1l1044 2326  
                                           i1l4002 13DC                                             i1l1435 13F6  
                                           i1l4006 13EC                                             i1l4046 222E  
                                        ??_OWReset 00D0                                    __CFG_BBSIZ$BB2K 000000  
                                           i1l4426 20CA                                         _OpenTimer0 203C  
                                           i1l4770 0D78                                             i1l4762 0D58  
                                       _OpenTimer1 1E52                                         _OpenTimer2 20D4  
                                           i1l4780 0DA0                                             i1l4772 0D80  
                                           i1l4764 0D60                                             i1l3990 13A8  
                                           i1l3982 138C                                             i1l4790 0DC8  
                                           i1l4782 0DA8                                             i1l4774 0D88  
                                           i1l4766 0D68                                             i1l3992 13B2  
                                           i1l4792 0DD0                                             i1l4784 0DB0  
                                           i1l4776 0D90                                             i1l4768 0D70  
                                           i1l3994 13BA                                             i1l3986 139A  
                                           i1l4786 0DB8                                             i1l4778 0D98  
                                           i1l4788 0DC0                                             i1l4796 0DD8  
                                           i2l6030 1EE4                                             i1l3998 13D0  
                                           i1l4994 0092                                   _CalibrateOffLine 19D8  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _PID_Kd 0092                                             _PID_Ki 0094  
                                           _PID_Kp 0096                           GenerateCalibration@index 00DE  
                                           _SPBRG1 000FAF                                    ?_ReadCharEEPROM 00D2  
                               __size_of_SetDCPWM4 0044                                 __size_of_SetDCPWM5 0044  
                                 _CalibrateOffsets 1264                                     ?_SetDCMotorPID 00D8  
                                           _TXREG1 000FAD                                          ??_ReadADC 002D  
                                           _TXSTA1 000FAC                               ?_ConfigureUltrasound 00D4  
                              _SetDirectionForward 23CE                                     ??_SetPIDValues 00D9  
                                      ?_OWWriteBit 002B                              __size_of_GetCharRxBuf 0046  
                                        ??_OpenADC 00D2                              __size_of_GetCharTxBuf 0038  
                       _sensor_readings_normalised 00A4                                             _BusyTx 22D8  
                                   __CFG_XINST$OFF 000000                                        ?_GetCommand 002B  
                                ?_SetReverseMotorL 002B                                          ??_StartTx 00D0  
                                           ___wmul 1D76                                _sensor_readings_raw 00AE  
                                        ??___awdiv 00D4                             ?_DisplaySensorStatuses 00D0  
                                        ??___awmod 00D4                            __end_of_CalibrateOnLine 18BE  
                                 OpenTimer0@config 00D0                                 ??_SetReverseMotorL 00D0  
                                 OpenTimer1@config 00D0                                    ?_ReadEchoLength 00D0  
                           SendCurrentPIDValues@Kd 00DA                             SendCurrentPIDValues@Ki 00DC  
                           SendCurrentPIDValues@Kp 00D8                                   OpenTimer2@config 00D0  
                                           clear_0 20FC                                             clear_1 2108  
                                 ___awdiv@quotient 00D6                                    ___awmod@divisor 00D2  
                                  ??_SetADCChannel 00D2                                     ?i2_WriteTimer0 0044  
                                   ?i2_WriteTimer1 0044                                    ___awmod@counter 00D4  
                            ReadCharEEPROM@address 00D2                                      ?_SendLineMode 00D8  
                         __size_of_WriteCharEEPROM 0012                                  __end_ofi1___awmod 13F8  
                             ?_SetDirectionForward 002B                                __end_of_SendOffsets 1264  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                  __end_of_OWReadBit 1F1A  
                            WriteIntEEPROM@address 00D3                                 main@find_line_flag 010A  
                                      ?_Read1USART 002B                                       _GetCharRxBuf 1A84  
                                      ?_ConvertADC 002B                                       _GetCharTxBuf 1DAE  
                          __end_of_ConfigureTimer0 2208                            __end_of_ConfigureTimer1 21DC  
                          __end_of_ConfigureTimer2 23C8                                      main@stop_flag 0120  
                                 _ConfigureBuggyIO 21AA                                        ?_ReadEEPROM 00D0  
                  __size_of_SendPIDSetPointOffLine 006C                                         __accesstop 0060  
                          __end_of__initialization 210E                              __size_of_EnableMotors 0004  
                                  ??_BusySensorAcq 00D0                                 _millisecond_COUNT0 000D  
                               _millisecond_COUNT1 000F                                 _millisecond_COUNT2 0011  
                               _millisecond_COUNT3 0013                                    ??_ReadIntEEPROM 00D4  
                                       _StopMotors 2114                              ??_ConfigureUltrasound 00DA  
                         ??_SendBattVoltageInitial 00DA                      ConfigureUltrasound@echo_to_cm 00D4  
                    ConfigureUltrasound@echo_to_in 00D7                                      ___rparam_used 000001  
                              __end_of_SetUnipolar 23CE                                  __end_of_FlashLEDS 1FC6  
                     __end_of_SendDefaultPIDValues 171E                                        ?_FlushRxBuf 002B  
                                      ?_FlushTxBuf 002B                                __size_of_OWReadByte 0038  
                                   __pcstackCOMRAM 002B                                        ?_ReadTimer1 0044  
                                      _ReadMillis0 2388                                        _ReadMillis1 237E  
                                      _ReadMillis2 23A6                                      __end_of_isrHP 1478  
                                    __end_of_isrLP 00EC                                __size_of_Delay1TCYx 0010  
                                  ??_UltrasoundISR 0046                                        _SetDCMotorL 2336  
                                      _SetDCMotorR 2328                                     ??_SendLineMode 00DA  
                                      ?_Open1USART 00D0                            _ResetAccumulatedCurrent 1F1A  
                                __end_of_SetDCPWM4 1B0E                                  __end_of_SetDCPWM5 1B52  
                                      _ReadVoltage 1788                              ??_SetDirectionForward 00D0  
                                    ?_ResetMillis0 002B                                      ?_ResetMillis1 002B  
                                    ?_ResetMillis2 002B                                      ?_ResetMillis3 002B  
                              i1SetChanADC@channel 002C                                        ?_SetChanADC 002B  
                          __end_ofi1_SetADCChannel 0E3E  CalculateSensorStatuses@sensor_readings_normalised 00D0  
                                  _sensor_acq_done 0022                        __end_of_MillisecondTimerISR 21AA  
                             ReadIntEEPROM@address 00D2                       CalculateSensorStatuses@index 00DB  
                                 ?_BusyDistanceAcq 002B                                __size_of_OWWriteBit 003A  
                                     _EnableMotors 23E6                                       ??_PB1pressed 00D2  
                                     ??_PB2pressed 00D2                                __size_of_GetCommand 0008  
                                          ??_isrHP 00C2                                            ??_isrLP 0033  
                      __end_of_GenerateCalibration 1072                                 _CalculateSensorSum 0A78  
                                      ?_SendStatus 002B                                         __pbssBANK0 0060  
                                  ??_SetDCMotorPID 00DA                                        ?_OpenTimer0 002B  
                                      ?_OpenTimer1 002B                                        ?_OpenTimer2 002B  
                                    ??_Write1USART 002B                       __end_of_SendCurrentPIDValues 1788  
                          main@battery_current_acc 010B                                  ?_EnableSensorLEDS 002B  
                          main@battery_current_ptr 0104                                      ??_WriteEEPROM 00D3  
                                        ?_OpenPWM4 002B                                          ?_OpenPWM5 002B  
                              ?_CalculateSensorSum 00D6                                            ?_BusyTx 002B  
                   __size_of_SendPIDSetPointOnLine 006C                                 ??_EnableSensorLEDS 00D0  
                    __end_of_SendPIDSetPointOnLine 15DE                              __size_of_ConfigureADC 0014  
                                          ?___wmul 00D0                                        _RxCharacter 0015  
                            __size_of_ConfigurePWM 000E                                   ?_CalibrateOnLine 002B  
                                  ??i2_WriteTimer0 0046                                    ??i2_WriteTimer1 0046  
                               __end_of_PB1pressed 19D8                                     _WriteIntEEPROM 1E86  
                                main@PID_error_ptr 0102                                            _CCP4CON 000F73  
                                          _CCP5CON 000F70                                   WriteTimer0@timer 00D2  
                               __end_of_PB2pressed 191C                                        _SendOffsets 11C2  
                                 WriteTimer1@timer 00D2                                      ??_WriteTimer0 00D2  
                                    ??_WriteTimer1 00D2                             _SendPIDSetPointOffLine 15DE  
                              __size_of_Read1USART 0026                                __size_of_ConvertADC 0004  
                                  _sensor_statuses 0025                                      ?_PutCharRxBuf 002B  
                                 SendOffsets@index 00DC                                      ?_PutCharTxBuf 002B  
                                   ??_ResetMillis0 00D0                                     ??_ResetMillis1 00D0  
                                   ??_ResetMillis2 00D0                                     ??_ResetMillis3 00D0  
                              __size_of_ReadEEPROM 002C                               ??_CalculateSensorSum 00D8  
                                 Open1USART@config 00D2                             SetPIDValues@char_index 00DC  
                             __end_of_SetPIDValues 0A78                                __size_of_FlushRxBuf 0036  
                                          _SPBRGH1 000F7F                                __size_of_FlushTxBuf 0036  
                                ??_WriteCharEEPROM 00D6                                        _TxCharacter 0019  
                                 ??_WirelessTx_ISR 0033                                        _SetUnipolar 23C8  
                              __size_of_ReadTimer1 0012                                            _OWReset 1D06  
                         __end_of_CommandAvailable 2352                             SetDCMotorPID@PIDoutput 00D8  
                                 ?_ConfigureTimer0 002B                                   ?_ConfigureTimer1 002B  
                                 ?_ConfigureTimer2 002B                                         _convert_cm 00E6  
                                       _convert_in 00E9                                        ?_StopMotors 002B  
                              __size_of_Open1USART 0086                                       ?_OWWriteByte 002B  
                                     _ConfigureADC 2248                                            _ReadADC 2318  
                                     _ConfigurePWM 2352                                i2WriteTimer0@timer0 0044  
                                       ??_OpenPWM4 00D0                                         ??_OpenPWM5 00D0  
                  __size_of_SendBattVoltageInitial 0068                                i2WriteTimer1@timer1 0044  
                                          _OpenADC 14F6                                            __Hparam 0000  
                              __size_of_SetChanADC 001E                                    __size_of_BusyTx 0010  
                                          __Lparam 0000                                __end_of_Write1USART 2234  
                                     ?_GetDistance 002B                             __end_of_WriteIntEEPROM 1EB8  
                                          _StartTx 23B0                                            ___awdiv 0E3E  
                                          ___awmod 0F0E                                    __size_of___wmul 0038  
                        ??_ResetAccumulatedCurrent 00D3                                __end_of_WriteEEPROM 1C16  
                                    ?i1_ConvertADC 002B                                  ReadIntEEPROM@data 00D7  
                      __end_of_SendStoredPIDValues 16B4                                     ??_PutCharRxBuf 00D6  
                                  __CFG_STVREN$OFF 000000                                     ??_PutCharTxBuf 00D6  
                         __end_of_CalibrateOffLine 1A34                                            __pcinit 20F6  
                               WriteEEPROM@address 00D0                                            __ramtop 1000  
                              __size_of_SendStatus 003A                                __size_of_OpenTimer0 0026  
                              __size_of_OpenTimer1 0034                                __size_of_OpenTimer2 0022  
                                          __ptext0 00F0                                            __ptext1 0E3E  
                                          __ptext2 2114                                            __ptext3 23C8  
                                          __ptext4 23DA                                            __ptext5 23DE  
                                          __ptext6 23CE                                            __ptext7 1072  
                                          __ptext8 2328                                            __ptext9 1ACA  
                                     _get_Rx_index 001D                           __end_of_CalibrateOffsets 12F0  
                                        _T0CONbits 000FD5                           ?_CalculateSensorStatuses 00D0  
                                        _T1CONbits 000FCD                                       _get_Tx_index 001E  
       NormaliseSensorReadings@sensor_readings_raw 00D0                                       ??_OWReadByte 00D1  
                                        _T2CONbits 000FCA                                   ?i1_SetADCChannel 002B  
                                        _T3CONbits 000FB1                                   ___awmod@dividend 00D0  
                                        _T4CONbits 000F76                               _SendDefaultPIDValues 16B4  
                              __end_of_WriteTimer0 2292                                __end_of_WriteTimer1 2280  
                                 ??_ReadCharEEPROM 00D4                                       ??_Delay1TCYx 00D0  
                                   OpenADC@config2 00D0                                     __pintcode_body 13F8  
                    CalculateDiscreteSensorSum@sum 00D2                                  _GetSensorReadings 21DC  
                             end_of_initialization 210E                                     main@sensor_sum 012A  
                  SendPIDSetPointOffLine@set_point 00D8                                    FlushRxBuf@index 00D0  
                               ?_GetSensorReadings 002B                              __end_of_LoadPIDValues 0C66  
                             __end_of_SendLineMode 1C92                                            int_func 13F8  
                              main@battery_current 010F                                      ?i1_SetChanADC 002B  
                                     ??_OWWriteBit 00D0       CalculateSensorSum@sensor_readings_normalised 00D6  
                          ??_DisplaySensorStatuses 00D2                                   ??_ReadEchoLength 00D2  
                                      _Rx_complete 0017                                       ??_GetCommand 00D1  
                              ??_GetSensorReadings 00D3                                 __end_of_OWReadByte 1D76  
                                  ?_WriteIntEEPROM 00D3                                            postdec1 000FE5  
                                          postdec2 000FDD                                main@battery_voltage 011A  
                                          postinc0 000FEE                                            postinc1 000FE6  
                                          postinc2 000FDE                                     ??i1_ConvertADC 002B  
                                        _PID_error 00B8                        __end_of_ConfigureInterrupts 2016  
                               __end_of_Delay1TCYx 2308                                    FlushTxBuf@index 00D0  
                         __end_of_ConfigureBuggyIO 21C4                                     GetCharRxBuf@ch 00D7  
                                        _PORTBbits 000F81                                          _PORTHbits 000F87  
                         __size_of_LoadCalibration 00A8                       ??_CalculateDiscreteSensorSum 00D2  
                                   GetCharTxBuf@ch 0032                             _SendBattVoltageInitial 17F2  
                                _SetForwardsMotorR 23DE                               _SendCurrentPIDValues 171E  
                              __size_of_StopMotors 001E                              ?_SendDefaultPIDValues 00D8  
                                      _Tx_complete 001A                                          _TRISCbits 000F94  
                               ?_SetForwardsMotorR 002B                          __size_of_SetReverseMotorL 0004  
                                        _TRISGbits 000F98                                          _TRISHbits 000F99  
                                       main@D_temp 011C                                 __end_of_OWWriteBit 1CCC  
                        __end_of_GetSensorReadings 21F2                                          i1___awmod 1376  
                                       main@I_temp 011E                             main@wall_detected_flag 0119  
                                     ??_Read1USART 00D0                                 __end_of_GetCommand 23C0  
                                     ??_ConvertADC 00D0                                          _OWReadBit 1EEA  
                              ??_SetForwardsMotorR 00D0                                       ??_ReadEEPROM 00D2  
                                      _Write1USART 221E                                     ??i1_SetChanADC 002B  
                             __end_of_ResetMillis0 237E                               __end_of_ResetMillis1 2374  
                             __end_of_ResetMillis2 23A6                               __end_of_ResetMillis3 236A  
                           i1SetADCChannel@channel 002D                                        _WriteEEPROM 1BD6  
                                     ??_FlushRxBuf 00D0                                       ??_FlushTxBuf 00D0  
            NormaliseSensorReadings@sensor_offsets 00D2                              SetDCMotorL@duty_cycle 00D6  
                                   __end_of_BusyTx 22E8                                  _ConfigureWireless 216E  
                                     ??_ReadTimer1 0046                                          _FlashLEDS 1F9E  
                                     ?_ReadMillis0 00D0                                       ?_ReadMillis1 00D0  
                                     ?_ReadMillis2 00D0                               _second_rollover_flag 0021  
                           __size_of_DisableMotors 0004                    __end_of_CalculateSensorStatuses 0936  
                               ?_ConfigureWireless 002B                                     __end_of___wmul 1DAE  
                                     ?_SetDCMotorL 00D6                                       ?_SetDCMotorR 00D6  
                                     ??_Open1USART 00D2                              __size_of_SetPIDValues 0142  
                                      _WriteTimer0 2280                                        _WriteTimer1 226E  
                        __end_of_SetForwardsMotorR 23E2                                 __end_of_Read1USART 203C  
                               __end_of_ConvertADC 23E6                                       ?_ReadVoltage 00D3  
                            ?_SendCurrentPIDValues 00D8                              __end_of_SetADCChannel 0D54  
                                     ??_SetChanADC 00D0                                 __end_of_ReadEEPROM 1F9E  
                          main@battery_voltage_ptr 0117                                ??_ConfigureWireless 00D3  
                              start_initialization 20F6                           ?_NormaliseSensorReadings 00D0  
                         main@sensor_threshold_ptr 0121                                          _SetDCPWM4 1ACA  
                                        _SetDCPWM5 1B0E                                         ?i1___awmod 002B  
                               __end_of_FlushRxBuf 1E52                                 __end_of_FlushTxBuf 1E1C  
                                  SetDCPWM4@DCycle 00D4                        __end_of_ConfigureUltrasound 1FEE  
                                  SetDCPWM5@DCycle 00D4                                       ??_SendStatus 00D8  
                                     ??_OpenTimer0 00D0                                       ??_OpenTimer1 00D0  
                                     ??_OpenTimer2 00D0                                         ?_OWReadBit 002B  
                                    _echo_acq_done 001C                                 __end_of_ReadTimer1 22B6  
                                 OWReadByte@result 00D1                               __end_of_PutCharRxBuf 1B94  
                             __end_of_PutCharTxBuf 1BD6                                        _SystemClock 0001  
                                 _sensor_acq_index 0023                                 __end_of_Open1USART 1376  
                            __end_of_BusySensorAcq 22F8                               SetADCChannel@channel 00D2  
                            __end_of_ReadIntEEPROM 197A                          __end_of_ConfigureWireless 218C  
                                         ??_BusyTx 00D0                               __size_of_OWWriteByte 002C  
                                     _SetPIDValues 0936                                 __end_of_SetChanADC 216E  
                                __size_of_OpenPWM4 0026                                  __size_of_OpenPWM5 0026  
                          ?_SendPIDSetPointOffLine 00D8                                           ??___wmul 00D4  
                                       ?_FlashLEDS 002B                        __end_of_SetDirectionForward 23D4  
                               i1___awmod@dividend 002B                                   __CFG_LPT1OSC$OFF 000000  
                             __size_of_GetDistance 0014                                       ?_SendOffsets 00D8  
                                        _Rx_buffer 0060                                    _WriteCharEEPROM 225C  
                        __size_of_EnableSensorLEDS 0006                                 __end_of_SendStatus 1D06  
                            __end_of_UltrasoundISR 1EEA                                 __end_of_OpenTimer0 2062  
                               __end_of_OpenTimer1 1E86                                 __end_of_OpenTimer2 20F6  
                                     OWWriteByte@i 00D2                             ??_SendDefaultPIDValues 00DE  
                                        _Tx_buffer 0079                                        __pbssCOMRAM 0001  
                                    __pcstackBANK0 00C0                                      __pcstackBANK1 0100  
                                       ?_SetDCPWM4 00D0                                         ?_SetDCPWM5 00D0  
                                     _off_line_sum 00BC                         __size_of_GetSensorReadings 0016  
                            __size_of_SendLineMode 003C                                  ??_LoadCalibration 00DF  
                                    _PID_set_point 00BA                                      _DisableMotors 23EA  
                                     ?_SetUnipolar 002B                               __end_ofi1_ConvertADC 23F2  
                     __size_of_MillisecondTimerISR 001E                                           ?_OWReset 002B  
        CalculateDiscreteSensorSum@sensor_statuses 00D0                                  ?_CommandAvailable 002B  
                         __size_of_BusyDistanceAcq 0010                              __end_of_SetDCMotorPID 111A  
                                     ??_StopMotors 00D8                                 WriteIntEEPROM@data 00D5  
                                         ?_ReadADC 002B                                          __pnvBANK0 00E6  
                     __size_of_GenerateCalibration 00B0                                 ??_CommandAvailable 00D0  
                                OpenADC@portconfig 00D1                                           ?_OpenADC 00D0  
                   __end_of_SendPIDSetPointOffLine 164A                                     _sensor_offsets 009A  
                                        _echo_time 000B                                  __CFG_CCP2MX$PORTC 000000  
                                        __pintcode 0008                                    main@command_msg 0123  
                                         ?_StartTx 002B                                           ?___awdiv 00D0  
                                        __ptext100 0D54                                          __ptext101 2208  
                                        __ptext110 2292                                          __ptext102 23EE  
                                        __ptext111 22A4                                          __ptext103 20AE  
                                        __ptext112 218C                                          __ptext104 221E  
                                        __ptext113 22B6                                          __ptext105 1DAE  
                                        __ptext106 1376                                          __ptext107 2318  
                                        __ptext109 1EB8                                           ?___awmod 00D0  
                                      OWReadByte@i 00D2                              _SendPIDSetPointOnLine 1572  
                                    ?_Delay10KTCYx 002B                        main@battery_current_acc_ptr 0106  
                                      __pintcodelo 0018                 __end_of_CalculateDiscreteSensorSum 1C56  
                       _CalculateDiscreteSensorSum 1C16                                    Open1USART@spbrg 00D0  
                       __size_of_SetForwardsMotorR 0004                             ??_SendCurrentPIDValues 00DE  
                            __end_ofi2_WriteTimer0 22C8                              __end_ofi2_WriteTimer1 22A4  
                  __end_of_NormaliseSensorReadings 14F6                                  ?_CalibrateOffLine 002B  
                                 _sensor_threshold 00BE                                       _SendLineMode 1C56  
                                ?_CalibrateOffsets 002B                              SendLineMode@line_mode 00D8  
                                WriteTimer0@timer0 00D0                               __end_ofi1_SetChanADC 221E  
                               ??_CalibrateOffLine 00DC                        __size_of_CalculateSensorSum 00F8  
                                WriteTimer1@timer1 00D0                                 i2WriteTimer0@timer 00C0  
                               __end_of_StopMotors 2132                           __size_of_CalibrateOnLine 0064  
                               i2WriteTimer1@timer 00C0                                 ??_CalibrateOffsets 00D9  
                                 _SetReverseMotorL 23DA                                        ??i1___awmod 002F  
                                   ?_DisableMotors 002B                                          _line_mode 002A  
                                   __size_of_isrHP 1470                                     __size_of_isrLP 00D4  
                                  Write1USART@data 002B                              __size_of_ResetMillis0 000A  
                            __size_of_ResetMillis1 000A                              __size_of_ResetMillis2 000A  
                            __size_of_ResetMillis3 000A                                    OWReadBit@result 00D0  
                                      ??_OWReadBit 00D0                   __size_of_CalculateSensorStatuses 0144  
                                   ___wmul@product 00D4                                      OpenADC@config 00D4  
                                         _LATDbits 000F8C                                           _LATEbits 000F8D  
                                         _LATHbits 000F90                                   ??_WriteIntEEPROM 00D7  
                                         _IPR1bits 000F9F                                           _PIE1bits 000F9D  
                       __size_of_ConfigureWireless 001E                         DisplaySensorStatuses@index 00D4  
                      main@send_battery_stats_flag 0109                             SendDefaultPIDValues@Kd 00DA  
                           SendDefaultPIDValues@Ki 00DC                             SendDefaultPIDValues@Kp 00D8  
                                         _PIR1bits 000F9E                                           _DCmotorL 0007  
                                         _DCmotorR 0009                              __CFG_DATABW$DATA16BIT 000000  
                          __end_of_WriteCharEEPROM 226E                     __size_of_DisplaySensorStatuses 0050  
                                         _RCONbits 000FD0                           __size_of_ConfigureTimer0 0016  
                         __size_of_ConfigureTimer1 0018                           __size_of_ConfigureTimer2 0008  
                    __end_of_DisplaySensorStatuses 1A84                                   __CFG_WDTPS$32768 000000  
                                   ??_Delay10KTCYx 00D0                              SetDCMotorR@duty_cycle 00D6  
                                      ??_FlashLEDS 00D2                            ?_SendBattVoltageInitial 00D8  
                             __size_of_ReadMillis0 000A                               __size_of_ReadMillis1 000A  
                             __size_of_ReadMillis2 000A                                  __CFG_ECCPMX$PORTH 000000  
                                       _ADCON0bits 000FC2                                  ?_ConfigureBuggyIO 002B  
                                ___wmul@multiplier 00D0                               __size_of_SetDCMotorL 000E  
                             __size_of_SetDCMotorR 000E                                       _ResetMillis0 2374  
                                     _ResetMillis1 236A                                       _ResetMillis2 239C  
                                     _ResetMillis3 2360                                 ??_ConfigureBuggyIO 00D0  
                             __size_of_ReadVoltage 006A                       __size_of_SendStoredPIDValues 006A  
                                      ??_SetDCPWM4 00D2                                        ??_SetDCPWM5 00D2  
                                 Delay10KTCYx@unit 00D1                    CalculateDiscreteSensorSum@index 00D3  
                            __size_of_PutCharRxBuf 0042                              __size_of_PutCharTxBuf 0042  
                                      _INTCON2bits 000FF1                                      ?_GetCharRxBuf 002B  
                                      _INTCON3bits 000FF0                                      ?_GetCharTxBuf 002B  
                         __size_ofi1_SetADCChannel 00EA                                   __size_of_OWReset 0038  
                                     ?_Write1USART 002B                                         _EECON1bits 000FA6  
                                         _OpenPWM4 2088                                           _OpenPWM5 2062  
                                     ?_WriteEEPROM 00D0                                   __size_of_ReadADC 0010  
                                         __Hrparam 0000                           ?_ResetAccumulatedCurrent 002B  
                          __size_of_WirelessTx_ISR 0026                                   __size_of_OpenADC 007C  
                                         __Lrparam 0000                                  ??_BusyDistanceAcq 00D0  
                           ?_SendPIDSetPointOnLine 00D8                     __end_of_SendBattVoltageInitial 185A  
                                i1___awmod@divisor 002D                                        OWWriteBit@b 00D0  
                                i1___awmod@counter 002F                                   __size_of_StartTx 0008  
                                 __size_of___awdiv 00D0                                   __size_of___awmod 00B4  
                                     ?_WriteTimer0 00D0                                       ?_WriteTimer1 00D0  
                                 _EnableSensorLEDS 23D4                                       _PutCharRxBuf 1B52  
                                     _PutCharTxBuf 1B94                               __size_of_SendOffsets 00A2  
                           __size_of_LoadPIDValues 00F6                                _system_clock_enable 0024  
                     __size_of_ConfigureInterrupts 0028                              __size_ofi1_ConvertADC 0004  
                                  ??_DisableMotors 00D0                                      ?_EnableMotors 002B  
                               SetDCPWM4@dutycycle 00D0                                     OpenPWM4@period 00D0  
                                         __ptext10 2336                                           __ptext11 1B0E  
                                         __ptext20 2360                                           __ptext12 164A  
                                         __ptext21 236A                                           __ptext13 1572  
                                         __ptext30 237E                                           __ptext22 2374  
                                         __ptext14 15DE                                           __ptext31 2388  
                                         __ptext23 1F1A                                           __ptext15 11C2  
                                         __ptext40 22C8                                           __ptext32 2392  
                                         __ptext24 1788                                           __ptext16 1C56  
                                         __ptext41 1F72                                           __ptext33 0B70  
                                         __ptext25 1F46                                           __ptext17 16B4  
                                         __ptext50 19D8                                           __ptext42 0FC2  
                                         __ptext34 0936                                           __ptext26 1C92  
                                         __ptext18 171E                                           __ptext51 1CCC  
                                         __ptext43 1E86                                           __ptext35 1B52  
                                         __ptext27 1D06                                           __ptext19 17F2  
                                         __ptext60 2016                                           __ptext52 23B0  
                                         __ptext44 225C                                           __ptext36 1A84  
                                         __ptext28 1D3E                                           __ptext61 2344  
                                         __ptext53 1B94                                           __ptext45 1BD6  
                                         __ptext37 18BE                                           __ptext29 1EEA  
                                         __ptext70 2234                                           __ptext62 1478  
                                         __ptext54 0F0E                                           __ptext46 1F9E  
                                         __ptext38 111A                                           __ptext71 22F8  
                                         __ptext63 21DC                                           __ptext55 22D8  
                                         __ptext47 2132                                           __ptext39 191C  
                                         __ptext80 1FC6                                           __ptext72 23D4  
                                         __ptext64 0C66                                           __ptext56 197A  
                                         __ptext48 185A                                           __ptext81 23C0  
                                         __ptext73 23E6                                           __ptext65 2150  
                                         __ptext57 239C                                           __ptext49 1264  
                                         __ptext90 2062                                           __ptext82 20D4  
                                         __ptext74 1A34                                           __ptext66 23E2  
                                         __ptext58 23A6                                           __ptext91 2088  
                                         __ptext83 21C4                                           __ptext75 23EA  
                                         __ptext67 0A78                                           __ptext59 23B8  
                                         __ptext92 1FEE                                           __ptext84 226E  
                                         __ptext76 216E                                           __ptext68 1D76  
                                         __ptext93 21AA                                           __ptext85 1E52  
                                         __ptext77 12F0                                           __ptext69 22E8  
                                         __ptext94 2248                                           __ptext86 21F2  
                                         __ptext78 1DE6                                           __ptext95 14F6  
                                         __ptext87 2280                                           __ptext79 1E1C  
                                         __ptext96 07F2                                           __ptext88 203C  
                                         __ptext97 1C16                                           __ptext89 2352  
                                   OpenPWM5@period 00D0                                           __ptext98 2308  
                                   ??_GetCharRxBuf 00D6                                     ??_GetCharTxBuf 0031  
                                ??_CalibrateOnLine 00DC                                 SetDCPWM5@dutycycle 00D0  
                             __size_of_SetUnipolar 0006                                      __size_of_main 0702  
                                   Delay1TCYx@unit 00D0                   __size_of_NormaliseSensorReadings 007E  
                          __size_of_ReadCharEEPROM 0010                                   ?_WriteCharEEPROM 00D3  
                            __size_ofi1_SetChanADC 0016                                       i1_ConvertADC 23EE  
                              _MillisecondTimerISR 218C                                    _LoadCalibration 111A  
                                    _USART1_Status 001B                                  ??_ConfigureTimer0 00D4  
                                ??_ConfigureTimer1 00D4                                  ??_ConfigureTimer2 00D1  
                          __size_of_ReadEchoLength 000A                              __CFG_ADDRBW$ADDR20BIT 000000  
                     NormaliseSensorReadings@index 00D8                                _GenerateCalibration 0FC2  
                                       _INTCONbits 000FF2                                     ??_EnableMotors 00D0  
                                _Rx_chars_received 0016                                         _PB1pressed 197A  
                                       _PB2pressed 18BE                                      OWReset@result 00D0  
                             __end_of_Delay10KTCYx 2150                               ?_MillisecondTimerISR 002B  
                                         intlevel1 0000                                           intlevel2 0000  
                          _CalculateSensorStatuses 07F2                    __end_of_ResetAccumulatedCurrent 1F46  
                                    ??_OWWriteByte 00D1                                      ?_ConfigureADC 002B  
                                    ?_ConfigurePWM 002B                                      _LoadPIDValues 0B70  
                             ?_GenerateCalibration 002B                                  SetChanADC@channel 00D1  
                                       _RCSTA1bits 000FAB                       __size_of_ConfigureUltrasound 0028  
                                  WriteEEPROM@data 00D2                                       i1_SetChanADC 2208  
                                    _Rx_msg_length 0018                             __size_of_SetADCChannel 00EE  
                            SendStatus@status_code 00D8                                  ??i1_SetADCChannel 002D  
                         __end_of_SetReverseMotorL 23DE                                      ??_GetDistance 00D1  
                   SendPIDSetPointOnLine@set_point 00D8                              main@PID_set_point_ptr 0113  
                        __size_of_CommandAvailable 000E                      SendBattVoltageInitial@reading 00D8  
                      ?_CalculateDiscreteSensorSum 00D0                                         _PID_output 0098  
                     __size_of_SetDirectionForward 0006                           SendOffsets@offsets_array 00D8  
                           __size_of_BusySensorAcq 0010                      __size_of_SendDefaultPIDValues 006A  
                           __size_of_ReadIntEEPROM 005E                              ??_MillisecondTimerISR 0046  
                        __size_of_CalibrateOffLine 005C                                     ??_ConfigureADC 00D5  
                                   ??_ConfigurePWM 00D1                                     ?_LoadPIDValues 002B  
                                  OWWriteByte@byte 00D1                          __size_of_CalibrateOffsets 008C  
                            ??_GenerateCalibration 00DC                             __size_of_UltrasoundISR 0032  
                             __size_of_Write1USART 0016                                       _put_Rx_index 001F  
                                   _WirelessTx_ISR 20AE                                _SendStoredPIDValues 164A  
                          __end_of_LoadCalibration 11C2                                       _put_Tx_index 0020  
                             main@off_line_sum_ptr 0115  
