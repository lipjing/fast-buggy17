

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 12 21:49:36 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1
   113                           	psect	text99,global,reloc=2,class=CODE,delta=1
   114                           	psect	text100,global,reloc=2,class=CODE,delta=1
   115                           	psect	text101,global,reloc=2,class=CODE,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,delta=1
   118                           	psect	text104,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	text108,global,reloc=2,class=CODE,delta=1
   124                           	psect	text109,global,reloc=2,class=CODE,delta=1
   125                           	psect	text110,global,reloc=2,class=CODE,delta=1
   126                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   127                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   128  0000                     
   129                           	psect	smallconst
   130  001000                     __psmallconst:
   131                           	opt stack 0
   132  001000  00                 	db	0
   133  001001                     exp@coeff:
   134                           	opt stack 0
   135  001001  00                 	db	0
   136  001002  80                 	db	128
   137  001003  3F                 	db	63
   138  001004  72                 	db	114
   139  001005  31                 	db	49
   140  001006  3F                 	db	63
   141  001007  FE                 	db	254
   142  001008  75                 	db	117
   143  001009  3E                 	db	62
   144  00100A  58                 	db	88
   145  00100B  63                 	db	99
   146  00100C  3D                 	db	61
   147  00100D  95                 	db	149
   148  00100E  1D                 	db	29
   149  00100F  3C                 	db	60
   150  001010  C5                 	db	197
   151  001011  AE                 	db	174
   152  001012  3A                 	db	58
   153  001013  79                 	db	121
   154  001014  21                 	db	33
   155  001015  39                 	db	57
   156  001016  94                 	db	148
   157  001017  80                 	db	128
   158  001018  37                 	db	55
   159  001019  93                 	db	147
   160  00101A  A7                 	db	167
   161  00101B  35                 	db	53
   162  00101C  56                 	db	86
   163  00101D  15                 	db	21
   164  00101E  34                 	db	52
   165  00101F                     __end_ofexp@coeff:
   166                           	opt stack 0
   167  00101F                     log@coeff:
   168                           	opt stack 0
   169  00101F  00                 	db	0
   170  001020  00                 	db	0
   171  001021  00                 	db	0
   172  001022  00                 	db	0
   173  001023  80                 	db	128
   174  001024  3F                 	db	63
   175  001025  F0                 	db	240
   176  001026  FF                 	db	255
   177  001027  BE                 	db	190
   178  001028  E2                 	db	226
   179  001029  A9                 	db	169
   180  00102A  3E                 	db	62
   181  00102B  83                 	db	131
   182  00102C  76                 	db	118
   183  00102D  BE                 	db	190
   184  00102E  AE                 	db	174
   185  00102F  2B                 	db	43
   186  001030  3E                 	db	62
   187  001031  3C                 	db	60
   188  001032  C3                 	db	195
   189  001033  BD                 	db	189
   190  001034  D2                 	db	210
   191  001035  13                 	db	19
   192  001036  3D                 	db	61
   193  001037  78                 	db	120
   194  001038  D3                 	db	211
   195  001039  BB                 	db	187
   196  00103A                     __end_oflog@coeff:
   197                           	opt stack 0
   198  00103A  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           	psect	nvBANK0
   201  0000EA                     __pnvBANK0:
   202                           	opt stack 0
   203  0000EA                     _convert_cm:
   204                           	opt stack 0
   205  0000EA                     	ds	3
   206  0000ED                     _convert_in:
   207                           	opt stack 0
   208  0000ED                     	ds	3
   209  0000F0                     _sensor_threshold_ptr:
   210                           	opt stack 0
   211  0000F0                     	ds	2
   212  0000                     _ADCON0	set	4034
   213  0000                     _ADCON0bits	set	4034
   214  0000                     _ADCON1	set	4033
   215  0000                     _ADCON2	set	4032
   216  0000                     _ADRESH	set	4036
   217  0000                     _ADRESL	set	4035
   218  0000                     _CCP4CON	set	3955
   219  0000                     _CCP5CON	set	3952
   220  0000                     _CCPR4L	set	3956
   221  0000                     _CCPR5L	set	3953
   222  0000                     _EEADR	set	4009
   223  0000                     _EEADRH	set	4010
   224  0000                     _EECON1bits	set	4006
   225  0000                     _EECON2	set	4007
   226  0000                     _EEDATA	set	4008
   227  0000                     _INTCON2bits	set	4081
   228  0000                     _INTCON3bits	set	4080
   229  0000                     _INTCONbits	set	4082
   230  0000                     _IPR1bits	set	3999
   231  0000                     _LATDbits	set	3980
   232  0000                     _LATE	set	3981
   233  0000                     _LATEbits	set	3981
   234  0000                     _LATJ	set	3985
   235  0000                     _PIE1bits	set	3997
   236  0000                     _PIR1bits	set	3998
   237  0000                     _PORTBbits	set	3969
   238  0000                     _PR2	set	4043
   239  0000                     _PR4	set	3959
   240  0000                     _RCONbits	set	4048
   241  0000                     _RCSTA1	set	4011
   242  0000                     _RCSTA1bits	set	4011
   243  0000                     _SPBRG1	set	4015
   244  0000                     _SPBRGH1	set	3967
   245  0000                     _T0CON	set	4053
   246  0000                     _T0CONbits	set	4053
   247  0000                     _T1CON	set	4045
   248  0000                     _T1CONbits	set	4045
   249  0000                     _T2CON	set	4042
   250  0000                     _T2CONbits	set	4042
   251  0000                     _T3CONbits	set	4017
   252  0000                     _T4CONbits	set	3958
   253  0000                     _TMR0H	set	4055
   254  0000                     _TMR0L	set	4054
   255  0000                     _TMR1H	set	4047
   256  0000                     _TMR1L	set	4046
   257  0000                     _TMR2	set	4044
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISB	set	3987
   260  0000                     _TRISC	set	3988
   261  0000                     _TRISCbits	set	3988
   262  0000                     _TRISD	set	3989
   263  0000                     _TRISE	set	3990
   264  0000                     _TRISG	set	3992
   265  0000                     _TRISGbits	set	3992
   266  0000                     _TRISJ	set	3994
   267  0000                     _TXREG1	set	4013
   268  0000                     _TXSTA1	set	4012
   269  0000                     _TXSTA1bits	set	4012
   270                           
   271                           ; #config settings
   272  0000                     
   273                           	psect	cinit
   274  003524                     __pcinit:
   275                           	opt stack 0
   276  003524                     start_initialization:
   277                           	opt stack 0
   278  003524                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Clear objects allocated to BANK1 (20 bytes)
   282  003524  EE01  F01E         	lfsr	0,__pbssBANK1
   283  003528  0E14               	movlw	20
   284  00352A                     clear_0:
   285  00352A  6AEE               	clrf	postinc0,c
   286  00352C  06E8               	decf	wreg,f,c
   287  00352E  E1FD               	bnz	clear_0
   288                           
   289                           ; Clear objects allocated to BANK0 (56 bytes)
   290  003530  EE00  F0B2         	lfsr	0,__pbssBANK0
   291  003534  0E38               	movlw	56
   292  003536                     clear_1:
   293  003536  6AEE               	clrf	postinc0,c
   294  003538  06E8               	decf	wreg,f,c
   295  00353A  E1FD               	bnz	clear_1
   296                           
   297                           ; Clear objects allocated to COMRAM (36 bytes)
   298  00353C  EE00  F001         	lfsr	0,__pbssCOMRAM
   299  003540  0E24               	movlw	36
   300  003542                     clear_2:
   301  003542  6AEE               	clrf	postinc0,c
   302  003544  06E8               	decf	wreg,f,c
   303  003546  E1FD               	bnz	clear_2
   304  003548                     end_of_initialization:
   305                           	opt stack 0
   306  003548                     __end_of__initialization:
   307                           	opt stack 0
   308  003548  0100               	movlb	0
   309  00354A  EF1E  F008         	goto	_main	;jump to C main() function
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           
   313                           	psect	bssCOMRAM
   314  000001                     __pbssCOMRAM:
   315                           	opt stack 0
   316  000001                     _SystemClock:
   317                           	opt stack 0
   318  000001                     	ds	6
   319  000007                     _DCmotorL:
   320                           	opt stack 0
   321  000007                     	ds	2
   322  000009                     _DCmotorR:
   323                           	opt stack 0
   324  000009                     	ds	2
   325  00000B                     _echo_time:
   326                           	opt stack 0
   327  00000B                     	ds	2
   328  00000D                     _millisecond_COUNT0:
   329                           	opt stack 0
   330  00000D                     	ds	2
   331  00000F                     _millisecond_COUNT1:
   332                           	opt stack 0
   333  00000F                     	ds	2
   334  000011                     _millisecond_COUNT2:
   335                           	opt stack 0
   336  000011                     	ds	2
   337  000013                     _Tx_complete:
   338                           	opt stack 0
   339  000013                     	ds	1
   340  000014                     _USART1_Status:
   341                           	opt stack 0
   342  000014                     	ds	1
   343  000015                     _character:
   344                           	opt stack 0
   345  000015                     	ds	1
   346  000016                     _echo_acq_done:
   347                           	opt stack 0
   348  000016                     	ds	1
   349  000017                     _get_Tx_index:
   350                           	opt stack 0
   351  000017                     	ds	1
   352  000018                     _put_Tx_index:
   353                           	opt stack 0
   354  000018                     	ds	1
   355  000019                     _second_rollover_flag:
   356                           	opt stack 0
   357  000019                     	ds	1
   358  00001A                     _sensor_acq_done:
   359                           	opt stack 0
   360  00001A                     	ds	1
   361  00001B                     _sensor_acq_index:
   362                           	opt stack 0
   363  00001B                     	ds	1
   364  00001C                     _system_clock_enable:
   365                           	opt stack 0
   366  00001C                     	ds	1
   367  00001D                     _sensor_status:
   368                           	opt stack 0
   369  00001D                     	ds	5
   370  000022                     _sensor_threshold:
   371                           	opt stack 0
   372  000022                     	ds	2
   373  000024                     _line_mode:
   374                           	opt stack 0
   375  000024                     	ds	1
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           
   379                           	psect	bssBANK0
   380  0000B2                     __pbssBANK0:
   381                           	opt stack 0
   382  0000B2                     _Tx_buffer:
   383                           	opt stack 0
   384  0000B2                     	ds	20
   385  0000C6                     _sensor_readings_normalised:
   386                           	opt stack 0
   387  0000C6                     	ds	10
   388  0000D0                     _sensor_readings_raw:
   389                           	opt stack 0
   390  0000D0                     	ds	10
   391  0000DA                     _PID_output:
   392                           	opt stack 0
   393  0000DA                     	ds	2
   394  0000DC                     _errno:
   395                           	opt stack 0
   396  0000DC                     	ds	2
   397  0000DE                     _sensor_offsets:
   398                           	opt stack 0
   399  0000DE                     	ds	10
   400  0000E8                     _PID_error:
   401                           	opt stack 0
   402  0000E8                     	ds	2
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	bssBANK1
   407  00011E                     __pbssBANK1:
   408                           	opt stack 0
   409  00011E                     _Rx_buffer:
   410                           	opt stack 0
   411  00011E                     	ds	20
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           
   415                           	psect	cstackBANK1
   416  000100                     __pcstackBANK1:
   417                           	opt stack 0
   418  000100                     ?_pow:
   419                           	opt stack 0
   420  000100                     pow@x:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x0
   424  000100                     	ds	3
   425  000103                     pow@y:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x3
   429  000103                     	ds	3
   430  000106                     _pow$3222:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x6
   434  000106                     	ds	3
   435  000109                     _pow$3223:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x9
   439  000109                     	ds	3
   440  00010C                     pow@sign:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0xC
   444  00010C                     	ds	1
   445  00010D                     pow@yi:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0xD
   449  00010D                     	ds	4
   450  000111                     _CalculateSensorSums$3221:
   451                           	opt stack 0
   452                           
   453                           ; 3 bytes @ 0x11
   454  000111                     	ds	3
   455  000114                     CalculateSensorSums@sum:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x14
   459  000114                     	ds	1
   460  000115                     CalculateSensorSums@index:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x15
   464  000115                     	ds	1
   465  000116                     main@loop_count:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x16
   469  000116                     	ds	1
   470  000117                     main@echo_length:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x17
   474  000117                     	ds	2
   475  000119                     main@sensor_sum_ptr:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x19
   479  000119                     	ds	2
   480  00011B                     main@line_mode_ptr:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x1B
   484  00011B                     	ds	2
   485  00011D                     main@sensor_sum:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x1D
   489  00011D                     	ds	1
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           
   493                           	psect	cstackBANK0
   494  000060                     __pcstackBANK0:
   495                           	opt stack 0
   496  000060                     ??_isrHP:
   497                           
   498                           ; 0 bytes @ 0x0
   499  000060                     	ds	14
   500  00006E                     ??_NormaliseSensorReadings:
   501  00006E                     ??_CalculateSensorStatuses:
   502  00006E                     ?_ReadMillis2:
   503                           	opt stack 0
   504  00006E                     ?_ReadADC:
   505                           	opt stack 0
   506  00006E                     ?_ReadEchoLength:
   507                           	opt stack 0
   508  00006E                     ?_ReadMillis0:
   509                           	opt stack 0
   510  00006E                     ?_CalculateSensorError:
   511                           	opt stack 0
   512  00006E                     ?___wmul:
   513                           	opt stack 0
   514  00006E                     ?___awmod:
   515                           	opt stack 0
   516  00006E                     ?___ftpack:
   517                           	opt stack 0
   518  00006E                     ?_frexp:
   519                           	opt stack 0
   520  00006E                     ?___ftneg:
   521                           	opt stack 0
   522  00006E                     OpenADC@config2:
   523                           	opt stack 0
   524  00006E                     SetChanADC@channel:
   525                           	opt stack 0
   526  00006E                     Delay10KTCYx@unit:
   527                           	opt stack 0
   528  00006E                     CalculateSensorError@sum:
   529                           	opt stack 0
   530  00006E                     DisplaySensorStatuses@status_array:
   531                           	opt stack 0
   532  00006E                     WriteEEPROM@address:
   533                           	opt stack 0
   534  00006E                     ReadEEPROM@address:
   535                           	opt stack 0
   536  00006E                     SetDCPWM4@dutycycle:
   537                           	opt stack 0
   538  00006E                     SetDCPWM5@dutycycle:
   539                           	opt stack 0
   540  00006E                     WriteTimer0@timer0:
   541                           	opt stack 0
   542  00006E                     WriteTimer1@timer1:
   543                           	opt stack 0
   544  00006E                     Open1USART@spbrg:
   545                           	opt stack 0
   546  00006E                     ___wmul@multiplier:
   547                           	opt stack 0
   548  00006E                     ___awmod@dividend:
   549                           	opt stack 0
   550  00006E                     ___ftpack@arg:
   551                           	opt stack 0
   552  00006E                     ___ftge@ff1:
   553                           	opt stack 0
   554  00006E                     ___ftneg@f1:
   555                           	opt stack 0
   556  00006E                     frexp@value:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0xE
   560  00006E                     	ds	1
   561  00006F                     SetADCChannel@channel:
   562                           	opt stack 0
   563  00006F                     OpenADC@portconfig:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0xF
   567  00006F                     	ds	1
   568  000070                     ??_OpenADC:
   569  000070                     ??_ReadADC:
   570  000070                     ??_SetDCPWM5:
   571  000070                     ??_SetDCPWM4:
   572  000070                     ??_DisplaySensorStatuses:
   573  000070                     ??_CalibrateOffsets:
   574  000070                     ?_ReadIntEEPROM:
   575                           	opt stack 0
   576  000070                     WriteEEPROM@data:
   577                           	opt stack 0
   578  000070                     ReadIntEEPROM@address:
   579                           	opt stack 0
   580  000070                     ReadCharEEPROM@address:
   581                           	opt stack 0
   582  000070                     WriteTimer0@timer:
   583                           	opt stack 0
   584  000070                     WriteTimer1@timer:
   585                           	opt stack 0
   586  000070                     ___wmul@multiplicand:
   587                           	opt stack 0
   588  000070                     ___awmod@divisor:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x10
   592  000070                     	ds	1
   593  000071                     ___ftpack@exp:
   594                           	opt stack 0
   595  000071                     WriteIntEEPROM@address:
   596                           	opt stack 0
   597  000071                     WriteCharEEPROM@address:
   598                           	opt stack 0
   599  000071                     frexp@eptr:
   600                           	opt stack 0
   601  000071                     ___ftge@ff2:
   602                           	opt stack 0
   603                           
   604                           ; 3 bytes @ 0x11
   605  000071                     	ds	1
   606  000072                     ??_ReadIntEEPROM:
   607  000072                     CalibrateOffsets@index:
   608                           	opt stack 0
   609  000072                     ___awmod@counter:
   610                           	opt stack 0
   611  000072                     ___ftpack@sign:
   612                           	opt stack 0
   613  000072                     SetDCPWM4@DCycle:
   614                           	opt stack 0
   615  000072                     SetDCPWM5@DCycle:
   616                           	opt stack 0
   617  000072                     ___wmul@product:
   618                           	opt stack 0
   619  000072                     ConfigureUltrasound@echo_to_cm:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0x12
   623  000072                     	ds	1
   624  000073                     ??___ftpack:
   625  000073                     ??_frexp:
   626  000073                     WriteCharEEPROM@data:
   627                           	opt stack 0
   628  000073                     ___awmod@sign:
   629                           	opt stack 0
   630  000073                     WriteIntEEPROM@data:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x13
   634  000073                     	ds	1
   635  000074                     ??___ftge:
   636  000074                     PutCharTxBuf@ch:
   637                           	opt stack 0
   638  000074                     SetDCMotorL@duty_cycle:
   639                           	opt stack 0
   640  000074                     SetDCMotorR@duty_cycle:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x14
   644  000074                     	ds	1
   645  000075                     SendStatus@status_code:
   646                           	opt stack 0
   647  000075                     ReadIntEEPROM@data:
   648                           	opt stack 0
   649  000075                     SendLineMode@line_mode:
   650                           	opt stack 0
   651  000075                     SendOffsets@offsets_array:
   652                           	opt stack 0
   653  000075                     SendThreshold@sensor_threshold:
   654                           	opt stack 0
   655  000075                     ConfigureUltrasound@echo_to_in:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x15
   659  000075                     	ds	1
   660  000076                     ?___ftdiv:
   661                           	opt stack 0
   662  000076                     ?___awtoft:
   663                           	opt stack 0
   664  000076                     ?___lbtoft:
   665                           	opt stack 0
   666  000076                     ?___lltoft:
   667                           	opt stack 0
   668  000076                     SetDCMotorPID@PIDoutput:
   669                           	opt stack 0
   670  000076                     ___awtoft@c:
   671                           	opt stack 0
   672  000076                     ___ftdiv@f1:
   673                           	opt stack 0
   674  000076                     ___lltoft@c:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x16
   678  000076                     	ds	1
   679  000077                     ??_SendOffsets:
   680  000077                     ??_SendThreshold:
   681                           
   682                           ; 0 bytes @ 0x17
   683  000077                     	ds	1
   684  000078                     ??_SetDCMotorPID:
   685                           
   686                           ; 0 bytes @ 0x18
   687  000078                     	ds	1
   688  000079                     ?___ftmul:
   689                           	opt stack 0
   690  000079                     SendOffsets@index:
   691                           	opt stack 0
   692  000079                     ___ftdiv@f2:
   693                           	opt stack 0
   694  000079                     ___ftmul@f1:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x19
   698  000079                     	ds	1
   699  00007A                     ??_GenerateCalibration:
   700  00007A                     ??___lltoft:
   701                           
   702                           ; 0 bytes @ 0x1A
   703  00007A                     	ds	2
   704  00007C                     ??___ftdiv:
   705  00007C                     GenerateCalibration@index:
   706                           	opt stack 0
   707  00007C                     ___ftmul@f2:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0x1C
   711  00007C                     	ds	1
   712  00007D                     ??_LoadCalibration:
   713                           
   714                           ; 0 bytes @ 0x1D
   715  00007D                     	ds	2
   716  00007F                     ??___ftmul:
   717  00007F                     LoadCalibration@index:
   718                           	opt stack 0
   719  00007F                     ___ftdiv@cntr:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x1F
   723  00007F                     	ds	1
   724  000080                     ___ftdiv@f3:
   725                           	opt stack 0
   726                           
   727                           ; 3 bytes @ 0x20
   728  000080                     	ds	2
   729  000082                     ___ftmul@exp:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x22
   733  000082                     	ds	1
   734  000083                     ___ftdiv@exp:
   735                           	opt stack 0
   736  000083                     ___ftmul@f3_as_product:
   737                           	opt stack 0
   738                           
   739                           ; 3 bytes @ 0x23
   740  000083                     	ds	1
   741  000084                     ___ftdiv@sign:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x24
   745  000084                     	ds	2
   746  000086                     ___ftmul@cntr:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x26
   750  000086                     	ds	1
   751  000087                     ___ftmul@sign:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x27
   755  000087                     	ds	1
   756  000088                     ?___ftadd:
   757                           	opt stack 0
   758  000088                     ?___fttol:
   759                           	opt stack 0
   760  000088                     ___ftadd@f1:
   761                           	opt stack 0
   762  000088                     ___fttol@f1:
   763                           	opt stack 0
   764                           
   765                           ; 3 bytes @ 0x28
   766  000088                     	ds	3
   767  00008B                     ___ftadd@f2:
   768                           	opt stack 0
   769                           
   770                           ; 3 bytes @ 0x2B
   771  00008B                     	ds	1
   772  00008C                     ??___fttol:
   773                           
   774                           ; 0 bytes @ 0x2C
   775  00008C                     	ds	2
   776  00008E                     ??___ftadd:
   777                           
   778                           ; 0 bytes @ 0x2E
   779  00008E                     	ds	3
   780  000091                     ___ftadd@sign:
   781                           	opt stack 0
   782  000091                     ___fttol@sign1:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x31
   786  000091                     	ds	1
   787  000092                     ___ftadd@exp2:
   788                           	opt stack 0
   789  000092                     ___fttol@lval:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x32
   793  000092                     	ds	1
   794  000093                     ___ftadd@exp1:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x33
   798  000093                     	ds	1
   799  000094                     ?___ftsub:
   800                           	opt stack 0
   801  000094                     ?_eval_poly:
   802                           	opt stack 0
   803  000094                     ___ftsub@f1:
   804                           	opt stack 0
   805  000094                     eval_poly@x:
   806                           	opt stack 0
   807                           
   808                           ; 3 bytes @ 0x34
   809  000094                     	ds	2
   810  000096                     ___fttol@exp1:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x36
   814  000096                     	ds	1
   815  000097                     ?___altoft:
   816                           	opt stack 0
   817  000097                     eval_poly@d:
   818                           	opt stack 0
   819  000097                     ___ftsub@f2:
   820                           	opt stack 0
   821  000097                     ___altoft@c:
   822                           	opt stack 0
   823                           
   824                           ; 4 bytes @ 0x37
   825  000097                     	ds	2
   826  000099                     eval_poly@n:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x39
   830  000099                     	ds	2
   831  00009B                     ??_eval_poly:
   832  00009B                     ??___altoft:
   833                           
   834                           ; 0 bytes @ 0x3B
   835  00009B                     	ds	2
   836  00009D                     eval_poly@res:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x3D
   840  00009D                     	ds	2
   841  00009F                     ___altoft@exp:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x3F
   845  00009F                     	ds	1
   846  0000A0                     ?_log:
   847                           	opt stack 0
   848  0000A0                     ?_ldexp:
   849                           	opt stack 0
   850  0000A0                     ___altoft@sign:
   851                           	opt stack 0
   852  0000A0                     ldexp@value:
   853                           	opt stack 0
   854  0000A0                     log@x:
   855                           	opt stack 0
   856                           
   857                           ; 3 bytes @ 0x40
   858  0000A0                     	ds	1
   859  0000A1                     ?_floor:
   860                           	opt stack 0
   861  0000A1                     floor@x:
   862                           	opt stack 0
   863                           
   864                           ; 3 bytes @ 0x41
   865  0000A1                     	ds	2
   866  0000A3                     ldexp@newexp:
   867                           	opt stack 0
   868  0000A3                     log@exponent:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x43
   872  0000A3                     	ds	1
   873  0000A4                     floor@i:
   874                           	opt stack 0
   875                           
   876                           ; 3 bytes @ 0x44
   877  0000A4                     	ds	1
   878  0000A5                     ??_ldexp:
   879                           
   880                           ; 0 bytes @ 0x45
   881  0000A5                     	ds	2
   882  0000A7                     floor@expon:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x47
   886  0000A7                     	ds	2
   887  0000A9                     ?_exp:
   888                           	opt stack 0
   889  0000A9                     exp@x:
   890                           	opt stack 0
   891                           
   892                           ; 3 bytes @ 0x49
   893  0000A9                     	ds	3
   894  0000AC                     _exp$3224:
   895                           	opt stack 0
   896                           
   897                           ; 3 bytes @ 0x4C
   898  0000AC                     	ds	3
   899  0000AF                     exp@exponent:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x4F
   903  0000AF                     	ds	2
   904  0000B1                     exp@sign:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x51
   908  0000B1                     	ds	1
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           
   912                           	psect	cstackCOMRAM
   913  000025                     __pcstackCOMRAM:
   914                           	opt stack 0
   915  000025                     ??i1_SetChanADC:
   916  000025                     ?i1_ReadADC:
   917                           	opt stack 0
   918  000025                     ?i1___awmod:
   919                           	opt stack 0
   920  000025                     Write1USART@data:
   921                           	opt stack 0
   922  000025                     i1___awmod@dividend:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x0
   926  000025                     	ds	1
   927  000026                     i1SetChanADC@channel:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x1
   931  000026                     	ds	1
   932  000027                     ??i1_ReadADC:
   933  000027                     i1SetADCChannel@channel:
   934                           	opt stack 0
   935  000027                     i1___awmod@divisor:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x2
   939  000027                     	ds	2
   940  000029                     i1___awmod@counter:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x4
   944  000029                     	ds	1
   945  00002A                     i1___awmod@sign:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x5
   949  00002A                     	ds	1
   950  00002B                     ??_GetCharTxBuf:
   951                           
   952                           ; 0 bytes @ 0x6
   953  00002B                     	ds	1
   954  00002C                     GetCharTxBuf@ch:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x7
   958  00002C                     	ds	1
   959  00002D                     ??_isrLP:
   960                           
   961                           ; 0 bytes @ 0x8
   962  00002D                     	ds	17
   963  00003E                     ?_ReadTimer1:
   964                           	opt stack 0
   965  00003E                     i2WriteTimer0@timer0:
   966                           	opt stack 0
   967  00003E                     i2WriteTimer1@timer1:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x19
   971  00003E                     	ds	2
   972  000040                     ReadTimer1@timer:
   973                           	opt stack 0
   974  000040                     i2WriteTimer0@timer:
   975                           	opt stack 0
   976  000040                     i2WriteTimer1@timer:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x1B
   980  000040                     	ds	2
   981  000042                     ??_SetChanADC:
   982  000042                     ??_Delay10KTCYx:
   983  000042                     ??_PutCharTxBuf:
   984  000042                     NormaliseSensorReadings@index:
   985                           	opt stack 0
   986  000042                     CalculateSensorStatuses@index:
   987                           	opt stack 0
   988  000042                     DisplaySensorStatuses@index:
   989                           	opt stack 0
   990  000042                     FlushTxBuf@index:
   991                           	opt stack 0
   992  000042                     FlushRxBuf@index:
   993                           	opt stack 0
   994  000042                     OpenADC@config:
   995                           	opt stack 0
   996  000042                     OpenPWM4@period:
   997                           	opt stack 0
   998  000042                     OpenPWM5@period:
   999                           	opt stack 0
  1000  000042                     OpenTimer0@config:
  1001                           	opt stack 0
  1002  000042                     OpenTimer1@config:
  1003                           	opt stack 0
  1004  000042                     OpenTimer2@config:
  1005                           	opt stack 0
  1006  000042                     Open1USART@config:
  1007                           	opt stack 0
  1008  000042                     ___awtoft@sign:
  1009                           	opt stack 0
  1010  000042                     Delay1TCYx@unit:
  1011                           	opt stack 0
  1012  000042                     ___lbtoft@c:
  1013                           	opt stack 0
  1014  000042                     ___lltoft@exp:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x1D
  1018  000042                     	ds	1
  1019  000043                     postinc0	equ	0xFEE
  1020                           wreg	equ	0xFE8
  1021                           
  1022                           ; 0 bytes @ 0x1E
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 685 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  line_mode_pt    2   27[BANK1 ] PTR unsigned char 
  1033 ;;		 -> line_mode(1), 
  1034 ;;  sensor_sum_p    2   25[BANK1 ] PTR unsigned char 
  1035 ;;		 -> main@sensor_sum(1), 
  1036 ;;  echo_length     2   23[BANK1 ] unsigned int 
  1037 ;;  sensor_sum      1   29[BANK1 ] unsigned char 
  1038 ;;  loop_count      1   22[BANK1 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;Total ram usage:        8 bytes
  1053 ;; Hardware stack levels required when called:   13
  1054 ;; This function calls:
  1055 ;;		_BusyDistanceAcq
  1056 ;;		_BusySensorAcq
  1057 ;;		_CalculateSensorError
  1058 ;;		_CalculateSensorStatuses
  1059 ;;		_CalculateSensorSums
  1060 ;;		_ConfigureADC
  1061 ;;		_ConfigureBuggyIO
  1062 ;;		_ConfigureInterrupts
  1063 ;;		_ConfigurePWM
  1064 ;;		_ConfigureTimer0
  1065 ;;		_ConfigureTimer1
  1066 ;;		_ConfigureTimer2
  1067 ;;		_ConfigureUltrasound
  1068 ;;		_ConfigureWireless
  1069 ;;		_Delay10KTCYx
  1070 ;;		_DisableMotors
  1071 ;;		_DisplaySensorStatuses
  1072 ;;		_EnableMotors
  1073 ;;		_EnableSensorLEDS
  1074 ;;		_FlashLEDS
  1075 ;;		_GenerateCalibration
  1076 ;;		_GetDistance
  1077 ;;		_GetSensorReadings
  1078 ;;		_LoadCalibration
  1079 ;;		_NormaliseSensorReadings
  1080 ;;		_PB1pressed
  1081 ;;		_PB2pressed
  1082 ;;		_ReadEchoLength
  1083 ;;		_ReadMillis0
  1084 ;;		_ResetMillis0
  1085 ;;		_SendLineMode
  1086 ;;		_SendOffsets
  1087 ;;		_SendStatus
  1088 ;;		_SendThreshold
  1089 ;;		_SetDCMotorL
  1090 ;;		_SetDCMotorPID
  1091 ;;		_SetDCMotorR
  1092 ;;		_SetDirectionForward
  1093 ;;		_SetForwardsMotorR
  1094 ;;		_SetReverseMotorL
  1095 ;;		_SetUnipolar
  1096 ;;		_StopMotors
  1097 ;;		___wmul
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text0
  1104  00103C                     __ptext0:
  1105                           	opt stack 0
  1106  00103C                     _main:
  1107                           	opt stack 18
  1108                           
  1109                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 688: unsigned char sensor_sum, loop_count = 0;
  1110                           
  1111                           ;incstack = 0
  1112  00103C  0E00               	movlw	0
  1113  00103E  0101               	movlb	1	; () banked
  1114  001040  6F16               	movwf	main@loop_count& (0+255),b
  1115                           
  1116                           ; BSR set to: 1
  1117                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 689: unsigned int echo_length;
  1118                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 692: unsigned char *sensor_sum_ptr, *line_mode_pt
      +                          r;
  1119                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 693: sensor_sum_ptr = &sensor_sum;
  1120  001042  0E1D               	movlw	low main@sensor_sum
  1121  001044  0101               	movlb	1	; () banked
  1122  001046  6F19               	movwf	main@sensor_sum_ptr& (0+255),b
  1123  001048  0E01               	movlw	high main@sensor_sum
  1124  00104A  0101               	movlb	1	; () banked
  1125  00104C  6F1A               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1126                           
  1127                           ; BSR set to: 1
  1128                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 694: line_mode_ptr = &line_mode;
  1129  00104E  0E24               	movlw	low _line_mode
  1130  001050  0101               	movlb	1	; () banked
  1131  001052  6F1B               	movwf	main@line_mode_ptr& (0+255),b
  1132  001054  0E00               	movlw	high _line_mode
  1133  001056  0101               	movlb	1	; () banked
  1134  001058  6F1C               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 696: sensor_threshold_ptr = &sensor_threshold;
  1138  00105A  0E22               	movlw	low _sensor_threshold
  1139  00105C  0100               	movlb	0	; () banked
  1140  00105E  6FF0               	movwf	_sensor_threshold_ptr& (0+255),b
  1141  001060  0E00               	movlw	high _sensor_threshold
  1142  001062  0100               	movlb	0	; () banked
  1143  001064  6FF1               	movwf	(_sensor_threshold_ptr+1)& (0+255),b
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 698: ConfigureUltrasound(0.0137, 0.054);
  1147  001066  0E76               	movlw	118
  1148  001068  0100               	movlb	0	; () banked
  1149  00106A  6F72               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1150  00106C  0E60               	movlw	96
  1151  00106E  0100               	movlb	0	; () banked
  1152  001070  6F73               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1153  001072  0E3C               	movlw	60
  1154  001074  0100               	movlb	0	; () banked
  1155  001076  6F74               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1156  001078  0E2F               	movlw	47
  1157  00107A  0100               	movlb	0	; () banked
  1158  00107C  6F75               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1159  00107E  0E5D               	movlw	93
  1160  001080  0100               	movlb	0	; () banked
  1161  001082  6F76               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1162  001084  0E3D               	movlw	61
  1163  001086  0100               	movlb	0	; () banked
  1164  001088  6F77               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1165  00108A  ECBB  F01A         	call	_ConfigureUltrasound	;wreg free
  1166                           
  1167                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 699: ConfigureBuggyIO();
  1168  00108E  EC88  F01B         	call	_ConfigureBuggyIO	;wreg free
  1169                           
  1170                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 700: ConfigureInterrupts();
  1171  001092  ECCF  F01A         	call	_ConfigureInterrupts	;wreg free
  1172                           
  1173                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 701: ConfigureTimer0();
  1174  001096  ECB9  F01B         	call	_ConfigureTimer0	;wreg free
  1175                           
  1176                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 702: ConfigureTimer1();
  1177  00109A  ECA2  F01B         	call	_ConfigureTimer1	;wreg free
  1178                           
  1179                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 703: ConfigureTimer2();
  1180  00109E  EC95  F01C         	call	_ConfigureTimer2	;wreg free
  1181                           
  1182                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 704: ConfigurePWM();
  1183  0010A2  EC6B  F01C         	call	_ConfigurePWM	;wreg free
  1184                           
  1185                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 705: ConfigureADC();
  1186  0010A6  ECEE  F01B         	call	_ConfigureADC	;wreg free
  1187                           
  1188                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 706: ConfigureWireless();
  1189  0010AA  ECE3  F01A         	call	_ConfigureWireless	;wreg free
  1190                           
  1191                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 708: DisableMotors();
  1192  0010AE  ECAA  F01C         	call	_DisableMotors	;wreg free
  1193                           
  1194                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 710: Delay10KTCYx(100);
  1195  0010B2  0E64               	movlw	100
  1196  0010B4  EC5F  F01B         	call	_Delay10KTCYx
  1197                           
  1198                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 712: SendStatus(0x00);
  1199  0010B8  0E00               	movlw	0
  1200  0010BA  EC98  F019         	call	_SendStatus
  1201                           
  1202                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 717: LATJ = 0x0F;
  1203  0010BE  0E0F               	movlw	15
  1204  0010C0  6E91               	movwf	3985,c	;volatile
  1205                           
  1206                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 718: SendStatus(0x01);
  1207  0010C2  0E01               	movlw	1
  1208  0010C4  EC98  F019         	call	_SendStatus
  1209  0010C8  D000               	goto	l6280
  1210  0010CA                     l6280:
  1211                           
  1212                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 721: if(PB1pressed() == 1) {
  1213  0010CA  EC5B  F019         	call	_PB1pressed	;wreg free
  1214  0010CE  06E8               	decf	wreg,f,c
  1215  0010D0  A4D8               	btfss	status,2,c
  1216  0010D2  D003               	goto	l6286
  1217                           
  1218                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 722: line_mode = 0;
  1219  0010D4  0E00               	movlw	0
  1220  0010D6  D007               	goto	L1
  1221                           
  1222                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 724: }
  1223                           
  1224                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 723: break;
  1225  0010D8  D7F8               	goto	l6280
  1226  0010DA                     l6286:
  1227                           
  1228                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 725: else if(PB2pressed() == 1) {
  1229  0010DA  EC1D  F019         	call	_PB2pressed	;wreg free
  1230  0010DE  06E8               	decf	wreg,f,c
  1231  0010E0  A4D8               	btfss	status,2,c
  1232  0010E2  D7F3               	goto	l6280
  1233                           
  1234                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 726: line_mode = 1;
  1235  0010E4  0E01               	movlw	1
  1236  0010E6                     L1:
  1237  0010E6  6E24               	movwf	_line_mode,c
  1238                           
  1239                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 727: break;
  1240  0010E8  D001               	goto	l6290
  1241  0010EA  D7EF               	goto	l6280
  1242  0010EC                     l6290:
  1243                           
  1244                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 728: }
  1245                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 729: }
  1246                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 731: SendLineMode(line_mode_ptr);
  1247  0010EC  C11B  F075         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1248  0010F0  C11C  F076         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1249  0010F4  EC7A  F019         	call	_SendLineMode	;wreg free
  1250                           
  1251                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 732: FlashLEDS();
  1252  0010F8  ECA7  F01A         	call	_FlashLEDS	;wreg free
  1253                           
  1254                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 734: EnableSensorLEDS();
  1255  0010FC  EC9F  F01C         	call	_EnableSensorLEDS	;wreg free
  1256                           
  1257                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 737: LATJ = 0x07;
  1258  001100  0E07               	movlw	7
  1259  001102  6E91               	movwf	3985,c	;volatile
  1260                           
  1261                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 738: SendStatus(0x02);
  1262  001104  0E02               	movlw	2
  1263  001106  EC98  F019         	call	_SendStatus
  1264  00110A  D000               	goto	l6300
  1265  00110C                     l6300:
  1266                           
  1267                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 741: if(PB1pressed() == 1) {
  1268  00110C  EC5B  F019         	call	_PB1pressed	;wreg free
  1269  001110  06E8               	decf	wreg,f,c
  1270  001112  A4D8               	btfss	status,2,c
  1271  001114  D006               	goto	l6308
  1272                           
  1273                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 742: FlashLEDS();
  1274  001116  ECA7  F01A         	call	_FlashLEDS	;wreg free
  1275                           
  1276                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 743: GenerateCalibration();
  1277  00111A  EC2E  F012         	call	_GenerateCalibration	;wreg free
  1278                           
  1279                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 744: break;
  1280  00111E  D01A               	goto	l6318
  1281                           
  1282                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 745: }
  1283  001120  D7F5               	goto	l6300
  1284  001122                     l6308:
  1285                           
  1286                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 746: else if(PB2pressed() == 1) {
  1287  001122  EC1D  F019         	call	_PB2pressed	;wreg free
  1288  001126  06E8               	decf	wreg,f,c
  1289  001128  A4D8               	btfss	status,2,c
  1290  00112A  D7F0               	goto	l6300
  1291                           
  1292                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 747: FlashLEDS();
  1293  00112C  ECA7  F01A         	call	_FlashLEDS	;wreg free
  1294                           
  1295                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 748: LoadCalibration();
  1296  001130  ECCE  F015         	call	_LoadCalibration	;wreg free
  1297                           
  1298                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 749: SendOffsets(sensor_offsets);
  1299  001134  0EDE               	movlw	low _sensor_offsets
  1300  001136  0100               	movlb	0	; () banked
  1301  001138  6F75               	movwf	SendOffsets@offsets_array& (0+255),b
  1302  00113A  0E00               	movlw	high _sensor_offsets
  1303  00113C  0100               	movlb	0	; () banked
  1304  00113E  6F76               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1305  001140  EC2C  F015         	call	_SendOffsets	;wreg free
  1306                           
  1307                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 750: SendThreshold(sensor_threshold_ptr);
  1308  001144  C0F0  F075         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  1309  001148  C0F1  F076         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  1310  00114C  EC89  F017         	call	_SendThreshold	;wreg free
  1311                           
  1312                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 751: break;
  1313  001150  D001               	goto	l6318
  1314  001152  D7DC               	goto	l6300
  1315  001154                     l6318:
  1316                           
  1317                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 752: }
  1318                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 754: }
  1319                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 756: FlashLEDS();
  1320  001154  ECA7  F01A         	call	_FlashLEDS	;wreg free
  1321                           
  1322                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 759: LATJ = 0x01;
  1323  001158  0E01               	movlw	1
  1324  00115A  6E91               	movwf	3985,c	;volatile
  1325                           
  1326                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 760: SendStatus(0x06);
  1327  00115C  0E06               	movlw	6
  1328  00115E  EC98  F019         	call	_SendStatus
  1329                           
  1330                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 762: while(PB1pressed() == 0);
  1331  001162  D000               	goto	l6324
  1332  001164                     l6324:
  1333  001164  EC5B  F019         	call	_PB1pressed	;wreg free
  1334  001168  0900               	iorlw	0
  1335  00116A  B4D8               	btfsc	status,2,c
  1336  00116C  D7FB               	goto	l6324
  1337                           
  1338                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 765: PID_error = 0;
  1339  00116E  0E00               	movlw	0
  1340  001170  0100               	movlb	0	; () banked
  1341  001172  6FE9               	movwf	(_PID_error+1)& (0+255),b
  1342  001174  0E00               	movlw	0
  1343  001176  6FE8               	movwf	_PID_error& (0+255),b
  1344                           
  1345                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 766: PID_output = 0;
  1346  001178  0E00               	movlw	0
  1347  00117A  0100               	movlb	0	; () banked
  1348  00117C  6FDB               	movwf	(_PID_output+1)& (0+255),b
  1349  00117E  0E00               	movlw	0
  1350  001180  6FDA               	movwf	_PID_output& (0+255),b
  1351                           
  1352                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 768: LATJ = 0x00;
  1353  001182  0E00               	movlw	0
  1354  001184  6E91               	movwf	3985,c	;volatile
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 770: ResetMillis0();
  1358  001186  EC78  F01C         	call	_ResetMillis0	;wreg free
  1359                           
  1360                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 772: FlashLEDS();
  1361  00118A  ECA7  F01A         	call	_FlashLEDS	;wreg free
  1362                           
  1363                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 773: SendStatus(0x07);
  1364  00118E  0E07               	movlw	7
  1365  001190  EC98  F019         	call	_SendStatus
  1366                           
  1367                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 775: SetUnipolar();
  1368  001194  EC99  F01C         	call	_SetUnipolar	;wreg free
  1369                           
  1370                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 776: StopMotors();
  1371  001198  EC50  F01B         	call	_StopMotors	;wreg free
  1372                           
  1373                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 777: SetDirectionForward();
  1374  00119C  EC9C  F01C         	call	_SetDirectionForward	;wreg free
  1375                           
  1376                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 778: EnableMotors();
  1377  0011A0  ECA8  F01C         	call	_EnableMotors	;wreg free
  1378  0011A4  D000               	goto	l6342
  1379  0011A6                     l6342:
  1380                           
  1381                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 784: GetSensorReadings();
  1382  0011A6  ECAE  F01B         	call	_GetSensorReadings	;wreg free
  1383                           
  1384                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 786: while(BusySensorAcq());
  1385  0011AA  D000               	goto	l6344
  1386  0011AC                     l6344:
  1387  0011AC  EC3E  F01C         	call	_BusySensorAcq	;wreg free
  1388  0011B0  0900               	iorlw	0
  1389  0011B2  A4D8               	btfss	status,2,c
  1390  0011B4  D7FB               	goto	l6344
  1391                           
  1392                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 788: NormaliseSensorReadings();
  1393  0011B6  ECBF  F017         	call	_NormaliseSensorReadings	;wreg free
  1394                           
  1395                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 790: CalculateSensorStatuses();
  1396  0011BA  ECA1  F012         	call	_CalculateSensorStatuses	;wreg free
  1397                           
  1398                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 791: sensor_sum = CalculateSensorSums();
  1399  0011BE  ECD9  F014         	call	_CalculateSensorSums	;wreg free
  1400  0011C2  0101               	movlb	1	; () banked
  1401  0011C4  6F1D               	movwf	main@sensor_sum& (0+255),b
  1402                           
  1403                           ; BSR set to: 1
  1404                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 794: PID_error = CalculateSensorError(sensor_sum_
      +                          ptr);
  1405  0011C6  C119  F06E         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1406  0011CA  C11A  F06F         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1407  0011CE  EC28  F014         	call	_CalculateSensorError	;wreg free
  1408  0011D2  C06E  F0E8         	movff	?_CalculateSensorError,_PID_error
  1409  0011D6  C06F  F0E9         	movff	?_CalculateSensorError+1,_PID_error+1
  1410                           
  1411                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 795: PID_output = 13 * PID_error;
  1412  0011DA  C0E8  F06E         	movff	_PID_error,___wmul@multiplier
  1413  0011DE  C0E9  F06F         	movff	_PID_error+1,___wmul@multiplier+1
  1414  0011E2  0E00               	movlw	0
  1415  0011E4  0100               	movlb	0	; () banked
  1416  0011E6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1417  0011E8  0E0D               	movlw	13
  1418  0011EA  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1419  0011EC  ECB5  F019         	call	___wmul	;wreg free
  1420  0011F0  C06E  F0DA         	movff	?___wmul,_PID_output
  1421  0011F4  C06F  F0DB         	movff	?___wmul+1,_PID_output+1
  1422                           
  1423                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 797: SetDCMotorPID(PID_output);
  1424  0011F8  C0DA  F076         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1425  0011FC  C0DB  F077         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1426  001200  EC73  F013         	call	_SetDCMotorPID	;wreg free
  1427                           
  1428                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 800: DisplaySensorStatuses(sensor_status);
  1429  001204  0E1D               	movlw	low _sensor_status
  1430  001206  0100               	movlb	0	; () banked
  1431  001208  6F6E               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1432  00120A  0E00               	movlw	high _sensor_status
  1433  00120C  0100               	movlb	0	; () banked
  1434  00120E  6F6F               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1435  001210  EC73  F018         	call	_DisplaySensorStatuses	;wreg free
  1436                           
  1437                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 825: if(BusyDistanceAcq() == 0) {
  1438  001214  EC46  F01C         	call	_BusyDistanceAcq	;wreg free
  1439  001218  0900               	iorlw	0
  1440  00121A  A4D8               	btfss	status,2,c
  1441  00121C  D061               	goto	l346
  1442                           
  1443                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 826: echo_length = ReadEchoLength();
  1444  00121E  EC82  F01C         	call	_ReadEchoLength	;wreg free
  1445  001222  C06E  F117         	movff	?_ReadEchoLength,main@echo_length
  1446  001226  C06F  F118         	movff	?_ReadEchoLength+1,main@echo_length+1
  1447                           
  1448                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 827: if(echo_length < 1232) {
  1449  00122A  0ED0               	movlw	208
  1450  00122C  0101               	movlb	1	; () banked
  1451  00122E  5D17               	subwf	main@echo_length& (0+255),w,b
  1452  001230  0E04               	movlw	4
  1453  001232  0101               	movlb	1	; () banked
  1454  001234  5918               	subwfb	(main@echo_length+1)& (0+255),w,b
  1455  001236  B0D8               	btfsc	status,0,c
  1456  001238  D050               	goto	l6392
  1457                           
  1458                           ; BSR set to: 1
  1459                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 829: DisableMotors();
  1460  00123A  ECAA  F01C         	call	_DisableMotors	;wreg free
  1461                           
  1462                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 831: SetForwardsMotorR();
  1463  00123E  ECA4  F01C         	call	_SetForwardsMotorR	;wreg free
  1464                           
  1465                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 832: SetReverseMotorL();
  1466  001242  ECA2  F01C         	call	_SetReverseMotorL	;wreg free
  1467                           
  1468                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 834: SetDCMotorL(406);
  1469  001246  0E01               	movlw	1
  1470  001248  0100               	movlb	0	; () banked
  1471  00124A  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1472  00124C  0E96               	movlw	150
  1473  00124E  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1474  001250  EC5D  F01C         	call	_SetDCMotorL	;wreg free
  1475                           
  1476                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 835: SetDCMotorR(390);
  1477  001254  0E01               	movlw	1
  1478  001256  0100               	movlb	0	; () banked
  1479  001258  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1480  00125A  0E86               	movlw	134
  1481  00125C  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1482  00125E  EC56  F01C         	call	_SetDCMotorR	;wreg free
  1483                           
  1484                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 837: EnableMotors();
  1485  001262  ECA8  F01C         	call	_EnableMotors	;wreg free
  1486                           
  1487                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 839: ResetMillis0();
  1488  001266  EC78  F01C         	call	_ResetMillis0	;wreg free
  1489                           
  1490                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 840: while(ReadMillis0() < 30);
  1491  00126A  D000               	goto	l6372
  1492  00126C                     l6372:
  1493  00126C  EC7D  F01C         	call	_ReadMillis0	;wreg free
  1494  001270  0100               	movlb	0	; () banked
  1495  001272  516F               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1496  001274  E107               	bnz	l6374
  1497  001276  0E1E               	movlw	30
  1498  001278  0100               	movlb	0	; () banked
  1499  00127A  5D6E               	subwf	?_ReadMillis0& (0+255),w,b
  1500  00127C  B0D8               	btfsc	status,0,c
  1501  00127E  D002               	goto	l6374
  1502  001280  D7F5               	goto	l6372
  1503  001282  D000               	goto	l6374
  1504  001284                     l6374:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 841: sensor_sum = 0;
  1508  001284  0E00               	movlw	0
  1509  001286  0101               	movlb	1	; () banked
  1510  001288  6F1D               	movwf	main@sensor_sum& (0+255),b
  1511                           
  1512                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 843: while(sensor_sum == 0) {
  1513  00128A  D019               	goto	l6386
  1514  00128C                     l6376:
  1515                           
  1516                           ; BSR set to: 1
  1517                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 844: GetSensorReadings();
  1518  00128C  ECAE  F01B         	call	_GetSensorReadings	;wreg free
  1519                           
  1520                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 845: while(BusySensorAcq());
  1521  001290  D000               	goto	l6378
  1522  001292                     l6378:
  1523  001292  EC3E  F01C         	call	_BusySensorAcq	;wreg free
  1524  001296  0900               	iorlw	0
  1525  001298  A4D8               	btfss	status,2,c
  1526  00129A  D7FB               	goto	l6378
  1527                           
  1528                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 846: NormaliseSensorReadings();
  1529  00129C  ECBF  F017         	call	_NormaliseSensorReadings	;wreg free
  1530                           
  1531                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 847: CalculateSensorStatuses();
  1532  0012A0  ECA1  F012         	call	_CalculateSensorStatuses	;wreg free
  1533                           
  1534                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 848: sensor_sum = CalculateSensorSums();
  1535  0012A4  ECD9  F014         	call	_CalculateSensorSums	;wreg free
  1536  0012A8  0101               	movlb	1	; () banked
  1537  0012AA  6F1D               	movwf	main@sensor_sum& (0+255),b
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 849: DisplaySensorStatuses(sensor_status);
  1541  0012AC  0E1D               	movlw	low _sensor_status
  1542  0012AE  0100               	movlb	0	; () banked
  1543  0012B0  6F6E               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1544  0012B2  0E00               	movlw	high _sensor_status
  1545  0012B4  0100               	movlb	0	; () banked
  1546  0012B6  6F6F               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1547  0012B8  EC73  F018         	call	_DisplaySensorStatuses	;wreg free
  1548  0012BC  D000               	goto	l6386
  1549  0012BE                     l6386:
  1550  0012BE  0101               	movlb	1	; () banked
  1551  0012C0  511D               	movf	main@sensor_sum& (0+255),w,b
  1552  0012C2  0101               	movlb	1	; () banked
  1553  0012C4  B4D8               	btfsc	status,2,c
  1554  0012C6  D7E2               	goto	l6376
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 851: }
  1558                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 853: DisableMotors();
  1559                           
  1560                           ; BSR set to: 1
  1561  0012C8  ECAA  F01C         	call	_DisableMotors	;wreg free
  1562                           
  1563                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 854: SetDirectionForward();
  1564  0012CC  EC9C  F01C         	call	_SetDirectionForward	;wreg free
  1565                           
  1566                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 855: EnableMotors();
  1567  0012D0  ECA8  F01C         	call	_EnableMotors	;wreg free
  1568                           
  1569                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 859: GetDistance();
  1570  0012D4  ECE4  F01B         	call	_GetDistance	;wreg free
  1571                           
  1572                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 860: }
  1573  0012D8  D003               	goto	l346
  1574  0012DA                     l6392:
  1575                           
  1576                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 861: else {
  1577                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 862: GetDistance();
  1578  0012DA  ECE4  F01B         	call	_GetDistance	;wreg free
  1579  0012DE  D000               	goto	l346
  1580  0012E0                     l346:
  1581                           
  1582                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 863: }
  1583                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 864: }
  1584                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 868: ResetMillis0();
  1585  0012E0  EC78  F01C         	call	_ResetMillis0	;wreg free
  1586                           
  1587                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 869: while(ReadMillis0() < 5);
  1588  0012E4  D000               	goto	l6394
  1589  0012E6                     l6394:
  1590  0012E6  EC7D  F01C         	call	_ReadMillis0	;wreg free
  1591  0012EA  0100               	movlb	0	; () banked
  1592  0012EC  516F               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1593  0012EE  E107               	bnz	l6396
  1594  0012F0  0E05               	movlw	5
  1595  0012F2  0100               	movlb	0	; () banked
  1596  0012F4  5D6E               	subwf	?_ReadMillis0& (0+255),w,b
  1597  0012F6  B0D8               	btfsc	status,0,c
  1598  0012F8  D002               	goto	l6396
  1599  0012FA  D7F5               	goto	l6394
  1600  0012FC  D000               	goto	l6396
  1601  0012FE                     l6396:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 870: LATJ = 0x00;
  1605  0012FE  0E00               	movlw	0
  1606  001300  6E91               	movwf	3985,c	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 871: loop_count++;
  1610  001302  0101               	movlb	1	; () banked
  1611  001304  2B16               	incf	main@loop_count& (0+255),f,b
  1612                           
  1613                           ; BSR set to: 1
  1614  001306  D74F               	goto	l6342
  1615                           
  1616                           ; BSR set to: 1
  1617                           
  1618                           ; BSR set to: 1
  1619  001308  EF76  F000         	goto	start
  1620  00130C                     __end_of_main:
  1621                           	opt stack 0
  1622                           postinc0	equ	0xFEE
  1623                           wreg	equ	0xFE8
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _StopMotors *****************
  1627 ;; Defined at:
  1628 ;;		line 128 in file "Motors.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;		None               void
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;Total ram usage:        0 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    9
  1649 ;; This function calls:
  1650 ;;		_SetDCMotorL
  1651 ;;		_SetDCMotorR
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text1
  1658  0036A0                     __ptext1:
  1659                           	opt stack 0
  1660  0036A0                     _StopMotors:
  1661                           	opt stack 21
  1662                           
  1663                           ;Motors.c: 130: SetDCMotorR(526);
  1664                           
  1665                           ; BSR set to: 1
  1666                           ;incstack = 0
  1667  0036A0  0E02               	movlw	2
  1668  0036A2  0100               	movlb	0	; () banked
  1669  0036A4  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1670  0036A6  0E0E               	movlw	14
  1671  0036A8  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1672  0036AA  EC56  F01C         	call	_SetDCMotorR	;wreg free
  1673                           
  1674                           ;Motors.c: 131: SetDCMotorL(526);
  1675  0036AE  0E02               	movlw	2
  1676  0036B0  0100               	movlb	0	; () banked
  1677  0036B2  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1678  0036B4  0E0E               	movlw	14
  1679  0036B6  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1680  0036B8  EC5D  F01C         	call	_SetDCMotorL	;wreg free
  1681  0036BC  0012               	return		;funcret
  1682  0036BE                     __end_of_StopMotors:
  1683                           	opt stack 0
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _SetUnipolar *****************
  1689 ;; Defined at:
  1690 ;;		line 121 in file "Motors.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		None
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        0 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    7
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text2
  1719  003932                     __ptext2:
  1720                           	opt stack 0
  1721  003932                     _SetUnipolar:
  1722                           	opt stack 23
  1723                           
  1724                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  1725                           
  1726                           ;incstack = 0
  1727  003932  908C               	bcf	3980,0,c	;volatile
  1728                           
  1729                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  1730  003934  948C               	bcf	3980,2,c	;volatile
  1731  003936  0012               	return		;funcret
  1732  003938                     __end_of_SetUnipolar:
  1733                           	opt stack 0
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           status	equ	0xFD8
  1737                           
  1738 ;; *************** function _SetReverseMotorL *****************
  1739 ;; Defined at:
  1740 ;;		line 96 in file "Motors.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;		None               void
  1747 ;; Registers used:
  1748 ;;		None
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    7
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_main
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text3
  1769  003944                     __ptext3:
  1770                           	opt stack 0
  1771  003944                     _SetReverseMotorL:
  1772                           	opt stack 23
  1773                           
  1774                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  1775                           
  1776                           ;incstack = 0
  1777  003944  968C               	bcf	3980,3,c	;volatile
  1778  003946  0012               	return		;funcret
  1779  003948                     __end_of_SetReverseMotorL:
  1780                           	opt stack 0
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _SetForwardsMotorR *****************
  1786 ;; Defined at:
  1787 ;;		line 78 in file "Motors.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		None
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    7
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text4
  1816  003948                     __ptext4:
  1817                           	opt stack 0
  1818  003948                     _SetForwardsMotorR:
  1819                           	opt stack 23
  1820                           
  1821                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  1822                           
  1823                           ;incstack = 0
  1824  003948  828C               	bsf	3980,1,c	;volatile
  1825  00394A  0012               	return		;funcret
  1826  00394C                     __end_of_SetForwardsMotorR:
  1827                           	opt stack 0
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _SetDirectionForward *****************
  1833 ;; Defined at:
  1834 ;;		line 64 in file "Motors.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;		None               void
  1841 ;; Registers used:
  1842 ;;		None
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    7
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text5
  1863  003938                     __ptext5:
  1864                           	opt stack 0
  1865  003938                     _SetDirectionForward:
  1866                           	opt stack 23
  1867                           
  1868                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  1869                           
  1870                           ;incstack = 0
  1871  003938  868C               	bsf	3980,3,c	;volatile
  1872                           
  1873                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  1874  00393A  828C               	bsf	3980,1,c	;volatile
  1875  00393C  0012               	return		;funcret
  1876  00393E                     __end_of_SetDirectionForward:
  1877                           	opt stack 0
  1878                           postinc0	equ	0xFEE
  1879                           wreg	equ	0xFE8
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _SetDCMotorPID *****************
  1883 ;; Defined at:
  1884 ;;		line 47 in file "Motors.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  PIDoutput       2   22[BANK0 ] int 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        4 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    9
  1905 ;; This function calls:
  1906 ;;		_SetDCMotorL
  1907 ;;		_SetDCMotorR
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text6
  1914  0026E6                     __ptext6:
  1915                           	opt stack 0
  1916  0026E6                     _SetDCMotorPID:
  1917                           	opt stack 21
  1918                           
  1919                           ;Motors.c: 49: if(PIDoutput <= 0) {
  1920                           
  1921                           ;incstack = 0
  1922  0026E6  0100               	movlb	0	; () banked
  1923  0026E8  BF77               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1924  0026EA  D007               	goto	l6198
  1925  0026EC  0100               	movlb	0	; () banked
  1926  0026EE  5177               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1927  0026F0  E121               	bnz	l6200
  1928  0026F2  0100               	movlb	0	; () banked
  1929  0026F4  0576               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1930  0026F6  B0D8               	btfsc	status,0,c
  1931  0026F8  D01D               	goto	l6200
  1932  0026FA                     l6198:
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;Motors.c: 50: SetDCMotorL(400 - PIDoutput);
  1936  0026FA  C076  F078         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  1937  0026FE  C077  F079         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  1938  002702  0100               	movlb	0	; () banked
  1939  002704  1F78               	comf	??_SetDCMotorPID& (0+255),f,b
  1940  002706  1F79               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  1941  002708  4B78               	infsnz	??_SetDCMotorPID& (0+255),f,b
  1942  00270A  2B79               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  1943  00270C  0E90               	movlw	144
  1944  00270E  0100               	movlb	0	; () banked
  1945  002710  2578               	addwf	??_SetDCMotorPID& (0+255),w,b
  1946  002712  0100               	movlb	0	; () banked
  1947  002714  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1948  002716  0E01               	movlw	1
  1949  002718  0100               	movlb	0	; () banked
  1950  00271A  2179               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  1951  00271C  0100               	movlb	0	; () banked
  1952  00271E  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1953  002720  EC5D  F01C         	call	_SetDCMotorL	;wreg free
  1954                           
  1955                           ;Motors.c: 51: SetDCMotorR(400);
  1956  002724  0E01               	movlw	1
  1957  002726  0100               	movlb	0	; () banked
  1958  002728  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1959  00272A  0E90               	movlw	144
  1960  00272C  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1961  00272E  EC56  F01C         	call	_SetDCMotorR	;wreg free
  1962                           
  1963                           ;Motors.c: 52: }
  1964  002732  D033               	goto	l491
  1965  002734                     l6200:
  1966                           
  1967                           ;Motors.c: 53: else if(PIDoutput > 0) {
  1968  002734  0100               	movlb	0	; () banked
  1969  002736  BF77               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1970  002738  D01B               	goto	l6204
  1971  00273A  0100               	movlb	0	; () banked
  1972  00273C  5177               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1973  00273E  E104               	bnz	u5770
  1974  002740  0100               	movlb	0	; () banked
  1975  002742  0576               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1976  002744  A0D8               	btfss	status,0,c
  1977  002746  D014               	goto	l6204
  1978  002748                     u5770:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;Motors.c: 54: SetDCMotorL(400);
  1982  002748  0E01               	movlw	1
  1983  00274A  0100               	movlb	0	; () banked
  1984  00274C  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1985  00274E  0E90               	movlw	144
  1986  002750  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1987  002752  EC5D  F01C         	call	_SetDCMotorL	;wreg free
  1988                           
  1989                           ;Motors.c: 55: SetDCMotorR(400 + PIDoutput);
  1990  002756  0E90               	movlw	144
  1991  002758  0100               	movlb	0	; () banked
  1992  00275A  2576               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1993  00275C  0100               	movlb	0	; () banked
  1994  00275E  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1995  002760  0E01               	movlw	1
  1996  002762  0100               	movlb	0	; () banked
  1997  002764  2177               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1998  002766  0100               	movlb	0	; () banked
  1999  002768  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2000  00276A  EC56  F01C         	call	_SetDCMotorR	;wreg free
  2001                           
  2002                           ;Motors.c: 56: }
  2003  00276E  D015               	goto	l491
  2004  002770                     l6204:
  2005                           
  2006                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2007  002770  0100               	movlb	0	; () banked
  2008  002772  5176               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2009  002774  0100               	movlb	0	; () banked
  2010  002776  1177               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2011  002778  A4D8               	btfss	status,2,c
  2012  00277A  D00F               	goto	l491
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;Motors.c: 58: SetDCMotorL(400);
  2016  00277C  0E01               	movlw	1
  2017  00277E  0100               	movlb	0	; () banked
  2018  002780  6F75               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2019  002782  0E90               	movlw	144
  2020  002784  6F74               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2021  002786  EC5D  F01C         	call	_SetDCMotorL	;wreg free
  2022                           
  2023                           ;Motors.c: 59: SetDCMotorR(400);
  2024  00278A  0E01               	movlw	1
  2025  00278C  0100               	movlb	0	; () banked
  2026  00278E  6F75               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2027  002790  0E90               	movlw	144
  2028  002792  6F74               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2029  002794  EC56  F01C         	call	_SetDCMotorR	;wreg free
  2030  002798  D000               	goto	l491
  2031  00279A                     l491:
  2032  00279A  0012               	return		;funcret
  2033  00279C                     __end_of_SetDCMotorPID:
  2034                           	opt stack 0
  2035                           postinc0	equ	0xFEE
  2036                           wreg	equ	0xFE8
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function _SetDCMotorR *****************
  2040 ;; Defined at:
  2041 ;;		line 19 in file "Motors.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  duty_cycle      2   20[BANK0 ] unsigned int 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;		None               void
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    8
  2062 ;; This function calls:
  2063 ;;		_SetDCPWM4
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;;		_SetDCMotorPID
  2067 ;;		_StopMotors
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text7
  2072  0038AC                     __ptext7:
  2073                           	opt stack 0
  2074  0038AC                     _SetDCMotorR:
  2075                           	opt stack 21
  2076                           
  2077                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2078                           
  2079                           ;incstack = 0
  2080  0038AC  C074  F06E         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2081  0038B0  C075  F06F         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2082  0038B4  EC97  F018         	call	_SetDCPWM4	;wreg free
  2083  0038B8  0012               	return		;funcret
  2084  0038BA                     __end_of_SetDCMotorR:
  2085                           	opt stack 0
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _SetDCPWM4 *****************
  2091 ;; Defined at:
  2092 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  2097 ;; Return value:  Size  Location     Type
  2098 ;;		None               void
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        6 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    7
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_SetDCMotorR
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text8
  2121  00312E                     __ptext8:
  2122                           	opt stack 0
  2123  00312E                     _SetDCPWM4:
  2124                           	opt stack 21
  2125                           
  2126                           ;incstack = 0
  2127  00312E  C06E  F070         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2128  003132  C06F  F071         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2129  003136  0E06               	movlw	6
  2130  003138                     u5205:
  2131  003138  90D8               	bcf	status,0,c
  2132  00313A  0100               	movlb	0	; () banked
  2133  00313C  3770               	rlcf	??_SetDCPWM4& (0+255),f,b
  2134  00313E  3771               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2135  003140  2EE8               	decfsz	wreg,f,c
  2136  003142  D7FA               	goto	u5205
  2137  003144  C070  F072         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  2138  003148  C071  F073         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  2139                           
  2140                           ; BSR set to: 0
  2141  00314C  C073  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  2142  003150  C072  F070         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  2143  003154  0100               	movlb	0	; () banked
  2144  003156  90D8               	bcf	status,0,c
  2145  003158  3370               	rrcf	??_SetDCPWM4& (0+255),f,b
  2146  00315A  0100               	movlb	0	; () banked
  2147  00315C  90D8               	bcf	status,0,c
  2148  00315E  3370               	rrcf	??_SetDCPWM4& (0+255),f,b
  2149  003160  0E30               	movlw	48
  2150  003162  0100               	movlb	0	; () banked
  2151  003164  1770               	andwf	??_SetDCPWM4& (0+255),f,b
  2152  003166  5073               	movf	3955,w,c	;volatile
  2153  003168  0BCF               	andlw	207
  2154  00316A  0100               	movlb	0	; () banked
  2155  00316C  1170               	iorwf	??_SetDCPWM4& (0+255),w,b
  2156  00316E  6E73               	movwf	3955,c	;volatile
  2157                           
  2158                           ; BSR set to: 0
  2159  003170  0012               	return		;funcret
  2160  003172                     __end_of_SetDCPWM4:
  2161                           	opt stack 0
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _SetDCMotorL *****************
  2167 ;; Defined at:
  2168 ;;		line 6 in file "Motors.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  duty_cycle      2   20[BANK0 ] unsigned int 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        2 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    8
  2189 ;; This function calls:
  2190 ;;		_SetDCPWM5
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;;		_SetDCMotorPID
  2194 ;;		_StopMotors
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text9
  2199  0038BA                     __ptext9:
  2200                           	opt stack 0
  2201  0038BA                     _SetDCMotorL:
  2202                           	opt stack 21
  2203                           
  2204                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;incstack = 0
  2208  0038BA  C074  F06E         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  2209  0038BE  C075  F06F         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  2210  0038C2  ECB9  F018         	call	_SetDCPWM5	;wreg free
  2211  0038C6  0012               	return		;funcret
  2212  0038C8                     __end_of_SetDCMotorL:
  2213                           	opt stack 0
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _SetDCPWM5 *****************
  2219 ;; Defined at:
  2220 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;Total ram usage:        6 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    7
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_SetDCMotorL
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text10
  2249  003172                     __ptext10:
  2250                           	opt stack 0
  2251  003172                     _SetDCPWM5:
  2252                           	opt stack 21
  2253                           
  2254                           ;incstack = 0
  2255  003172  C06E  F070         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  2256  003176  C06F  F071         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  2257  00317A  0E06               	movlw	6
  2258  00317C                     u5195:
  2259  00317C  90D8               	bcf	status,0,c
  2260  00317E  0100               	movlb	0	; () banked
  2261  003180  3770               	rlcf	??_SetDCPWM5& (0+255),f,b
  2262  003182  3771               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  2263  003184  2EE8               	decfsz	wreg,f,c
  2264  003186  D7FA               	goto	u5195
  2265  003188  C070  F072         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  2266  00318C  C071  F073         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  2267                           
  2268                           ; BSR set to: 0
  2269  003190  C073  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  2270  003194  C072  F070         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  2271  003198  0100               	movlb	0	; () banked
  2272  00319A  90D8               	bcf	status,0,c
  2273  00319C  3370               	rrcf	??_SetDCPWM5& (0+255),f,b
  2274  00319E  0100               	movlb	0	; () banked
  2275  0031A0  90D8               	bcf	status,0,c
  2276  0031A2  3370               	rrcf	??_SetDCPWM5& (0+255),f,b
  2277  0031A4  0E30               	movlw	48
  2278  0031A6  0100               	movlb	0	; () banked
  2279  0031A8  1770               	andwf	??_SetDCPWM5& (0+255),f,b
  2280  0031AA  5070               	movf	3952,w,c	;volatile
  2281  0031AC  0BCF               	andlw	207
  2282  0031AE  0100               	movlb	0	; () banked
  2283  0031B0  1170               	iorwf	??_SetDCPWM5& (0+255),w,b
  2284  0031B2  6E70               	movwf	3952,c	;volatile
  2285                           
  2286                           ; BSR set to: 0
  2287  0031B4  0012               	return		;funcret
  2288  0031B6                     __end_of_SetDCPWM5:
  2289                           	opt stack 0
  2290                           postinc0	equ	0xFEE
  2291                           wreg	equ	0xFE8
  2292                           status	equ	0xFD8
  2293                           
  2294 ;; *************** function _SendLineMode *****************
  2295 ;; Defined at:
  2296 ;;		line 112 in file "Wireless.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  line_mode       2   21[BANK0 ] PTR const unsigned char 
  2299 ;;		 -> line_mode(1), 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;		None               void
  2304 ;; Registers used:
  2305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;Total ram usage:        2 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    9
  2318 ;; This function calls:
  2319 ;;		_BusyTx
  2320 ;;		_FlushTxBuf
  2321 ;;		_PutCharTxBuf
  2322 ;;		_StartTx
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text11
  2329  0032F4                     __ptext11:
  2330                           	opt stack 0
  2331  0032F4                     _SendLineMode:
  2332                           	opt stack 21
  2333                           
  2334                           ;Wireless.c: 113: while(BusyTx());
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;incstack = 0
  2338  0032F4  D000               	goto	l6180
  2339  0032F6                     l6180:
  2340  0032F6  EC36  F01C         	call	_BusyTx	;wreg free
  2341  0032FA  0900               	iorlw	0
  2342  0032FC  A4D8               	btfss	status,2,c
  2343  0032FE  D7FB               	goto	l6180
  2344                           
  2345                           ;Wireless.c: 114: FlushTxBuf();
  2346  003300  EC4F  F01A         	call	_FlushTxBuf	;wreg free
  2347                           
  2348                           ;Wireless.c: 116: PutCharTxBuf(0xAA);
  2349  003304  0EAA               	movlw	170
  2350  003306  EC3C  F019         	call	_PutCharTxBuf
  2351                           
  2352                           ;Wireless.c: 117: PutCharTxBuf(0x11);
  2353  00330A  0E11               	movlw	17
  2354  00330C  EC3C  F019         	call	_PutCharTxBuf
  2355                           
  2356                           ;Wireless.c: 118: PutCharTxBuf(*line_mode);
  2357  003310  C075  FFD9         	movff	SendLineMode@line_mode,fsr2l
  2358  003314  C076  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  2359  003318  50DF               	movf	indf2,w,c
  2360  00331A  EC3C  F019         	call	_PutCharTxBuf
  2361                           
  2362                           ;Wireless.c: 119: PutCharTxBuf('\r');
  2363  00331E  0E0D               	movlw	13
  2364  003320  EC3C  F019         	call	_PutCharTxBuf
  2365                           
  2366                           ;Wireless.c: 120: PutCharTxBuf('\n');
  2367  003324  0E0A               	movlw	10
  2368  003326  EC3C  F019         	call	_PutCharTxBuf
  2369                           
  2370                           ;Wireless.c: 122: StartTx();
  2371  00332A  EC91  F01C         	call	_StartTx	;wreg free
  2372  00332E  0012               	return		;funcret
  2373  003330                     __end_of_SendLineMode:
  2374                           	opt stack 0
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           indf2	equ	0xFDF
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _ResetMillis0 *****************
  2383 ;; Defined at:
  2384 ;;		line 27 in file "MillisecondTimer.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;		None               void
  2391 ;; Registers used:
  2392 ;;		wreg, status,2
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    7
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text12
  2413  0038F0                     __ptext12:
  2414                           	opt stack 0
  2415  0038F0                     _ResetMillis0:
  2416                           	opt stack 23
  2417                           
  2418                           ;MillisecondTimer.c: 29: millisecond_COUNT0 = 0;
  2419                           
  2420                           ;incstack = 0
  2421  0038F0  0E00               	movlw	0
  2422  0038F2  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  2423  0038F4  0E00               	movlw	0
  2424  0038F6  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  2425  0038F8  0012               	return		;funcret
  2426  0038FA                     __end_of_ResetMillis0:
  2427                           	opt stack 0
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           indf2	equ	0xFDF
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435 ;; *************** function _ReadMillis0 *****************
  2436 ;; Defined at:
  2437 ;;		line 7 in file "MillisecondTimer.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2   14[BANK0 ] unsigned int 
  2444 ;; Registers used:
  2445 ;;		None
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;Total ram usage:        2 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    7
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text13
  2466  0038FA                     __ptext13:
  2467                           	opt stack 0
  2468  0038FA                     _ReadMillis0:
  2469                           	opt stack 23
  2470                           
  2471                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  2472                           
  2473                           ;incstack = 0
  2474  0038FA  C00D  F06E         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  2475  0038FE  C00E  F06F         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  2476  003902  0012               	return		;funcret
  2477  003904                     __end_of_ReadMillis0:
  2478                           	opt stack 0
  2479                           postinc0	equ	0xFEE
  2480                           wreg	equ	0xFE8
  2481                           indf2	equ	0xFDF
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _ReadEchoLength *****************
  2487 ;; Defined at:
  2488 ;;		line 68 in file "Ultrasound.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2   14[BANK0 ] unsigned int 
  2495 ;; Registers used:
  2496 ;;		None
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    7
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text14
  2517  003904                     __ptext14:
  2518                           	opt stack 0
  2519  003904                     _ReadEchoLength:
  2520                           	opt stack 23
  2521                           
  2522                           ;Ultrasound.c: 70: return (echo_time);
  2523                           
  2524                           ;incstack = 0
  2525  003904  C00B  F06E         	movff	_echo_time,?_ReadEchoLength	;volatile
  2526  003908  C00C  F06F         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  2527  00390C  0012               	return		;funcret
  2528  00390E                     __end_of_ReadEchoLength:
  2529                           	opt stack 0
  2530                           postinc0	equ	0xFEE
  2531                           wreg	equ	0xFE8
  2532                           indf2	equ	0xFDF
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _PB2pressed *****************
  2538 ;; Defined at:
  2539 ;;		line 483 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      unsigned char 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    8
  2560 ;; This function calls:
  2561 ;;		_ReadMillis2
  2562 ;;		_ResetMillis2
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text15
  2569  00323A                     __ptext15:
  2570                           	opt stack 0
  2571  00323A                     _PB2pressed:
  2572                           	opt stack 22
  2573                           
  2574                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 484: if(PORTBbits.RB2 == 0) {
  2575                           
  2576                           ;incstack = 0
  2577  00323A  B481               	btfsc	3969,2,c	;volatile
  2578  00323C  D003               	goto	l267
  2579  00323E  D016               	goto	l6108
  2580                           
  2581                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 485: return(0);
  2582  003240  D01A               	goto	l268
  2583                           
  2584                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 486: }
  2585  003242  D017               	goto	l6112
  2586  003244                     l267:
  2587                           
  2588                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 487: else if(PORTBbits.RB2 == 1) {
  2589  003244  A481               	btfss	3969,2,c	;volatile
  2590  003246  D015               	goto	l6112
  2591                           
  2592                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 488: ResetMillis2();
  2593  003248  EC87  F01C         	call	_ResetMillis2	;wreg free
  2594                           
  2595                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 489: while(ReadMillis2() < 10);
  2596  00324C  D000               	goto	l6100
  2597  00324E                     l6100:
  2598  00324E  EC8C  F01C         	call	_ReadMillis2	;wreg free
  2599  003252  0100               	movlb	0	; () banked
  2600  003254  516F               	movf	(?_ReadMillis2+1)& (0+255),w,b
  2601  003256  E105               	bnz	u5690
  2602  003258  0E0A               	movlw	10
  2603  00325A  0100               	movlb	0	; () banked
  2604  00325C  5D6E               	subwf	?_ReadMillis2& (0+255),w,b
  2605  00325E  A0D8               	btfss	status,0,c
  2606  003260  D7F6               	goto	l6100
  2607  003262                     u5690:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 490: if(PORTBbits.RB2 == 1) {
  2611  003262  A481               	btfss	3969,2,c	;volatile
  2612  003264  D003               	goto	l6108
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 491: return(1);
  2616  003266  0E01               	movlw	1
  2617                           
  2618                           ; BSR set to: 0
  2619  003268  D006               	goto	l268
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 492: }
  2623  00326A  D003               	goto	l6112
  2624  00326C                     l6108:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 493: else {
  2628                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 494: return(0);
  2629  00326C  0E00               	movlw	0
  2630                           
  2631                           ; BSR set to: 0
  2632  00326E  D003               	goto	l268
  2633                           
  2634                           ; BSR set to: 0
  2635                           
  2636                           ; BSR set to: 0
  2637  003270  D000               	goto	l6112
  2638  003272                     l6112:
  2639                           
  2640                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 495: }
  2641                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 496: }
  2642                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 498: return(0);
  2643  003272  0E00               	movlw	0
  2644  003274  D000               	goto	l268
  2645  003276                     l268:
  2646  003276  0012               	return		;funcret
  2647  003278                     __end_of_PB2pressed:
  2648                           	opt stack 0
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           indf2	equ	0xFDF
  2652                           fsr2h	equ	0xFDA
  2653                           fsr2l	equ	0xFD9
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function _LoadCalibration *****************
  2657 ;; Defined at:
  2658 ;;		line 604 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  index           1   31[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;Total ram usage:        3 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:   12
  2679 ;; This function calls:
  2680 ;;		_FlashLEDS
  2681 ;;		_GenerateCalibration
  2682 ;;		_ReadCharEEPROM
  2683 ;;		_ReadIntEEPROM
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text16
  2690  002B9C                     __ptext16:
  2691                           	opt stack 0
  2692  002B9C                     _LoadCalibration:
  2693                           	opt stack 18
  2694                           
  2695                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 605: unsigned char index;
  2696                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 607: if(ReadCharEEPROM(0x00) == 0) {
  2697                           
  2698                           ;incstack = 0
  2699  002B9C  0E00               	movlw	0
  2700  002B9E  0100               	movlb	0	; () banked
  2701  002BA0  6F71               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  2702  002BA2  0E00               	movlw	0
  2703  002BA4  6F70               	movwf	ReadCharEEPROM@address& (0+255),b
  2704  002BA6  EC2E  F01C         	call	_ReadCharEEPROM	;wreg free
  2705  002BAA  0900               	iorlw	0
  2706  002BAC  A4D8               	btfss	status,2,c
  2707  002BAE  D005               	goto	l6122
  2708                           
  2709                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 608: FlashLEDS();
  2710  002BB0  ECA7  F01A         	call	_FlashLEDS	;wreg free
  2711                           
  2712                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 609: GenerateCalibration();
  2713  002BB4  EC2E  F012         	call	_GenerateCalibration	;wreg free
  2714                           
  2715                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 610: }
  2716  002BB8  D03B               	goto	l310
  2717  002BBA                     l6122:
  2718                           
  2719                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 612: else {
  2720                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 613: sensor_threshold = ReadIntEEPROM(0x01);
  2721  002BBA  0E00               	movlw	0
  2722  002BBC  0100               	movlb	0	; () banked
  2723  002BBE  6F71               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2724  002BC0  0E01               	movlw	1
  2725  002BC2  6F70               	movwf	ReadIntEEPROM@address& (0+255),b
  2726  002BC4  ECF4  F017         	call	_ReadIntEEPROM	;wreg free
  2727  002BC8  C070  F022         	movff	?_ReadIntEEPROM,_sensor_threshold
  2728  002BCC  C071  F023         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  2729                           
  2730                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 614: for(index = 0; index < 5; index++) {
  2731  002BD0  0E00               	movlw	0
  2732  002BD2  0100               	movlb	0	; () banked
  2733  002BD4  6F7F               	movwf	LoadCalibration@index& (0+255),b
  2734  002BD6                     l6126:
  2735                           
  2736                           ; BSR set to: 0
  2737  002BD6  0E04               	movlw	4
  2738  002BD8  0100               	movlb	0	; () banked
  2739  002BDA  657F               	cpfsgt	LoadCalibration@index& (0+255),b
  2740  002BDC  D001               	goto	l6130
  2741                           
  2742                           ; BSR set to: 0
  2743  002BDE  D028               	goto	l310
  2744  002BE0                     l6130:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 615: sensor_offsets[index] = ReadIntEEPROM(0x03 +
      +                           (2 * index));
  2748  002BE0  0100               	movlb	0	; () banked
  2749  002BE2  517F               	movf	LoadCalibration@index& (0+255),w,b
  2750  002BE4  0100               	movlb	0	; () banked
  2751  002BE6  6F7D               	movwf	??_LoadCalibration& (0+255),b
  2752  002BE8  6B7E               	clrf	(??_LoadCalibration+1)& (0+255),b
  2753  002BEA  90D8               	bcf	status,0,c
  2754  002BEC  0100               	movlb	0	; () banked
  2755  002BEE  377D               	rlcf	??_LoadCalibration& (0+255),f,b
  2756  002BF0  377E               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  2757  002BF2  0E03               	movlw	3
  2758  002BF4  0100               	movlb	0	; () banked
  2759  002BF6  257D               	addwf	??_LoadCalibration& (0+255),w,b
  2760  002BF8  0100               	movlb	0	; () banked
  2761  002BFA  6F70               	movwf	ReadIntEEPROM@address& (0+255),b
  2762  002BFC  0E00               	movlw	0
  2763  002BFE  0100               	movlb	0	; () banked
  2764  002C00  217E               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  2765  002C02  0100               	movlb	0	; () banked
  2766  002C04  6F71               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2767  002C06  ECF4  F017         	call	_ReadIntEEPROM	;wreg free
  2768  002C0A  0100               	movlb	0	; () banked
  2769  002C0C  517F               	movf	LoadCalibration@index& (0+255),w,b
  2770  002C0E  0D02               	mullw	2
  2771  002C10  0EDE               	movlw	low _sensor_offsets
  2772  002C12  24F3               	addwf	prodl,w,c
  2773  002C14  6ED9               	movwf	fsr2l,c
  2774  002C16  0E00               	movlw	high _sensor_offsets
  2775  002C18  20F4               	addwfc	prodh,w,c
  2776  002C1A  6EDA               	movwf	fsr2h,c
  2777  002C1C  0100               	movlb	0	; () banked
  2778  002C1E  C070  FFDE         	movff	?_ReadIntEEPROM,postinc2
  2779  002C22  0100               	movlb	0	; () banked
  2780  002C24  C071  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  2781                           
  2782                           ; BSR set to: 0
  2783  002C28  0100               	movlb	0	; () banked
  2784  002C2A  2B7F               	incf	LoadCalibration@index& (0+255),f,b
  2785  002C2C  D7D4               	goto	l6126
  2786                           
  2787                           ; BSR set to: 0
  2788                           
  2789                           ; BSR set to: 0
  2790  002C2E  D000               	goto	l310
  2791  002C30                     l310:
  2792  002C30  0012               	return		;funcret
  2793  002C32                     __end_of_LoadCalibration:
  2794                           	opt stack 0
  2795                           prodh	equ	0xFF4
  2796                           prodl	equ	0xFF3
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           indf2	equ	0xFDF
  2800                           postinc2	equ	0xFDE
  2801                           postdec2	equ	0xFDD
  2802                           fsr2h	equ	0xFDA
  2803                           fsr2l	equ	0xFD9
  2804                           status	equ	0xFD8
  2805                           
  2806 ;; *************** function _ReadIntEEPROM *****************
  2807 ;; Defined at:
  2808 ;;		line 66 in file "eeprom.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  address         2   16[BANK0 ] unsigned int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  data            2   21[BANK0 ] unsigned int 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2   16[BANK0 ] unsigned int 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;Total ram usage:        7 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    8
  2829 ;; This function calls:
  2830 ;;		_ReadEEPROM
  2831 ;; This function is called by:
  2832 ;;		_LoadCalibration
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text17
  2837  002FE8                     __ptext17:
  2838                           	opt stack 0
  2839  002FE8                     _ReadIntEEPROM:
  2840                           	opt stack 21
  2841                           
  2842                           ;eeprom.c: 67: unsigned int data;
  2843                           ;eeprom.c: 69: data = (ReadEEPROM(address) << 8) & 0xFF00;
  2844                           
  2845                           ;incstack = 0
  2846  002FE8  C070  F06E         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  2847  002FEC  C071  F06F         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  2848  002FF0  EC1F  F01A         	call	_ReadEEPROM	;wreg free
  2849  002FF4  0100               	movlb	0	; () banked
  2850  002FF6  6F72               	movwf	??_ReadIntEEPROM& (0+255),b
  2851  002FF8  0100               	movlb	0	; () banked
  2852  002FFA  5172               	movf	??_ReadIntEEPROM& (0+255),w,b
  2853  002FFC  0100               	movlb	0	; () banked
  2854  002FFE  6F74               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  2855  003000  6B73               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  2856  003002  0E00               	movlw	0
  2857  003004  0100               	movlb	0	; () banked
  2858  003006  1573               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  2859  003008  0100               	movlb	0	; () banked
  2860  00300A  6F75               	movwf	ReadIntEEPROM@data& (0+255),b
  2861  00300C  0EFF               	movlw	255
  2862  00300E  0100               	movlb	0	; () banked
  2863  003010  1574               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  2864  003012  0100               	movlb	0	; () banked
  2865  003014  6F76               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  2866                           
  2867                           ;eeprom.c: 70: data |= ReadEEPROM(address + 1) & 0x00FF;
  2868  003016  0E01               	movlw	1
  2869  003018  0100               	movlb	0	; () banked
  2870  00301A  2570               	addwf	ReadIntEEPROM@address& (0+255),w,b
  2871  00301C  0100               	movlb	0	; () banked
  2872  00301E  6F6E               	movwf	ReadEEPROM@address& (0+255),b
  2873  003020  0E00               	movlw	0
  2874  003022  0100               	movlb	0	; () banked
  2875  003024  2171               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  2876  003026  0100               	movlb	0	; () banked
  2877  003028  6F6F               	movwf	(ReadEEPROM@address+1)& (0+255),b
  2878  00302A  EC1F  F01A         	call	_ReadEEPROM	;wreg free
  2879  00302E  0100               	movlb	0	; () banked
  2880  003030  6F72               	movwf	??_ReadIntEEPROM& (0+255),b
  2881  003032  0100               	movlb	0	; () banked
  2882  003034  5172               	movf	??_ReadIntEEPROM& (0+255),w,b
  2883  003036  0100               	movlb	0	; () banked
  2884  003038  1375               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;eeprom.c: 72: return(data);
  2888  00303A  C075  F070         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  2889  00303E  C076  F071         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  2890  003042  D000               	goto	l592
  2891  003044                     l592:
  2892                           
  2893                           ; BSR set to: 0
  2894  003044  0012               	return		;funcret
  2895  003046                     __end_of_ReadIntEEPROM:
  2896                           	opt stack 0
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           postinc0	equ	0xFEE
  2900                           wreg	equ	0xFE8
  2901                           indf2	equ	0xFDF
  2902                           postinc2	equ	0xFDE
  2903                           postdec2	equ	0xFDD
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _ReadCharEEPROM *****************
  2909 ;; Defined at:
  2910 ;;		line 76 in file "eeprom.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  address         2   16[BANK0 ] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      unsigned char 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        2 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    8
  2931 ;; This function calls:
  2932 ;;		_ReadEEPROM
  2933 ;; This function is called by:
  2934 ;;		_LoadCalibration
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text18
  2939  00385C                     __ptext18:
  2940                           	opt stack 0
  2941  00385C                     _ReadCharEEPROM:
  2942                           	opt stack 21
  2943                           
  2944                           ;eeprom.c: 77: return(ReadEEPROM(address));
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;incstack = 0
  2948  00385C  C070  F06E         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  2949  003860  C071  F06F         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  2950  003864  EC1F  F01A         	call	_ReadEEPROM	;wreg free
  2951  003868  D000               	goto	l595
  2952  00386A                     l595:
  2953  00386A  0012               	return		;funcret
  2954  00386C                     __end_of_ReadCharEEPROM:
  2955                           	opt stack 0
  2956                           prodh	equ	0xFF4
  2957                           prodl	equ	0xFF3
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _ReadEEPROM *****************
  2968 ;; Defined at:
  2969 ;;		line 37 in file "eeprom.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  address         2   14[BANK0 ] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      unsigned char 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;Total ram usage:        2 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    7
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_ReadIntEEPROM
  2994 ;;		_ReadCharEEPROM
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text19
  2999  00343E                     __ptext19:
  3000                           	opt stack 0
  3001  00343E                     _ReadEEPROM:
  3002                           	opt stack 21
  3003                           
  3004                           ;eeprom.c: 38: if(address > 0x3FF) {
  3005                           
  3006                           ;incstack = 0
  3007  00343E  0E04               	movlw	4
  3008  003440  0100               	movlb	0	; () banked
  3009  003442  5D6F               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  3010  003444  A0D8               	btfss	status,0,c
  3011  003446  D002               	goto	l5666
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;eeprom.c: 39: return(0);
  3015  003448  0E00               	movlw	0
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;eeprom.c: 40: }
  3019                           
  3020                           ; BSR set to: 0
  3021  00344A  D010               	goto	l579
  3022  00344C                     l5666:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;eeprom.c: 41: else {
  3026                           ;eeprom.c: 42: EEADR = address & 0x0F;
  3027  00344C  0100               	movlb	0	; () banked
  3028  00344E  516E               	movf	ReadEEPROM@address& (0+255),w,b
  3029  003450  0B0F               	andlw	15
  3030  003452  6EA9               	movwf	4009,c	;volatile
  3031                           
  3032                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x03;
  3033  003454  0100               	movlb	0	; () banked
  3034  003456  516F               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  3035  003458  0B03               	andlw	3
  3036  00345A  6EAA               	movwf	4010,c	;volatile
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  3040  00345C  9EA6               	bcf	4006,7,c	;volatile
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  3044  00345E  9CA6               	bcf	4006,6,c	;volatile
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;eeprom.c: 46: EECON1bits.RD = 1;
  3048  003460  80A6               	bsf	4006,0,c	;volatile
  3049                           
  3050                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  3051  003462  D000               	goto	l581
  3052  003464                     l581:
  3053  003464  B0A6               	btfsc	4006,0,c	;volatile
  3054  003466  D7FE               	goto	l581
  3055                           
  3056                           ;eeprom.c: 50: return(EEDATA);
  3057  003468  50A8               	movf	4008,w,c	;volatile
  3058  00346A  D000               	goto	l579
  3059  00346C                     l579:
  3060  00346C  0012               	return		;funcret
  3061  00346E                     __end_of_ReadEEPROM:
  3062                           	opt stack 0
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           indf2	equ	0xFDF
  3068                           postinc2	equ	0xFDE
  3069                           postdec2	equ	0xFDD
  3070                           fsr2h	equ	0xFDA
  3071                           fsr2l	equ	0xFD9
  3072                           status	equ	0xFD8
  3073                           
  3074 ;; *************** function _GenerateCalibration *****************
  3075 ;; Defined at:
  3076 ;;		line 564 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  index           1   28[BANK0 ] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;		None               void
  3083 ;; Registers used:
  3084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;Total ram usage:        3 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:   11
  3097 ;; This function calls:
  3098 ;;		_CalibrateOffsets
  3099 ;;		_CalibrateThreshold
  3100 ;;		_Delay10KTCYx
  3101 ;;		_FlashLEDS
  3102 ;;		_PB1pressed
  3103 ;;		_SendOffsets
  3104 ;;		_SendStatus
  3105 ;;		_SendThreshold
  3106 ;;		_WriteCharEEPROM
  3107 ;;		_WriteIntEEPROM
  3108 ;; This function is called by:
  3109 ;;		_LoadCalibration
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text20
  3115  00245C                     __ptext20:
  3116                           	opt stack 0
  3117  00245C                     _GenerateCalibration:
  3118                           	opt stack 18
  3119                           
  3120                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 565: unsigned char index;
  3121                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 568: SendStatus(0x03);
  3122                           
  3123                           ;incstack = 0
  3124  00245C  0E03               	movlw	3
  3125  00245E  EC98  F019         	call	_SendStatus
  3126                           
  3127                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 569: LATJ = 0x03;
  3128  002462  0E03               	movlw	3
  3129  002464  6E91               	movwf	3985,c	;volatile
  3130                           
  3131                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 571: while(PB1pressed() == 0) {
  3132  002466  D006               	goto	l5940
  3133  002468                     l5936:
  3134                           
  3135                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 573: CalibrateOffsets();
  3136  002468  EC14  F017         	call	_CalibrateOffsets	;wreg free
  3137                           
  3138                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 574: Delay10KTCYx(10);
  3139  00246C  0E0A               	movlw	10
  3140  00246E  EC5F  F01B         	call	_Delay10KTCYx
  3141  002472  D000               	goto	l5940
  3142  002474                     l5940:
  3143  002474  EC5B  F019         	call	_PB1pressed	;wreg free
  3144  002478  0900               	iorlw	0
  3145  00247A  B4D8               	btfsc	status,2,c
  3146  00247C  D7F5               	goto	l5936
  3147                           
  3148                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 576: }
  3149                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 578: for(index = 0; index < 5; index++) {
  3150  00247E  0E00               	movlw	0
  3151  002480  0100               	movlb	0	; () banked
  3152  002482  6F7C               	movwf	GenerateCalibration@index& (0+255),b
  3153  002484                     l5944:
  3154                           
  3155                           ; BSR set to: 0
  3156  002484  0E04               	movlw	4
  3157  002486  0100               	movlb	0	; () banked
  3158  002488  657C               	cpfsgt	GenerateCalibration@index& (0+255),b
  3159  00248A  D001               	goto	l5948
  3160                           
  3161                           ; BSR set to: 0
  3162  00248C  D025               	goto	l5954
  3163  00248E                     l5948:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 579: WriteIntEEPROM(0x03 + (2 * index), sensor_of
      +                          fsets[index]);
  3167  00248E  0100               	movlb	0	; () banked
  3168  002490  517C               	movf	GenerateCalibration@index& (0+255),w,b
  3169  002492  0100               	movlb	0	; () banked
  3170  002494  6F7A               	movwf	??_GenerateCalibration& (0+255),b
  3171  002496  6B7B               	clrf	(??_GenerateCalibration+1)& (0+255),b
  3172  002498  90D8               	bcf	status,0,c
  3173  00249A  0100               	movlb	0	; () banked
  3174  00249C  377A               	rlcf	??_GenerateCalibration& (0+255),f,b
  3175  00249E  377B               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  3176  0024A0  0E03               	movlw	3
  3177  0024A2  0100               	movlb	0	; () banked
  3178  0024A4  257A               	addwf	??_GenerateCalibration& (0+255),w,b
  3179  0024A6  0100               	movlb	0	; () banked
  3180  0024A8  6F71               	movwf	WriteIntEEPROM@address& (0+255),b
  3181  0024AA  0E00               	movlw	0
  3182  0024AC  0100               	movlb	0	; () banked
  3183  0024AE  217B               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  3184  0024B0  0100               	movlb	0	; () banked
  3185  0024B2  6F72               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  3186  0024B4  0100               	movlb	0	; () banked
  3187  0024B6  517C               	movf	GenerateCalibration@index& (0+255),w,b
  3188  0024B8  0D02               	mullw	2
  3189  0024BA  0EDE               	movlw	low _sensor_offsets
  3190  0024BC  24F3               	addwf	prodl,w,c
  3191  0024BE  6ED9               	movwf	fsr2l,c
  3192  0024C0  0E00               	movlw	high _sensor_offsets
  3193  0024C2  20F4               	addwfc	prodh,w,c
  3194  0024C4  6EDA               	movwf	fsr2h,c
  3195  0024C6  CFDE F073          	movff	postinc2,WriteIntEEPROM@data
  3196  0024CA  CFDD F074          	movff	postdec2,WriteIntEEPROM@data+1
  3197  0024CE  ECED  F019         	call	_WriteIntEEPROM	;wreg free
  3198  0024D2  0100               	movlb	0	; () banked
  3199  0024D4  2B7C               	incf	GenerateCalibration@index& (0+255),f,b
  3200  0024D6  D7D6               	goto	l5944
  3201  0024D8                     l5954:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 580: }
  3205                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 582: SendOffsets(sensor_offsets);
  3206  0024D8  0EDE               	movlw	low _sensor_offsets
  3207  0024DA  0100               	movlb	0	; () banked
  3208  0024DC  6F75               	movwf	SendOffsets@offsets_array& (0+255),b
  3209  0024DE  0E00               	movlw	high _sensor_offsets
  3210  0024E0  0100               	movlb	0	; () banked
  3211  0024E2  6F76               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  3212  0024E4  EC2C  F015         	call	_SendOffsets	;wreg free
  3213                           
  3214                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 584: FlashLEDS();
  3215  0024E8  ECA7  F01A         	call	_FlashLEDS	;wreg free
  3216                           
  3217                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 587: SendStatus(0x04);
  3218  0024EC  0E04               	movlw	4
  3219  0024EE  EC98  F019         	call	_SendStatus
  3220                           
  3221                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 589: while(PB1pressed() == 0) {
  3222  0024F2  D006               	goto	l5964
  3223  0024F4                     l5960:
  3224                           
  3225                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 591: CalibrateThreshold();
  3226  0024F4  EC23  F018         	call	_CalibrateThreshold	;wreg free
  3227                           
  3228                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 592: Delay10KTCYx(10);
  3229  0024F8  0E0A               	movlw	10
  3230  0024FA  EC5F  F01B         	call	_Delay10KTCYx
  3231  0024FE  D000               	goto	l5964
  3232  002500                     l5964:
  3233  002500  EC5B  F019         	call	_PB1pressed	;wreg free
  3234  002504  0900               	iorlw	0
  3235  002506  B4D8               	btfsc	status,2,c
  3236  002508  D7F5               	goto	l5960
  3237                           
  3238                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 594: }
  3239                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 596: WriteIntEEPROM(0x01, sensor_threshold);
  3240  00250A  0E00               	movlw	0
  3241  00250C  0100               	movlb	0	; () banked
  3242  00250E  6F72               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  3243  002510  0E01               	movlw	1
  3244  002512  6F71               	movwf	WriteIntEEPROM@address& (0+255),b
  3245  002514  C022  F073         	movff	_sensor_threshold,WriteIntEEPROM@data
  3246  002518  C023  F074         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  3247  00251C  ECED  F019         	call	_WriteIntEEPROM	;wreg free
  3248                           
  3249                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 597: WriteCharEEPROM(0x00, 1);
  3250  002520  0E00               	movlw	0
  3251  002522  0100               	movlb	0	; () banked
  3252  002524  6F72               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  3253  002526  0E00               	movlw	0
  3254  002528  6F71               	movwf	WriteCharEEPROM@address& (0+255),b
  3255  00252A  0E01               	movlw	1
  3256  00252C  0100               	movlb	0	; () banked
  3257  00252E  6F73               	movwf	WriteCharEEPROM@data& (0+255),b
  3258  002530  ECF8  F01B         	call	_WriteCharEEPROM	;wreg free
  3259                           
  3260                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 599: SendThreshold(sensor_threshold_ptr);
  3261  002534  C0F0  F075         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  3262  002538  C0F1  F076         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  3263  00253C  EC89  F017         	call	_SendThreshold	;wreg free
  3264  002540  0012               	return		;funcret
  3265  002542                     __end_of_GenerateCalibration:
  3266                           	opt stack 0
  3267                           prodh	equ	0xFF4
  3268                           prodl	equ	0xFF3
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           postdec2	equ	0xFDD
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _WriteIntEEPROM *****************
  3279 ;; Defined at:
  3280 ;;		line 56 in file "eeprom.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  address         2   17[BANK0 ] unsigned int 
  3283 ;;  data            2   19[BANK0 ] unsigned int 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;Total ram usage:        4 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    8
  3302 ;; This function calls:
  3303 ;;		_WriteEEPROM
  3304 ;; This function is called by:
  3305 ;;		_GenerateCalibration
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text21
  3310  0033DA                     __ptext21:
  3311                           	opt stack 0
  3312  0033DA                     _WriteIntEEPROM:
  3313                           	opt stack 20
  3314                           
  3315                           ;eeprom.c: 57: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  3316                           
  3317                           ;incstack = 0
  3318  0033DA  C071  F06E         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  3319  0033DE  C072  F06F         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  3320  0033E2  0100               	movlb	0	; () banked
  3321  0033E4  5174               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  3322  0033E6  0100               	movlb	0	; () banked
  3323  0033E8  6F70               	movwf	WriteEEPROM@data& (0+255),b
  3324  0033EA  ECFD  F018         	call	_WriteEEPROM	;wreg free
  3325                           
  3326                           ;eeprom.c: 58: WriteEEPROM(address + 1, (data & 0x00FF));
  3327  0033EE  0E01               	movlw	1
  3328  0033F0  0100               	movlb	0	; () banked
  3329  0033F2  2571               	addwf	WriteIntEEPROM@address& (0+255),w,b
  3330  0033F4  0100               	movlb	0	; () banked
  3331  0033F6  6F6E               	movwf	WriteEEPROM@address& (0+255),b
  3332  0033F8  0E00               	movlw	0
  3333  0033FA  0100               	movlb	0	; () banked
  3334  0033FC  2172               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  3335  0033FE  0100               	movlb	0	; () banked
  3336  003400  6F6F               	movwf	(WriteEEPROM@address+1)& (0+255),b
  3337  003402  C073  F070         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  3338  003406  ECFD  F018         	call	_WriteEEPROM	;wreg free
  3339  00340A  0012               	return		;funcret
  3340  00340C                     __end_of_WriteIntEEPROM:
  3341                           	opt stack 0
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           indf2	equ	0xFDF
  3347                           postinc2	equ	0xFDE
  3348                           postdec2	equ	0xFDD
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8
  3352                           
  3353 ;; *************** function _WriteCharEEPROM *****************
  3354 ;; Defined at:
  3355 ;;		line 62 in file "eeprom.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  address         2   17[BANK0 ] unsigned int 
  3358 ;;  data            1   19[BANK0 ] unsigned char 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;Total ram usage:        3 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    8
  3377 ;; This function calls:
  3378 ;;		_WriteEEPROM
  3379 ;; This function is called by:
  3380 ;;		_GenerateCalibration
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text22
  3385  0037F0                     __ptext22:
  3386                           	opt stack 0
  3387  0037F0                     _WriteCharEEPROM:
  3388                           	opt stack 20
  3389                           
  3390                           ;eeprom.c: 63: WriteEEPROM(address, data);
  3391                           
  3392                           ;incstack = 0
  3393  0037F0  C071  F06E         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  3394  0037F4  C072  F06F         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  3395  0037F8  C073  F070         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  3396  0037FC  ECFD  F018         	call	_WriteEEPROM	;wreg free
  3397  003800  0012               	return		;funcret
  3398  003802                     __end_of_WriteCharEEPROM:
  3399                           	opt stack 0
  3400                           prodh	equ	0xFF4
  3401                           prodl	equ	0xFF3
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _WriteEEPROM *****************
  3412 ;; Defined at:
  3413 ;;		line 3 in file "eeprom.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  address         2   14[BANK0 ] unsigned int 
  3416 ;;  data            1   16[BANK0 ] unsigned char 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      unsigned char 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3428 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;Total ram usage:        3 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    7
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_WriteIntEEPROM
  3439 ;;		_WriteCharEEPROM
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text23
  3444  0031FA                     __ptext23:
  3445                           	opt stack 0
  3446  0031FA                     _WriteEEPROM:
  3447                           	opt stack 20
  3448                           
  3449                           ;eeprom.c: 4: if(address > 0x03FF) {
  3450                           
  3451                           ;incstack = 0
  3452  0031FA  0E04               	movlw	4
  3453  0031FC  0100               	movlb	0	; () banked
  3454  0031FE  5D6F               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  3455  003200  B0D8               	btfsc	status,0,c
  3456  003202  D01A               	goto	l569
  3457  003204  D001               	goto	l568
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;eeprom.c: 6: }
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;eeprom.c: 5: return(1);
  3464                           ;	Return value of _WriteEEPROM is never used
  3465  003206  D018               	goto	l569
  3466  003208                     l568:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;eeprom.c: 7: else {
  3470                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  3471  003208  C06E  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  3475  00320C  0100               	movlb	0	; () banked
  3476  00320E  516F               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  3477  003210  0B03               	andlw	3
  3478  003212  6EAA               	movwf	4010,c	;volatile
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;eeprom.c: 10: EEDATA = data;
  3482  003214  C070  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  3486  003218  9EA6               	bcf	4006,7,c	;volatile
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  3490  00321A  9CA6               	bcf	4006,6,c	;volatile
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  3494  00321C  84A6               	bsf	4006,2,c	;volatile
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  3498  00321E  9EF2               	bcf	intcon,7,c	;volatile
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;eeprom.c: 17: EECON2 = 0x55;
  3502  003220  0E55               	movlw	85
  3503  003222  6EA7               	movwf	4007,c	;volatile
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;eeprom.c: 18: EECON2 = 0x0AA;
  3507  003224  0EAA               	movlw	170
  3508  003226  6EA7               	movwf	4007,c	;volatile
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;eeprom.c: 19: EECON1bits.WR = 1;
  3512  003228  82A6               	bsf	4006,1,c	;volatile
  3513                           
  3514                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  3515  00322A  D000               	goto	l571
  3516  00322C                     l571:
  3517  00322C  B2A6               	btfsc	4006,1,c	;volatile
  3518  00322E  D7FE               	goto	l571
  3519                           
  3520                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  3521  003230  94A6               	bcf	4006,2,c	;volatile
  3522                           
  3523                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  3524  003232  8EF2               	bsf	intcon,7,c	;volatile
  3525                           
  3526                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  3527  003234  50A6               	movf	4006,w,c	;volatile
  3528                           
  3529                           ;eeprom.c: 29: else {
  3530                           ;eeprom.c: 30: return(1);
  3531                           ;	Return value of _WriteEEPROM is never used
  3532                           
  3533                           ;eeprom.c: 28: }
  3534                           
  3535                           ;eeprom.c: 27: return(0);
  3536                           ;	Return value of _WriteEEPROM is never used
  3537  003236  D000               	goto	l569
  3538  003238                     l569:
  3539  003238  0012               	return		;funcret
  3540  00323A                     __end_of_WriteEEPROM:
  3541                           	opt stack 0
  3542                           prodh	equ	0xFF4
  3543                           prodl	equ	0xFF3
  3544                           intcon	equ	0xFF2
  3545                           postinc0	equ	0xFEE
  3546                           wreg	equ	0xFE8
  3547                           indf2	equ	0xFDF
  3548                           postinc2	equ	0xFDE
  3549                           postdec2	equ	0xFDD
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8
  3553                           
  3554 ;; *************** function _SendThreshold *****************
  3555 ;; Defined at:
  3556 ;;		line 146 in file "Wireless.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  sensor_thres    2   21[BANK0 ] PTR const int 
  3559 ;;		 -> NULL(0), sensor_threshold(2), 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;		None               void
  3564 ;; Registers used:
  3565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;Total ram usage:        4 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    9
  3578 ;; This function calls:
  3579 ;;		_BusyTx
  3580 ;;		_FlushTxBuf
  3581 ;;		_PutCharTxBuf
  3582 ;;		_StartTx
  3583 ;; This function is called by:
  3584 ;;		_GenerateCalibration
  3585 ;;		_main
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text24
  3590  002F12                     __ptext24:
  3591                           	opt stack 0
  3592  002F12                     _SendThreshold:
  3593                           	opt stack 21
  3594                           
  3595                           ;Wireless.c: 147: while(BusyTx());
  3596                           
  3597                           ;incstack = 0
  3598  002F12  D000               	goto	l5642
  3599  002F14                     l5642:
  3600  002F14  EC36  F01C         	call	_BusyTx	;wreg free
  3601  002F18  0900               	iorlw	0
  3602  002F1A  A4D8               	btfss	status,2,c
  3603  002F1C  D7FB               	goto	l5642
  3604                           
  3605                           ;Wireless.c: 148: FlushTxBuf();
  3606  002F1E  EC4F  F01A         	call	_FlushTxBuf	;wreg free
  3607                           
  3608                           ;Wireless.c: 150: PutCharTxBuf(0xAA);
  3609  002F22  0EAA               	movlw	170
  3610  002F24  EC3C  F019         	call	_PutCharTxBuf
  3611                           
  3612                           ;Wireless.c: 151: PutCharTxBuf(0x31);
  3613  002F28  0E31               	movlw	49
  3614  002F2A  EC3C  F019         	call	_PutCharTxBuf
  3615                           
  3616                           ;Wireless.c: 153: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  3617  002F2E  C075  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3618  002F32  C076  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3619  002F36  CFDE F077          	movff	postinc2,??_SendThreshold
  3620  002F3A  CFDD F078          	movff	postdec2,??_SendThreshold+1
  3621  002F3E  C078  F077         	movff	??_SendThreshold+1,??_SendThreshold
  3622  002F42  0100               	movlb	0	; () banked
  3623  002F44  6B78               	clrf	(??_SendThreshold+1)& (0+255),b
  3624  002F46  BF77               	btfsc	??_SendThreshold& (0+255),7,b
  3625  002F48  6978               	setf	(??_SendThreshold+1)& (0+255),b
  3626  002F4A  0100               	movlb	0	; () banked
  3627  002F4C  5177               	movf	??_SendThreshold& (0+255),w,b
  3628  002F4E  EC3C  F019         	call	_PutCharTxBuf
  3629                           
  3630                           ;Wireless.c: 154: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  3631  002F52  C075  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3632  002F56  C076  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3633  002F5A  50DF               	movf	indf2,w,c
  3634  002F5C  EC3C  F019         	call	_PutCharTxBuf
  3635                           
  3636                           ;Wireless.c: 156: PutCharTxBuf('\r');
  3637  002F60  0E0D               	movlw	13
  3638  002F62  EC3C  F019         	call	_PutCharTxBuf
  3639                           
  3640                           ;Wireless.c: 157: PutCharTxBuf('\n');
  3641  002F66  0E0A               	movlw	10
  3642  002F68  EC3C  F019         	call	_PutCharTxBuf
  3643                           
  3644                           ;Wireless.c: 158: while (BusyTx());
  3645  002F6C  D000               	goto	l5646
  3646  002F6E                     l5646:
  3647  002F6E  EC36  F01C         	call	_BusyTx	;wreg free
  3648  002F72  0900               	iorlw	0
  3649  002F74  A4D8               	btfss	status,2,c
  3650  002F76  D7FB               	goto	l5646
  3651                           
  3652                           ;Wireless.c: 159: StartTx();
  3653  002F78  EC91  F01C         	call	_StartTx	;wreg free
  3654  002F7C  0012               	return		;funcret
  3655  002F7E                     __end_of_SendThreshold:
  3656                           	opt stack 0
  3657                           prodh	equ	0xFF4
  3658                           prodl	equ	0xFF3
  3659                           intcon	equ	0xFF2
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _SendStatus *****************
  3670 ;; Defined at:
  3671 ;;		line 99 in file "Wireless.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  status_code     1    wreg     const unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  status_code     1   21[BANK0 ] const unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        1 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    9
  3692 ;; This function calls:
  3693 ;;		_BusyTx
  3694 ;;		_FlushTxBuf
  3695 ;;		_PutCharTxBuf
  3696 ;;		_StartTx
  3697 ;; This function is called by:
  3698 ;;		_GenerateCalibration
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text25
  3704  003330                     __ptext25:
  3705                           	opt stack 0
  3706  003330                     _SendStatus:
  3707                           	opt stack 21
  3708                           
  3709                           ;incstack = 0
  3710                           ;SendStatus@status_code stored from wreg
  3711  003330  0100               	movlb	0	; () banked
  3712  003332  6F75               	movwf	SendStatus@status_code& (0+255),b
  3713                           
  3714                           ; BSR set to: 0
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;Wireless.c: 100: while(BusyTx());
  3718  003334  D000               	goto	l5606
  3719  003336                     l5606:
  3720  003336  EC36  F01C         	call	_BusyTx	;wreg free
  3721  00333A  0900               	iorlw	0
  3722  00333C  A4D8               	btfss	status,2,c
  3723  00333E  D7FB               	goto	l5606
  3724                           
  3725                           ;Wireless.c: 101: FlushTxBuf();
  3726  003340  EC4F  F01A         	call	_FlushTxBuf	;wreg free
  3727                           
  3728                           ;Wireless.c: 103: PutCharTxBuf(0xAA);
  3729  003344  0EAA               	movlw	170
  3730  003346  EC3C  F019         	call	_PutCharTxBuf
  3731                           
  3732                           ;Wireless.c: 104: PutCharTxBuf(0x01);
  3733  00334A  0E01               	movlw	1
  3734  00334C  EC3C  F019         	call	_PutCharTxBuf
  3735                           
  3736                           ;Wireless.c: 105: PutCharTxBuf(status_code);
  3737  003350  0100               	movlb	0	; () banked
  3738  003352  5175               	movf	SendStatus@status_code& (0+255),w,b
  3739  003354  EC3C  F019         	call	_PutCharTxBuf
  3740                           
  3741                           ;Wireless.c: 106: PutCharTxBuf('\r');
  3742  003358  0E0D               	movlw	13
  3743  00335A  EC3C  F019         	call	_PutCharTxBuf
  3744                           
  3745                           ;Wireless.c: 107: PutCharTxBuf('\n');
  3746  00335E  0E0A               	movlw	10
  3747  003360  EC3C  F019         	call	_PutCharTxBuf
  3748                           
  3749                           ;Wireless.c: 109: StartTx();
  3750  003364  EC91  F01C         	call	_StartTx	;wreg free
  3751  003368  0012               	return		;funcret
  3752  00336A                     __end_of_SendStatus:
  3753                           	opt stack 0
  3754                           prodh	equ	0xFF4
  3755                           prodl	equ	0xFF3
  3756                           intcon	equ	0xFF2
  3757                           postinc0	equ	0xFEE
  3758                           wreg	equ	0xFE8
  3759                           indf2	equ	0xFDF
  3760                           postinc2	equ	0xFDE
  3761                           postdec2	equ	0xFDD
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function _SendOffsets *****************
  3767 ;; Defined at:
  3768 ;;		line 125 in file "Wireless.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  offsets_arra    2   21[BANK0 ] PTR const int 
  3771 ;;		 -> sensor_offsets(10), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  index           1   25[BANK0 ] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:        5 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    9
  3790 ;; This function calls:
  3791 ;;		_BusyTx
  3792 ;;		_FlushTxBuf
  3793 ;;		_PutCharTxBuf
  3794 ;;		_StartTx
  3795 ;; This function is called by:
  3796 ;;		_GenerateCalibration
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text26
  3802  002A58                     __ptext26:
  3803                           	opt stack 0
  3804  002A58                     _SendOffsets:
  3805                           	opt stack 21
  3806                           
  3807                           ;Wireless.c: 126: unsigned char index;
  3808                           ;Wireless.c: 128: while(BusyTx());
  3809                           
  3810                           ;incstack = 0
  3811  002A58  D000               	goto	l5616
  3812  002A5A                     l5616:
  3813  002A5A  EC36  F01C         	call	_BusyTx	;wreg free
  3814  002A5E  0900               	iorlw	0
  3815  002A60  A4D8               	btfss	status,2,c
  3816  002A62  D7FB               	goto	l5616
  3817                           
  3818                           ;Wireless.c: 129: FlushTxBuf();
  3819  002A64  EC4F  F01A         	call	_FlushTxBuf	;wreg free
  3820                           
  3821                           ;Wireless.c: 131: PutCharTxBuf(0xAA);
  3822  002A68  0EAA               	movlw	170
  3823  002A6A  EC3C  F019         	call	_PutCharTxBuf
  3824                           
  3825                           ;Wireless.c: 132: PutCharTxBuf(0x21);
  3826  002A6E  0E21               	movlw	33
  3827  002A70  EC3C  F019         	call	_PutCharTxBuf
  3828                           
  3829                           ;Wireless.c: 134: for(index = 0; index < 5; index++) {
  3830  002A74  0E00               	movlw	0
  3831  002A76  0100               	movlb	0	; () banked
  3832  002A78  6F79               	movwf	SendOffsets@index& (0+255),b
  3833  002A7A                     l5622:
  3834                           
  3835                           ; BSR set to: 0
  3836  002A7A  0E04               	movlw	4
  3837  002A7C  0100               	movlb	0	; () banked
  3838  002A7E  6579               	cpfsgt	SendOffsets@index& (0+255),b
  3839  002A80  D001               	goto	l5626
  3840                           
  3841                           ; BSR set to: 0
  3842  002A82  D02C               	goto	l5632
  3843  002A84                     l5626:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;Wireless.c: 135: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3847  002A84  0100               	movlb	0	; () banked
  3848  002A86  5179               	movf	SendOffsets@index& (0+255),w,b
  3849  002A88  0D02               	mullw	2
  3850  002A8A  50F3               	movf	prodl,w,c
  3851  002A8C  0100               	movlb	0	; () banked
  3852  002A8E  2575               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3853  002A90  6ED9               	movwf	fsr2l,c
  3854  002A92  50F4               	movf	prodh,w,c
  3855  002A94  0100               	movlb	0	; () banked
  3856  002A96  2176               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3857  002A98  6EDA               	movwf	fsr2h,c
  3858  002A9A  CFDE F077          	movff	postinc2,??_SendOffsets
  3859  002A9E  CFDD F078          	movff	postdec2,??_SendOffsets+1
  3860  002AA2  C078  F077         	movff	??_SendOffsets+1,??_SendOffsets
  3861  002AA6  0100               	movlb	0	; () banked
  3862  002AA8  6B78               	clrf	(??_SendOffsets+1)& (0+255),b
  3863  002AAA  BF77               	btfsc	??_SendOffsets& (0+255),7,b
  3864  002AAC  6978               	setf	(??_SendOffsets+1)& (0+255),b
  3865  002AAE  0100               	movlb	0	; () banked
  3866  002AB0  5177               	movf	??_SendOffsets& (0+255),w,b
  3867  002AB2  EC3C  F019         	call	_PutCharTxBuf
  3868                           
  3869                           ;Wireless.c: 136: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3870  002AB6  0100               	movlb	0	; () banked
  3871  002AB8  5179               	movf	SendOffsets@index& (0+255),w,b
  3872  002ABA  0D02               	mullw	2
  3873  002ABC  50F3               	movf	prodl,w,c
  3874  002ABE  0100               	movlb	0	; () banked
  3875  002AC0  2575               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3876  002AC2  6ED9               	movwf	fsr2l,c
  3877  002AC4  50F4               	movf	prodh,w,c
  3878  002AC6  0100               	movlb	0	; () banked
  3879  002AC8  2176               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3880  002ACA  6EDA               	movwf	fsr2h,c
  3881  002ACC  50DF               	movf	indf2,w,c
  3882  002ACE  0DFF               	mullw	255
  3883  002AD0  50F3               	movf	prodl,w,c
  3884  002AD2  EC3C  F019         	call	_PutCharTxBuf
  3885  002AD6  0100               	movlb	0	; () banked
  3886  002AD8  2B79               	incf	SendOffsets@index& (0+255),f,b
  3887  002ADA  D7CF               	goto	l5622
  3888  002ADC                     l5632:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;Wireless.c: 137: }
  3892                           ;Wireless.c: 139: PutCharTxBuf('\r');
  3893  002ADC  0E0D               	movlw	13
  3894  002ADE  EC3C  F019         	call	_PutCharTxBuf
  3895                           
  3896                           ;Wireless.c: 140: PutCharTxBuf('\n');
  3897  002AE2  0E0A               	movlw	10
  3898  002AE4  EC3C  F019         	call	_PutCharTxBuf
  3899                           
  3900                           ;Wireless.c: 141: while(BusyTx());
  3901  002AE8  D000               	goto	l5634
  3902  002AEA                     l5634:
  3903  002AEA  EC36  F01C         	call	_BusyTx	;wreg free
  3904  002AEE  0900               	iorlw	0
  3905  002AF0  A4D8               	btfss	status,2,c
  3906  002AF2  D7FB               	goto	l5634
  3907                           
  3908                           ;Wireless.c: 142: StartTx();
  3909  002AF4  EC91  F01C         	call	_StartTx	;wreg free
  3910  002AF8  0012               	return		;funcret
  3911  002AFA                     __end_of_SendOffsets:
  3912                           	opt stack 0
  3913                           prodh	equ	0xFF4
  3914                           prodl	equ	0xFF3
  3915                           intcon	equ	0xFF2
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           indf2	equ	0xFDF
  3919                           postinc2	equ	0xFDE
  3920                           postdec2	equ	0xFDD
  3921                           fsr2h	equ	0xFDA
  3922                           fsr2l	equ	0xFD9
  3923                           status	equ	0xFD8
  3924                           
  3925 ;; *************** function _StartTx *****************
  3926 ;; Defined at:
  3927 ;;		line 25 in file "Wireless.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;		None               void
  3934 ;; Registers used:
  3935 ;;		wreg, status,2
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    7
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_SendStatus
  3952 ;;		_SendLineMode
  3953 ;;		_SendOffsets
  3954 ;;		_SendThreshold
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text27
  3959  003922                     __ptext27:
  3960                           	opt stack 0
  3961  003922                     _StartTx:
  3962                           	opt stack 22
  3963                           
  3964                           ;Wireless.c: 26: Tx_complete = 0;
  3965                           
  3966                           ;incstack = 0
  3967  003922  0E00               	movlw	0
  3968  003924  6E13               	movwf	_Tx_complete,c
  3969                           
  3970                           ;Wireless.c: 27: PIE1bits.TX1IE = 1;
  3971  003926  889D               	bsf	3997,4,c	;volatile
  3972  003928  0012               	return		;funcret
  3973  00392A                     __end_of_StartTx:
  3974                           	opt stack 0
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           indf2	equ	0xFDF
  3981                           postinc2	equ	0xFDE
  3982                           postdec2	equ	0xFDD
  3983                           fsr2h	equ	0xFDA
  3984                           fsr2l	equ	0xFD9
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _PutCharTxBuf *****************
  3988 ;; Defined at:
  3989 ;;		line 9 in file "Wireless.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  ch              1    wreg     unsigned char 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  ch              1   20[BANK0 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    8
  4010 ;; This function calls:
  4011 ;;		___awmod
  4012 ;; This function is called by:
  4013 ;;		_SendStatus
  4014 ;;		_SendLineMode
  4015 ;;		_SendOffsets
  4016 ;;		_SendThreshold
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text28
  4021  003278                     __ptext28:
  4022                           	opt stack 0
  4023  003278                     _PutCharTxBuf:
  4024                           	opt stack 21
  4025                           
  4026                           ;incstack = 0
  4027                           ;PutCharTxBuf@ch stored from wreg
  4028  003278  0100               	movlb	0	; () banked
  4029  00327A  6F74               	movwf	PutCharTxBuf@ch& (0+255),b
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  4033  00327C  5018               	movf	_put_Tx_index,w,c
  4034  00327E  0D01               	mullw	1
  4035  003280  0EB2               	movlw	low _Tx_buffer
  4036  003282  24F3               	addwf	prodl,w,c
  4037  003284  6ED9               	movwf	fsr2l,c
  4038  003286  0E00               	movlw	high _Tx_buffer
  4039  003288  20F4               	addwfc	prodh,w,c
  4040  00328A  6EDA               	movwf	fsr2h,c
  4041  00328C  C074  FFDF         	movff	PutCharTxBuf@ch,indf2
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 20;
  4045  003290  C018  F042         	movff	_put_Tx_index,??_PutCharTxBuf
  4046  003294  0E01               	movlw	1
  4047  003296  2642               	addwf	??_PutCharTxBuf,f,c
  4048  003298  5042               	movf	??_PutCharTxBuf,w,c
  4049  00329A  0100               	movlb	0	; () banked
  4050  00329C  6F6E               	movwf	___awmod@dividend& (0+255),b
  4051  00329E  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  4052  0032A0  0E00               	movlw	0
  4053  0032A2  0100               	movlb	0	; () banked
  4054  0032A4  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  4055  0032A6  0E14               	movlw	20
  4056  0032A8  6F70               	movwf	___awmod@divisor& (0+255),b
  4057  0032AA  ECCE  F013         	call	___awmod	;wreg free
  4058  0032AE  0100               	movlb	0	; () banked
  4059  0032B0  516E               	movf	?___awmod& (0+255),w,b
  4060  0032B2  6E18               	movwf	_put_Tx_index,c
  4061                           
  4062                           ; BSR set to: 0
  4063  0032B4  0012               	return		;funcret
  4064  0032B6                     __end_of_PutCharTxBuf:
  4065                           	opt stack 0
  4066                           prodh	equ	0xFF4
  4067                           prodl	equ	0xFF3
  4068                           intcon	equ	0xFF2
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           indf2	equ	0xFDF
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function ___awmod *****************
  4079 ;; Defined at:
  4080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  dividend        2   14[BANK0 ] int 
  4083 ;;  divisor         2   16[BANK0 ] int 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  sign            1   19[BANK0 ] unsigned char 
  4086 ;;  counter         1   18[BANK0 ] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  2   14[BANK0 ] int 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;Total ram usage:        6 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    7
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_PutCharTxBuf
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text29
  4111  00279C                     __ptext29:
  4112                           	opt stack 0
  4113  00279C                     ___awmod:
  4114                           	opt stack 21
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;incstack = 0
  4118  00279C  0E00               	movlw	0
  4119  00279E  0100               	movlb	0	; () banked
  4120  0027A0  6F73               	movwf	___awmod@sign& (0+255),b
  4121                           
  4122                           ; BSR set to: 0
  4123  0027A2  0100               	movlb	0	; () banked
  4124  0027A4  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4125  0027A6  D009               	goto	l5146
  4126                           
  4127                           ; BSR set to: 0
  4128  0027A8  0100               	movlb	0	; () banked
  4129  0027AA  6D6E               	negf	___awmod@dividend& (0+255),b
  4130  0027AC  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  4131  0027AE  B0D8               	btfsc	status,0,c
  4132  0027B0  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  4133                           
  4134                           ; BSR set to: 0
  4135  0027B2  0E01               	movlw	1
  4136  0027B4  0100               	movlb	0	; () banked
  4137  0027B6  6F73               	movwf	___awmod@sign& (0+255),b
  4138  0027B8  D000               	goto	l5146
  4139  0027BA                     l5146:
  4140                           
  4141                           ; BSR set to: 0
  4142  0027BA  0100               	movlb	0	; () banked
  4143  0027BC  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4144  0027BE  D006               	goto	l5150
  4145                           
  4146                           ; BSR set to: 0
  4147  0027C0  0100               	movlb	0	; () banked
  4148  0027C2  6D70               	negf	___awmod@divisor& (0+255),b
  4149  0027C4  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  4150  0027C6  B0D8               	btfsc	status,0,c
  4151  0027C8  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  4152  0027CA  D000               	goto	l5150
  4153  0027CC                     l5150:
  4154                           
  4155                           ; BSR set to: 0
  4156  0027CC  0100               	movlb	0	; () banked
  4157  0027CE  5170               	movf	___awmod@divisor& (0+255),w,b
  4158  0027D0  0100               	movlb	0	; () banked
  4159  0027D2  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4160  0027D4  B4D8               	btfsc	status,2,c
  4161  0027D6  D02B               	goto	l5166
  4162                           
  4163                           ; BSR set to: 0
  4164  0027D8  0E01               	movlw	1
  4165  0027DA  0100               	movlb	0	; () banked
  4166  0027DC  6F72               	movwf	___awmod@counter& (0+255),b
  4167  0027DE  D007               	goto	l5156
  4168  0027E0                     l5154:
  4169                           
  4170                           ; BSR set to: 0
  4171  0027E0  0100               	movlb	0	; () banked
  4172  0027E2  90D8               	bcf	status,0,c
  4173  0027E4  3770               	rlcf	___awmod@divisor& (0+255),f,b
  4174  0027E6  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4175  0027E8  0100               	movlb	0	; () banked
  4176  0027EA  2B72               	incf	___awmod@counter& (0+255),f,b
  4177  0027EC  D000               	goto	l5156
  4178  0027EE                     l5156:
  4179                           
  4180                           ; BSR set to: 0
  4181  0027EE  0100               	movlb	0	; () banked
  4182  0027F0  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4183  0027F2  D002               	goto	l5158
  4184  0027F4  D7F5               	goto	l5154
  4185                           
  4186                           ; BSR set to: 0
  4187  0027F6  D000               	goto	l5158
  4188  0027F8                     l5158:
  4189                           
  4190                           ; BSR set to: 0
  4191  0027F8  0100               	movlb	0	; () banked
  4192  0027FA  5170               	movf	___awmod@divisor& (0+255),w,b
  4193  0027FC  0100               	movlb	0	; () banked
  4194  0027FE  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  4195  002800  0100               	movlb	0	; () banked
  4196  002802  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  4197  002804  0100               	movlb	0	; () banked
  4198  002806  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4199  002808  A0D8               	btfss	status,0,c
  4200  00280A  D009               	goto	l5162
  4201                           
  4202                           ; BSR set to: 0
  4203  00280C  0100               	movlb	0	; () banked
  4204  00280E  5170               	movf	___awmod@divisor& (0+255),w,b
  4205  002810  0100               	movlb	0	; () banked
  4206  002812  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  4207  002814  0100               	movlb	0	; () banked
  4208  002816  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  4209  002818  0100               	movlb	0	; () banked
  4210  00281A  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4211  00281C  D000               	goto	l5162
  4212  00281E                     l5162:
  4213                           
  4214                           ; BSR set to: 0
  4215  00281E  0100               	movlb	0	; () banked
  4216  002820  90D8               	bcf	status,0,c
  4217  002822  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4218  002824  3370               	rrcf	___awmod@divisor& (0+255),f,b
  4219                           
  4220                           ; BSR set to: 0
  4221  002826  0100               	movlb	0	; () banked
  4222  002828  2F72               	decfsz	___awmod@counter& (0+255),f,b
  4223  00282A  D7E6               	goto	l5158
  4224                           
  4225                           ; BSR set to: 0
  4226  00282C  D000               	goto	l5166
  4227  00282E                     l5166:
  4228                           
  4229                           ; BSR set to: 0
  4230  00282E  0100               	movlb	0	; () banked
  4231  002830  5173               	movf	___awmod@sign& (0+255),w,b
  4232  002832  0100               	movlb	0	; () banked
  4233  002834  B4D8               	btfsc	status,2,c
  4234  002836  D006               	goto	l5170
  4235                           
  4236                           ; BSR set to: 0
  4237  002838  0100               	movlb	0	; () banked
  4238  00283A  6D6E               	negf	___awmod@dividend& (0+255),b
  4239  00283C  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  4240  00283E  B0D8               	btfsc	status,0,c
  4241  002840  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  4242  002842  D000               	goto	l5170
  4243  002844                     l5170:
  4244                           
  4245                           ; BSR set to: 0
  4246  002844  C06E  F06E         	movff	___awmod@dividend,?___awmod
  4247  002848  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  4248  00284C  D000               	goto	l1096
  4249  00284E                     l1096:
  4250                           
  4251                           ; BSR set to: 0
  4252  00284E  0012               	return		;funcret
  4253  002850                     __end_of___awmod:
  4254                           	opt stack 0
  4255                           prodh	equ	0xFF4
  4256                           prodl	equ	0xFF3
  4257                           intcon	equ	0xFF2
  4258                           postinc0	equ	0xFEE
  4259                           wreg	equ	0xFE8
  4260                           indf2	equ	0xFDF
  4261                           postinc2	equ	0xFDE
  4262                           postdec2	equ	0xFDD
  4263                           fsr2h	equ	0xFDA
  4264                           fsr2l	equ	0xFD9
  4265                           status	equ	0xFD8
  4266                           
  4267 ;; *************** function _BusyTx *****************
  4268 ;; Defined at:
  4269 ;;		line 95 in file "Wireless.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      unsigned char 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    7
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_SendStatus
  4294 ;;		_SendLineMode
  4295 ;;		_SendOffsets
  4296 ;;		_SendThreshold
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text30
  4301  00386C                     __ptext30:
  4302                           	opt stack 0
  4303  00386C                     _BusyTx:
  4304                           	opt stack 22
  4305                           
  4306                           ;Wireless.c: 96: return(!Tx_complete);
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;incstack = 0
  4310  00386C  5013               	movf	_Tx_complete,w,c
  4311  00386E  A4D8               	btfss	status,2,c
  4312  003870  D002               	goto	u4830
  4313  003872  0E01               	movlw	1
  4314  003874  D002               	goto	l651
  4315  003876                     u4830:
  4316  003876  0E00               	movlw	0
  4317  003878  D000               	goto	l651
  4318  00387A                     l651:
  4319  00387A  0012               	return		;funcret
  4320  00387C                     __end_of_BusyTx:
  4321                           	opt stack 0
  4322                           prodh	equ	0xFF4
  4323                           prodl	equ	0xFF3
  4324                           intcon	equ	0xFF2
  4325                           postinc0	equ	0xFEE
  4326                           wreg	equ	0xFE8
  4327                           indf2	equ	0xFDF
  4328                           postinc2	equ	0xFDE
  4329                           postdec2	equ	0xFDD
  4330                           fsr2h	equ	0xFDA
  4331                           fsr2l	equ	0xFD9
  4332                           status	equ	0xFD8
  4333                           
  4334 ;; *************** function _PB1pressed *****************
  4335 ;; Defined at:
  4336 ;;		line 463 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      unsigned char 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    8
  4357 ;; This function calls:
  4358 ;;		_ReadMillis2
  4359 ;;		_ResetMillis2
  4360 ;; This function is called by:
  4361 ;;		_GenerateCalibration
  4362 ;;		_main
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text31
  4367  0032B6                     __ptext31:
  4368                           	opt stack 0
  4369  0032B6                     _PB1pressed:
  4370                           	opt stack 22
  4371                           
  4372                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 464: if(PORTBbits.RB1 == 0) {
  4373                           
  4374                           ;incstack = 0
  4375  0032B6  B281               	btfsc	3969,1,c	;volatile
  4376  0032B8  D003               	goto	l256
  4377  0032BA  D016               	goto	l5564
  4378                           
  4379                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 465: return(0);
  4380  0032BC  D01A               	goto	l257
  4381                           
  4382                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 466: }
  4383  0032BE  D017               	goto	l5568
  4384  0032C0                     l256:
  4385                           
  4386                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 467: else if(PORTBbits.RB1 == 1) {
  4387  0032C0  A281               	btfss	3969,1,c	;volatile
  4388  0032C2  D015               	goto	l5568
  4389                           
  4390                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 468: ResetMillis2();
  4391  0032C4  EC87  F01C         	call	_ResetMillis2	;wreg free
  4392                           
  4393                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 469: while(ReadMillis2() < 10);
  4394  0032C8  D000               	goto	l5556
  4395  0032CA                     l5556:
  4396  0032CA  EC8C  F01C         	call	_ReadMillis2	;wreg free
  4397  0032CE  0100               	movlb	0	; () banked
  4398  0032D0  516F               	movf	(?_ReadMillis2+1)& (0+255),w,b
  4399  0032D2  E105               	bnz	u5050
  4400  0032D4  0E0A               	movlw	10
  4401  0032D6  0100               	movlb	0	; () banked
  4402  0032D8  5D6E               	subwf	?_ReadMillis2& (0+255),w,b
  4403  0032DA  A0D8               	btfss	status,0,c
  4404  0032DC  D7F6               	goto	l5556
  4405  0032DE                     u5050:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 470: if(PORTBbits.RB1 == 1) {
  4409  0032DE  A281               	btfss	3969,1,c	;volatile
  4410  0032E0  D003               	goto	l5564
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 471: return(1);
  4414  0032E2  0E01               	movlw	1
  4415                           
  4416                           ; BSR set to: 0
  4417  0032E4  D006               	goto	l257
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 472: }
  4421  0032E6  D003               	goto	l5568
  4422  0032E8                     l5564:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 473: else {
  4426                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 474: return(0);
  4427  0032E8  0E00               	movlw	0
  4428                           
  4429                           ; BSR set to: 0
  4430  0032EA  D003               	goto	l257
  4431                           
  4432                           ; BSR set to: 0
  4433                           
  4434                           ; BSR set to: 0
  4435  0032EC  D000               	goto	l5568
  4436  0032EE                     l5568:
  4437                           
  4438                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 475: }
  4439                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 476: }
  4440                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 478: return(0);
  4441  0032EE  0E00               	movlw	0
  4442  0032F0  D000               	goto	l257
  4443  0032F2                     l257:
  4444  0032F2  0012               	return		;funcret
  4445  0032F4                     __end_of_PB1pressed:
  4446                           	opt stack 0
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _ResetMillis2 *****************
  4460 ;; Defined at:
  4461 ;;		line 39 in file "MillisecondTimer.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, status,2
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    7
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_PB1pressed
  4486 ;;		_PB2pressed
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text32
  4491  00390E                     __ptext32:
  4492                           	opt stack 0
  4493  00390E                     _ResetMillis2:
  4494                           	opt stack 22
  4495                           
  4496                           ;MillisecondTimer.c: 41: millisecond_COUNT2 = 0;
  4497                           
  4498                           ;incstack = 0
  4499  00390E  0E00               	movlw	0
  4500  003910  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  4501  003912  0E00               	movlw	0
  4502  003914  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  4503  003916  0012               	return		;funcret
  4504  003918                     __end_of_ResetMillis2:
  4505                           	opt stack 0
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           indf2	equ	0xFDF
  4512                           postinc2	equ	0xFDE
  4513                           postdec2	equ	0xFDD
  4514                           fsr2h	equ	0xFDA
  4515                           fsr2l	equ	0xFD9
  4516                           status	equ	0xFD8
  4517                           
  4518 ;; *************** function _ReadMillis2 *****************
  4519 ;; Defined at:
  4520 ;;		line 19 in file "MillisecondTimer.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2   14[BANK0 ] unsigned int 
  4527 ;; Registers used:
  4528 ;;		None
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4534 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;Total ram usage:        2 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    7
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_PB1pressed
  4545 ;;		_PB2pressed
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text33
  4550  003918                     __ptext33:
  4551                           	opt stack 0
  4552  003918                     _ReadMillis2:
  4553                           	opt stack 22
  4554                           
  4555                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  4556                           
  4557                           ;incstack = 0
  4558  003918  C011  F06E         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  4559  00391C  C012  F06F         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  4560  003920  0012               	return		;funcret
  4561  003922                     __end_of_ReadMillis2:
  4562                           	opt stack 0
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           postdec2	equ	0xFDD
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8
  4574                           
  4575 ;; *************** function _FlashLEDS *****************
  4576 ;; Defined at:
  4577 ;;		line 451 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;		None               void
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;Total ram usage:        0 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    8
  4598 ;; This function calls:
  4599 ;;		_Delay10KTCYx
  4600 ;; This function is called by:
  4601 ;;		_GenerateCalibration
  4602 ;;		_LoadCalibration
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text34
  4608  00354E                     __ptext34:
  4609                           	opt stack 0
  4610  00354E                     _FlashLEDS:
  4611                           	opt stack 20
  4612                           
  4613                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 452: LATJ = 0x00;
  4614                           
  4615                           ;incstack = 0
  4616  00354E  0E00               	movlw	0
  4617  003550  6E91               	movwf	3985,c	;volatile
  4618                           
  4619                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 453: LATJ = 0x1F;
  4620  003552  0E1F               	movlw	31
  4621  003554  6E91               	movwf	3985,c	;volatile
  4622                           
  4623                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 454: Delay10KTCYx(75);
  4624  003556  0E4B               	movlw	75
  4625  003558  EC5F  F01B         	call	_Delay10KTCYx
  4626                           
  4627                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 455: LATJ = 0x00;
  4628  00355C  0E00               	movlw	0
  4629  00355E  6E91               	movwf	3985,c	;volatile
  4630                           
  4631                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 456: Delay10KTCYx(75);
  4632  003560  0E4B               	movlw	75
  4633  003562  EC5F  F01B         	call	_Delay10KTCYx
  4634                           
  4635                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 457: LATJ = 0x1F;
  4636  003566  0E1F               	movlw	31
  4637  003568  6E91               	movwf	3985,c	;volatile
  4638                           
  4639                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 458: Delay10KTCYx(75);
  4640  00356A  0E4B               	movlw	75
  4641  00356C  EC5F  F01B         	call	_Delay10KTCYx
  4642                           
  4643                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 459: LATJ = 0x00;
  4644  003570  0E00               	movlw	0
  4645  003572  6E91               	movwf	3985,c	;volatile
  4646  003574  0012               	return		;funcret
  4647  003576                     __end_of_FlashLEDS:
  4648                           	opt stack 0
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           indf2	equ	0xFDF
  4655                           postinc2	equ	0xFDE
  4656                           postdec2	equ	0xFDD
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function _Delay10KTCYx *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  unit            1    wreg     unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  unit            1   14[BANK0 ] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;		None               void
  4670 ;; Registers used:
  4671 ;;		wreg
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:        2 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    7
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_FlashLEDS
  4688 ;;		_GenerateCalibration
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text35
  4694  0036BE                     __ptext35:
  4695                           	opt stack 0
  4696  0036BE                     _Delay10KTCYx:
  4697                           	opt stack 20
  4698                           
  4699                           ;incstack = 0
  4700                           ;Delay10KTCYx@unit stored from wreg
  4701  0036BE  0100               	movlb	0	; () banked
  4702  0036C0  6F6E               	movwf	Delay10KTCYx@unit& (0+255),b
  4703  0036C2                     
  4704                           ; BSR set to: 0
  4705  0036C2  0E0D               	movlw	13
  4706  0036C4  6E42               	movwf	??_Delay10KTCYx& (0+255),c
  4707  0036C6  0EFC               	movlw	252
  4708  0036C8                     u5957:
  4709  0036C8  2EE8               	decfsz	wreg,f,c
  4710  0036CA  D7FE               	goto	u5957
  4711  0036CC  2E42               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4712  0036CE  D7FC               	goto	u5957
  4713  0036D0  0100               	movlb	0	; () banked
  4714  0036D2  2F6E               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  4715  0036D4  D7F6               	goto	l5330
  4716  0036D6  D000               	goto	l1115
  4717  0036D8                     l1115:
  4718                           
  4719                           ; BSR set to: 0
  4720  0036D8  0012               	return		;funcret
  4721  0036DA                     __end_of_Delay10KTCYx:
  4722                           	opt stack 0
  4723                           prodh	equ	0xFF4
  4724                           prodl	equ	0xFF3
  4725                           intcon	equ	0xFF2
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           indf2	equ	0xFDF
  4729                           postinc2	equ	0xFDE
  4730                           postdec2	equ	0xFDD
  4731                           fsr2h	equ	0xFDA
  4732                           fsr2l	equ	0xFD9
  4733                           status	equ	0xFD8
  4734                           
  4735 ;; *************** function _CalibrateThreshold *****************
  4736 ;; Defined at:
  4737 ;;		line 518 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  sum             1    0        unsigned char 
  4742 ;;  index           1    0        unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:   10
  4759 ;; This function calls:
  4760 ;;		_BusyADC
  4761 ;;		_BusySensorAcq
  4762 ;;		_CalculateSensorStatuses
  4763 ;;		_ConvertADC
  4764 ;;		_DisplaySensorStatuses
  4765 ;;		_GetSensorReadings
  4766 ;;		_NormaliseSensorReadings
  4767 ;;		_ReadADC
  4768 ;;		_SetADCChannel
  4769 ;; This function is called by:
  4770 ;;		_GenerateCalibration
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text36
  4775  003046                     __ptext36:
  4776                           	opt stack 0
  4777  003046                     _CalibrateThreshold:
  4778                           	opt stack 18
  4779                           
  4780                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 519: unsigned char index, sum;
  4781                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 521: LATJ = 0x00;
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;incstack = 0
  4785  003046  0E00               	movlw	0
  4786  003048  6E91               	movwf	3985,c	;volatile
  4787                           
  4788                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 524: SetADCChannel(5);
  4789  00304A  0E05               	movlw	5
  4790  00304C  EC42  F011         	call	_SetADCChannel
  4791                           
  4792                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 525: ConvertADC();
  4793  003050  ECA6  F01C         	call	_ConvertADC	;wreg free
  4794                           
  4795                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 526: while(BusyADC());
  4796  003054  D000               	goto	l5594
  4797  003056                     l5594:
  4798  003056  EC64  F01C         	call	_BusyADC	;wreg free
  4799  00305A  0900               	iorlw	0
  4800  00305C  A4D8               	btfss	status,2,c
  4801  00305E  D7FB               	goto	l5594
  4802                           
  4803                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 527: sensor_threshold = ReadADC();
  4804  003060  ECDA  F01B         	call	_ReadADC	;wreg free
  4805  003064  C06E  F022         	movff	?_ReadADC,_sensor_threshold
  4806  003068  C06F  F023         	movff	?_ReadADC+1,_sensor_threshold+1
  4807                           
  4808                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 530: GetSensorReadings();
  4809  00306C  ECAE  F01B         	call	_GetSensorReadings	;wreg free
  4810                           
  4811                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 532: while(BusySensorAcq());
  4812  003070  D000               	goto	l5600
  4813  003072                     l5600:
  4814  003072  EC3E  F01C         	call	_BusySensorAcq	;wreg free
  4815  003076  0900               	iorlw	0
  4816  003078  A4D8               	btfss	status,2,c
  4817  00307A  D7FB               	goto	l5600
  4818                           
  4819                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 534: NormaliseSensorReadings();
  4820  00307C  ECBF  F017         	call	_NormaliseSensorReadings	;wreg free
  4821                           
  4822                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 536: CalculateSensorStatuses();
  4823  003080  ECA1  F012         	call	_CalculateSensorStatuses	;wreg free
  4824                           
  4825                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 538: DisplaySensorStatuses(sensor_status);
  4826  003084  0E1D               	movlw	low _sensor_status
  4827  003086  0100               	movlb	0	; () banked
  4828  003088  6F6E               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  4829  00308A  0E00               	movlw	high _sensor_status
  4830  00308C  0100               	movlb	0	; () banked
  4831  00308E  6F6F               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  4832  003090  EC73  F018         	call	_DisplaySensorStatuses	;wreg free
  4833  003094  0012               	return		;funcret
  4834  003096                     __end_of_CalibrateThreshold:
  4835                           	opt stack 0
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           indf2	equ	0xFDF
  4842                           postinc2	equ	0xFDE
  4843                           postdec2	equ	0xFDD
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _ReadADC *****************
  4849 ;; Defined at:
  4850 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  2   14[BANK0 ] int 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;Total ram usage:        4 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    7
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_CalibrateThreshold
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text37
  4879  0037B4                     __ptext37:
  4880                           	opt stack 0
  4881  0037B4                     _ReadADC:
  4882                           	opt stack 20
  4883                           
  4884                           ;incstack = 0
  4885  0037B4  50C4               	movf	4036,w,c	;volatile
  4886  0037B6  0100               	movlb	0	; () banked
  4887  0037B8  6F70               	movwf	??_ReadADC& (0+255),b
  4888  0037BA  50C3               	movf	4035,w,c	;volatile
  4889  0037BC  0100               	movlb	0	; () banked
  4890  0037BE  6F6E               	movwf	?_ReadADC& (0+255),b
  4891  0037C0  C070  F06F         	movff	??_ReadADC,?_ReadADC+1
  4892  0037C4  D000               	goto	l718
  4893  0037C6                     l718:
  4894                           
  4895                           ; BSR set to: 0
  4896  0037C6  0012               	return		;funcret
  4897  0037C8                     __end_of_ReadADC:
  4898                           	opt stack 0
  4899                           prodh	equ	0xFF4
  4900                           prodl	equ	0xFF3
  4901                           intcon	equ	0xFF2
  4902                           postinc0	equ	0xFEE
  4903                           wreg	equ	0xFE8
  4904                           indf2	equ	0xFDF
  4905                           postinc2	equ	0xFDE
  4906                           postdec2	equ	0xFDD
  4907                           fsr2h	equ	0xFDA
  4908                           fsr2l	equ	0xFD9
  4909                           status	equ	0xFD8
  4910                           
  4911 ;; *************** function _NormaliseSensorReadings *****************
  4912 ;; Defined at:
  4913 ;;		line 337 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  index           1   29[COMRAM] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;Total ram usage:        5 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    7
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_CalibrateThreshold
  4938 ;;		_main
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text38
  4943  002F7E                     __ptext38:
  4944                           	opt stack 0
  4945  002F7E                     _NormaliseSensorReadings:
  4946                           	opt stack 23
  4947                           
  4948                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 338: unsigned char index;
  4949                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 340: for(index = 0; index < 5; index++) {
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;incstack = 0
  4953  002F7E  0E00               	movlw	0
  4954  002F80  6E42               	movwf	NormaliseSensorReadings@index,c
  4955  002F82                     l5272:
  4956  002F82  0E04               	movlw	4
  4957  002F84  6442               	cpfsgt	NormaliseSensorReadings@index,c
  4958  002F86  D001               	goto	l5276
  4959  002F88  D02E               	goto	l205
  4960  002F8A                     l5276:
  4961                           
  4962                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 342: sensor_readings_normalised[index] = sensor_r
      +                          eadings_raw[index] + sensor_offsets[index];
  4963  002F8A  5042               	movf	NormaliseSensorReadings@index,w,c
  4964  002F8C  0D02               	mullw	2
  4965  002F8E  0EDE               	movlw	low _sensor_offsets
  4966  002F90  24F3               	addwf	prodl,w,c
  4967  002F92  6ED9               	movwf	fsr2l,c
  4968  002F94  0E00               	movlw	high _sensor_offsets
  4969  002F96  20F4               	addwfc	prodh,w,c
  4970  002F98  6EDA               	movwf	fsr2h,c
  4971  002F9A  CFDE F06E          	movff	postinc2,??_NormaliseSensorReadings
  4972  002F9E  CFDD F06F          	movff	postdec2,??_NormaliseSensorReadings+1
  4973  002FA2  5042               	movf	NormaliseSensorReadings@index,w,c
  4974  002FA4  0D02               	mullw	2
  4975  002FA6  0ED0               	movlw	low _sensor_readings_raw
  4976  002FA8  24F3               	addwf	prodl,w,c
  4977  002FAA  6ED9               	movwf	fsr2l,c
  4978  002FAC  0E00               	movlw	high _sensor_readings_raw
  4979  002FAE  20F4               	addwfc	prodh,w,c
  4980  002FB0  6EDA               	movwf	fsr2h,c
  4981  002FB2  CFDE F070          	movff	postinc2,??_NormaliseSensorReadings+2
  4982  002FB6  CFDD F071          	movff	postdec2,??_NormaliseSensorReadings+3
  4983  002FBA  0100               	movlb	0	; () banked
  4984  002FBC  516E               	movf	??_NormaliseSensorReadings& (0+255),w,b
  4985  002FBE  0100               	movlb	0	; () banked
  4986  002FC0  2770               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  4987  002FC2  0100               	movlb	0	; () banked
  4988  002FC4  516F               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  4989  002FC6  0100               	movlb	0	; () banked
  4990  002FC8  2371               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  4991  002FCA  5042               	movf	NormaliseSensorReadings@index,w,c
  4992  002FCC  0D02               	mullw	2
  4993  002FCE  0EC6               	movlw	low _sensor_readings_normalised
  4994  002FD0  24F3               	addwf	prodl,w,c
  4995  002FD2  6ED9               	movwf	fsr2l,c
  4996  002FD4  0E00               	movlw	high _sensor_readings_normalised
  4997  002FD6  20F4               	addwfc	prodh,w,c
  4998  002FD8  6EDA               	movwf	fsr2h,c
  4999  002FDA  C070  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  5000  002FDE  C071  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  5001                           
  5002                           ; BSR set to: 0
  5003  002FE2  2A42               	incf	NormaliseSensorReadings@index,f,c
  5004  002FE4  D7CE               	goto	l5272
  5005  002FE6                     l205:
  5006  002FE6  0012               	return		;funcret
  5007  002FE8                     __end_of_NormaliseSensorReadings:
  5008                           	opt stack 0
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _DisplaySensorStatuses *****************
  5022 ;; Defined at:
  5023 ;;		line 427 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  status_array    2   14[BANK0 ] PTR const unsigned char 
  5026 ;;		 -> sensor_status(5), 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  index           1   29[COMRAM] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;		None               void
  5031 ;; Registers used:
  5032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:        5 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    7
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_CalibrateThreshold
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text39
  5054  0030E6                     __ptext39:
  5055                           	opt stack 0
  5056  0030E6                     _DisplaySensorStatuses:
  5057                           	opt stack 20
  5058                           
  5059                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 428: unsigned char index;
  5060                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 430: for (index = 0; index < 5; index++) {
  5061                           
  5062                           ;incstack = 0
  5063  0030E6  0E00               	movlw	0
  5064  0030E8  6E42               	movwf	DisplaySensorStatuses@index,c
  5065  0030EA                     l5320:
  5066  0030EA  0E04               	movlw	4
  5067  0030EC  6442               	cpfsgt	DisplaySensorStatuses@index,c
  5068  0030EE  D001               	goto	l5324
  5069  0030F0  D01D               	goto	l244
  5070  0030F2                     l5324:
  5071                           
  5072                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 431: LATJ ^= *(status_array + index) << index;
  5073  0030F2  C042  F070         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  5074  0030F6  5042               	movf	DisplaySensorStatuses@index,w,c
  5075  0030F8  0D01               	mullw	1
  5076  0030FA  50F3               	movf	prodl,w,c
  5077  0030FC  0100               	movlb	0	; () banked
  5078  0030FE  256E               	addwf	DisplaySensorStatuses@status_array& (0+255),w,b
  5079  003100  6ED9               	movwf	fsr2l,c
  5080  003102  50F4               	movf	prodh,w,c
  5081  003104  0100               	movlb	0	; () banked
  5082  003106  216F               	addwfc	(DisplaySensorStatuses@status_array+1)& (0+255),w,b
  5083  003108  6EDA               	movwf	fsr2h,c
  5084  00310A  50DF               	movf	indf2,w,c
  5085  00310C  0100               	movlb	0	; () banked
  5086  00310E  6F71               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  5087  003110  0100               	movlb	0	; () banked
  5088  003112  2B70               	incf	??_DisplaySensorStatuses& (0+255),f,b
  5089  003114  D003               	goto	u4764
  5090  003116                     u4765:
  5091  003116  0100               	movlb	0	; () banked
  5092  003118  90D8               	bcf	status,0,c
  5093  00311A  3771               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  5094  00311C                     u4764:
  5095  00311C  0100               	movlb	0	; () banked
  5096  00311E  2F70               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  5097  003120  D7FA               	goto	u4765
  5098  003122  0100               	movlb	0	; () banked
  5099  003124  5171               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  5100  003126  1A91               	xorwf	3985,f,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103  003128  2A42               	incf	DisplaySensorStatuses@index,f,c
  5104  00312A  D7DF               	goto	l5320
  5105  00312C                     l244:
  5106  00312C  0012               	return		;funcret
  5107  00312E                     __end_of_DisplaySensorStatuses:
  5108                           	opt stack 0
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           indf2	equ	0xFDF
  5115                           postinc2	equ	0xFDE
  5116                           postdec2	equ	0xFDD
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _CalculateSensorStatuses *****************
  5122 ;; Defined at:
  5123 ;;		line 349 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  index           1   29[COMRAM] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;		None               void
  5130 ;; Registers used:
  5131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;Total ram usage:        4 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    7
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_CalibrateThreshold
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text40
  5153  002542                     __ptext40:
  5154                           	opt stack 0
  5155  002542                     _CalculateSensorStatuses:
  5156                           	opt stack 20
  5157                           
  5158                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 350: unsigned char index;
  5159                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 353: if(line_mode == 1) {
  5160                           
  5161                           ;incstack = 0
  5162  002542  0424               	decf	_line_mode,w,c
  5163  002544  A4D8               	btfss	status,2,c
  5164  002546  D032               	goto	l5300
  5165                           
  5166                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 354: for(index = 0; index < 5; index++) {
  5167  002548  0E00               	movlw	0
  5168  00254A  6E42               	movwf	CalculateSensorStatuses@index,c
  5169  00254C                     l5286:
  5170  00254C  0E04               	movlw	4
  5171  00254E  6442               	cpfsgt	CalculateSensorStatuses@index,c
  5172  002550  D001               	goto	l5290
  5173  002552  D061               	goto	l219
  5174  002554                     l5290:
  5175                           
  5176                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 356: if(sensor_readings_normalised[index] > senso
      +                          r_threshold) {
  5177  002554  5042               	movf	CalculateSensorStatuses@index,w,c
  5178  002556  0D02               	mullw	2
  5179  002558  0EC6               	movlw	low _sensor_readings_normalised
  5180  00255A  24F3               	addwf	prodl,w,c
  5181  00255C  6ED9               	movwf	fsr2l,c
  5182  00255E  0E00               	movlw	high _sensor_readings_normalised
  5183  002560  20F4               	addwfc	prodh,w,c
  5184  002562  6EDA               	movwf	fsr2h,c
  5185  002564  50DE               	movf	postinc2,w,c
  5186  002566  5C22               	subwf	_sensor_threshold,w,c
  5187  002568  5023               	movf	_sensor_threshold+1,w,c
  5188  00256A  0A80               	xorlw	128
  5189  00256C  0100               	movlb	0	; () banked
  5190  00256E  6F70               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  5191  002570  50DE               	movf	postinc2,w,c
  5192  002572  0A80               	xorlw	128
  5193  002574  0100               	movlb	0	; () banked
  5194  002576  5970               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  5195  002578  B0D8               	btfsc	status,0,c
  5196  00257A  D00A               	goto	l5294
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 357: sensor_status[index] = 1;
  5200  00257C  5042               	movf	CalculateSensorStatuses@index,w,c
  5201  00257E  0D01               	mullw	1
  5202  002580  0E1D               	movlw	low _sensor_status
  5203  002582  24F3               	addwf	prodl,w,c
  5204  002584  6ED9               	movwf	fsr2l,c
  5205  002586  0E00               	movlw	high _sensor_status
  5206  002588  20F4               	addwfc	prodh,w,c
  5207  00258A  6EDA               	movwf	fsr2h,c
  5208  00258C  0E01               	movlw	1
  5209  00258E  D009               	goto	L2
  5210  002590                     l5294:
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 359: else {
  5214                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 360: sensor_status[index] = 0;
  5215  002590  5042               	movf	CalculateSensorStatuses@index,w,c
  5216  002592  0D01               	mullw	1
  5217  002594  0E1D               	movlw	low _sensor_status
  5218  002596  24F3               	addwf	prodl,w,c
  5219  002598  6ED9               	movwf	fsr2l,c
  5220  00259A  0E00               	movlw	high _sensor_status
  5221  00259C  20F4               	addwfc	prodh,w,c
  5222  00259E  6EDA               	movwf	fsr2h,c
  5223  0025A0  0E00               	movlw	0
  5224  0025A2                     L2:
  5225  0025A2  6EDF               	movwf	indf2,c
  5226  0025A4  D000               	goto	l5296
  5227  0025A6                     l5296:
  5228                           
  5229                           ; BSR set to: 0
  5230  0025A6  2A42               	incf	CalculateSensorStatuses@index,f,c
  5231  0025A8  D7D1               	goto	l5286
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 361: }
  5235                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 362: }
  5236                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 363: }
  5237                           
  5238                           ; BSR set to: 0
  5239  0025AA  D035               	goto	l219
  5240  0025AC                     l5300:
  5241                           
  5242                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 365: else if(line_mode == 0) {
  5243  0025AC  5024               	movf	_line_mode,w,c
  5244  0025AE  A4D8               	btfss	status,2,c
  5245  0025B0  D032               	goto	l219
  5246                           
  5247                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 367: for(index = 0; index < 5; index++) {
  5248  0025B2  0E00               	movlw	0
  5249  0025B4  6E42               	movwf	CalculateSensorStatuses@index,c
  5250  0025B6                     l5304:
  5251  0025B6  0E04               	movlw	4
  5252  0025B8  6442               	cpfsgt	CalculateSensorStatuses@index,c
  5253  0025BA  D001               	goto	l5308
  5254  0025BC  D02C               	goto	l219
  5255  0025BE                     l5308:
  5256                           
  5257                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 369: if(sensor_readings_normalised[index] < senso
      +                          r_threshold) {
  5258  0025BE  5042               	movf	CalculateSensorStatuses@index,w,c
  5259  0025C0  0D02               	mullw	2
  5260  0025C2  0EC6               	movlw	low _sensor_readings_normalised
  5261  0025C4  24F3               	addwf	prodl,w,c
  5262  0025C6  6ED9               	movwf	fsr2l,c
  5263  0025C8  0E00               	movlw	high _sensor_readings_normalised
  5264  0025CA  20F4               	addwfc	prodh,w,c
  5265  0025CC  6EDA               	movwf	fsr2h,c
  5266  0025CE  5022               	movf	_sensor_threshold,w,c
  5267  0025D0  5CDE               	subwf	postinc2,w,c
  5268  0025D2  50DE               	movf	postinc2,w,c
  5269  0025D4  0A80               	xorlw	128
  5270  0025D6  0100               	movlb	0	; () banked
  5271  0025D8  6F70               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  5272  0025DA  5023               	movf	_sensor_threshold+1,w,c
  5273  0025DC  0A80               	xorlw	128
  5274  0025DE  0100               	movlb	0	; () banked
  5275  0025E0  5970               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  5276  0025E2  B0D8               	btfsc	status,0,c
  5277  0025E4  D00A               	goto	l5312
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 370: sensor_status[index] = 1;
  5281  0025E6  5042               	movf	CalculateSensorStatuses@index,w,c
  5282  0025E8  0D01               	mullw	1
  5283  0025EA  0E1D               	movlw	low _sensor_status
  5284  0025EC  24F3               	addwf	prodl,w,c
  5285  0025EE  6ED9               	movwf	fsr2l,c
  5286  0025F0  0E00               	movlw	high _sensor_status
  5287  0025F2  20F4               	addwfc	prodh,w,c
  5288  0025F4  6EDA               	movwf	fsr2h,c
  5289  0025F6  0E01               	movlw	1
  5290  0025F8  D009               	goto	L3
  5291  0025FA                     l5312:
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 372: else {
  5295                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 373: sensor_status[index] = 0;
  5296  0025FA  5042               	movf	CalculateSensorStatuses@index,w,c
  5297  0025FC  0D01               	mullw	1
  5298  0025FE  0E1D               	movlw	low _sensor_status
  5299  002600  24F3               	addwf	prodl,w,c
  5300  002602  6ED9               	movwf	fsr2l,c
  5301  002604  0E00               	movlw	high _sensor_status
  5302  002606  20F4               	addwfc	prodh,w,c
  5303  002608  6EDA               	movwf	fsr2h,c
  5304  00260A  0E00               	movlw	0
  5305  00260C                     L3:
  5306  00260C  6EDF               	movwf	indf2,c
  5307  00260E  D000               	goto	l5314
  5308  002610                     l5314:
  5309                           
  5310                           ; BSR set to: 0
  5311  002610  2A42               	incf	CalculateSensorStatuses@index,f,c
  5312  002612  D7D1               	goto	l5304
  5313                           
  5314                           ; BSR set to: 0
  5315                           
  5316                           ; BSR set to: 0
  5317                           
  5318                           ; BSR set to: 0
  5319  002614  D000               	goto	l219
  5320  002616                     l219:
  5321  002616  0012               	return		;funcret
  5322  002618                     __end_of_CalculateSensorStatuses:
  5323                           	opt stack 0
  5324                           prodh	equ	0xFF4
  5325                           prodl	equ	0xFF3
  5326                           intcon	equ	0xFF2
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           postdec2	equ	0xFDD
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function _BusyADC *****************
  5337 ;; Defined at:
  5338 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      unsigned char 
  5345 ;; Registers used:
  5346 ;;		wreg
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    7
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_CalibrateThreshold
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text41
  5367  0038C8                     __ptext41:
  5368                           	opt stack 0
  5369  0038C8                     _BusyADC:
  5370                           	opt stack 20
  5371                           
  5372                           ;incstack = 0
  5373  0038C8  A2C2               	btfss	4034,1,c	;volatile
  5374  0038CA  D002               	goto	u4780
  5375  0038CC  0E01               	movlw	1
  5376  0038CE  D002               	goto	l688
  5377  0038D0                     u4780:
  5378  0038D0  0E00               	movlw	0
  5379  0038D2  D000               	goto	l688
  5380  0038D4                     l688:
  5381  0038D4  0012               	return		;funcret
  5382  0038D6                     __end_of_BusyADC:
  5383                           	opt stack 0
  5384                           prodh	equ	0xFF4
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           postinc0	equ	0xFEE
  5388                           wreg	equ	0xFE8
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8
  5395                           
  5396 ;; *************** function _CalibrateOffsets *****************
  5397 ;; Defined at:
  5398 ;;		line 502 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  index           1   18[BANK0 ] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;		None               void
  5405 ;; Registers used:
  5406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;Total ram usage:        3 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:   10
  5419 ;; This function calls:
  5420 ;;		_BusySensorAcq
  5421 ;;		_GetSensorReadings
  5422 ;; This function is called by:
  5423 ;;		_GenerateCalibration
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text42
  5428  002E28                     __ptext42:
  5429                           	opt stack 0
  5430  002E28                     _CalibrateOffsets:
  5431                           	opt stack 18
  5432                           
  5433                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 503: unsigned char index;
  5434                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 505: GetSensorReadings();
  5435                           
  5436                           ;incstack = 0
  5437  002E28  ECAE  F01B         	call	_GetSensorReadings	;wreg free
  5438                           
  5439                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 507: while(BusySensorAcq());
  5440  002E2C  D000               	goto	l5574
  5441  002E2E                     l5574:
  5442  002E2E  EC3E  F01C         	call	_BusySensorAcq	;wreg free
  5443  002E32  0900               	iorlw	0
  5444  002E34  A4D8               	btfss	status,2,c
  5445  002E36  D7FB               	goto	l5574
  5446                           
  5447                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 509: for(index = 0; index < 5; index++) {
  5448  002E38  0E00               	movlw	0
  5449  002E3A  0100               	movlb	0	; () banked
  5450  002E3C  6F72               	movwf	CalibrateOffsets@index& (0+255),b
  5451  002E3E                     l5578:
  5452                           
  5453                           ; BSR set to: 0
  5454  002E3E  0E04               	movlw	4
  5455  002E40  0100               	movlb	0	; () banked
  5456  002E42  6572               	cpfsgt	CalibrateOffsets@index& (0+255),b
  5457  002E44  D001               	goto	l5582
  5458                           
  5459                           ; BSR set to: 0
  5460  002E46  D02A               	goto	l283
  5461  002E48                     l5582:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 511: sensor_offsets[index] = sensor_readings_raw[
      +                          2] - sensor_readings_raw[index];
  5465  002E48  0100               	movlb	0	; () banked
  5466  002E4A  5172               	movf	CalibrateOffsets@index& (0+255),w,b
  5467  002E4C  0D02               	mullw	2
  5468  002E4E  0ED0               	movlw	low _sensor_readings_raw
  5469  002E50  24F3               	addwf	prodl,w,c
  5470  002E52  6ED9               	movwf	fsr2l,c
  5471  002E54  0E00               	movlw	high _sensor_readings_raw
  5472  002E56  20F4               	addwfc	prodh,w,c
  5473  002E58  6EDA               	movwf	fsr2h,c
  5474  002E5A  CFDE F070          	movff	postinc2,??_CalibrateOffsets
  5475  002E5E  CFDD F071          	movff	postdec2,??_CalibrateOffsets+1
  5476  002E62  0100               	movlb	0	; () banked
  5477  002E64  1F70               	comf	??_CalibrateOffsets& (0+255),f,b
  5478  002E66  1F71               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  5479  002E68  4B70               	infsnz	??_CalibrateOffsets& (0+255),f,b
  5480  002E6A  2B71               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  5481  002E6C  0100               	movlb	0	; () banked
  5482  002E6E  51D4               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  5483  002E70  0100               	movlb	0	; () banked
  5484  002E72  2770               	addwf	??_CalibrateOffsets& (0+255),f,b
  5485  002E74  0100               	movlb	0	; () banked
  5486  002E76  51D5               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  5487  002E78  0100               	movlb	0	; () banked
  5488  002E7A  2371               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  5489  002E7C  0100               	movlb	0	; () banked
  5490  002E7E  5172               	movf	CalibrateOffsets@index& (0+255),w,b
  5491  002E80  0D02               	mullw	2
  5492  002E82  0EDE               	movlw	low _sensor_offsets
  5493  002E84  24F3               	addwf	prodl,w,c
  5494  002E86  6ED9               	movwf	fsr2l,c
  5495  002E88  0E00               	movlw	high _sensor_offsets
  5496  002E8A  20F4               	addwfc	prodh,w,c
  5497  002E8C  6EDA               	movwf	fsr2h,c
  5498  002E8E  C070  FFDE         	movff	??_CalibrateOffsets,postinc2
  5499  002E92  C071  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  5500                           
  5501                           ; BSR set to: 0
  5502  002E96  0100               	movlb	0	; () banked
  5503  002E98  2B72               	incf	CalibrateOffsets@index& (0+255),f,b
  5504  002E9A  D7D1               	goto	l5578
  5505  002E9C                     l283:
  5506                           
  5507                           ; BSR set to: 0
  5508  002E9C  0012               	return		;funcret
  5509  002E9E                     __end_of_CalibrateOffsets:
  5510                           	opt stack 0
  5511                           prodh	equ	0xFF4
  5512                           prodl	equ	0xFF3
  5513                           intcon	equ	0xFF2
  5514                           postinc0	equ	0xFEE
  5515                           wreg	equ	0xFE8
  5516                           indf2	equ	0xFDF
  5517                           postinc2	equ	0xFDE
  5518                           postdec2	equ	0xFDD
  5519                           fsr2h	equ	0xFDA
  5520                           fsr2l	equ	0xFD9
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function _GetSensorReadings *****************
  5524 ;; Defined at:
  5525 ;;		line 319 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;		None               void
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;Total ram usage:        0 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    9
  5546 ;; This function calls:
  5547 ;;		_ConvertADC
  5548 ;;		_SetADCChannel
  5549 ;; This function is called by:
  5550 ;;		_CalibrateOffsets
  5551 ;;		_CalibrateThreshold
  5552 ;;		_main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text43
  5557  00375C                     __ptext43:
  5558                           	opt stack 0
  5559  00375C                     _GetSensorReadings:
  5560                           	opt stack 18
  5561                           
  5562                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 321: sensor_acq_index = 0;
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;incstack = 0
  5566  00375C  0E00               	movlw	0
  5567  00375E  6E1B               	movwf	_sensor_acq_index,c	;volatile
  5568                           
  5569                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 322: sensor_acq_done = 0;
  5570  003760  0E00               	movlw	0
  5571  003762  6E1A               	movwf	_sensor_acq_done,c	;volatile
  5572                           
  5573                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 323: SetADCChannel(sensor_acq_index);
  5574  003764  501B               	movf	_sensor_acq_index,w,c	;volatile
  5575  003766  EC42  F011         	call	_SetADCChannel
  5576                           
  5577                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 324: ConvertADC();
  5578  00376A  ECA6  F01C         	call	_ConvertADC	;wreg free
  5579                           
  5580                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 325: PIE1bits.ADIE = 1;
  5581  00376E  8C9D               	bsf	3997,6,c	;volatile
  5582  003770  0012               	return		;funcret
  5583  003772                     __end_of_GetSensorReadings:
  5584                           	opt stack 0
  5585                           prodh	equ	0xFF4
  5586                           prodl	equ	0xFF3
  5587                           intcon	equ	0xFF2
  5588                           postinc0	equ	0xFEE
  5589                           wreg	equ	0xFE8
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function _SetADCChannel *****************
  5598 ;; Defined at:
  5599 ;;		line 261 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  channel         1    wreg     unsigned char 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  channel         1   15[BANK0 ] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;		None               void
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;Total ram usage:        1 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    8
  5620 ;; This function calls:
  5621 ;;		_SetChanADC
  5622 ;; This function is called by:
  5623 ;;		_GetSensorReadings
  5624 ;;		_CalibrateThreshold
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text44
  5629  002284                     __ptext44:
  5630                           	opt stack 0
  5631  002284                     _SetADCChannel:
  5632                           	opt stack 19
  5633                           
  5634                           ;incstack = 0
  5635                           ;SetADCChannel@channel stored from wreg
  5636  002284  0100               	movlb	0	; () banked
  5637  002286  6F6F               	movwf	SetADCChannel@channel& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 263: switch (channel) {
  5641  002288  D040               	goto	l4994
  5642  00228A                     l4960:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 265: SetChanADC(0b10000111);
  5646  00228A  0E87               	movlw	135
  5647  00228C  EC7B  F01B         	call	_SetChanADC
  5648                           
  5649                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 266: break;
  5650  002290  D06F               	goto	l194
  5651  002292                     l4962:
  5652                           
  5653                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 268: SetChanADC(0b10001111);
  5654  002292  0E8F               	movlw	143
  5655  002294  EC7B  F01B         	call	_SetChanADC
  5656                           
  5657                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 269: break;
  5658  002298  D06B               	goto	l194
  5659  00229A                     l4964:
  5660                           
  5661                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 271: SetChanADC(0b10010111);
  5662  00229A  0E97               	movlw	151
  5663  00229C  EC7B  F01B         	call	_SetChanADC
  5664                           
  5665                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 272: break;
  5666  0022A0  D067               	goto	l194
  5667  0022A2                     l4966:
  5668                           
  5669                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 274: SetChanADC(0b10011111);
  5670  0022A2  0E9F               	movlw	159
  5671  0022A4  EC7B  F01B         	call	_SetChanADC
  5672                           
  5673                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 275: break;
  5674  0022A8  D063               	goto	l194
  5675  0022AA                     l4968:
  5676                           
  5677                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 277: SetChanADC(0b10100111);
  5678  0022AA  0EA7               	movlw	167
  5679  0022AC  EC7B  F01B         	call	_SetChanADC
  5680                           
  5681                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 278: break;
  5682  0022B0  D05F               	goto	l194
  5683  0022B2                     l4970:
  5684                           
  5685                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 280: SetChanADC(0b10101111);
  5686  0022B2  0EAF               	movlw	175
  5687  0022B4  EC7B  F01B         	call	_SetChanADC
  5688                           
  5689                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 281: break;
  5690  0022B8  D05B               	goto	l194
  5691  0022BA                     l4972:
  5692                           
  5693                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 283: SetChanADC(0b10110111);
  5694  0022BA  0EB7               	movlw	183
  5695  0022BC  EC7B  F01B         	call	_SetChanADC
  5696                           
  5697                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 284: break;
  5698  0022C0  D057               	goto	l194
  5699  0022C2                     l4974:
  5700                           
  5701                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 286: SetChanADC(0b10111111);
  5702  0022C2  0EBF               	movlw	191
  5703  0022C4  EC7B  F01B         	call	_SetChanADC
  5704                           
  5705                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 287: break;
  5706  0022C8  D053               	goto	l194
  5707  0022CA                     l4976:
  5708                           
  5709                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 289: SetChanADC(0b11000111);
  5710  0022CA  0EC7               	movlw	199
  5711  0022CC  EC7B  F01B         	call	_SetChanADC
  5712                           
  5713                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 290: break;
  5714  0022D0  D04F               	goto	l194
  5715  0022D2                     l4978:
  5716                           
  5717                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 292: SetChanADC(0b11001111);
  5718  0022D2  0ECF               	movlw	207
  5719  0022D4  EC7B  F01B         	call	_SetChanADC
  5720                           
  5721                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 293: break;
  5722  0022D8  D04B               	goto	l194
  5723  0022DA                     l4980:
  5724                           
  5725                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 295: SetChanADC(0b11010111);
  5726  0022DA  0ED7               	movlw	215
  5727  0022DC  EC7B  F01B         	call	_SetChanADC
  5728                           
  5729                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 296: break;
  5730  0022E0  D047               	goto	l194
  5731  0022E2                     l4982:
  5732                           
  5733                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 298: SetChanADC(0b11011111);
  5734  0022E2  0EDF               	movlw	223
  5735  0022E4  EC7B  F01B         	call	_SetChanADC
  5736                           
  5737                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 299: break;
  5738  0022E8  D043               	goto	l194
  5739  0022EA                     l4984:
  5740                           
  5741                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 301: SetChanADC(0b11100111);
  5742  0022EA  0EE7               	movlw	231
  5743  0022EC  EC7B  F01B         	call	_SetChanADC
  5744                           
  5745                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 302: break;
  5746  0022F0  D03F               	goto	l194
  5747  0022F2                     l4986:
  5748                           
  5749                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 304: SetChanADC(0b11101111);
  5750  0022F2  0EEF               	movlw	239
  5751  0022F4  EC7B  F01B         	call	_SetChanADC
  5752                           
  5753                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 305: break;
  5754  0022F8  D03B               	goto	l194
  5755  0022FA                     l4988:
  5756                           
  5757                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 307: SetChanADC(0b11110111);
  5758  0022FA  0EF7               	movlw	247
  5759  0022FC  EC7B  F01B         	call	_SetChanADC
  5760                           
  5761                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 308: break;
  5762  002300  D037               	goto	l194
  5763  002302                     l4990:
  5764                           
  5765                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 310: SetChanADC(0b11111111);
  5766  002302  0EFF               	movlw	255
  5767  002304  EC7B  F01B         	call	_SetChanADC
  5768                           
  5769                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 314: }
  5770                           
  5771                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 313: break;
  5772                           
  5773                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 312: default:
  5774                           
  5775                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 311: break;
  5776  002308  D033               	goto	l194
  5777  00230A                     l4994:
  5778  00230A  0100               	movlb	0	; () banked
  5779  00230C  516F               	movf	SetADCChannel@channel& (0+255),w,b
  5780                           
  5781                           ; Switch size 1, requested type "space"
  5782                           ; Number of cases is 16, Range of values is 0 to 15
  5783                           ; switch strategies available:
  5784                           ; Name         Instructions Cycles
  5785                           ; simple_byte           49    25 (average)
  5786                           ;	Chosen strategy is simple_byte
  5787  00230E  0A00               	xorlw	0	; case 0
  5788  002310  B4D8               	btfsc	status,2,c
  5789  002312  D7BB               	goto	l4960
  5790  002314  0A01               	xorlw	1	; case 1
  5791  002316  B4D8               	btfsc	status,2,c
  5792  002318  D7BC               	goto	l4962
  5793  00231A  0A03               	xorlw	3	; case 2
  5794  00231C  B4D8               	btfsc	status,2,c
  5795  00231E  D7BD               	goto	l4964
  5796  002320  0A01               	xorlw	1	; case 3
  5797  002322  B4D8               	btfsc	status,2,c
  5798  002324  D7BE               	goto	l4966
  5799  002326  0A07               	xorlw	7	; case 4
  5800  002328  B4D8               	btfsc	status,2,c
  5801  00232A  D7BF               	goto	l4968
  5802  00232C  0A01               	xorlw	1	; case 5
  5803  00232E  B4D8               	btfsc	status,2,c
  5804  002330  D7C0               	goto	l4970
  5805  002332  0A03               	xorlw	3	; case 6
  5806  002334  B4D8               	btfsc	status,2,c
  5807  002336  D7C1               	goto	l4972
  5808  002338  0A01               	xorlw	1	; case 7
  5809  00233A  B4D8               	btfsc	status,2,c
  5810  00233C  D7C2               	goto	l4974
  5811  00233E  0A0F               	xorlw	15	; case 8
  5812  002340  B4D8               	btfsc	status,2,c
  5813  002342  D7C3               	goto	l4976
  5814  002344  0A01               	xorlw	1	; case 9
  5815  002346  B4D8               	btfsc	status,2,c
  5816  002348  D7C4               	goto	l4978
  5817  00234A  0A03               	xorlw	3	; case 10
  5818  00234C  B4D8               	btfsc	status,2,c
  5819  00234E  D7C5               	goto	l4980
  5820  002350  0A01               	xorlw	1	; case 11
  5821  002352  B4D8               	btfsc	status,2,c
  5822  002354  D7C6               	goto	l4982
  5823  002356  0A07               	xorlw	7	; case 12
  5824  002358  B4D8               	btfsc	status,2,c
  5825  00235A  D7C7               	goto	l4984
  5826  00235C  0A01               	xorlw	1	; case 13
  5827  00235E  B4D8               	btfsc	status,2,c
  5828  002360  D7C8               	goto	l4986
  5829  002362  0A03               	xorlw	3	; case 14
  5830  002364  B4D8               	btfsc	status,2,c
  5831  002366  D7C9               	goto	l4988
  5832  002368  0A01               	xorlw	1	; case 15
  5833  00236A  B4D8               	btfsc	status,2,c
  5834  00236C  D7CA               	goto	l4990
  5835  00236E  D000               	goto	l194
  5836  002370                     l194:
  5837  002370  0012               	return		;funcret
  5838  002372                     __end_of_SetADCChannel:
  5839                           	opt stack 0
  5840                           prodh	equ	0xFF4
  5841                           prodl	equ	0xFF3
  5842                           intcon	equ	0xFF2
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           indf2	equ	0xFDF
  5846                           postinc2	equ	0xFDE
  5847                           postdec2	equ	0xFDD
  5848                           fsr2h	equ	0xFDA
  5849                           fsr2l	equ	0xFD9
  5850                           status	equ	0xFD8
  5851                           
  5852 ;; *************** function _SetChanADC *****************
  5853 ;; Defined at:
  5854 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  channel         1    wreg     unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  channel         1   14[BANK0 ] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;		None               void
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;Total ram usage:        2 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    7
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_SetADCChannel
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text45
  5883  0036F6                     __ptext45:
  5884                           	opt stack 0
  5885  0036F6                     _SetChanADC:
  5886                           	opt stack 19
  5887                           
  5888                           ;incstack = 0
  5889                           ;SetChanADC@channel stored from wreg
  5890  0036F6  0100               	movlb	0	; () banked
  5891  0036F8  6F6E               	movwf	SetChanADC@channel& (0+255),b
  5892                           
  5893                           ; BSR set to: 0
  5894  0036FA  CFC2 F042          	movff	4034,??_SetChanADC	;volatile
  5895  0036FE  0EC3               	movlw	195
  5896  003700  1642               	andwf	??_SetChanADC,f,c
  5897  003702  0100               	movlb	0	; () banked
  5898  003704  90D8               	bcf	status,0,c
  5899  003706  316E               	rrcf	SetChanADC@channel& (0+255),w,b
  5900  003708  0B3C               	andlw	60
  5901  00370A  1042               	iorwf	??_SetChanADC,w,c
  5902  00370C  6EC2               	movwf	4034,c	;volatile
  5903                           
  5904                           ; BSR set to: 0
  5905  00370E  0012               	return		;funcret
  5906  003710                     __end_of_SetChanADC:
  5907                           	opt stack 0
  5908                           prodh	equ	0xFF4
  5909                           prodl	equ	0xFF3
  5910                           intcon	equ	0xFF2
  5911                           postinc0	equ	0xFEE
  5912                           wreg	equ	0xFE8
  5913                           indf2	equ	0xFDF
  5914                           postinc2	equ	0xFDE
  5915                           postdec2	equ	0xFDD
  5916                           fsr2h	equ	0xFDA
  5917                           fsr2l	equ	0xFD9
  5918                           status	equ	0xFD8
  5919                           
  5920 ;; *************** function _ConvertADC *****************
  5921 ;; Defined at:
  5922 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;		None               void
  5929 ;; Registers used:
  5930 ;;		None
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    7
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_GetSensorReadings
  5947 ;;		_CalibrateThreshold
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text46
  5952  00394C                     __ptext46:
  5953                           	opt stack 0
  5954  00394C                     _ConvertADC:
  5955                           	opt stack 19
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;incstack = 0
  5959  00394C  82C2               	bsf	4034,1,c	;volatile
  5960  00394E  0012               	return		;funcret
  5961  003950                     __end_of_ConvertADC:
  5962                           	opt stack 0
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon	equ	0xFF2
  5966                           postinc0	equ	0xFEE
  5967                           wreg	equ	0xFE8
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function _BusySensorAcq *****************
  5976 ;; Defined at:
  5977 ;;		line 330 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      unsigned char 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        0 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    7
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_CalibrateOffsets
  6002 ;;		_CalibrateThreshold
  6003 ;;		_main
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text47
  6008  00387C                     __ptext47:
  6009                           	opt stack 0
  6010  00387C                     _BusySensorAcq:
  6011                           	opt stack 20
  6012                           
  6013                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 332: return (!sensor_acq_done);
  6014                           
  6015                           ;incstack = 0
  6016  00387C  501A               	movf	_sensor_acq_done,w,c	;volatile
  6017  00387E  A4D8               	btfss	status,2,c
  6018  003880  D002               	goto	u4630
  6019  003882  0E01               	movlw	1
  6020  003884  D002               	goto	l200
  6021  003886                     u4630:
  6022  003886  0E00               	movlw	0
  6023  003888  D000               	goto	l200
  6024  00388A                     l200:
  6025  00388A  0012               	return		;funcret
  6026  00388C                     __end_of_BusySensorAcq:
  6027                           	opt stack 0
  6028                           prodh	equ	0xFF4
  6029                           prodl	equ	0xFF3
  6030                           intcon	equ	0xFF2
  6031                           postinc0	equ	0xFEE
  6032                           wreg	equ	0xFE8
  6033                           indf2	equ	0xFDF
  6034                           postinc2	equ	0xFDE
  6035                           postdec2	equ	0xFDD
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _GetDistance *****************
  6041 ;; Defined at:
  6042 ;;		line 48 in file "Ultrasound.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;		None               void
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    8
  6063 ;; This function calls:
  6064 ;;		_Delay1TCYx
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text48
  6071  0037C8                     __ptext48:
  6072                           	opt stack 0
  6073  0037C8                     _GetDistance:
  6074                           	opt stack 22
  6075                           
  6076                           ;Ultrasound.c: 50: LATEbits.LATE5 = 1;
  6077                           
  6078                           ;incstack = 0
  6079  0037C8  8A8D               	bsf	3981,5,c	;volatile
  6080                           
  6081                           ;Ultrasound.c: 51: Delay1TCYx(25);
  6082  0037CA  0E19               	movlw	25
  6083  0037CC  EC72  F01C         	call	_Delay1TCYx
  6084                           
  6085                           ;Ultrasound.c: 52: LATEbits.LATE5 = 0;
  6086  0037D0  9A8D               	bcf	3981,5,c	;volatile
  6087                           
  6088                           ;Ultrasound.c: 53: INTCON2bits.INTEDG3 = 1;
  6089  0037D2  86F1               	bsf	intcon2,3,c	;volatile
  6090                           
  6091                           ;Ultrasound.c: 54: INTCON3bits.INT3IE = 1;
  6092  0037D4  8AF0               	bsf	intcon3,5,c	;volatile
  6093                           
  6094                           ;Ultrasound.c: 56: echo_acq_done = 0;
  6095  0037D6  0E00               	movlw	0
  6096  0037D8  6E16               	movwf	_echo_acq_done,c
  6097  0037DA  0012               	return		;funcret
  6098  0037DC                     __end_of_GetDistance:
  6099                           	opt stack 0
  6100                           prodh	equ	0xFF4
  6101                           prodl	equ	0xFF3
  6102                           intcon	equ	0xFF2
  6103                           intcon2	equ	0xFF1
  6104                           intcon3	equ	0xFF0
  6105                           postinc0	equ	0xFEE
  6106                           wreg	equ	0xFE8
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function _Delay1TCYx *****************
  6115 ;; Defined at:
  6116 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  unit            1    wreg     unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  unit            1   29[COMRAM] unsigned char 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;		None               void
  6123 ;; Registers used:
  6124 ;;		wreg
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;Total ram usage:        1 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    7
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_GetDistance
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text49
  6145  0038E4                     __ptext49:
  6146                           	opt stack 0
  6147  0038E4                     _Delay1TCYx:
  6148                           	opt stack 22
  6149                           
  6150                           ;incstack = 0
  6151                           ;Delay1TCYx@unit stored from wreg
  6152  0038E4  6E42               	movwf	Delay1TCYx@unit,c
  6153  0038E6                     l1120:
  6154  0038E6  F000               	nop	
  6155  0038E8  2E42               	decfsz	Delay1TCYx@unit,f,c
  6156  0038EA  D7FD               	goto	l1120
  6157  0038EC  D000               	goto	l1122
  6158  0038EE                     l1122:
  6159  0038EE  0012               	return		;funcret
  6160  0038F0                     __end_of_Delay1TCYx:
  6161                           	opt stack 0
  6162                           prodh	equ	0xFF4
  6163                           prodl	equ	0xFF3
  6164                           intcon	equ	0xFF2
  6165                           intcon2	equ	0xFF1
  6166                           intcon3	equ	0xFF0
  6167                           postinc0	equ	0xFEE
  6168                           wreg	equ	0xFE8
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _EnableSensorLEDS *****************
  6177 ;; Defined at:
  6178 ;;		line 437 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    7
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_main
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text50
  6207  00393E                     __ptext50:
  6208                           	opt stack 0
  6209  00393E                     _EnableSensorLEDS:
  6210                           	opt stack 23
  6211                           
  6212                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 439: LATE = 0x1F;
  6213                           
  6214                           ;incstack = 0
  6215  00393E  0E1F               	movlw	31
  6216  003940  6E8D               	movwf	3981,c	;volatile
  6217  003942  0012               	return		;funcret
  6218  003944                     __end_of_EnableSensorLEDS:
  6219                           	opt stack 0
  6220                           prodh	equ	0xFF4
  6221                           prodl	equ	0xFF3
  6222                           intcon	equ	0xFF2
  6223                           intcon2	equ	0xFF1
  6224                           intcon3	equ	0xFF0
  6225                           postinc0	equ	0xFEE
  6226                           wreg	equ	0xFE8
  6227                           indf2	equ	0xFDF
  6228                           postinc2	equ	0xFDE
  6229                           postdec2	equ	0xFDD
  6230                           fsr2h	equ	0xFDA
  6231                           fsr2l	equ	0xFD9
  6232                           status	equ	0xFD8
  6233                           
  6234 ;; *************** function _EnableMotors *****************
  6235 ;; Defined at:
  6236 ;;		line 102 in file "Motors.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;		None
  6241 ;; Return value:  Size  Location     Type
  6242 ;;		None               void
  6243 ;; Registers used:
  6244 ;;		None
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;Total ram usage:        0 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    7
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_main
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text51
  6265  003950                     __ptext51:
  6266                           	opt stack 0
  6267  003950                     _EnableMotors:
  6268                           	opt stack 23
  6269                           
  6270                           ;Motors.c: 104: LATDbits.LATD4 = 1;
  6271                           
  6272                           ;incstack = 0
  6273  003950  888C               	bsf	3980,4,c	;volatile
  6274  003952  0012               	return		;funcret
  6275  003954                     __end_of_EnableMotors:
  6276                           	opt stack 0
  6277                           prodh	equ	0xFF4
  6278                           prodl	equ	0xFF3
  6279                           intcon	equ	0xFF2
  6280                           intcon2	equ	0xFF1
  6281                           intcon3	equ	0xFF0
  6282                           postinc0	equ	0xFEE
  6283                           wreg	equ	0xFE8
  6284                           indf2	equ	0xFDF
  6285                           postinc2	equ	0xFDE
  6286                           postdec2	equ	0xFDD
  6287                           fsr2h	equ	0xFDA
  6288                           fsr2l	equ	0xFD9
  6289                           status	equ	0xFD8
  6290                           
  6291 ;; *************** function _DisableMotors *****************
  6292 ;; Defined at:
  6293 ;;		line 108 in file "Motors.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;		None               void
  6300 ;; Registers used:
  6301 ;;		None
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    7
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_main
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text52
  6322  003954                     __ptext52:
  6323                           	opt stack 0
  6324  003954                     _DisableMotors:
  6325                           	opt stack 23
  6326                           
  6327                           ;Motors.c: 110: LATDbits.LATD4 = 0;
  6328                           
  6329                           ;incstack = 0
  6330  003954  988C               	bcf	3980,4,c	;volatile
  6331  003956  0012               	return		;funcret
  6332  003958                     __end_of_DisableMotors:
  6333                           	opt stack 0
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           intcon2	equ	0xFF1
  6338                           intcon3	equ	0xFF0
  6339                           postinc0	equ	0xFEE
  6340                           wreg	equ	0xFE8
  6341                           indf2	equ	0xFDF
  6342                           postinc2	equ	0xFDE
  6343                           postdec2	equ	0xFDD
  6344                           fsr2h	equ	0xFDA
  6345                           fsr2l	equ	0xFD9
  6346                           status	equ	0xFD8
  6347                           
  6348 ;; *************** function _ConfigureWireless *****************
  6349 ;; Defined at:
  6350 ;;		line 75 in file "Wireless.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;		None               void
  6357 ;; Registers used:
  6358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:    8
  6371 ;; This function calls:
  6372 ;;		_FlushRxBuf
  6373 ;;		_FlushTxBuf
  6374 ;;		_Open1USART
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text53
  6381  0035C6                     __ptext53:
  6382                           	opt stack 0
  6383  0035C6                     _ConfigureWireless:
  6384                           	opt stack 22
  6385                           
  6386                           ;Wireless.c: 77: Open1USART(0b01111111
  6387                           ;Wireless.c: 78: & 0b10111111
  6388                           ;Wireless.c: 79: & 0b11111110
  6389                           ;Wireless.c: 80: & 0b11111101
  6390                           ;Wireless.c: 81: & 0b11111111
  6391                           ;Wireless.c: 82: & 0b11111111,
  6392                           ;Wireless.c: 83: 64);
  6393                           
  6394                           ;incstack = 0
  6395  0035C6  0E00               	movlw	0
  6396  0035C8  0100               	movlb	0	; () banked
  6397  0035CA  6F6F               	movwf	(Open1USART@spbrg+1)& (0+255),b
  6398  0035CC  0E40               	movlw	64
  6399  0035CE  6F6E               	movwf	Open1USART@spbrg& (0+255),b
  6400  0035D0  0E3C               	movlw	60
  6401  0035D2  EC4F  F017         	call	_Open1USART
  6402                           
  6403                           ;Wireless.c: 85: FlushTxBuf();
  6404  0035D6  EC4F  F01A         	call	_FlushTxBuf	;wreg free
  6405                           
  6406                           ;Wireless.c: 86: FlushRxBuf();
  6407  0035DA  ECF6  F01A         	call	_FlushRxBuf	;wreg free
  6408                           
  6409                           ;Wireless.c: 88: get_Tx_index = 0;
  6410  0035DE  0E00               	movlw	0
  6411  0035E0  6E17               	movwf	_get_Tx_index,c
  6412                           
  6413                           ;Wireless.c: 89: put_Tx_index = 0;
  6414  0035E2  0E00               	movlw	0
  6415  0035E4  6E18               	movwf	_put_Tx_index,c
  6416                           
  6417                           ;Wireless.c: 91: Tx_complete = 1;
  6418  0035E6  0E01               	movlw	1
  6419  0035E8  6E13               	movwf	_Tx_complete,c
  6420  0035EA  0012               	return		;funcret
  6421  0035EC                     __end_of_ConfigureWireless:
  6422                           	opt stack 0
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           intcon	equ	0xFF2
  6426                           intcon2	equ	0xFF1
  6427                           intcon3	equ	0xFF0
  6428                           postinc0	equ	0xFEE
  6429                           wreg	equ	0xFE8
  6430                           indf2	equ	0xFDF
  6431                           postinc2	equ	0xFDE
  6432                           postdec2	equ	0xFDD
  6433                           fsr2h	equ	0xFDA
  6434                           fsr2l	equ	0xFD9
  6435                           status	equ	0xFD8
  6436                           
  6437 ;; *************** function _Open1USART *****************
  6438 ;; Defined at:
  6439 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  config          1    wreg     unsigned char 
  6442 ;;  spbrg           2   14[BANK0 ] unsigned int 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  config          1   29[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg, status,2
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;Total ram usage:        3 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    7
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_ConfigureWireless
  6465 ;;		_ConfigureSerial
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text54
  6470  002E9E                     __ptext54:
  6471                           	opt stack 0
  6472  002E9E                     _Open1USART:
  6473                           	opt stack 22
  6474                           
  6475                           ;incstack = 0
  6476                           ;Open1USART@config stored from wreg
  6477  002E9E  6E42               	movwf	Open1USART@config,c
  6478  002EA0  0E00               	movlw	0
  6479  002EA2  6EAC               	movwf	4012,c	;volatile
  6480  002EA4  0E00               	movlw	0
  6481  002EA6  6EAB               	movwf	4011,c	;volatile
  6482  002EA8  A042               	btfss	Open1USART@config,0,c
  6483  002EAA  D002               	goto	l5848
  6484  002EAC  88AC               	bsf	4012,4,c	;volatile
  6485  002EAE  D000               	goto	l5848
  6486  002EB0                     l5848:
  6487  002EB0  A242               	btfss	Open1USART@config,1,c
  6488  002EB2  D003               	goto	l5852
  6489  002EB4  8CAC               	bsf	4012,6,c	;volatile
  6490  002EB6  8CAB               	bsf	4011,6,c	;volatile
  6491  002EB8  D000               	goto	l5852
  6492  002EBA                     l5852:
  6493  002EBA  A442               	btfss	Open1USART@config,2,c
  6494  002EBC  D002               	goto	l5856
  6495  002EBE  8EAC               	bsf	4012,7,c	;volatile
  6496  002EC0  D000               	goto	l5856
  6497  002EC2                     l5856:
  6498  002EC2  A642               	btfss	Open1USART@config,3,c
  6499  002EC4  D002               	goto	l867
  6500  002EC6  88AB               	bsf	4011,4,c	;volatile
  6501  002EC8  D002               	goto	l5860
  6502  002ECA                     l867:
  6503  002ECA  8AAB               	bsf	4011,5,c	;volatile
  6504  002ECC  D000               	goto	l5860
  6505  002ECE                     l5860:
  6506  002ECE  A842               	btfss	Open1USART@config,4,c
  6507  002ED0  D002               	goto	l5864
  6508  002ED2  84AC               	bsf	4012,2,c	;volatile
  6509  002ED4  D000               	goto	l5864
  6510  002ED6                     l5864:
  6511  002ED6  AA42               	btfss	Open1USART@config,5,c
  6512  002ED8  D002               	goto	l5868
  6513  002EDA  86AB               	bsf	4011,3,c	;volatile
  6514  002EDC  D000               	goto	l5868
  6515  002EDE                     l5868:
  6516  002EDE  AC42               	btfss	Open1USART@config,6,c
  6517  002EE0  D002               	goto	l871
  6518  002EE2  8A9D               	bsf	3997,5,c	;volatile
  6519  002EE4  D002               	goto	l5872
  6520  002EE6                     l871:
  6521  002EE6  9A9D               	bcf	3997,5,c	;volatile
  6522  002EE8  D000               	goto	l5872
  6523  002EEA                     l5872:
  6524  002EEA  AE42               	btfss	Open1USART@config,7,c
  6525  002EEC  D002               	goto	l873
  6526  002EEE  889D               	bsf	3997,4,c	;volatile
  6527  002EF0  D001               	goto	l874
  6528  002EF2                     l873:
  6529  002EF2  989D               	bcf	3997,4,c	;volatile
  6530  002EF4                     l874:
  6531  002EF4  C06E  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  6532  002EF8  0100               	movlb	0	; () banked
  6533  002EFA  516F               	movf	(Open1USART@spbrg+1)& (0+255),w,b
  6534  002EFC  6E7F               	movwf	3967,c	;volatile
  6535                           
  6536                           ; BSR set to: 0
  6537  002EFE  8AAC               	bsf	4012,5,c	;volatile
  6538                           
  6539                           ; BSR set to: 0
  6540  002F00  8EAB               	bsf	4011,7,c	;volatile
  6541                           
  6542                           ; BSR set to: 0
  6543  002F02  9C94               	bcf	3988,6,c	;volatile
  6544                           
  6545                           ; BSR set to: 0
  6546  002F04  8E94               	bsf	3988,7,c	;volatile
  6547                           
  6548                           ; BSR set to: 0
  6549  002F06  B8AC               	btfsc	4012,4,c	;volatile
  6550                           
  6551                           ; BSR set to: 0
  6552  002F08  BEAC               	btfsc	4012,7,c	;volatile
  6553  002F0A  D002               	goto	l876
  6554                           
  6555                           ; BSR set to: 0
  6556  002F0C  8C94               	bsf	3988,6,c	;volatile
  6557  002F0E  D000               	goto	l876
  6558  002F10                     l876:
  6559                           
  6560                           ; BSR set to: 0
  6561  002F10  0012               	return		;funcret
  6562  002F12                     __end_of_Open1USART:
  6563                           	opt stack 0
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon	equ	0xFF2
  6567                           intcon2	equ	0xFF1
  6568                           intcon3	equ	0xFF0
  6569                           postinc0	equ	0xFEE
  6570                           wreg	equ	0xFE8
  6571                           indf2	equ	0xFDF
  6572                           postinc2	equ	0xFDE
  6573                           postdec2	equ	0xFDD
  6574                           fsr2h	equ	0xFDA
  6575                           fsr2l	equ	0xFD9
  6576                           status	equ	0xFD8
  6577                           
  6578 ;; *************** function _FlushTxBuf *****************
  6579 ;; Defined at:
  6580 ;;		line 54 in file "Wireless.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  index           1   29[COMRAM] unsigned char 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;		None               void
  6587 ;; Registers used:
  6588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;Total ram usage:        1 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    7
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_ConfigureWireless
  6605 ;;		_SendStatus
  6606 ;;		_SendLineMode
  6607 ;;		_SendOffsets
  6608 ;;		_SendThreshold
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text55
  6613  00349E                     __ptext55:
  6614                           	opt stack 0
  6615  00349E                     _FlushTxBuf:
  6616                           	opt stack 22
  6617                           
  6618                           ;Wireless.c: 55: unsigned char index;
  6619                           ;Wireless.c: 57: for(index = 0; index < 20; index++) {
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;incstack = 0
  6623  00349E  0E00               	movlw	0
  6624  0034A0  6E42               	movwf	FlushTxBuf@index,c
  6625  0034A2                     l5384:
  6626  0034A2  0E13               	movlw	19
  6627  0034A4  6442               	cpfsgt	FlushTxBuf@index,c
  6628  0034A6  D001               	goto	l5388
  6629  0034A8  D00C               	goto	l5394
  6630  0034AA                     l5388:
  6631                           
  6632                           ;Wireless.c: 58: Tx_buffer[index] = 0;
  6633  0034AA  5042               	movf	FlushTxBuf@index,w,c
  6634  0034AC  0D01               	mullw	1
  6635  0034AE  0EB2               	movlw	low _Tx_buffer
  6636  0034B0  24F3               	addwf	prodl,w,c
  6637  0034B2  6ED9               	movwf	fsr2l,c
  6638  0034B4  0E00               	movlw	high _Tx_buffer
  6639  0034B6  20F4               	addwfc	prodh,w,c
  6640  0034B8  6EDA               	movwf	fsr2h,c
  6641  0034BA  0E00               	movlw	0
  6642  0034BC  6EDF               	movwf	indf2,c
  6643  0034BE  2A42               	incf	FlushTxBuf@index,f,c
  6644  0034C0  D7F0               	goto	l5384
  6645  0034C2                     l5394:
  6646                           
  6647                           ;Wireless.c: 59: }
  6648                           ;Wireless.c: 61: put_Tx_index = 0;
  6649  0034C2  0E00               	movlw	0
  6650  0034C4  6E18               	movwf	_put_Tx_index,c
  6651                           
  6652                           ;Wireless.c: 62: get_Tx_index = 0;
  6653  0034C6  0E00               	movlw	0
  6654  0034C8  6E17               	movwf	_get_Tx_index,c
  6655  0034CA  0012               	return		;funcret
  6656  0034CC                     __end_of_FlushTxBuf:
  6657                           	opt stack 0
  6658                           prodh	equ	0xFF4
  6659                           prodl	equ	0xFF3
  6660                           intcon	equ	0xFF2
  6661                           intcon2	equ	0xFF1
  6662                           intcon3	equ	0xFF0
  6663                           postinc0	equ	0xFEE
  6664                           wreg	equ	0xFE8
  6665                           indf2	equ	0xFDF
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           fsr2h	equ	0xFDA
  6669                           fsr2l	equ	0xFD9
  6670                           status	equ	0xFD8
  6671                           
  6672 ;; *************** function _FlushRxBuf *****************
  6673 ;; Defined at:
  6674 ;;		line 66 in file "Wireless.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  index           1   29[COMRAM] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;		None               void
  6681 ;; Registers used:
  6682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;Total ram usage:        1 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    7
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_ConfigureWireless
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text56
  6703  0035EC                     __ptext56:
  6704                           	opt stack 0
  6705  0035EC                     _FlushRxBuf:
  6706                           	opt stack 22
  6707                           
  6708                           ;Wireless.c: 67: unsigned char index;
  6709                           ;Wireless.c: 69: for(index = 0; index < 20; index++) {
  6710                           
  6711                           ;incstack = 0
  6712  0035EC  0E00               	movlw	0
  6713  0035EE  6E42               	movwf	FlushRxBuf@index,c
  6714  0035F0                     l5988:
  6715  0035F0  0E13               	movlw	19
  6716  0035F2  6442               	cpfsgt	FlushRxBuf@index,c
  6717  0035F4  D001               	goto	l5992
  6718  0035F6  D00C               	goto	l645
  6719  0035F8                     l5992:
  6720                           
  6721                           ;Wireless.c: 70: Rx_buffer[index] = 0;
  6722  0035F8  5042               	movf	FlushRxBuf@index,w,c
  6723  0035FA  0D01               	mullw	1
  6724  0035FC  0E1E               	movlw	low _Rx_buffer
  6725  0035FE  24F3               	addwf	prodl,w,c
  6726  003600  6ED9               	movwf	fsr2l,c
  6727  003602  0E01               	movlw	high _Rx_buffer
  6728  003604  20F4               	addwfc	prodh,w,c
  6729  003606  6EDA               	movwf	fsr2h,c
  6730  003608  0E00               	movlw	0
  6731  00360A  6EDF               	movwf	indf2,c
  6732  00360C  2A42               	incf	FlushRxBuf@index,f,c
  6733  00360E  D7F0               	goto	l5988
  6734  003610                     l645:
  6735  003610  0012               	return		;funcret
  6736  003612                     __end_of_FlushRxBuf:
  6737                           	opt stack 0
  6738                           prodh	equ	0xFF4
  6739                           prodl	equ	0xFF3
  6740                           intcon	equ	0xFF2
  6741                           intcon2	equ	0xFF1
  6742                           intcon3	equ	0xFF0
  6743                           postinc0	equ	0xFEE
  6744                           wreg	equ	0xFE8
  6745                           indf2	equ	0xFDF
  6746                           postinc2	equ	0xFDE
  6747                           postdec2	equ	0xFDD
  6748                           fsr2h	equ	0xFDA
  6749                           fsr2l	equ	0xFD9
  6750                           status	equ	0xFD8
  6751                           
  6752 ;; *************** function _ConfigureUltrasound *****************
  6753 ;; Defined at:
  6754 ;;		line 9 in file "Ultrasound.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  echo_to_cm      3   18[BANK0 ] float 
  6757 ;;  echo_to_in      3   21[BANK0 ] float 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;		None               void
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6769 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;Total ram usage:        6 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    8
  6776 ;; This function calls:
  6777 ;;		_WriteTimer1
  6778 ;; This function is called by:
  6779 ;;		_main
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text57
  6784  003576                     __ptext57:
  6785                           	opt stack 0
  6786  003576                     _ConfigureUltrasound:
  6787                           	opt stack 22
  6788                           
  6789                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
  6790                           
  6791                           ;incstack = 0
  6792  003576  C072  F0EA         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
  6793  00357A  C073  F0EB         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
  6794  00357E  C074  F0EC         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
  6795                           
  6796                           ;Ultrasound.c: 11: convert_in = echo_to_in;
  6797  003582  C075  F0ED         	movff	ConfigureUltrasound@echo_to_in,_convert_in
  6798  003586  C076  F0EE         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
  6799  00358A  C077  F0EF         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
  6800                           
  6801                           ;Ultrasound.c: 12: WriteTimer1(0);
  6802  00358E  0E00               	movlw	0
  6803  003590  0100               	movlb	0	; () banked
  6804  003592  6F6F               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  6805  003594  0E00               	movlw	0
  6806  003596  6F6E               	movwf	WriteTimer1@timer1& (0+255),b
  6807  003598  EC01  F01C         	call	_WriteTimer1	;wreg free
  6808  00359C  0012               	return		;funcret
  6809  00359E                     __end_of_ConfigureUltrasound:
  6810                           	opt stack 0
  6811                           prodh	equ	0xFF4
  6812                           prodl	equ	0xFF3
  6813                           intcon	equ	0xFF2
  6814                           intcon2	equ	0xFF1
  6815                           intcon3	equ	0xFF0
  6816                           postinc0	equ	0xFEE
  6817                           wreg	equ	0xFE8
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           postdec2	equ	0xFDD
  6821                           fsr2h	equ	0xFDA
  6822                           fsr2l	equ	0xFD9
  6823                           status	equ	0xFD8
  6824                           
  6825 ;; *************** function _ConfigureTimer2 *****************
  6826 ;; Defined at:
  6827 ;;		line 167 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;		None               void
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;Total ram usage:        0 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    8
  6848 ;; This function calls:
  6849 ;;		_OpenTimer2
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text58
  6856  00392A                     __ptext58:
  6857                           	opt stack 0
  6858  00392A                     _ConfigureTimer2:
  6859                           	opt stack 22
  6860                           
  6861                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 169: OpenTimer2(0b01111111
  6862                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 170: & 0b11111100
  6863                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 171: & 0b10000111
  6864                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 172: & 0b10110111);
  6865                           
  6866                           ;incstack = 0
  6867  00392A  0E04               	movlw	4
  6868  00392C  EC6D  F01B         	call	_OpenTimer2
  6869  003930  0012               	return		;funcret
  6870  003932                     __end_of_ConfigureTimer2:
  6871                           	opt stack 0
  6872                           prodh	equ	0xFF4
  6873                           prodl	equ	0xFF3
  6874                           intcon	equ	0xFF2
  6875                           intcon2	equ	0xFF1
  6876                           intcon3	equ	0xFF0
  6877                           postinc0	equ	0xFEE
  6878                           wreg	equ	0xFE8
  6879                           indf2	equ	0xFDF
  6880                           postinc2	equ	0xFDE
  6881                           postdec2	equ	0xFDD
  6882                           fsr2h	equ	0xFDA
  6883                           fsr2l	equ	0xFD9
  6884                           status	equ	0xFD8
  6885                           
  6886 ;; *************** function _OpenTimer2 *****************
  6887 ;; Defined at:
  6888 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  config          1    wreg     unsigned char 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  config          1   29[COMRAM] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;		None               void
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;Total ram usage:        1 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    7
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_ConfigureTimer2
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text59
  6917  0036DA                     __ptext59:
  6918                           	opt stack 0
  6919  0036DA                     _OpenTimer2:
  6920                           	opt stack 22
  6921                           
  6922                           ;incstack = 0
  6923                           ;OpenTimer2@config stored from wreg
  6924  0036DA  6E42               	movwf	OpenTimer2@config,c
  6925  0036DC  5042               	movf	OpenTimer2@config,w,c
  6926  0036DE  0BFB               	andlw	251
  6927  0036E0  6ECA               	movwf	4042,c	;volatile
  6928  0036E2  0E00               	movlw	0
  6929  0036E4  6ECC               	movwf	4044,c	;volatile
  6930  0036E6  929E               	bcf	3998,1,c	;volatile
  6931  0036E8  AE42               	btfss	OpenTimer2@config,7,c
  6932  0036EA  D002               	goto	l843
  6933  0036EC  829D               	bsf	3997,1,c	;volatile
  6934  0036EE  D001               	goto	l844
  6935  0036F0                     l843:
  6936  0036F0  929D               	bcf	3997,1,c	;volatile
  6937  0036F2                     l844:
  6938  0036F2  84CA               	bsf	4042,2,c	;volatile
  6939  0036F4  0012               	return		;funcret
  6940  0036F6                     __end_of_OpenTimer2:
  6941                           	opt stack 0
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           intcon2	equ	0xFF1
  6946                           intcon3	equ	0xFF0
  6947                           postinc0	equ	0xFEE
  6948                           wreg	equ	0xFE8
  6949                           indf2	equ	0xFDF
  6950                           postinc2	equ	0xFDE
  6951                           postdec2	equ	0xFDD
  6952                           fsr2h	equ	0xFDA
  6953                           fsr2l	equ	0xFD9
  6954                           status	equ	0xFD8
  6955                           
  6956 ;; *************** function _ConfigureTimer1 *****************
  6957 ;; Defined at:
  6958 ;;		line 149 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;		None               void
  6965 ;; Registers used:
  6966 ;;		wreg, status,2, status,0, cstack
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    8
  6979 ;; This function calls:
  6980 ;;		_OpenTimer1
  6981 ;;		_WriteTimer1
  6982 ;; This function is called by:
  6983 ;;		_main
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text60
  6988  003744                     __ptext60:
  6989                           	opt stack 0
  6990  003744                     _ConfigureTimer1:
  6991                           	opt stack 22
  6992                           
  6993                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 151: OpenTimer1(0b01111111
  6994                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 152: & 0b11111111
  6995                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 153: & 0b11111101
  6996                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 154: & 0b11011111
  6997                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 155: & 0b11110111
  6998                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 156: & 0b11111111);
  6999                           
  7000                           ;incstack = 0
  7001  003744  0E55               	movlw	85
  7002  003746  EC66  F01A         	call	_OpenTimer1
  7003                           
  7004                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 160: T1CONbits.TMR1ON = 0;
  7005  00374A  90CD               	bcf	4045,0,c	;volatile
  7006                           
  7007                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 162: WriteTimer1(0);
  7008  00374C  0E00               	movlw	0
  7009  00374E  0100               	movlb	0	; () banked
  7010  003750  6F6F               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  7011  003752  0E00               	movlw	0
  7012  003754  6F6E               	movwf	WriteTimer1@timer1& (0+255),b
  7013  003756  EC01  F01C         	call	_WriteTimer1	;wreg free
  7014  00375A  0012               	return		;funcret
  7015  00375C                     __end_of_ConfigureTimer1:
  7016                           	opt stack 0
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           intcon	equ	0xFF2
  7020                           intcon2	equ	0xFF1
  7021                           intcon3	equ	0xFF0
  7022                           postinc0	equ	0xFEE
  7023                           wreg	equ	0xFE8
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function _WriteTimer1 *****************
  7032 ;; Defined at:
  7033 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  timer1          2   14[BANK0 ] unsigned int 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  timer           2   16[BANK0 ] struct Timers
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		None
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7047 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;Total ram usage:        4 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    7
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_ConfigureTimer1
  7058 ;;		_ConfigureUltrasound
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text61
  7063  003802                     __ptext61:
  7064                           	opt stack 0
  7065  003802                     _WriteTimer1:
  7066                           	opt stack 22
  7067                           
  7068                           ;incstack = 0
  7069  003802  C06E  F070         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7070  003806  C06F  F071         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7071  00380A  C071  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7072  00380E  C070  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7073  003812  0012               	return		;funcret
  7074  003814                     __end_of_WriteTimer1:
  7075                           	opt stack 0
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           intcon2	equ	0xFF1
  7080                           intcon3	equ	0xFF0
  7081                           postinc0	equ	0xFEE
  7082                           wreg	equ	0xFE8
  7083                           indf2	equ	0xFDF
  7084                           postinc2	equ	0xFDE
  7085                           postdec2	equ	0xFDD
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8
  7089                           
  7090 ;; *************** function _OpenTimer1 *****************
  7091 ;; Defined at:
  7092 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  config          1    wreg     unsigned char 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  config          1   29[COMRAM] unsigned char 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;		None               void
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;Total ram usage:        1 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    7
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_ConfigureTimer1
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text62
  7121  0034CC                     __ptext62:
  7122                           	opt stack 0
  7123  0034CC                     _OpenTimer1:
  7124                           	opt stack 22
  7125                           
  7126                           ;incstack = 0
  7127                           ;OpenTimer1@config stored from wreg
  7128  0034CC  6E42               	movwf	OpenTimer1@config,c
  7129  0034CE  5042               	movf	OpenTimer1@config,w,c
  7130  0034D0  0B7E               	andlw	126
  7131  0034D2  6ECD               	movwf	4045,c	;volatile
  7132  0034D4  AC42               	btfss	OpenTimer1@config,6,c
  7133  0034D6  D002               	goto	l812
  7134  0034D8  8ECD               	bsf	4045,7,c	;volatile
  7135  0034DA  D002               	goto	l5774
  7136  0034DC                     l812:
  7137  0034DC  9ECD               	bcf	4045,7,c	;volatile
  7138  0034DE  D000               	goto	l5774
  7139  0034E0                     l5774:
  7140  0034E0  0E00               	movlw	0
  7141  0034E2  6ECF               	movwf	4047,c	;volatile
  7142  0034E4  0E00               	movlw	0
  7143  0034E6  6ECE               	movwf	4046,c	;volatile
  7144  0034E8  909E               	bcf	3998,0,c	;volatile
  7145  0034EA  AE42               	btfss	OpenTimer1@config,7,c
  7146  0034EC  D002               	goto	l814
  7147  0034EE  809D               	bsf	3997,0,c	;volatile
  7148  0034F0  D001               	goto	l815
  7149  0034F2                     l814:
  7150  0034F2  909D               	bcf	3997,0,c	;volatile
  7151  0034F4                     l815:
  7152  0034F4  80CD               	bsf	4045,0,c	;volatile
  7153  0034F6  0012               	return		;funcret
  7154  0034F8                     __end_of_OpenTimer1:
  7155                           	opt stack 0
  7156                           prodh	equ	0xFF4
  7157                           prodl	equ	0xFF3
  7158                           intcon	equ	0xFF2
  7159                           intcon2	equ	0xFF1
  7160                           intcon3	equ	0xFF0
  7161                           postinc0	equ	0xFEE
  7162                           wreg	equ	0xFE8
  7163                           indf2	equ	0xFDF
  7164                           postinc2	equ	0xFDE
  7165                           postdec2	equ	0xFDD
  7166                           fsr2h	equ	0xFDA
  7167                           fsr2l	equ	0xFD9
  7168                           status	equ	0xFD8
  7169                           
  7170 ;; *************** function _ConfigureTimer0 *****************
  7171 ;; Defined at:
  7172 ;;		line 135 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;		None               void
  7179 ;; Registers used:
  7180 ;;		wreg, status,2, status,0, cstack
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    8
  7193 ;; This function calls:
  7194 ;;		_OpenTimer0
  7195 ;;		_WriteTimer0
  7196 ;; This function is called by:
  7197 ;;		_main
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text63
  7202  003772                     __ptext63:
  7203                           	opt stack 0
  7204  003772                     _ConfigureTimer0:
  7205                           	opt stack 22
  7206                           
  7207                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 137: OpenTimer0(0b11111111
  7208                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 138: & 0b10111111
  7209                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 139: & 0b11011111
  7210                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 140: & 0b11111111);
  7211                           
  7212                           ;incstack = 0
  7213  003772  0E9F               	movlw	159
  7214  003774  EC40  F01B         	call	_OpenTimer0
  7215                           
  7216                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 144: WriteTimer0(63036);
  7217  003778  0EF6               	movlw	246
  7218  00377A  0100               	movlb	0	; () banked
  7219  00377C  6F6F               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7220  00377E  0E3C               	movlw	60
  7221  003780  6F6E               	movwf	WriteTimer0@timer0& (0+255),b
  7222  003782  EC0A  F01C         	call	_WriteTimer0	;wreg free
  7223  003786  0012               	return		;funcret
  7224  003788                     __end_of_ConfigureTimer0:
  7225                           	opt stack 0
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           intcon	equ	0xFF2
  7229                           intcon2	equ	0xFF1
  7230                           intcon3	equ	0xFF0
  7231                           postinc0	equ	0xFEE
  7232                           wreg	equ	0xFE8
  7233                           indf2	equ	0xFDF
  7234                           postinc2	equ	0xFDE
  7235                           postdec2	equ	0xFDD
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function _WriteTimer0 *****************
  7241 ;; Defined at:
  7242 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  timer0          2   14[BANK0 ] unsigned int 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  timer           2   16[BANK0 ] struct Timers
  7247 ;; Return value:  Size  Location     Type
  7248 ;;		None               void
  7249 ;; Registers used:
  7250 ;;		None
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;Total ram usage:        4 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    7
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_ConfigureTimer0
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text64
  7271  003814                     __ptext64:
  7272                           	opt stack 0
  7273  003814                     _WriteTimer0:
  7274                           	opt stack 22
  7275                           
  7276                           ;incstack = 0
  7277  003814  C06E  F070         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7278  003818  C06F  F071         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7279  00381C  C071  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7280  003820  C070  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7281  003824  0012               	return		;funcret
  7282  003826                     __end_of_WriteTimer0:
  7283                           	opt stack 0
  7284                           prodh	equ	0xFF4
  7285                           prodl	equ	0xFF3
  7286                           intcon	equ	0xFF2
  7287                           intcon2	equ	0xFF1
  7288                           intcon3	equ	0xFF0
  7289                           postinc0	equ	0xFEE
  7290                           wreg	equ	0xFE8
  7291                           indf2	equ	0xFDF
  7292                           postinc2	equ	0xFDE
  7293                           postdec2	equ	0xFDD
  7294                           fsr2h	equ	0xFDA
  7295                           fsr2l	equ	0xFD9
  7296                           status	equ	0xFD8
  7297                           
  7298 ;; *************** function _OpenTimer0 *****************
  7299 ;; Defined at:
  7300 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  config          1    wreg     unsigned char 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  config          1   29[COMRAM] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;		None               void
  7307 ;; Registers used:
  7308 ;;		wreg, status,2, status,0
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;Total ram usage:        1 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    7
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_ConfigureTimer0
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text65
  7329  003680                     __ptext65:
  7330                           	opt stack 0
  7331  003680                     _OpenTimer0:
  7332                           	opt stack 22
  7333                           
  7334                           ;incstack = 0
  7335                           ;OpenTimer0@config stored from wreg
  7336  003680  6E42               	movwf	OpenTimer0@config,c
  7337  003682  5042               	movf	OpenTimer0@config,w,c
  7338  003684  0B7F               	andlw	127
  7339  003686  6ED5               	movwf	4053,c	;volatile
  7340  003688  0E00               	movlw	0
  7341  00368A  6ED7               	movwf	4055,c	;volatile
  7342  00368C  0E00               	movlw	0
  7343  00368E  6ED6               	movwf	4054,c	;volatile
  7344  003690  94F2               	bcf	intcon,2,c	;volatile
  7345  003692  AE42               	btfss	OpenTimer0@config,7,c
  7346  003694  D002               	goto	l788
  7347  003696  8AF2               	bsf	intcon,5,c	;volatile
  7348  003698  D001               	goto	l789
  7349  00369A                     l788:
  7350  00369A  9AF2               	bcf	intcon,5,c	;volatile
  7351  00369C                     l789:
  7352  00369C  8ED5               	bsf	4053,7,c	;volatile
  7353  00369E  0012               	return		;funcret
  7354  0036A0                     __end_of_OpenTimer0:
  7355                           	opt stack 0
  7356                           prodh	equ	0xFF4
  7357                           prodl	equ	0xFF3
  7358                           intcon	equ	0xFF2
  7359                           intcon2	equ	0xFF1
  7360                           intcon3	equ	0xFF0
  7361                           postinc0	equ	0xFEE
  7362                           wreg	equ	0xFE8
  7363                           indf2	equ	0xFDF
  7364                           postinc2	equ	0xFDE
  7365                           postdec2	equ	0xFDD
  7366                           fsr2h	equ	0xFDA
  7367                           fsr2l	equ	0xFD9
  7368                           status	equ	0xFD8
  7369                           
  7370 ;; *************** function _ConfigurePWM *****************
  7371 ;; Defined at:
  7372 ;;		line 185 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;		None
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;		None
  7377 ;; Return value:  Size  Location     Type
  7378 ;;		None               void
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;Total ram usage:        0 bytes
  7391 ;; Hardware stack levels used:    1
  7392 ;; Hardware stack levels required when called:    8
  7393 ;; This function calls:
  7394 ;;		_OpenPWM4
  7395 ;;		_OpenPWM5
  7396 ;; This function is called by:
  7397 ;;		_main
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text66
  7402  0038D6                     __ptext66:
  7403                           	opt stack 0
  7404  0038D6                     _ConfigurePWM:
  7405                           	opt stack 22
  7406                           
  7407                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 187: OpenPWM4(130);
  7408                           
  7409                           ;incstack = 0
  7410  0038D6  0E82               	movlw	130
  7411  0038D8  EC2E  F01B         	call	_OpenPWM4
  7412                           
  7413                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 188: OpenPWM5(130);
  7414  0038DC  0E82               	movlw	130
  7415  0038DE  EC1C  F01B         	call	_OpenPWM5
  7416  0038E2  0012               	return		;funcret
  7417  0038E4                     __end_of_ConfigurePWM:
  7418                           	opt stack 0
  7419                           prodh	equ	0xFF4
  7420                           prodl	equ	0xFF3
  7421                           intcon	equ	0xFF2
  7422                           intcon2	equ	0xFF1
  7423                           intcon3	equ	0xFF0
  7424                           postinc0	equ	0xFEE
  7425                           wreg	equ	0xFE8
  7426                           indf2	equ	0xFDF
  7427                           postinc2	equ	0xFDE
  7428                           postdec2	equ	0xFDD
  7429                           fsr2h	equ	0xFDA
  7430                           fsr2l	equ	0xFD9
  7431                           status	equ	0xFD8
  7432                           
  7433 ;; *************** function _OpenPWM5 *****************
  7434 ;; Defined at:
  7435 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  period          1    wreg     unsigned char 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  period          1   29[COMRAM] unsigned char 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;		None               void
  7442 ;; Registers used:
  7443 ;;		wreg, status,2
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;Total ram usage:        1 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:    7
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_ConfigurePWM
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text67
  7464  003638                     __ptext67:
  7465                           	opt stack 0
  7466  003638                     _OpenPWM5:
  7467                           	opt stack 22
  7468                           
  7469                           ;incstack = 0
  7470                           ;OpenPWM5@period stored from wreg
  7471  003638  6E42               	movwf	OpenPWM5@period,c
  7472  00363A  0E0C               	movlw	12
  7473  00363C  6E70               	movwf	3952,c	;volatile
  7474  00363E  ACB1               	btfss	4017,6,c	;volatile
  7475  003640  B6B1               	btfsc	4017,3,c	;volatile
  7476  003642  D005               	goto	l766
  7477  003644  94CA               	bcf	4042,2,c	;volatile
  7478  003646  C042  FFCB         	movff	OpenPWM5@period,4043	;volatile
  7479  00364A  84CA               	bsf	4042,2,c	;volatile
  7480  00364C  D005               	goto	l5828
  7481  00364E                     l766:
  7482  00364E  9476               	bcf	3958,2,c	;volatile
  7483  003650  C042  FF77         	movff	OpenPWM5@period,3959	;volatile
  7484  003654  8476               	bsf	3958,2,c	;volatile
  7485  003656  D000               	goto	l5828
  7486  003658                     l5828:
  7487  003658  9898               	bcf	3992,4,c	;volatile
  7488  00365A  0012               	return		;funcret
  7489  00365C                     __end_of_OpenPWM5:
  7490                           	opt stack 0
  7491                           prodh	equ	0xFF4
  7492                           prodl	equ	0xFF3
  7493                           intcon	equ	0xFF2
  7494                           intcon2	equ	0xFF1
  7495                           intcon3	equ	0xFF0
  7496                           postinc0	equ	0xFEE
  7497                           wreg	equ	0xFE8
  7498                           indf2	equ	0xFDF
  7499                           postinc2	equ	0xFDE
  7500                           postdec2	equ	0xFDD
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function _OpenPWM4 *****************
  7506 ;; Defined at:
  7507 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  period          1    wreg     unsigned char 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  period          1   29[COMRAM] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;		None               void
  7514 ;; Registers used:
  7515 ;;		wreg, status,2
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;Total ram usage:        1 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    7
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_ConfigurePWM
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text68
  7536  00365C                     __ptext68:
  7537                           	opt stack 0
  7538  00365C                     _OpenPWM4:
  7539                           	opt stack 22
  7540                           
  7541                           ;incstack = 0
  7542                           ;OpenPWM4@period stored from wreg
  7543  00365C  6E42               	movwf	OpenPWM4@period,c
  7544  00365E  0E0C               	movlw	12
  7545  003660  6E73               	movwf	3955,c	;volatile
  7546  003662  9698               	bcf	3992,3,c	;volatile
  7547  003664  ACB1               	btfss	4017,6,c	;volatile
  7548  003666  B6B1               	btfsc	4017,3,c	;volatile
  7549  003668  D005               	goto	l740
  7550  00366A  94CA               	bcf	4042,2,c	;volatile
  7551  00366C  C042  FFCB         	movff	OpenPWM4@period,4043	;volatile
  7552  003670  84CA               	bsf	4042,2,c	;volatile
  7553  003672  D005               	goto	l742
  7554  003674                     l740:
  7555  003674  9476               	bcf	3958,2,c	;volatile
  7556  003676  C042  FF77         	movff	OpenPWM4@period,3959	;volatile
  7557  00367A  8476               	bsf	3958,2,c	;volatile
  7558  00367C  D000               	goto	l742
  7559  00367E                     l742:
  7560  00367E  0012               	return		;funcret
  7561  003680                     __end_of_OpenPWM4:
  7562                           	opt stack 0
  7563                           prodh	equ	0xFF4
  7564                           prodl	equ	0xFF3
  7565                           intcon	equ	0xFF2
  7566                           intcon2	equ	0xFF1
  7567                           intcon3	equ	0xFF0
  7568                           postinc0	equ	0xFEE
  7569                           wreg	equ	0xFE8
  7570                           indf2	equ	0xFDF
  7571                           postinc2	equ	0xFDE
  7572                           postdec2	equ	0xFDD
  7573                           fsr2h	equ	0xFDA
  7574                           fsr2l	equ	0xFD9
  7575                           status	equ	0xFD8
  7576                           
  7577 ;; *************** function _ConfigureInterrupts *****************
  7578 ;; Defined at:
  7579 ;;		line 78 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;		None               void
  7586 ;; Registers used:
  7587 ;;		None
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    7
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_main
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text69
  7608  00359E                     __ptext69:
  7609                           	opt stack 0
  7610  00359E                     _ConfigureInterrupts:
  7611                           	opt stack 23
  7612                           
  7613                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 80: INTCONbits.GIE = 1;
  7614                           
  7615                           ;incstack = 0
  7616  00359E  8EF2               	bsf	intcon,7,c	;volatile
  7617                           
  7618                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 81: INTCONbits.PEIE = 1;
  7619  0035A0  8CF2               	bsf	intcon,6,c	;volatile
  7620                           
  7621                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 82: RCONbits.IPEN = 1;
  7622  0035A2  8ED0               	bsf	4048,7,c	;volatile
  7623                           
  7624                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 104: INTCON3bits.INT3IE = 0;
  7625  0035A4  9AF0               	bcf	intcon3,5,c	;volatile
  7626                           
  7627                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 105: INTCON3bits.INT3IF = 0;
  7628  0035A6  94F0               	bcf	intcon3,2,c	;volatile
  7629                           
  7630                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 106: INTCON2bits.INTEDG3 = 1;
  7631  0035A8  86F1               	bsf	intcon2,3,c	;volatile
  7632                           
  7633                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 107: INTCON2bits.INT3IP = 1;
  7634  0035AA  82F1               	bsf	intcon2,1,c	;volatile
  7635                           
  7636                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 110: INTCONbits.TMR0IE = 1;
  7637  0035AC  8AF2               	bsf	intcon,5,c	;volatile
  7638                           
  7639                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 111: INTCONbits.TMR0IF = 0;
  7640  0035AE  94F2               	bcf	intcon,2,c	;volatile
  7641                           
  7642                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 112: INTCON2bits.TMR0IP = 1;
  7643  0035B0  84F1               	bsf	intcon2,2,c	;volatile
  7644                           
  7645                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 121: PIE1bits.ADIE = 0;
  7646  0035B2  9C9D               	bcf	3997,6,c	;volatile
  7647                           
  7648                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 122: PIR1bits.ADIF = 0;
  7649  0035B4  9C9E               	bcf	3998,6,c	;volatile
  7650                           
  7651                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 123: IPR1bits.ADIP = 0;
  7652  0035B6  9C9F               	bcf	3999,6,c	;volatile
  7653                           
  7654                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 126: PIE1bits.RC1IE = 0;
  7655  0035B8  9A9D               	bcf	3997,5,c	;volatile
  7656                           
  7657                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 127: PIE1bits.TX1IE = 0;
  7658  0035BA  989D               	bcf	3997,4,c	;volatile
  7659                           
  7660                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 128: PIR1bits.RC1IF = 0;
  7661  0035BC  9A9E               	bcf	3998,5,c	;volatile
  7662                           
  7663                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 129: PIR1bits.TX1IF = 0;
  7664  0035BE  989E               	bcf	3998,4,c	;volatile
  7665                           
  7666                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 130: IPR1bits.RC1IP = 0;
  7667  0035C0  9A9F               	bcf	3999,5,c	;volatile
  7668                           
  7669                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 131: IPR1bits.TX1IP = 0;
  7670  0035C2  989F               	bcf	3999,4,c	;volatile
  7671  0035C4  0012               	return		;funcret
  7672  0035C6                     __end_of_ConfigureInterrupts:
  7673                           	opt stack 0
  7674                           prodh	equ	0xFF4
  7675                           prodl	equ	0xFF3
  7676                           intcon	equ	0xFF2
  7677                           intcon2	equ	0xFF1
  7678                           intcon3	equ	0xFF0
  7679                           postinc0	equ	0xFEE
  7680                           wreg	equ	0xFE8
  7681                           indf2	equ	0xFDF
  7682                           postinc2	equ	0xFDE
  7683                           postdec2	equ	0xFDD
  7684                           fsr2h	equ	0xFDA
  7685                           fsr2l	equ	0xFD9
  7686                           status	equ	0xFD8
  7687                           
  7688 ;; *************** function _ConfigureBuggyIO *****************
  7689 ;; Defined at:
  7690 ;;		line 208 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;		None               void
  7697 ;; Registers used:
  7698 ;;		wreg, status,2
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    7
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_main
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text70
  7719  003710                     __ptext70:
  7720                           	opt stack 0
  7721  003710                     _ConfigureBuggyIO:
  7722                           	opt stack 23
  7723                           
  7724                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 211: TRISA = 0xFF;
  7725                           
  7726                           ;incstack = 0
  7727  003710  6892               	setf	3986,c	;volatile
  7728                           
  7729                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 214: TRISB = 0xFF;
  7730  003712  6893               	setf	3987,c	;volatile
  7731                           
  7732                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 217: TRISC = 0x9F;
  7733  003714  0E9F               	movlw	159
  7734  003716  6E94               	movwf	3988,c	;volatile
  7735                           
  7736                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 220: TRISD = 0xE0;
  7737  003718  0EE0               	movlw	224
  7738  00371A  6E95               	movwf	3989,c	;volatile
  7739                           
  7740                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 223: TRISE = 0x00;
  7741  00371C  0E00               	movlw	0
  7742  00371E  6E96               	movwf	3990,c	;volatile
  7743                           
  7744                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 226: TRISG = 0xE7;
  7745  003720  0EE7               	movlw	231
  7746  003722  6E98               	movwf	3992,c	;volatile
  7747                           
  7748                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 229: TRISJ = 0x00;
  7749  003724  0E00               	movlw	0
  7750  003726  6E9A               	movwf	3994,c	;volatile
  7751  003728  0012               	return		;funcret
  7752  00372A                     __end_of_ConfigureBuggyIO:
  7753                           	opt stack 0
  7754                           prodh	equ	0xFF4
  7755                           prodl	equ	0xFF3
  7756                           intcon	equ	0xFF2
  7757                           intcon2	equ	0xFF1
  7758                           intcon3	equ	0xFF0
  7759                           postinc0	equ	0xFEE
  7760                           wreg	equ	0xFE8
  7761                           indf2	equ	0xFDF
  7762                           postinc2	equ	0xFDE
  7763                           postdec2	equ	0xFDD
  7764                           fsr2h	equ	0xFDA
  7765                           fsr2l	equ	0xFD9
  7766                           status	equ	0xFD8
  7767                           
  7768 ;; *************** function _ConfigureADC *****************
  7769 ;; Defined at:
  7770 ;;		line 234 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;		None               void
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    8
  7791 ;; This function calls:
  7792 ;;		_OpenADC
  7793 ;; This function is called by:
  7794 ;;		_main
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text71
  7799  0037DC                     __ptext71:
  7800                           	opt stack 0
  7801  0037DC                     _ConfigureADC:
  7802                           	opt stack 22
  7803                           
  7804                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 236: OpenADC(0b10011111
  7805                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 237: & 0b11111111
  7806                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 238: & 0b11110101,
  7807                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 239: 0b10000111
  7808                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 240: & 0b01111111
  7809                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 241: & 0b11111110
  7810                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 242: & 0b11111101,
  7811                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 243: 9);
  7812                           
  7813                           ;incstack = 0
  7814  0037DC  0E04               	movlw	4
  7815  0037DE  0100               	movlb	0	; () banked
  7816  0037E0  6F6E               	movwf	OpenADC@config2& (0+255),b
  7817  0037E2  0E09               	movlw	9
  7818  0037E4  0100               	movlb	0	; () banked
  7819  0037E6  6F6F               	movwf	OpenADC@portconfig& (0+255),b
  7820  0037E8  0E95               	movlw	149
  7821  0037EA  ECD8  F016         	call	_OpenADC
  7822  0037EE  0012               	return		;funcret
  7823  0037F0                     __end_of_ConfigureADC:
  7824                           	opt stack 0
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           intcon	equ	0xFF2
  7828                           intcon2	equ	0xFF1
  7829                           intcon3	equ	0xFF0
  7830                           postinc0	equ	0xFEE
  7831                           wreg	equ	0xFE8
  7832                           indf2	equ	0xFDF
  7833                           postinc2	equ	0xFDE
  7834                           postdec2	equ	0xFDD
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function _OpenADC *****************
  7840 ;; Defined at:
  7841 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  config          1    wreg     unsigned char 
  7844 ;;  config2         1   14[BANK0 ] unsigned char 
  7845 ;;  portconfig      1   15[BANK0 ] unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  config          1   29[COMRAM] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;		None               void
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;Total ram usage:        5 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    7
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_ConfigureADC
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text72
  7872  002DB0                     __ptext72:
  7873                           	opt stack 0
  7874  002DB0                     _OpenADC:
  7875                           	opt stack 22
  7876                           
  7877                           ;incstack = 0
  7878                           ;OpenADC@config stored from wreg
  7879  002DB0  6E42               	movwf	OpenADC@config,c
  7880  002DB2  0E00               	movlw	0
  7881  002DB4  6EC2               	movwf	4034,c	;volatile
  7882  002DB6  0E00               	movlw	0
  7883  002DB8  6EC0               	movwf	4032,c	;volatile
  7884  002DBA  0100               	movlb	0	; () banked
  7885  002DBC  90D8               	bcf	status,0,c
  7886  002DBE  316E               	rrcf	OpenADC@config2& (0+255),w,b
  7887  002DC0  0B3C               	andlw	60
  7888  002DC2  6EC2               	movwf	4034,c	;volatile
  7889                           
  7890                           ; BSR set to: 0
  7891  002DC4  C06E  F070         	movff	OpenADC@config2,??_OpenADC
  7892  002DC8  0100               	movlb	0	; () banked
  7893  002DCA  3B70               	swapf	??_OpenADC& (0+255),f,b
  7894  002DCC  0EF0               	movlw	240
  7895  002DCE  1770               	andwf	??_OpenADC& (0+255),f,b
  7896  002DD0  0E30               	movlw	48
  7897  002DD2  0100               	movlb	0	; () banked
  7898  002DD4  1770               	andwf	??_OpenADC& (0+255),f,b
  7899  002DD6  0100               	movlb	0	; () banked
  7900  002DD8  516F               	movf	OpenADC@portconfig& (0+255),w,b
  7901  002DDA  0B0F               	andlw	15
  7902  002DDC  0100               	movlb	0	; () banked
  7903  002DDE  1170               	iorwf	??_OpenADC& (0+255),w,b
  7904  002DE0  6EC1               	movwf	4033,c	;volatile
  7905                           
  7906                           ; BSR set to: 0
  7907  002DE2  C042  F070         	movff	OpenADC@config,??_OpenADC
  7908  002DE6  0100               	movlb	0	; () banked
  7909  002DE8  90D8               	bcf	status,0,c
  7910  002DEA  3770               	rlcf	??_OpenADC& (0+255),f,b
  7911  002DEC  0100               	movlb	0	; () banked
  7912  002DEE  90D8               	bcf	status,0,c
  7913  002DF0  3770               	rlcf	??_OpenADC& (0+255),f,b
  7914  002DF2  0E38               	movlw	56
  7915  002DF4  0100               	movlb	0	; () banked
  7916  002DF6  1770               	andwf	??_OpenADC& (0+255),f,b
  7917  002DF8  C042  F071         	movff	OpenADC@config,??_OpenADC+1
  7918  002DFC  0100               	movlb	0	; () banked
  7919  002DFE  3B71               	swapf	(??_OpenADC+1)& (0+255),f,b
  7920  002E00  0E0F               	movlw	15
  7921  002E02  1771               	andwf	(??_OpenADC+1)& (0+255),f,b
  7922  002E04  0E07               	movlw	7
  7923  002E06  0100               	movlb	0	; () banked
  7924  002E08  1771               	andwf	(??_OpenADC+1)& (0+255),f,b
  7925  002E0A  5042               	movf	OpenADC@config,w,c
  7926  002E0C  0B80               	andlw	128
  7927  002E0E  0100               	movlb	0	; () banked
  7928  002E10  1171               	iorwf	(??_OpenADC+1)& (0+255),w,b
  7929  002E12  0100               	movlb	0	; () banked
  7930  002E14  1170               	iorwf	??_OpenADC& (0+255),w,b
  7931  002E16  6EC0               	movwf	4032,c	;volatile
  7932                           
  7933                           ; BSR set to: 0
  7934  002E18  0100               	movlb	0	; () banked
  7935  002E1A  AF6E               	btfss	OpenADC@config2& (0+255),7,b
  7936  002E1C  D003               	goto	l710
  7937                           
  7938                           ; BSR set to: 0
  7939  002E1E  9C9E               	bcf	3998,6,c	;volatile
  7940  002E20  8C9D               	bsf	3997,6,c	;volatile
  7941  002E22  8CF2               	bsf	intcon,6,c	;volatile
  7942  002E24                     l710:
  7943                           
  7944                           ; BSR set to: 0
  7945  002E24  80C2               	bsf	4034,0,c	;volatile
  7946                           
  7947                           ; BSR set to: 0
  7948  002E26  0012               	return		;funcret
  7949  002E28                     __end_of_OpenADC:
  7950                           	opt stack 0
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           intcon2	equ	0xFF1
  7955                           intcon3	equ	0xFF0
  7956                           postinc0	equ	0xFEE
  7957                           wreg	equ	0xFE8
  7958                           indf2	equ	0xFDF
  7959                           postinc2	equ	0xFDE
  7960                           postdec2	equ	0xFDD
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _CalculateSensorSums *****************
  7966 ;; Defined at:
  7967 ;;		line 383 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  index           1   21[BANK1 ] unsigned char 
  7972 ;;  sum             1   20[BANK1 ] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      unsigned char 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;Total ram usage:        5 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:   12
  7989 ;; This function calls:
  7990 ;;		___ftmul
  7991 ;;		___fttol
  7992 ;;		___lbtoft
  7993 ;;		_pow
  7994 ;; This function is called by:
  7995 ;;		_main
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text73
  8000  0029B2                     __ptext73:
  8001                           	opt stack 0
  8002  0029B2                     _CalculateSensorSums:
  8003                           	opt stack 18
  8004                           
  8005                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 384: unsigned char index, sum = 0;
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;incstack = 0
  8009  0029B2  0E00               	movlw	0
  8010  0029B4  0101               	movlb	1	; () banked
  8011  0029B6  6F14               	movwf	CalculateSensorSums@sum& (0+255),b
  8012                           
  8013                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 386: for(index = 0; index < 5; index++) {
  8014  0029B8  0E00               	movlw	0
  8015  0029BA  0101               	movlb	1	; () banked
  8016  0029BC  6F15               	movwf	CalculateSensorSums@index& (0+255),b
  8017  0029BE                     l6030:
  8018                           
  8019                           ; BSR set to: 1
  8020  0029BE  0E04               	movlw	4
  8021  0029C0  0101               	movlb	1	; () banked
  8022  0029C2  6515               	cpfsgt	CalculateSensorSums@index& (0+255),b
  8023  0029C4  D001               	goto	l6034
  8024                           
  8025                           ; BSR set to: 1
  8026  0029C6  D044               	goto	l6042
  8027  0029C8                     l6034:
  8028                           
  8029                           ; BSR set to: 1
  8030                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 388: sum += (unsigned char) (sensor_status[index]
      +                           * pow(2, index));
  8031  0029C8  0101               	movlb	1	; () banked
  8032  0029CA  5115               	movf	CalculateSensorSums@index& (0+255),w,b
  8033  0029CC  EC7C  F01A         	call	___lbtoft
  8034  0029D0  C076  F103         	movff	?___lbtoft,pow@y
  8035  0029D4  C077  F104         	movff	?___lbtoft+1,pow@y+1
  8036  0029D8  C078  F105         	movff	?___lbtoft+2,pow@y+2
  8037  0029DC  0E00               	movlw	0
  8038  0029DE  0101               	movlb	1	; () banked
  8039  0029E0  6F00               	movwf	pow@x& (0+255),b
  8040  0029E2  0E00               	movlw	0
  8041  0029E4  0101               	movlb	1	; () banked
  8042  0029E6  6F01               	movwf	(pow@x+1)& (0+255),b
  8043  0029E8  0E40               	movlw	64
  8044  0029EA  0101               	movlb	1	; () banked
  8045  0029EC  6F02               	movwf	(pow@x+2)& (0+255),b
  8046  0029EE  ECD9  F00B         	call	_pow	;wreg free
  8047  0029F2  C100  F111         	movff	?_pow,_CalculateSensorSums$3221
  8048  0029F6  C101  F112         	movff	?_pow+1,_CalculateSensorSums$3221+1
  8049  0029FA  C102  F113         	movff	?_pow+2,_CalculateSensorSums$3221+2
  8050                           
  8051                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 388: sum += (unsigned char) (sensor_status[index]
      +                           * pow(2, index));
  8052  0029FE  C111  F07C         	movff	_CalculateSensorSums$3221,___ftmul@f2
  8053  002A02  C112  F07D         	movff	_CalculateSensorSums$3221+1,___ftmul@f2+1
  8054  002A06  C113  F07E         	movff	_CalculateSensorSums$3221+2,___ftmul@f2+2
  8055  002A0A  0101               	movlb	1	; () banked
  8056  002A0C  5115               	movf	CalculateSensorSums@index& (0+255),w,b
  8057  002A0E  0D01               	mullw	1
  8058  002A10  0E1D               	movlw	low _sensor_status
  8059  002A12  24F3               	addwf	prodl,w,c
  8060  002A14  6ED9               	movwf	fsr2l,c
  8061  002A16  0E00               	movlw	high _sensor_status
  8062  002A18  20F4               	addwfc	prodh,w,c
  8063  002A1A  6EDA               	movwf	fsr2h,c
  8064  002A1C  50DF               	movf	indf2,w,c
  8065  002A1E  EC7C  F01A         	call	___lbtoft
  8066  002A22  C076  F079         	movff	?___lbtoft,___ftmul@f1
  8067  002A26  C077  F07A         	movff	?___lbtoft+1,___ftmul@f1+1
  8068  002A2A  C078  F07B         	movff	?___lbtoft+2,___ftmul@f1+2
  8069  002A2E  ECA6  F00C         	call	___ftmul	;wreg free
  8070  002A32  C079  F088         	movff	?___ftmul,___fttol@f1
  8071  002A36  C07A  F089         	movff	?___ftmul+1,___fttol@f1+1
  8072  002A3A  C07B  F08A         	movff	?___ftmul+2,___fttol@f1+2
  8073  002A3E  EC95  F00E         	call	___fttol	;wreg free
  8074  002A42  0100               	movlb	0	; () banked
  8075  002A44  5188               	movf	?___fttol& (0+255),w,b
  8076  002A46  0101               	movlb	1	; () banked
  8077  002A48  2714               	addwf	CalculateSensorSums@sum& (0+255),f,b
  8078                           
  8079                           ; BSR set to: 1
  8080  002A4A  0101               	movlb	1	; () banked
  8081  002A4C  2B15               	incf	CalculateSensorSums@index& (0+255),f,b
  8082  002A4E  D7B7               	goto	l6030
  8083  002A50                     l6042:
  8084                           
  8085                           ; BSR set to: 1
  8086                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 390: }
  8087                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 392: return(sum);
  8088  002A50  0101               	movlb	1	; () banked
  8089  002A52  5114               	movf	CalculateSensorSums@sum& (0+255),w,b
  8090  002A54  D000               	goto	l224
  8091  002A56                     l224:
  8092                           
  8093                           ; BSR set to: 1
  8094  002A56  0012               	return		;funcret
  8095  002A58                     __end_of_CalculateSensorSums:
  8096                           	opt stack 0
  8097                           prodh	equ	0xFF4
  8098                           prodl	equ	0xFF3
  8099                           intcon	equ	0xFF2
  8100                           intcon2	equ	0xFF1
  8101                           intcon3	equ	0xFF0
  8102                           postinc0	equ	0xFEE
  8103                           wreg	equ	0xFE8
  8104                           indf2	equ	0xFDF
  8105                           postinc2	equ	0xFDE
  8106                           postdec2	equ	0xFDD
  8107                           fsr2h	equ	0xFDA
  8108                           fsr2l	equ	0xFD9
  8109                           status	equ	0xFD8
  8110                           
  8111 ;; *************** function _pow *****************
  8112 ;; Defined at:
  8113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  x               3    0[BANK1 ] unsigned char 
  8116 ;;  y               3    3[BANK1 ] unsigned char 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  yi              4   13[BANK1 ] unsigned long 
  8119 ;;  sign            1   12[BANK1 ] unsigned char 
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  3    0[BANK1 ] unsigned char 
  8122 ;; Registers used:
  8123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8129 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;Total ram usage:       17 bytes
  8134 ;; Hardware stack levels used:    1
  8135 ;; Hardware stack levels required when called:   11
  8136 ;; This function calls:
  8137 ;;		___ftge
  8138 ;;		___ftmul
  8139 ;;		___ftneg
  8140 ;;		___fttol
  8141 ;;		___lltoft
  8142 ;;		_exp
  8143 ;;		_log
  8144 ;; This function is called by:
  8145 ;;		_CalculateSensorSums
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text74
  8150  0017B2                     __ptext74:
  8151                           	opt stack 0
  8152  0017B2                     _pow:
  8153                           	opt stack 18
  8154                           
  8155                           ; BSR set to: 1
  8156                           ;incstack = 0
  8157  0017B2  0E00               	movlw	0
  8158  0017B4  0101               	movlb	1	; () banked
  8159  0017B6  6F0C               	movwf	pow@sign& (0+255),b
  8160                           
  8161                           ; BSR set to: 1
  8162  0017B8  0101               	movlb	1	; () banked
  8163  0017BA  5100               	movf	pow@x& (0+255),w,b
  8164  0017BC  0101               	movlb	1	; () banked
  8165  0017BE  1101               	iorwf	(pow@x+1)& (0+255),w,b
  8166  0017C0  0101               	movlb	1	; () banked
  8167  0017C2  1102               	iorwf	(pow@x+2)& (0+255),w,b
  8168  0017C4  A4D8               	btfss	status,2,c
  8169  0017C6  D016               	goto	l5902
  8170                           
  8171                           ; BSR set to: 1
  8172  0017C8  0E00               	movlw	0
  8173  0017CA  0100               	movlb	0	; () banked
  8174  0017CC  6F6E               	movwf	___ftge@ff1& (0+255),b
  8175  0017CE  0E00               	movlw	0
  8176  0017D0  0100               	movlb	0	; () banked
  8177  0017D2  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  8178  0017D4  0E00               	movlw	0
  8179  0017D6  0100               	movlb	0	; () banked
  8180  0017D8  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  8181  0017DA  C103  F071         	movff	pow@y,___ftge@ff2
  8182  0017DE  C104  F072         	movff	pow@y+1,___ftge@ff2+1
  8183  0017E2  C105  F073         	movff	pow@y+2,___ftge@ff2+2
  8184  0017E6  EC0C  F013         	call	___ftge	;wreg free
  8185  0017EA  0100               	movlb	0	; () banked
  8186  0017EC  A0D8               	btfss	status,0,c
  8187  0017EE  D045               	goto	L6
  8188  0017F0  D03F               	goto	u5570
  8189                           
  8190                           ; BSR set to: 1
  8191                           
  8192                           ; BSR set to: 0
  8193                           
  8194                           ; BSR set to: 0
  8195  0017F2  D0AB               	goto	l1460
  8196  0017F4                     l5902:
  8197                           
  8198                           ; BSR set to: 1
  8199  0017F4  0101               	movlb	1	; () banked
  8200  0017F6  5103               	movf	pow@y& (0+255),w,b
  8201  0017F8  0101               	movlb	1	; () banked
  8202  0017FA  1104               	iorwf	(pow@y+1)& (0+255),w,b
  8203  0017FC  0101               	movlb	1	; () banked
  8204  0017FE  1105               	iorwf	(pow@y+2)& (0+255),w,b
  8205  001800  A4D8               	btfss	status,2,c
  8206  001802  D009               	goto	l5908
  8207                           
  8208                           ; BSR set to: 1
  8209  001804  0E00               	movlw	0
  8210  001806  0101               	movlb	1	; () banked
  8211  001808  6F00               	movwf	?_pow& (0+255),b
  8212  00180A  0E80               	movlw	128
  8213  00180C  0101               	movlb	1	; () banked
  8214  00180E  6F01               	movwf	(?_pow+1)& (0+255),b
  8215  001810  0E3F               	movlw	63
  8216  001812  D03A               	goto	L5
  8217                           
  8218                           ; BSR set to: 1
  8219  001814  D09A               	goto	l1460
  8220  001816                     l5908:
  8221                           
  8222                           ; BSR set to: 1
  8223  001816  0101               	movlb	1	; () banked
  8224  001818  AF02               	btfss	(pow@x+2)& (0+255),7,b
  8225  00181A  D04D               	goto	l5920
  8226                           
  8227                           ; BSR set to: 1
  8228  00181C  C103  F088         	movff	pow@y,___fttol@f1
  8229  001820  C104  F089         	movff	pow@y+1,___fttol@f1+1
  8230  001824  C105  F08A         	movff	pow@y+2,___fttol@f1+2
  8231  001828  EC95  F00E         	call	___fttol	;wreg free
  8232  00182C  C088  F10D         	movff	?___fttol,pow@yi
  8233  001830  C089  F10E         	movff	?___fttol+1,pow@yi+1
  8234  001834  C08A  F10F         	movff	?___fttol+2,pow@yi+2
  8235  001838  C08B  F110         	movff	?___fttol+3,pow@yi+3
  8236  00183C  C10D  F076         	movff	pow@yi,___lltoft@c
  8237  001840  C10E  F077         	movff	pow@yi+1,___lltoft@c+1
  8238  001844  C10F  F078         	movff	pow@yi+2,___lltoft@c+2
  8239  001848  C110  F079         	movff	pow@yi+3,___lltoft@c+3
  8240  00184C  EC9A  F016         	call	___lltoft	;wreg free
  8241  001850  0101               	movlb	1	; () banked
  8242  001852  5103               	movf	pow@y& (0+255),w,b
  8243  001854  0100               	movlb	0	; () banked
  8244  001856  1976               	xorwf	?___lltoft& (0+255),w,b
  8245  001858  E10B               	bnz	u5570
  8246  00185A  0101               	movlb	1	; () banked
  8247  00185C  5104               	movf	(pow@y+1)& (0+255),w,b
  8248  00185E  0100               	movlb	0	; () banked
  8249  001860  1977               	xorwf	(?___lltoft+1)& (0+255),w,b
  8250  001862  E106               	bnz	u5570
  8251  001864  0101               	movlb	1	; () banked
  8252  001866  5105               	movf	(pow@y+2)& (0+255),w,b
  8253  001868  0100               	movlb	0	; () banked
  8254  00186A  1978               	xorwf	(?___lltoft+2)& (0+255),w,b
  8255  00186C  B4D8               	btfsc	status,2,c
  8256  00186E  D00F               	goto	l5916
  8257  001870                     u5570:
  8258                           
  8259                           ; BSR set to: 0
  8260  001870  0E00               	movlw	0
  8261  001872  0100               	movlb	0	; () banked
  8262  001874  6FDD               	movwf	(_errno+1)& (0+255),b
  8263  001876  0E21               	movlw	33
  8264  001878  6FDC               	movwf	_errno& (0+255),b
  8265  00187A                     L6:
  8266  00187A  0E00               	movlw	0
  8267  00187C  0101               	movlb	1	; () banked
  8268  00187E  6F00               	movwf	?_pow& (0+255),b
  8269  001880  0E00               	movlw	0
  8270  001882  0101               	movlb	1	; () banked
  8271  001884  6F01               	movwf	(?_pow+1)& (0+255),b
  8272  001886  0E00               	movlw	0
  8273  001888                     L5:
  8274  001888  0101               	movlb	1	; () banked
  8275  00188A  6F02               	movwf	(?_pow+2)& (0+255),b
  8276                           
  8277                           ; BSR set to: 1
  8278  00188C  D05E               	goto	l1460
  8279  00188E                     l5916:
  8280  00188E  0101               	movlb	1	; () banked
  8281  001890  510D               	movf	pow@yi& (0+255),w,b
  8282  001892  0B01               	andlw	1
  8283  001894  0101               	movlb	1	; () banked
  8284  001896  6F0C               	movwf	pow@sign& (0+255),b
  8285                           
  8286                           ; BSR set to: 1
  8287  001898  C100  F06E         	movff	pow@x,___ftneg@f1
  8288  00189C  C101  F06F         	movff	pow@x+1,___ftneg@f1+1
  8289  0018A0  C102  F070         	movff	pow@x+2,___ftneg@f1+2
  8290  0018A4  EC37  F01A         	call	___ftneg	;wreg free
  8291  0018A8  C06E  F100         	movff	?___ftneg,pow@x
  8292  0018AC  C06F  F101         	movff	?___ftneg+1,pow@x+1
  8293  0018B0  C070  F102         	movff	?___ftneg+2,pow@x+2
  8294  0018B4  D000               	goto	l5920
  8295  0018B6                     l5920:
  8296  0018B6  C100  F0A0         	movff	pow@x,log@x
  8297  0018BA  C101  F0A1         	movff	pow@x+1,log@x+1
  8298  0018BE  C102  F0A2         	movff	pow@x+2,log@x+2
  8299  0018C2  ECF5  F00D         	call	_log	;wreg free
  8300  0018C6  C0A0  F106         	movff	?_log,_pow$3222
  8301  0018CA  C0A1  F107         	movff	?_log+1,_pow$3222+1
  8302  0018CE  C0A2  F108         	movff	?_log+2,_pow$3222+2
  8303  0018D2  C106  F079         	movff	_pow$3222,___ftmul@f1
  8304  0018D6  C107  F07A         	movff	_pow$3222+1,___ftmul@f1+1
  8305  0018DA  C108  F07B         	movff	_pow$3222+2,___ftmul@f1+2
  8306  0018DE  C103  F07C         	movff	pow@y,___ftmul@f2
  8307  0018E2  C104  F07D         	movff	pow@y+1,___ftmul@f2+1
  8308  0018E6  C105  F07E         	movff	pow@y+2,___ftmul@f2+2
  8309  0018EA  ECA6  F00C         	call	___ftmul	;wreg free
  8310  0018EE  C079  F109         	movff	?___ftmul,_pow$3223
  8311  0018F2  C07A  F10A         	movff	?___ftmul+1,_pow$3223+1
  8312  0018F6  C07B  F10B         	movff	?___ftmul+2,_pow$3223+2
  8313  0018FA  C109  F0A9         	movff	_pow$3223,exp@x
  8314  0018FE  C10A  F0AA         	movff	_pow$3223+1,exp@x+1
  8315  001902  C10B  F0AB         	movff	_pow$3223+2,exp@x+2
  8316  001906  ECC5  F00A         	call	_exp	;wreg free
  8317  00190A  C0A9  F100         	movff	?_exp,pow@x
  8318  00190E  C0AA  F101         	movff	?_exp+1,pow@x+1
  8319  001912  C0AB  F102         	movff	?_exp+2,pow@x+2
  8320  001916  0101               	movlb	1	; () banked
  8321  001918  510C               	movf	pow@sign& (0+255),w,b
  8322  00191A  0101               	movlb	1	; () banked
  8323  00191C  B4D8               	btfsc	status,2,c
  8324  00191E  D00F               	goto	l1464
  8325                           
  8326                           ; BSR set to: 1
  8327  001920  C100  F06E         	movff	pow@x,___ftneg@f1
  8328  001924  C101  F06F         	movff	pow@x+1,___ftneg@f1+1
  8329  001928  C102  F070         	movff	pow@x+2,___ftneg@f1+2
  8330  00192C  EC37  F01A         	call	___ftneg	;wreg free
  8331  001930  C06E  F100         	movff	?___ftneg,?_pow
  8332  001934  C06F  F101         	movff	?___ftneg+1,?_pow+1
  8333  001938  C070  F102         	movff	?___ftneg+2,?_pow+2
  8334  00193C  D006               	goto	l1460
  8335  00193E                     l1464:
  8336                           
  8337                           ; BSR set to: 1
  8338  00193E  C100  F100         	movff	pow@x,?_pow
  8339  001942  C101  F101         	movff	pow@x+1,?_pow+1
  8340  001946  C102  F102         	movff	pow@x+2,?_pow+2
  8341  00194A                     l1460:
  8342  00194A  0012               	return		;funcret
  8343  00194C                     __end_of_pow:
  8344                           	opt stack 0
  8345                           prodh	equ	0xFF4
  8346                           prodl	equ	0xFF3
  8347                           intcon	equ	0xFF2
  8348                           intcon2	equ	0xFF1
  8349                           intcon3	equ	0xFF0
  8350                           postinc0	equ	0xFEE
  8351                           wreg	equ	0xFE8
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           fsr2h	equ	0xFDA
  8356                           fsr2l	equ	0xFD9
  8357                           status	equ	0xFD8
  8358                           
  8359 ;; *************** function _log *****************
  8360 ;; Defined at:
  8361 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  x               3   64[BANK0 ] unsigned char 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;  exponent        2   67[BANK0 ] int 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  3   64[BANK0 ] int 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8375 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;Total ram usage:        5 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:   10
  8382 ;; This function calls:
  8383 ;;		___awtoft
  8384 ;;		___ftadd
  8385 ;;		___ftmul
  8386 ;;		_eval_poly
  8387 ;;		_frexp
  8388 ;; This function is called by:
  8389 ;;		_pow
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text75
  8394  001BEA                     __ptext75:
  8395                           	opt stack 0
  8396  001BEA                     _log:
  8397                           	opt stack 18
  8398                           
  8399                           ;incstack = 0
  8400  001BEA  0100               	movlb	0	; () banked
  8401  001BEC  AFA2               	btfss	(log@x+2)& (0+255),7,b
  8402  001BEE  D006               	goto	l5694
  8403                           
  8404                           ; BSR set to: 0
  8405  001BF0  0E00               	movlw	0
  8406  001BF2  0100               	movlb	0	; () banked
  8407  001BF4  6FDD               	movwf	(_errno+1)& (0+255),b
  8408  001BF6  0E21               	movlw	33
  8409  001BF8  D00D               	goto	L7
  8410                           
  8411                           ; BSR set to: 0
  8412  001BFA  D096               	goto	l1524
  8413  001BFC                     l5694:
  8414                           
  8415                           ; BSR set to: 0
  8416  001BFC  0100               	movlb	0	; () banked
  8417  001BFE  51A0               	movf	log@x& (0+255),w,b
  8418  001C00  0100               	movlb	0	; () banked
  8419  001C02  11A1               	iorwf	(log@x+1)& (0+255),w,b
  8420  001C04  0100               	movlb	0	; () banked
  8421  001C06  11A2               	iorwf	(log@x+2)& (0+255),w,b
  8422  001C08  A4D8               	btfss	status,2,c
  8423  001C0A  D00F               	goto	l5700
  8424                           
  8425                           ; BSR set to: 0
  8426  001C0C  0E00               	movlw	0
  8427  001C0E  0100               	movlb	0	; () banked
  8428  001C10  6FDD               	movwf	(_errno+1)& (0+255),b
  8429  001C12  0E22               	movlw	34
  8430  001C14                     L7:
  8431  001C14  6FDC               	movwf	_errno& (0+255),b
  8432  001C16  0E00               	movlw	0
  8433  001C18  0100               	movlb	0	; () banked
  8434  001C1A  6FA0               	movwf	?_log& (0+255),b
  8435  001C1C  0E00               	movlw	0
  8436  001C1E  0100               	movlb	0	; () banked
  8437  001C20  6FA1               	movwf	(?_log+1)& (0+255),b
  8438  001C22  0E00               	movlw	0
  8439  001C24  0100               	movlb	0	; () banked
  8440  001C26  6FA2               	movwf	(?_log+2)& (0+255),b
  8441                           
  8442                           ; BSR set to: 0
  8443  001C28  D07F               	goto	l1524
  8444  001C2A                     l5700:
  8445                           
  8446                           ; BSR set to: 0
  8447  001C2A  0E00               	movlw	0
  8448  001C2C  0100               	movlb	0	; () banked
  8449  001C2E  6F7C               	movwf	___ftmul@f2& (0+255),b
  8450  001C30  0E00               	movlw	0
  8451  001C32  0100               	movlb	0	; () banked
  8452  001C34  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  8453  001C36  0E40               	movlw	64
  8454  001C38  0100               	movlb	0	; () banked
  8455  001C3A  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  8456  001C3C  0EA3               	movlw	low log@exponent
  8457  001C3E  0100               	movlb	0	; () banked
  8458  001C40  6F71               	movwf	frexp@eptr& (0+255),b
  8459  001C42  0E00               	movlw	high log@exponent
  8460  001C44  0100               	movlb	0	; () banked
  8461  001C46  6F72               	movwf	(frexp@eptr+1)& (0+255),b
  8462  001C48  C0A0  F06E         	movff	log@x,frexp@value
  8463  001C4C  C0A1  F06F         	movff	log@x+1,frexp@value+1
  8464  001C50  C0A2  F070         	movff	log@x+2,frexp@value+2
  8465  001C54  EC82  F014         	call	_frexp	;wreg free
  8466  001C58  C06E  F079         	movff	?_frexp,___ftmul@f1
  8467  001C5C  C06F  F07A         	movff	?_frexp+1,___ftmul@f1+1
  8468  001C60  C070  F07B         	movff	?_frexp+2,___ftmul@f1+2
  8469  001C64  ECA6  F00C         	call	___ftmul	;wreg free
  8470  001C68  C079  F088         	movff	?___ftmul,___ftadd@f1
  8471  001C6C  C07A  F089         	movff	?___ftmul+1,___ftadd@f1+1
  8472  001C70  C07B  F08A         	movff	?___ftmul+2,___ftadd@f1+2
  8473  001C74  0E00               	movlw	0
  8474  001C76  0100               	movlb	0	; () banked
  8475  001C78  6F8B               	movwf	___ftadd@f2& (0+255),b
  8476  001C7A  0E80               	movlw	128
  8477  001C7C  0100               	movlb	0	; () banked
  8478  001C7E  6F8C               	movwf	(___ftadd@f2+1)& (0+255),b
  8479  001C80  0EBF               	movlw	191
  8480  001C82  0100               	movlb	0	; () banked
  8481  001C84  6F8D               	movwf	(___ftadd@f2+2)& (0+255),b
  8482  001C86  EC86  F009         	call	___ftadd	;wreg free
  8483  001C8A  C088  F0A0         	movff	?___ftadd,log@x
  8484  001C8E  C089  F0A1         	movff	?___ftadd+1,log@x+1
  8485  001C92  C08A  F0A2         	movff	?___ftadd+2,log@x+2
  8486  001C96  0100               	movlb	0	; () banked
  8487  001C98  07A3               	decf	log@exponent& (0+255),f,b
  8488  001C9A  A0D8               	btfss	status,0,c
  8489  001C9C  07A4               	decf	(log@exponent+1)& (0+255),f,b
  8490                           
  8491                           ; BSR set to: 0
  8492  001C9E  C0A0  F094         	movff	log@x,eval_poly@x
  8493  001CA2  C0A1  F095         	movff	log@x+1,eval_poly@x+1
  8494  001CA6  C0A2  F096         	movff	log@x+2,eval_poly@x+2
  8495  001CAA  0E1F               	movlw	low log@coeff
  8496  001CAC  0100               	movlb	0	; () banked
  8497  001CAE  6F97               	movwf	eval_poly@d& (0+255),b
  8498  001CB0  0E10               	movlw	high log@coeff
  8499  001CB2  0100               	movlb	0	; () banked
  8500  001CB4  6F98               	movwf	(eval_poly@d+1)& (0+255),b
  8501  001CB6  0E00               	movlw	0
  8502  001CB8  0100               	movlb	0	; () banked
  8503  001CBA  6F9A               	movwf	(eval_poly@n+1)& (0+255),b
  8504  001CBC  0E08               	movlw	8
  8505  001CBE  6F99               	movwf	eval_poly@n& (0+255),b
  8506  001CC0  ECC7  F010         	call	_eval_poly	;wreg free
  8507  001CC4  C094  F0A0         	movff	?_eval_poly,log@x
  8508  001CC8  C095  F0A1         	movff	?_eval_poly+1,log@x+1
  8509  001CCC  C096  F0A2         	movff	?_eval_poly+2,log@x+2
  8510  001CD0  0E72               	movlw	114
  8511  001CD2  0100               	movlb	0	; () banked
  8512  001CD4  6F7C               	movwf	___ftmul@f2& (0+255),b
  8513  001CD6  0E31               	movlw	49
  8514  001CD8  0100               	movlb	0	; () banked
  8515  001CDA  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  8516  001CDC  0E3F               	movlw	63
  8517  001CDE  0100               	movlb	0	; () banked
  8518  001CE0  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  8519  001CE2  C0A3  F076         	movff	log@exponent,___awtoft@c
  8520  001CE6  C0A4  F077         	movff	log@exponent+1,___awtoft@c+1
  8521  001CEA  ECDB  F018         	call	___awtoft	;wreg free
  8522  001CEE  C076  F079         	movff	?___awtoft,___ftmul@f1
  8523  001CF2  C077  F07A         	movff	?___awtoft+1,___ftmul@f1+1
  8524  001CF6  C078  F07B         	movff	?___awtoft+2,___ftmul@f1+2
  8525  001CFA  ECA6  F00C         	call	___ftmul	;wreg free
  8526  001CFE  C079  F088         	movff	?___ftmul,___ftadd@f1
  8527  001D02  C07A  F089         	movff	?___ftmul+1,___ftadd@f1+1
  8528  001D06  C07B  F08A         	movff	?___ftmul+2,___ftadd@f1+2
  8529  001D0A  C0A0  F08B         	movff	log@x,___ftadd@f2
  8530  001D0E  C0A1  F08C         	movff	log@x+1,___ftadd@f2+1
  8531  001D12  C0A2  F08D         	movff	log@x+2,___ftadd@f2+2
  8532  001D16  EC86  F009         	call	___ftadd	;wreg free
  8533  001D1A  C088  F0A0         	movff	?___ftadd,?_log
  8534  001D1E  C089  F0A1         	movff	?___ftadd+1,?_log+1
  8535  001D22  C08A  F0A2         	movff	?___ftadd+2,?_log+2
  8536  001D26  D000               	goto	l1524
  8537  001D28                     l1524:
  8538  001D28  0012               	return		;funcret
  8539  001D2A                     __end_of_log:
  8540                           	opt stack 0
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           intcon2	equ	0xFF1
  8545                           intcon3	equ	0xFF0
  8546                           postinc0	equ	0xFEE
  8547                           wreg	equ	0xFE8
  8548                           indf2	equ	0xFDF
  8549                           postinc2	equ	0xFDE
  8550                           postdec2	equ	0xFDD
  8551                           fsr2h	equ	0xFDA
  8552                           fsr2l	equ	0xFD9
  8553                           status	equ	0xFD8
  8554                           
  8555 ;; *************** function _exp *****************
  8556 ;; Defined at:
  8557 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  x               3   73[BANK0 ] int 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  exponent        2   79[BANK0 ] int 
  8562 ;;  sign            1   81[BANK0 ] unsigned char 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  3   73[BANK0 ] unsigned char 
  8565 ;; Registers used:
  8566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8572 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8575 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;Total ram usage:        9 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:   10
  8579 ;; This function calls:
  8580 ;;		___awtoft
  8581 ;;		___ftdiv
  8582 ;;		___ftge
  8583 ;;		___ftmul
  8584 ;;		___ftneg
  8585 ;;		___ftsub
  8586 ;;		___fttol
  8587 ;;		_eval_poly
  8588 ;;		_floor
  8589 ;;		_ldexp
  8590 ;; This function is called by:
  8591 ;;		_pow
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text76
  8596  00158A                     __ptext76:
  8597                           	opt stack 0
  8598  00158A                     _exp:
  8599                           	opt stack 18
  8600                           
  8601                           ;incstack = 0
  8602  00158A  0100               	movlb	0	; () banked
  8603  00158C  51A9               	movf	exp@x& (0+255),w,b
  8604  00158E  0100               	movlb	0	; () banked
  8605  001590  11AA               	iorwf	(exp@x+1)& (0+255),w,b
  8606  001592  0100               	movlb	0	; () banked
  8607  001594  11AB               	iorwf	(exp@x+2)& (0+255),w,b
  8608  001596  A4D8               	btfss	status,2,c
  8609  001598  D009               	goto	l5716
  8610                           
  8611                           ; BSR set to: 0
  8612  00159A  0E00               	movlw	0
  8613  00159C  0100               	movlb	0	; () banked
  8614  00159E  6FA9               	movwf	?_exp& (0+255),b
  8615  0015A0  0E80               	movlw	128
  8616  0015A2  0100               	movlb	0	; () banked
  8617  0015A4  6FAA               	movwf	(?_exp+1)& (0+255),b
  8618  0015A6  0E3F               	movlw	63
  8619  0015A8  D03D               	goto	L9
  8620                           
  8621                           ; BSR set to: 0
  8622  0015AA  D102               	goto	l1482
  8623  0015AC                     l5716:
  8624                           
  8625                           ; BSR set to: 0
  8626  0015AC  0E72               	movlw	114
  8627  0015AE  0100               	movlb	0	; () banked
  8628  0015B0  6F6E               	movwf	___ftge@ff1& (0+255),b
  8629  0015B2  0E31               	movlw	49
  8630  0015B4  0100               	movlb	0	; () banked
  8631  0015B6  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  8632  0015B8  0E44               	movlw	68
  8633  0015BA  0100               	movlb	0	; () banked
  8634  0015BC  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  8635  0015BE  C0A9  F071         	movff	exp@x,___ftge@ff2
  8636  0015C2  C0AA  F072         	movff	exp@x+1,___ftge@ff2+1
  8637  0015C6  C0AB  F073         	movff	exp@x+2,___ftge@ff2+2
  8638  0015CA  EC0C  F013         	call	___ftge	;wreg free
  8639  0015CE  0100               	movlb	0	; () banked
  8640  0015D0  B0D8               	btfsc	status,0,c
  8641  0015D2  D00E               	goto	l5722
  8642                           
  8643                           ; BSR set to: 0
  8644  0015D4  0E00               	movlw	0
  8645  0015D6  0100               	movlb	0	; () banked
  8646  0015D8  6FDD               	movwf	(_errno+1)& (0+255),b
  8647  0015DA  0E22               	movlw	34
  8648  0015DC  6FDC               	movwf	_errno& (0+255),b
  8649  0015DE  0EFF               	movlw	255
  8650  0015E0  0100               	movlb	0	; () banked
  8651  0015E2  6FA9               	movwf	?_exp& (0+255),b
  8652  0015E4  0E7F               	movlw	127
  8653  0015E6  0100               	movlb	0	; () banked
  8654  0015E8  6FAA               	movwf	(?_exp+1)& (0+255),b
  8655  0015EA  0E7F               	movlw	127
  8656  0015EC  D01B               	goto	L9
  8657                           
  8658                           ; BSR set to: 0
  8659  0015EE  D0E0               	goto	l1482
  8660  0015F0                     l5722:
  8661                           
  8662                           ; BSR set to: 0
  8663  0015F0  C0A9  F06E         	movff	exp@x,___ftge@ff1
  8664  0015F4  C0AA  F06F         	movff	exp@x+1,___ftge@ff1+1
  8665  0015F8  C0AB  F070         	movff	exp@x+2,___ftge@ff1+2
  8666  0015FC  0E49               	movlw	73
  8667  0015FE  0100               	movlb	0	; () banked
  8668  001600  6F71               	movwf	___ftge@ff2& (0+255),b
  8669  001602  0E3A               	movlw	58
  8670  001604  0100               	movlb	0	; () banked
  8671  001606  6F72               	movwf	(___ftge@ff2+1)& (0+255),b
  8672  001608  0EC4               	movlw	196
  8673  00160A  0100               	movlb	0	; () banked
  8674  00160C  6F73               	movwf	(___ftge@ff2+2)& (0+255),b
  8675  00160E  EC0C  F013         	call	___ftge	;wreg free
  8676  001612  0100               	movlb	0	; () banked
  8677  001614  B0D8               	btfsc	status,0,c
  8678  001616  D009               	goto	l5728
  8679                           
  8680                           ; BSR set to: 0
  8681  001618  0E00               	movlw	0
  8682  00161A  0100               	movlb	0	; () banked
  8683  00161C  6FDD               	movwf	(_errno+1)& (0+255),b
  8684  00161E  0E22               	movlw	34
  8685  001620  6FDC               	movwf	_errno& (0+255),b
  8686  001622  D09F               	goto	l5746
  8687  001624                     L9:
  8688  001624  0100               	movlb	0	; () banked
  8689  001626  6FAB               	movwf	(?_exp+2)& (0+255),b
  8690                           
  8691                           ; BSR set to: 0
  8692  001628  D0C3               	goto	l1482
  8693  00162A                     l5728:
  8694                           
  8695                           ; BSR set to: 0
  8696  00162A  0100               	movlb	0	; () banked
  8697  00162C  AFAB               	btfss	(exp@x+2)& (0+255),7,b
  8698  00162E  D002               	goto	u5290
  8699  001630  0E01               	movlw	1
  8700  001632  D001               	goto	u5300
  8701  001634                     u5290:
  8702  001634  0E00               	movlw	0
  8703  001636                     u5300:
  8704  001636  0100               	movlb	0	; () banked
  8705  001638  6FB1               	movwf	exp@sign& (0+255),b
  8706                           
  8707                           ; BSR set to: 0
  8708  00163A  0100               	movlb	0	; () banked
  8709  00163C  51B1               	movf	exp@sign& (0+255),w,b
  8710  00163E  0100               	movlb	0	; () banked
  8711  001640  B4D8               	btfsc	status,2,c
  8712  001642  D00E               	goto	l1485
  8713                           
  8714                           ; BSR set to: 0
  8715  001644  C0A9  F06E         	movff	exp@x,___ftneg@f1
  8716  001648  C0AA  F06F         	movff	exp@x+1,___ftneg@f1+1
  8717  00164C  C0AB  F070         	movff	exp@x+2,___ftneg@f1+2
  8718  001650  EC37  F01A         	call	___ftneg	;wreg free
  8719  001654  C06E  F0A9         	movff	?___ftneg,exp@x
  8720  001658  C06F  F0AA         	movff	?___ftneg+1,exp@x+1
  8721  00165C  C070  F0AB         	movff	?___ftneg+2,exp@x+2
  8722  001660                     l1485:
  8723  001660  C0A9  F079         	movff	exp@x,___ftmul@f1
  8724  001664  C0AA  F07A         	movff	exp@x+1,___ftmul@f1+1
  8725  001668  C0AB  F07B         	movff	exp@x+2,___ftmul@f1+2
  8726  00166C  0EAA               	movlw	170
  8727  00166E  0100               	movlb	0	; () banked
  8728  001670  6F7C               	movwf	___ftmul@f2& (0+255),b
  8729  001672  0EB8               	movlw	184
  8730  001674  0100               	movlb	0	; () banked
  8731  001676  6F7D               	movwf	(___ftmul@f2+1)& (0+255),b
  8732  001678  0E3F               	movlw	63
  8733  00167A  0100               	movlb	0	; () banked
  8734  00167C  6F7E               	movwf	(___ftmul@f2+2)& (0+255),b
  8735  00167E  ECA6  F00C         	call	___ftmul	;wreg free
  8736  001682  C079  F0A9         	movff	?___ftmul,exp@x
  8737  001686  C07A  F0AA         	movff	?___ftmul+1,exp@x+1
  8738  00168A  C07B  F0AB         	movff	?___ftmul+2,exp@x+2
  8739  00168E  C0A9  F0A1         	movff	exp@x,floor@x
  8740  001692  C0AA  F0A2         	movff	exp@x+1,floor@x+1
  8741  001696  C0AB  F0A3         	movff	exp@x+2,floor@x+2
  8742  00169A  EC49  F010         	call	_floor	;wreg free
  8743  00169E  C0A1  F0AC         	movff	?_floor,_exp$3224
  8744  0016A2  C0A2  F0AD         	movff	?_floor+1,_exp$3224+1
  8745  0016A6  C0A3  F0AE         	movff	?_floor+2,_exp$3224+2
  8746  0016AA  C0AC  F088         	movff	_exp$3224,___fttol@f1
  8747  0016AE  C0AD  F089         	movff	_exp$3224+1,___fttol@f1+1
  8748  0016B2  C0AE  F08A         	movff	_exp$3224+2,___fttol@f1+2
  8749  0016B6  EC95  F00E         	call	___fttol	;wreg free
  8750  0016BA  C088  F0AF         	movff	?___fttol,exp@exponent
  8751  0016BE  C089  F0B0         	movff	?___fttol+1,exp@exponent+1
  8752  0016C2  C0A9  F094         	movff	exp@x,___ftsub@f1
  8753  0016C6  C0AA  F095         	movff	exp@x+1,___ftsub@f1+1
  8754  0016CA  C0AB  F096         	movff	exp@x+2,___ftsub@f1+2
  8755  0016CE  C0AF  F076         	movff	exp@exponent,___awtoft@c
  8756  0016D2  C0B0  F077         	movff	exp@exponent+1,___awtoft@c+1
  8757  0016D6  ECDB  F018         	call	___awtoft	;wreg free
  8758  0016DA  C076  F097         	movff	?___awtoft,___ftsub@f2
  8759  0016DE  C077  F098         	movff	?___awtoft+1,___ftsub@f2+1
  8760  0016E2  C078  F099         	movff	?___awtoft+2,___ftsub@f2+2
  8761  0016E6  EC4B  F018         	call	___ftsub	;wreg free
  8762  0016EA  C094  F0A9         	movff	?___ftsub,exp@x
  8763  0016EE  C095  F0AA         	movff	?___ftsub+1,exp@x+1
  8764  0016F2  C096  F0AB         	movff	?___ftsub+2,exp@x+2
  8765  0016F6  C0A9  F094         	movff	exp@x,eval_poly@x
  8766  0016FA  C0AA  F095         	movff	exp@x+1,eval_poly@x+1
  8767  0016FE  C0AB  F096         	movff	exp@x+2,eval_poly@x+2
  8768  001702  0E01               	movlw	low exp@coeff
  8769  001704  0100               	movlb	0	; () banked
  8770  001706  6F97               	movwf	eval_poly@d& (0+255),b
  8771  001708  0E10               	movlw	high exp@coeff
  8772  00170A  0100               	movlb	0	; () banked
  8773  00170C  6F98               	movwf	(eval_poly@d+1)& (0+255),b
  8774  00170E  0E00               	movlw	0
  8775  001710  0100               	movlb	0	; () banked
  8776  001712  6F9A               	movwf	(eval_poly@n+1)& (0+255),b
  8777  001714  0E09               	movlw	9
  8778  001716  6F99               	movwf	eval_poly@n& (0+255),b
  8779  001718  ECC7  F010         	call	_eval_poly	;wreg free
  8780  00171C  C094  F0A0         	movff	?_eval_poly,ldexp@value
  8781  001720  C095  F0A1         	movff	?_eval_poly+1,ldexp@value+1
  8782  001724  C096  F0A2         	movff	?_eval_poly+2,ldexp@value+2
  8783  001728  C0AF  F0A3         	movff	exp@exponent,ldexp@newexp
  8784  00172C  C0B0  F0A4         	movff	exp@exponent+1,ldexp@newexp+1
  8785  001730  ECBE  F00F         	call	_ldexp	;wreg free
  8786  001734  C0A0  F0A9         	movff	?_ldexp,exp@x
  8787  001738  C0A1  F0AA         	movff	?_ldexp+1,exp@x+1
  8788  00173C  C0A2  F0AB         	movff	?_ldexp+2,exp@x+2
  8789  001740  0100               	movlb	0	; () banked
  8790  001742  51B1               	movf	exp@sign& (0+255),w,b
  8791  001744  0100               	movlb	0	; () banked
  8792  001746  B4D8               	btfsc	status,2,c
  8793  001748  D02D               	goto	l1486
  8794                           
  8795                           ; BSR set to: 0
  8796  00174A  0100               	movlb	0	; () banked
  8797  00174C  29A9               	incf	exp@x& (0+255),w,b
  8798  00174E  E112               	bnz	l5750
  8799  001750  0E7F               	movlw	127
  8800  001752  0100               	movlb	0	; () banked
  8801  001754  19AA               	xorwf	(exp@x+1)& (0+255),w,b
  8802  001756  E10E               	bnz	l5750
  8803  001758  0E7F               	movlw	127
  8804  00175A  0100               	movlb	0	; () banked
  8805  00175C  19AB               	xorwf	(exp@x+2)& (0+255),w,b
  8806  00175E  A4D8               	btfss	status,2,c
  8807  001760  D009               	goto	l5750
  8808  001762                     l5746:
  8809                           
  8810                           ; BSR set to: 0
  8811  001762  0E00               	movlw	0
  8812  001764  0100               	movlb	0	; () banked
  8813  001766  6FA9               	movwf	?_exp& (0+255),b
  8814  001768  0E00               	movlw	0
  8815  00176A  0100               	movlb	0	; () banked
  8816  00176C  6FAA               	movwf	(?_exp+1)& (0+255),b
  8817  00176E  0E00               	movlw	0
  8818  001770  D759               	goto	L9
  8819                           
  8820                           ; BSR set to: 0
  8821  001772  D01E               	goto	l1482
  8822  001774                     l5750:
  8823                           
  8824                           ; BSR set to: 0
  8825  001774  0E00               	movlw	0
  8826  001776  0100               	movlb	0	; () banked
  8827  001778  6F76               	movwf	___ftdiv@f1& (0+255),b
  8828  00177A  0E80               	movlw	128
  8829  00177C  0100               	movlb	0	; () banked
  8830  00177E  6F77               	movwf	(___ftdiv@f1+1)& (0+255),b
  8831  001780  0E3F               	movlw	63
  8832  001782  0100               	movlb	0	; () banked
  8833  001784  6F78               	movwf	(___ftdiv@f1+2)& (0+255),b
  8834  001786  C0A9  F079         	movff	exp@x,___ftdiv@f2
  8835  00178A  C0AA  F07A         	movff	exp@x+1,___ftdiv@f2+1
  8836  00178E  C0AB  F07B         	movff	exp@x+2,___ftdiv@f2+2
  8837  001792  EC54  F00D         	call	___ftdiv	;wreg free
  8838  001796  C076  F0A9         	movff	?___ftdiv,?_exp
  8839  00179A  C077  F0AA         	movff	?___ftdiv+1,?_exp+1
  8840  00179E  C078  F0AB         	movff	?___ftdiv+2,?_exp+2
  8841  0017A2  D006               	goto	l1482
  8842  0017A4                     l1486:
  8843                           
  8844                           ; BSR set to: 0
  8845  0017A4  C0A9  F0A9         	movff	exp@x,?_exp
  8846  0017A8  C0AA  F0AA         	movff	exp@x+1,?_exp+1
  8847  0017AC  C0AB  F0AB         	movff	exp@x+2,?_exp+2
  8848  0017B0                     l1482:
  8849  0017B0  0012               	return		;funcret
  8850  0017B2                     __end_of_exp:
  8851                           	opt stack 0
  8852                           prodh	equ	0xFF4
  8853                           prodl	equ	0xFF3
  8854                           intcon	equ	0xFF2
  8855                           intcon2	equ	0xFF1
  8856                           intcon3	equ	0xFF0
  8857                           postinc0	equ	0xFEE
  8858                           wreg	equ	0xFE8
  8859                           indf2	equ	0xFDF
  8860                           postinc2	equ	0xFDE
  8861                           postdec2	equ	0xFDD
  8862                           fsr2h	equ	0xFDA
  8863                           fsr2l	equ	0xFD9
  8864                           status	equ	0xFD8
  8865                           
  8866 ;; *************** function _ldexp *****************
  8867 ;; Defined at:
  8868 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  value           3   64[BANK0 ] unsigned char 
  8871 ;;  newexp          2   67[BANK0 ] int 
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  3   64[BANK0 ] int 
  8876 ;; Registers used:
  8877 ;;		wreg, status,2, status,0
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8883 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8886 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8887 ;;Total ram usage:        7 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:    7
  8890 ;; This function calls:
  8891 ;;		Nothing
  8892 ;; This function is called by:
  8893 ;;		_exp
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text77
  8898  001F7C                     __ptext77:
  8899                           	opt stack 0
  8900  001F7C                     _ldexp:
  8901                           	opt stack 20
  8902                           
  8903                           ;incstack = 0
  8904  001F7C  0100               	movlb	0	; () banked
  8905  001F7E  51A0               	movf	ldexp@value& (0+255),w,b
  8906  001F80  0100               	movlb	0	; () banked
  8907  001F82  11A1               	iorwf	(ldexp@value+1)& (0+255),w,b
  8908  001F84  0100               	movlb	0	; () banked
  8909  001F86  11A2               	iorwf	(ldexp@value+2)& (0+255),w,b
  8910  001F88  A4D8               	btfss	status,2,c
  8911  001F8A  D002               	goto	l5506
  8912  001F8C  D02A               	goto	L10
  8913                           
  8914                           ; BSR set to: 0
  8915                           
  8916                           ; BSR set to: 0
  8917  001F8E  D080               	goto	l1506
  8918  001F90                     l5506:
  8919                           
  8920                           ; BSR set to: 0
  8921  001F90  0100               	movlb	0	; () banked
  8922  001F92  51A2               	movf	(ldexp@value+2)& (0+255),w,b
  8923  001F94  0B7F               	andlw	127
  8924  001F96  0100               	movlb	0	; () banked
  8925  001F98  6FA5               	movwf	??_ldexp& (0+255),b
  8926  001F9A  6BA6               	clrf	(??_ldexp+1)& (0+255),b
  8927  001F9C  90D8               	bcf	status,0,c
  8928  001F9E  0100               	movlb	0	; () banked
  8929  001FA0  37A5               	rlcf	??_ldexp& (0+255),f,b
  8930  001FA2  37A6               	rlcf	(??_ldexp+1)& (0+255),f,b
  8931  001FA4  0100               	movlb	0	; () banked
  8932  001FA6  51A5               	movf	??_ldexp& (0+255),w,b
  8933  001FA8  0100               	movlb	0	; () banked
  8934  001FAA  27A3               	addwf	ldexp@newexp& (0+255),f,b
  8935  001FAC  0100               	movlb	0	; () banked
  8936  001FAE  51A6               	movf	(??_ldexp+1)& (0+255),w,b
  8937  001FB0  0100               	movlb	0	; () banked
  8938  001FB2  23A4               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  8939  001FB4  0100               	movlb	0	; () banked
  8940  001FB6  AFA1               	btfss	(ldexp@value+1)& (0+255),7,b
  8941  001FB8  D004               	goto	u4990
  8942  001FBA  0100               	movlb	0	; () banked
  8943  001FBC  6BA5               	clrf	??_ldexp& (0+255),b
  8944  001FBE  2BA5               	incf	??_ldexp& (0+255),f,b
  8945  001FC0  D002               	goto	u4998
  8946  001FC2                     u4990:
  8947  001FC2  0100               	movlb	0	; () banked
  8948  001FC4  6BA5               	clrf	??_ldexp& (0+255),b
  8949  001FC6                     u4998:
  8950  001FC6  0100               	movlb	0	; () banked
  8951  001FC8  51A5               	movf	??_ldexp& (0+255),w,b
  8952  001FCA  0100               	movlb	0	; () banked
  8953  001FCC  27A3               	addwf	ldexp@newexp& (0+255),f,b
  8954  001FCE  0E00               	movlw	0
  8955  001FD0  23A4               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  8956  001FD2  0100               	movlb	0	; () banked
  8957  001FD4  AFA4               	btfss	(ldexp@newexp+1)& (0+255),7,b
  8958  001FD6  D00F               	goto	l5514
  8959                           
  8960                           ; BSR set to: 0
  8961  001FD8  0E00               	movlw	0
  8962  001FDA  0100               	movlb	0	; () banked
  8963  001FDC  6FDD               	movwf	(_errno+1)& (0+255),b
  8964  001FDE  0E22               	movlw	34
  8965  001FE0  6FDC               	movwf	_errno& (0+255),b
  8966  001FE2                     L10:
  8967  001FE2  0E00               	movlw	0
  8968  001FE4  0100               	movlb	0	; () banked
  8969  001FE6  6FA0               	movwf	?_ldexp& (0+255),b
  8970  001FE8  0E00               	movlw	0
  8971  001FEA  0100               	movlb	0	; () banked
  8972  001FEC  6FA1               	movwf	(?_ldexp+1)& (0+255),b
  8973  001FEE  0E00               	movlw	0
  8974  001FF0  D022               	goto	L12
  8975                           
  8976                           ; BSR set to: 0
  8977  001FF2  D04E               	goto	l1506
  8978                           
  8979                           ; BSR set to: 0
  8980  001FF4  D046               	goto	l5532
  8981  001FF6                     l5514:
  8982                           
  8983                           ; BSR set to: 0
  8984  001FF6  0100               	movlb	0	; () banked
  8985  001FF8  BFA4               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  8986  001FFA  D021               	goto	l5530
  8987  001FFC  0100               	movlb	0	; () banked
  8988  001FFE  05A4               	decf	(ldexp@newexp+1)& (0+255),w,b
  8989  002000  A0D8               	btfss	status,0,c
  8990  002002  D01D               	goto	l5530
  8991                           
  8992                           ; BSR set to: 0
  8993  002004  0E00               	movlw	0
  8994  002006  0100               	movlb	0	; () banked
  8995  002008  6FDD               	movwf	(_errno+1)& (0+255),b
  8996  00200A  0E22               	movlw	34
  8997  00200C  6FDC               	movwf	_errno& (0+255),b
  8998                           
  8999                           ; BSR set to: 0
  9000  00200E  0100               	movlb	0	; () banked
  9001  002010  AFA2               	btfss	(ldexp@value+2)& (0+255),7,b
  9002  002012  D00A               	goto	l5526
  9003                           
  9004                           ; BSR set to: 0
  9005  002014  0EFF               	movlw	255
  9006  002016  0100               	movlb	0	; () banked
  9007  002018  6FA0               	movwf	?_ldexp& (0+255),b
  9008  00201A  0E7F               	movlw	127
  9009  00201C  0100               	movlb	0	; () banked
  9010  00201E  6FA1               	movwf	(?_ldexp+1)& (0+255),b
  9011  002020  0EFF               	movlw	255
  9012  002022  D009               	goto	L12
  9013                           
  9014                           ; BSR set to: 0
  9015  002024  D035               	goto	l1506
  9016                           
  9017                           ; BSR set to: 0
  9018  002026  D02D               	goto	l5532
  9019  002028                     l5526:
  9020                           
  9021                           ; BSR set to: 0
  9022  002028  0EFF               	movlw	255
  9023  00202A  0100               	movlb	0	; () banked
  9024  00202C  6FA0               	movwf	?_ldexp& (0+255),b
  9025  00202E  0E7F               	movlw	127
  9026  002030  0100               	movlb	0	; () banked
  9027  002032  6FA1               	movwf	(?_ldexp+1)& (0+255),b
  9028  002034  0E7F               	movlw	127
  9029  002036                     L12:
  9030  002036  0100               	movlb	0	; () banked
  9031  002038  6FA2               	movwf	(?_ldexp+2)& (0+255),b
  9032                           
  9033                           ; BSR set to: 0
  9034  00203A  D02A               	goto	l1506
  9035                           
  9036                           ; BSR set to: 0
  9037  00203C  D022               	goto	l5532
  9038  00203E                     l5530:
  9039                           
  9040                           ; BSR set to: 0
  9041  00203E  0100               	movlb	0	; () banked
  9042  002040  35A4               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  9043  002042  31A4               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  9044  002044  0100               	movlb	0	; () banked
  9045  002046  6FA6               	movwf	(??_ldexp+1)& (0+255),b
  9046  002048  0100               	movlb	0	; () banked
  9047  00204A  31A3               	rrcf	ldexp@newexp& (0+255),w,b
  9048  00204C  0100               	movlb	0	; () banked
  9049  00204E  6FA5               	movwf	??_ldexp& (0+255),b
  9050  002050  0100               	movlb	0	; () banked
  9051  002052  51A2               	movf	(ldexp@value+2)& (0+255),w,b
  9052  002054  0100               	movlb	0	; () banked
  9053  002056  19A5               	xorwf	??_ldexp& (0+255),w,b
  9054  002058  0B80               	andlw	-128
  9055  00205A  19A5               	xorwf	??_ldexp& (0+255),w,b
  9056  00205C  0100               	movlb	0	; () banked
  9057  00205E  6FA2               	movwf	(ldexp@value+2)& (0+255),b
  9058  002060  C0A3  F0A5         	movff	ldexp@newexp,??_ldexp
  9059  002064  0E01               	movlw	1
  9060  002066  0100               	movlb	0	; () banked
  9061  002068  17A5               	andwf	??_ldexp& (0+255),f,b
  9062  00206A  0100               	movlb	0	; () banked
  9063  00206C  33A5               	rrcf	??_ldexp& (0+255),f,b
  9064  00206E  33A5               	rrcf	??_ldexp& (0+255),f,b
  9065  002070  0100               	movlb	0	; () banked
  9066  002072  51A1               	movf	(ldexp@value+1)& (0+255),w,b
  9067  002074  0100               	movlb	0	; () banked
  9068  002076  19A5               	xorwf	??_ldexp& (0+255),w,b
  9069  002078  0B7F               	andlw	-129
  9070  00207A  19A5               	xorwf	??_ldexp& (0+255),w,b
  9071  00207C  0100               	movlb	0	; () banked
  9072  00207E  6FA1               	movwf	(ldexp@value+1)& (0+255),b
  9073                           
  9074                           ; BSR set to: 0
  9075  002080  D000               	goto	l5532
  9076  002082                     l5532:
  9077                           
  9078                           ; BSR set to: 0
  9079  002082  C0A0  F0A0         	movff	ldexp@value,?_ldexp
  9080  002086  C0A1  F0A1         	movff	ldexp@value+1,?_ldexp+1
  9081  00208A  C0A2  F0A2         	movff	ldexp@value+2,?_ldexp+2
  9082  00208E  D000               	goto	l1506
  9083  002090                     l1506:
  9084                           
  9085                           ; BSR set to: 0
  9086  002090  0012               	return		;funcret
  9087  002092                     __end_of_ldexp:
  9088                           	opt stack 0
  9089                           prodh	equ	0xFF4
  9090                           prodl	equ	0xFF3
  9091                           intcon	equ	0xFF2
  9092                           intcon2	equ	0xFF1
  9093                           intcon3	equ	0xFF0
  9094                           postinc0	equ	0xFEE
  9095                           wreg	equ	0xFE8
  9096                           indf2	equ	0xFDF
  9097                           postinc2	equ	0xFDE
  9098                           postdec2	equ	0xFDD
  9099                           fsr2h	equ	0xFDA
  9100                           fsr2l	equ	0xFD9
  9101                           status	equ	0xFD8
  9102                           
  9103 ;; *************** function _floor *****************
  9104 ;; Defined at:
  9105 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  x               3   65[BANK0 ] int 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  i               3   68[BANK0 ] int 
  9110 ;;  expon           2   71[BANK0 ] int 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  3   65[BANK0 ] int 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9120 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;Total ram usage:        8 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:    9
  9127 ;; This function calls:
  9128 ;;		___altoft
  9129 ;;		___ftadd
  9130 ;;		___ftge
  9131 ;;		___fttol
  9132 ;;		_frexp
  9133 ;; This function is called by:
  9134 ;;		_exp
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text78
  9139  002092                     __ptext78:
  9140                           	opt stack 0
  9141  002092                     _floor:
  9142                           	opt stack 18
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;incstack = 0
  9146  002092  C0A1  F06E         	movff	floor@x,frexp@value
  9147  002096  C0A2  F06F         	movff	floor@x+1,frexp@value+1
  9148  00209A  C0A3  F070         	movff	floor@x+2,frexp@value+2
  9149  00209E  0EA7               	movlw	low floor@expon
  9150  0020A0  0100               	movlb	0	; () banked
  9151  0020A2  6F71               	movwf	frexp@eptr& (0+255),b
  9152  0020A4  0E00               	movlw	high floor@expon
  9153  0020A6  0100               	movlb	0	; () banked
  9154  0020A8  6F72               	movwf	(frexp@eptr+1)& (0+255),b
  9155  0020AA  EC82  F014         	call	_frexp	;wreg free
  9156  0020AE  0100               	movlb	0	; () banked
  9157  0020B0  AFA8               	btfss	(floor@expon+1)& (0+255),7,b
  9158  0020B2  D016               	goto	l5484
  9159                           
  9160                           ; BSR set to: 0
  9161  0020B4  0100               	movlb	0	; () banked
  9162  0020B6  AFA3               	btfss	(floor@x+2)& (0+255),7,b
  9163  0020B8  D009               	goto	l5480
  9164                           
  9165                           ; BSR set to: 0
  9166  0020BA  0E00               	movlw	0
  9167  0020BC  0100               	movlb	0	; () banked
  9168  0020BE  6FA1               	movwf	?_floor& (0+255),b
  9169  0020C0  0E80               	movlw	128
  9170  0020C2  0100               	movlb	0	; () banked
  9171  0020C4  6FA2               	movwf	(?_floor+1)& (0+255),b
  9172  0020C6  0EBF               	movlw	191
  9173  0020C8  D008               	goto	L13
  9174                           
  9175                           ; BSR set to: 0
  9176  0020CA  D060               	goto	l1494
  9177  0020CC                     l5480:
  9178                           
  9179                           ; BSR set to: 0
  9180  0020CC  0E00               	movlw	0
  9181  0020CE  0100               	movlb	0	; () banked
  9182  0020D0  6FA1               	movwf	?_floor& (0+255),b
  9183  0020D2  0E00               	movlw	0
  9184  0020D4  0100               	movlb	0	; () banked
  9185  0020D6  6FA2               	movwf	(?_floor+1)& (0+255),b
  9186  0020D8  0E00               	movlw	0
  9187  0020DA                     L13:
  9188  0020DA  0100               	movlb	0	; () banked
  9189  0020DC  6FA3               	movwf	(?_floor+2)& (0+255),b
  9190                           
  9191                           ; BSR set to: 0
  9192  0020DE  D056               	goto	l1494
  9193  0020E0                     l5484:
  9194                           
  9195                           ; BSR set to: 0
  9196  0020E0  0100               	movlb	0	; () banked
  9197  0020E2  51A8               	movf	(floor@expon+1)& (0+255),w,b
  9198  0020E4  E105               	bnz	u4950
  9199  0020E6  0E15               	movlw	21
  9200  0020E8  0100               	movlb	0	; () banked
  9201  0020EA  5DA7               	subwf	floor@expon& (0+255),w,b
  9202  0020EC  A0D8               	btfss	status,0,c
  9203  0020EE  D007               	goto	l5488
  9204  0020F0                     u4950:
  9205                           
  9206                           ; BSR set to: 0
  9207  0020F0  C0A1  F0A1         	movff	floor@x,?_floor
  9208  0020F4  C0A2  F0A2         	movff	floor@x+1,?_floor+1
  9209  0020F8  C0A3  F0A3         	movff	floor@x+2,?_floor+2
  9210  0020FC  D047               	goto	l1494
  9211  0020FE                     l5488:
  9212                           
  9213                           ; BSR set to: 0
  9214  0020FE  C0A1  F088         	movff	floor@x,___fttol@f1
  9215  002102  C0A2  F089         	movff	floor@x+1,___fttol@f1+1
  9216  002106  C0A3  F08A         	movff	floor@x+2,___fttol@f1+2
  9217  00210A  EC95  F00E         	call	___fttol	;wreg free
  9218  00210E  C088  F097         	movff	?___fttol,___altoft@c
  9219  002112  C089  F098         	movff	?___fttol+1,___altoft@c+1
  9220  002116  C08A  F099         	movff	?___fttol+2,___altoft@c+2
  9221  00211A  C08B  F09A         	movff	?___fttol+3,___altoft@c+3
  9222  00211E  EC7D  F015         	call	___altoft	;wreg free
  9223  002122  C097  F0A4         	movff	?___altoft,floor@i
  9224  002126  C098  F0A5         	movff	?___altoft+1,floor@i+1
  9225  00212A  C099  F0A6         	movff	?___altoft+2,floor@i+2
  9226  00212E  C0A1  F06E         	movff	floor@x,___ftge@ff1
  9227  002132  C0A2  F06F         	movff	floor@x+1,___ftge@ff1+1
  9228  002136  C0A3  F070         	movff	floor@x+2,___ftge@ff1+2
  9229  00213A  C0A4  F071         	movff	floor@i,___ftge@ff2
  9230  00213E  C0A5  F072         	movff	floor@i+1,___ftge@ff2+1
  9231  002142  C0A6  F073         	movff	floor@i+2,___ftge@ff2+2
  9232  002146  EC0C  F013         	call	___ftge	;wreg free
  9233  00214A  0100               	movlb	0	; () banked
  9234  00214C  B0D8               	btfsc	status,0,c
  9235  00214E  D018               	goto	l1496
  9236                           
  9237                           ; BSR set to: 0
  9238  002150  C0A4  F088         	movff	floor@i,___ftadd@f1
  9239  002154  C0A5  F089         	movff	floor@i+1,___ftadd@f1+1
  9240  002158  C0A6  F08A         	movff	floor@i+2,___ftadd@f1+2
  9241  00215C  0E00               	movlw	0
  9242  00215E  0100               	movlb	0	; () banked
  9243  002160  6F8B               	movwf	___ftadd@f2& (0+255),b
  9244  002162  0E80               	movlw	128
  9245  002164  0100               	movlb	0	; () banked
  9246  002166  6F8C               	movwf	(___ftadd@f2+1)& (0+255),b
  9247  002168  0EBF               	movlw	191
  9248  00216A  0100               	movlb	0	; () banked
  9249  00216C  6F8D               	movwf	(___ftadd@f2+2)& (0+255),b
  9250  00216E  EC86  F009         	call	___ftadd	;wreg free
  9251  002172  C088  F0A1         	movff	?___ftadd,?_floor
  9252  002176  C089  F0A2         	movff	?___ftadd+1,?_floor+1
  9253  00217A  C08A  F0A3         	movff	?___ftadd+2,?_floor+2
  9254  00217E  D006               	goto	l1494
  9255  002180                     l1496:
  9256                           
  9257                           ; BSR set to: 0
  9258  002180  C0A4  F0A1         	movff	floor@i,?_floor
  9259  002184  C0A5  F0A2         	movff	floor@i+1,?_floor+1
  9260  002188  C0A6  F0A3         	movff	floor@i+2,?_floor+2
  9261  00218C                     l1494:
  9262  00218C  0012               	return		;funcret
  9263  00218E                     __end_of_floor:
  9264                           	opt stack 0
  9265                           prodh	equ	0xFF4
  9266                           prodl	equ	0xFF3
  9267                           intcon	equ	0xFF2
  9268                           intcon2	equ	0xFF1
  9269                           intcon3	equ	0xFF0
  9270                           postinc0	equ	0xFEE
  9271                           wreg	equ	0xFE8
  9272                           indf2	equ	0xFDF
  9273                           postinc2	equ	0xFDE
  9274                           postdec2	equ	0xFDD
  9275                           fsr2h	equ	0xFDA
  9276                           fsr2l	equ	0xFD9
  9277                           status	equ	0xFD8
  9278                           
  9279 ;; *************** function _frexp *****************
  9280 ;; Defined at:
  9281 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  value           3   14[BANK0 ] int 
  9284 ;;  eptr            2   17[BANK0 ] PTR int 
  9285 ;;		 -> log@exponent(2), floor@expon(2), 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  3   14[BANK0 ] PTR int 
  9290 ;; Registers used:
  9291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9297 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9301 ;;Total ram usage:        7 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:    7
  9304 ;; This function calls:
  9305 ;;		Nothing
  9306 ;; This function is called by:
  9307 ;;		_floor
  9308 ;;		_log
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text79
  9313  002904                     __ptext79:
  9314                           	opt stack 0
  9315  002904                     _frexp:
  9316                           	opt stack 20
  9317                           
  9318                           ;incstack = 0
  9319  002904  0100               	movlb	0	; () banked
  9320  002906  516E               	movf	frexp@value& (0+255),w,b
  9321  002908  0100               	movlb	0	; () banked
  9322  00290A  116F               	iorwf	(frexp@value+1)& (0+255),w,b
  9323  00290C  0100               	movlb	0	; () banked
  9324  00290E  1170               	iorwf	(frexp@value+2)& (0+255),w,b
  9325  002910  A4D8               	btfss	status,2,c
  9326  002912  D012               	goto	l5246
  9327                           
  9328                           ; BSR set to: 0
  9329  002914  C071  FFD9         	movff	frexp@eptr,fsr2l
  9330  002918  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  9331  00291C  0E00               	movlw	0
  9332  00291E  6EDE               	movwf	postinc2,c
  9333  002920  0E00               	movlw	0
  9334  002922  6EDD               	movwf	postdec2,c
  9335                           
  9336                           ; BSR set to: 0
  9337  002924  0E00               	movlw	0
  9338  002926  0100               	movlb	0	; () banked
  9339  002928  6F6E               	movwf	?_frexp& (0+255),b
  9340  00292A  0E00               	movlw	0
  9341  00292C  0100               	movlb	0	; () banked
  9342  00292E  6F6F               	movwf	(?_frexp+1)& (0+255),b
  9343  002930  0E00               	movlw	0
  9344  002932  0100               	movlb	0	; () banked
  9345  002934  6F70               	movwf	(?_frexp+2)& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348  002936  D03C               	goto	l1502
  9349  002938                     l5246:
  9350                           
  9351                           ; BSR set to: 0
  9352  002938  0100               	movlb	0	; () banked
  9353  00293A  5170               	movf	(frexp@value+2)& (0+255),w,b
  9354  00293C  0B7F               	andlw	127
  9355  00293E  0100               	movlb	0	; () banked
  9356  002940  6F73               	movwf	??_frexp& (0+255),b
  9357  002942  6B74               	clrf	(??_frexp+1)& (0+255),b
  9358  002944  90D8               	bcf	status,0,c
  9359  002946  0100               	movlb	0	; () banked
  9360  002948  3773               	rlcf	??_frexp& (0+255),f,b
  9361  00294A  3774               	rlcf	(??_frexp+1)& (0+255),f,b
  9362  00294C  C071  FFD9         	movff	frexp@eptr,fsr2l
  9363  002950  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  9364  002954  C073  FFDE         	movff	??_frexp,postinc2
  9365  002958  C074  FFDD         	movff	??_frexp+1,postdec2
  9366  00295C  0100               	movlb	0	; () banked
  9367  00295E  AF6F               	btfss	(frexp@value+1)& (0+255),7,b
  9368  002960  D004               	goto	u4620
  9369  002962  0100               	movlb	0	; () banked
  9370  002964  6B73               	clrf	??_frexp& (0+255),b
  9371  002966  2B73               	incf	??_frexp& (0+255),f,b
  9372  002968  D002               	goto	u4628
  9373  00296A                     u4620:
  9374  00296A  0100               	movlb	0	; () banked
  9375  00296C  6B73               	clrf	??_frexp& (0+255),b
  9376  00296E                     u4628:
  9377  00296E  0100               	movlb	0	; () banked
  9378  002970  5173               	movf	??_frexp& (0+255),w,b
  9379  002972  C071  FFD9         	movff	frexp@eptr,fsr2l
  9380  002976  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  9381  00297A  12DE               	iorwf	postinc2,f,c
  9382  00297C  0E00               	movlw	0
  9383  00297E  12DD               	iorwf	postdec2,f,c
  9384                           
  9385                           ; BSR set to: 0
  9386  002980  C071  FFD9         	movff	frexp@eptr,fsr2l
  9387  002984  C072  FFDA         	movff	frexp@eptr+1,fsr2h
  9388  002988  0E82               	movlw	130
  9389  00298A  26DE               	addwf	postinc2,f,c
  9390  00298C  0EFF               	movlw	255
  9391  00298E  22DD               	addwfc	postdec2,f,c
  9392                           
  9393                           ; BSR set to: 0
  9394  002990  8170               	bsf	(frexp@value+2)& (0+255),0,b
  9395  002992  8370               	bsf	(frexp@value+2)& (0+255),1,b
  9396  002994  8570               	bsf	(frexp@value+2)& (0+255),2,b
  9397  002996  8770               	bsf	(frexp@value+2)& (0+255),3,b
  9398  002998  8970               	bsf	(frexp@value+2)& (0+255),4,b
  9399  00299A  8B70               	bsf	(frexp@value+2)& (0+255),5,b
  9400  00299C  9D70               	bcf	(frexp@value+2)& (0+255),6,b
  9401                           
  9402                           ; BSR set to: 0
  9403  00299E  0100               	movlb	0	; () banked
  9404  0029A0  9F6F               	bcf	(frexp@value+1)& (0+255),7,b
  9405                           
  9406                           ; BSR set to: 0
  9407  0029A2  C06E  F06E         	movff	frexp@value,?_frexp
  9408  0029A6  C06F  F06F         	movff	frexp@value+1,?_frexp+1
  9409  0029AA  C070  F070         	movff	frexp@value+2,?_frexp+2
  9410  0029AE  D000               	goto	l1502
  9411  0029B0                     l1502:
  9412                           
  9413                           ; BSR set to: 0
  9414  0029B0  0012               	return		;funcret
  9415  0029B2                     __end_of_frexp:
  9416                           	opt stack 0
  9417                           prodh	equ	0xFF4
  9418                           prodl	equ	0xFF3
  9419                           intcon	equ	0xFF2
  9420                           intcon2	equ	0xFF1
  9421                           intcon3	equ	0xFF0
  9422                           postinc0	equ	0xFEE
  9423                           wreg	equ	0xFE8
  9424                           indf2	equ	0xFDF
  9425                           postinc2	equ	0xFDE
  9426                           postdec2	equ	0xFDD
  9427                           fsr2h	equ	0xFDA
  9428                           fsr2l	equ	0xFD9
  9429                           status	equ	0xFD8
  9430                           
  9431 ;; *************** function ___fttol *****************
  9432 ;; Defined at:
  9433 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  f1              3   40[BANK0 ] float 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  lval            4   50[BANK0 ] unsigned long 
  9438 ;;  exp1            1   54[BANK0 ] unsigned char 
  9439 ;;  sign1           1   49[BANK0 ] unsigned char 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  4   40[BANK0 ] long 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;Total ram usage:       15 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    7
  9456 ;; This function calls:
  9457 ;;		Nothing
  9458 ;; This function is called by:
  9459 ;;		_CalculateSensorSums
  9460 ;;		_pow
  9461 ;;		_exp
  9462 ;;		_floor
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text80
  9467  001D2A                     __ptext80:
  9468                           	opt stack 0
  9469  001D2A                     ___fttol:
  9470                           	opt stack 19
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;incstack = 0
  9474  001D2A  C08A  F08C         	movff	___fttol@f1+2,??___fttol
  9475  001D2E  0100               	movlb	0	; () banked
  9476  001D30  6B8D               	clrf	(??___fttol+1)& (0+255),b
  9477  001D32  6B8E               	clrf	(??___fttol+2)& (0+255),b
  9478  001D34  0100               	movlb	0	; () banked
  9479  001D36  3589               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9480  001D38  0100               	movlb	0	; () banked
  9481  001D3A  378C               	rlcf	??___fttol& (0+255),f,b
  9482  001D3C  E301               	bnc	u4531
  9483  001D3E  818D               	bsf	(??___fttol+1)& (0+255),0,b
  9484  001D40                     u4531:
  9485  001D40  0100               	movlb	0	; () banked
  9486  001D42  518C               	movf	??___fttol& (0+255),w,b
  9487  001D44  0100               	movlb	0	; () banked
  9488  001D46  6F96               	movwf	___fttol@exp1& (0+255),b
  9489  001D48  0100               	movlb	0	; () banked
  9490  001D4A  5196               	movf	___fttol@exp1& (0+255),w,b
  9491  001D4C  A4D8               	btfss	status,2,c
  9492  001D4E  D002               	goto	l5198
  9493  001D50  D051               	goto	l5222
  9494                           
  9495                           ; BSR set to: 0
  9496                           
  9497                           ; BSR set to: 0
  9498  001D52  D083               	goto	l1320
  9499  001D54                     l5198:
  9500                           
  9501                           ; BSR set to: 0
  9502  001D54  0E17               	movlw	23
  9503  001D56  0100               	movlb	0	; () banked
  9504  001D58  6F8C               	movwf	??___fttol& (0+255),b
  9505  001D5A  C088  F08D         	movff	___fttol@f1,??___fttol+1
  9506  001D5E  C089  F08E         	movff	___fttol@f1+1,??___fttol+2
  9507  001D62  C08A  F08F         	movff	___fttol@f1+2,??___fttol+3
  9508  001D66  0100               	movlb	0	; () banked
  9509  001D68  298C               	incf	??___fttol& (0+255),w,b
  9510  001D6A  0100               	movlb	0	; () banked
  9511  001D6C  6F90               	movwf	(??___fttol+4)& (0+255),b
  9512  001D6E  D005               	goto	u4550
  9513  001D70                     u4555:
  9514  001D70  0100               	movlb	0	; () banked
  9515  001D72  90D8               	bcf	status,0,c
  9516  001D74  338F               	rrcf	(??___fttol+3)& (0+255),f,b
  9517  001D76  338E               	rrcf	(??___fttol+2)& (0+255),f,b
  9518  001D78  338D               	rrcf	(??___fttol+1)& (0+255),f,b
  9519  001D7A                     u4550:
  9520  001D7A  0100               	movlb	0	; () banked
  9521  001D7C  2F90               	decfsz	(??___fttol+4)& (0+255),f,b
  9522  001D7E  D7F8               	goto	u4555
  9523  001D80  0100               	movlb	0	; () banked
  9524  001D82  518D               	movf	(??___fttol+1)& (0+255),w,b
  9525  001D84  0100               	movlb	0	; () banked
  9526  001D86  6F91               	movwf	___fttol@sign1& (0+255),b
  9527                           
  9528                           ; BSR set to: 0
  9529  001D88  0100               	movlb	0	; () banked
  9530  001D8A  8F89               	bsf	(___fttol@f1+1)& (0+255),7,b
  9531                           
  9532                           ; BSR set to: 0
  9533  001D8C  0EFF               	movlw	255
  9534  001D8E  0100               	movlb	0	; () banked
  9535  001D90  1788               	andwf	___fttol@f1& (0+255),f,b
  9536  001D92  0EFF               	movlw	255
  9537  001D94  0100               	movlb	0	; () banked
  9538  001D96  1789               	andwf	(___fttol@f1+1)& (0+255),f,b
  9539  001D98  0E00               	movlw	0
  9540  001D9A  0100               	movlb	0	; () banked
  9541  001D9C  178A               	andwf	(___fttol@f1+2)& (0+255),f,b
  9542                           
  9543                           ; BSR set to: 0
  9544  001D9E  0100               	movlb	0	; () banked
  9545  001DA0  5188               	movf	___fttol@f1& (0+255),w,b
  9546  001DA2  0100               	movlb	0	; () banked
  9547  001DA4  6F92               	movwf	___fttol@lval& (0+255),b
  9548  001DA6  0100               	movlb	0	; () banked
  9549  001DA8  5189               	movf	(___fttol@f1+1)& (0+255),w,b
  9550  001DAA  0100               	movlb	0	; () banked
  9551  001DAC  6F93               	movwf	(___fttol@lval+1)& (0+255),b
  9552  001DAE  0100               	movlb	0	; () banked
  9553  001DB0  518A               	movf	(___fttol@f1+2)& (0+255),w,b
  9554  001DB2  0100               	movlb	0	; () banked
  9555  001DB4  6F94               	movwf	(___fttol@lval+2)& (0+255),b
  9556  001DB6  0100               	movlb	0	; () banked
  9557  001DB8  6B95               	clrf	(___fttol@lval+3)& (0+255),b
  9558                           
  9559                           ; BSR set to: 0
  9560  001DBA  0E8E               	movlw	142
  9561  001DBC  0100               	movlb	0	; () banked
  9562  001DBE  5F96               	subwf	___fttol@exp1& (0+255),f,b
  9563                           
  9564                           ; BSR set to: 0
  9565  001DC0  0100               	movlb	0	; () banked
  9566  001DC2  AF96               	btfss	___fttol@exp1& (0+255),7,b
  9567  001DC4  D013               	goto	l5220
  9568                           
  9569                           ; BSR set to: 0
  9570  001DC6  0100               	movlb	0	; () banked
  9571  001DC8  5196               	movf	___fttol@exp1& (0+255),w,b
  9572  001DCA  0A80               	xorlw	128
  9573  001DCC  0F8F               	addlw	143
  9574  001DCE  B0D8               	btfsc	status,0,c
  9575  001DD0  D003               	goto	l5216
  9576  001DD2  D010               	goto	l5222
  9577                           
  9578                           ; BSR set to: 0
  9579                           
  9580                           ; BSR set to: 0
  9581  001DD4  D042               	goto	l1320
  9582                           
  9583                           ; BSR set to: 0
  9584  001DD6  D000               	goto	l5216
  9585  001DD8                     l5216:
  9586                           
  9587                           ; BSR set to: 0
  9588  001DD8  0100               	movlb	0	; () banked
  9589  001DDA  90D8               	bcf	status,0,c
  9590  001DDC  3395               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9591  001DDE  3394               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9592  001DE0  3393               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9593  001DE2  3392               	rrcf	___fttol@lval& (0+255),f,b
  9594                           
  9595                           ; BSR set to: 0
  9596  001DE4  0100               	movlb	0	; () banked
  9597  001DE6  3F96               	incfsz	___fttol@exp1& (0+255),f,b
  9598  001DE8  D7F7               	goto	l5216
  9599                           
  9600                           ; BSR set to: 0
  9601  001DEA  D01F               	goto	l5230
  9602  001DEC                     l5220:
  9603                           
  9604                           ; BSR set to: 0
  9605  001DEC  0E17               	movlw	23
  9606  001DEE  0100               	movlb	0	; () banked
  9607  001DF0  6596               	cpfsgt	___fttol@exp1& (0+255),b
  9608  001DF2  D014               	goto	l5228
  9609  001DF4                     l5222:
  9610                           
  9611                           ; BSR set to: 0
  9612  001DF4  0E00               	movlw	0
  9613  001DF6  0100               	movlb	0	; () banked
  9614  001DF8  6F88               	movwf	?___fttol& (0+255),b
  9615  001DFA  0E00               	movlw	0
  9616  001DFC  6F89               	movwf	(?___fttol+1)& (0+255),b
  9617  001DFE  0E00               	movlw	0
  9618  001E00  6F8A               	movwf	(?___fttol+2)& (0+255),b
  9619  001E02  0E00               	movlw	0
  9620  001E04  6F8B               	movwf	(?___fttol+3)& (0+255),b
  9621                           
  9622                           ; BSR set to: 0
  9623  001E06  D029               	goto	l1320
  9624                           
  9625                           ; BSR set to: 0
  9626  001E08  D009               	goto	l5228
  9627  001E0A                     l5226:
  9628                           
  9629                           ; BSR set to: 0
  9630  001E0A  0100               	movlb	0	; () banked
  9631  001E0C  90D8               	bcf	status,0,c
  9632  001E0E  3792               	rlcf	___fttol@lval& (0+255),f,b
  9633  001E10  3793               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9634  001E12  3794               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9635  001E14  3795               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9636  001E16  0100               	movlb	0	; () banked
  9637  001E18  0796               	decf	___fttol@exp1& (0+255),f,b
  9638  001E1A  D000               	goto	l5228
  9639  001E1C                     l5228:
  9640                           
  9641                           ; BSR set to: 0
  9642  001E1C  0100               	movlb	0	; () banked
  9643  001E1E  5196               	movf	___fttol@exp1& (0+255),w,b
  9644  001E20  0100               	movlb	0	; () banked
  9645  001E22  B4D8               	btfsc	status,2,c
  9646  001E24  D002               	goto	l5230
  9647  001E26  D7F1               	goto	l5226
  9648                           
  9649                           ; BSR set to: 0
  9650  001E28  D000               	goto	l5230
  9651  001E2A                     l5230:
  9652                           
  9653                           ; BSR set to: 0
  9654  001E2A  0100               	movlb	0	; () banked
  9655  001E2C  5191               	movf	___fttol@sign1& (0+255),w,b
  9656  001E2E  0100               	movlb	0	; () banked
  9657  001E30  B4D8               	btfsc	status,2,c
  9658  001E32  D00A               	goto	l5234
  9659                           
  9660                           ; BSR set to: 0
  9661  001E34  0100               	movlb	0	; () banked
  9662  001E36  1F95               	comf	(___fttol@lval+3)& (0+255),f,b
  9663  001E38  1F94               	comf	(___fttol@lval+2)& (0+255),f,b
  9664  001E3A  1F93               	comf	(___fttol@lval+1)& (0+255),f,b
  9665  001E3C  6D92               	negf	___fttol@lval& (0+255),b
  9666  001E3E  0E00               	movlw	0
  9667  001E40  2393               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9668  001E42  2394               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9669  001E44  2395               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9670  001E46  D000               	goto	l5234
  9671  001E48                     l5234:
  9672                           
  9673                           ; BSR set to: 0
  9674  001E48  C092  F088         	movff	___fttol@lval,?___fttol
  9675  001E4C  C093  F089         	movff	___fttol@lval+1,?___fttol+1
  9676  001E50  C094  F08A         	movff	___fttol@lval+2,?___fttol+2
  9677  001E54  C095  F08B         	movff	___fttol@lval+3,?___fttol+3
  9678  001E58  D000               	goto	l1320
  9679  001E5A                     l1320:
  9680                           
  9681                           ; BSR set to: 0
  9682  001E5A  0012               	return		;funcret
  9683  001E5C                     __end_of___fttol:
  9684                           	opt stack 0
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           intcon2	equ	0xFF1
  9689                           intcon3	equ	0xFF0
  9690                           postinc0	equ	0xFEE
  9691                           wreg	equ	0xFE8
  9692                           indf2	equ	0xFDF
  9693                           postinc2	equ	0xFDE
  9694                           postdec2	equ	0xFDD
  9695                           fsr2h	equ	0xFDA
  9696                           fsr2l	equ	0xFD9
  9697                           status	equ	0xFD8
  9698                           
  9699 ;; *************** function ___ftge *****************
  9700 ;; Defined at:
  9701 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  ff1             3   14[BANK0 ] float 
  9704 ;;  ff2             3   17[BANK0 ] float 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;		None               void
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9716 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9718 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;Total ram usage:        9 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    7
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_pow
  9727 ;;		_exp
  9728 ;;		_floor
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text81
  9733  002618                     __ptext81:
  9734                           	opt stack 0
  9735  002618                     ___ftge:
  9736                           	opt stack 19
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;incstack = 0
  9740  002618  0100               	movlb	0	; () banked
  9741  00261A  AF70               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9742  00261C  D01E               	goto	l5178
  9743                           
  9744                           ; BSR set to: 0
  9745  00261E  C06E  F074         	movff	___ftge@ff1,??___ftge
  9746  002622  C06F  F075         	movff	___ftge@ff1+1,??___ftge+1
  9747  002626  C070  F076         	movff	___ftge@ff1+2,??___ftge+2
  9748  00262A  0100               	movlb	0	; () banked
  9749  00262C  1F74               	comf	??___ftge& (0+255),f,b
  9750  00262E  1F75               	comf	(??___ftge+1)& (0+255),f,b
  9751  002630  1F76               	comf	(??___ftge+2)& (0+255),f,b
  9752  002632  2B74               	incf	??___ftge& (0+255),f,b
  9753  002634  0E00               	movlw	0
  9754  002636  2375               	addwfc	(??___ftge+1)& (0+255),f,b
  9755  002638  2376               	addwfc	(??___ftge+2)& (0+255),f,b
  9756  00263A  0E00               	movlw	0
  9757  00263C  0100               	movlb	0	; () banked
  9758  00263E  2574               	addwf	??___ftge& (0+255),w,b
  9759  002640  0100               	movlb	0	; () banked
  9760  002642  6F6E               	movwf	___ftge@ff1& (0+255),b
  9761  002644  0E00               	movlw	0
  9762  002646  0100               	movlb	0	; () banked
  9763  002648  2175               	addwfc	(??___ftge+1)& (0+255),w,b
  9764  00264A  0100               	movlb	0	; () banked
  9765  00264C  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  9766  00264E  0E80               	movlw	128
  9767  002650  0100               	movlb	0	; () banked
  9768  002652  2176               	addwfc	(??___ftge+2)& (0+255),w,b
  9769  002654  0100               	movlb	0	; () banked
  9770  002656  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  9771  002658  D000               	goto	l5178
  9772  00265A                     l5178:
  9773                           
  9774                           ; BSR set to: 0
  9775  00265A  0100               	movlb	0	; () banked
  9776  00265C  AF73               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9777  00265E  D01E               	goto	l5182
  9778                           
  9779                           ; BSR set to: 0
  9780  002660  C071  F074         	movff	___ftge@ff2,??___ftge
  9781  002664  C072  F075         	movff	___ftge@ff2+1,??___ftge+1
  9782  002668  C073  F076         	movff	___ftge@ff2+2,??___ftge+2
  9783  00266C  0100               	movlb	0	; () banked
  9784  00266E  1F74               	comf	??___ftge& (0+255),f,b
  9785  002670  1F75               	comf	(??___ftge+1)& (0+255),f,b
  9786  002672  1F76               	comf	(??___ftge+2)& (0+255),f,b
  9787  002674  2B74               	incf	??___ftge& (0+255),f,b
  9788  002676  0E00               	movlw	0
  9789  002678  2375               	addwfc	(??___ftge+1)& (0+255),f,b
  9790  00267A  2376               	addwfc	(??___ftge+2)& (0+255),f,b
  9791  00267C  0E00               	movlw	0
  9792  00267E  0100               	movlb	0	; () banked
  9793  002680  2574               	addwf	??___ftge& (0+255),w,b
  9794  002682  0100               	movlb	0	; () banked
  9795  002684  6F71               	movwf	___ftge@ff2& (0+255),b
  9796  002686  0E00               	movlw	0
  9797  002688  0100               	movlb	0	; () banked
  9798  00268A  2175               	addwfc	(??___ftge+1)& (0+255),w,b
  9799  00268C  0100               	movlb	0	; () banked
  9800  00268E  6F72               	movwf	(___ftge@ff2+1)& (0+255),b
  9801  002690  0E80               	movlw	128
  9802  002692  0100               	movlb	0	; () banked
  9803  002694  2176               	addwfc	(??___ftge+2)& (0+255),w,b
  9804  002696  0100               	movlb	0	; () banked
  9805  002698  6F73               	movwf	(___ftge@ff2+2)& (0+255),b
  9806  00269A  D000               	goto	l5182
  9807  00269C                     l5182:
  9808                           
  9809                           ; BSR set to: 0
  9810  00269C  0E00               	movlw	0
  9811  00269E  0100               	movlb	0	; () banked
  9812  0026A0  1B6E               	xorwf	___ftge@ff1& (0+255),f,b
  9813  0026A2  0E00               	movlw	0
  9814  0026A4  0100               	movlb	0	; () banked
  9815  0026A6  1B6F               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9816  0026A8  0E80               	movlw	128
  9817  0026AA  0100               	movlb	0	; () banked
  9818  0026AC  1B70               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9819                           
  9820                           ; BSR set to: 0
  9821  0026AE  0E00               	movlw	0
  9822  0026B0  0100               	movlb	0	; () banked
  9823  0026B2  1B71               	xorwf	___ftge@ff2& (0+255),f,b
  9824  0026B4  0E00               	movlw	0
  9825  0026B6  0100               	movlb	0	; () banked
  9826  0026B8  1B72               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9827  0026BA  0E80               	movlw	128
  9828  0026BC  0100               	movlb	0	; () banked
  9829  0026BE  1B73               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9830  0026C0  0100               	movlb	0	; () banked
  9831  0026C2  5171               	movf	___ftge@ff2& (0+255),w,b
  9832  0026C4  0100               	movlb	0	; () banked
  9833  0026C6  5D6E               	subwf	___ftge@ff1& (0+255),w,b
  9834  0026C8  0100               	movlb	0	; () banked
  9835  0026CA  5172               	movf	(___ftge@ff2+1)& (0+255),w,b
  9836  0026CC  0100               	movlb	0	; () banked
  9837  0026CE  596F               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9838  0026D0  0100               	movlb	0	; () banked
  9839  0026D2  5173               	movf	(___ftge@ff2+2)& (0+255),w,b
  9840  0026D4  0100               	movlb	0	; () banked
  9841  0026D6  5970               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9842  0026D8  B0D8               	btfsc	status,0,c
  9843  0026DA  D002               	goto	l5188
  9844                           
  9845                           ; BSR set to: 0
  9846  0026DC  90D8               	bcf	status,0,c
  9847  0026DE  D002               	goto	l1293
  9848  0026E0                     l5188:
  9849                           
  9850                           ; BSR set to: 0
  9851  0026E0  80D8               	bsf	status,0,c
  9852                           
  9853                           ; BSR set to: 0
  9854  0026E2  D000               	goto	l1293
  9855  0026E4                     l1293:
  9856                           
  9857                           ; BSR set to: 0
  9858  0026E4  0012               	return		;funcret
  9859  0026E6                     __end_of___ftge:
  9860                           	opt stack 0
  9861                           prodh	equ	0xFF4
  9862                           prodl	equ	0xFF3
  9863                           intcon	equ	0xFF2
  9864                           intcon2	equ	0xFF1
  9865                           intcon3	equ	0xFF0
  9866                           postinc0	equ	0xFEE
  9867                           wreg	equ	0xFE8
  9868                           indf2	equ	0xFDF
  9869                           postinc2	equ	0xFDE
  9870                           postdec2	equ	0xFDD
  9871                           fsr2h	equ	0xFDA
  9872                           fsr2l	equ	0xFD9
  9873                           status	equ	0xFD8
  9874                           
  9875 ;; *************** function ___altoft *****************
  9876 ;; Defined at:
  9877 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  c               4   55[BANK0 ] long 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  sign            1   64[BANK0 ] unsigned char 
  9882 ;;  exp             1   63[BANK0 ] unsigned char 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  3   55[BANK0 ] float 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9892 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;Total ram usage:       10 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    8
  9899 ;; This function calls:
  9900 ;;		___ftpack
  9901 ;; This function is called by:
  9902 ;;		_floor
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text82
  9907  002AFA                     __ptext82:
  9908                           	opt stack 0
  9909  002AFA                     ___altoft:
  9910                           	opt stack 18
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;incstack = 0
  9914  002AFA  0E00               	movlw	0
  9915  002AFC  0100               	movlb	0	; () banked
  9916  002AFE  6FA0               	movwf	___altoft@sign& (0+255),b
  9917  002B00  0E8E               	movlw	142
  9918  002B02  0100               	movlb	0	; () banked
  9919  002B04  6F9F               	movwf	___altoft@exp& (0+255),b
  9920                           
  9921                           ; BSR set to: 0
  9922  002B06  0100               	movlb	0	; () banked
  9923  002B08  AF9A               	btfss	(___altoft@c+3)& (0+255),7,b
  9924  002B0A  D016               	goto	l5014
  9925                           
  9926                           ; BSR set to: 0
  9927  002B0C  0100               	movlb	0	; () banked
  9928  002B0E  1F9A               	comf	(___altoft@c+3)& (0+255),f,b
  9929  002B10  1F99               	comf	(___altoft@c+2)& (0+255),f,b
  9930  002B12  1F98               	comf	(___altoft@c+1)& (0+255),f,b
  9931  002B14  6D97               	negf	___altoft@c& (0+255),b
  9932  002B16  0E00               	movlw	0
  9933  002B18  2398               	addwfc	(___altoft@c+1)& (0+255),f,b
  9934  002B1A  2399               	addwfc	(___altoft@c+2)& (0+255),f,b
  9935  002B1C  239A               	addwfc	(___altoft@c+3)& (0+255),f,b
  9936                           
  9937                           ; BSR set to: 0
  9938  002B1E  0E01               	movlw	1
  9939  002B20  0100               	movlb	0	; () banked
  9940  002B22  6FA0               	movwf	___altoft@sign& (0+255),b
  9941                           
  9942                           ; BSR set to: 0
  9943  002B24  D009               	goto	l5014
  9944  002B26                     l5012:
  9945                           
  9946                           ; BSR set to: 0
  9947  002B26  0100               	movlb	0	; () banked
  9948  002B28  90D8               	bcf	status,0,c
  9949  002B2A  339A               	rrcf	(___altoft@c+3)& (0+255),f,b
  9950  002B2C  3399               	rrcf	(___altoft@c+2)& (0+255),f,b
  9951  002B2E  3398               	rrcf	(___altoft@c+1)& (0+255),f,b
  9952  002B30  3397               	rrcf	___altoft@c& (0+255),f,b
  9953  002B32  0100               	movlb	0	; () banked
  9954  002B34  2B9F               	incf	___altoft@exp& (0+255),f,b
  9955  002B36  D000               	goto	l5014
  9956  002B38                     l5014:
  9957                           
  9958                           ; BSR set to: 0
  9959  002B38  0E00               	movlw	0
  9960  002B3A  0100               	movlb	0	; () banked
  9961  002B3C  1597               	andwf	___altoft@c& (0+255),w,b
  9962  002B3E  0100               	movlb	0	; () banked
  9963  002B40  6F9B               	movwf	??___altoft& (0+255),b
  9964  002B42  0E00               	movlw	0
  9965  002B44  0100               	movlb	0	; () banked
  9966  002B46  1598               	andwf	(___altoft@c+1)& (0+255),w,b
  9967  002B48  0100               	movlb	0	; () banked
  9968  002B4A  6F9C               	movwf	(??___altoft+1)& (0+255),b
  9969  002B4C  0E00               	movlw	0
  9970  002B4E  0100               	movlb	0	; () banked
  9971  002B50  1599               	andwf	(___altoft@c+2)& (0+255),w,b
  9972  002B52  0100               	movlb	0	; () banked
  9973  002B54  6F9D               	movwf	(??___altoft+2)& (0+255),b
  9974  002B56  0EFF               	movlw	255
  9975  002B58  0100               	movlb	0	; () banked
  9976  002B5A  159A               	andwf	(___altoft@c+3)& (0+255),w,b
  9977  002B5C  0100               	movlb	0	; () banked
  9978  002B5E  6F9E               	movwf	(??___altoft+3)& (0+255),b
  9979  002B60  0100               	movlb	0	; () banked
  9980  002B62  519B               	movf	??___altoft& (0+255),w,b
  9981  002B64  0100               	movlb	0	; () banked
  9982  002B66  119C               	iorwf	(??___altoft+1)& (0+255),w,b
  9983  002B68  0100               	movlb	0	; () banked
  9984  002B6A  119D               	iorwf	(??___altoft+2)& (0+255),w,b
  9985  002B6C  0100               	movlb	0	; () banked
  9986  002B6E  119E               	iorwf	(??___altoft+3)& (0+255),w,b
  9987  002B70  A4D8               	btfss	status,2,c
  9988  002B72  D7D9               	goto	l5012
  9989                           
  9990                           ; BSR set to: 0
  9991                           
  9992                           ; BSR set to: 0
  9993  002B74  C097  F06E         	movff	___altoft@c,___ftpack@arg
  9994  002B78  C098  F06F         	movff	___altoft@c+1,___ftpack@arg+1
  9995  002B7C  C099  F070         	movff	___altoft@c+2,___ftpack@arg+2
  9996  002B80  C09F  F071         	movff	___altoft@exp,___ftpack@exp
  9997  002B84  C0A0  F072         	movff	___altoft@sign,___ftpack@sign
  9998  002B88  EC2E  F00F         	call	___ftpack	;wreg free
  9999  002B8C  C06E  F097         	movff	?___ftpack,?___altoft
 10000  002B90  C06F  F098         	movff	?___ftpack+1,?___altoft+1
 10001  002B94  C070  F099         	movff	?___ftpack+2,?___altoft+2
 10002  002B98  D000               	goto	l987
 10003  002B9A                     l987:
 10004  002B9A  0012               	return		;funcret
 10005  002B9C                     __end_of___altoft:
 10006                           	opt stack 0
 10007                           prodh	equ	0xFF4
 10008                           prodl	equ	0xFF3
 10009                           intcon	equ	0xFF2
 10010                           intcon2	equ	0xFF1
 10011                           intcon3	equ	0xFF0
 10012                           postinc0	equ	0xFEE
 10013                           wreg	equ	0xFE8
 10014                           indf2	equ	0xFDF
 10015                           postinc2	equ	0xFDE
 10016                           postdec2	equ	0xFDD
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021 ;; *************** function _eval_poly *****************
 10022 ;; Defined at:
 10023 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  x               3   52[BANK0 ] float 
 10026 ;;  d               2   55[BANK0 ] PTR const 
 10027 ;;		 -> log@coeff(27), exp@coeff(30), 
 10028 ;;  n               2   57[BANK0 ] int 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  res             3   61[BANK0 ] int 
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  3   52[BANK0 ] int 
 10033 ;; Registers used:
 10034 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10040 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;Total ram usage:       12 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; Hardware stack levels required when called:    9
 10047 ;; This function calls:
 10048 ;;		___ftadd
 10049 ;;		___ftmul
 10050 ;;		___wmul
 10051 ;; This function is called by:
 10052 ;;		_exp
 10053 ;;		_log
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text83
 10058  00218E                     __ptext83:
 10059                           	opt stack 0
 10060  00218E                     _eval_poly:
 10061                           	opt stack 18
 10062                           
 10063                           ;incstack = 0
 10064  00218E  C099  F06E         	movff	eval_poly@n,___wmul@multiplier
 10065  002192  C09A  F06F         	movff	eval_poly@n+1,___wmul@multiplier+1
 10066  002196  0E00               	movlw	0
 10067  002198  0100               	movlb	0	; () banked
 10068  00219A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10069  00219C  0E03               	movlw	3
 10070  00219E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10071  0021A0  ECB5  F019         	call	___wmul	;wreg free
 10072  0021A4  C097  F09B         	movff	eval_poly@d,??_eval_poly
 10073  0021A8  C098  F09C         	movff	eval_poly@d+1,??_eval_poly+1
 10074  0021AC  0100               	movlb	0	; () banked
 10075  0021AE  516E               	movf	?___wmul& (0+255),w,b
 10076  0021B0  0100               	movlb	0	; () banked
 10077  0021B2  279B               	addwf	??_eval_poly& (0+255),f,b
 10078  0021B4  0100               	movlb	0	; () banked
 10079  0021B6  516F               	movf	(?___wmul+1)& (0+255),w,b
 10080  0021B8  0100               	movlb	0	; () banked
 10081  0021BA  239C               	addwfc	(??_eval_poly+1)& (0+255),f,b
 10082  0021BC  C09B  FFF6         	movff	??_eval_poly,tblptrl
 10083  0021C0  C09C  FFF7         	movff	??_eval_poly+1,tblptrh
 10084  0021C4                     	if	0	;tblptru may be non-zero
 10085  0021C4                     	endif
 10086  0021C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10087  0021C4  0E00               	movlw	low (__mediumconst shr (0+16))
 10088  0021C6  6EF8               	movwf	tblptru,c
 10089  0021C8                     	endif
 10090  0021C8  0009               	tblrd		*+
 10091  0021CA  CFF5 F09D          	movff	tablat,eval_poly@res
 10092  0021CE  0009               	tblrd		*+
 10093  0021D0  CFF5 F09E          	movff	tablat,eval_poly@res+1
 10094  0021D4  000A               	tblrd		*-
 10095  0021D6  CFF5 F09F          	movff	tablat,eval_poly@res+2
 10096  0021DA  D047               	goto	l5498
 10097  0021DC                     l5496:
 10098                           
 10099                           ; BSR set to: 0
 10100  0021DC  C09D  F07C         	movff	eval_poly@res,___ftmul@f2
 10101  0021E0  C09E  F07D         	movff	eval_poly@res+1,___ftmul@f2+1
 10102  0021E4  C09F  F07E         	movff	eval_poly@res+2,___ftmul@f2+2
 10103  0021E8  C094  F079         	movff	eval_poly@x,___ftmul@f1
 10104  0021EC  C095  F07A         	movff	eval_poly@x+1,___ftmul@f1+1
 10105  0021F0  C096  F07B         	movff	eval_poly@x+2,___ftmul@f1+2
 10106  0021F4  ECA6  F00C         	call	___ftmul	;wreg free
 10107  0021F8  C079  F088         	movff	?___ftmul,___ftadd@f1
 10108  0021FC  C07A  F089         	movff	?___ftmul+1,___ftadd@f1+1
 10109  002200  C07B  F08A         	movff	?___ftmul+2,___ftadd@f1+2
 10110  002204  0E00               	movlw	0
 10111  002206  0100               	movlb	0	; () banked
 10112  002208  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10113  00220A  0E03               	movlw	3
 10114  00220C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 10115  00220E  0100               	movlb	0	; () banked
 10116  002210  0799               	decf	eval_poly@n& (0+255),f,b
 10117  002212  A0D8               	btfss	status,0,c
 10118  002214  079A               	decf	(eval_poly@n+1)& (0+255),f,b
 10119  002216  C099  F06E         	movff	eval_poly@n,___wmul@multiplier
 10120  00221A  C09A  F06F         	movff	eval_poly@n+1,___wmul@multiplier+1
 10121  00221E  ECB5  F019         	call	___wmul	;wreg free
 10122  002222  C097  F09B         	movff	eval_poly@d,??_eval_poly
 10123  002226  C098  F09C         	movff	eval_poly@d+1,??_eval_poly+1
 10124  00222A  0100               	movlb	0	; () banked
 10125  00222C  516E               	movf	?___wmul& (0+255),w,b
 10126  00222E  0100               	movlb	0	; () banked
 10127  002230  279B               	addwf	??_eval_poly& (0+255),f,b
 10128  002232  0100               	movlb	0	; () banked
 10129  002234  516F               	movf	(?___wmul+1)& (0+255),w,b
 10130  002236  0100               	movlb	0	; () banked
 10131  002238  239C               	addwfc	(??_eval_poly+1)& (0+255),f,b
 10132  00223A  C09B  FFF6         	movff	??_eval_poly,tblptrl
 10133  00223E  C09C  FFF7         	movff	??_eval_poly+1,tblptrh
 10134  002242                     	if	0	;tblptru may be non-zero
 10135  002242                     	endif
 10136  002242                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10137  002242  0E00               	movlw	low (__mediumconst shr (0+16))
 10138  002244  6EF8               	movwf	tblptru,c
 10139  002246                     	endif
 10140  002246  0009               	tblrd		*+
 10141  002248  CFF5 F08B          	movff	tablat,___ftadd@f2
 10142  00224C  0009               	tblrd		*+
 10143  00224E  CFF5 F08C          	movff	tablat,___ftadd@f2+1
 10144  002252  000A               	tblrd		*-
 10145  002254  CFF5 F08D          	movff	tablat,___ftadd@f2+2
 10146  002258  EC86  F009         	call	___ftadd	;wreg free
 10147  00225C  C088  F09D         	movff	?___ftadd,eval_poly@res
 10148  002260  C089  F09E         	movff	?___ftadd+1,eval_poly@res+1
 10149  002264  C08A  F09F         	movff	?___ftadd+2,eval_poly@res+2
 10150  002268  D000               	goto	l5498
 10151  00226A                     l5498:
 10152  00226A  0100               	movlb	0	; () banked
 10153  00226C  5199               	movf	eval_poly@n& (0+255),w,b
 10154  00226E  0100               	movlb	0	; () banked
 10155  002270  119A               	iorwf	(eval_poly@n+1)& (0+255),w,b
 10156  002272  A4D8               	btfss	status,2,c
 10157  002274  D7B3               	goto	l5496
 10158                           
 10159                           ; BSR set to: 0
 10160  002276  C09D  F094         	movff	eval_poly@res,?_eval_poly
 10161  00227A  C09E  F095         	movff	eval_poly@res+1,?_eval_poly+1
 10162  00227E  C09F  F096         	movff	eval_poly@res+2,?_eval_poly+2
 10163                           
 10164                           ; BSR set to: 0
 10165  002282  0012               	return		;funcret
 10166  002284                     __end_of_eval_poly:
 10167                           	opt stack 0
 10168                           tblptru	equ	0xFF8
 10169                           tblptrh	equ	0xFF7
 10170                           tblptrl	equ	0xFF6
 10171                           tablat	equ	0xFF5
 10172                           prodh	equ	0xFF4
 10173                           prodl	equ	0xFF3
 10174                           intcon	equ	0xFF2
 10175                           intcon2	equ	0xFF1
 10176                           intcon3	equ	0xFF0
 10177                           postinc0	equ	0xFEE
 10178                           wreg	equ	0xFE8
 10179                           indf2	equ	0xFDF
 10180                           postinc2	equ	0xFDE
 10181                           postdec2	equ	0xFDD
 10182                           fsr2h	equ	0xFDA
 10183                           fsr2l	equ	0xFD9
 10184                           status	equ	0xFD8
 10185                           
 10186 ;; *************** function ___wmul *****************
 10187 ;; Defined at:
 10188 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;  multiplier      2   14[BANK0 ] unsigned int 
 10191 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  product         2   18[BANK0 ] unsigned int 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  2   14[BANK0 ] unsigned int 
 10196 ;; Registers used:
 10197 ;;		wreg, status,2, status,0, prodl, prodh
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10203 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;Total ram usage:        6 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    7
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_main
 10214 ;;		_eval_poly
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text84
 10219  00336A                     __ptext84:
 10220                           	opt stack 0
 10221  00336A                     ___wmul:
 10222                           	opt stack 23
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;incstack = 0
 10226  00336A  0100               	movlb	0	; () banked
 10227  00336C  516E               	movf	___wmul@multiplier& (0+255),w,b
 10228  00336E  0100               	movlb	0	; () banked
 10229  003370  0370               	mulwf	___wmul@multiplicand& (0+255),b
 10230  003372  CFF3 F072          	movff	prodl,___wmul@product
 10231  003376  CFF4 F073          	movff	prodh,___wmul@product+1
 10232  00337A  0100               	movlb	0	; () banked
 10233  00337C  516E               	movf	___wmul@multiplier& (0+255),w,b
 10234  00337E  0100               	movlb	0	; () banked
 10235  003380  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10236  003382  50F3               	movf	prodl,w,c
 10237  003384  0100               	movlb	0	; () banked
 10238  003386  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 10239  003388  0100               	movlb	0	; () banked
 10240  00338A  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10241  00338C  0100               	movlb	0	; () banked
 10242  00338E  0370               	mulwf	___wmul@multiplicand& (0+255),b
 10243  003390  50F3               	movf	prodl,w,c
 10244  003392  0100               	movlb	0	; () banked
 10245  003394  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 10246                           
 10247                           ; BSR set to: 0
 10248  003396  C072  F06E         	movff	___wmul@product,?___wmul
 10249  00339A  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 10250  00339E  D000               	goto	l890
 10251  0033A0                     l890:
 10252                           
 10253                           ; BSR set to: 0
 10254  0033A0  0012               	return		;funcret
 10255  0033A2                     __end_of___wmul:
 10256                           	opt stack 0
 10257                           tblptru	equ	0xFF8
 10258                           tblptrh	equ	0xFF7
 10259                           tblptrl	equ	0xFF6
 10260                           tablat	equ	0xFF5
 10261                           prodh	equ	0xFF4
 10262                           prodl	equ	0xFF3
 10263                           intcon	equ	0xFF2
 10264                           intcon2	equ	0xFF1
 10265                           intcon3	equ	0xFF0
 10266                           postinc0	equ	0xFEE
 10267                           wreg	equ	0xFE8
 10268                           indf2	equ	0xFDF
 10269                           postinc2	equ	0xFDE
 10270                           postdec2	equ	0xFDD
 10271                           fsr2h	equ	0xFDA
 10272                           fsr2l	equ	0xFD9
 10273                           status	equ	0xFD8
 10274                           
 10275 ;; *************** function ___ftmul *****************
 10276 ;; Defined at:
 10277 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  f1              3   25[BANK0 ] float 
 10280 ;;  f2              3   28[BANK0 ] float 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  f3_as_produc    3   35[BANK0 ] unsigned um
 10283 ;;  sign            1   39[BANK0 ] unsigned char 
 10284 ;;  cntr            1   38[BANK0 ] unsigned char 
 10285 ;;  exp             1   34[BANK0 ] unsigned char 
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  3   25[BANK0 ] float 
 10288 ;; Registers used:
 10289 ;;		wreg, status,2, status,0, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10295 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10298 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10299 ;;Total ram usage:       15 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:    8
 10302 ;; This function calls:
 10303 ;;		___ftpack
 10304 ;; This function is called by:
 10305 ;;		_CalculateSensorSums
 10306 ;;		_pow
 10307 ;;		_exp
 10308 ;;		_log
 10309 ;;		_eval_poly
 10310 ;;		_ConvertDistanceCM
 10311 ;;		_ConvertDistanceIN
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           	psect	text85
 10316  00194C                     __ptext85:
 10317                           	opt stack 0
 10318  00194C                     ___ftmul:
 10319                           	opt stack 18
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;incstack = 0
 10323  00194C  C07B  F07F         	movff	___ftmul@f1+2,??___ftmul
 10324  001950  0100               	movlb	0	; () banked
 10325  001952  6B80               	clrf	(??___ftmul+1)& (0+255),b
 10326  001954  6B81               	clrf	(??___ftmul+2)& (0+255),b
 10327  001956  0100               	movlb	0	; () banked
 10328  001958  357A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10329  00195A  0100               	movlb	0	; () banked
 10330  00195C  377F               	rlcf	??___ftmul& (0+255),f,b
 10331  00195E  E301               	bnc	u4381
 10332  001960  8180               	bsf	(??___ftmul+1)& (0+255),0,b
 10333  001962                     u4381:
 10334  001962  0100               	movlb	0	; () banked
 10335  001964  517F               	movf	??___ftmul& (0+255),w,b
 10336  001966  0100               	movlb	0	; () banked
 10337  001968  6F82               	movwf	___ftmul@exp& (0+255),b
 10338  00196A  0100               	movlb	0	; () banked
 10339  00196C  5182               	movf	___ftmul@exp& (0+255),w,b
 10340  00196E  A4D8               	btfss	status,2,c
 10341  001970  D002               	goto	l5096
 10342  001972  D014               	goto	l5098
 10343                           
 10344                           ; BSR set to: 0
 10345                           
 10346                           ; BSR set to: 0
 10347  001974  D098               	goto	l1299
 10348  001976                     l5096:
 10349                           
 10350                           ; BSR set to: 0
 10351  001976  C07E  F07F         	movff	___ftmul@f2+2,??___ftmul
 10352  00197A  0100               	movlb	0	; () banked
 10353  00197C  6B80               	clrf	(??___ftmul+1)& (0+255),b
 10354  00197E  6B81               	clrf	(??___ftmul+2)& (0+255),b
 10355  001980  0100               	movlb	0	; () banked
 10356  001982  357D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10357  001984  0100               	movlb	0	; () banked
 10358  001986  377F               	rlcf	??___ftmul& (0+255),f,b
 10359  001988  E301               	bnc	u4401
 10360  00198A  8180               	bsf	(??___ftmul+1)& (0+255),0,b
 10361  00198C                     u4401:
 10362  00198C  0100               	movlb	0	; () banked
 10363  00198E  517F               	movf	??___ftmul& (0+255),w,b
 10364  001990  0100               	movlb	0	; () banked
 10365  001992  6F87               	movwf	___ftmul@sign& (0+255),b
 10366  001994  0100               	movlb	0	; () banked
 10367  001996  5187               	movf	___ftmul@sign& (0+255),w,b
 10368  001998  A4D8               	btfss	status,2,c
 10369  00199A  D00A               	goto	l5102
 10370  00199C                     l5098:
 10371                           
 10372                           ; BSR set to: 0
 10373  00199C  0E00               	movlw	0
 10374  00199E  0100               	movlb	0	; () banked
 10375  0019A0  6F79               	movwf	?___ftmul& (0+255),b
 10376  0019A2  0E00               	movlw	0
 10377  0019A4  0100               	movlb	0	; () banked
 10378  0019A6  6F7A               	movwf	(?___ftmul+1)& (0+255),b
 10379  0019A8  0E00               	movlw	0
 10380  0019AA  0100               	movlb	0	; () banked
 10381  0019AC  6F7B               	movwf	(?___ftmul+2)& (0+255),b
 10382                           
 10383                           ; BSR set to: 0
 10384  0019AE  D07B               	goto	l1299
 10385  0019B0                     l5102:
 10386                           
 10387                           ; BSR set to: 0
 10388  0019B0  0100               	movlb	0	; () banked
 10389  0019B2  5187               	movf	___ftmul@sign& (0+255),w,b
 10390  0019B4  0F7B               	addlw	123
 10391  0019B6  0100               	movlb	0	; () banked
 10392  0019B8  2782               	addwf	___ftmul@exp& (0+255),f,b
 10393                           
 10394                           ; BSR set to: 0
 10395  0019BA  C07B  F087         	movff	___ftmul@f1+2,___ftmul@sign
 10396  0019BE  0100               	movlb	0	; () banked
 10397  0019C0  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
 10398  0019C2  0100               	movlb	0	; () banked
 10399  0019C4  1B87               	xorwf	___ftmul@sign& (0+255),f,b
 10400  0019C6  0E80               	movlw	128
 10401  0019C8  0100               	movlb	0	; () banked
 10402  0019CA  1787               	andwf	___ftmul@sign& (0+255),f,b
 10403                           
 10404                           ; BSR set to: 0
 10405  0019CC  0100               	movlb	0	; () banked
 10406  0019CE  8F7A               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10407                           
 10408                           ; BSR set to: 0
 10409  0019D0  0100               	movlb	0	; () banked
 10410  0019D2  8F7D               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10411                           
 10412                           ; BSR set to: 0
 10413  0019D4  0EFF               	movlw	255
 10414  0019D6  0100               	movlb	0	; () banked
 10415  0019D8  177C               	andwf	___ftmul@f2& (0+255),f,b
 10416  0019DA  0EFF               	movlw	255
 10417  0019DC  0100               	movlb	0	; () banked
 10418  0019DE  177D               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10419  0019E0  0E00               	movlw	0
 10420  0019E2  0100               	movlb	0	; () banked
 10421  0019E4  177E               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10422                           
 10423                           ; BSR set to: 0
 10424  0019E6  0E00               	movlw	0
 10425  0019E8  0100               	movlb	0	; () banked
 10426  0019EA  6F83               	movwf	___ftmul@f3_as_product& (0+255),b
 10427  0019EC  0E00               	movlw	0
 10428  0019EE  0100               	movlb	0	; () banked
 10429  0019F0  6F84               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10430  0019F2  0E00               	movlw	0
 10431  0019F4  0100               	movlb	0	; () banked
 10432  0019F6  6F85               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10433                           
 10434                           ; BSR set to: 0
 10435  0019F8  0E07               	movlw	7
 10436  0019FA  0100               	movlb	0	; () banked
 10437  0019FC  6F86               	movwf	___ftmul@cntr& (0+255),b
 10438  0019FE  D000               	goto	l5116
 10439  001A00                     l5116:
 10440                           
 10441                           ; BSR set to: 0
 10442  001A00  0100               	movlb	0	; () banked
 10443  001A02  A179               	btfss	___ftmul@f1& (0+255),0,b
 10444  001A04  D00D               	goto	l5120
 10445                           
 10446                           ; BSR set to: 0
 10447  001A06  0100               	movlb	0	; () banked
 10448  001A08  517C               	movf	___ftmul@f2& (0+255),w,b
 10449  001A0A  0100               	movlb	0	; () banked
 10450  001A0C  2783               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10451  001A0E  0100               	movlb	0	; () banked
 10452  001A10  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
 10453  001A12  0100               	movlb	0	; () banked
 10454  001A14  2384               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10455  001A16  0100               	movlb	0	; () banked
 10456  001A18  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
 10457  001A1A  0100               	movlb	0	; () banked
 10458  001A1C  2385               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10459  001A1E  D000               	goto	l5120
 10460  001A20                     l5120:
 10461                           
 10462                           ; BSR set to: 0
 10463  001A20  0100               	movlb	0	; () banked
 10464  001A22  90D8               	bcf	status,0,c
 10465  001A24  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10466  001A26  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10467  001A28  3379               	rrcf	___ftmul@f1& (0+255),f,b
 10468  001A2A  0100               	movlb	0	; () banked
 10469  001A2C  90D8               	bcf	status,0,c
 10470  001A2E  377C               	rlcf	___ftmul@f2& (0+255),f,b
 10471  001A30  377D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10472  001A32  377E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10473                           
 10474                           ; BSR set to: 0
 10475  001A34  0100               	movlb	0	; () banked
 10476  001A36  2F86               	decfsz	___ftmul@cntr& (0+255),f,b
 10477  001A38  D7E3               	goto	l5116
 10478  001A3A  D000               	goto	l5124
 10479  001A3C                     l5124:
 10480                           
 10481                           ; BSR set to: 0
 10482  001A3C  0E09               	movlw	9
 10483  001A3E  0100               	movlb	0	; () banked
 10484  001A40  6F86               	movwf	___ftmul@cntr& (0+255),b
 10485  001A42  D000               	goto	l5126
 10486  001A44                     l5126:
 10487                           
 10488                           ; BSR set to: 0
 10489  001A44  0100               	movlb	0	; () banked
 10490  001A46  A179               	btfss	___ftmul@f1& (0+255),0,b
 10491  001A48  D00D               	goto	l5130
 10492                           
 10493                           ; BSR set to: 0
 10494  001A4A  0100               	movlb	0	; () banked
 10495  001A4C  517C               	movf	___ftmul@f2& (0+255),w,b
 10496  001A4E  0100               	movlb	0	; () banked
 10497  001A50  2783               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10498  001A52  0100               	movlb	0	; () banked
 10499  001A54  517D               	movf	(___ftmul@f2+1)& (0+255),w,b
 10500  001A56  0100               	movlb	0	; () banked
 10501  001A58  2384               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10502  001A5A  0100               	movlb	0	; () banked
 10503  001A5C  517E               	movf	(___ftmul@f2+2)& (0+255),w,b
 10504  001A5E  0100               	movlb	0	; () banked
 10505  001A60  2385               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10506  001A62  D000               	goto	l5130
 10507  001A64                     l5130:
 10508                           
 10509                           ; BSR set to: 0
 10510  001A64  0100               	movlb	0	; () banked
 10511  001A66  90D8               	bcf	status,0,c
 10512  001A68  337B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10513  001A6A  337A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10514  001A6C  3379               	rrcf	___ftmul@f1& (0+255),f,b
 10515  001A6E  0100               	movlb	0	; () banked
 10516  001A70  90D8               	bcf	status,0,c
 10517  001A72  3385               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10518  001A74  3384               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10519  001A76  3383               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10520                           
 10521                           ; BSR set to: 0
 10522  001A78  0100               	movlb	0	; () banked
 10523  001A7A  2F86               	decfsz	___ftmul@cntr& (0+255),f,b
 10524  001A7C  D7E3               	goto	l5126
 10525  001A7E  D000               	goto	l5134
 10526  001A80                     l5134:
 10527                           
 10528                           ; BSR set to: 0
 10529  001A80  C083  F06E         	movff	___ftmul@f3_as_product,___ftpack@arg
 10530  001A84  C084  F06F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10531  001A88  C085  F070         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10532  001A8C  C082  F071         	movff	___ftmul@exp,___ftpack@exp
 10533  001A90  C087  F072         	movff	___ftmul@sign,___ftpack@sign
 10534  001A94  EC2E  F00F         	call	___ftpack	;wreg free
 10535  001A98  C06E  F079         	movff	?___ftpack,?___ftmul
 10536  001A9C  C06F  F07A         	movff	?___ftpack+1,?___ftmul+1
 10537  001AA0  C070  F07B         	movff	?___ftpack+2,?___ftmul+2
 10538  001AA4  D000               	goto	l1299
 10539  001AA6                     l1299:
 10540  001AA6  0012               	return		;funcret
 10541  001AA8                     __end_of___ftmul:
 10542                           	opt stack 0
 10543                           tblptru	equ	0xFF8
 10544                           tblptrh	equ	0xFF7
 10545                           tblptrl	equ	0xFF6
 10546                           tablat	equ	0xFF5
 10547                           prodh	equ	0xFF4
 10548                           prodl	equ	0xFF3
 10549                           intcon	equ	0xFF2
 10550                           intcon2	equ	0xFF1
 10551                           intcon3	equ	0xFF0
 10552                           postinc0	equ	0xFEE
 10553                           wreg	equ	0xFE8
 10554                           indf2	equ	0xFDF
 10555                           postinc2	equ	0xFDE
 10556                           postdec2	equ	0xFDD
 10557                           fsr2h	equ	0xFDA
 10558                           fsr2l	equ	0xFD9
 10559                           status	equ	0xFD8
 10560                           
 10561 ;; *************** function ___ftsub *****************
 10562 ;; Defined at:
 10563 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  f1              3   52[BANK0 ] float 
 10566 ;;  f2              3   55[BANK0 ] float 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  3   52[BANK0 ] float 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0, cstack
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10578 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10582 ;;Total ram usage:        6 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:    9
 10585 ;; This function calls:
 10586 ;;		___ftadd
 10587 ;; This function is called by:
 10588 ;;		_exp
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           	psect	text86
 10593  003096                     __ptext86:
 10594                           	opt stack 0
 10595  003096                     ___ftsub:
 10596                           	opt stack 18
 10597                           
 10598                           ;incstack = 0
 10599  003096  0100               	movlb	0	; () banked
 10600  003098  5197               	movf	___ftsub@f2& (0+255),w,b
 10601  00309A  0100               	movlb	0	; () banked
 10602  00309C  1198               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 10603  00309E  0100               	movlb	0	; () banked
 10604  0030A0  1199               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 10605  0030A2  B4D8               	btfsc	status,2,c
 10606  0030A4  D00A               	goto	l5450
 10607                           
 10608                           ; BSR set to: 0
 10609  0030A6  0E00               	movlw	0
 10610  0030A8  0100               	movlb	0	; () banked
 10611  0030AA  1B97               	xorwf	___ftsub@f2& (0+255),f,b
 10612  0030AC  0E00               	movlw	0
 10613  0030AE  0100               	movlb	0	; () banked
 10614  0030B0  1B98               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10615  0030B2  0E80               	movlw	128
 10616  0030B4  0100               	movlb	0	; () banked
 10617  0030B6  1B99               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10618  0030B8  D000               	goto	l5450
 10619  0030BA                     l5450:
 10620                           
 10621                           ; BSR set to: 0
 10622  0030BA  C094  F088         	movff	___ftsub@f1,___ftadd@f1
 10623  0030BE  C095  F089         	movff	___ftsub@f1+1,___ftadd@f1+1
 10624  0030C2  C096  F08A         	movff	___ftsub@f1+2,___ftadd@f1+2
 10625  0030C6  C097  F08B         	movff	___ftsub@f2,___ftadd@f2
 10626  0030CA  C098  F08C         	movff	___ftsub@f2+1,___ftadd@f2+1
 10627  0030CE  C099  F08D         	movff	___ftsub@f2+2,___ftadd@f2+2
 10628  0030D2  EC86  F009         	call	___ftadd	;wreg free
 10629  0030D6  C088  F094         	movff	?___ftadd,?___ftsub
 10630  0030DA  C089  F095         	movff	?___ftadd+1,?___ftsub+1
 10631  0030DE  C08A  F096         	movff	?___ftadd+2,?___ftsub+2
 10632  0030E2  D000               	goto	l1316
 10633  0030E4                     l1316:
 10634  0030E4  0012               	return		;funcret
 10635  0030E6                     __end_of___ftsub:
 10636                           	opt stack 0
 10637                           tblptru	equ	0xFF8
 10638                           tblptrh	equ	0xFF7
 10639                           tblptrl	equ	0xFF6
 10640                           tablat	equ	0xFF5
 10641                           prodh	equ	0xFF4
 10642                           prodl	equ	0xFF3
 10643                           intcon	equ	0xFF2
 10644                           intcon2	equ	0xFF1
 10645                           intcon3	equ	0xFF0
 10646                           postinc0	equ	0xFEE
 10647                           wreg	equ	0xFE8
 10648                           indf2	equ	0xFDF
 10649                           postinc2	equ	0xFDE
 10650                           postdec2	equ	0xFDD
 10651                           fsr2h	equ	0xFDA
 10652                           fsr2l	equ	0xFD9
 10653                           status	equ	0xFD8
 10654                           
 10655 ;; *************** function ___ftadd *****************
 10656 ;; Defined at:
 10657 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;  f1              3   40[BANK0 ] float 
 10660 ;;  f2              3   43[BANK0 ] float 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  exp1            1   51[BANK0 ] unsigned char 
 10663 ;;  exp2            1   50[BANK0 ] unsigned char 
 10664 ;;  sign            1   49[BANK0 ] unsigned char 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  3   40[BANK0 ] float 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10674 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;Total ram usage:       12 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    8
 10681 ;; This function calls:
 10682 ;;		___ftpack
 10683 ;; This function is called by:
 10684 ;;		___ftsub
 10685 ;;		_floor
 10686 ;;		_log
 10687 ;;		_eval_poly
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text87
 10692  00130C                     __ptext87:
 10693                           	opt stack 0
 10694  00130C                     ___ftadd:
 10695                           	opt stack 18
 10696                           
 10697                           ;incstack = 0
 10698  00130C  C08A  F08E         	movff	___ftadd@f1+2,??___ftadd
 10699  001310  0100               	movlb	0	; () banked
 10700  001312  6B8F               	clrf	(??___ftadd+1)& (0+255),b
 10701  001314  6B90               	clrf	(??___ftadd+2)& (0+255),b
 10702  001316  0100               	movlb	0	; () banked
 10703  001318  3589               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10704  00131A  0100               	movlb	0	; () banked
 10705  00131C  378E               	rlcf	??___ftadd& (0+255),f,b
 10706  00131E  E301               	bnc	u4171
 10707  001320  818F               	bsf	(??___ftadd+1)& (0+255),0,b
 10708  001322                     u4171:
 10709  001322  0100               	movlb	0	; () banked
 10710  001324  518E               	movf	??___ftadd& (0+255),w,b
 10711  001326  0100               	movlb	0	; () banked
 10712  001328  6F93               	movwf	___ftadd@exp1& (0+255),b
 10713  00132A  C08D  F08E         	movff	___ftadd@f2+2,??___ftadd
 10714  00132E  0100               	movlb	0	; () banked
 10715  001330  6B8F               	clrf	(??___ftadd+1)& (0+255),b
 10716  001332  6B90               	clrf	(??___ftadd+2)& (0+255),b
 10717  001334  0100               	movlb	0	; () banked
 10718  001336  358C               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10719  001338  0100               	movlb	0	; () banked
 10720  00133A  378E               	rlcf	??___ftadd& (0+255),f,b
 10721  00133C  E301               	bnc	u4181
 10722  00133E  818F               	bsf	(??___ftadd+1)& (0+255),0,b
 10723  001340                     u4181:
 10724  001340  0100               	movlb	0	; () banked
 10725  001342  518E               	movf	??___ftadd& (0+255),w,b
 10726  001344  0100               	movlb	0	; () banked
 10727  001346  6F92               	movwf	___ftadd@exp2& (0+255),b
 10728                           
 10729                           ; BSR set to: 0
 10730  001348  0100               	movlb	0	; () banked
 10731  00134A  5193               	movf	___ftadd@exp1& (0+255),w,b
 10732  00134C  0100               	movlb	0	; () banked
 10733  00134E  B4D8               	btfsc	status,2,c
 10734  001350  D011               	goto	l1252
 10735                           
 10736                           ; BSR set to: 0
 10737  001352  0100               	movlb	0	; () banked
 10738  001354  5192               	movf	___ftadd@exp2& (0+255),w,b
 10739  001356  0100               	movlb	0	; () banked
 10740  001358  5D93               	subwf	___ftadd@exp1& (0+255),w,b
 10741  00135A  B0D8               	btfsc	status,0,c
 10742  00135C  D012               	goto	l5028
 10743                           
 10744                           ; BSR set to: 0
 10745  00135E  0100               	movlb	0	; () banked
 10746  001360  5193               	movf	___ftadd@exp1& (0+255),w,b
 10747  001362  0800               	sublw	0
 10748  001364  0100               	movlb	0	; () banked
 10749  001366  2592               	addwf	___ftadd@exp2& (0+255),w,b
 10750  001368  0100               	movlb	0	; () banked
 10751  00136A  6F8E               	movwf	??___ftadd& (0+255),b
 10752  00136C  0E18               	movlw	24
 10753  00136E  0100               	movlb	0	; () banked
 10754  001370  658E               	cpfsgt	??___ftadd& (0+255),b
 10755  001372  D007               	goto	l5028
 10756  001374                     l1252:
 10757                           
 10758                           ; BSR set to: 0
 10759  001374  C08B  F088         	movff	___ftadd@f2,?___ftadd
 10760  001378  C08C  F089         	movff	___ftadd@f2+1,?___ftadd+1
 10761  00137C  C08D  F08A         	movff	___ftadd@f2+2,?___ftadd+2
 10762  001380  D103               	goto	l1253
 10763  001382                     l5028:
 10764                           
 10765                           ; BSR set to: 0
 10766  001382  0100               	movlb	0	; () banked
 10767  001384  5192               	movf	___ftadd@exp2& (0+255),w,b
 10768  001386  0100               	movlb	0	; () banked
 10769  001388  B4D8               	btfsc	status,2,c
 10770  00138A  D011               	goto	l1256
 10771                           
 10772                           ; BSR set to: 0
 10773  00138C  0100               	movlb	0	; () banked
 10774  00138E  5193               	movf	___ftadd@exp1& (0+255),w,b
 10775  001390  0100               	movlb	0	; () banked
 10776  001392  5D92               	subwf	___ftadd@exp2& (0+255),w,b
 10777  001394  B0D8               	btfsc	status,0,c
 10778  001396  D012               	goto	l5034
 10779                           
 10780                           ; BSR set to: 0
 10781  001398  0100               	movlb	0	; () banked
 10782  00139A  5192               	movf	___ftadd@exp2& (0+255),w,b
 10783  00139C  0800               	sublw	0
 10784  00139E  0100               	movlb	0	; () banked
 10785  0013A0  2593               	addwf	___ftadd@exp1& (0+255),w,b
 10786  0013A2  0100               	movlb	0	; () banked
 10787  0013A4  6F8E               	movwf	??___ftadd& (0+255),b
 10788  0013A6  0E18               	movlw	24
 10789  0013A8  0100               	movlb	0	; () banked
 10790  0013AA  658E               	cpfsgt	??___ftadd& (0+255),b
 10791  0013AC  D007               	goto	l5034
 10792  0013AE                     l1256:
 10793                           
 10794                           ; BSR set to: 0
 10795  0013AE  C088  F088         	movff	___ftadd@f1,?___ftadd
 10796  0013B2  C089  F089         	movff	___ftadd@f1+1,?___ftadd+1
 10797  0013B6  C08A  F08A         	movff	___ftadd@f1+2,?___ftadd+2
 10798  0013BA  D0E6               	goto	l1253
 10799  0013BC                     l5034:
 10800                           
 10801                           ; BSR set to: 0
 10802  0013BC  0E06               	movlw	6
 10803  0013BE  0100               	movlb	0	; () banked
 10804  0013C0  6F91               	movwf	___ftadd@sign& (0+255),b
 10805                           
 10806                           ; BSR set to: 0
 10807  0013C2  0100               	movlb	0	; () banked
 10808  0013C4  AF8A               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10809  0013C6  D003               	goto	l5040
 10810                           
 10811                           ; BSR set to: 0
 10812  0013C8  0100               	movlb	0	; () banked
 10813  0013CA  8F91               	bsf	___ftadd@sign& (0+255),7,b
 10814  0013CC  D000               	goto	l5040
 10815  0013CE                     l5040:
 10816                           
 10817                           ; BSR set to: 0
 10818  0013CE  0100               	movlb	0	; () banked
 10819  0013D0  AF8D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10820  0013D2  D002               	goto	l1258
 10821                           
 10822                           ; BSR set to: 0
 10823  0013D4  0100               	movlb	0	; () banked
 10824  0013D6  8D91               	bsf	___ftadd@sign& (0+255),6,b
 10825  0013D8                     l1258:
 10826                           
 10827                           ; BSR set to: 0
 10828  0013D8  0100               	movlb	0	; () banked
 10829  0013DA  8F89               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10830                           
 10831                           ; BSR set to: 0
 10832  0013DC  0EFF               	movlw	255
 10833  0013DE  0100               	movlb	0	; () banked
 10834  0013E0  1788               	andwf	___ftadd@f1& (0+255),f,b
 10835  0013E2  0EFF               	movlw	255
 10836  0013E4  0100               	movlb	0	; () banked
 10837  0013E6  1789               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10838  0013E8  0E00               	movlw	0
 10839  0013EA  0100               	movlb	0	; () banked
 10840  0013EC  178A               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10841  0013EE  0100               	movlb	0	; () banked
 10842  0013F0  8F8C               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10843                           
 10844                           ; BSR set to: 0
 10845  0013F2  0EFF               	movlw	255
 10846  0013F4  0100               	movlb	0	; () banked
 10847  0013F6  178B               	andwf	___ftadd@f2& (0+255),f,b
 10848  0013F8  0EFF               	movlw	255
 10849  0013FA  0100               	movlb	0	; () banked
 10850  0013FC  178C               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10851  0013FE  0E00               	movlw	0
 10852  001400  0100               	movlb	0	; () banked
 10853  001402  178D               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10854                           
 10855                           ; BSR set to: 0
 10856  001404  0100               	movlb	0	; () banked
 10857  001406  5192               	movf	___ftadd@exp2& (0+255),w,b
 10858  001408  0100               	movlb	0	; () banked
 10859  00140A  5D93               	subwf	___ftadd@exp1& (0+255),w,b
 10860  00140C  B0D8               	btfsc	status,0,c
 10861  00140E  D028               	goto	l5060
 10862  001410                     l5050:
 10863                           
 10864                           ; BSR set to: 0
 10865  001410  0100               	movlb	0	; () banked
 10866  001412  90D8               	bcf	status,0,c
 10867  001414  378B               	rlcf	___ftadd@f2& (0+255),f,b
 10868  001416  378C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10869  001418  378D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10870  00141A  0100               	movlb	0	; () banked
 10871  00141C  0792               	decf	___ftadd@exp2& (0+255),f,b
 10872                           
 10873                           ; BSR set to: 0
 10874  00141E  0100               	movlb	0	; () banked
 10875  001420  5193               	movf	___ftadd@exp1& (0+255),w,b
 10876  001422  0100               	movlb	0	; () banked
 10877  001424  1992               	xorwf	___ftadd@exp2& (0+255),w,b
 10878  001426  B4D8               	btfsc	status,2,c
 10879  001428  D013               	goto	l5058
 10880                           
 10881                           ; BSR set to: 0
 10882  00142A  0100               	movlb	0	; () banked
 10883  00142C  0791               	decf	___ftadd@sign& (0+255),f,b
 10884  00142E  C091  F08E         	movff	___ftadd@sign,??___ftadd
 10885  001432  0E07               	movlw	7
 10886  001434  0100               	movlb	0	; () banked
 10887  001436  178E               	andwf	??___ftadd& (0+255),f,b
 10888  001438  B4D8               	btfsc	status,2,c
 10889  00143A  D00A               	goto	l5058
 10890  00143C  D7E9               	goto	l5050
 10891                           
 10892                           ; BSR set to: 0
 10893                           
 10894                           ; BSR set to: 0
 10895  00143E  D008               	goto	l5058
 10896  001440                     l5056:
 10897                           
 10898                           ; BSR set to: 0
 10899  001440  0100               	movlb	0	; () banked
 10900  001442  90D8               	bcf	status,0,c
 10901  001444  338A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10902  001446  3389               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10903  001448  3388               	rrcf	___ftadd@f1& (0+255),f,b
 10904  00144A  0100               	movlb	0	; () banked
 10905  00144C  2B93               	incf	___ftadd@exp1& (0+255),f,b
 10906  00144E  D000               	goto	l5058
 10907  001450                     l5058:
 10908                           
 10909                           ; BSR set to: 0
 10910  001450  0100               	movlb	0	; () banked
 10911  001452  5192               	movf	___ftadd@exp2& (0+255),w,b
 10912  001454  0100               	movlb	0	; () banked
 10913  001456  1993               	xorwf	___ftadd@exp1& (0+255),w,b
 10914  001458  B4D8               	btfsc	status,2,c
 10915  00145A  D030               	goto	l1267
 10916  00145C  D7F1               	goto	l5056
 10917                           
 10918                           ; BSR set to: 0
 10919  00145E  D02E               	goto	l1267
 10920  001460                     l5060:
 10921                           
 10922                           ; BSR set to: 0
 10923  001460  0100               	movlb	0	; () banked
 10924  001462  5193               	movf	___ftadd@exp1& (0+255),w,b
 10925  001464  0100               	movlb	0	; () banked
 10926  001466  5D92               	subwf	___ftadd@exp2& (0+255),w,b
 10927  001468  B0D8               	btfsc	status,0,c
 10928  00146A  D028               	goto	l1267
 10929  00146C                     l5062:
 10930                           
 10931                           ; BSR set to: 0
 10932  00146C  0100               	movlb	0	; () banked
 10933  00146E  90D8               	bcf	status,0,c
 10934  001470  3788               	rlcf	___ftadd@f1& (0+255),f,b
 10935  001472  3789               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10936  001474  378A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10937  001476  0100               	movlb	0	; () banked
 10938  001478  0793               	decf	___ftadd@exp1& (0+255),f,b
 10939                           
 10940                           ; BSR set to: 0
 10941  00147A  0100               	movlb	0	; () banked
 10942  00147C  5193               	movf	___ftadd@exp1& (0+255),w,b
 10943  00147E  0100               	movlb	0	; () banked
 10944  001480  1992               	xorwf	___ftadd@exp2& (0+255),w,b
 10945  001482  B4D8               	btfsc	status,2,c
 10946  001484  D013               	goto	l5070
 10947                           
 10948                           ; BSR set to: 0
 10949  001486  0100               	movlb	0	; () banked
 10950  001488  0791               	decf	___ftadd@sign& (0+255),f,b
 10951  00148A  C091  F08E         	movff	___ftadd@sign,??___ftadd
 10952  00148E  0E07               	movlw	7
 10953  001490  0100               	movlb	0	; () banked
 10954  001492  178E               	andwf	??___ftadd& (0+255),f,b
 10955  001494  B4D8               	btfsc	status,2,c
 10956  001496  D00A               	goto	l5070
 10957  001498  D7E9               	goto	l5062
 10958                           
 10959                           ; BSR set to: 0
 10960                           
 10961                           ; BSR set to: 0
 10962  00149A  D008               	goto	l5070
 10963  00149C                     l5068:
 10964                           
 10965                           ; BSR set to: 0
 10966  00149C  0100               	movlb	0	; () banked
 10967  00149E  90D8               	bcf	status,0,c
 10968  0014A0  338D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10969  0014A2  338C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10970  0014A4  338B               	rrcf	___ftadd@f2& (0+255),f,b
 10971  0014A6  0100               	movlb	0	; () banked
 10972  0014A8  2B92               	incf	___ftadd@exp2& (0+255),f,b
 10973  0014AA  D000               	goto	l5070
 10974  0014AC                     l5070:
 10975                           
 10976                           ; BSR set to: 0
 10977  0014AC  0100               	movlb	0	; () banked
 10978  0014AE  5192               	movf	___ftadd@exp2& (0+255),w,b
 10979  0014B0  0100               	movlb	0	; () banked
 10980  0014B2  1993               	xorwf	___ftadd@exp1& (0+255),w,b
 10981  0014B4  B4D8               	btfsc	status,2,c
 10982  0014B6  D002               	goto	l1267
 10983  0014B8  D7F1               	goto	l5068
 10984                           
 10985                           ; BSR set to: 0
 10986  0014BA  D000               	goto	l1267
 10987  0014BC                     l1267:
 10988                           
 10989                           ; BSR set to: 0
 10990  0014BC  0100               	movlb	0	; () banked
 10991  0014BE  AF91               	btfss	___ftadd@sign& (0+255),7,b
 10992  0014C0  D012               	goto	l1276
 10993                           
 10994                           ; BSR set to: 0
 10995  0014C2  0EFF               	movlw	255
 10996  0014C4  0100               	movlb	0	; () banked
 10997  0014C6  1B88               	xorwf	___ftadd@f1& (0+255),f,b
 10998  0014C8  0EFF               	movlw	255
 10999  0014CA  0100               	movlb	0	; () banked
 11000  0014CC  1B89               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 11001  0014CE  0EFF               	movlw	255
 11002  0014D0  0100               	movlb	0	; () banked
 11003  0014D2  1B8A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 11004  0014D4  0E01               	movlw	1
 11005  0014D6  0100               	movlb	0	; () banked
 11006  0014D8  2788               	addwf	___ftadd@f1& (0+255),f,b
 11007  0014DA  0E00               	movlw	0
 11008  0014DC  0100               	movlb	0	; () banked
 11009  0014DE  2389               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 11010  0014E0  0E00               	movlw	0
 11011  0014E2  0100               	movlb	0	; () banked
 11012  0014E4  238A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 11013  0014E6                     l1276:
 11014                           
 11015                           ; BSR set to: 0
 11016  0014E6  0100               	movlb	0	; () banked
 11017  0014E8  AD91               	btfss	___ftadd@sign& (0+255),6,b
 11018  0014EA  D013               	goto	l5076
 11019                           
 11020                           ; BSR set to: 0
 11021  0014EC  0EFF               	movlw	255
 11022  0014EE  0100               	movlb	0	; () banked
 11023  0014F0  1B8B               	xorwf	___ftadd@f2& (0+255),f,b
 11024  0014F2  0EFF               	movlw	255
 11025  0014F4  0100               	movlb	0	; () banked
 11026  0014F6  1B8C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11027  0014F8  0EFF               	movlw	255
 11028  0014FA  0100               	movlb	0	; () banked
 11029  0014FC  1B8D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11030  0014FE  0E01               	movlw	1
 11031  001500  0100               	movlb	0	; () banked
 11032  001502  278B               	addwf	___ftadd@f2& (0+255),f,b
 11033  001504  0E00               	movlw	0
 11034  001506  0100               	movlb	0	; () banked
 11035  001508  238C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11036  00150A  0E00               	movlw	0
 11037  00150C  0100               	movlb	0	; () banked
 11038  00150E  238D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11039  001510  D000               	goto	l5076
 11040  001512                     l5076:
 11041                           
 11042                           ; BSR set to: 0
 11043  001512  0E00               	movlw	0
 11044  001514  0100               	movlb	0	; () banked
 11045  001516  6F91               	movwf	___ftadd@sign& (0+255),b
 11046                           
 11047                           ; BSR set to: 0
 11048  001518  0100               	movlb	0	; () banked
 11049  00151A  5188               	movf	___ftadd@f1& (0+255),w,b
 11050  00151C  0100               	movlb	0	; () banked
 11051  00151E  278B               	addwf	___ftadd@f2& (0+255),f,b
 11052  001520  0100               	movlb	0	; () banked
 11053  001522  5189               	movf	(___ftadd@f1+1)& (0+255),w,b
 11054  001524  0100               	movlb	0	; () banked
 11055  001526  238C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11056  001528  0100               	movlb	0	; () banked
 11057  00152A  518A               	movf	(___ftadd@f1+2)& (0+255),w,b
 11058  00152C  0100               	movlb	0	; () banked
 11059  00152E  238D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11060                           
 11061                           ; BSR set to: 0
 11062  001530  0100               	movlb	0	; () banked
 11063  001532  AF8D               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11064  001534  D016               	goto	l5086
 11065                           
 11066                           ; BSR set to: 0
 11067  001536  0EFF               	movlw	255
 11068  001538  0100               	movlb	0	; () banked
 11069  00153A  1B8B               	xorwf	___ftadd@f2& (0+255),f,b
 11070  00153C  0EFF               	movlw	255
 11071  00153E  0100               	movlb	0	; () banked
 11072  001540  1B8C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11073  001542  0EFF               	movlw	255
 11074  001544  0100               	movlb	0	; () banked
 11075  001546  1B8D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11076  001548  0E01               	movlw	1
 11077  00154A  0100               	movlb	0	; () banked
 11078  00154C  278B               	addwf	___ftadd@f2& (0+255),f,b
 11079  00154E  0E00               	movlw	0
 11080  001550  0100               	movlb	0	; () banked
 11081  001552  238C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11082  001554  0E00               	movlw	0
 11083  001556  0100               	movlb	0	; () banked
 11084  001558  238D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11085                           
 11086                           ; BSR set to: 0
 11087  00155A  0E01               	movlw	1
 11088  00155C  0100               	movlb	0	; () banked
 11089  00155E  6F91               	movwf	___ftadd@sign& (0+255),b
 11090  001560  D000               	goto	l5086
 11091  001562                     l5086:
 11092                           
 11093                           ; BSR set to: 0
 11094  001562  C08B  F06E         	movff	___ftadd@f2,___ftpack@arg
 11095  001566  C08C  F06F         	movff	___ftadd@f2+1,___ftpack@arg+1
 11096  00156A  C08D  F070         	movff	___ftadd@f2+2,___ftpack@arg+2
 11097  00156E  C093  F071         	movff	___ftadd@exp1,___ftpack@exp
 11098  001572  C091  F072         	movff	___ftadd@sign,___ftpack@sign
 11099  001576  EC2E  F00F         	call	___ftpack	;wreg free
 11100  00157A  C06E  F088         	movff	?___ftpack,?___ftadd
 11101  00157E  C06F  F089         	movff	?___ftpack+1,?___ftadd+1
 11102  001582  C070  F08A         	movff	?___ftpack+2,?___ftadd+2
 11103  001586  D000               	goto	l1253
 11104  001588                     l1253:
 11105  001588  0012               	return		;funcret
 11106  00158A                     __end_of___ftadd:
 11107                           	opt stack 0
 11108                           tblptru	equ	0xFF8
 11109                           tblptrh	equ	0xFF7
 11110                           tblptrl	equ	0xFF6
 11111                           tablat	equ	0xFF5
 11112                           prodh	equ	0xFF4
 11113                           prodl	equ	0xFF3
 11114                           intcon	equ	0xFF2
 11115                           intcon2	equ	0xFF1
 11116                           intcon3	equ	0xFF0
 11117                           postinc0	equ	0xFEE
 11118                           wreg	equ	0xFE8
 11119                           indf2	equ	0xFDF
 11120                           postinc2	equ	0xFDE
 11121                           postdec2	equ	0xFDD
 11122                           fsr2h	equ	0xFDA
 11123                           fsr2l	equ	0xFD9
 11124                           status	equ	0xFD8
 11125                           
 11126 ;; *************** function ___ftneg *****************
 11127 ;; Defined at:
 11128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  f1              3   14[BANK0 ] float 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  3   14[BANK0 ] float 
 11135 ;; Registers used:
 11136 ;;		wreg, status,2, status,0
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11142 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;Total ram usage:        3 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    7
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_pow
 11153 ;;		_exp
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text88
 11158  00346E                     __ptext88:
 11159                           	opt stack 0
 11160  00346E                     ___ftneg:
 11161                           	opt stack 20
 11162                           
 11163                           ;incstack = 0
 11164  00346E  0100               	movlb	0	; () banked
 11165  003470  516E               	movf	___ftneg@f1& (0+255),w,b
 11166  003472  0100               	movlb	0	; () banked
 11167  003474  116F               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 11168  003476  0100               	movlb	0	; () banked
 11169  003478  1170               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 11170  00347A  B4D8               	btfsc	status,2,c
 11171  00347C  D009               	goto	l1309
 11172                           
 11173                           ; BSR set to: 0
 11174  00347E  0E00               	movlw	0
 11175  003480  0100               	movlb	0	; () banked
 11176  003482  1B6E               	xorwf	___ftneg@f1& (0+255),f,b
 11177  003484  0E00               	movlw	0
 11178  003486  0100               	movlb	0	; () banked
 11179  003488  1B6F               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 11180  00348A  0E80               	movlw	128
 11181  00348C  0100               	movlb	0	; () banked
 11182  00348E  1B70               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 11183  003490                     l1309:
 11184                           
 11185                           ; BSR set to: 0
 11186  003490  C06E  F06E         	movff	___ftneg@f1,?___ftneg
 11187  003494  C06F  F06F         	movff	___ftneg@f1+1,?___ftneg+1
 11188  003498  C070  F070         	movff	___ftneg@f1+2,?___ftneg+2
 11189                           
 11190                           ; BSR set to: 0
 11191  00349C  0012               	return		;funcret
 11192  00349E                     __end_of___ftneg:
 11193                           	opt stack 0
 11194                           tblptru	equ	0xFF8
 11195                           tblptrh	equ	0xFF7
 11196                           tblptrl	equ	0xFF6
 11197                           tablat	equ	0xFF5
 11198                           prodh	equ	0xFF4
 11199                           prodl	equ	0xFF3
 11200                           intcon	equ	0xFF2
 11201                           intcon2	equ	0xFF1
 11202                           intcon3	equ	0xFF0
 11203                           postinc0	equ	0xFEE
 11204                           wreg	equ	0xFE8
 11205                           indf2	equ	0xFDF
 11206                           postinc2	equ	0xFDE
 11207                           postdec2	equ	0xFDD
 11208                           fsr2h	equ	0xFDA
 11209                           fsr2l	equ	0xFD9
 11210                           status	equ	0xFD8
 11211                           
 11212 ;; *************** function ___ftdiv *****************
 11213 ;; Defined at:
 11214 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;  f1              3   22[BANK0 ] float 
 11217 ;;  f2              3   25[BANK0 ] float 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  f3              3   32[BANK0 ] float 
 11220 ;;  sign            1   36[BANK0 ] unsigned char 
 11221 ;;  exp             1   35[BANK0 ] unsigned char 
 11222 ;;  cntr            1   31[BANK0 ] unsigned char 
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  3   22[BANK0 ] float 
 11225 ;; Registers used:
 11226 ;;		wreg, status,2, status,0, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11232 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11236 ;;Total ram usage:       15 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    8
 11239 ;; This function calls:
 11240 ;;		___ftpack
 11241 ;; This function is called by:
 11242 ;;		_exp
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text89
 11247  001AA8                     __ptext89:
 11248                           	opt stack 0
 11249  001AA8                     ___ftdiv:
 11250                           	opt stack 19
 11251                           
 11252                           ; BSR set to: 0
 11253                           ;incstack = 0
 11254  001AA8  C078  F07C         	movff	___ftdiv@f1+2,??___ftdiv
 11255  001AAC  0100               	movlb	0	; () banked
 11256  001AAE  6B7D               	clrf	(??___ftdiv+1)& (0+255),b
 11257  001AB0  6B7E               	clrf	(??___ftdiv+2)& (0+255),b
 11258  001AB2  0100               	movlb	0	; () banked
 11259  001AB4  3577               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 11260  001AB6  0100               	movlb	0	; () banked
 11261  001AB8  377C               	rlcf	??___ftdiv& (0+255),f,b
 11262  001ABA  E301               	bnc	u4851
 11263  001ABC  817D               	bsf	(??___ftdiv+1)& (0+255),0,b
 11264  001ABE                     u4851:
 11265  001ABE  0100               	movlb	0	; () banked
 11266  001AC0  517C               	movf	??___ftdiv& (0+255),w,b
 11267  001AC2  0100               	movlb	0	; () banked
 11268  001AC4  6F83               	movwf	___ftdiv@exp& (0+255),b
 11269  001AC6  0100               	movlb	0	; () banked
 11270  001AC8  5183               	movf	___ftdiv@exp& (0+255),w,b
 11271  001ACA  A4D8               	btfss	status,2,c
 11272  001ACC  D002               	goto	l5406
 11273  001ACE  D014               	goto	l5408
 11274                           
 11275                           ; BSR set to: 0
 11276                           
 11277                           ; BSR set to: 0
 11278  001AD0  D08B               	goto	l1284
 11279  001AD2                     l5406:
 11280                           
 11281                           ; BSR set to: 0
 11282  001AD2  C07B  F07C         	movff	___ftdiv@f2+2,??___ftdiv
 11283  001AD6  0100               	movlb	0	; () banked
 11284  001AD8  6B7D               	clrf	(??___ftdiv+1)& (0+255),b
 11285  001ADA  6B7E               	clrf	(??___ftdiv+2)& (0+255),b
 11286  001ADC  0100               	movlb	0	; () banked
 11287  001ADE  357A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 11288  001AE0  0100               	movlb	0	; () banked
 11289  001AE2  377C               	rlcf	??___ftdiv& (0+255),f,b
 11290  001AE4  E301               	bnc	u4871
 11291  001AE6  817D               	bsf	(??___ftdiv+1)& (0+255),0,b
 11292  001AE8                     u4871:
 11293  001AE8  0100               	movlb	0	; () banked
 11294  001AEA  517C               	movf	??___ftdiv& (0+255),w,b
 11295  001AEC  0100               	movlb	0	; () banked
 11296  001AEE  6F84               	movwf	___ftdiv@sign& (0+255),b
 11297  001AF0  0100               	movlb	0	; () banked
 11298  001AF2  5184               	movf	___ftdiv@sign& (0+255),w,b
 11299  001AF4  A4D8               	btfss	status,2,c
 11300  001AF6  D00A               	goto	l5412
 11301  001AF8                     l5408:
 11302                           
 11303                           ; BSR set to: 0
 11304  001AF8  0E00               	movlw	0
 11305  001AFA  0100               	movlb	0	; () banked
 11306  001AFC  6F76               	movwf	?___ftdiv& (0+255),b
 11307  001AFE  0E00               	movlw	0
 11308  001B00  0100               	movlb	0	; () banked
 11309  001B02  6F77               	movwf	(?___ftdiv+1)& (0+255),b
 11310  001B04  0E00               	movlw	0
 11311  001B06  0100               	movlb	0	; () banked
 11312  001B08  6F78               	movwf	(?___ftdiv+2)& (0+255),b
 11313                           
 11314                           ; BSR set to: 0
 11315  001B0A  D06E               	goto	l1284
 11316  001B0C                     l5412:
 11317                           
 11318                           ; BSR set to: 0
 11319  001B0C  0E00               	movlw	0
 11320  001B0E  0100               	movlb	0	; () banked
 11321  001B10  6F80               	movwf	___ftdiv@f3& (0+255),b
 11322  001B12  0E00               	movlw	0
 11323  001B14  0100               	movlb	0	; () banked
 11324  001B16  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
 11325  001B18  0E00               	movlw	0
 11326  001B1A  0100               	movlb	0	; () banked
 11327  001B1C  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
 11328                           
 11329                           ; BSR set to: 0
 11330  001B1E  0100               	movlb	0	; () banked
 11331  001B20  5184               	movf	___ftdiv@sign& (0+255),w,b
 11332  001B22  0F89               	addlw	137
 11333  001B24  0100               	movlb	0	; () banked
 11334  001B26  5F83               	subwf	___ftdiv@exp& (0+255),f,b
 11335                           
 11336                           ; BSR set to: 0
 11337  001B28  C078  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
 11338                           
 11339                           ; BSR set to: 0
 11340  001B2C  0100               	movlb	0	; () banked
 11341  001B2E  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
 11342  001B30  0100               	movlb	0	; () banked
 11343  001B32  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
 11344                           
 11345                           ; BSR set to: 0
 11346  001B34  0E80               	movlw	128
 11347  001B36  0100               	movlb	0	; () banked
 11348  001B38  1784               	andwf	___ftdiv@sign& (0+255),f,b
 11349                           
 11350                           ; BSR set to: 0
 11351  001B3A  0100               	movlb	0	; () banked
 11352  001B3C  8F77               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 11353                           
 11354                           ; BSR set to: 0
 11355  001B3E  0EFF               	movlw	255
 11356  001B40  0100               	movlb	0	; () banked
 11357  001B42  1776               	andwf	___ftdiv@f1& (0+255),f,b
 11358  001B44  0EFF               	movlw	255
 11359  001B46  0100               	movlb	0	; () banked
 11360  001B48  1777               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 11361  001B4A  0E00               	movlw	0
 11362  001B4C  0100               	movlb	0	; () banked
 11363  001B4E  1778               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 11364                           
 11365                           ; BSR set to: 0
 11366  001B50  0100               	movlb	0	; () banked
 11367  001B52  8F7A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 11368                           
 11369                           ; BSR set to: 0
 11370  001B54  0EFF               	movlw	255
 11371  001B56  0100               	movlb	0	; () banked
 11372  001B58  1779               	andwf	___ftdiv@f2& (0+255),f,b
 11373  001B5A  0EFF               	movlw	255
 11374  001B5C  0100               	movlb	0	; () banked
 11375  001B5E  177A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 11376  001B60  0E00               	movlw	0
 11377  001B62  0100               	movlb	0	; () banked
 11378  001B64  177B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 11379                           
 11380                           ; BSR set to: 0
 11381  001B66  0E18               	movlw	24
 11382  001B68  0100               	movlb	0	; () banked
 11383  001B6A  6F7F               	movwf	___ftdiv@cntr& (0+255),b
 11384  001B6C  D000               	goto	l5432
 11385  001B6E                     l5432:
 11386                           
 11387                           ; BSR set to: 0
 11388  001B6E  0100               	movlb	0	; () banked
 11389  001B70  90D8               	bcf	status,0,c
 11390  001B72  3780               	rlcf	___ftdiv@f3& (0+255),f,b
 11391  001B74  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 11392  001B76  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 11393                           
 11394                           ; BSR set to: 0
 11395  001B78  0100               	movlb	0	; () banked
 11396  001B7A  5179               	movf	___ftdiv@f2& (0+255),w,b
 11397  001B7C  0100               	movlb	0	; () banked
 11398  001B7E  5D76               	subwf	___ftdiv@f1& (0+255),w,b
 11399  001B80  0100               	movlb	0	; () banked
 11400  001B82  517A               	movf	(___ftdiv@f2+1)& (0+255),w,b
 11401  001B84  0100               	movlb	0	; () banked
 11402  001B86  5977               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 11403  001B88  0100               	movlb	0	; () banked
 11404  001B8A  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
 11405  001B8C  0100               	movlb	0	; () banked
 11406  001B8E  5978               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 11407  001B90  A0D8               	btfss	status,0,c
 11408  001B92  D00E               	goto	l1287
 11409                           
 11410                           ; BSR set to: 0
 11411  001B94  0100               	movlb	0	; () banked
 11412  001B96  5179               	movf	___ftdiv@f2& (0+255),w,b
 11413  001B98  0100               	movlb	0	; () banked
 11414  001B9A  5F76               	subwf	___ftdiv@f1& (0+255),f,b
 11415  001B9C  0100               	movlb	0	; () banked
 11416  001B9E  517A               	movf	(___ftdiv@f2+1)& (0+255),w,b
 11417  001BA0  0100               	movlb	0	; () banked
 11418  001BA2  5B77               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 11419  001BA4  0100               	movlb	0	; () banked
 11420  001BA6  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
 11421  001BA8  0100               	movlb	0	; () banked
 11422  001BAA  5B78               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 11423                           
 11424                           ; BSR set to: 0
 11425  001BAC  0100               	movlb	0	; () banked
 11426  001BAE  8180               	bsf	___ftdiv@f3& (0+255),0,b
 11427  001BB0                     l1287:
 11428                           
 11429                           ; BSR set to: 0
 11430  001BB0  0100               	movlb	0	; () banked
 11431  001BB2  90D8               	bcf	status,0,c
 11432  001BB4  3776               	rlcf	___ftdiv@f1& (0+255),f,b
 11433  001BB6  3777               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 11434  001BB8  3778               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 11435                           
 11436                           ; BSR set to: 0
 11437  001BBA  0100               	movlb	0	; () banked
 11438  001BBC  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
 11439  001BBE  D7D7               	goto	l5432
 11440  001BC0  D000               	goto	l5442
 11441  001BC2                     l5442:
 11442                           
 11443                           ; BSR set to: 0
 11444  001BC2  C080  F06E         	movff	___ftdiv@f3,___ftpack@arg
 11445  001BC6  C081  F06F         	movff	___ftdiv@f3+1,___ftpack@arg+1
 11446  001BCA  C082  F070         	movff	___ftdiv@f3+2,___ftpack@arg+2
 11447  001BCE  C083  F071         	movff	___ftdiv@exp,___ftpack@exp
 11448  001BD2  C084  F072         	movff	___ftdiv@sign,___ftpack@sign
 11449  001BD6  EC2E  F00F         	call	___ftpack	;wreg free
 11450  001BDA  C06E  F076         	movff	?___ftpack,?___ftdiv
 11451  001BDE  C06F  F077         	movff	?___ftpack+1,?___ftdiv+1
 11452  001BE2  C070  F078         	movff	?___ftpack+2,?___ftdiv+2
 11453  001BE6  D000               	goto	l1284
 11454  001BE8                     l1284:
 11455  001BE8  0012               	return		;funcret
 11456  001BEA                     __end_of___ftdiv:
 11457                           	opt stack 0
 11458                           tblptru	equ	0xFF8
 11459                           tblptrh	equ	0xFF7
 11460                           tblptrl	equ	0xFF6
 11461                           tablat	equ	0xFF5
 11462                           prodh	equ	0xFF4
 11463                           prodl	equ	0xFF3
 11464                           intcon	equ	0xFF2
 11465                           intcon2	equ	0xFF1
 11466                           intcon3	equ	0xFF0
 11467                           postinc0	equ	0xFEE
 11468                           wreg	equ	0xFE8
 11469                           indf2	equ	0xFDF
 11470                           postinc2	equ	0xFDE
 11471                           postdec2	equ	0xFDD
 11472                           fsr2h	equ	0xFDA
 11473                           fsr2l	equ	0xFD9
 11474                           status	equ	0xFD8
 11475                           
 11476 ;; *************** function ___awtoft *****************
 11477 ;; Defined at:
 11478 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;  c               2   22[BANK0 ] int 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;  sign            1   29[COMRAM] unsigned char 
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  3   22[BANK0 ] float 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;Total ram usage:        4 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:    8
 11499 ;; This function calls:
 11500 ;;		___ftpack
 11501 ;; This function is called by:
 11502 ;;		_exp
 11503 ;;		_log
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text90
 11508  0031B6                     __ptext90:
 11509                           	opt stack 0
 11510  0031B6                     ___awtoft:
 11511                           	opt stack 19
 11512                           
 11513                           ;incstack = 0
 11514  0031B6  0E00               	movlw	0
 11515  0031B8  6E42               	movwf	___awtoft@sign,c
 11516  0031BA  0100               	movlb	0	; () banked
 11517  0031BC  AF77               	btfss	(___awtoft@c+1)& (0+255),7,b
 11518  0031BE  D008               	goto	l5462
 11519                           
 11520                           ; BSR set to: 0
 11521  0031C0  0100               	movlb	0	; () banked
 11522  0031C2  6D76               	negf	___awtoft@c& (0+255),b
 11523  0031C4  1F77               	comf	(___awtoft@c+1)& (0+255),f,b
 11524  0031C6  B0D8               	btfsc	status,0,c
 11525  0031C8  2B77               	incf	(___awtoft@c+1)& (0+255),f,b
 11526                           
 11527                           ; BSR set to: 0
 11528  0031CA  0E01               	movlw	1
 11529  0031CC  6E42               	movwf	___awtoft@sign,c
 11530  0031CE  D000               	goto	l5462
 11531  0031D0                     l5462:
 11532                           
 11533                           ; BSR set to: 0
 11534  0031D0  C076  F06E         	movff	___awtoft@c,___ftpack@arg
 11535  0031D4  C077  F06F         	movff	___awtoft@c+1,___ftpack@arg+1
 11536  0031D8  0100               	movlb	0	; () banked
 11537  0031DA  6B70               	clrf	(___ftpack@arg+2)& (0+255),b
 11538  0031DC  0E8E               	movlw	142
 11539  0031DE  0100               	movlb	0	; () banked
 11540  0031E0  6F71               	movwf	___ftpack@exp& (0+255),b
 11541  0031E2  C042  F072         	movff	___awtoft@sign,___ftpack@sign
 11542  0031E6  EC2E  F00F         	call	___ftpack	;wreg free
 11543  0031EA  C06E  F076         	movff	?___ftpack,?___awtoft
 11544  0031EE  C06F  F077         	movff	?___ftpack+1,?___awtoft+1
 11545  0031F2  C070  F078         	movff	?___ftpack+2,?___awtoft+2
 11546  0031F6  D000               	goto	l1108
 11547  0031F8                     l1108:
 11548  0031F8  0012               	return		;funcret
 11549  0031FA                     __end_of___awtoft:
 11550                           	opt stack 0
 11551                           tblptru	equ	0xFF8
 11552                           tblptrh	equ	0xFF7
 11553                           tblptrl	equ	0xFF6
 11554                           tablat	equ	0xFF5
 11555                           prodh	equ	0xFF4
 11556                           prodl	equ	0xFF3
 11557                           intcon	equ	0xFF2
 11558                           intcon2	equ	0xFF1
 11559                           intcon3	equ	0xFF0
 11560                           postinc0	equ	0xFEE
 11561                           wreg	equ	0xFE8
 11562                           indf2	equ	0xFDF
 11563                           postinc2	equ	0xFDE
 11564                           postdec2	equ	0xFDD
 11565                           fsr2h	equ	0xFDA
 11566                           fsr2l	equ	0xFD9
 11567                           status	equ	0xFD8
 11568                           
 11569 ;; *************** function ___lltoft *****************
 11570 ;; Defined at:
 11571 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;  c               4   22[BANK0 ] unsigned long 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  exp             1   29[COMRAM] unsigned char 
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  3   22[BANK0 ] float 
 11578 ;; Registers used:
 11579 ;;		wreg, status,2, status,0, cstack
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11585 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11588 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11589 ;;Total ram usage:        9 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    8
 11592 ;; This function calls:
 11593 ;;		___ftpack
 11594 ;; This function is called by:
 11595 ;;		_pow
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           	psect	text91
 11600  002D34                     __ptext91:
 11601                           	opt stack 0
 11602  002D34                     ___lltoft:
 11603                           	opt stack 20
 11604                           
 11605                           ;incstack = 0
 11606  002D34  0E8E               	movlw	142
 11607  002D36  6E42               	movwf	___lltoft@exp,c
 11608  002D38  D008               	goto	l5682
 11609  002D3A                     l5680:
 11610  002D3A  0100               	movlb	0	; () banked
 11611  002D3C  90D8               	bcf	status,0,c
 11612  002D3E  3379               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11613  002D40  3378               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11614  002D42  3377               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11615  002D44  3376               	rrcf	___lltoft@c& (0+255),f,b
 11616  002D46  2A42               	incf	___lltoft@exp,f,c
 11617  002D48  D000               	goto	l5682
 11618  002D4A                     l5682:
 11619  002D4A  0E00               	movlw	0
 11620  002D4C  0100               	movlb	0	; () banked
 11621  002D4E  1576               	andwf	___lltoft@c& (0+255),w,b
 11622  002D50  0100               	movlb	0	; () banked
 11623  002D52  6F7A               	movwf	??___lltoft& (0+255),b
 11624  002D54  0E00               	movlw	0
 11625  002D56  0100               	movlb	0	; () banked
 11626  002D58  1577               	andwf	(___lltoft@c+1)& (0+255),w,b
 11627  002D5A  0100               	movlb	0	; () banked
 11628  002D5C  6F7B               	movwf	(??___lltoft+1)& (0+255),b
 11629  002D5E  0E00               	movlw	0
 11630  002D60  0100               	movlb	0	; () banked
 11631  002D62  1578               	andwf	(___lltoft@c+2)& (0+255),w,b
 11632  002D64  0100               	movlb	0	; () banked
 11633  002D66  6F7C               	movwf	(??___lltoft+2)& (0+255),b
 11634  002D68  0EFF               	movlw	255
 11635  002D6A  0100               	movlb	0	; () banked
 11636  002D6C  1579               	andwf	(___lltoft@c+3)& (0+255),w,b
 11637  002D6E  0100               	movlb	0	; () banked
 11638  002D70  6F7D               	movwf	(??___lltoft+3)& (0+255),b
 11639  002D72  0100               	movlb	0	; () banked
 11640  002D74  517A               	movf	??___lltoft& (0+255),w,b
 11641  002D76  0100               	movlb	0	; () banked
 11642  002D78  117B               	iorwf	(??___lltoft+1)& (0+255),w,b
 11643  002D7A  0100               	movlb	0	; () banked
 11644  002D7C  117C               	iorwf	(??___lltoft+2)& (0+255),w,b
 11645  002D7E  0100               	movlb	0	; () banked
 11646  002D80  117D               	iorwf	(??___lltoft+3)& (0+255),w,b
 11647  002D82  A4D8               	btfss	status,2,c
 11648  002D84  D7DA               	goto	l5680
 11649                           
 11650                           ; BSR set to: 0
 11651                           
 11652                           ; BSR set to: 0
 11653  002D86  C076  F06E         	movff	___lltoft@c,___ftpack@arg
 11654  002D8A  C077  F06F         	movff	___lltoft@c+1,___ftpack@arg+1
 11655  002D8E  C078  F070         	movff	___lltoft@c+2,___ftpack@arg+2
 11656  002D92  C042  F071         	movff	___lltoft@exp,___ftpack@exp
 11657  002D96  0E00               	movlw	0
 11658  002D98  0100               	movlb	0	; () banked
 11659  002D9A  6F72               	movwf	___ftpack@sign& (0+255),b
 11660  002D9C  EC2E  F00F         	call	___ftpack	;wreg free
 11661  002DA0  C06E  F076         	movff	?___ftpack,?___lltoft
 11662  002DA4  C06F  F077         	movff	?___ftpack+1,?___lltoft+1
 11663  002DA8  C070  F078         	movff	?___ftpack+2,?___lltoft+2
 11664  002DAC  D000               	goto	l1389
 11665  002DAE                     l1389:
 11666  002DAE  0012               	return		;funcret
 11667  002DB0                     __end_of___lltoft:
 11668                           	opt stack 0
 11669                           tblptru	equ	0xFF8
 11670                           tblptrh	equ	0xFF7
 11671                           tblptrl	equ	0xFF6
 11672                           tablat	equ	0xFF5
 11673                           prodh	equ	0xFF4
 11674                           prodl	equ	0xFF3
 11675                           intcon	equ	0xFF2
 11676                           intcon2	equ	0xFF1
 11677                           intcon3	equ	0xFF0
 11678                           postinc0	equ	0xFEE
 11679                           wreg	equ	0xFE8
 11680                           indf2	equ	0xFDF
 11681                           postinc2	equ	0xFDE
 11682                           postdec2	equ	0xFDD
 11683                           fsr2h	equ	0xFDA
 11684                           fsr2l	equ	0xFD9
 11685                           status	equ	0xFD8
 11686                           
 11687 ;; *************** function ___lbtoft *****************
 11688 ;; Defined at:
 11689 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  c               1    wreg     unsigned char 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  c               1   29[COMRAM] unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  3   22[BANK0 ] float 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;Total ram usage:        4 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    8
 11710 ;; This function calls:
 11711 ;;		___ftpack
 11712 ;; This function is called by:
 11713 ;;		_CalculateSensorSums
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text92
 11718  0034F8                     __ptext92:
 11719                           	opt stack 0
 11720  0034F8                     ___lbtoft:
 11721                           	opt stack 21
 11722                           
 11723                           ;incstack = 0
 11724                           ;___lbtoft@c stored from wreg
 11725  0034F8  6E42               	movwf	___lbtoft@c,c
 11726  0034FA  5042               	movf	___lbtoft@c,w,c
 11727  0034FC  0100               	movlb	0	; () banked
 11728  0034FE  6F6E               	movwf	___ftpack@arg& (0+255),b
 11729  003500  6B6F               	clrf	(___ftpack@arg+1)& (0+255),b
 11730  003502  6B70               	clrf	(___ftpack@arg+2)& (0+255),b
 11731  003504  0E8E               	movlw	142
 11732  003506  0100               	movlb	0	; () banked
 11733  003508  6F71               	movwf	___ftpack@exp& (0+255),b
 11734  00350A  0E00               	movlw	0
 11735  00350C  0100               	movlb	0	; () banked
 11736  00350E  6F72               	movwf	___ftpack@sign& (0+255),b
 11737  003510  EC2E  F00F         	call	___ftpack	;wreg free
 11738  003514  C06E  F076         	movff	?___ftpack,?___lbtoft
 11739  003518  C06F  F077         	movff	?___ftpack+1,?___lbtoft+1
 11740  00351C  C070  F078         	movff	?___ftpack+2,?___lbtoft+2
 11741  003520  D000               	goto	l1356
 11742  003522                     l1356:
 11743  003522  0012               	return		;funcret
 11744  003524                     __end_of___lbtoft:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           intcon2	equ	0xFF1
 11754                           intcon3	equ	0xFF0
 11755                           postinc0	equ	0xFEE
 11756                           wreg	equ	0xFE8
 11757                           indf2	equ	0xFDF
 11758                           postinc2	equ	0xFDE
 11759                           postdec2	equ	0xFDD
 11760                           fsr2h	equ	0xFDA
 11761                           fsr2l	equ	0xFD9
 11762                           status	equ	0xFD8
 11763                           
 11764 ;; *************** function ___ftpack *****************
 11765 ;; Defined at:
 11766 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;  arg             3   14[BANK0 ] unsigned um
 11769 ;;  exp             1   17[BANK0 ] unsigned char 
 11770 ;;  sign            1   18[BANK0 ] unsigned char 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  3   14[BANK0 ] float 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11782 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;Total ram usage:        8 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    7
 11789 ;; This function calls:
 11790 ;;		Nothing
 11791 ;; This function is called by:
 11792 ;;		___altoft
 11793 ;;		___awtoft
 11794 ;;		___ftadd
 11795 ;;		___ftdiv
 11796 ;;		___ftmul
 11797 ;;		___lbtoft
 11798 ;;		___lltoft
 11799 ;;		___lwtoft
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803                           	psect	text93
 11804  001E5C                     __ptext93:
 11805                           	opt stack 0
 11806  001E5C                     ___ftpack:
 11807                           	opt stack 18
 11808                           
 11809                           ;incstack = 0
 11810  001E5C  0100               	movlb	0	; () banked
 11811  001E5E  5171               	movf	___ftpack@exp& (0+255),w,b
 11812  001E60  0100               	movlb	0	; () banked
 11813  001E62  B4D8               	btfsc	status,2,c
 11814  001E64  D008               	goto	l4926
 11815                           
 11816                           ; BSR set to: 0
 11817  001E66  0100               	movlb	0	; () banked
 11818  001E68  516E               	movf	___ftpack@arg& (0+255),w,b
 11819  001E6A  0100               	movlb	0	; () banked
 11820  001E6C  116F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11821  001E6E  0100               	movlb	0	; () banked
 11822  001E70  1170               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11823  001E72  A4D8               	btfss	status,2,c
 11824  001E74  D013               	goto	l4932
 11825  001E76                     l4926:
 11826                           
 11827                           ; BSR set to: 0
 11828  001E76  0E00               	movlw	0
 11829  001E78  0100               	movlb	0	; () banked
 11830  001E7A  6F6E               	movwf	?___ftpack& (0+255),b
 11831  001E7C  0E00               	movlw	0
 11832  001E7E  0100               	movlb	0	; () banked
 11833  001E80  6F6F               	movwf	(?___ftpack+1)& (0+255),b
 11834  001E82  0E00               	movlw	0
 11835  001E84  0100               	movlb	0	; () banked
 11836  001E86  6F70               	movwf	(?___ftpack+2)& (0+255),b
 11837                           
 11838                           ; BSR set to: 0
 11839  001E88  D078               	goto	l1212
 11840                           
 11841                           ; BSR set to: 0
 11842  001E8A  D008               	goto	l4932
 11843  001E8C                     l4930:
 11844                           
 11845                           ; BSR set to: 0
 11846  001E8C  0100               	movlb	0	; () banked
 11847  001E8E  2B71               	incf	___ftpack@exp& (0+255),f,b
 11848  001E90  0100               	movlb	0	; () banked
 11849  001E92  90D8               	bcf	status,0,c
 11850  001E94  3370               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11851  001E96  336F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11852  001E98  336E               	rrcf	___ftpack@arg& (0+255),f,b
 11853  001E9A  D000               	goto	l4932
 11854  001E9C                     l4932:
 11855                           
 11856                           ; BSR set to: 0
 11857  001E9C  0E00               	movlw	0
 11858  001E9E  0100               	movlb	0	; () banked
 11859  001EA0  156E               	andwf	___ftpack@arg& (0+255),w,b
 11860  001EA2  0100               	movlb	0	; () banked
 11861  001EA4  6F73               	movwf	??___ftpack& (0+255),b
 11862  001EA6  0E00               	movlw	0
 11863  001EA8  0100               	movlb	0	; () banked
 11864  001EAA  156F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11865  001EAC  0100               	movlb	0	; () banked
 11866  001EAE  6F74               	movwf	(??___ftpack+1)& (0+255),b
 11867  001EB0  0EFE               	movlw	254
 11868  001EB2  0100               	movlb	0	; () banked
 11869  001EB4  1570               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11870  001EB6  0100               	movlb	0	; () banked
 11871  001EB8  6F75               	movwf	(??___ftpack+2)& (0+255),b
 11872  001EBA  0100               	movlb	0	; () banked
 11873  001EBC  5173               	movf	??___ftpack& (0+255),w,b
 11874  001EBE  0100               	movlb	0	; () banked
 11875  001EC0  1174               	iorwf	(??___ftpack+1)& (0+255),w,b
 11876  001EC2  0100               	movlb	0	; () banked
 11877  001EC4  1175               	iorwf	(??___ftpack+2)& (0+255),w,b
 11878  001EC6  B4D8               	btfsc	status,2,c
 11879  001EC8  D013               	goto	l4938
 11880  001ECA  D7E0               	goto	l4930
 11881                           
 11882                           ; BSR set to: 0
 11883  001ECC  D011               	goto	l4938
 11884  001ECE                     l4934:
 11885                           
 11886                           ; BSR set to: 0
 11887  001ECE  0100               	movlb	0	; () banked
 11888  001ED0  2B71               	incf	___ftpack@exp& (0+255),f,b
 11889                           
 11890                           ; BSR set to: 0
 11891  001ED2  0E01               	movlw	1
 11892  001ED4  0100               	movlb	0	; () banked
 11893  001ED6  276E               	addwf	___ftpack@arg& (0+255),f,b
 11894  001ED8  0E00               	movlw	0
 11895  001EDA  0100               	movlb	0	; () banked
 11896  001EDC  236F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11897  001EDE  0E00               	movlw	0
 11898  001EE0  0100               	movlb	0	; () banked
 11899  001EE2  2370               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11900  001EE4  0100               	movlb	0	; () banked
 11901  001EE6  90D8               	bcf	status,0,c
 11902  001EE8  3370               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11903  001EEA  336F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11904  001EEC  336E               	rrcf	___ftpack@arg& (0+255),f,b
 11905  001EEE  D000               	goto	l4938
 11906  001EF0                     l4938:
 11907                           
 11908                           ; BSR set to: 0
 11909  001EF0  0E00               	movlw	0
 11910  001EF2  0100               	movlb	0	; () banked
 11911  001EF4  156E               	andwf	___ftpack@arg& (0+255),w,b
 11912  001EF6  0100               	movlb	0	; () banked
 11913  001EF8  6F73               	movwf	??___ftpack& (0+255),b
 11914  001EFA  0E00               	movlw	0
 11915  001EFC  0100               	movlb	0	; () banked
 11916  001EFE  156F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11917  001F00  0100               	movlb	0	; () banked
 11918  001F02  6F74               	movwf	(??___ftpack+1)& (0+255),b
 11919  001F04  0EFF               	movlw	255
 11920  001F06  0100               	movlb	0	; () banked
 11921  001F08  1570               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11922  001F0A  0100               	movlb	0	; () banked
 11923  001F0C  6F75               	movwf	(??___ftpack+2)& (0+255),b
 11924  001F0E  0100               	movlb	0	; () banked
 11925  001F10  5173               	movf	??___ftpack& (0+255),w,b
 11926  001F12  0100               	movlb	0	; () banked
 11927  001F14  1174               	iorwf	(??___ftpack+1)& (0+255),w,b
 11928  001F16  0100               	movlb	0	; () banked
 11929  001F18  1175               	iorwf	(??___ftpack+2)& (0+255),w,b
 11930  001F1A  B4D8               	btfsc	status,2,c
 11931  001F1C  D00A               	goto	l4942
 11932  001F1E  D7D7               	goto	l4934
 11933                           
 11934                           ; BSR set to: 0
 11935  001F20  D008               	goto	l4942
 11936  001F22                     l4940:
 11937                           
 11938                           ; BSR set to: 0
 11939  001F22  0100               	movlb	0	; () banked
 11940  001F24  0771               	decf	___ftpack@exp& (0+255),f,b
 11941  001F26  0100               	movlb	0	; () banked
 11942  001F28  90D8               	bcf	status,0,c
 11943  001F2A  376E               	rlcf	___ftpack@arg& (0+255),f,b
 11944  001F2C  376F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11945  001F2E  3770               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11946  001F30  D000               	goto	l4942
 11947  001F32                     l4942:
 11948                           
 11949                           ; BSR set to: 0
 11950  001F32  0100               	movlb	0	; () banked
 11951  001F34  BF6F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 11952  001F36  D005               	goto	l1223
 11953                           
 11954                           ; BSR set to: 0
 11955  001F38  0E02               	movlw	2
 11956  001F3A  0100               	movlb	0	; () banked
 11957  001F3C  6171               	cpfslt	___ftpack@exp& (0+255),b
 11958  001F3E  D7F1               	goto	l4940
 11959  001F40  D000               	goto	l1223
 11960  001F42                     l1223:
 11961                           
 11962                           ; BSR set to: 0
 11963  001F42  0100               	movlb	0	; () banked
 11964  001F44  B171               	btfsc	___ftpack@exp& (0+255),0,b
 11965  001F46  D003               	goto	l4948
 11966                           
 11967                           ; BSR set to: 0
 11968  001F48  0100               	movlb	0	; () banked
 11969  001F4A  9F6F               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11970  001F4C  D000               	goto	l4948
 11971  001F4E                     l4948:
 11972                           
 11973                           ; BSR set to: 0
 11974  001F4E  0100               	movlb	0	; () banked
 11975  001F50  90D8               	bcf	status,0,c
 11976  001F52  3371               	rrcf	___ftpack@exp& (0+255),f,b
 11977  001F54  0100               	movlb	0	; () banked
 11978  001F56  5171               	movf	___ftpack@exp& (0+255),w,b
 11979  001F58  0100               	movlb	0	; () banked
 11980  001F5A  1370               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11981                           
 11982                           ; BSR set to: 0
 11983  001F5C  0100               	movlb	0	; () banked
 11984  001F5E  5172               	movf	___ftpack@sign& (0+255),w,b
 11985  001F60  0100               	movlb	0	; () banked
 11986  001F62  B4D8               	btfsc	status,2,c
 11987  001F64  D003               	goto	l4954
 11988                           
 11989                           ; BSR set to: 0
 11990  001F66  0100               	movlb	0	; () banked
 11991  001F68  8F70               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11992  001F6A  D000               	goto	l4954
 11993  001F6C                     l4954:
 11994                           
 11995                           ; BSR set to: 0
 11996  001F6C  C06E  F06E         	movff	___ftpack@arg,?___ftpack
 11997  001F70  C06F  F06F         	movff	___ftpack@arg+1,?___ftpack+1
 11998  001F74  C070  F070         	movff	___ftpack@arg+2,?___ftpack+2
 11999  001F78  D000               	goto	l1212
 12000  001F7A                     l1212:
 12001                           
 12002                           ; BSR set to: 0
 12003  001F7A  0012               	return		;funcret
 12004  001F7C                     __end_of___ftpack:
 12005                           	opt stack 0
 12006                           tblptru	equ	0xFF8
 12007                           tblptrh	equ	0xFF7
 12008                           tblptrl	equ	0xFF6
 12009                           tablat	equ	0xFF5
 12010                           prodh	equ	0xFF4
 12011                           prodl	equ	0xFF3
 12012                           intcon	equ	0xFF2
 12013                           intcon2	equ	0xFF1
 12014                           intcon3	equ	0xFF0
 12015                           postinc0	equ	0xFEE
 12016                           wreg	equ	0xFE8
 12017                           indf2	equ	0xFDF
 12018                           postinc2	equ	0xFDE
 12019                           postdec2	equ	0xFDD
 12020                           fsr2h	equ	0xFDA
 12021                           fsr2l	equ	0xFD9
 12022                           status	equ	0xFD8
 12023                           
 12024 ;; *************** function _CalculateSensorError *****************
 12025 ;; Defined at:
 12026 ;;		line 397 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;  sum             2   14[BANK0 ] PTR const unsigned char 
 12029 ;;		 -> main@sensor_sum(1), 
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  2   14[BANK0 ] int 
 12034 ;; Registers used:
 12035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12045 ;;Total ram usage:        2 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    7
 12048 ;; This function calls:
 12049 ;;		Nothing
 12050 ;; This function is called by:
 12051 ;;		_main
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           	psect	text94
 12056  002850                     __ptext94:
 12057                           	opt stack 0
 12058  002850                     _CalculateSensorError:
 12059                           	opt stack 23
 12060                           
 12061                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 399: switch(*sum) {
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;incstack = 0
 12065  002850  D031               	goto	l6082
 12066  002852                     l6048:
 12067                           
 12068                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 401: return(64);
 12069  002852  0E00               	movlw	0
 12070  002854  0100               	movlb	0	; () banked
 12071  002856  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12072  002858  0E40               	movlw	64
 12073  00285A  D051               	goto	L21
 12074                           
 12075                           ; BSR set to: 0
 12076  00285C  D052               	goto	l229
 12077  00285E                     l6052:
 12078                           
 12079                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 403: return(27);
 12080  00285E  0E00               	movlw	0
 12081  002860  0100               	movlb	0	; () banked
 12082  002862  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12083  002864  0E1B               	movlw	27
 12084  002866  D04B               	goto	L21
 12085                           
 12086                           ; BSR set to: 0
 12087  002868  D04C               	goto	l229
 12088  00286A                     l6056:
 12089                           
 12090                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 405: return(8);
 12091  00286A  0E00               	movlw	0
 12092  00286C  0100               	movlb	0	; () banked
 12093  00286E  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12094  002870  0E08               	movlw	8
 12095  002872  D045               	goto	L21
 12096                           
 12097                           ; BSR set to: 0
 12098  002874  D046               	goto	l229
 12099  002876                     l6060:
 12100                           
 12101                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 407: return(1);
 12102  002876  0E00               	movlw	0
 12103  002878  0100               	movlb	0	; () banked
 12104  00287A  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12105  00287C  0E01               	movlw	1
 12106  00287E  D03F               	goto	L21
 12107                           
 12108                           ; BSR set to: 0
 12109  002880  D040               	goto	l229
 12110                           
 12111                           ; BSR set to: 0
 12112                           
 12113                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 408: case(4) :
 12114  002882  D039               	goto	l6084
 12115                           
 12116                           ; BSR set to: 0
 12117                           
 12118                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 409: return(0);
 12119  002884  D03E               	goto	l229
 12120  002886                     l234:
 12121                           
 12122                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 411: return(-1);
 12123  002886  0100               	movlb	0	; () banked
 12124  002888  696E               	setf	?_CalculateSensorError& (0+255),b
 12125  00288A  696F               	setf	(?_CalculateSensorError+1)& (0+255),b
 12126  00288C  D03A               	goto	l229
 12127  00288E                     l6068:
 12128                           
 12129                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 413: return(-8);
 12130  00288E  0EFF               	movlw	255
 12131  002890  0100               	movlb	0	; () banked
 12132  002892  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12133  002894  0EF8               	movlw	248
 12134  002896  D033               	goto	L21
 12135                           
 12136                           ; BSR set to: 0
 12137  002898  D034               	goto	l229
 12138  00289A                     l6072:
 12139                           
 12140                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 415: return(-27);
 12141  00289A  0EFF               	movlw	255
 12142  00289C  0100               	movlb	0	; () banked
 12143  00289E  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12144  0028A0  0EE5               	movlw	229
 12145  0028A2  D02D               	goto	L21
 12146                           
 12147                           ; BSR set to: 0
 12148  0028A4  D02E               	goto	l229
 12149  0028A6                     l6076:
 12150                           
 12151                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 417: return(-64);
 12152  0028A6  0EFF               	movlw	255
 12153  0028A8  0100               	movlb	0	; () banked
 12154  0028AA  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12155  0028AC  0EC0               	movlw	192
 12156  0028AE  D027               	goto	L21
 12157                           
 12158                           ; BSR set to: 0
 12159  0028B0  D028               	goto	l229
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 420: }
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 419: break;
 12166                           
 12167                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 418: default :
 12168  0028B2  D021               	goto	l6084
 12169  0028B4                     l6082:
 12170  0028B4  C06E  FFD9         	movff	CalculateSensorError@sum,fsr2l
 12171  0028B8  C06F  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
 12172  0028BC  50DF               	movf	indf2,w,c
 12173                           
 12174                           ; Switch size 1, requested type "space"
 12175                           ; Number of cases is 9, Range of values is 1 to 24
 12176                           ; switch strategies available:
 12177                           ; Name         Instructions Cycles
 12178                           ; simple_byte           28    15 (average)
 12179                           ;	Chosen strategy is simple_byte
 12180  0028BE  0A01               	xorlw	1	; case 1
 12181  0028C0  B4D8               	btfsc	status,2,c
 12182  0028C2  D7F1               	goto	l6076
 12183  0028C4  0A03               	xorlw	3	; case 2
 12184  0028C6  B4D8               	btfsc	status,2,c
 12185  0028C8  D7E2               	goto	l6068
 12186  0028CA  0A01               	xorlw	1	; case 3
 12187  0028CC  B4D8               	btfsc	status,2,c
 12188  0028CE  D7E5               	goto	l6072
 12189  0028D0  0A07               	xorlw	7	; case 4
 12190  0028D2  B4D8               	btfsc	status,2,c
 12191  0028D4  D010               	goto	l6084
 12192  0028D6  0A02               	xorlw	2	; case 6
 12193  0028D8  B4D8               	btfsc	status,2,c
 12194  0028DA  D7D5               	goto	l234
 12195  0028DC  0A0E               	xorlw	14	; case 8
 12196  0028DE  B4D8               	btfsc	status,2,c
 12197  0028E0  D7C4               	goto	l6056
 12198  0028E2  0A04               	xorlw	4	; case 12
 12199  0028E4  B4D8               	btfsc	status,2,c
 12200  0028E6  D7C7               	goto	l6060
 12201  0028E8  0A1C               	xorlw	28	; case 16
 12202  0028EA  B4D8               	btfsc	status,2,c
 12203  0028EC  D7B2               	goto	l6048
 12204  0028EE  0A08               	xorlw	8	; case 24
 12205  0028F0  B4D8               	btfsc	status,2,c
 12206  0028F2  D7B5               	goto	l6052
 12207  0028F4  D000               	goto	l6084
 12208  0028F6                     l6084:
 12209                           
 12210                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 422: return(0);
 12211  0028F6  0E00               	movlw	0
 12212  0028F8  0100               	movlb	0	; () banked
 12213  0028FA  6F6F               	movwf	(?_CalculateSensorError+1)& (0+255),b
 12214  0028FC  0E00               	movlw	0
 12215  0028FE                     L21:
 12216  0028FE  6F6E               	movwf	?_CalculateSensorError& (0+255),b
 12217  002900  D000               	goto	l229
 12218  002902                     l229:
 12219                           
 12220                           ; BSR set to: 0
 12221  002902  0012               	return		;funcret
 12222  002904                     __end_of_CalculateSensorError:
 12223                           	opt stack 0
 12224                           tblptru	equ	0xFF8
 12225                           tblptrh	equ	0xFF7
 12226                           tblptrl	equ	0xFF6
 12227                           tablat	equ	0xFF5
 12228                           prodh	equ	0xFF4
 12229                           prodl	equ	0xFF3
 12230                           intcon	equ	0xFF2
 12231                           intcon2	equ	0xFF1
 12232                           intcon3	equ	0xFF0
 12233                           postinc0	equ	0xFEE
 12234                           wreg	equ	0xFE8
 12235                           indf2	equ	0xFDF
 12236                           postinc2	equ	0xFDE
 12237                           postdec2	equ	0xFDD
 12238                           fsr2h	equ	0xFDA
 12239                           fsr2l	equ	0xFD9
 12240                           status	equ	0xFD8
 12241                           
 12242 ;; *************** function _BusyDistanceAcq *****************
 12243 ;; Defined at:
 12244 ;;		line 61 in file "Ultrasound.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      unsigned char 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    7
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_main
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text95
 12273  00388C                     __ptext95:
 12274                           	opt stack 0
 12275  00388C                     _BusyDistanceAcq:
 12276                           	opt stack 23
 12277                           
 12278                           ;Ultrasound.c: 63: return (!echo_acq_done);
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;incstack = 0
 12282  00388C  5016               	movf	_echo_acq_done,w,c
 12283  00388E  A4D8               	btfss	status,2,c
 12284  003890  D002               	goto	u5790
 12285  003892  0E01               	movlw	1
 12286  003894  D002               	goto	l399
 12287  003896                     u5790:
 12288  003896  0E00               	movlw	0
 12289  003898  D000               	goto	l399
 12290  00389A                     l399:
 12291  00389A  0012               	return		;funcret
 12292  00389C                     __end_of_BusyDistanceAcq:
 12293                           	opt stack 0
 12294                           tblptru	equ	0xFF8
 12295                           tblptrh	equ	0xFF7
 12296                           tblptrl	equ	0xFF6
 12297                           tablat	equ	0xFF5
 12298                           prodh	equ	0xFF4
 12299                           prodl	equ	0xFF3
 12300                           intcon	equ	0xFF2
 12301                           intcon2	equ	0xFF1
 12302                           intcon3	equ	0xFF0
 12303                           postinc0	equ	0xFEE
 12304                           wreg	equ	0xFE8
 12305                           indf2	equ	0xFDF
 12306                           postinc2	equ	0xFDE
 12307                           postdec2	equ	0xFDD
 12308                           fsr2h	equ	0xFDA
 12309                           fsr2l	equ	0xFD9
 12310                           status	equ	0xFD8
 12311                           
 12312 ;; *************** function _isrLP *****************
 12313 ;; Defined at:
 12314 ;;		line 649 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;		None
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;		None
 12319 ;; Return value:  Size  Location     Type
 12320 ;;		None               void
 12321 ;; Registers used:
 12322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12331 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;Total ram usage:       17 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:    6
 12335 ;; This function calls:
 12336 ;;		_WirelessTx_ISR
 12337 ;;		i1_ConvertADC
 12338 ;;		i1_ReadADC
 12339 ;;		i1_SetADCChannel
 12340 ;; This function is called by:
 12341 ;;		Interrupt level 1
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           	psect	intcodelo
 12346  000018                     __pintcodelo:
 12347                           	opt stack 0
 12348  000018                     _isrLP:
 12349                           	opt stack 18
 12350                           
 12351                           ;incstack = 0
 12352  000018  CFD8 F02D          	movff	status,??_isrLP
 12353  00001C  CFE8 F02E          	movff	wreg,??_isrLP+1
 12354  000020  CFE0 F02F          	movff	bsr,??_isrLP+2
 12355  000024  CFFA F030          	movff	pclath,??_isrLP+3
 12356  000028  CFFB F031          	movff	pclatu,??_isrLP+4
 12357  00002C  CFE9 F032          	movff	fsr0l,??_isrLP+5
 12358  000030  CFEA F033          	movff	fsr0h,??_isrLP+6
 12359  000034  CFE1 F034          	movff	fsr1l,??_isrLP+7
 12360  000038  CFE2 F035          	movff	fsr1h,??_isrLP+8
 12361  00003C  CFD9 F036          	movff	fsr2l,??_isrLP+9
 12362  000040  CFDA F037          	movff	fsr2h,??_isrLP+10
 12363  000044  CFF3 F038          	movff	prodl,??_isrLP+11
 12364  000048  CFF4 F039          	movff	prodh,??_isrLP+12
 12365  00004C  CFF6 F03A          	movff	tblptrl,??_isrLP+13
 12366  000050  CFF7 F03B          	movff	tblptrh,??_isrLP+14
 12367  000054  CFF8 F03C          	movff	tblptru,??_isrLP+15
 12368  000058  CFF5 F03D          	movff	tablat,??_isrLP+16
 12369                           
 12370                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 664: if (PIR1bits.ADIF == 1) {
 12371  00005C  AC9E               	btfss	3998,6,c	;volatile
 12372  00005E  D01D               	goto	i1l319
 12373                           
 12374                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 665: PIR1bits.ADIF = 0;
 12375  000060  9C9E               	bcf	3998,6,c	;volatile
 12376                           
 12377                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 666: if (sensor_acq_index < 5) {
 12378  000062  0E05               	movlw	5
 12379  000064  601B               	cpfslt	_sensor_acq_index,c	;volatile
 12380  000066  D015               	goto	i1l4740
 12381                           
 12382                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 667: *(sensor_readings_raw + sensor_acq_index) = 
      +                          ReadADC();
 12383  000068  EC4E  F01C         	call	i1_ReadADC	;wreg free
 12384  00006C  501B               	movf	_sensor_acq_index,w,c	;volatile
 12385  00006E  0D02               	mullw	2
 12386  000070  0ED0               	movlw	low _sensor_readings_raw
 12387  000072  24F3               	addwf	prodl,w,c
 12388  000074  6ED9               	movwf	fsr2l,c
 12389  000076  0E00               	movlw	high _sensor_readings_raw
 12390  000078  20F4               	addwfc	prodh,w,c
 12391  00007A  6EDA               	movwf	fsr2h,c
 12392  00007C  C025  FFDE         	movff	?i1_ReadADC,postinc2
 12393  000080  C026  FFDD         	movff	?i1_ReadADC+1,postdec2
 12394                           
 12395                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 668: sensor_acq_index++;
 12396  000084  2A1B               	incf	_sensor_acq_index,f,c	;volatile
 12397                           
 12398                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 669: SetADCChannel(sensor_acq_index);
 12399  000086  501B               	movf	_sensor_acq_index,w,c	;volatile
 12400  000088  ECB9  F011         	call	i1_SetADCChannel
 12401                           
 12402                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 670: ConvertADC();
 12403  00008C  ECAC  F01C         	call	i1_ConvertADC	;wreg free
 12404                           
 12405                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 671: } else {
 12406  000090  D00A               	goto	i1l324
 12407  000092                     i1l4740:
 12408                           
 12409                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 672: sensor_acq_done = 1;
 12410  000092  0E01               	movlw	1
 12411  000094  6E1A               	movwf	_sensor_acq_done,c	;volatile
 12412                           
 12413                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 673: PIE1bits.ADIE = 0;
 12414  000096  9C9D               	bcf	3997,6,c	;volatile
 12415                           
 12416                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 674: }
 12417                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 675: }
 12418  000098  D006               	goto	i1l324
 12419  00009A                     i1l319:
 12420                           
 12421                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 677: else if(PIR1bits.TX1IF == 1) {
 12422  00009A  A89E               	btfss	3998,4,c	;volatile
 12423  00009C  D004               	goto	i1l324
 12424                           
 12425                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 678: PIR1bits.TX1IF = 0;
 12426  00009E  989E               	bcf	3998,4,c	;volatile
 12427                           
 12428                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 679: WirelessTx_ISR();
 12429  0000A0  EC09  F01B         	call	_WirelessTx_ISR	;wreg free
 12430  0000A4  D000               	goto	i1l324
 12431  0000A6                     i1l324:
 12432  0000A6  C03D  FFF5         	movff	??_isrLP+16,tablat
 12433  0000AA  C03C  FFF8         	movff	??_isrLP+15,tblptru
 12434  0000AE  C03B  FFF7         	movff	??_isrLP+14,tblptrh
 12435  0000B2  C03A  FFF6         	movff	??_isrLP+13,tblptrl
 12436  0000B6  C039  FFF4         	movff	??_isrLP+12,prodh
 12437  0000BA  C038  FFF3         	movff	??_isrLP+11,prodl
 12438  0000BE  C037  FFDA         	movff	??_isrLP+10,fsr2h
 12439  0000C2  C036  FFD9         	movff	??_isrLP+9,fsr2l
 12440  0000C6  C035  FFE2         	movff	??_isrLP+8,fsr1h
 12441  0000CA  C034  FFE1         	movff	??_isrLP+7,fsr1l
 12442  0000CE  C033  FFEA         	movff	??_isrLP+6,fsr0h
 12443  0000D2  C032  FFE9         	movff	??_isrLP+5,fsr0l
 12444  0000D6  C031  FFFB         	movff	??_isrLP+4,pclatu
 12445  0000DA  C030  FFFA         	movff	??_isrLP+3,pclath
 12446  0000DE  C02F  FFE0         	movff	??_isrLP+2,bsr
 12447  0000E2  C02E  FFE8         	movff	??_isrLP+1,wreg
 12448  0000E6  C02D  FFD8         	movff	??_isrLP,status
 12449  0000EA  0010               	retfie	
 12450  0000EC                     __end_of_isrLP:
 12451                           	opt stack 0
 12452                           pclatu	equ	0xFFB
 12453                           pclath	equ	0xFFA
 12454                           tblptru	equ	0xFF8
 12455                           tblptrh	equ	0xFF7
 12456                           tblptrl	equ	0xFF6
 12457                           tablat	equ	0xFF5
 12458                           prodh	equ	0xFF4
 12459                           prodl	equ	0xFF3
 12460                           intcon	equ	0xFF2
 12461                           intcon2	equ	0xFF1
 12462                           intcon3	equ	0xFF0
 12463                           postinc0	equ	0xFEE
 12464                           fsr0h	equ	0xFEA
 12465                           fsr0l	equ	0xFE9
 12466                           wreg	equ	0xFE8
 12467                           fsr1h	equ	0xFE2
 12468                           fsr1l	equ	0xFE1
 12469                           bsr	equ	0xFE0
 12470                           indf2	equ	0xFDF
 12471                           postinc2	equ	0xFDE
 12472                           postdec2	equ	0xFDD
 12473                           fsr2h	equ	0xFDA
 12474                           fsr2l	equ	0xFD9
 12475                           status	equ	0xFD8
 12476                           
 12477 ;; *************** function i1_SetADCChannel *****************
 12478 ;; Defined at:
 12479 ;;		line 261 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  channel         1    wreg     unsigned char 
 12482 ;; Auto vars:     Size  Location     Type
 12483 ;;  channel         1    2[COMRAM] unsigned char 
 12484 ;; Return value:  Size  Location     Type
 12485 ;;		None               void
 12486 ;; Registers used:
 12487 ;;		wreg, status,2, status,0, cstack
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/0
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;Total ram usage:        1 bytes
 12498 ;; Hardware stack levels used:    1
 12499 ;; Hardware stack levels required when called:    4
 12500 ;; This function calls:
 12501 ;;		i1_SetChanADC
 12502 ;; This function is called by:
 12503 ;;		_isrLP
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text97
 12508  002372                     __ptext97:
 12509                           	opt stack 0
 12510  002372                     i1_SetADCChannel:
 12511                           	opt stack 19
 12512                           
 12513                           ;incstack = 0
 12514                           ;i1SetADCChannel@channel stored from wreg
 12515  002372  6E27               	movwf	i1SetADCChannel@channel,c
 12516                           
 12517                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 263: switch (channel) {
 12518  002374  D040               	goto	i1l4706
 12519  002376                     i1l4672:
 12520                           
 12521                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 265: SetChanADC(0b10000111);
 12522  002376  0E87               	movlw	135
 12523  002378  ECC4  F01B         	call	i1_SetChanADC
 12524                           
 12525                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 266: break;
 12526  00237C  D06E               	goto	i1l194
 12527  00237E                     i1l4674:
 12528                           
 12529                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 268: SetChanADC(0b10001111);
 12530  00237E  0E8F               	movlw	143
 12531  002380  ECC4  F01B         	call	i1_SetChanADC
 12532                           
 12533                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 269: break;
 12534  002384  D06A               	goto	i1l194
 12535  002386                     i1l4676:
 12536                           
 12537                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 271: SetChanADC(0b10010111);
 12538  002386  0E97               	movlw	151
 12539  002388  ECC4  F01B         	call	i1_SetChanADC
 12540                           
 12541                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 272: break;
 12542  00238C  D066               	goto	i1l194
 12543  00238E                     i1l4678:
 12544                           
 12545                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 274: SetChanADC(0b10011111);
 12546  00238E  0E9F               	movlw	159
 12547  002390  ECC4  F01B         	call	i1_SetChanADC
 12548                           
 12549                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 275: break;
 12550  002394  D062               	goto	i1l194
 12551  002396                     i1l4680:
 12552                           
 12553                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 277: SetChanADC(0b10100111);
 12554  002396  0EA7               	movlw	167
 12555  002398  ECC4  F01B         	call	i1_SetChanADC
 12556                           
 12557                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 278: break;
 12558  00239C  D05E               	goto	i1l194
 12559  00239E                     i1l4682:
 12560                           
 12561                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 280: SetChanADC(0b10101111);
 12562  00239E  0EAF               	movlw	175
 12563  0023A0  ECC4  F01B         	call	i1_SetChanADC
 12564                           
 12565                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 281: break;
 12566  0023A4  D05A               	goto	i1l194
 12567  0023A6                     i1l4684:
 12568                           
 12569                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 283: SetChanADC(0b10110111);
 12570  0023A6  0EB7               	movlw	183
 12571  0023A8  ECC4  F01B         	call	i1_SetChanADC
 12572                           
 12573                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 284: break;
 12574  0023AC  D056               	goto	i1l194
 12575  0023AE                     i1l4686:
 12576                           
 12577                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 286: SetChanADC(0b10111111);
 12578  0023AE  0EBF               	movlw	191
 12579  0023B0  ECC4  F01B         	call	i1_SetChanADC
 12580                           
 12581                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 287: break;
 12582  0023B4  D052               	goto	i1l194
 12583  0023B6                     i1l4688:
 12584                           
 12585                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 289: SetChanADC(0b11000111);
 12586  0023B6  0EC7               	movlw	199
 12587  0023B8  ECC4  F01B         	call	i1_SetChanADC
 12588                           
 12589                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 290: break;
 12590  0023BC  D04E               	goto	i1l194
 12591  0023BE                     i1l4690:
 12592                           
 12593                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 292: SetChanADC(0b11001111);
 12594  0023BE  0ECF               	movlw	207
 12595  0023C0  ECC4  F01B         	call	i1_SetChanADC
 12596                           
 12597                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 293: break;
 12598  0023C4  D04A               	goto	i1l194
 12599  0023C6                     i1l4692:
 12600                           
 12601                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 295: SetChanADC(0b11010111);
 12602  0023C6  0ED7               	movlw	215
 12603  0023C8  ECC4  F01B         	call	i1_SetChanADC
 12604                           
 12605                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 296: break;
 12606  0023CC  D046               	goto	i1l194
 12607  0023CE                     i1l4694:
 12608                           
 12609                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 298: SetChanADC(0b11011111);
 12610  0023CE  0EDF               	movlw	223
 12611  0023D0  ECC4  F01B         	call	i1_SetChanADC
 12612                           
 12613                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 299: break;
 12614  0023D4  D042               	goto	i1l194
 12615  0023D6                     i1l4696:
 12616                           
 12617                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 301: SetChanADC(0b11100111);
 12618  0023D6  0EE7               	movlw	231
 12619  0023D8  ECC4  F01B         	call	i1_SetChanADC
 12620                           
 12621                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 302: break;
 12622  0023DC  D03E               	goto	i1l194
 12623  0023DE                     i1l4698:
 12624                           
 12625                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 304: SetChanADC(0b11101111);
 12626  0023DE  0EEF               	movlw	239
 12627  0023E0  ECC4  F01B         	call	i1_SetChanADC
 12628                           
 12629                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 305: break;
 12630  0023E4  D03A               	goto	i1l194
 12631  0023E6                     i1l4700:
 12632                           
 12633                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 307: SetChanADC(0b11110111);
 12634  0023E6  0EF7               	movlw	247
 12635  0023E8  ECC4  F01B         	call	i1_SetChanADC
 12636                           
 12637                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 308: break;
 12638  0023EC  D036               	goto	i1l194
 12639  0023EE                     i1l4702:
 12640                           
 12641                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 310: SetChanADC(0b11111111);
 12642  0023EE  0EFF               	movlw	255
 12643  0023F0  ECC4  F01B         	call	i1_SetChanADC
 12644                           
 12645                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 314: }
 12646                           
 12647                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 313: break;
 12648                           
 12649                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 312: default:
 12650                           
 12651                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 311: break;
 12652  0023F4  D032               	goto	i1l194
 12653  0023F6                     i1l4706:
 12654  0023F6  5027               	movf	i1SetADCChannel@channel,w,c
 12655                           
 12656                           ; Switch size 1, requested type "space"
 12657                           ; Number of cases is 16, Range of values is 0 to 15
 12658                           ; switch strategies available:
 12659                           ; Name         Instructions Cycles
 12660                           ; simple_byte           49    25 (average)
 12661                           ;	Chosen strategy is simple_byte
 12662  0023F8  0A00               	xorlw	0	; case 0
 12663  0023FA  B4D8               	btfsc	status,2,c
 12664  0023FC  D7BC               	goto	i1l4672
 12665  0023FE  0A01               	xorlw	1	; case 1
 12666  002400  B4D8               	btfsc	status,2,c
 12667  002402  D7BD               	goto	i1l4674
 12668  002404  0A03               	xorlw	3	; case 2
 12669  002406  B4D8               	btfsc	status,2,c
 12670  002408  D7BE               	goto	i1l4676
 12671  00240A  0A01               	xorlw	1	; case 3
 12672  00240C  B4D8               	btfsc	status,2,c
 12673  00240E  D7BF               	goto	i1l4678
 12674  002410  0A07               	xorlw	7	; case 4
 12675  002412  B4D8               	btfsc	status,2,c
 12676  002414  D7C0               	goto	i1l4680
 12677  002416  0A01               	xorlw	1	; case 5
 12678  002418  B4D8               	btfsc	status,2,c
 12679  00241A  D7C1               	goto	i1l4682
 12680  00241C  0A03               	xorlw	3	; case 6
 12681  00241E  B4D8               	btfsc	status,2,c
 12682  002420  D7C2               	goto	i1l4684
 12683  002422  0A01               	xorlw	1	; case 7
 12684  002424  B4D8               	btfsc	status,2,c
 12685  002426  D7C3               	goto	i1l4686
 12686  002428  0A0F               	xorlw	15	; case 8
 12687  00242A  B4D8               	btfsc	status,2,c
 12688  00242C  D7C4               	goto	i1l4688
 12689  00242E  0A01               	xorlw	1	; case 9
 12690  002430  B4D8               	btfsc	status,2,c
 12691  002432  D7C5               	goto	i1l4690
 12692  002434  0A03               	xorlw	3	; case 10
 12693  002436  B4D8               	btfsc	status,2,c
 12694  002438  D7C6               	goto	i1l4692
 12695  00243A  0A01               	xorlw	1	; case 11
 12696  00243C  B4D8               	btfsc	status,2,c
 12697  00243E  D7C7               	goto	i1l4694
 12698  002440  0A07               	xorlw	7	; case 12
 12699  002442  B4D8               	btfsc	status,2,c
 12700  002444  D7C8               	goto	i1l4696
 12701  002446  0A01               	xorlw	1	; case 13
 12702  002448  B4D8               	btfsc	status,2,c
 12703  00244A  D7C9               	goto	i1l4698
 12704  00244C  0A03               	xorlw	3	; case 14
 12705  00244E  B4D8               	btfsc	status,2,c
 12706  002450  D7CA               	goto	i1l4700
 12707  002452  0A01               	xorlw	1	; case 15
 12708  002454  B4D8               	btfsc	status,2,c
 12709  002456  D7CB               	goto	i1l4702
 12710  002458  D000               	goto	i1l194
 12711  00245A                     i1l194:
 12712  00245A  0012               	return		;funcret
 12713  00245C                     __end_ofi1_SetADCChannel:
 12714                           	opt stack 0
 12715                           pclatu	equ	0xFFB
 12716                           pclath	equ	0xFFA
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           intcon	equ	0xFF2
 12724                           intcon2	equ	0xFF1
 12725                           intcon3	equ	0xFF0
 12726                           postinc0	equ	0xFEE
 12727                           fsr0h	equ	0xFEA
 12728                           fsr0l	equ	0xFE9
 12729                           wreg	equ	0xFE8
 12730                           fsr1h	equ	0xFE2
 12731                           fsr1l	equ	0xFE1
 12732                           bsr	equ	0xFE0
 12733                           indf2	equ	0xFDF
 12734                           postinc2	equ	0xFDE
 12735                           postdec2	equ	0xFDD
 12736                           fsr2h	equ	0xFDA
 12737                           fsr2l	equ	0xFD9
 12738                           status	equ	0xFD8
 12739                           
 12740 ;; *************** function i1_SetChanADC *****************
 12741 ;; Defined at:
 12742 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;  channel         1    wreg     unsigned char 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  channel         1    1[COMRAM] unsigned char 
 12747 ;; Return value:  Size  Location     Type
 12748 ;;		None               void
 12749 ;; Registers used:
 12750 ;;		wreg, status,2, status,0
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;Total ram usage:        2 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:    3
 12763 ;; This function calls:
 12764 ;;		Nothing
 12765 ;; This function is called by:
 12766 ;;		i1_SetADCChannel
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text98
 12771  003788                     __ptext98:
 12772                           	opt stack 0
 12773  003788                     i1_SetChanADC:
 12774                           	opt stack 19
 12775                           
 12776                           ;incstack = 0
 12777                           ;i1SetChanADC@channel stored from wreg
 12778  003788  6E26               	movwf	i1SetChanADC@channel,c
 12779  00378A  CFC2 F025          	movff	4034,??i1_SetChanADC	;volatile
 12780  00378E  0EC3               	movlw	195
 12781  003790  1625               	andwf	??i1_SetChanADC,f,c
 12782  003792  90D8               	bcf	status,0,c
 12783  003794  3026               	rrcf	i1SetChanADC@channel,w,c
 12784  003796  0B3C               	andlw	60
 12785  003798  1025               	iorwf	??i1_SetChanADC,w,c
 12786  00379A  6EC2               	movwf	4034,c	;volatile
 12787  00379C  0012               	return		;funcret
 12788  00379E                     __end_ofi1_SetChanADC:
 12789                           	opt stack 0
 12790                           pclatu	equ	0xFFB
 12791                           pclath	equ	0xFFA
 12792                           tblptru	equ	0xFF8
 12793                           tblptrh	equ	0xFF7
 12794                           tblptrl	equ	0xFF6
 12795                           tablat	equ	0xFF5
 12796                           prodh	equ	0xFF4
 12797                           prodl	equ	0xFF3
 12798                           intcon	equ	0xFF2
 12799                           intcon2	equ	0xFF1
 12800                           intcon3	equ	0xFF0
 12801                           postinc0	equ	0xFEE
 12802                           fsr0h	equ	0xFEA
 12803                           fsr0l	equ	0xFE9
 12804                           wreg	equ	0xFE8
 12805                           fsr1h	equ	0xFE2
 12806                           fsr1l	equ	0xFE1
 12807                           bsr	equ	0xFE0
 12808                           indf2	equ	0xFDF
 12809                           postinc2	equ	0xFDE
 12810                           postdec2	equ	0xFDD
 12811                           fsr2h	equ	0xFDA
 12812                           fsr2l	equ	0xFD9
 12813                           status	equ	0xFD8
 12814                           
 12815 ;; *************** function i1_ReadADC *****************
 12816 ;; Defined at:
 12817 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;		None
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;		None
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  2    0[COMRAM] int 
 12824 ;; Registers used:
 12825 ;;		wreg, status,2
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12835 ;;Total ram usage:        4 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:    3
 12838 ;; This function calls:
 12839 ;;		Nothing
 12840 ;; This function is called by:
 12841 ;;		_isrLP
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text99
 12846  00389C                     __ptext99:
 12847                           	opt stack 0
 12848  00389C                     i1_ReadADC:
 12849                           	opt stack 20
 12850                           
 12851                           ;incstack = 0
 12852  00389C  50C4               	movf	4036,w,c	;volatile
 12853  00389E  6E27               	movwf	??i1_ReadADC& (0+255),c
 12854  0038A0  50C3               	movf	4035,w,c	;volatile
 12855  0038A2  6E25               	movwf	?i1_ReadADC,c
 12856  0038A4  C027  F026         	movff	??i1_ReadADC,?i1_ReadADC+1
 12857  0038A8  D000               	goto	i1l718
 12858  0038AA                     i1l718:
 12859  0038AA  0012               	return		;funcret
 12860  0038AC                     __end_ofi1_ReadADC:
 12861                           	opt stack 0
 12862                           pclatu	equ	0xFFB
 12863                           pclath	equ	0xFFA
 12864                           tblptru	equ	0xFF8
 12865                           tblptrh	equ	0xFF7
 12866                           tblptrl	equ	0xFF6
 12867                           tablat	equ	0xFF5
 12868                           prodh	equ	0xFF4
 12869                           prodl	equ	0xFF3
 12870                           intcon	equ	0xFF2
 12871                           intcon2	equ	0xFF1
 12872                           intcon3	equ	0xFF0
 12873                           postinc0	equ	0xFEE
 12874                           fsr0h	equ	0xFEA
 12875                           fsr0l	equ	0xFE9
 12876                           wreg	equ	0xFE8
 12877                           fsr1h	equ	0xFE2
 12878                           fsr1l	equ	0xFE1
 12879                           bsr	equ	0xFE0
 12880                           indf2	equ	0xFDF
 12881                           postinc2	equ	0xFDE
 12882                           postdec2	equ	0xFDD
 12883                           fsr2h	equ	0xFDA
 12884                           fsr2l	equ	0xFD9
 12885                           status	equ	0xFD8
 12886                           
 12887 ;; *************** function i1_ConvertADC *****************
 12888 ;; Defined at:
 12889 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;		None
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;		None
 12894 ;; Return value:  Size  Location     Type
 12895 ;;		None               void
 12896 ;; Registers used:
 12897 ;;		None
 12898 ;; Tracked objects:
 12899 ;;		On entry : 0/0
 12900 ;;		On exit  : 0/0
 12901 ;;		Unchanged: 0/0
 12902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;Total ram usage:        0 bytes
 12908 ;; Hardware stack levels used:    1
 12909 ;; Hardware stack levels required when called:    3
 12910 ;; This function calls:
 12911 ;;		Nothing
 12912 ;; This function is called by:
 12913 ;;		_isrLP
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           	psect	text100
 12918  003958                     __ptext100:
 12919                           	opt stack 0
 12920  003958                     i1_ConvertADC:
 12921                           	opt stack 20
 12922                           
 12923                           ;incstack = 0
 12924  003958  82C2               	bsf	4034,1,c	;volatile
 12925  00395A  0012               	return		;funcret
 12926  00395C                     __end_ofi1_ConvertADC:
 12927                           	opt stack 0
 12928                           pclatu	equ	0xFFB
 12929                           pclath	equ	0xFFA
 12930                           tblptru	equ	0xFF8
 12931                           tblptrh	equ	0xFF7
 12932                           tblptrl	equ	0xFF6
 12933                           tablat	equ	0xFF5
 12934                           prodh	equ	0xFF4
 12935                           prodl	equ	0xFF3
 12936                           intcon	equ	0xFF2
 12937                           intcon2	equ	0xFF1
 12938                           intcon3	equ	0xFF0
 12939                           postinc0	equ	0xFEE
 12940                           fsr0h	equ	0xFEA
 12941                           fsr0l	equ	0xFE9
 12942                           wreg	equ	0xFE8
 12943                           fsr1h	equ	0xFE2
 12944                           fsr1l	equ	0xFE1
 12945                           bsr	equ	0xFE0
 12946                           indf2	equ	0xFDF
 12947                           postinc2	equ	0xFDE
 12948                           postdec2	equ	0xFDD
 12949                           fsr2h	equ	0xFDA
 12950                           fsr2l	equ	0xFD9
 12951                           status	equ	0xFD8
 12952                           
 12953 ;; *************** function _WirelessTx_ISR *****************
 12954 ;; Defined at:
 12955 ;;		line 35 in file "Wireless.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;		None
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;		None
 12960 ;; Return value:  Size  Location     Type
 12961 ;;		None               void
 12962 ;; Registers used:
 12963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:        0 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    5
 12976 ;; This function calls:
 12977 ;;		_GetCharTxBuf
 12978 ;;		_Write1USART
 12979 ;; This function is called by:
 12980 ;;		_isrLP
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text101
 12985  003612                     __ptext101:
 12986                           	opt stack 0
 12987  003612                     _WirelessTx_ISR:
 12988                           	opt stack 18
 12989                           
 12990                           ;Wireless.c: 36: character = GetCharTxBuf();
 12991                           
 12992                           ;incstack = 0
 12993  003612  ECD1  F019         	call	_GetCharTxBuf	;wreg free
 12994  003616  6E15               	movwf	_character,c	;volatile
 12995                           
 12996                           ;Wireless.c: 37: if(character == 0x0A) {
 12997  003618  0E0A               	movlw	10
 12998  00361A  1815               	xorwf	_character,w,c	;volatile
 12999  00361C  A4D8               	btfss	status,2,c
 13000  00361E  D007               	goto	i1l4596
 13001                           
 13002                           ;Wireless.c: 38: Write1USART(character);
 13003  003620  5015               	movf	_character,w,c	;volatile
 13004  003622  ECCF  F01B         	call	_Write1USART
 13005                           
 13006                           ;Wireless.c: 39: Tx_complete = 1;
 13007  003626  0E01               	movlw	1
 13008  003628  6E13               	movwf	_Tx_complete,c
 13009                           
 13010                           ;Wireless.c: 40: PIE1bits.TX1IE = 0;
 13011  00362A  989D               	bcf	3997,4,c	;volatile
 13012                           
 13013                           ;Wireless.c: 41: }
 13014  00362C  D004               	goto	i1l632
 13015  00362E                     i1l4596:
 13016                           
 13017                           ;Wireless.c: 42: else {
 13018                           ;Wireless.c: 43: Write1USART(character);
 13019  00362E  5015               	movf	_character,w,c	;volatile
 13020  003630  ECCF  F01B         	call	_Write1USART
 13021  003634  D000               	goto	i1l632
 13022  003636                     i1l632:
 13023  003636  0012               	return		;funcret
 13024  003638                     __end_of_WirelessTx_ISR:
 13025                           	opt stack 0
 13026                           pclatu	equ	0xFFB
 13027                           pclath	equ	0xFFA
 13028                           tblptru	equ	0xFF8
 13029                           tblptrh	equ	0xFF7
 13030                           tblptrl	equ	0xFF6
 13031                           tablat	equ	0xFF5
 13032                           prodh	equ	0xFF4
 13033                           prodl	equ	0xFF3
 13034                           intcon	equ	0xFF2
 13035                           intcon2	equ	0xFF1
 13036                           intcon3	equ	0xFF0
 13037                           postinc0	equ	0xFEE
 13038                           fsr0h	equ	0xFEA
 13039                           fsr0l	equ	0xFE9
 13040                           wreg	equ	0xFE8
 13041                           fsr1h	equ	0xFE2
 13042                           fsr1l	equ	0xFE1
 13043                           bsr	equ	0xFE0
 13044                           indf2	equ	0xFDF
 13045                           postinc2	equ	0xFDE
 13046                           postdec2	equ	0xFDD
 13047                           fsr2h	equ	0xFDA
 13048                           fsr2l	equ	0xFD9
 13049                           status	equ	0xFD8
 13050                           
 13051 ;; *************** function _Write1USART *****************
 13052 ;; Defined at:
 13053 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  data            1    wreg     unsigned char 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  data            1    0[COMRAM] unsigned char 
 13058 ;; Return value:  Size  Location     Type
 13059 ;;		None               void
 13060 ;; Registers used:
 13061 ;;		wreg
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;Total ram usage:        1 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; Hardware stack levels required when called:    3
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_WirelessTx_ISR
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           	psect	text102
 13082  00379E                     __ptext102:
 13083                           	opt stack 0
 13084  00379E                     _Write1USART:
 13085                           	opt stack 19
 13086                           
 13087                           ;incstack = 0
 13088                           ;Write1USART@data stored from wreg
 13089  00379E  6E25               	movwf	Write1USART@data,c
 13090  0037A0  ACAC               	btfss	4012,6,c	;volatile
 13091  0037A2  D005               	goto	i1l4408
 13092  0037A4  90AC               	bcf	4012,0,c	;volatile
 13093  0037A6  A214               	btfss	_USART1_Status,1,c
 13094  0037A8  D002               	goto	i1l4408
 13095  0037AA  80AC               	bsf	4012,0,c	;volatile
 13096  0037AC  D000               	goto	i1l4408
 13097  0037AE                     i1l4408:
 13098  0037AE  C025  FFAD         	movff	Write1USART@data,4013	;volatile
 13099  0037B2  0012               	return		;funcret
 13100  0037B4                     __end_of_Write1USART:
 13101                           	opt stack 0
 13102                           pclatu	equ	0xFFB
 13103                           pclath	equ	0xFFA
 13104                           tblptru	equ	0xFF8
 13105                           tblptrh	equ	0xFF7
 13106                           tblptrl	equ	0xFF6
 13107                           tablat	equ	0xFF5
 13108                           prodh	equ	0xFF4
 13109                           prodl	equ	0xFF3
 13110                           intcon	equ	0xFF2
 13111                           intcon2	equ	0xFF1
 13112                           intcon3	equ	0xFF0
 13113                           postinc0	equ	0xFEE
 13114                           fsr0h	equ	0xFEA
 13115                           fsr0l	equ	0xFE9
 13116                           wreg	equ	0xFE8
 13117                           fsr1h	equ	0xFE2
 13118                           fsr1l	equ	0xFE1
 13119                           bsr	equ	0xFE0
 13120                           indf2	equ	0xFDF
 13121                           postinc2	equ	0xFDE
 13122                           postdec2	equ	0xFDD
 13123                           fsr2h	equ	0xFDA
 13124                           fsr2l	equ	0xFD9
 13125                           status	equ	0xFD8
 13126                           
 13127 ;; *************** function _GetCharTxBuf *****************
 13128 ;; Defined at:
 13129 ;;		line 15 in file "Wireless.c"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;		None
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;  ch              1    7[COMRAM] unsigned char 
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  1    wreg      unsigned char 
 13136 ;; Registers used:
 13137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13147 ;;Total ram usage:        2 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:    4
 13150 ;; This function calls:
 13151 ;;		i1___awmod
 13152 ;; This function is called by:
 13153 ;;		_WirelessTx_ISR
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text103
 13158  0033A2                     __ptext103:
 13159                           	opt stack 0
 13160  0033A2                     _GetCharTxBuf:
 13161                           	opt stack 18
 13162                           
 13163                           ;Wireless.c: 16: unsigned char ch;
 13164                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 13165                           
 13166                           ;incstack = 0
 13167  0033A2  5017               	movf	_get_Tx_index,w,c
 13168  0033A4  0D01               	mullw	1
 13169  0033A6  0EB2               	movlw	low _Tx_buffer
 13170  0033A8  24F3               	addwf	prodl,w,c
 13171  0033AA  6ED9               	movwf	fsr2l,c
 13172  0033AC  0E00               	movlw	high _Tx_buffer
 13173  0033AE  20F4               	addwfc	prodh,w,c
 13174  0033B0  6EDA               	movwf	fsr2h,c
 13175  0033B2  50DF               	movf	indf2,w,c
 13176  0033B4  6E2C               	movwf	GetCharTxBuf@ch,c
 13177                           
 13178                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 20;
 13179  0033B6  C017  F02B         	movff	_get_Tx_index,??_GetCharTxBuf
 13180  0033BA  0E01               	movlw	1
 13181  0033BC  262B               	addwf	??_GetCharTxBuf,f,c
 13182  0033BE  502B               	movf	??_GetCharTxBuf,w,c
 13183  0033C0  6E25               	movwf	i1___awmod@dividend,c
 13184  0033C2  6A26               	clrf	i1___awmod@dividend+1,c
 13185  0033C4  0E00               	movlw	0
 13186  0033C6  6E28               	movwf	i1___awmod@divisor+1,c
 13187  0033C8  0E14               	movlw	20
 13188  0033CA  6E27               	movwf	i1___awmod@divisor,c
 13189  0033CC  EC19  F016         	call	i1___awmod	;wreg free
 13190  0033D0  5025               	movf	?i1___awmod,w,c
 13191  0033D2  6E17               	movwf	_get_Tx_index,c
 13192                           
 13193                           ;Wireless.c: 21: return(ch);
 13194  0033D4  502C               	movf	GetCharTxBuf@ch,w,c
 13195  0033D6  D000               	goto	i1l621
 13196  0033D8                     i1l621:
 13197  0033D8  0012               	return		;funcret
 13198  0033DA                     __end_of_GetCharTxBuf:
 13199                           	opt stack 0
 13200                           pclatu	equ	0xFFB
 13201                           pclath	equ	0xFFA
 13202                           tblptru	equ	0xFF8
 13203                           tblptrh	equ	0xFF7
 13204                           tblptrl	equ	0xFF6
 13205                           tablat	equ	0xFF5
 13206                           prodh	equ	0xFF4
 13207                           prodl	equ	0xFF3
 13208                           intcon	equ	0xFF2
 13209                           intcon2	equ	0xFF1
 13210                           intcon3	equ	0xFF0
 13211                           postinc0	equ	0xFEE
 13212                           fsr0h	equ	0xFEA
 13213                           fsr0l	equ	0xFE9
 13214                           wreg	equ	0xFE8
 13215                           fsr1h	equ	0xFE2
 13216                           fsr1l	equ	0xFE1
 13217                           bsr	equ	0xFE0
 13218                           indf2	equ	0xFDF
 13219                           postinc2	equ	0xFDE
 13220                           postdec2	equ	0xFDD
 13221                           fsr2h	equ	0xFDA
 13222                           fsr2l	equ	0xFD9
 13223                           status	equ	0xFD8
 13224                           
 13225 ;; *************** function i1___awmod *****************
 13226 ;; Defined at:
 13227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  dividend        2    0[COMRAM] int 
 13230 ;;  divisor         2    2[COMRAM] int 
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;  __awmod         1    5[COMRAM] unsigned char 
 13233 ;;  __awmod         1    4[COMRAM] unsigned char 
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  2    0[COMRAM] int 
 13236 ;; Registers used:
 13237 ;;		wreg, status,2, status,0
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;Total ram usage:        6 bytes
 13248 ;; Hardware stack levels used:    1
 13249 ;; Hardware stack levels required when called:    3
 13250 ;; This function calls:
 13251 ;;		Nothing
 13252 ;; This function is called by:
 13253 ;;		_GetCharTxBuf
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           	psect	text104
 13258  002C32                     __ptext104:
 13259                           	opt stack 0
 13260  002C32                     i1___awmod:
 13261                           	opt stack 18
 13262                           
 13263                           ;incstack = 0
 13264  002C32  0E00               	movlw	0
 13265  002C34  6E2A               	movwf	i1___awmod@sign,c
 13266  002C36  AE26               	btfss	i1___awmod@dividend+1,7,c
 13267  002C38  D007               	goto	i1l4132
 13268  002C3A  6C25               	negf	i1___awmod@dividend,c
 13269  002C3C  1E26               	comf	i1___awmod@dividend+1,f,c
 13270  002C3E  B0D8               	btfsc	status,0,c
 13271  002C40  2A26               	incf	i1___awmod@dividend+1,f,c
 13272  002C42  0E01               	movlw	1
 13273  002C44  6E2A               	movwf	i1___awmod@sign,c
 13274  002C46  D000               	goto	i1l4132
 13275  002C48                     i1l4132:
 13276  002C48  AE28               	btfss	i1___awmod@divisor+1,7,c
 13277  002C4A  D005               	goto	i1l4136
 13278  002C4C  6C27               	negf	i1___awmod@divisor,c
 13279  002C4E  1E28               	comf	i1___awmod@divisor+1,f,c
 13280  002C50  B0D8               	btfsc	status,0,c
 13281  002C52  2A28               	incf	i1___awmod@divisor+1,f,c
 13282  002C54  D000               	goto	i1l4136
 13283  002C56                     i1l4136:
 13284  002C56  5027               	movf	i1___awmod@divisor,w,c
 13285  002C58  1028               	iorwf	i1___awmod@divisor+1,w,c
 13286  002C5A  B4D8               	btfsc	status,2,c
 13287  002C5C  D01D               	goto	i1l4152
 13288  002C5E  0E01               	movlw	1
 13289  002C60  6E29               	movwf	i1___awmod@counter,c
 13290  002C62  D005               	goto	i1l4142
 13291  002C64                     i1l4140:
 13292  002C64  90D8               	bcf	status,0,c
 13293  002C66  3627               	rlcf	i1___awmod@divisor,f,c
 13294  002C68  3628               	rlcf	i1___awmod@divisor+1,f,c
 13295  002C6A  2A29               	incf	i1___awmod@counter,f,c
 13296  002C6C  D000               	goto	i1l4142
 13297  002C6E                     i1l4142:
 13298  002C6E  BE28               	btfsc	i1___awmod@divisor+1,7,c
 13299  002C70  D002               	goto	i1l4144
 13300  002C72  D7F8               	goto	i1l4140
 13301  002C74  D000               	goto	i1l4144
 13302  002C76                     i1l4144:
 13303  002C76  5027               	movf	i1___awmod@divisor,w,c
 13304  002C78  5C25               	subwf	i1___awmod@dividend,w,c
 13305  002C7A  5028               	movf	i1___awmod@divisor+1,w,c
 13306  002C7C  5826               	subwfb	i1___awmod@dividend+1,w,c
 13307  002C7E  A0D8               	btfss	status,0,c
 13308  002C80  D005               	goto	i1l4148
 13309  002C82  5027               	movf	i1___awmod@divisor,w,c
 13310  002C84  5E25               	subwf	i1___awmod@dividend,f,c
 13311  002C86  5028               	movf	i1___awmod@divisor+1,w,c
 13312  002C88  5A26               	subwfb	i1___awmod@dividend+1,f,c
 13313  002C8A  D000               	goto	i1l4148
 13314  002C8C                     i1l4148:
 13315  002C8C  90D8               	bcf	status,0,c
 13316  002C8E  3228               	rrcf	i1___awmod@divisor+1,f,c
 13317  002C90  3227               	rrcf	i1___awmod@divisor,f,c
 13318  002C92  2E29               	decfsz	i1___awmod@counter,f,c
 13319  002C94  D7F0               	goto	i1l4144
 13320  002C96  D000               	goto	i1l4152
 13321  002C98                     i1l4152:
 13322  002C98  502A               	movf	i1___awmod@sign,w,c
 13323  002C9A  B4D8               	btfsc	status,2,c
 13324  002C9C  D005               	goto	i1l4156
 13325  002C9E  6C25               	negf	i1___awmod@dividend,c
 13326  002CA0  1E26               	comf	i1___awmod@dividend+1,f,c
 13327  002CA2  B0D8               	btfsc	status,0,c
 13328  002CA4  2A26               	incf	i1___awmod@dividend+1,f,c
 13329  002CA6  D000               	goto	i1l4156
 13330  002CA8                     i1l4156:
 13331  002CA8  C025  F025         	movff	i1___awmod@dividend,?i1___awmod
 13332  002CAC  C026  F026         	movff	i1___awmod@dividend+1,?i1___awmod+1
 13333  002CB0  D000               	goto	i1l1096
 13334  002CB2                     i1l1096:
 13335  002CB2  0012               	return		;funcret
 13336  002CB4                     __end_ofi1___awmod:
 13337                           	opt stack 0
 13338                           pclatu	equ	0xFFB
 13339                           pclath	equ	0xFFA
 13340                           tblptru	equ	0xFF8
 13341                           tblptrh	equ	0xFF7
 13342                           tblptrl	equ	0xFF6
 13343                           tablat	equ	0xFF5
 13344                           prodh	equ	0xFF4
 13345                           prodl	equ	0xFF3
 13346                           intcon	equ	0xFF2
 13347                           intcon2	equ	0xFF1
 13348                           intcon3	equ	0xFF0
 13349                           postinc0	equ	0xFEE
 13350                           fsr0h	equ	0xFEA
 13351                           fsr0l	equ	0xFE9
 13352                           wreg	equ	0xFE8
 13353                           fsr1h	equ	0xFE2
 13354                           fsr1l	equ	0xFE1
 13355                           bsr	equ	0xFE0
 13356                           indf2	equ	0xFDF
 13357                           postinc2	equ	0xFDE
 13358                           postdec2	equ	0xFDD
 13359                           fsr2h	equ	0xFDA
 13360                           fsr2l	equ	0xFD9
 13361                           status	equ	0xFD8
 13362                           
 13363 ;; *************** function _isrHP *****************
 13364 ;; Defined at:
 13365 ;;		line 622 in file "FastBuggy17_Main_Code_EXPERIMENTAL.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;		None
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;		None
 13370 ;; Return value:  Size  Location     Type
 13371 ;;		None               void
 13372 ;; Registers used:
 13373 ;;		wreg, status,2, status,0, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13381 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13382 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13383 ;;Total ram usage:       14 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    2
 13386 ;; This function calls:
 13387 ;;		_MillisecondTimerISR
 13388 ;;		_UltrasoundISR
 13389 ;; This function is called by:
 13390 ;;		Interrupt level 2
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	intcode
 13395  000008                     __pintcode:
 13396                           	opt stack 0
 13397  000008                     _isrHP:
 13398                           	opt stack 18
 13399                           
 13400                           ;incstack = 0
 13401  000008  CFFA F060          	movff	pclath,??_isrHP
 13402  00000C  CFFB F061          	movff	pclatu,??_isrHP+1
 13403  000010  CFE9 F062          	movff	fsr0l,??_isrHP+2
 13404  000014  ED5A  F016         	call	int_func,f	;refresh shadow registers
 13405                           pclatu	equ	0xFFB
 13406                           pclath	equ	0xFFA
 13407                           tblptru	equ	0xFF8
 13408                           tblptrh	equ	0xFF7
 13409                           tblptrl	equ	0xFF6
 13410                           tablat	equ	0xFF5
 13411                           prodh	equ	0xFF4
 13412                           prodl	equ	0xFF3
 13413                           intcon	equ	0xFF2
 13414                           intcon2	equ	0xFF1
 13415                           intcon3	equ	0xFF0
 13416                           postinc0	equ	0xFEE
 13417                           fsr0h	equ	0xFEA
 13418                           fsr0l	equ	0xFE9
 13419                           wreg	equ	0xFE8
 13420                           fsr1h	equ	0xFE2
 13421                           fsr1l	equ	0xFE1
 13422                           bsr	equ	0xFE0
 13423                           indf2	equ	0xFDF
 13424                           postinc2	equ	0xFDE
 13425                           postdec2	equ	0xFDD
 13426                           fsr2h	equ	0xFDA
 13427                           fsr2l	equ	0xFD9
 13428                           status	equ	0xFD8
 13429                           
 13430                           	psect	intcode_body
 13431  002CB4                     __pintcode_body:
 13432                           	opt stack 18
 13433  002CB4                     int_func:
 13434                           	opt stack 18
 13435  002CB4  0006               	pop		; remove dummy address from shadow register refresh
 13436  002CB6  CFEA F063          	movff	fsr0h,??_isrHP+3
 13437  002CBA  CFE1 F064          	movff	fsr1l,??_isrHP+4
 13438  002CBE  CFE2 F065          	movff	fsr1h,??_isrHP+5
 13439  002CC2  CFD9 F066          	movff	fsr2l,??_isrHP+6
 13440  002CC6  CFDA F067          	movff	fsr2h,??_isrHP+7
 13441  002CCA  CFF3 F068          	movff	prodl,??_isrHP+8
 13442  002CCE  CFF4 F069          	movff	prodh,??_isrHP+9
 13443  002CD2  CFF6 F06A          	movff	tblptrl,??_isrHP+10
 13444  002CD6  CFF7 F06B          	movff	tblptrh,??_isrHP+11
 13445  002CDA  CFF8 F06C          	movff	tblptru,??_isrHP+12
 13446  002CDE  CFF5 F06D          	movff	tablat,??_isrHP+13
 13447                           
 13448                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 625: if (INTCONbits.TMR0IF == 1) {
 13449  002CE2  A4F2               	btfss	intcon,2,c	;volatile
 13450  002CE4  D004               	goto	i2l313
 13451                           
 13452                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 626: INTCONbits.TMR0IF = 0;
 13453  002CE6  94F2               	bcf	intcon,2,c	;volatile
 13454                           
 13455                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 628: MillisecondTimerISR();
 13456  002CE8  EC95  F01B         	call	_MillisecondTimerISR	;wreg free
 13457                           
 13458                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 632: }
 13459  002CEC  D006               	goto	i2l316
 13460  002CEE                     i2l313:
 13461                           
 13462                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 640: else if (INTCON3bits.INT3IF == 1) {
 13463  002CEE  A4F0               	btfss	intcon3,2,c	;volatile
 13464  002CF0  D004               	goto	i2l316
 13465                           
 13466                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 641: INTCON3bits.INT3IF = 0;
 13467  002CF2  94F0               	bcf	intcon3,2,c	;volatile
 13468                           
 13469                           ;FastBuggy17_Main_Code_EXPERIMENTAL.c: 643: UltrasoundISR();
 13470  002CF4  EC06  F01A         	call	_UltrasoundISR	;wreg free
 13471  002CF8  D000               	goto	i2l316
 13472  002CFA                     i2l316:
 13473  002CFA  C06D  FFF5         	movff	??_isrHP+13,tablat
 13474  002CFE  C06C  FFF8         	movff	??_isrHP+12,tblptru
 13475  002D02  C06B  FFF7         	movff	??_isrHP+11,tblptrh
 13476  002D06  C06A  FFF6         	movff	??_isrHP+10,tblptrl
 13477  002D0A  C069  FFF4         	movff	??_isrHP+9,prodh
 13478  002D0E  C068  FFF3         	movff	??_isrHP+8,prodl
 13479  002D12  C067  FFDA         	movff	??_isrHP+7,fsr2h
 13480  002D16  C066  FFD9         	movff	??_isrHP+6,fsr2l
 13481  002D1A  C065  FFE2         	movff	??_isrHP+5,fsr1h
 13482  002D1E  C064  FFE1         	movff	??_isrHP+4,fsr1l
 13483  002D22  C063  FFEA         	movff	??_isrHP+3,fsr0h
 13484  002D26  C062  FFE9         	movff	??_isrHP+2,fsr0l
 13485  002D2A  C061  FFFB         	movff	??_isrHP+1,pclatu
 13486  002D2E  C060  FFFA         	movff	??_isrHP,pclath
 13487  002D32  0011               	retfie		f
 13488  002D34                     __end_of_isrHP:
 13489                           	opt stack 0
 13490                           pclatu	equ	0xFFB
 13491                           pclath	equ	0xFFA
 13492                           tblptru	equ	0xFF8
 13493                           tblptrh	equ	0xFF7
 13494                           tblptrl	equ	0xFF6
 13495                           tablat	equ	0xFF5
 13496                           prodh	equ	0xFF4
 13497                           prodl	equ	0xFF3
 13498                           intcon	equ	0xFF2
 13499                           intcon2	equ	0xFF1
 13500                           intcon3	equ	0xFF0
 13501                           postinc0	equ	0xFEE
 13502                           fsr0h	equ	0xFEA
 13503                           fsr0l	equ	0xFE9
 13504                           wreg	equ	0xFE8
 13505                           fsr1h	equ	0xFE2
 13506                           fsr1l	equ	0xFE1
 13507                           bsr	equ	0xFE0
 13508                           indf2	equ	0xFDF
 13509                           postinc2	equ	0xFDE
 13510                           postdec2	equ	0xFDD
 13511                           fsr2h	equ	0xFDA
 13512                           fsr2l	equ	0xFD9
 13513                           status	equ	0xFD8
 13514                           
 13515 ;; *************** function _UltrasoundISR *****************
 13516 ;; Defined at:
 13517 ;;		line 17 in file "Ultrasound.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;		None               void
 13524 ;; Registers used:
 13525 ;;		wreg, status,2, cstack
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13535 ;;Total ram usage:        0 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    1
 13538 ;; This function calls:
 13539 ;;		_ReadTimer1
 13540 ;;		i2_WriteTimer1
 13541 ;; This function is called by:
 13542 ;;		_isrHP
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text106
 13547  00340C                     __ptext106:
 13548                           	opt stack 0
 13549  00340C                     _UltrasoundISR:
 13550                           	opt stack 18
 13551                           
 13552                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 13553                           
 13554                           ;incstack = 0
 13555  00340C  9AF0               	bcf	intcon3,5,c	;volatile
 13556                           
 13557                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 13558  00340E  B0CD               	btfsc	4045,0,c	;volatile
 13559  003410  D009               	goto	i2l391
 13560                           
 13561                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 13562  003412  80CD               	bsf	4045,0,c	;volatile
 13563                           
 13564                           ;Ultrasound.c: 35: WriteTimer1(0);
 13565  003414  0E00               	movlw	0
 13566  003416  6E3F               	movwf	i2WriteTimer1@timer1+1,c
 13567  003418  0E00               	movlw	0
 13568  00341A  6E3E               	movwf	i2WriteTimer1@timer1,c
 13569  00341C  EC13  F01C         	call	i2_WriteTimer1	;wreg free
 13570                           
 13571                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 13572  003420  96F1               	bcf	intcon2,3,c	;volatile
 13573                           
 13574                           ;Ultrasound.c: 37: }
 13575  003422  D00A               	goto	i2l6156
 13576  003424                     i2l391:
 13577                           
 13578                           ;Ultrasound.c: 38: else {
 13579                           ;Ultrasound.c: 39: T1CONbits.TMR1ON = 0;
 13580  003424  90CD               	bcf	4045,0,c	;volatile
 13581                           
 13582                           ;Ultrasound.c: 40: echo_time = ReadTimer1();
 13583  003426  EC1C  F01C         	call	_ReadTimer1	;wreg free
 13584  00342A  C03E  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 13585  00342E  C03F  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 13586                           
 13587                           ;Ultrasound.c: 41: echo_acq_done = 1;
 13588  003432  0E01               	movlw	1
 13589  003434  6E16               	movwf	_echo_acq_done,c
 13590  003436  D000               	goto	i2l6156
 13591  003438                     i2l6156:
 13592                           
 13593                           ;Ultrasound.c: 42: }
 13594                           ;Ultrasound.c: 43: INTCON3bits.INT3IF = 0;
 13595  003438  94F0               	bcf	intcon3,2,c	;volatile
 13596                           
 13597                           ;Ultrasound.c: 44: INTCON3bits.INT3IE = 1;
 13598  00343A  8AF0               	bsf	intcon3,5,c	;volatile
 13599  00343C  0012               	return		;funcret
 13600  00343E                     __end_of_UltrasoundISR:
 13601                           	opt stack 0
 13602                           pclatu	equ	0xFFB
 13603                           pclath	equ	0xFFA
 13604                           tblptru	equ	0xFF8
 13605                           tblptrh	equ	0xFF7
 13606                           tblptrl	equ	0xFF6
 13607                           tablat	equ	0xFF5
 13608                           prodh	equ	0xFF4
 13609                           prodl	equ	0xFF3
 13610                           intcon	equ	0xFF2
 13611                           intcon2	equ	0xFF1
 13612                           intcon3	equ	0xFF0
 13613                           postinc0	equ	0xFEE
 13614                           fsr0h	equ	0xFEA
 13615                           fsr0l	equ	0xFE9
 13616                           wreg	equ	0xFE8
 13617                           fsr1h	equ	0xFE2
 13618                           fsr1l	equ	0xFE1
 13619                           bsr	equ	0xFE0
 13620                           indf2	equ	0xFDF
 13621                           postinc2	equ	0xFDE
 13622                           postdec2	equ	0xFDD
 13623                           fsr2h	equ	0xFDA
 13624                           fsr2l	equ	0xFD9
 13625                           status	equ	0xFD8
 13626                           
 13627 ;; *************** function i2_WriteTimer1 *****************
 13628 ;; Defined at:
 13629 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  timer1          2   25[COMRAM] unsigned int 
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;  WriteTimer1     2   27[COMRAM] struct Timers
 13634 ;; Return value:  Size  Location     Type
 13635 ;;		None               void
 13636 ;; Registers used:
 13637 ;;		None
 13638 ;; Tracked objects:
 13639 ;;		On entry : 0/0
 13640 ;;		On exit  : 0/0
 13641 ;;		Unchanged: 0/0
 13642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13647 ;;Total ram usage:        4 bytes
 13648 ;; Hardware stack levels used:    1
 13649 ;; This function calls:
 13650 ;;		Nothing
 13651 ;; This function is called by:
 13652 ;;		_UltrasoundISR
 13653 ;; This function uses a non-reentrant model
 13654 ;;
 13655                           
 13656                           	psect	text107
 13657  003826                     __ptext107:
 13658                           	opt stack 0
 13659  003826                     i2_WriteTimer1:
 13660                           	opt stack 18
 13661                           
 13662                           ;incstack = 0
 13663  003826  C03E  F040         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 13664  00382A  C03F  F041         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 13665  00382E  C041  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 13666  003832  C040  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 13667  003836  0012               	return		;funcret
 13668  003838                     __end_ofi2_WriteTimer1:
 13669                           	opt stack 0
 13670                           pclatu	equ	0xFFB
 13671                           pclath	equ	0xFFA
 13672                           tblptru	equ	0xFF8
 13673                           tblptrh	equ	0xFF7
 13674                           tblptrl	equ	0xFF6
 13675                           tablat	equ	0xFF5
 13676                           prodh	equ	0xFF4
 13677                           prodl	equ	0xFF3
 13678                           intcon	equ	0xFF2
 13679                           intcon2	equ	0xFF1
 13680                           intcon3	equ	0xFF0
 13681                           postinc0	equ	0xFEE
 13682                           fsr0h	equ	0xFEA
 13683                           fsr0l	equ	0xFE9
 13684                           wreg	equ	0xFE8
 13685                           fsr1h	equ	0xFE2
 13686                           fsr1l	equ	0xFE1
 13687                           bsr	equ	0xFE0
 13688                           indf2	equ	0xFDF
 13689                           postinc2	equ	0xFDE
 13690                           postdec2	equ	0xFDD
 13691                           fsr2h	equ	0xFDA
 13692                           fsr2l	equ	0xFD9
 13693                           status	equ	0xFD8
 13694                           
 13695 ;; *************** function _ReadTimer1 *****************
 13696 ;; Defined at:
 13697 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;		None
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;  timer           2   27[COMRAM] struct Timers
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  2   25[COMRAM] unsigned int 
 13704 ;; Registers used:
 13705 ;;		None
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13715 ;;Total ram usage:        4 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_UltrasoundISR
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text108
 13725  003838                     __ptext108:
 13726                           	opt stack 0
 13727  003838                     _ReadTimer1:
 13728                           	opt stack 18
 13729                           
 13730                           ;incstack = 0
 13731  003838  CFCE F040          	movff	4046,ReadTimer1@timer	;volatile
 13732  00383C  CFCF F041          	movff	4047,ReadTimer1@timer+1	;volatile
 13733  003840  C040  F03E         	movff	ReadTimer1@timer,?_ReadTimer1
 13734  003844  C041  F03F         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 13735  003848  0012               	return		;funcret
 13736  00384A                     __end_of_ReadTimer1:
 13737                           	opt stack 0
 13738                           pclatu	equ	0xFFB
 13739                           pclath	equ	0xFFA
 13740                           tblptru	equ	0xFF8
 13741                           tblptrh	equ	0xFF7
 13742                           tblptrl	equ	0xFF6
 13743                           tablat	equ	0xFF5
 13744                           prodh	equ	0xFF4
 13745                           prodl	equ	0xFF3
 13746                           intcon	equ	0xFF2
 13747                           intcon2	equ	0xFF1
 13748                           intcon3	equ	0xFF0
 13749                           postinc0	equ	0xFEE
 13750                           fsr0h	equ	0xFEA
 13751                           fsr0l	equ	0xFE9
 13752                           wreg	equ	0xFE8
 13753                           fsr1h	equ	0xFE2
 13754                           fsr1l	equ	0xFE1
 13755                           bsr	equ	0xFE0
 13756                           indf2	equ	0xFDF
 13757                           postinc2	equ	0xFDE
 13758                           postdec2	equ	0xFDD
 13759                           fsr2h	equ	0xFDA
 13760                           fsr2l	equ	0xFD9
 13761                           status	equ	0xFD8
 13762                           
 13763 ;; *************** function _MillisecondTimerISR *****************
 13764 ;; Defined at:
 13765 ;;		line 44 in file "MillisecondTimer.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;		None
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;		None
 13770 ;; Return value:  Size  Location     Type
 13771 ;;		None               void
 13772 ;; Registers used:
 13773 ;;		wreg, status,2, status,0, cstack
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;Total ram usage:        0 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    1
 13786 ;; This function calls:
 13787 ;;		i2_WriteTimer0
 13788 ;; This function is called by:
 13789 ;;		_isrHP
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text109
 13794  00372A                     __ptext109:
 13795                           	opt stack 0
 13796  00372A                     _MillisecondTimerISR:
 13797                           	opt stack 18
 13798                           
 13799                           ;MillisecondTimer.c: 46: WriteTimer0(63036);
 13800                           
 13801                           ;incstack = 0
 13802  00372A  0EF6               	movlw	246
 13803  00372C  6E3F               	movwf	i2WriteTimer0@timer0+1,c
 13804  00372E  0E3C               	movlw	60
 13805  003730  6E3E               	movwf	i2WriteTimer0@timer0,c
 13806  003732  EC25  F01C         	call	i2_WriteTimer0	;wreg free
 13807                           
 13808                           ;MillisecondTimer.c: 47: millisecond_COUNT0++;
 13809  003736  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 13810  003738  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 13811                           
 13812                           ;MillisecondTimer.c: 48: millisecond_COUNT1++;
 13813  00373A  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 13814  00373C  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 13815                           
 13816                           ;MillisecondTimer.c: 49: millisecond_COUNT2++;
 13817  00373E  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 13818  003740  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 13819  003742  0012               	return		;funcret
 13820  003744                     __end_of_MillisecondTimerISR:
 13821                           	opt stack 0
 13822                           pclatu	equ	0xFFB
 13823                           pclath	equ	0xFFA
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           intcon2	equ	0xFF1
 13832                           intcon3	equ	0xFF0
 13833                           postinc0	equ	0xFEE
 13834                           fsr0h	equ	0xFEA
 13835                           fsr0l	equ	0xFE9
 13836                           wreg	equ	0xFE8
 13837                           fsr1h	equ	0xFE2
 13838                           fsr1l	equ	0xFE1
 13839                           bsr	equ	0xFE0
 13840                           indf2	equ	0xFDF
 13841                           postinc2	equ	0xFDE
 13842                           postdec2	equ	0xFDD
 13843                           fsr2h	equ	0xFDA
 13844                           fsr2l	equ	0xFD9
 13845                           status	equ	0xFD8
 13846                           
 13847 ;; *************** function i2_WriteTimer0 *****************
 13848 ;; Defined at:
 13849 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;  timer0          2   25[COMRAM] unsigned int 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;  WriteTimer0     2   27[COMRAM] struct Timers
 13854 ;; Return value:  Size  Location     Type
 13855 ;;		None               void
 13856 ;; Registers used:
 13857 ;;		None
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13866 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13867 ;;Total ram usage:        4 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; This function calls:
 13870 ;;		Nothing
 13871 ;; This function is called by:
 13872 ;;		_MillisecondTimerISR
 13873 ;; This function uses a non-reentrant model
 13874 ;;
 13875                           
 13876                           	psect	text110
 13877  00384A                     __ptext110:
 13878                           	opt stack 0
 13879  00384A                     i2_WriteTimer0:
 13880                           	opt stack 18
 13881                           
 13882                           ;incstack = 0
 13883  00384A  C03E  F040         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 13884  00384E  C03F  F041         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 13885  003852  C041  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 13886  003856  C040  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 13887  00385A  0012               	return		;funcret
 13888  00385C                     __end_ofi2_WriteTimer0:
 13889                           	opt stack 0
 13890                           pclatu	equ	0xFFB
 13891                           pclath	equ	0xFFA
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           intcon2	equ	0xFF1
 13900                           intcon3	equ	0xFF0
 13901                           postinc0	equ	0xFEE
 13902                           fsr0h	equ	0xFEA
 13903                           fsr0l	equ	0xFE9
 13904                           wreg	equ	0xFE8
 13905                           fsr1h	equ	0xFE2
 13906                           fsr1l	equ	0xFE1
 13907                           bsr	equ	0xFE0
 13908                           indf2	equ	0xFDF
 13909                           postinc2	equ	0xFDE
 13910                           postdec2	equ	0xFDD
 13911                           fsr2h	equ	0xFDA
 13912                           fsr2l	equ	0xFD9
 13913                           status	equ	0xFD8
 13914                           pclatu	equ	0xFFB
 13915                           pclath	equ	0xFFA
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           intcon	equ	0xFF2
 13923                           intcon2	equ	0xFF1
 13924                           intcon3	equ	0xFF0
 13925                           postinc0	equ	0xFEE
 13926                           fsr0h	equ	0xFEA
 13927                           fsr0l	equ	0xFE9
 13928                           wreg	equ	0xFE8
 13929                           fsr1h	equ	0xFE2
 13930                           fsr1l	equ	0xFE1
 13931                           bsr	equ	0xFE0
 13932                           indf2	equ	0xFDF
 13933                           postinc2	equ	0xFDE
 13934                           postdec2	equ	0xFDD
 13935                           fsr2h	equ	0xFDA
 13936                           fsr2l	equ	0xFD9
 13937                           status	equ	0xFD8
 13938                           
 13939                           	psect	rparam
 13940  0000                     pclatu	equ	0xFFB
 13941                           pclath	equ	0xFFA
 13942                           tblptru	equ	0xFF8
 13943                           tblptrh	equ	0xFF7
 13944                           tblptrl	equ	0xFF6
 13945                           tablat	equ	0xFF5
 13946                           prodh	equ	0xFF4
 13947                           prodl	equ	0xFF3
 13948                           intcon	equ	0xFF2
 13949                           intcon2	equ	0xFF1
 13950                           intcon3	equ	0xFF0
 13951                           postinc0	equ	0xFEE
 13952                           fsr0h	equ	0xFEA
 13953                           fsr0l	equ	0xFE9
 13954                           wreg	equ	0xFE8
 13955                           fsr1h	equ	0xFE2
 13956                           fsr1l	equ	0xFE1
 13957                           bsr	equ	0xFE0
 13958                           indf2	equ	0xFDF
 13959                           postinc2	equ	0xFDE
 13960                           postdec2	equ	0xFDD
 13961                           fsr2h	equ	0xFDA
 13962                           fsr2l	equ	0xFD9
 13963                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         112
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      66
    BANK0           160     82     146
    BANK1           256     30      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 

    sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 


Critical Paths under _main in COMRAM

    _main->_CalculateSensorStatuses
    _main->_Delay10KTCYx
    _main->_DisplaySensorStatuses
    _main->_NormaliseSensorReadings
    _SendLineMode->_FlushTxBuf
    _SendLineMode->_PutCharTxBuf
    _GenerateCalibration->_Delay10KTCYx
    _SendThreshold->_FlushTxBuf
    _SendThreshold->_PutCharTxBuf
    _SendStatus->_FlushTxBuf
    _SendStatus->_PutCharTxBuf
    _SendOffsets->_FlushTxBuf
    _SendOffsets->_PutCharTxBuf
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_CalculateSensorStatuses
    _CalibrateThreshold->_DisplaySensorStatuses
    _CalibrateThreshold->_NormaliseSensorReadings
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_FlushRxBuf
    _ConfigureWireless->_FlushTxBuf
    _ConfigureWireless->_Open1USART
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_OpenTimer1
    _ConfigureTimer0->_OpenTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _CalculateSensorSums->___lbtoft
    _pow->___lbtoft
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___fttol->___lbtoft
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___awtoft
    ___ftadd->___awtoft

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendLineMode->_PutCharTxBuf
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_SendOffsets
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _SendThreshold->_PutCharTxBuf
    _SendStatus->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_DisplaySensorStatuses
    _CalibrateThreshold->_NormaliseSensorReadings
    _CalibrateThreshold->_ReadADC
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigureADC->_OpenADC
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_CalculateSensorSums
    _CalculateSensorSums->_pow

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   95780
                                             22 BANK1      8     8      0
                    _BusyDistanceAcq
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                        _ReadMillis0
                       _ResetMillis0
                       _SendLineMode
                        _SendOffsets
                         _SendStatus
                      _SendThreshold
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1040
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1260
                                             22 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     520
                                             20 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     520
                                             20 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2     849
                                             21 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0       0
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0    6817
                                             29 BANK0      3     3      0
                          _FlashLEDS
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadIntEEPROM                                        7     5      2     517
                                             16 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     384
                                             16 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM                                           2     0      2     288
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0    5755
                                             26 BANK0      3     3      0
                   _CalibrateOffsets
                 _CalibrateThreshold
                       _Delay10KTCYx
                          _FlashLEDS
                         _PB1pressed
                        _SendOffsets
                         _SendStatus
                      _SendThreshold
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteIntEEPROM                                       4     0      4     898
                                             17 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteCharEEPROM                                      3     0      3     706
                                             17 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteEEPROM                                          3     0      3     514
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _SendThreshold                                        4     2      2     945
                                             21 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendStatus                                           1     1      0     784
                                             21 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1075
                                             21 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (2) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PutCharTxBuf                                         2     2      0     654
                                             29 COMRAM     1     1      0
                                             20 BANK0      1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     623
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0       0
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (2) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadMillis2                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             29 COMRAM     1     1      0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   2     2      0     963
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     161
                                             29 COMRAM     1     1      0
                                             14 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             29 COMRAM     1     1      0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                              4     4      0     322
                                             29 COMRAM     1     1      0
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0     192
                                             16 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             15 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             29 COMRAM     1     1      0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     638
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     440
                                             29 COMRAM     1     1      0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _FlushTxBuf                                           1     1      0      99
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             18 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             29 COMRAM     1     1      0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSums                                  5     5      0   72079
                                             17 BANK1      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   64988
                                              0 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   21117
                                             64 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   35220
                                             73 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     489
                                             64 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9118
                                             65 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     582
                                             14 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     631
                                             40 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     718
                                             14 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2529
                                             55 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9459
                                             52 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     622
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3968
                                             25 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4541
                                             52 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4225
                                             40 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     260
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2900
                                             22 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2523
                                             29 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2427
                                             29 COMRAM     1     1      0
                                             22 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2291
                                             29 COMRAM     1     1      0
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2260
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      96
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     309
                                              0 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     178
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      47
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _ReadADC
       _SetADCChannel
         _SetChanADC
     _Delay10KTCYx
     _FlashLEDS
       _Delay10KTCYx
     _PB1pressed
       _ReadMillis2
       _ResetMillis2
     _SendOffsets
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendThreshold
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _FlashLEDS
       _Delay10KTCYx
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _ReadADC
         _SetADCChannel
           _SetChanADC
       _Delay10KTCYx
       _FlashLEDS
         _Delay10KTCYx
       _PB1pressed
         _ReadMillis2
         _ResetMillis2
       _SendOffsets
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendThreshold
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadMillis0
   _ResetMillis0
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendThreshold
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1E      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      92       5       91.3%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      42       1       69.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106      32        0.0%
DATA                 0      0     106       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 12 21:49:36 2017

             __size_of_WriteEEPROM 0040                       ___altoft@exp 009F  
             __end_of_GetCharTxBuf 33DA                      ___altoft@sign 00A0  
              WriteCharEEPROM@data 0073                                 bsr 000FE0  
              ___wmul@multiplicand 0070                        __CFG_BORV$0 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                __end_of_GetDistance 37DC  
                     ___ftadd@exp1 0093                       ___ftadd@exp2 0092  
                     __CFG_CP6$OFF 000000                       __CFG_CP7$OFF 000000  
                     ___ftadd@sign 0091               LoadCalibration@index 007F  
                              l200 388A                                l205 2FE6  
                              l310 2C30                                l224 2A56  
                              l234 2886                                l219 2616  
                              l244 312C                                l229 2902  
                              l256 32C0                                l257 32F2  
                              l194 2370                                l346 12E0  
                              l283 2E9C                                l267 3244  
                              l268 3276                                l710 2E24  
                              l651 387A                                l571 322C  
                              l491 279A                                l740 3674  
                              l812 34DC                                l645 3610  
                              l581 3464                                l742 367E  
                              l814 34F2                                l718 37C6  
                              l399 389A                                l815 34F4  
                              l568 3208                                l592 3044  
                              l569 3238                                l843 36F0  
                              l579 346C                                l595 386A  
                              l844 36F2                                l766 364E  
                              l871 2EE6                                l688 38D4  
                              l873 2EF2                                l890 33A0  
                              l874 2EF4                                l867 2ECA  
                              l788 369A                                l876 2F10  
                              l789 369C                                l987 2B9A  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                              _PR4 000F77                       __CFG_CPD$OFF 000000  
           __size_of_SetDCMotorPID 00B6               __size_of_WriteTimer0 0012  
             __size_of_WriteTimer1 0012              CalibrateOffsets@index 0072  
                              _exp 158A                                _log 1BEA  
                              _pow 17B2                      _SetADCChannel 2284  
                     ___awmod@sign 0073                                prod 000FF3  
                              wreg 000FE8                         _TXSTA1bits 000FAC  
      __end_of_CalculateSensorSums 2A58                       __CFG_MODE$MC 000000  
        ??_CalculateSensorStatuses 006E                        ?_PB1pressed 0025  
                  ReadTimer1@timer 0040                  main@line_mode_ptr 011B  
                      ?_PB2pressed 0025                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 007F                         _Delay1TCYx 38E4  
                     ___ftdiv@sign 0084                       __CFG_WDT$OFF 000000  
                             l1120 38E6                               l1122 38EE  
                             l1115 36D8                               l1212 1F7A  
                             l1108 31F8                               l1223 1F42  
                             l1320 1E5A                               l1252 1374  
                             l1316 30E4                               l1309 3490  
                             l1253 1588                               l1502 29B0  
                             l1256 13AE                               l1096 284E  
                             l1258 13D8                               l1506 2090  
                             l1267 14BC                               l1356 3522  
                             l1284 1BE8                               l1276 14E6  
                             l1524 1D28                               l1460 194A  
                             l1293 26E4                               l1287 1BB0  
                             l1464 193E                               l1482 17B0  
                             l1299 1AA6                               l5012 2B26  
                             l1389 2DAE                               l1485 1660  
                             l5102 19B0                               l5014 2B38  
                             l1494 218C                               l1486 17A4  
                             l5040 13CE                               l5120 1A20  
                             l1496 2180                               l5050 1410  
                             l5034 13BC                               l5130 1A64  
                             l5060 1460                               l5028 1382  
                             l5124 1A3C                               l5116 1A00  
                             l5220 1DEC                               l5300 25AC  
                             l6100 324E                               l5070 14AC  
                             l5062 146C                               l5134 1A80  
                             l5126 1A44                               l5222 1DF4  
                             l5230 1E2A                               l6030 29BE  
                             l5150 27CC                               l5056 1440  
                             l5216 1DD8                               l5312 25FA  
                             l5304 25B6                               l5320 30EA  
                             l6112 3272                               l6200 2734  
                             l5058 1450                               l5234 1E48  
                             l5226 1E0A                               l6042 2A50  
                             l6034 29C8                               l5314 2610  
                             l5330 36C2                               l5170 2844  
                             l5162 281E                               l5154 27E0  
                             l5146 27BA                               l6130 2BE0  
                             l6122 2BBA                               l6060 2876  
                             l6052 285E                               l5412 1B0C  
                             l5076 1512                               l5068 149C  
                             l5228 1E1C                               l5308 25BE  
                             l5324 30F2                               l5156 27EE  
                             l6108 326C                               l6204 2770  
                             l6300 110C                               l5406 1AD2  
                             l5086 1562                               l5182 269C  
                             l5246 2938                               l5158 27F8  
                             l5166 282E                               l6126 2BD6  
                             l6072 289A                               l6056 286A  
                             l6048 2852                               l5432 1B6E  
                             l5408 1AF8                               l5096 1976  
                             l5272 2F82                               l5600 3072  
                             l6082 28B4                               l5442 1BC2  
                             l5450 30BA                               l5098 199C  
                             l5178 265A                               l5530 203E  
                             l5514 1FF6                               l5506 1F90  
                             l5290 2554                               l6084 28F6  
                             l6076 28A6                               l6068 288E  
                             l5188 26E0                               l5532 2082  
                             l5700 1C2A                               l5276 2F8A  
                             l6180 32F6                               l6324 1164  
                             l6308 1122                               l5462 31D0  
                             l5198 1D54                               l5526 2028  
                             l5294 2590                               l5286 254C  
                             l5622 2A7A                               l5606 3336  
                             l6342 11A6                               l6318 1154  
                             l5480 20CC                               l5384 34A2  
                             l5296 25A6                               l5632 2ADC  
                             l5616 2A5A                               l6344 11AC  
                             l6280 10CA                               l4930 1E8C  
                             l5722 15F0                               l5394 34C2  
                             l5634 2AEA                               l5626 2A84  
                             l5642 2F14                               l6290 10EC  
                             l4940 1F22                               l4932 1E9C  
                             l5484 20E0                               l5716 15AC  
                             l5388 34AA                               l5564 32E8  
                             l5556 32CA                               l6372 126C  
                             ?_exp 00A9                               ?_log 00A0  
                             l4942 1F32                               l4934 1ECE  
                             l4926 1E76                               l5750 1774  
                             l5902 17F4                               l5582 2E48  
                             l5574 2E2E                               l5646 2F6E  
                             l6198 26FA                               l6374 1284  
                             l6286 10DA                               l5680 2D3A  
                             l5496 21DC                               l5488 20FE  
                             l5728 162A                               l5920 18B6  
                             l4960 228A                               l5568 32EE  
                             l6376 128C                               l6392 12DA  
                             l4954 1F6C                               l4938 1EF0  
                             l5682 2D4A                               l5498 226A  
                             l5746 1762                               l4970 22B2  
                             l4962 2292                               l5578 2E3E  
                             l5594 3056                               l5666 344C  
                             l6394 12E6                               l6378 1292  
                             l6386 12BE                               l4948 1F4E  
                             l5916 188E                               l5908 1816  
                             l5828 3658                               l5860 2ECE  
                             l5852 2EBA                               l4980 22DA  
                             l4972 22BA                               l4964 229A  
                             l5940 2474                               l6396 12FE  
                             l5694 1BFC                               l5774 34E0  
                             l4990 2302                               l4982 22E2  
                             l4974 22C2                               l4966 22A2  
                             l5872 2EEA                               l5864 2ED6  
                             l5856 2EC2                               l5848 2EB0  
                             l4984 22EA                               l4976 22CA  
                             l4968 22AA                               l5960 24F4  
                             l5944 2484                               l5936 2468  
                             l4986 22F2                               l4978 22D2  
                             l4994 230A                               l5954 24D8  
                             l5868 2EDE                               l4988 22FA  
                             l5964 2500                               l5948 248E  
                             l5992 35F8                               l5988 35F0  
                             ?_pow 0100                               _LATE 000F8D  
                             _LATJ 000F91                               u4401 198C  
                             u5050 32DE                               u4171 1322  
                             u5300 1636                               u4181 1340  
                             u5205 3138                               u4531 1D40  
                             u4620 296A                               u4381 1962  
                             u4550 1D7A                               u4630 3886  
                             u5290 1634                               u4555 1D70  
                             u5195 317C                               u4628 296E  
                             u4830 3876                               u5570 1870  
                             u4851 1ABE                               u4780 38D0  
                             u4764 311C                               u4765 3116  
                             u4950 20F0                               u4871 1AE8  
                             u5690 3262                               u5770 2748  
                             u5790 3896                               u4990 1FC2  
                             u5957 36C8                               u4998 1FC6  
                  _BusyDistanceAcq 388C                               _TMR2 000FCC  
        __size_of_ConfigureBuggyIO 001A                               _main 103C  
         __end_of_EnableSensorLEDS 3944            _NormaliseSensorReadings 2F7E  
                     ___ftpack@arg 006E                       ___ftpack@exp 0071  
           __end_of_WirelessTx_ISR 3638                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             exp@x 00A9                               log@x 00A0  
           __size_ofi2_WriteTimer0 0012             __size_ofi2_WriteTimer1 0012  
                             pclat 000FFA                               pow@x 0100  
                             pow@y 0103                               prodh 000FF4  
                             prodl 000FF3                     _ReadCharEEPROM 385C  
                             start 00EC                      __CFG_IESO$OFF 000000  
              _ConfigureInterrupts 359E                      _BusySensorAcq 387C  
     __end_of_CalculateSensorError 2904                      _ReadIntEEPROM 2FE8  
             __end_of_EnableMotors 3954                      __CFG_MCLRE$ON 000000  
                     ___ftmul@cntr 0086                       ___param_bank 000010  
                     ___ftmul@sign 0087                    __end_of_BusyADC 38D6  
                  __end_of_ReadADC 37C8                      ??_ReadMillis0 0042  
                    ??_ReadMillis2 0042                    __end_of_OpenADC 2E28  
                     ___fttol@exp1 0096                              ??_exp 0043  
                            ??_log 0043                       ___fttol@lval 0092  
                            ??_pow 0043                      ??_SetDCMotorL 0042  
                    ??_SetDCMotorR 0042              _DisplaySensorStatuses 30E6  
                    __CFG_WAIT$OFF 000000                    __end_of_StartTx 392A  
                   _ReadEchoLength 3904                              ?_main 0025  
                            _EEADR 000FA9                    __end_of___ftadd 158A  
                  __end_of___awmod 2850                    __end_of___ftdiv 1BEA  
                  __end_of___ftneg 349E                    __end_of___ftmul 1AA8  
                            _T0CON 000FD5                              _T1CON 000FCD  
                  __end_of___ftsub 30E6                    __end_of___fttol 1E5C  
                            _T2CON 000FCA                              i1l324 00A6  
                            i1l319 009A                              i1l194 245A  
                            i1l621 33D8                              i1l632 3636  
                            i2l313 2CEE                              i2l316 2CFA  
                            i1l718 38AA                     ?_SetADCChannel 0025  
                            i2l391 3424                      _UltrasoundISR 340C  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                   PutCharTxBuf@ch 0074                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TRISG 000F98                              _TRISJ 000F9A  
             ?_ConfigureInterrupts 0025              __size_of_Delay10KTCYx 001C  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
                    __CFG_WRT5$OFF 000000                       ___lltoft@exp 0042  
                    __CFG_WRT6$OFF 000000                      __CFG_WRT7$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                   __CFG_EBTR5$OFF 000000                     __CFG_EBTR6$OFF 000000  
                   __CFG_EBTR7$OFF 000000             WriteCharEEPROM@address 0071  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     i1___awmod@sign 002A  
                   __CFG_EBTRB$OFF 000000                      ___awtoft@sign 0042  
               __size_ofi1_ReadADC 0010                              _floor 2092  
                            _isrHP 0008                              _ldexp 1F7C  
                            _isrLP 0018                              _frexp 2904  
                            _errno 00DC                      ___ftpack@sign 0072  
                       _ConvertADC 394C                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              pow@yi 010D  
                       _ReadEEPROM 343E             __end_of_ReadCharEEPROM 386C  
                            status 000FD8                    ?_WirelessTx_ISR 0025  
               __size_ofi1___awmod 0082                      _SetDCMotorPID 26E6  
                   ?_BusySensorAcq 0025                        exp@exponent 00AF  
                   ?_ReadIntEEPROM 0070                         _FlushRxBuf 35EC  
                  _ConfigureTimer0 3772                    _ConfigureTimer1 3744  
                  _ConfigureTimer2 392A                        ldexp@newexp 00A3  
                       _FlushTxBuf 349E                    __initialization 3524  
                 ?_LoadCalibration 0025                        log@exponent 00A3  
                      _GetDistance 37C8                 main@sensor_sum_ptr 0119  
                     __end_of_main 130C                         _ReadTimer1 3838  
              __size_of_PB1pressed 003E                __size_of_PB2pressed 003E  
                     _Delay10KTCYx 36BE                      ??_SendOffsets 0077  
           __end_of_ReadEchoLength 390E            __size_of_WriteIntEEPROM 0032  
                       _Open1USART 2E9E                   __end_of_OpenPWM4 3680  
                 __end_of_OpenPWM5 365C                             ??_main 0043  
             __end_of_ConfigureADC 37F0                      ___fttol@sign1 0091  
                   ?_UltrasoundISR 0025                      i2_WriteTimer0 384A  
             __end_of_ConfigurePWM 38E4                      i2_WriteTimer1 3826  
                    __activetblptr 000003                __end_of_ReadMillis0 3904  
              __end_of_ReadMillis2 3922              ??_ConfigureInterrupts 0042  
               __size_of_FlashLEDS 0028                         _SetChanADC 36F6  
              _ConfigureUltrasound 3576        __size_of_CalibrateThreshold 0050  
          __end_of_BusyDistanceAcq 389C                __end_of_SetDCMotorL 38C8  
              __end_of_SetDCMotorR 38BA              __end_of_DisableMotors 3958  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                  ReadEEPROM@address 006E  
                           ?_floor 00A1                             ?_isrHP 0025  
                           ?_ldexp 00A0                             ?_isrLP 0025  
                           ?_frexp 006E                   __end_of___altoft 2B9C  
                           _ADRESH 000FC4                             _EEADRH 000FAA  
                           _ADRESL 000FC3                             _EEDATA 000FA8  
                    ??_SetUnipolar 0042                        ?_Delay1TCYx 0025  
                           _CCPR4L 000F74                             _CCPR5L 000F71  
                           _EECON2 000FA7                    i1_SetADCChannel 2372  
                 __end_of___awtoft 31FA                   __end_of___ftpack 1F7C  
        ??_NormaliseSensorReadings 006E                   __end_of___lbtoft 3524  
                       _SendStatus 3330                   __end_of___lltoft 2DB0  
                           i1l1096 2CB2                             i1l4140 2C64  
                           i1l4132 2C48                             i1l4142 2C6E  
                           i1l4144 2C76                             i1l4152 2C98  
                           i1l4136 2C56                             i1l4156 2CA8  
                           i1l4148 2C8C                    __CFG_BBSIZ$BB2K 000000  
                           i1l4408 37AE                             i1l4700 23E6  
                           i1l4702 23EE                             i1l4706 23F6  
                           i1l4740 0092                             i1l4680 2396  
                           i1l4672 2376                         _OpenTimer0 3680  
                           i1l4690 23BE                             i1l4682 239E  
                           i1l4674 237E                         _OpenTimer1 34CC  
                       _OpenTimer2 36DA                             i1l4596 362E  
                           i1l4692 23C6                             i1l4684 23A6  
                           i1l4676 2386                             i1l4694 23CE  
                           i1l4686 23AE                             i1l4678 238E  
                           i1l4696 23D6                             i1l4688 23B6  
                           i1l4698 23DE                             i2l6156 3438  
                           _RCSTA1 000FAB           GenerateCalibration@index 007C  
                           _SPBRG1 000FAF                    ?_ReadCharEEPROM 0070  
               __size_of_SetDCPWM4 0044                 __size_of_SetDCPWM5 0044  
                 _CalibrateOffsets 2E28                     ?_SetDCMotorPID 0076  
                        ??_BusyADC 0042                             _TXREG1 000FAD  
                        ??_ReadADC 0070                             _TXSTA1 000FAC  
             ?_ConfigureUltrasound 0072                _SetDirectionForward 3938  
                        ??_OpenADC 0070             CalculateSensorSums@sum 0114  
            __size_of_GetCharTxBuf 0038         _sensor_readings_normalised 00C6  
                           _BusyTx 386C                     __CFG_XINST$OFF 000000  
                ?_SetReverseMotorL 0025                             ___ftge 2618  
                        ??_StartTx 0042                  __end_ofi1_ReadADC 38AC  
                           ___wmul 336A                _sensor_readings_raw 00D0  
           ?_DisplaySensorStatuses 006E                          ??___ftadd 008E  
                        ??___awmod 0042                          ??___ftdiv 007C  
                        ??___ftneg 0042                          ??___ftmul 007F  
                        ??___ftsub 0043                          ??___fttol 008C  
                 OpenTimer0@config 0042                 ??_SetReverseMotorL 0042  
                 OpenTimer1@config 0042                    ?_ReadEchoLength 006E  
                 OpenTimer2@config 0042                             clear_0 352A  
                           clear_1 3536                             clear_2 3542  
                  ___awmod@divisor 0070                    ??_SetADCChannel 0043  
                   ?i2_WriteTimer0 003E                     ?i2_WriteTimer1 003E  
                  ___awmod@counter 0072              ReadCharEEPROM@address 0070  
                    ?_SendLineMode 0075           __size_of_WriteCharEEPROM 0012  
                           floor@i 00A4                             floor@x 00A1  
            ___ftmul@f3_as_product 0083                  __end_ofi1___awmod 2CB4  
             ?_SetDirectionForward 0025                __end_of_SendOffsets 2AFA  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
            WriteIntEEPROM@address 0071               _CalculateSensorError 2850  
                      ?_ConvertADC 0025                       _GetCharTxBuf 33A2  
          __end_of_ConfigureTimer0 3788            __end_of_ConfigureTimer1 375C  
                 __end_ofexp@coeff 101F            __end_of_ConfigureTimer2 3932  
                 _ConfigureBuggyIO 3710                   __end_oflog@coeff 103A  
                      ?_ReadEEPROM 006E                         __accesstop 0060  
          __end_of__initialization 3548                         ___altoft@c 0097  
            __size_of_EnableMotors 0004                    ??_BusySensorAcq 0042  
                       ___ftadd@f1 0088                         ___ftadd@f2 008B  
               _millisecond_COUNT0 000D                 _millisecond_COUNT1 000F  
               _millisecond_COUNT2 0011                    ??_ReadIntEEPROM 0072  
                       _StopMotors 36A0                         ___ftge@ff1 006E  
                       ___ftge@ff2 0071              ??_ConfigureUltrasound 0042  
    ConfigureUltrasound@echo_to_cm 0072      ConfigureUltrasound@echo_to_in 0075  
                     eval_poly@res 009D                      ___rparam_used 000001  
                       ___ftdiv@f1 0076                         ___ftdiv@f2 0079  
                       ___ftdiv@f3 0080                __end_of_SetUnipolar 3938  
                __end_of_FlashLEDS 3576                         ___ftneg@f1 006E  
                       ___awtoft@c 0076                         ___lbtoft@c 0042  
                      ?_FlushRxBuf 0025                        ?_FlushTxBuf 0025  
                       ___ftmul@f1 0079                         ___ftmul@f2 007C  
                       ___ftsub@f1 0094                         ___ftsub@f2 0097  
                       ___fttol@f1 0088                     __pcstackCOMRAM 0025  
                      ?_ReadTimer1 003E                         ___lltoft@c 0076  
                      _ReadMillis0 38FA                        _ReadMillis2 3918  
                    __end_of_floor 218E                      __end_of_isrHP 2D34  
                    __end_of_ldexp 2092                      __end_of_isrLP 00EC  
                    __end_of_frexp 29B2                __size_of_Delay1TCYx 000C  
                  ??_UltrasoundISR 0042                        _SetDCMotorL 38BA  
                      _SetDCMotorR 38AC                     ??_SendLineMode 0043  
                      ?_Open1USART 006E                  __end_of_SetDCPWM4 3172  
                __end_of_SetDCPWM5 31B6              ??_SetDirectionForward 0042  
                    ?_ResetMillis0 0025                      ?_ResetMillis2 0025  
              i1SetChanADC@channel 0026                        ?_SetChanADC 0025  
          __end_ofi1_SetADCChannel 245C                    _sensor_acq_done 001A  
      __end_of_MillisecondTimerISR 3744               ReadIntEEPROM@address 0070  
     CalculateSensorStatuses@index 0042                   ?_BusyDistanceAcq 0025  
            ?_CalculateSensorError 006E                       _EnableMotors 3950  
                     ??_PB1pressed 0042                       ??_PB2pressed 0042  
                          ??_floor 0043                            ??_isrHP 0060  
                          ??_ldexp 00A5                            ??_isrLP 002D  
      __end_of_GenerateCalibration 2542                            ??_frexp 0073  
                      ?_SendStatus 0025                         __pbssBANK0 00B2  
                       __pbssBANK1 011E                    ??_SetDCMotorPID 0078  
                      ?_OpenTimer0 0025                        ?_OpenTimer1 0025  
                      ?_OpenTimer2 0025                 __size_of_eval_poly 00F6  
                    ??_Write1USART 0025             __size_of_SendThreshold 006C  
                ?_EnableSensorLEDS 0025                      ??_WriteEEPROM 0042  
                        ?_OpenPWM4 0025                          ?_OpenPWM5 0025  
                          ?_BusyTx 0025                 ??_EnableSensorLEDS 0042  
          CalculateSensorError@sum 006E                            ?___ftge 006E  
            __size_of_ConfigureADC 0014                            ?___wmul 006E  
            __size_of_ConfigurePWM 000E                    ??i2_WriteTimer0 0040  
                  ??i2_WriteTimer1 0040                 __end_of_PB1pressed 32F4  
                   _WriteIntEEPROM 33DA                            _CCP4CON 000F73  
                          _CCP5CON 000F70                   WriteTimer0@timer 0070  
                        ?___altoft 0097                 __end_of_PB2pressed 3278  
                      _SendOffsets 2A58                   WriteTimer1@timer 0070  
                    ??_WriteTimer0 0042                      ??_WriteTimer1 0042  
              __size_of_ConvertADC 0004                          ?___awtoft 0076  
                        ?___ftpack 006E                          ?___lbtoft 0076  
                 SendOffsets@index 0079                      ?_PutCharTxBuf 0025  
                   ??_ResetMillis0 0042                     ??_ResetMillis2 0042  
                        ?___lltoft 0076                __size_of_ReadEEPROM 0030  
                 Open1USART@config 0042                __size_of_FlushRxBuf 0026  
                          _SPBRGH1 000F7F                __size_of_FlushTxBuf 002E  
                ??_WriteCharEEPROM 0042                   ??_WirelessTx_ISR 002D  
                      _SetUnipolar 3932                __size_of_ReadTimer1 0012  
           SetDCMotorPID@PIDoutput 0076                   ?_ConfigureTimer0 0025  
                 ?_ConfigureTimer1 0025                   ?_ConfigureTimer2 0025  
                       _convert_cm 00EA                         _convert_in 00ED  
     __size_of_CalculateSensorSums 00A6                        ?_StopMotors 0025  
              __size_of_Open1USART 0074                       _ConfigureADC 37DC  
                          _BusyADC 38C8                            _ReadADC 37B4  
                     _ConfigurePWM 38D6                i2WriteTimer0@timer0 003E  
                       ??_OpenPWM4 0042                         ??_OpenPWM5 0042  
              i2WriteTimer1@timer1 003E                            _OpenADC 2DB0  
                          __Hparam 0000                __size_of_SetChanADC 001A  
                  __size_of_BusyTx 0010                            __Lparam 0000  
              __end_of_Write1USART 37B4                       ?_GetDistance 0025  
           __end_of_WriteIntEEPROM 340C                            _StartTx 3922  
                  __size_of___ftge 00CE                            ___ftadd 130C  
                          ___awmod 279C                            ___ftdiv 1AA8  
                          ___ftneg 346E                    __size_of___wmul 0038  
                          ___ftmul 194C                            ___ftsub 3096  
                          ___fttol 1D2A                __end_of_WriteEEPROM 323A  
                    ?i1_ConvertADC 0025                       __psmallconst 1000  
                ReadIntEEPROM@data 0075                         ??___altoft 009B  
                  __CFG_STVREN$OFF 000000                     ??_PutCharTxBuf 0042  
                          __pcinit 3524                 WriteEEPROM@address 006E  
                       ??___awtoft 0042                         ??___ftpack 0073  
                       ??___lbtoft 0042                  __end_of_eval_poly 2284  
                          __ramtop 1000                __size_of_SendStatus 003A  
                   main@loop_count 0116                __size_of_OpenTimer0 0020  
              __size_of_OpenTimer1 002C                __size_of_OpenTimer2 001C  
                       ??___lltoft 007A                            __ptext0 103C  
                          __ptext1 36A0                            __ptext2 3932  
                          __ptext3 3944                            __ptext4 3948  
                          __ptext5 3938                            __ptext6 26E6  
                          __ptext7 38AC                            __ptext8 312E  
                          __ptext9 38BA           __end_of_CalibrateOffsets 2E9E  
                    _SendThreshold 2F12                          _T0CONbits 000FD5  
         ?_CalculateSensorStatuses 0025                          _T1CONbits 000FCD  
                     _get_Tx_index 0017                          _T2CONbits 000FCA  
                     __size_of_exp 0228                       __size_of_log 0140  
           ??_CalculateSensorError 0042                       __size_of_pow 019A  
                 ?i1_SetADCChannel 0025                          _T3CONbits 000FB1  
                 ___awmod@dividend 006E                          _T4CONbits 000F76  
              __end_of_WriteTimer0 3826                __end_of_WriteTimer1 3814  
                 ??_ReadCharEEPROM 0042                       ??_Delay1TCYx 0042  
                   OpenADC@config2 006E                     __pintcode_body 2CB4  
                _GetSensorReadings 375C               end_of_initialization 3548  
                          exp@sign 00B1                     main@sensor_sum 011D  
                  FlushRxBuf@index 0042                 ?_GetSensorReadings 0025  
             __end_of_SendLineMode 3330                            int_func 2CB4  
                    ?i1_SetChanADC 0025            ??_DisplaySensorStatuses 0070  
                          pow@sign 010C                   ??_ReadEchoLength 0042  
              ??_GetSensorReadings 0043                    ?_WriteIntEEPROM 0071  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                     ??i1_ConvertADC 0025  
                        _PID_error 00E8        __end_of_ConfigureInterrupts 35C6  
               __end_of_Delay1TCYx 38F0                    FlushTxBuf@index 0042  
         __end_of_ConfigureBuggyIO 372A                     ?_SendThreshold 0075  
       __end_of_CalibrateThreshold 3096                          i1_ReadADC 389C  
                        _PORTBbits 000F81           __size_of_LoadCalibration 0096  
                   GetCharTxBuf@ch 002C                  _SetForwardsMotorR 3948  
              __size_of_StopMotors 001E                        _Tx_complete 0013  
                        _TRISCbits 000F94                 ?_SetForwardsMotorR 0025  
        __size_of_SetReverseMotorL 0004                          _TRISGbits 000F98  
        __end_of_GetSensorReadings 3772                          i1___awmod 2C32  
                     ??_ConvertADC 0042                ??_SetForwardsMotorR 0042  
                     ??_ReadEEPROM 0042                        _Write1USART 379E  
                      ___ftdiv@exp 0083                     ??i1_SetChanADC 0025  
             __end_of_ResetMillis0 38FA               __end_of_ResetMillis2 3918  
           i1SetADCChannel@channel 0027                        _WriteEEPROM 31FA  
                     ??_FlushRxBuf 0042                       ??_FlushTxBuf 0042  
                      ___ftmul@exp 0082              SetDCMotorL@duty_cycle 0074  
                   __end_of_BusyTx 387C                  _ConfigureWireless 35C6  
                     ??_ReadTimer1 0040                          _FlashLEDS 354E  
                     ?_ReadMillis0 006E                       ?_ReadMillis2 006E  
             _second_rollover_flag 0019             __size_of_DisableMotors 0004  
  __end_of_CalculateSensorStatuses 2618                     __end_of___ftge 26E6  
               ?_ConfigureWireless 0025                     __end_of___wmul 33A2  
                     ?_SetDCMotorL 0074                       ?_SetDCMotorR 0074  
                     ??_Open1USART 0042                        _WriteTimer0 3814  
                      _WriteTimer1 3802          __end_of_SetForwardsMotorR 394C  
                       ?i1_ReadADC 0025                 __end_of_ConvertADC 3950  
                       floor@expon 00A7              __end_of_SetADCChannel 2372  
                     ??_SetChanADC 0042                 __end_of_ReadEEPROM 346E  
              ??_ConfigureWireless 0043                start_initialization 3524  
         ?_NormaliseSensorReadings 0025                         eval_poly@d 0097  
                       eval_poly@n 0099                         eval_poly@x 0094  
                       ldexp@value 00A0                          _SetDCPWM4 312E  
                        _SetDCPWM5 3172                        __end_of_exp 17B2  
                      __end_of_log 1D2A                        __end_of_pow 194C  
                       ?i1___awmod 0025                 __end_of_FlushRxBuf 3612  
               __end_of_FlushTxBuf 34CC                    SetDCPWM4@DCycle 0072  
      __end_of_ConfigureUltrasound 359E                    SetDCPWM5@DCycle 0072  
                     ??_SendStatus 0043                       ??_OpenTimer0 0042  
                     ??_OpenTimer1 0042                       ??_OpenTimer2 0042  
                    _echo_acq_done 0016                 __end_of_ReadTimer1 384A  
                       frexp@value 006E               __end_of_PutCharTxBuf 32B6  
                  main@echo_length 0117                        _SystemClock 0001  
                 _sensor_acq_index 001B                 __end_of_Open1USART 2F12  
            __end_of_BusySensorAcq 388C               SetADCChannel@channel 006F  
            __end_of_ReadIntEEPROM 3046          __end_of_ConfigureWireless 35EC  
                         ??_BusyTx 0042  DisplaySensorStatuses@status_array 006E  
               __end_of_SetChanADC 3710                  __size_of_OpenPWM4 0024  
                __size_of_OpenPWM5 0024                           ??___ftge 0074  
                         ??___wmul 0042                         ?_FlashLEDS 0025  
      __end_of_SetDirectionForward 393E                    ??_SendThreshold 0077  
               i1___awmod@dividend 0025                   __CFG_LPT1OSC$OFF 000000  
             __size_of_GetDistance 0014                       ?_SendOffsets 0075  
                        _Rx_buffer 011E                    _WriteCharEEPROM 37F0  
        __size_of_EnableSensorLEDS 0006                _CalculateSensorSums 29B2  
               __end_of_SendStatus 336A              __end_of_UltrasoundISR 343E  
               __end_of_OpenTimer0 36A0                 __end_of_OpenTimer1 34F8  
               __end_of_OpenTimer2 36F6                  __size_of___altoft 00A2  
                        _Tx_buffer 00B2                  __size_of___awtoft 0044  
                __size_of___ftpack 0120                  __size_of___lbtoft 002C  
                __size_of___lltoft 007C                        __pbssCOMRAM 0001  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
                       ?_SetDCPWM4 006E                         ?_SetDCPWM5 006E  
       __size_of_GetSensorReadings 0016              __size_of_SendLineMode 003C  
                ??_LoadCalibration 007D                      _DisableMotors 3954  
                     ?_SetUnipolar 0025               __end_ofi1_ConvertADC 395C  
     __size_of_MillisecondTimerISR 001A           __size_of_BusyDistanceAcq 0010  
             ?_CalculateSensorSums 0025              __end_of_SetDCMotorPID 279C  
                     ??_StopMotors 0042                 WriteIntEEPROM@data 0073  
                         ?_BusyADC 0025                           ?_ReadADC 006E  
                        __pnvBANK0 00EA       __size_of_GenerateCalibration 00E6  
                        _character 0015                  OpenADC@portconfig 006F  
                         ?_OpenADC 006E                     _sensor_offsets 00DE  
                        _echo_time 000B                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                           ?_StartTx 0025  
                        __ptext100 3958                          __ptext101 3612  
                        __ptext110 384A                          __ptext102 379E  
                        __ptext103 33A2                          __ptext104 2C32  
                        __ptext106 340C                          __ptext107 3826  
                        __ptext108 3838                          __ptext109 372A  
                         ?___ftadd 0088                           ?___awmod 006E  
                         ?___ftdiv 0076                           ?___ftneg 006E  
                         ?___ftmul 0079                           ?___ftsub 0094  
                         ?___fttol 0088                      ?_Delay10KTCYx 0025  
                      __pintcodelo 0018                    Open1USART@spbrg 006E  
       __size_of_SetForwardsMotorR 0004              __end_ofi2_WriteTimer0 385C  
            __end_ofi2_WriteTimer1 3838    __end_of_NormaliseSensorReadings 2FE8  
                      ??i1_ReadADC 0027                   _sensor_threshold 0022  
                     _SendLineMode 32F4                  ?_CalibrateOffsets 0025  
            SendLineMode@line_mode 0075                        __smallconst 1000  
                WriteTimer0@timer0 006E               __end_ofi1_SetChanADC 379E  
                WriteTimer1@timer1 006E                          _eval_poly 218E  
               i2WriteTimer0@timer 0040                 __end_of_StopMotors 36BE  
               i2WriteTimer1@timer 0040                 ??_CalibrateOffsets 0070  
                 _SetReverseMotorL 3944                        ??i1___awmod 0029  
                   ?_DisableMotors 0025                          _line_mode 0024  
                   __size_of_floor 00FC                     __size_of_isrHP 2D2C  
                   __size_of_ldexp 0116                     __size_of_isrLP 00D4  
                   __size_of_frexp 00AE                    Write1USART@data 0025  
            __size_of_ResetMillis0 000A              __size_of_ResetMillis2 000A  
            ??_CalculateSensorSums 0043   __size_of_CalculateSensorStatuses 00D6  
                   ___wmul@product 0072                      OpenADC@config 0042  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                 ??_WriteIntEEPROM 0042                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D         __size_of_ConfigureWireless 0026  
       DisplaySensorStatuses@index 0042                           _PIR1bits 000F9E  
                         _DCmotorL 0007                           _DCmotorR 0009  
            __CFG_DATABW$DATA16BIT 000000            __end_of_WriteCharEEPROM 3802  
   __size_of_DisplaySensorStatuses 0048                           _RCONbits 000FD0  
         __size_of_ConfigureTimer0 0016           __size_of_ConfigureTimer1 0018  
         __size_of_ConfigureTimer2 0008      __end_of_DisplaySensorStatuses 312E  
                 __CFG_WDTPS$32768 000000                     ??_Delay10KTCYx 0042  
            SetDCMotorR@duty_cycle 0074                        ??_FlashLEDS 0043  
             __size_of_ReadMillis0 000A               __size_of_ReadMillis2 000A  
                __CFG_ECCPMX$PORTH 000000                         _ADCON0bits 000FC2  
                ?_ConfigureBuggyIO 0025                  ___wmul@multiplier 006E  
             __size_of_SetDCMotorL 000E               __size_of_SetDCMotorR 000E  
                     _ResetMillis0 38F0                       _ResetMillis2 390E  
               ??_ConfigureBuggyIO 0042                         ?_eval_poly 0094  
                      ??_SetDCPWM4 0070                        ??_SetDCPWM5 0070  
                 Delay10KTCYx@unit 006E      __size_of_CalculateSensorError 00B4  
            __size_of_PutCharTxBuf 003E           CalculateSensorSums@index 0115  
                      _INTCON2bits 000FF1                        _INTCON3bits 000FF0  
                    ?_GetCharTxBuf 0025                 _CalibrateThreshold 3046  
         __size_ofi1_SetADCChannel 00EA                       ?_Write1USART 0025  
                        frexp@eptr 0071                         _EECON1bits 000FA6  
                         _OpenPWM4 365C                           _OpenPWM5 3638  
                     ?_WriteEEPROM 006E                ?_CalibrateThreshold 0025  
                 __size_of_BusyADC 000E                   __size_of_ReadADC 0014  
                         __Hrparam 0000            __size_of_WirelessTx_ISR 0026  
                 __size_of_OpenADC 0078                           __Lrparam 0000  
    SendThreshold@sensor_threshold 0075                  ??_BusyDistanceAcq 0042  
         _CalculateSensorSums$3221 0111                  i1___awmod@divisor 0027  
                i1___awmod@counter 0029                   __size_of_StartTx 0008  
                 __size_of___ftadd 027E                   __size_of___awmod 00B4  
                 __size_of___ftdiv 0142                   __size_of___ftneg 0030  
                         ___altoft 2AFA                   __size_of___ftmul 015C  
                 __size_of___ftsub 0050                   __size_of___fttol 0132  
                     ?_WriteTimer0 006E                       ?_WriteTimer1 006E  
                         ___awtoft 31B6                           ___ftpack 1E5C  
                         ___lbtoft 34F8                   _EnableSensorLEDS 393E  
                         ___lltoft 2D34                       _PutCharTxBuf 3278  
             __size_of_SendOffsets 00A2                _system_clock_enable 001C  
             ??_CalibrateThreshold 0043                           _exp$3224 00AC  
     __size_of_ConfigureInterrupts 0028              __size_ofi1_ConvertADC 0004  
                  ??_DisableMotors 0042                      ?_EnableMotors 0025  
               SetDCPWM4@dutycycle 006E                     OpenPWM4@period 0042  
                         __ptext10 3172                           __ptext11 32F4  
                         __ptext20 245C                           __ptext12 38F0  
                         __ptext21 33DA                           __ptext13 38FA  
                         __ptext30 386C                           __ptext22 37F0  
                         __ptext14 3904                      _sensor_status 001D  
                         __ptext31 32B6                           __ptext23 31FA  
                         __ptext15 323A                           __ptext40 2542  
                         __ptext32 390E                           __ptext24 2F12  
                         __ptext16 2B9C                           __ptext41 38C8  
                         __ptext33 3918                           __ptext25 3330  
                         __ptext17 2FE8                           __ptext50 393E  
                         __ptext42 2E28                           __ptext34 354E  
                         __ptext26 2A58                           __ptext18 385C  
                         __ptext51 3950                           __ptext43 375C  
                         __ptext35 36BE                           __ptext27 3922  
                         __ptext19 343E                           __ptext60 3744  
                         __ptext52 3954                           __ptext44 2284  
                         __ptext36 3046                           __ptext28 3278  
                         __ptext61 3802                           __ptext53 35C6  
                         __ptext45 36F6                           __ptext37 37B4  
                         __ptext29 279C                           __ptext70 3710  
                         __ptext62 34CC                           __ptext54 2E9E  
                         __ptext46 394C                           __ptext38 2F7E  
                         __ptext71 37DC                           __ptext63 3772  
                         __ptext55 349E                           __ptext47 387C  
                         __ptext39 30E6                           __ptext80 1D2A  
                         __ptext72 2DB0                           __ptext64 3814  
                         __ptext56 35EC                           __ptext48 37C8  
                         __ptext81 2618                           __ptext73 29B2  
                         __ptext65 3680                           __ptext57 3576  
                         __ptext49 38E4                           __ptext90 31B6  
                         __ptext82 2AFA                           __ptext74 17B2  
                         __ptext66 38D6                           __ptext58 392A  
                         __ptext91 2D34                           __ptext83 218E  
                         __ptext75 1BEA                           __ptext67 3638  
                         __ptext59 36DA                           __ptext92 34F8  
                         __ptext84 336A                           __ptext76 158A  
                         __ptext68 365C                           __ptext93 1E5C  
                         __ptext85 194C                           __ptext77 1F7C  
                         __ptext69 359E                           __ptext94 2850  
                         __ptext86 3096                           __ptext78 2092  
                         __ptext95 388C                           __ptext87 130C  
                         __ptext79 2904                           __ptext88 346E  
                         __ptext97 2372                           __ptext89 1AA8  
                   OpenPWM5@period 0042                           __ptext98 3788  
                         __ptext99 389C                     ??_GetCharTxBuf 002B  
                         _pow$3222 0106                           _pow$3223 0109  
               SetDCPWM5@dutycycle 006E               __size_of_SetUnipolar 0006  
                    __size_of_main 02D0                     Delay1TCYx@unit 0042  
 __size_of_NormaliseSensorReadings 006A            __size_of_ReadCharEEPROM 0010  
                 ?_WriteCharEEPROM 0071              __size_ofi1_SetChanADC 0016  
                     i1_ConvertADC 3958                _MillisecondTimerISR 372A  
                  _LoadCalibration 2B9C                      _USART1_Status 0014  
                ??_ConfigureTimer0 0043                  ??_ConfigureTimer1 0043  
                ??_ConfigureTimer2 0043                           exp@coeff 1001  
          __size_of_ReadEchoLength 000A                           log@coeff 101F  
            __CFG_ADDRBW$ADDR20BIT 000000       NormaliseSensorReadings@index 0042  
              _GenerateCalibration 245C                         _INTCONbits 000FF2  
                      ??_eval_poly 009B                     ??_EnableMotors 0042  
                       _PB1pressed 32B6                         _PB2pressed 323A  
             __end_of_Delay10KTCYx 36DA               ?_MillisecondTimerISR 0025  
                         intlevel1 0000                           intlevel2 0000  
          _CalculateSensorStatuses 2542                      ?_ConfigureADC 0025  
                    ?_ConfigurePWM 0025               ?_GenerateCalibration 0025  
                SetChanADC@channel 006E                         _RCSTA1bits 000FAB  
     __size_of_ConfigureUltrasound 0028                    WriteEEPROM@data 0070  
                     i1_SetChanADC 3788             __size_of_SetADCChannel 00EE  
            SendStatus@status_code 0075                  ??i1_SetADCChannel 0027  
         __end_of_SetReverseMotorL 3948                      ??_GetDistance 0043  
            __end_of_SendThreshold 2F7E                         _PID_output 00DA  
     __size_of_SetDirectionForward 0006           SendOffsets@offsets_array 0075  
           __size_of_BusySensorAcq 0010             __size_of_ReadIntEEPROM 005E  
            ??_MillisecondTimerISR 0042               _sensor_threshold_ptr 00F0  
                   ??_ConfigureADC 0043                     ??_ConfigurePWM 0043  
        __size_of_CalibrateOffsets 0076              ??_GenerateCalibration 007A  
           __size_of_UltrasoundISR 0032               __size_of_Write1USART 0016  
                   _WirelessTx_ISR 3612            __end_of_LoadCalibration 2C32  
                     _put_Tx_index 0018  
