

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Mar 20 12:30:06 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	nvCOMRAM
    23  0000'                    __pnvCOMRAM:
    24                           	opt stack 0
    25  0000'                    _sensor_readings_ptr:
    26                           	opt stack 0
    27  0000'                    	ds	2
    28  0000                     _ADCON0	set	4034
    29  0000                     _ADCON0bits	set	4034
    30  0000                     _ADRESH	set	4036
    31  0000                     _ADRESL	set	4035
    32  0000                     _INTCON2bits	set	4081
    33  0000                     _INTCON3bits	set	4080
    34  0000                     _INTCONbits	set	4082
    35  0000                     _IPR1bits	set	3999
    36  0000                     _PIE1bits	set	3997
    37  0000                     _PIR1bits	set	3998
    38  0000                     _RCONbits	set	4048
    39  0000                     _T1CONbits	set	4045
    40  0000                     _TMR0H	set	4055
    41  0000                     _TMR0L	set	4054
    42  0000                     _TRISA	set	3986
    43  0000                     _TRISB	set	3987
    44  0000                     _TRISC	set	3988
    45  0000                     _TRISD	set	3989
    46  0000                     _TRISE	set	3990
    47  0000                     _TRISG	set	3992
    48  0000                     _TRISJ	set	3994
    49                           
    50                           ; #config settings
    51  0000                     
    52                           	psect	cinit
    53  0000'                    __pcinit:
    54                           	opt stack 0
    55  0000'                    start_initialization:
    56                           	opt stack 0
    57  0000'                    __initialization:
    58                           	opt stack 0
    59                           
    60                           ; Clear objects allocated to COMRAM (14 bytes)
    61  0000' EE00' F000'        	lfsr	0,__pbssCOMRAM
    62  0004' 0E0E               	movlw	14
    63  0006'                    clear_0:
    64  0006' 6AEE               	clrf	postinc0,c
    65  0008' 06E8               	decf	wreg,f,c
    66  000A' E1FD               	bnz	clear_0
    67  000C'                    end_of_initialization:
    68                           	opt stack 0
    69  000C'                    __end_of__initialization:
    70                           	opt stack 0
    71  000C' 0100               	movlb	0
    72  000E' EF00' F000'        	goto	_main	;jump to C main() function
    73                           postinc0	equ	0xFEE
    74                           wreg	equ	0xFE8
    75                           
    76                           	psect	bssCOMRAM
    77  0000'                    __pbssCOMRAM:
    78                           	opt stack 0
    79  0000'                    _millisecond_COUNT:
    80                           	opt stack 0
    81  0000'                    	ds	2
    82  0002'                    _sensor_acq_done:
    83                           	opt stack 0
    84  0002'                    	ds	1
    85  0003'                    _sensor_acq_index:
    86                           	opt stack 0
    87  0003'                    	ds	1
    88  0004'                    _sensor_readings:
    89                           	opt stack 0
    90  0004'                    	ds	10
    91                           postinc0	equ	0xFEE
    92                           wreg	equ	0xFE8
    93                           
    94                           	psect	cstackBANK0
    95  0000'                    __pcstackBANK0:
    96                           	opt stack 0
    97  0000'                    _ConfigureUltrasound$0:
    98                           	opt stack 0
    99                           
   100                           ; 3 bytes @ 0x0
   101  0000'                    	ds	3
   102  0003'                    _ConfigureUltrasound$1:
   103                           	opt stack 0
   104                           
   105                           ; 3 bytes @ 0x3
   106  0003'                    	ds	3
   107                           postinc0	equ	0xFEE
   108                           wreg	equ	0xFE8
   109                           
   110                           	psect	cstackCOMRAM
   111  0000'                    __pcstackCOMRAM:
   112                           	opt stack 0
   113  0000'                    ??_SetChanADC:
   114  0000'                    ?_ReadADC:
   115                           	opt stack 0
   116                           
   117                           ; 2 bytes @ 0x0
   118  0000'                    	ds	1
   119  0001'                    SetChanADC@channel:
   120                           	opt stack 0
   121                           
   122                           ; 1 bytes @ 0x1
   123  0001'                    	ds	1
   124  0002'                    ??_ReadADC:
   125  0002'                    SetADCChannel@channel:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x2
   129  0002'                    	ds	2
   130  0004'                    ??_isrLP:
   131                           
   132                           ; 0 bytes @ 0x4
   133  0004'                    	ds	17
   134  0015'                    WriteTimer0@timer0:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x15
   138  0015'                    	ds	2
   139  0017'                    WriteTimer0@timer:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x17
   143  0017'                    	ds	2
   144  0019'                    ??_isrHP:
   145                           
   146                           ; 0 bytes @ 0x19
   147  0019'                    	ds	14
   148  0027'                    postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           ; 0 bytes @ 0x27
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 348 in file "task_scheduler_libraries.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;		None               void
   164 ;; Registers used:
   165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels required when called:    6
   177 ;; This function calls:
   178 ;;		_ConfigureUltrasound
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185  0000'                    __ptext0:
   186                           	opt stack 0
   187  0000'                    _main:
   188                           	opt stack 25
   189                           
   190                           ;task_scheduler_libraries.c: 351: sensor_readings_ptr = sensor_readings;
   191                           
   192                           ;incstack = 0
   193  0000' 0E00'              	movlw	low _sensor_readings
   194  0002' 6E00'              	movwf	_sensor_readings_ptr,c
   195  0004' 0E00'              	movlw	high _sensor_readings
   196  0006' 6E01'              	movwf	_sensor_readings_ptr+1,c
   197                           
   198                           ;task_scheduler_libraries.c: 353: ConfigureUltrasound(0.0137, 0.054);
   199  0008' 0E76               	movlw	118
   200  000A' 0100               	movlb	0	; () banked
   201  000C' 6F00'              	movwf	_ConfigureUltrasound$0& (0+255),b
   202  000E' 0E60               	movlw	96
   203  0010' 0100               	movlb	0	; () banked
   204  0012' 6F00'              	movwf	(_ConfigureUltrasound$0+1)& (0+255),b
   205  0014' 0E3C               	movlw	60
   206  0016' 0100               	movlb	0	; () banked
   207  0018' 6F00'              	movwf	(_ConfigureUltrasound$0+2)& (0+255),b
   208  001A' 0E2F               	movlw	47
   209  001C' 0100               	movlb	0	; () banked
   210  001E' 6F00'              	movwf	_ConfigureUltrasound$1& (0+255),b
   211  0020' 0E5D               	movlw	93
   212  0022' 0100               	movlb	0	; () banked
   213  0024' 6F00'              	movwf	(_ConfigureUltrasound$1+1)& (0+255),b
   214  0026' 0E3D               	movlw	61
   215  0028' 0100               	movlb	0	; () banked
   216  002A' 6F00'              	movwf	(_ConfigureUltrasound$1+2)& (0+255),b
   217  002C' EC00' F000'        	call	_ConfigureUltrasound	;wreg free
   218  0030' EF00' F000'        	goto	start
   219  0034'                    __end_of_main:
   220                           	opt stack 0
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224 ;; *************** function _isrLP *****************
   225 ;; Defined at:
   226 ;;		line 317 in file "task_scheduler_libraries.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;		None               void
   233 ;; Registers used:
   234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;Total ram usage:       17 bytes
   245 ;; Hardware stack levels used:    1
   246 ;; Hardware stack levels required when called:    4
   247 ;; This function calls:
   248 ;;		_ConvertADC
   249 ;;		_ReadADC
   250 ;;		_SetADCChannel
   251 ;; This function is called by:
   252 ;;		Interrupt level 1
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	intcodelo
   257  0000'                    __pintcodelo:
   258                           	opt stack 0
   259  0000'                    _isrLP:
   260                           	opt stack 25
   261                           
   262                           ;incstack = 0
   263  0000' CFD8 F004'         	movff	status,??_isrLP
   264  0004' CFE8 F005'         	movff	wreg,??_isrLP+1
   265  0008' CFE0 F006'         	movff	bsr,??_isrLP+2
   266  000C' CFFA F007'         	movff	pclath,??_isrLP+3
   267  0010' CFFB F008'         	movff	pclatu,??_isrLP+4
   268  0014' CFE9 F009'         	movff	fsr0l,??_isrLP+5
   269  0018' CFEA F00A'         	movff	fsr0h,??_isrLP+6
   270  001C' CFE1 F00B'         	movff	fsr1l,??_isrLP+7
   271  0020' CFE2 F00C'         	movff	fsr1h,??_isrLP+8
   272  0024' CFD9 F00D'         	movff	fsr2l,??_isrLP+9
   273  0028' CFDA F00E'         	movff	fsr2h,??_isrLP+10
   274  002C' CFF3 F00F'         	movff	prodl,??_isrLP+11
   275  0030' CFF4 F010'         	movff	prodh,??_isrLP+12
   276  0034' CFF6 F011'         	movff	tblptrl,??_isrLP+13
   277  0038' CFF7 F012'         	movff	tblptrh,??_isrLP+14
   278  003C' CFF8 F013'         	movff	tblptru,??_isrLP+15
   279  0040' CFF5 F014'         	movff	tablat,??_isrLP+16
   280                           
   281                           ;task_scheduler_libraries.c: 320: if (INTCON3bits.INT1IF == 1) {
   282  0044' B0F0               	btfsc	intcon3,0,c	;volatile
   283                           
   284                           ;task_scheduler_libraries.c: 322: INTCON3bits.INT1IF = 0;
   285  0046' 90F0               	bcf	intcon3,0,c	;volatile
   286                           
   287                           ;task_scheduler_libraries.c: 323: }
   288                           ;task_scheduler_libraries.c: 326: if (INTCON3bits.INT2IF == 1) {
   289  0048' B2F0               	btfsc	intcon3,1,c	;volatile
   290                           
   291                           ;task_scheduler_libraries.c: 328: INTCON3bits.INT2IF = 0;
   292  004A' 92F0               	bcf	intcon3,1,c	;volatile
   293                           
   294                           ;task_scheduler_libraries.c: 329: }
   295                           ;task_scheduler_libraries.c: 332: if (PIR1bits.ADIF == 1) {
   296  004C' AC9E               	btfss	3998,6,c	;volatile
   297  004E' D01D               	goto	i1l137
   298                           
   299                           ;task_scheduler_libraries.c: 333: PIR1bits.ADIF = 0;
   300  0050' 9C9E               	bcf	3998,6,c	;volatile
   301                           
   302                           ;task_scheduler_libraries.c: 334: if (sensor_acq_index < 5) {
   303  0052' 0E05               	movlw	5
   304  0054' 6003'              	cpfslt	_sensor_acq_index,c	;volatile
   305  0056' D015               	goto	i1l1067
   306                           
   307                           ;task_scheduler_libraries.c: 335: *(sensor_readings_ptr + sensor_acq_index) = ReadADC();
   308  0058' EC00' F000'        	call	_ReadADC	;wreg free
   309  005C' 5003'              	movf	_sensor_acq_index,w,c	;volatile
   310  005E' 0D02               	mullw	2
   311  0060' 50F3               	movf	prodl,w,c
   312  0062' 2400'              	addwf	_sensor_readings_ptr,w,c
   313  0064' 6ED9               	movwf	fsr2l,c
   314  0066' 50F4               	movf	prodh,w,c
   315  0068' 2001'              	addwfc	_sensor_readings_ptr+1,w,c
   316  006A' 6EDA               	movwf	fsr2h,c
   317  006C' C000' FFDE         	movff	?_ReadADC,postinc2
   318  0070' C001' FFDD         	movff	?_ReadADC+1,postdec2
   319                           
   320                           ;task_scheduler_libraries.c: 336: sensor_acq_index++;
   321  0074' 2A03'              	incf	_sensor_acq_index,f,c	;volatile
   322                           
   323                           ;task_scheduler_libraries.c: 337: SetADCChannel(sensor_acq_index);
   324  0076' 5003'              	movf	_sensor_acq_index,w,c	;volatile
   325  0078' EC00' F000'        	call	_SetADCChannel
   326                           
   327                           ;task_scheduler_libraries.c: 338: ConvertADC();
   328  007C' EC00' F000'        	call	_ConvertADC	;wreg free
   329                           
   330                           ;task_scheduler_libraries.c: 339: } else {
   331  0080' D004               	goto	i1l137
   332  0082'                    i1l1067:
   333                           
   334                           ;task_scheduler_libraries.c: 340: sensor_acq_done = 1;
   335  0082' 0E01               	movlw	1
   336  0084' 6E02'              	movwf	_sensor_acq_done,c	;volatile
   337                           
   338                           ;task_scheduler_libraries.c: 341: PIE1bits.ADIE = 0;
   339  0086' 9C9D               	bcf	3997,6,c	;volatile
   340  0088' D000               	goto	i1l137
   341  008A'                    i1l137:
   342  008A' C014' FFF5         	movff	??_isrLP+16,tablat
   343  008E' C013' FFF8         	movff	??_isrLP+15,tblptru
   344  0092' C012' FFF7         	movff	??_isrLP+14,tblptrh
   345  0096' C011' FFF6         	movff	??_isrLP+13,tblptrl
   346  009A' C010' FFF4         	movff	??_isrLP+12,prodh
   347  009E' C00F' FFF3         	movff	??_isrLP+11,prodl
   348  00A2' C00E' FFDA         	movff	??_isrLP+10,fsr2h
   349  00A6' C00D' FFD9         	movff	??_isrLP+9,fsr2l
   350  00AA' C00C' FFE2         	movff	??_isrLP+8,fsr1h
   351  00AE' C00B' FFE1         	movff	??_isrLP+7,fsr1l
   352  00B2' C00A' FFEA         	movff	??_isrLP+6,fsr0h
   353  00B6' C009' FFE9         	movff	??_isrLP+5,fsr0l
   354  00BA' C008' FFFB         	movff	??_isrLP+4,pclatu
   355  00BE' C007' FFFA         	movff	??_isrLP+3,pclath
   356  00C2' C006' FFE0         	movff	??_isrLP+2,bsr
   357  00C6' C005' FFE8         	movff	??_isrLP+1,wreg
   358  00CA' C004' FFD8         	movff	??_isrLP,status
   359  00CE' 0010               	retfie	
   360  00D0'                    __end_of_isrLP:
   361                           	opt stack 0
   362                           pclatu	equ	0xFFB
   363                           pclath	equ	0xFFA
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           prodh	equ	0xFF4
   369                           prodl	equ	0xFF3
   370                           intcon3	equ	0xFF0
   371                           postinc0	equ	0xFEE
   372                           fsr0h	equ	0xFEA
   373                           fsr0l	equ	0xFE9
   374                           wreg	equ	0xFE8
   375                           fsr1h	equ	0xFE2
   376                           fsr1l	equ	0xFE1
   377                           bsr	equ	0xFE0
   378                           postinc2	equ	0xFDE
   379                           postdec2	equ	0xFDD
   380                           fsr2h	equ	0xFDA
   381                           fsr2l	equ	0xFD9
   382                           status	equ	0xFD8
   383                           
   384 ;; *************** function _SetADCChannel *****************
   385 ;; Defined at:
   386 ;;		line 203 in file "task_scheduler_libraries.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;  channel         1    wreg     unsigned char 
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  channel         1    2[COMRAM] unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;		None               void
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    3
   407 ;; This function calls:
   408 ;;		_SetChanADC
   409 ;; This function is called by:
   410 ;;		_isrLP
   411 ;;		_GetSensorReadings
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text2
   416  0000'                    __ptext2:
   417                           	opt stack 0
   418  0000'                    _SetADCChannel:
   419                           	opt stack 25
   420                           
   421                           ;incstack = 0
   422                           ;SetADCChannel@channel stored from wreg
   423  0000' 6E02'              	movwf	SetADCChannel@channel,c
   424                           
   425                           ;task_scheduler_libraries.c: 205: switch (channel) {
   426  0002' D040               	goto	i1l937
   427  0004'                    i1l903:
   428                           
   429                           ;task_scheduler_libraries.c: 207: SetChanADC(0b10000111);
   430  0004' 0E87               	movlw	135
   431  0006' EC00' F000'        	call	_SetChanADC
   432                           
   433                           ;task_scheduler_libraries.c: 208: break;
   434  000A' D06E               	goto	i1l112
   435  000C'                    i1l905:
   436                           
   437                           ;task_scheduler_libraries.c: 210: SetChanADC(0b10001111);
   438  000C' 0E8F               	movlw	143
   439  000E' EC00' F000'        	call	_SetChanADC
   440                           
   441                           ;task_scheduler_libraries.c: 211: break;
   442  0012' D06A               	goto	i1l112
   443  0014'                    i1l907:
   444                           
   445                           ;task_scheduler_libraries.c: 213: SetChanADC(0b10010111);
   446  0014' 0E97               	movlw	151
   447  0016' EC00' F000'        	call	_SetChanADC
   448                           
   449                           ;task_scheduler_libraries.c: 214: break;
   450  001A' D066               	goto	i1l112
   451  001C'                    i1l909:
   452                           
   453                           ;task_scheduler_libraries.c: 216: SetChanADC(0b10011111);
   454  001C' 0E9F               	movlw	159
   455  001E' EC00' F000'        	call	_SetChanADC
   456                           
   457                           ;task_scheduler_libraries.c: 217: break;
   458  0022' D062               	goto	i1l112
   459  0024'                    i1l911:
   460                           
   461                           ;task_scheduler_libraries.c: 219: SetChanADC(0b10100111);
   462  0024' 0EA7               	movlw	167
   463  0026' EC00' F000'        	call	_SetChanADC
   464                           
   465                           ;task_scheduler_libraries.c: 220: break;
   466  002A' D05E               	goto	i1l112
   467  002C'                    i1l913:
   468                           
   469                           ;task_scheduler_libraries.c: 222: SetChanADC(0b10101111);
   470  002C' 0EAF               	movlw	175
   471  002E' EC00' F000'        	call	_SetChanADC
   472                           
   473                           ;task_scheduler_libraries.c: 223: break;
   474  0032' D05A               	goto	i1l112
   475  0034'                    i1l915:
   476                           
   477                           ;task_scheduler_libraries.c: 225: SetChanADC(0b10110111);
   478  0034' 0EB7               	movlw	183
   479  0036' EC00' F000'        	call	_SetChanADC
   480                           
   481                           ;task_scheduler_libraries.c: 226: break;
   482  003A' D056               	goto	i1l112
   483  003C'                    i1l917:
   484                           
   485                           ;task_scheduler_libraries.c: 228: SetChanADC(0b10111111);
   486  003C' 0EBF               	movlw	191
   487  003E' EC00' F000'        	call	_SetChanADC
   488                           
   489                           ;task_scheduler_libraries.c: 229: break;
   490  0042' D052               	goto	i1l112
   491  0044'                    i1l919:
   492                           
   493                           ;task_scheduler_libraries.c: 231: SetChanADC(0b11000111);
   494  0044' 0EC7               	movlw	199
   495  0046' EC00' F000'        	call	_SetChanADC
   496                           
   497                           ;task_scheduler_libraries.c: 232: break;
   498  004A' D04E               	goto	i1l112
   499  004C'                    i1l921:
   500                           
   501                           ;task_scheduler_libraries.c: 234: SetChanADC(0b11001111);
   502  004C' 0ECF               	movlw	207
   503  004E' EC00' F000'        	call	_SetChanADC
   504                           
   505                           ;task_scheduler_libraries.c: 235: break;
   506  0052' D04A               	goto	i1l112
   507  0054'                    i1l923:
   508                           
   509                           ;task_scheduler_libraries.c: 237: SetChanADC(0b11010111);
   510  0054' 0ED7               	movlw	215
   511  0056' EC00' F000'        	call	_SetChanADC
   512                           
   513                           ;task_scheduler_libraries.c: 238: break;
   514  005A' D046               	goto	i1l112
   515  005C'                    i1l925:
   516                           
   517                           ;task_scheduler_libraries.c: 240: SetChanADC(0b11011111);
   518  005C' 0EDF               	movlw	223
   519  005E' EC00' F000'        	call	_SetChanADC
   520                           
   521                           ;task_scheduler_libraries.c: 241: break;
   522  0062' D042               	goto	i1l112
   523  0064'                    i1l927:
   524                           
   525                           ;task_scheduler_libraries.c: 243: SetChanADC(0b11100111);
   526  0064' 0EE7               	movlw	231
   527  0066' EC00' F000'        	call	_SetChanADC
   528                           
   529                           ;task_scheduler_libraries.c: 244: break;
   530  006A' D03E               	goto	i1l112
   531  006C'                    i1l929:
   532                           
   533                           ;task_scheduler_libraries.c: 246: SetChanADC(0b11101111);
   534  006C' 0EEF               	movlw	239
   535  006E' EC00' F000'        	call	_SetChanADC
   536                           
   537                           ;task_scheduler_libraries.c: 247: break;
   538  0072' D03A               	goto	i1l112
   539  0074'                    i1l931:
   540                           
   541                           ;task_scheduler_libraries.c: 249: SetChanADC(0b11110111);
   542  0074' 0EF7               	movlw	247
   543  0076' EC00' F000'        	call	_SetChanADC
   544                           
   545                           ;task_scheduler_libraries.c: 250: break;
   546  007A' D036               	goto	i1l112
   547  007C'                    i1l933:
   548                           
   549                           ;task_scheduler_libraries.c: 252: SetChanADC(0b11111111);
   550  007C' 0EFF               	movlw	255
   551  007E' EC00' F000'        	call	_SetChanADC
   552                           
   553                           ;task_scheduler_libraries.c: 256: }
   554                           
   555                           ;task_scheduler_libraries.c: 255: break;
   556                           
   557                           ;task_scheduler_libraries.c: 254: default:
   558                           
   559                           ;task_scheduler_libraries.c: 253: break;
   560  0082' D032               	goto	i1l112
   561  0084'                    i1l937:
   562  0084' 5002'              	movf	SetADCChannel@channel,w,c
   563                           
   564                           ; Switch size 1, requested type "space"
   565                           ; Number of cases is 16, Range of values is 0 to 15
   566                           ; switch strategies available:
   567                           ; Name         Instructions Cycles
   568                           ; simple_byte           49    25 (average)
   569                           ;	Chosen strategy is simple_byte
   570  0086' 0A00               	xorlw	0	; case 0
   571  0088' B4D8               	btfsc	status,2,c
   572  008A' D7BC               	goto	i1l903
   573  008C' 0A01               	xorlw	1	; case 1
   574  008E' B4D8               	btfsc	status,2,c
   575  0090' D7BD               	goto	i1l905
   576  0092' 0A03               	xorlw	3	; case 2
   577  0094' B4D8               	btfsc	status,2,c
   578  0096' D7BE               	goto	i1l907
   579  0098' 0A01               	xorlw	1	; case 3
   580  009A' B4D8               	btfsc	status,2,c
   581  009C' D7BF               	goto	i1l909
   582  009E' 0A07               	xorlw	7	; case 4
   583  00A0' B4D8               	btfsc	status,2,c
   584  00A2' D7C0               	goto	i1l911
   585  00A4' 0A01               	xorlw	1	; case 5
   586  00A6' B4D8               	btfsc	status,2,c
   587  00A8' D7C1               	goto	i1l913
   588  00AA' 0A03               	xorlw	3	; case 6
   589  00AC' B4D8               	btfsc	status,2,c
   590  00AE' D7C2               	goto	i1l915
   591  00B0' 0A01               	xorlw	1	; case 7
   592  00B2' B4D8               	btfsc	status,2,c
   593  00B4' D7C3               	goto	i1l917
   594  00B6' 0A0F               	xorlw	15	; case 8
   595  00B8' B4D8               	btfsc	status,2,c
   596  00BA' D7C4               	goto	i1l919
   597  00BC' 0A01               	xorlw	1	; case 9
   598  00BE' B4D8               	btfsc	status,2,c
   599  00C0' D7C5               	goto	i1l921
   600  00C2' 0A03               	xorlw	3	; case 10
   601  00C4' B4D8               	btfsc	status,2,c
   602  00C6' D7C6               	goto	i1l923
   603  00C8' 0A01               	xorlw	1	; case 11
   604  00CA' B4D8               	btfsc	status,2,c
   605  00CC' D7C7               	goto	i1l925
   606  00CE' 0A07               	xorlw	7	; case 12
   607  00D0' B4D8               	btfsc	status,2,c
   608  00D2' D7C8               	goto	i1l927
   609  00D4' 0A01               	xorlw	1	; case 13
   610  00D6' B4D8               	btfsc	status,2,c
   611  00D8' D7C9               	goto	i1l929
   612  00DA' 0A03               	xorlw	3	; case 14
   613  00DC' B4D8               	btfsc	status,2,c
   614  00DE' D7CA               	goto	i1l931
   615  00E0' 0A01               	xorlw	1	; case 15
   616  00E2' B4D8               	btfsc	status,2,c
   617  00E4' D7CB               	goto	i1l933
   618  00E6' D000               	goto	i1l112
   619  00E8'                    i1l112:
   620  00E8' 0012               	return		;funcret
   621  00EA'                    __end_of_SetADCChannel:
   622                           	opt stack 0
   623                           pclatu	equ	0xFFB
   624                           pclath	equ	0xFFA
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           prodh	equ	0xFF4
   630                           prodl	equ	0xFF3
   631                           intcon3	equ	0xFF0
   632                           postinc0	equ	0xFEE
   633                           fsr0h	equ	0xFEA
   634                           fsr0l	equ	0xFE9
   635                           wreg	equ	0xFE8
   636                           fsr1h	equ	0xFE2
   637                           fsr1l	equ	0xFE1
   638                           bsr	equ	0xFE0
   639                           postinc2	equ	0xFDE
   640                           postdec2	equ	0xFDD
   641                           fsr2h	equ	0xFDA
   642                           fsr2l	equ	0xFD9
   643                           status	equ	0xFD8
   644                           
   645 ;; *************** function _SetChanADC *****************
   646 ;; Defined at:
   647 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  channel         1    wreg     unsigned char 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  channel         1    1[COMRAM] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;		None               void
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_SetADCChannel
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text3
   676  0000'                    __ptext3:
   677                           	opt stack 0
   678  0000'                    _SetChanADC:
   679                           	opt stack 25
   680                           
   681                           ;incstack = 0
   682                           ;SetChanADC@channel stored from wreg
   683  0000' 6E01'              	movwf	SetChanADC@channel,c
   684  0002' CFC2 F000'         	movff	4034,??_SetChanADC	;volatile
   685  0006' 0EC3               	movlw	195
   686  0008' 1600'              	andwf	??_SetChanADC,f,c
   687  000A' 90D8               	bcf	status,0,c
   688  000C' 3001'              	rrcf	SetChanADC@channel,w,c
   689  000E' 0B3C               	andlw	60
   690  0010' 1000'              	iorwf	??_SetChanADC,w,c
   691  0012' 6EC2               	movwf	4034,c	;volatile
   692  0014' 0012               	return		;funcret
   693  0016'                    __end_of_SetChanADC:
   694                           	opt stack 0
   695                           pclatu	equ	0xFFB
   696                           pclath	equ	0xFFA
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           prodh	equ	0xFF4
   702                           prodl	equ	0xFF3
   703                           intcon3	equ	0xFF0
   704                           postinc0	equ	0xFEE
   705                           fsr0h	equ	0xFEA
   706                           fsr0l	equ	0xFE9
   707                           wreg	equ	0xFE8
   708                           fsr1h	equ	0xFE2
   709                           fsr1l	equ	0xFE1
   710                           bsr	equ	0xFE0
   711                           postinc2	equ	0xFDE
   712                           postdec2	equ	0xFDD
   713                           fsr2h	equ	0xFDA
   714                           fsr2l	equ	0xFD9
   715                           status	equ	0xFD8
   716                           
   717 ;; *************** function _ReadADC *****************
   718 ;; Defined at:
   719 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  2    0[COMRAM] int 
   726 ;; Registers used:
   727 ;;		wreg, status,2
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;Total ram usage:        4 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_isrLP
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text4
   748  0000'                    __ptext4:
   749                           	opt stack 0
   750  0000'                    _ReadADC:
   751                           	opt stack 26
   752                           
   753                           ;incstack = 0
   754  0000' 50C4               	movf	4036,w,c	;volatile
   755  0002' 6E00'              	movwf	??_ReadADC& (0+255),c
   756  0004' 50C3               	movf	4035,w,c	;volatile
   757  0006' 6E00'              	movwf	?_ReadADC,c
   758  0008' C002' F001'        	movff	??_ReadADC,?_ReadADC+1
   759  000C' D000               	goto	i1l170
   760  000E'                    i1l170:
   761  000E' 0012               	return		;funcret
   762  0010'                    __end_of_ReadADC:
   763                           	opt stack 0
   764                           pclatu	equ	0xFFB
   765                           pclath	equ	0xFFA
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           intcon3	equ	0xFF0
   773                           postinc0	equ	0xFEE
   774                           fsr0h	equ	0xFEA
   775                           fsr0l	equ	0xFE9
   776                           wreg	equ	0xFE8
   777                           fsr1h	equ	0xFE2
   778                           fsr1l	equ	0xFE1
   779                           bsr	equ	0xFE0
   780                           postinc2	equ	0xFDE
   781                           postdec2	equ	0xFDD
   782                           fsr2h	equ	0xFDA
   783                           fsr2l	equ	0xFD9
   784                           status	equ	0xFD8
   785                           
   786 ;; *************** function _ConvertADC *****************
   787 ;; Defined at:
   788 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;		None               void
   795 ;; Registers used:
   796 ;;		None
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; Hardware stack levels required when called:    2
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_isrLP
   813 ;;		_GetSensorReadings
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text5
   818  0000'                    __ptext5:
   819                           	opt stack 0
   820  0000'                    _ConvertADC:
   821                           	opt stack 26
   822                           
   823                           ;incstack = 0
   824  0000' 82C2               	bsf	4034,1,c	;volatile
   825  0002' 0012               	return		;funcret
   826  0004'                    __end_of_ConvertADC:
   827                           	opt stack 0
   828                           pclatu	equ	0xFFB
   829                           pclath	equ	0xFFA
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           prodh	equ	0xFF4
   835                           prodl	equ	0xFF3
   836                           intcon3	equ	0xFF0
   837                           postinc0	equ	0xFEE
   838                           fsr0h	equ	0xFEA
   839                           fsr0l	equ	0xFE9
   840                           wreg	equ	0xFE8
   841                           fsr1h	equ	0xFE2
   842                           fsr1l	equ	0xFE1
   843                           bsr	equ	0xFE0
   844                           postinc2	equ	0xFDE
   845                           postdec2	equ	0xFDD
   846                           fsr2h	equ	0xFDA
   847                           fsr2l	equ	0xFD9
   848                           status	equ	0xFD8
   849                           
   850 ;; *************** function _isrHP *****************
   851 ;; Defined at:
   852 ;;		line 295 in file "task_scheduler_libraries.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;Total ram usage:       14 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    1
   873 ;; This function calls:
   874 ;;		_WriteTimer0
   875 ;; This function is called by:
   876 ;;		Interrupt level 2
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	intcode
   881  0000'                    __pintcode:
   882                           	opt stack 0
   883  0000'                    _isrHP:
   884                           	opt stack 25
   885                           
   886                           ;incstack = 0
   887  0000' CFFA F019'         	movff	pclath,??_isrHP
   888  0004' CFFB F01A'         	movff	pclatu,??_isrHP+1
   889  0008' CFE9 F01B'         	movff	fsr0l,??_isrHP+2
   890  000C' ED00' F000'        	call	int_func,f	;refresh shadow registers
   891                           pclatu	equ	0xFFB
   892                           pclath	equ	0xFFA
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           prodh	equ	0xFF4
   898                           prodl	equ	0xFF3
   899                           intcon3	equ	0xFF0
   900                           postinc0	equ	0xFEE
   901                           fsr0h	equ	0xFEA
   902                           fsr0l	equ	0xFE9
   903                           wreg	equ	0xFE8
   904                           fsr1h	equ	0xFE2
   905                           fsr1l	equ	0xFE1
   906                           bsr	equ	0xFE0
   907                           postinc2	equ	0xFDE
   908                           postdec2	equ	0xFDD
   909                           fsr2h	equ	0xFDA
   910                           fsr2l	equ	0xFD9
   911                           status	equ	0xFD8
   912                           
   913                           	psect	intcode_body
   914  0000'                    __pintcode_body:
   915                           	opt stack 25
   916  0000'                    int_func:
   917                           	opt stack 25
   918  0000' 0006               	pop		; remove dummy address from shadow register refresh
   919  0002' CFEA F01C'         	movff	fsr0h,??_isrHP+3
   920  0006' CFE1 F01D'         	movff	fsr1l,??_isrHP+4
   921  000A' CFE2 F01E'         	movff	fsr1h,??_isrHP+5
   922  000E' CFD9 F01F'         	movff	fsr2l,??_isrHP+6
   923  0012' CFDA F020'         	movff	fsr2h,??_isrHP+7
   924  0016' CFF3 F021'         	movff	prodl,??_isrHP+8
   925  001A' CFF4 F022'         	movff	prodh,??_isrHP+9
   926  001E' CFF6 F023'         	movff	tblptrl,??_isrHP+10
   927  0022' CFF7 F024'         	movff	tblptrh,??_isrHP+11
   928  0026' CFF8 F025'         	movff	tblptru,??_isrHP+12
   929  002A' CFF5 F026'         	movff	tablat,??_isrHP+13
   930                           
   931                           ;task_scheduler_libraries.c: 298: if (INTCONbits.TMR0IF == 1) {
   932  002E' A4F2               	btfss	intcon,2,c	;volatile
   933  0030' D00A               	goto	i2l1045
   934                           
   935                           ;task_scheduler_libraries.c: 299: INTCONbits.TMR0IF = 0;
   936  0032' 94F2               	bcf	intcon,2,c	;volatile
   937                           
   938                           ;task_scheduler_libraries.c: 300: WriteTimer0(63036);
   939  0034' 0EF6               	movlw	246
   940  0036' 6E16'              	movwf	WriteTimer0@timer0+1,c
   941  0038' 0E3C               	movlw	60
   942  003A' 6E15'              	movwf	WriteTimer0@timer0,c
   943  003C' EC00' F000'        	call	_WriteTimer0	;wreg free
   944                           
   945                           ;task_scheduler_libraries.c: 301: millisecond_COUNT++;
   946  0040' 4A00'              	infsnz	_millisecond_COUNT,f,c	;volatile
   947  0042' 2A01'              	incf	_millisecond_COUNT+1,f,c	;volatile
   948  0044' D000               	goto	i2l1045
   949  0046'                    i2l1045:
   950                           
   951                           ;task_scheduler_libraries.c: 305: }
   952                           ;task_scheduler_libraries.c: 308: if (INTCONbits.RBIF == 1) {
   953  0046' A0F2               	btfss	intcon,0,c	;volatile
   954  0048' D002               	goto	i2l129
   955                           
   956                           ;task_scheduler_libraries.c: 309: INTCONbits.RBIF = 0;
   957  004A' 90F2               	bcf	intcon,0,c	;volatile
   958  004C' D000               	goto	i2l129
   959  004E'                    i2l129:
   960  004E' C026' FFF5         	movff	??_isrHP+13,tablat
   961  0052' C025' FFF8         	movff	??_isrHP+12,tblptru
   962  0056' C024' FFF7         	movff	??_isrHP+11,tblptrh
   963  005A' C023' FFF6         	movff	??_isrHP+10,tblptrl
   964  005E' C022' FFF4         	movff	??_isrHP+9,prodh
   965  0062' C021' FFF3         	movff	??_isrHP+8,prodl
   966  0066' C020' FFDA         	movff	??_isrHP+7,fsr2h
   967  006A' C01F' FFD9         	movff	??_isrHP+6,fsr2l
   968  006E' C01E' FFE2         	movff	??_isrHP+5,fsr1h
   969  0072' C01D' FFE1         	movff	??_isrHP+4,fsr1l
   970  0076' C01C' FFEA         	movff	??_isrHP+3,fsr0h
   971  007A' C01B' FFE9         	movff	??_isrHP+2,fsr0l
   972  007E' C01A' FFFB         	movff	??_isrHP+1,pclatu
   973  0082' C019' FFFA         	movff	??_isrHP,pclath
   974  0086' 0011               	retfie		f
   975  0088'                    __end_of_isrHP:
   976                           	opt stack 0
   977                           pclatu	equ	0xFFB
   978                           pclath	equ	0xFFA
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           prodh	equ	0xFF4
   984                           prodl	equ	0xFF3
   985                           intcon	equ	0xFF2
   986                           intcon3	equ	0xFF0
   987                           postinc0	equ	0xFEE
   988                           fsr0h	equ	0xFEA
   989                           fsr0l	equ	0xFE9
   990                           wreg	equ	0xFE8
   991                           fsr1h	equ	0xFE2
   992                           fsr1l	equ	0xFE1
   993                           bsr	equ	0xFE0
   994                           postinc2	equ	0xFDE
   995                           postdec2	equ	0xFDD
   996                           fsr2h	equ	0xFDA
   997                           fsr2l	equ	0xFD9
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _WriteTimer0 *****************
  1001 ;; Defined at:
  1002 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  timer0          2   21[COMRAM] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  timer           2   23[COMRAM] struct Timers
  1007 ;; Return value:  Size  Location     Type
  1008 ;;		None               void
  1009 ;; Registers used:
  1010 ;;		None
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        4 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_isrHP
  1026 ;;		_ConfigureTimer0
  1027 ;;		_ResetMillis
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text7
  1032  0000'                    __ptext7:
  1033                           	opt stack 0
  1034  0000'                    _WriteTimer0:
  1035                           	opt stack 25
  1036                           
  1037                           ;incstack = 0
  1038  0000' C015' F017'        	movff	WriteTimer0@timer0,WriteTimer0@timer
  1039  0004' C016' F018'        	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1040  0008' C018' FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1041  000C' C017' FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1042  0010' 0012               	return		;funcret
  1043  0012'                    __end_of_WriteTimer0:
  1044                           	opt stack 0
  1045  0000                     pclatu	equ	0xFFB
  1046                           pclath	equ	0xFFA
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           prodh	equ	0xFF4
  1052                           prodl	equ	0xFF3
  1053                           intcon	equ	0xFF2
  1054                           intcon3	equ	0xFF0
  1055                           postinc0	equ	0xFEE
  1056                           fsr0h	equ	0xFEA
  1057                           fsr0l	equ	0xFE9
  1058                           wreg	equ	0xFE8
  1059                           fsr1h	equ	0xFE2
  1060                           fsr1l	equ	0xFE1
  1061                           bsr	equ	0xFE0
  1062                           postinc2	equ	0xFDE
  1063                           postdec2	equ	0xFDD
  1064                           fsr2h	equ	0xFDA
  1065                           fsr2l	equ	0xFD9
  1066                           status	equ	0xFD8
  1067                           pclatu	equ	0xFFB
  1068                           pclath	equ	0xFFA
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           prodh	equ	0xFF4
  1074                           prodl	equ	0xFF3
  1075                           intcon	equ	0xFF2
  1076                           intcon3	equ	0xFF0
  1077                           postinc0	equ	0xFEE
  1078                           fsr0h	equ	0xFEA
  1079                           fsr0l	equ	0xFE9
  1080                           wreg	equ	0xFE8
  1081                           fsr1h	equ	0xFE2
  1082                           fsr1l	equ	0xFE1
  1083                           bsr	equ	0xFE0
  1084                           postinc2	equ	0xFDE
  1085                           postdec2	equ	0xFDD
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8
  1089                           
  1090                           	psect	rparam
  1091  0000                     pclatu	equ	0xFFB
  1092                           pclath	equ	0xFFA
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           prodh	equ	0xFF4
  1098                           prodl	equ	0xFF3
  1099                           intcon	equ	0xFF2
  1100                           intcon3	equ	0xFF0
  1101                           postinc0	equ	0xFEE
  1102                           fsr0h	equ	0xFEA
  1103                           fsr0l	equ	0xFE9
  1104                           wreg	equ	0xFE8
  1105                           fsr1h	equ	0xFE2
  1106                           fsr1l	equ	0xFE1
  1107                           bsr	equ	0xFE0
  1108                           postinc2	equ	0xFDE
  1109                           postdec2	equ	0xFDD
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      55
    BANK0           160      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sensor_readings_ptr	PTR int  size(2) Largest target is 10
		 -> NULL(NULL[0]), sensor_readings(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _isrHP->_WriteTimer0

Critical Paths under _isrLP in COMRAM

    _isrLP->_ReadADC
    _SetADCChannel->_SetChanADC

Critical Paths under _main in BANK0

    _main->_ConfigureUltrasound

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      44
                _ConfigureUltrasound
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6      44
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isrLP                                               17    17      0      30
                                              4 COMRAM    17    17      0
                         _ConvertADC
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (3) _SetADCChannel                                        1     1      0      30
                                              2 COMRAM     1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (4) _SetChanADC                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isrHP                                               14    14      0     227
                                             25 COMRAM    14    14      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (6) _WriteTimer0                                          4     2      2     227
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureUltrasound

 _isrLP (ROOT)
   _ConvertADC
   _ReadADC
   _SetADCChannel
     _SetChanADC

 _isrHP (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6       6       5        3.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      37       1       57.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      32        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Mar 20 12:30:06 2017

                     bsr 000FE0              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000             __CFG_CP4$OFF 000000             __CFG_CP5$OFF 000000  
           __CFG_CP6$OFF 000000             __CFG_CP7$OFF 000000             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000     __size_of_WriteTimer0 000000            _SetADCChannel 000000  
                    wreg 000FE8             __CFG_MODE$MC 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 000000                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 000000* 
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000010  
        __end_of_ReadADC 000010            __CFG_WAIT$OFF 000000                    ?_main 000000  
                  i1l112 0000E8                    i1l137 00008A                    i1l170 00000E  
                  i2l129 00004E                    i1l911 000024                    i1l903 000004  
                  i1l921 00004C                    i1l913 00002C                    i1l905 00000C  
                  i1l931 000074                    i1l923 000054                    i1l915 000034  
                  i1l907 000014           ?_SetADCChannel 000000                    i1l933 00007C  
                  i1l925 00005C                    i1l917 00003C                    i1l909 00001C  
                  i1l927 000064                    i1l919 000044                    i1l929 00006C  
                  i1l937 000084                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TRISG 000F98  
                  _TRISJ 000F9A            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
          __CFG_WRT4$OFF 000000            __CFG_WRT5$OFF 000000            __CFG_WRT6$OFF 000000  
          __CFG_WRT7$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
         __CFG_EBTR4$OFF 000000           __CFG_EBTR5$OFF 000000           __CFG_EBTR6$OFF 000000  
         __CFG_EBTR7$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _isrHP 000000  
                  _isrLP 000000               _ConvertADC 000000           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8        _millisecond_COUNT 000000  
        __initialization 000000             __end_of_main 000034                   ??_main 000027  
          __activetblptr 000003               _SetChanADC 000000      _ConfigureUltrasound 000000* 
                 _ADCON0 000FC2                   ?_isrHP 000000                   ?_isrLP 000000  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   i1l1067 000082  
                 i2l1045 000046          __CFG_BBSIZ$BB2K 000000                ??_ReadADC 000002  
   ?_ConfigureUltrasound 000000           __CFG_XINST$OFF 000000      _sensor_readings_ptr 000000  
                 clear_0 000006          ??_SetADCChannel 000002                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8              ?_ConvertADC 000000  
             __accesstop 000000* __end_of__initialization 00000C    ??_ConfigureUltrasound 000027  
          ___rparam_used 000001           __pcstackCOMRAM 000000            __end_of_isrHP 000088  
          __end_of_isrLP 0000D0              ?_SetChanADC 000000          _sensor_acq_done 000002  
                ??_isrHP 000019                  ??_isrLP 000004               __pnvCOMRAM 000000  
        _sensor_readings 000004         WriteTimer0@timer 000017            ??_WriteTimer0 000017  
    __size_of_ConvertADC 000000                  _ReadADC 000000                  __Hparam 000000  
    __size_of_SetChanADC 000000                  __Lparam 000000          __CFG_STVREN$OFF 000000  
                __pcinit 000000                  __ramtop 000000*                 __ptext0 000000  
                __ptext2 000000                  __ptext3 000000                  __ptext4 000000  
                __ptext5 000000                  __ptext7 000000                _T1CONbits 000FCD  
    __end_of_WriteTimer0 000012           __pintcode_body 000000     end_of_initialization 00000C  
                int_func 000000                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE             ??_ConvertADC 000000              _WriteTimer0 000000  
     __end_of_ConvertADC 000004    __end_of_SetADCChannel 0000EA             ??_SetChanADC 000000  
    start_initialization 000000         _sensor_acq_index 000003     SetADCChannel@channel 000002  
     __end_of_SetChanADC 000016         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000000  
          __pcstackBANK0 000000    _ConfigureUltrasound$0 000000    _ConfigureUltrasound$1 000003  
               ?_ReadADC 000000        __CFG_CCP2MX$PORTC 000000                __pintcode 000000  
            __pintcodelo 000000        WriteTimer0@timer0 000015           __size_of_isrHP 000000  
         __size_of_isrLP 000000                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E    __CFG_DATABW$DATA16BIT 000000                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000        __CFG_ECCPMX$PORTH 000000               _ADCON0bits 000FC2  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0         __size_of_ReadADC 000000  
               __Hrparam 000000*                __Lrparam 000000*            ?_WriteTimer0 000015  
          __size_of_main 000000    __CFG_ADDRBW$ADDR20BIT 000000               _INTCONbits 000FF2  
               intlevel1 000000*                intlevel2 000000*       SetChanADC@channel 000001  
 __size_of_SetADCChannel 000000  
