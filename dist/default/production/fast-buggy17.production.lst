

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 27 13:15:18 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1
   116                           	psect	text104,global,reloc=2,class=CODE,delta=1
   117                           	psect	text105,global,reloc=2,class=CODE,delta=1
   118                           	psect	text106,global,reloc=2,class=CODE,delta=1
   119                           	psect	text107,global,reloc=2,class=CODE,delta=1
   120                           	psect	text108,global,reloc=2,class=CODE,delta=1
   121                           	psect	text109,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   124                           	psect	text111,global,reloc=2,class=CODE,delta=1
   125                           	psect	text112,global,reloc=2,class=CODE,delta=1
   126                           	psect	text113,global,reloc=2,class=CODE,delta=1
   127                           	psect	text114,global,reloc=2,class=CODE,delta=1
   128                           	psect	text115,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           	psect	nvBANK0
   133  0000E6                     __pnvBANK0:
   134                           	opt stack 0
   135  0000E6                     _convert_cm:
   136                           	opt stack 0
   137  0000E6                     	ds	3
   138  0000E9                     _convert_in:
   139                           	opt stack 0
   140  0000E9                     	ds	3
   141  0000                     _ADCON0	set	4034
   142  0000                     _ADCON0bits	set	4034
   143  0000                     _ADCON1	set	4033
   144  0000                     _ADCON2	set	4032
   145  0000                     _ADRESH	set	4036
   146  0000                     _ADRESL	set	4035
   147  0000                     _CCP4CON	set	3955
   148  0000                     _CCP5CON	set	3952
   149  0000                     _CCPR4L	set	3956
   150  0000                     _CCPR5L	set	3953
   151  0000                     _EEADR	set	4009
   152  0000                     _EEADRH	set	4010
   153  0000                     _EECON1bits	set	4006
   154  0000                     _EECON2	set	4007
   155  0000                     _EEDATA	set	4008
   156  0000                     _INTCON2bits	set	4081
   157  0000                     _INTCON3bits	set	4080
   158  0000                     _INTCONbits	set	4082
   159  0000                     _IPR1bits	set	3999
   160  0000                     _LATDbits	set	3980
   161  0000                     _LATE	set	3981
   162  0000                     _LATEbits	set	3981
   163  0000                     _LATHbits	set	3984
   164  0000                     _LATJ	set	3985
   165  0000                     _PIE1bits	set	3997
   166  0000                     _PIR1bits	set	3998
   167  0000                     _PORTBbits	set	3969
   168  0000                     _PORTHbits	set	3975
   169  0000                     _PR2	set	4043
   170  0000                     _PR4	set	3959
   171  0000                     _RCONbits	set	4048
   172  0000                     _RCREG1	set	4014
   173  0000                     _RCSTA1	set	4011
   174  0000                     _RCSTA1bits	set	4011
   175  0000                     _SPBRG1	set	4015
   176  0000                     _SPBRGH1	set	3967
   177  0000                     _T0CON	set	4053
   178  0000                     _T0CONbits	set	4053
   179  0000                     _T1CON	set	4045
   180  0000                     _T1CONbits	set	4045
   181  0000                     _T2CON	set	4042
   182  0000                     _T2CONbits	set	4042
   183  0000                     _T3CONbits	set	4017
   184  0000                     _T4CONbits	set	3958
   185  0000                     _TMR0H	set	4055
   186  0000                     _TMR0L	set	4054
   187  0000                     _TMR1H	set	4047
   188  0000                     _TMR1L	set	4046
   189  0000                     _TMR2	set	4044
   190  0000                     _TRISA	set	3986
   191  0000                     _TRISB	set	3987
   192  0000                     _TRISC	set	3988
   193  0000                     _TRISCbits	set	3988
   194  0000                     _TRISD	set	3989
   195  0000                     _TRISE	set	3990
   196  0000                     _TRISG	set	3992
   197  0000                     _TRISGbits	set	3992
   198  0000                     _TRISHbits	set	3993
   199  0000                     _TRISJ	set	3994
   200  0000                     _TXREG1	set	4013
   201  0000                     _TXSTA1	set	4012
   202  0000                     _TXSTA1bits	set	4012
   203                           
   204                           ; #config settings
   205  0000                     
   206                           	psect	cinit
   207  00220E                     __pcinit:
   208                           	opt stack 0
   209  00220E                     start_initialization:
   210                           	opt stack 0
   211  00220E                     __initialization:
   212                           	opt stack 0
   213                           
   214                           ; Clear objects allocated to BANK0 (94 bytes)
   215  00220E  EE00  F060         	lfsr	0,__pbssBANK0
   216  002212  0E5E               	movlw	94
   217  002214                     clear_0:
   218  002214  6AEE               	clrf	postinc0,c
   219  002216  06E8               	decf	wreg,f,c
   220  002218  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to COMRAM (42 bytes)
   223  00221A  EE00  F001         	lfsr	0,__pbssCOMRAM
   224  00221E  0E2A               	movlw	42
   225  002220                     clear_1:
   226  002220  6AEE               	clrf	postinc0,c
   227  002222  06E8               	decf	wreg,f,c
   228  002224  E1FD               	bnz	clear_1
   229  002226                     end_of_initialization:
   230                           	opt stack 0
   231  002226                     __end_of__initialization:
   232                           	opt stack 0
   233  002226  0100               	movlb	0
   234  002228  EF78  F000         	goto	_main	;jump to C main() function
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           	psect	bssCOMRAM
   239  000001                     __pbssCOMRAM:
   240                           	opt stack 0
   241  000001                     _SystemClock:
   242                           	opt stack 0
   243  000001                     	ds	6
   244  000007                     _DCmotorL:
   245                           	opt stack 0
   246  000007                     	ds	2
   247  000009                     _DCmotorR:
   248                           	opt stack 0
   249  000009                     	ds	2
   250  00000B                     _echo_time:
   251                           	opt stack 0
   252  00000B                     	ds	2
   253  00000D                     _millisecond_COUNT0:
   254                           	opt stack 0
   255  00000D                     	ds	2
   256  00000F                     _millisecond_COUNT1:
   257                           	opt stack 0
   258  00000F                     	ds	2
   259  000011                     _millisecond_COUNT2:
   260                           	opt stack 0
   261  000011                     	ds	2
   262  000013                     _millisecond_COUNT3:
   263                           	opt stack 0
   264  000013                     	ds	2
   265  000015                     _RxCharacter:
   266                           	opt stack 0
   267  000015                     	ds	1
   268  000016                     _Rx_chars_received:
   269                           	opt stack 0
   270  000016                     	ds	1
   271  000017                     _Rx_complete:
   272                           	opt stack 0
   273  000017                     	ds	1
   274  000018                     _Rx_msg_length:
   275                           	opt stack 0
   276  000018                     	ds	1
   277  000019                     _TxCharacter:
   278                           	opt stack 0
   279  000019                     	ds	1
   280  00001A                     _Tx_complete:
   281                           	opt stack 0
   282  00001A                     	ds	1
   283  00001B                     _USART1_Status:
   284                           	opt stack 0
   285  00001B                     	ds	1
   286  00001C                     _echo_acq_done:
   287                           	opt stack 0
   288  00001C                     	ds	1
   289  00001D                     _get_Rx_index:
   290                           	opt stack 0
   291  00001D                     	ds	1
   292  00001E                     _get_Tx_index:
   293                           	opt stack 0
   294  00001E                     	ds	1
   295  00001F                     _put_Rx_index:
   296                           	opt stack 0
   297  00001F                     	ds	1
   298  000020                     _put_Tx_index:
   299                           	opt stack 0
   300  000020                     	ds	1
   301  000021                     _second_rollover_flag:
   302                           	opt stack 0
   303  000021                     	ds	1
   304  000022                     _sensor_acq_done:
   305                           	opt stack 0
   306  000022                     	ds	1
   307  000023                     _sensor_acq_index:
   308                           	opt stack 0
   309  000023                     	ds	1
   310  000024                     _system_clock_enable:
   311                           	opt stack 0
   312  000024                     	ds	1
   313  000025                     _sensor_statuses:
   314                           	opt stack 0
   315  000025                     	ds	5
   316  00002A                     _line_mode:
   317                           	opt stack 0
   318  00002A                     	ds	1
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	bssBANK0
   323  000060                     __pbssBANK0:
   324                           	opt stack 0
   325  000060                     _Rx_buffer:
   326                           	opt stack 0
   327  000060                     	ds	25
   328  000079                     _Tx_buffer:
   329                           	opt stack 0
   330  000079                     	ds	25
   331  000092                     _PID_Kd:
   332                           	opt stack 0
   333  000092                     	ds	2
   334  000094                     _PID_Ki:
   335                           	opt stack 0
   336  000094                     	ds	2
   337  000096                     _PID_Kp:
   338                           	opt stack 0
   339  000096                     	ds	2
   340  000098                     _PID_output:
   341                           	opt stack 0
   342  000098                     	ds	2
   343  00009A                     _sensor_offsets:
   344                           	opt stack 0
   345  00009A                     	ds	10
   346  0000A4                     _sensor_readings_normalised:
   347                           	opt stack 0
   348  0000A4                     	ds	10
   349  0000AE                     _sensor_readings_raw:
   350                           	opt stack 0
   351  0000AE                     	ds	10
   352  0000B8                     _PID_error:
   353                           	opt stack 0
   354  0000B8                     	ds	2
   355  0000BA                     _PID_set_point:
   356                           	opt stack 0
   357  0000BA                     	ds	2
   358  0000BC                     _sensor_threshold:
   359                           	opt stack 0
   360  0000BC                     	ds	2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           
   364                           	psect	cstackBANK1
   365  000100                     __pcstackBANK1:
   366                           	opt stack 0
   367  000100                     main@sensor_sum_ptr:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x0
   371  000100                     	ds	2
   372  000102                     main@PID_error_ptr:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x2
   376  000102                     	ds	2
   377  000104                     main@battery_current_ptr:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381  000104                     	ds	2
   382  000106                     main@battery_current_acc_ptr:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x6
   386  000106                     	ds	2
   387  000108                     main@line_end_flag:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x8
   391  000108                     	ds	1
   392  000109                     main@send_battery_stats_flag:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x9
   396  000109                     	ds	1
   397  00010A                     main@find_line_flag:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xA
   401  00010A                     	ds	1
   402  00010B                     main@battery_current_acc:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0xB
   406  00010B                     	ds	4
   407  00010F                     main@battery_current:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0xF
   411  00010F                     	ds	2
   412  000111                     main@line_mode_ptr:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x11
   416  000111                     	ds	2
   417  000113                     main@PID_set_point_ptr:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x13
   421  000113                     	ds	2
   422  000115                     main@battery_voltage_ptr:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x15
   426  000115                     	ds	2
   427  000117                     main@wall_detected_flag:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x17
   431  000117                     	ds	1
   432  000118                     main@battery_voltage:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x18
   436  000118                     	ds	2
   437  00011A                     main@D_temp:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x1A
   441  00011A                     	ds	2
   442  00011C                     main@I_temp:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x1C
   446  00011C                     	ds	2
   447  00011E                     main@stop_flag:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1E
   451  00011E                     	ds	1
   452  00011F                     main@sensor_sum:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x1F
   456  00011F                     	ds	2
   457  000121                     main@command_msg:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x21
   461  000121                     	ds	1
   462  000122                     main@Kp_stored:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x22
   466  000122                     	ds	2
   467  000124                     main@Kd_stored:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x24
   471  000124                     	ds	2
   472  000126                     main@Ki_stored:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x26
   476  000126                     	ds	2
   477  000128                     main@sensor_sum_discrete:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x28
   481  000128                     	ds	1
   482  000129                     main@sensor_threshold_ptr:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x29
   486  000129                     	ds	2
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           
   490                           	psect	cstackBANK0
   491  0000BE                     __pcstackBANK0:
   492                           	opt stack 0
   493  0000BE                     ReadTimer1@timer:
   494                           	opt stack 0
   495  0000BE                     i2WriteTimer0@timer:
   496                           	opt stack 0
   497  0000BE                     i2WriteTimer1@timer:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x0
   501  0000BE                     	ds	2
   502  0000C0                     ??_isrHP:
   503                           
   504                           ; 0 bytes @ 0x2
   505  0000C0                     	ds	14
   506  0000CE                     ??_SetChanADC:
   507  0000CE                     ??_Delay10KTCYx:
   508  0000CE                     ?_ReadADC:
   509                           	opt stack 0
   510  0000CE                     ?_ReadEchoLength:
   511                           	opt stack 0
   512  0000CE                     ?_ReadMillis0:
   513                           	opt stack 0
   514  0000CE                     ?_ReadMillis1:
   515                           	opt stack 0
   516  0000CE                     ?_ReadMillis2:
   517                           	opt stack 0
   518  0000CE                     ?___wmul:
   519                           	opt stack 0
   520  0000CE                     ?___awdiv:
   521                           	opt stack 0
   522  0000CE                     ?___awmod:
   523                           	opt stack 0
   524  0000CE                     FlushTxBuf@index:
   525                           	opt stack 0
   526  0000CE                     FlushRxBuf@index:
   527                           	opt stack 0
   528  0000CE                     OWReset@result:
   529                           	opt stack 0
   530  0000CE                     OWWriteBit@b:
   531                           	opt stack 0
   532  0000CE                     OWReadBit@result:
   533                           	opt stack 0
   534  0000CE                     OpenADC@config2:
   535                           	opt stack 0
   536  0000CE                     OpenPWM4@period:
   537                           	opt stack 0
   538  0000CE                     OpenPWM5@period:
   539                           	opt stack 0
   540  0000CE                     OpenTimer0@config:
   541                           	opt stack 0
   542  0000CE                     OpenTimer1@config:
   543                           	opt stack 0
   544  0000CE                     OpenTimer2@config:
   545                           	opt stack 0
   546  0000CE                     Read1USART@data:
   547                           	opt stack 0
   548  0000CE                     Delay1TCYx@unit:
   549                           	opt stack 0
   550  0000CE                     WriteEEPROM@address:
   551                           	opt stack 0
   552  0000CE                     ReadEEPROM@address:
   553                           	opt stack 0
   554  0000CE                     NormaliseSensorReadings@sensor_readings_raw:
   555                           	opt stack 0
   556  0000CE                     CalculateSensorStatuses@sensor_readings_normalised:
   557                           	opt stack 0
   558  0000CE                     CalculateSensorSumDiscrete@sensor_statuses:
   559                           	opt stack 0
   560  0000CE                     DisplaySensorStatuses@sensor_statuses:
   561                           	opt stack 0
   562  0000CE                     SetDCPWM4@dutycycle:
   563                           	opt stack 0
   564  0000CE                     SetDCPWM5@dutycycle:
   565                           	opt stack 0
   566  0000CE                     WriteTimer0@timer0:
   567                           	opt stack 0
   568  0000CE                     WriteTimer1@timer1:
   569                           	opt stack 0
   570  0000CE                     Open1USART@spbrg:
   571                           	opt stack 0
   572  0000CE                     ___wmul@multiplier:
   573                           	opt stack 0
   574  0000CE                     ___awdiv@dividend:
   575                           	opt stack 0
   576  0000CE                     ___awmod@dividend:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x10
   580  0000CE                     	ds	1
   581  0000CF                     OWWriteByte@byte:
   582                           	opt stack 0
   583  0000CF                     OWReadByte@result:
   584                           	opt stack 0
   585  0000CF                     OpenADC@portconfig:
   586                           	opt stack 0
   587  0000CF                     SetChanADC@channel:
   588                           	opt stack 0
   589  0000CF                     Delay10KTCYx@unit:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x11
   593  0000CF                     	ds	1
   594  0000D0                     ??_SetDCPWM5:
   595  0000D0                     ??_SetDCPWM4:
   596  0000D0                     ??_OpenADC:
   597  0000D0                     ??_ReadADC:
   598  0000D0                     ??_DisplaySensorStatuses:
   599  0000D0                     ?_ReadIntEEPROM:
   600                           	opt stack 0
   601  0000D0                     WriteEEPROM@data:
   602                           	opt stack 0
   603  0000D0                     OWWriteByte@i:
   604                           	opt stack 0
   605  0000D0                     OWReadByte@i:
   606                           	opt stack 0
   607  0000D0                     SetADCChannel@channel:
   608                           	opt stack 0
   609  0000D0                     CalculateSensorSumDiscrete@sum:
   610                           	opt stack 0
   611  0000D0                     Open1USART@config:
   612                           	opt stack 0
   613  0000D0                     ReadIntEEPROM@address:
   614                           	opt stack 0
   615  0000D0                     ReadCharEEPROM@address:
   616                           	opt stack 0
   617  0000D0                     NormaliseSensorReadings@sensor_offsets:
   618                           	opt stack 0
   619  0000D0                     CalculateSensorStatuses@sensor_threshold:
   620                           	opt stack 0
   621  0000D0                     WriteTimer0@timer:
   622                           	opt stack 0
   623  0000D0                     WriteTimer1@timer:
   624                           	opt stack 0
   625  0000D0                     ___wmul@multiplicand:
   626                           	opt stack 0
   627  0000D0                     ___awdiv@divisor:
   628                           	opt stack 0
   629  0000D0                     ___awmod@divisor:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x12
   633  0000D0                     	ds	1
   634  0000D1                     ?_ReadVoltage:
   635                           	opt stack 0
   636  0000D1                     CalculateSensorSumDiscrete@index:
   637                           	opt stack 0
   638  0000D1                     WriteIntEEPROM@address:
   639                           	opt stack 0
   640  0000D1                     WriteCharEEPROM@address:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x13
   644  0000D1                     	ds	1
   645  0000D2                     ??_ReadIntEEPROM:
   646  0000D2                     ??_NormaliseSensorReadings:
   647  0000D2                     ??_CalculateSensorStatuses:
   648  0000D2                     DisplaySensorStatuses@index:
   649                           	opt stack 0
   650  0000D2                     OpenADC@config:
   651                           	opt stack 0
   652  0000D2                     ___awdiv@counter:
   653                           	opt stack 0
   654  0000D2                     ___awmod@counter:
   655                           	opt stack 0
   656  0000D2                     SetDCPWM4@DCycle:
   657                           	opt stack 0
   658  0000D2                     SetDCPWM5@DCycle:
   659                           	opt stack 0
   660  0000D2                     ___wmul@product:
   661                           	opt stack 0
   662  0000D2                     ConfigureUltrasound@echo_to_cm:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x14
   666  0000D2                     	ds	1
   667  0000D3                     ??_ReadVoltage:
   668  0000D3                     WriteCharEEPROM@data:
   669                           	opt stack 0
   670  0000D3                     ___awdiv@sign:
   671                           	opt stack 0
   672  0000D3                     ___awmod@sign:
   673                           	opt stack 0
   674  0000D3                     WriteIntEEPROM@data:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x15
   678  0000D3                     	ds	1
   679  0000D4                     ??_PutCharTxBuf:
   680  0000D4                     ??_PutCharRxBuf:
   681  0000D4                     ??_GetCharRxBuf:
   682  0000D4                     ?_CalculateSensorSum:
   683                           	opt stack 0
   684  0000D4                     SetDCMotorL@duty_cycle:
   685                           	opt stack 0
   686  0000D4                     SetDCMotorR@duty_cycle:
   687                           	opt stack 0
   688  0000D4                     CalculateSensorSum@sensor_readings_normalised:
   689                           	opt stack 0
   690  0000D4                     ___awdiv@quotient:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x16
   694  0000D4                     	ds	1
   695  0000D5                     PutCharTxBuf@ch:
   696                           	opt stack 0
   697  0000D5                     PutCharRxBuf@ch:
   698                           	opt stack 0
   699  0000D5                     GetCharRxBuf@ch:
   700                           	opt stack 0
   701  0000D5                     ReadIntEEPROM@data:
   702                           	opt stack 0
   703  0000D5                     ConfigureUltrasound@echo_to_in:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x17
   707  0000D5                     	ds	1
   708  0000D6                     ??_CalculateSensorSum:
   709  0000D6                     SendStatus@status_code:
   710                           	opt stack 0
   711  0000D6                     NormaliseSensorReadings@index:
   712                           	opt stack 0
   713  0000D6                     SetDCMotorPID@PIDoutput:
   714                           	opt stack 0
   715  0000D6                     SendLineMode@line_mode:
   716                           	opt stack 0
   717  0000D6                     SendOffsets@offsets_array:
   718                           	opt stack 0
   719  0000D6                     SendThreshold@sensor_threshold:
   720                           	opt stack 0
   721  0000D6                     SendDefaultPIDValues@Kp:
   722                           	opt stack 0
   723  0000D6                     SendStoredPIDValues@Kp:
   724                           	opt stack 0
   725  0000D6                     SendCurrentPIDValues@Kp:
   726                           	opt stack 0
   727  0000D6                     SendBattVoltageInitial@reading:
   728                           	opt stack 0
   729  0000D6                     SendPIDSetPointOnLine@set_point:
   730                           	opt stack 0
   731  0000D6                     ReadVoltage@result:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x18
   735  0000D6                     	ds	1
   736  0000D7                     ??_CalibrateOffsets:
   737  0000D7                     ??_SetPIDValues:
   738  0000D7                     CalculateSensorStatuses@index:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x19
   742  0000D7                     	ds	1
   743  0000D8                     ??_SetDCMotorPID:
   744  0000D8                     ??_SendOffsets:
   745  0000D8                     ??_SendThreshold:
   746  0000D8                     ??_SendBattVoltageInitial:
   747  0000D8                     ??_SendPIDSetPointOnLine:
   748  0000D8                     SendDefaultPIDValues@Kd:
   749                           	opt stack 0
   750  0000D8                     SendStoredPIDValues@Kd:
   751                           	opt stack 0
   752  0000D8                     SendCurrentPIDValues@Kd:
   753                           	opt stack 0
   754  0000D8                     CalculateSensorSum@sum:
   755                           	opt stack 0
   756  0000D8                     CalibrateThreshold@sensor_threshold_temp_ptr:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x1A
   760  0000D8                     	ds	1
   761  0000D9                     CalibrateOffsets@index:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x1B
   765  0000D9                     	ds	1
   766  0000DA                     SendOffsets@index:
   767                           	opt stack 0
   768  0000DA                     SetPIDValues@char_index:
   769                           	opt stack 0
   770  0000DA                     SendDefaultPIDValues@Ki:
   771                           	opt stack 0
   772  0000DA                     SendStoredPIDValues@Ki:
   773                           	opt stack 0
   774  0000DA                     SendCurrentPIDValues@Ki:
   775                           	opt stack 0
   776  0000DA                     CalibrateThreshold@sensor_threshold_temp:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x1C
   780  0000DA                     	ds	1
   781  0000DB                     
   782                           ; 0 bytes @ 0x1D
   783  0000DB                     	ds	1
   784  0000DC                     ??_GenerateCalibration:
   785                           
   786                           ; 0 bytes @ 0x1E
   787  0000DC                     	ds	2
   788  0000DE                     GenerateCalibration@index:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x20
   792  0000DE                     	ds	1
   793  0000DF                     ??_LoadCalibration:
   794                           
   795                           ; 0 bytes @ 0x21
   796  0000DF                     	ds	2
   797  0000E1                     LoadCalibration@index:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x23
   801  0000E1                     	ds	1
   802  0000E2                     ??_main:
   803                           
   804                           ; 0 bytes @ 0x24
   805  0000E2                     	ds	4
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           
   809                           	psect	cstackCOMRAM
   810  00002B                     __pcstackCOMRAM:
   811                           	opt stack 0
   812  00002B                     ??i1_SetChanADC:
   813  00002B                     ?i1_ReadADC:
   814                           	opt stack 0
   815  00002B                     ?i1___awmod:
   816                           	opt stack 0
   817  00002B                     Write1USART@data:
   818                           	opt stack 0
   819  00002B                     i1___awmod@dividend:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x0
   823  00002B                     	ds	1
   824  00002C                     i1SetChanADC@channel:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x1
   828  00002C                     	ds	1
   829  00002D                     ??i1_ReadADC:
   830  00002D                     i1SetADCChannel@channel:
   831                           	opt stack 0
   832  00002D                     i1___awmod@divisor:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x2
   836  00002D                     	ds	2
   837  00002F                     i1___awmod@counter:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x4
   841  00002F                     	ds	1
   842  000030                     i1___awmod@sign:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x5
   846  000030                     	ds	1
   847  000031                     ??_GetCharTxBuf:
   848                           
   849                           ; 0 bytes @ 0x6
   850  000031                     	ds	1
   851  000032                     GetCharTxBuf@ch:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x7
   855  000032                     	ds	1
   856  000033                     ??_isrLP:
   857                           
   858                           ; 0 bytes @ 0x8
   859  000033                     	ds	17
   860  000044                     ?_ReadTimer1:
   861                           	opt stack 0
   862  000044                     i2WriteTimer0@timer0:
   863                           	opt stack 0
   864  000044                     i2WriteTimer1@timer1:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x19
   868  000044                     	ds	2
   869  000046                     postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           
   872                           ; 0 bytes @ 0x1B
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 685 in file "FastBuggy17_Main_Code_TUNING.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  battery_curr    4   11[BANK1 ] unsigned long 
   883 ;;  sensor_thres    2   41[BANK1 ] PTR int 
   884 ;;		 -> sensor_threshold(2), 
   885 ;;  Ki_stored       2   38[BANK1 ] int 
   886 ;;  Kd_stored       2   36[BANK1 ] int 
   887 ;;  Kp_stored       2   34[BANK1 ] int 
   888 ;;  sensor_sum      2   31[BANK1 ] int 
   889 ;;  I_temp          2   28[BANK1 ] int 
   890 ;;  D_temp          2   26[BANK1 ] int 
   891 ;;  battery_volt    2   24[BANK1 ] unsigned int 
   892 ;;  battery_volt    2   21[BANK1 ] PTR unsigned int 
   893 ;;		 -> main@battery_voltage(2), 
   894 ;;  PID_set_poin    2   19[BANK1 ] PTR int 
   895 ;;		 -> PID_set_point(2), 
   896 ;;  line_mode_pt    2   17[BANK1 ] PTR unsigned char 
   897 ;;		 -> line_mode(1), 
   898 ;;  battery_curr    2   15[BANK1 ] unsigned int 
   899 ;;  battery_curr    2    6[BANK1 ] PTR unsigned long 
   900 ;;		 -> main@battery_current_acc(4), 
   901 ;;  battery_curr    2    4[BANK1 ] PTR unsigned int 
   902 ;;		 -> main@battery_current(2), 
   903 ;;  PID_error_pt    2    2[BANK1 ] PTR int 
   904 ;;		 -> PID_error(2), 
   905 ;;  sensor_sum_p    2    0[BANK1 ] PTR int 
   906 ;;		 -> main@sensor_sum(2), 
   907 ;;  I_min           2    0        int 
   908 ;;  I_max           2    0        int 
   909 ;;  echo_length     2    0        unsigned int 
   910 ;;  sensor_sum_d    1   40[BANK1 ] unsigned char 
   911 ;;  command_msg     1   33[BANK1 ] unsigned char 
   912 ;;  stop_flag       1   30[BANK1 ] unsigned char 
   913 ;;  wall_detecte    1   23[BANK1 ] unsigned char 
   914 ;;  find_line_fl    1   10[BANK1 ] unsigned char 
   915 ;;  send_battery    1    9[BANK1 ] unsigned char 
   916 ;;  line_end_fla    1    8[BANK1 ] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         0       4      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:       47 bytes
   931 ;; Hardware stack levels required when called:   13
   932 ;; This function calls:
   933 ;;		_BusyDistanceAcq
   934 ;;		_BusySensorAcq
   935 ;;		_CalculateSensorStatuses
   936 ;;		_CalculateSensorSum
   937 ;;		_CalculateSensorSumDiscrete
   938 ;;		_CommandAvailable
   939 ;;		_ConfigureADC
   940 ;;		_ConfigureBuggyIO
   941 ;;		_ConfigureInterrupts
   942 ;;		_ConfigurePWM
   943 ;;		_ConfigureTimer0
   944 ;;		_ConfigureTimer1
   945 ;;		_ConfigureTimer2
   946 ;;		_ConfigureUltrasound
   947 ;;		_ConfigureWireless
   948 ;;		_Delay10KTCYx
   949 ;;		_DisableMotors
   950 ;;		_DisplaySensorStatuses
   951 ;;		_EnableMotors
   952 ;;		_EnableSensorLEDS
   953 ;;		_FlashLEDS
   954 ;;		_GenerateCalibration
   955 ;;		_GetCommand
   956 ;;		_GetDistance
   957 ;;		_GetSensorReadings
   958 ;;		_LoadCalibration
   959 ;;		_LoadPIDValues
   960 ;;		_NormaliseSensorReadings
   961 ;;		_PB1pressed
   962 ;;		_PB2pressed
   963 ;;		_ReadEchoLength
   964 ;;		_ReadIntEEPROM
   965 ;;		_ReadMillis0
   966 ;;		_ReadMillis1
   967 ;;		_ReadMillis2
   968 ;;		_ReadVoltage
   969 ;;		_ResetAccumulatedCurrent
   970 ;;		_ResetMillis0
   971 ;;		_ResetMillis1
   972 ;;		_ResetMillis2
   973 ;;		_ResetMillis3
   974 ;;		_SendBattVoltageInitial
   975 ;;		_SendCurrentPIDValues
   976 ;;		_SendDefaultPIDValues
   977 ;;		_SendLineMode
   978 ;;		_SendOffsets
   979 ;;		_SendPIDSetPointOnLine
   980 ;;		_SendStatus
   981 ;;		_SendStoredPIDValues
   982 ;;		_SendThreshold
   983 ;;		_SetDCMotorL
   984 ;;		_SetDCMotorPID
   985 ;;		_SetDCMotorR
   986 ;;		_SetDirectionForward
   987 ;;		_SetForwardsMotorR
   988 ;;		_SetPIDValues
   989 ;;		_SetReverseMotorL
   990 ;;		_SetUnipolar
   991 ;;		_StopMotors
   992 ;;		___awdiv
   993 ;;		___wmul
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text0
  1000  0000F0                     __ptext0:
  1001                           	opt stack 0
  1002  0000F0                     _main:
  1003                           	opt stack 18
  1004                           
  1005                           ;FastBuggy17_Main_Code_TUNING.c: 688: unsigned char stop_flag, find_line_flag, line_end_
      +                          flag, wall_detected_flag, send_battery_stats_flag, command_msg, sensor_sum_discrete;
  1006                           ;FastBuggy17_Main_Code_TUNING.c: 689: unsigned int echo_length, battery_voltage, battery
      +                          _current;
  1007                           ;FastBuggy17_Main_Code_TUNING.c: 690: unsigned long int battery_current_acc;
  1008                           ;FastBuggy17_Main_Code_TUNING.c: 691: int sensor_sum, D_temp, I_temp, I_max, I_min, Kp_s
      +                          tored, Kd_stored, Ki_stored;
  1009                           ;FastBuggy17_Main_Code_TUNING.c: 694: unsigned char *line_mode_ptr;
  1010                           
  1011                           ;incstack = 0
  1012  0000F0  0E2A               	movlw	low _line_mode
  1013  0000F2  0101               	movlb	1	; () banked
  1014  0000F4  6F11               	movwf	main@line_mode_ptr& (0+255),b
  1015  0000F6  0E00               	movlw	high _line_mode
  1016  0000F8  0101               	movlb	1	; () banked
  1017  0000FA  6F12               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1018                           
  1019                           ;FastBuggy17_Main_Code_TUNING.c: 698: sensor_threshold_ptr = &sensor_threshold;
  1020  0000FC  0EBC               	movlw	low _sensor_threshold
  1021  0000FE  0101               	movlb	1	; () banked
  1022  000100  6F29               	movwf	main@sensor_threshold_ptr& (0+255),b
  1023  000102  0E00               	movlw	high _sensor_threshold
  1024  000104  0101               	movlb	1	; () banked
  1025  000106  6F2A               	movwf	(main@sensor_threshold_ptr+1)& (0+255),b
  1026                           
  1027                           ;FastBuggy17_Main_Code_TUNING.c: 699: sensor_sum_ptr = &sensor_sum;
  1028  000108  0E1F               	movlw	low main@sensor_sum
  1029  00010A  0101               	movlb	1	; () banked
  1030  00010C  6F00               	movwf	main@sensor_sum_ptr& (0+255),b
  1031  00010E  0E01               	movlw	high main@sensor_sum
  1032  000110  0101               	movlb	1	; () banked
  1033  000112  6F01               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1034                           
  1035                           ;FastBuggy17_Main_Code_TUNING.c: 700: PID_error_ptr = &PID_error;
  1036  000114  0EB8               	movlw	low _PID_error
  1037  000116  0101               	movlb	1	; () banked
  1038  000118  6F02               	movwf	main@PID_error_ptr& (0+255),b
  1039  00011A  0E00               	movlw	high _PID_error
  1040  00011C  0101               	movlb	1	; () banked
  1041  00011E  6F03               	movwf	(main@PID_error_ptr+1)& (0+255),b
  1042                           
  1043                           ;FastBuggy17_Main_Code_TUNING.c: 701: PID_set_point_ptr = &PID_set_point;
  1044  000120  0EBA               	movlw	low _PID_set_point
  1045  000122  0101               	movlb	1	; () banked
  1046  000124  6F13               	movwf	main@PID_set_point_ptr& (0+255),b
  1047  000126  0E00               	movlw	high _PID_set_point
  1048  000128  0101               	movlb	1	; () banked
  1049  00012A  6F14               	movwf	(main@PID_set_point_ptr+1)& (0+255),b
  1050                           
  1051                           ;FastBuggy17_Main_Code_TUNING.c: 703: unsigned int *battery_voltage_ptr, *battery_curren
      +                          t_ptr;
  1052                           ;FastBuggy17_Main_Code_TUNING.c: 704: unsigned long int *battery_current_acc_ptr;
  1053                           ;FastBuggy17_Main_Code_TUNING.c: 706: battery_voltage_ptr = &battery_voltage;
  1054  00012C  0E18               	movlw	low main@battery_voltage
  1055  00012E  0101               	movlb	1	; () banked
  1056  000130  6F15               	movwf	main@battery_voltage_ptr& (0+255),b
  1057  000132  0E01               	movlw	high main@battery_voltage
  1058  000134  0101               	movlb	1	; () banked
  1059  000136  6F16               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1060                           
  1061                           ;FastBuggy17_Main_Code_TUNING.c: 707: battery_current_ptr = &battery_current;
  1062  000138  0E0F               	movlw	low main@battery_current
  1063  00013A  0101               	movlb	1	; () banked
  1064  00013C  6F04               	movwf	main@battery_current_ptr& (0+255),b
  1065  00013E  0E01               	movlw	high main@battery_current
  1066  000140  0101               	movlb	1	; () banked
  1067  000142  6F05               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1068                           
  1069                           ;FastBuggy17_Main_Code_TUNING.c: 708: battery_current_acc_ptr = &battery_current_acc;
  1070  000144  0E0B               	movlw	low main@battery_current_acc
  1071  000146  0101               	movlb	1	; () banked
  1072  000148  6F06               	movwf	main@battery_current_acc_ptr& (0+255),b
  1073  00014A  0E01               	movlw	high main@battery_current_acc
  1074  00014C  0101               	movlb	1	; () banked
  1075  00014E  6F07               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;FastBuggy17_Main_Code_TUNING.c: 711: ConfigureUltrasound(0.0137, 0.054);
  1079  000150  0E76               	movlw	118
  1080  000152  0100               	movlb	0	; () banked
  1081  000154  6FD2               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1082  000156  0E60               	movlw	96
  1083  000158  0100               	movlb	0	; () banked
  1084  00015A  6FD3               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1085  00015C  0E3C               	movlw	60
  1086  00015E  0100               	movlb	0	; () banked
  1087  000160  6FD4               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1088  000162  0E2F               	movlw	47
  1089  000164  0100               	movlb	0	; () banked
  1090  000166  6FD5               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1091  000168  0E5D               	movlw	93
  1092  00016A  0100               	movlb	0	; () banked
  1093  00016C  6FD6               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1094  00016E  0E3D               	movlw	61
  1095  000170  0100               	movlb	0	; () banked
  1096  000172  6FD7               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1097  000174  EC6F  F010         	call	_ConfigureUltrasound	;wreg free
  1098                           
  1099                           ;FastBuggy17_Main_Code_TUNING.c: 712: ConfigureBuggyIO();
  1100  000178  EC61  F011         	call	_ConfigureBuggyIO	;wreg free
  1101                           
  1102                           ;FastBuggy17_Main_Code_TUNING.c: 713: ConfigureInterrupts();
  1103  00017C  EC83  F010         	call	_ConfigureInterrupts	;wreg free
  1104                           
  1105                           ;FastBuggy17_Main_Code_TUNING.c: 714: ConfigureTimer0();
  1106  000180  EC85  F011         	call	_ConfigureTimer0	;wreg free
  1107                           
  1108                           ;FastBuggy17_Main_Code_TUNING.c: 715: ConfigureTimer1();
  1109  000184  EC6E  F011         	call	_ConfigureTimer1	;wreg free
  1110                           
  1111                           ;FastBuggy17_Main_Code_TUNING.c: 716: ConfigureTimer2();
  1112  000188  EC7D  F012         	call	_ConfigureTimer2	;wreg free
  1113                           
  1114                           ;FastBuggy17_Main_Code_TUNING.c: 717: ConfigurePWM();
  1115  00018C  EC46  F012         	call	_ConfigurePWM	;wreg free
  1116                           
  1117                           ;FastBuggy17_Main_Code_TUNING.c: 718: ConfigureADC();
  1118  000190  ECBA  F011         	call	_ConfigureADC	;wreg free
  1119                           
  1120                           ;FastBuggy17_Main_Code_TUNING.c: 719: ConfigureWireless();
  1121  000194  EC43  F011         	call	_ConfigureWireless	;wreg free
  1122                           
  1123                           ;FastBuggy17_Main_Code_TUNING.c: 721: DisableMotors();
  1124  000198  EC92  F012         	call	_DisableMotors	;wreg free
  1125                           
  1126                           ;FastBuggy17_Main_Code_TUNING.c: 723: Delay10KTCYx(100);
  1127  00019C  0E64               	movlw	100
  1128  00019E  EC25  F011         	call	_Delay10KTCYx
  1129                           
  1130                           ;FastBuggy17_Main_Code_TUNING.c: 725: battery_voltage = ReadVoltage();
  1131  0001A2  EC7C  F00C         	call	_ReadVoltage	;wreg free
  1132  0001A6  C0D1  F118         	movff	?_ReadVoltage,main@battery_voltage
  1133  0001AA  C0D2  F119         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1134                           
  1135                           ;FastBuggy17_Main_Code_TUNING.c: 727: SendStatus(0x00);
  1136  0001AE  0E00               	movlw	0
  1137  0001B0  ECF2  F00E         	call	_SendStatus
  1138                           
  1139                           ;FastBuggy17_Main_Code_TUNING.c: 729: SendBattVoltageInitial(battery_voltage_ptr);
  1140  0001B4  C115  F0D6         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1141  0001B8  C116  F0D7         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1142  0001BC  ECB1  F00C         	call	_SendBattVoltageInitial	;wreg free
  1143                           
  1144                           ;FastBuggy17_Main_Code_TUNING.c: 732: LATJ = 0x1F;
  1145  0001C0  0E1F               	movlw	31
  1146  0001C2  6E91               	movwf	3985,c	;volatile
  1147                           
  1148                           ;FastBuggy17_Main_Code_TUNING.c: 733: SendStatus(0x01);
  1149  0001C4  0E01               	movlw	1
  1150  0001C6  ECF2  F00E         	call	_SendStatus
  1151  0001CA  D000               	goto	l6757
  1152  0001CC                     l6757:
  1153                           
  1154                           ;FastBuggy17_Main_Code_TUNING.c: 736: if(PB1pressed() == 1) {
  1155  0001CC  EC75  F00D         	call	_PB1pressed	;wreg free
  1156  0001D0  06E8               	decf	wreg,f,c
  1157  0001D2  A4D8               	btfss	status,2,c
  1158  0001D4  D003               	goto	l6763
  1159                           
  1160                           ;FastBuggy17_Main_Code_TUNING.c: 737: line_mode = 0;
  1161  0001D6  0E00               	movlw	0
  1162  0001D8  D007               	goto	L1
  1163                           
  1164                           ;FastBuggy17_Main_Code_TUNING.c: 739: }
  1165                           
  1166                           ;FastBuggy17_Main_Code_TUNING.c: 738: break;
  1167  0001DA  D7F8               	goto	l6757
  1168  0001DC                     l6763:
  1169                           
  1170                           ;FastBuggy17_Main_Code_TUNING.c: 740: else if(PB2pressed() == 1) {
  1171  0001DC  EC17  F00D         	call	_PB2pressed	;wreg free
  1172  0001E0  06E8               	decf	wreg,f,c
  1173  0001E2  A4D8               	btfss	status,2,c
  1174  0001E4  D7F3               	goto	l6757
  1175                           
  1176                           ;FastBuggy17_Main_Code_TUNING.c: 741: line_mode = 1;
  1177  0001E6  0E01               	movlw	1
  1178  0001E8                     L1:
  1179  0001E8  6E2A               	movwf	_line_mode,c
  1180                           
  1181                           ;FastBuggy17_Main_Code_TUNING.c: 742: break;
  1182  0001EA  D001               	goto	l6767
  1183  0001EC  D7EF               	goto	l6757
  1184  0001EE                     l6767:
  1185                           
  1186                           ;FastBuggy17_Main_Code_TUNING.c: 743: }
  1187                           ;FastBuggy17_Main_Code_TUNING.c: 744: }
  1188                           ;FastBuggy17_Main_Code_TUNING.c: 746: SendLineMode(line_mode_ptr);
  1189  0001EE  C111  F0D6         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1190  0001F2  C112  F0D7         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1191  0001F6  ECB7  F00E         	call	_SendLineMode	;wreg free
  1192                           
  1193                           ;FastBuggy17_Main_Code_TUNING.c: 747: FlashLEDS();
  1194  0001FA  EC5B  F010         	call	_FlashLEDS	;wreg free
  1195                           
  1196                           ;FastBuggy17_Main_Code_TUNING.c: 749: EnableSensorLEDS();
  1197  0001FE  EC87  F012         	call	_EnableSensorLEDS	;wreg free
  1198                           
  1199                           ;FastBuggy17_Main_Code_TUNING.c: 752: LATJ = 0x0F;
  1200  000202  0E0F               	movlw	15
  1201  000204  6E91               	movwf	3985,c	;volatile
  1202                           
  1203                           ;FastBuggy17_Main_Code_TUNING.c: 753: SendStatus(0x02);
  1204  000206  0E02               	movlw	2
  1205  000208  ECF2  F00E         	call	_SendStatus
  1206  00020C  D000               	goto	l6777
  1207  00020E                     l6777:
  1208                           
  1209                           ;FastBuggy17_Main_Code_TUNING.c: 756: if(PB1pressed() == 1) {
  1210  00020E  EC75  F00D         	call	_PB1pressed	;wreg free
  1211  000212  06E8               	decf	wreg,f,c
  1212  000214  A4D8               	btfss	status,2,c
  1213  000216  D006               	goto	l6785
  1214                           
  1215                           ;FastBuggy17_Main_Code_TUNING.c: 757: FlashLEDS();
  1216  000218  EC5B  F010         	call	_FlashLEDS	;wreg free
  1217                           
  1218                           ;FastBuggy17_Main_Code_TUNING.c: 758: GenerateCalibration();
  1219  00021C  EC9B  F008         	call	_GenerateCalibration	;wreg free
  1220                           
  1221                           ;FastBuggy17_Main_Code_TUNING.c: 759: break;
  1222  000220  D00C               	goto	l6791
  1223                           
  1224                           ;FastBuggy17_Main_Code_TUNING.c: 760: }
  1225  000222  D7F5               	goto	l6777
  1226  000224                     l6785:
  1227                           
  1228                           ;FastBuggy17_Main_Code_TUNING.c: 761: else if(PB2pressed() == 1) {
  1229  000224  EC17  F00D         	call	_PB2pressed	;wreg free
  1230  000228  06E8               	decf	wreg,f,c
  1231  00022A  A4D8               	btfss	status,2,c
  1232  00022C  D7F0               	goto	l6777
  1233                           
  1234                           ;FastBuggy17_Main_Code_TUNING.c: 762: FlashLEDS();
  1235  00022E  EC5B  F010         	call	_FlashLEDS	;wreg free
  1236                           
  1237                           ;FastBuggy17_Main_Code_TUNING.c: 763: LoadCalibration();
  1238  000232  ECE3  F007         	call	_LoadCalibration	;wreg free
  1239                           
  1240                           ;FastBuggy17_Main_Code_TUNING.c: 764: break;
  1241  000236  D001               	goto	l6791
  1242  000238  D7EA               	goto	l6777
  1243  00023A                     l6791:
  1244                           
  1245                           ;FastBuggy17_Main_Code_TUNING.c: 765: }
  1246                           ;FastBuggy17_Main_Code_TUNING.c: 767: }
  1247                           ;FastBuggy17_Main_Code_TUNING.c: 769: SendOffsets(sensor_offsets);
  1248  00023A  0E9A               	movlw	low _sensor_offsets
  1249  00023C  0100               	movlb	0	; () banked
  1250  00023E  6FD6               	movwf	SendOffsets@offsets_array& (0+255),b
  1251  000240  0E00               	movlw	high _sensor_offsets
  1252  000242  0100               	movlb	0	; () banked
  1253  000244  6FD7               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1254  000246  EC99  F009         	call	_SendOffsets	;wreg free
  1255                           
  1256                           ;FastBuggy17_Main_Code_TUNING.c: 770: SendThreshold(sensor_threshold_ptr);
  1257  00024A  C129  F0D6         	movff	main@sensor_threshold_ptr,SendThreshold@sensor_threshold
  1258  00024E  C12A  F0D7         	movff	main@sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  1259  000252  EC71  F00B         	call	_SendThreshold	;wreg free
  1260                           
  1261                           ;FastBuggy17_Main_Code_TUNING.c: 771: SendPIDSetPointOnLine(PID_set_point_ptr);
  1262  000256  C113  F0D6         	movff	main@PID_set_point_ptr,SendPIDSetPointOnLine@set_point
  1263  00025A  C114  F0D7         	movff	main@PID_set_point_ptr+1,SendPIDSetPointOnLine@set_point+1
  1264  00025E  ECA7  F00B         	call	_SendPIDSetPointOnLine	;wreg free
  1265                           
  1266                           ;FastBuggy17_Main_Code_TUNING.c: 773: FlashLEDS();
  1267  000262  EC5B  F010         	call	_FlashLEDS	;wreg free
  1268                           
  1269                           ;FastBuggy17_Main_Code_TUNING.c: 776: LATJ = 0x03;
  1270  000266  0E03               	movlw	3
  1271  000268  6E91               	movwf	3985,c	;volatile
  1272                           
  1273                           ;FastBuggy17_Main_Code_TUNING.c: 777: SendStatus(0x06);
  1274  00026A  0E06               	movlw	6
  1275  00026C  ECF2  F00E         	call	_SendStatus
  1276                           
  1277                           ;FastBuggy17_Main_Code_TUNING.c: 779: SendDefaultPIDValues(20, 0, 0);
  1278  000270  0E00               	movlw	0
  1279  000272  0100               	movlb	0	; () banked
  1280  000274  6FD7               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1281  000276  0E14               	movlw	20
  1282  000278  6FD6               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1283  00027A  0E00               	movlw	0
  1284  00027C  0100               	movlb	0	; () banked
  1285  00027E  6FD9               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1286  000280  0E00               	movlw	0
  1287  000282  6FD8               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1288  000284  0E00               	movlw	0
  1289  000286  0100               	movlb	0	; () banked
  1290  000288  6FDB               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1291  00028A  0E00               	movlw	0
  1292  00028C  6FDA               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1293  00028E  EC12  F00C         	call	_SendDefaultPIDValues	;wreg free
  1294                           
  1295                           ;FastBuggy17_Main_Code_TUNING.c: 781: Kp_stored = ReadIntEEPROM(0x0010);
  1296  000292  0E00               	movlw	0
  1297  000294  0100               	movlb	0	; () banked
  1298  000296  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1299  000298  0E10               	movlw	16
  1300  00029A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1301  00029C  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  1302  0002A0  C0D0  F122         	movff	?_ReadIntEEPROM,main@Kp_stored
  1303  0002A4  C0D1  F123         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1304                           
  1305                           ;FastBuggy17_Main_Code_TUNING.c: 782: Kd_stored = ReadIntEEPROM(0x0012);
  1306  0002A8  0E00               	movlw	0
  1307  0002AA  0100               	movlb	0	; () banked
  1308  0002AC  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1309  0002AE  0E12               	movlw	18
  1310  0002B0  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1311  0002B2  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  1312  0002B6  C0D0  F124         	movff	?_ReadIntEEPROM,main@Kd_stored
  1313  0002BA  C0D1  F125         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1314                           
  1315                           ;FastBuggy17_Main_Code_TUNING.c: 783: Ki_stored = ReadIntEEPROM(0x0014);
  1316  0002BE  0E00               	movlw	0
  1317  0002C0  0100               	movlb	0	; () banked
  1318  0002C2  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1319  0002C4  0E14               	movlw	20
  1320  0002C6  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1321  0002C8  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  1322  0002CC  C0D0  F126         	movff	?_ReadIntEEPROM,main@Ki_stored
  1323  0002D0  C0D1  F127         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1324                           
  1325                           ;FastBuggy17_Main_Code_TUNING.c: 785: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  1326  0002D4  C122  F0D6         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1327  0002D8  C123  F0D7         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1328  0002DC  C124  F0D8         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1329  0002E0  C125  F0D9         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1330  0002E4  C126  F0DA         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1331  0002E8  C127  F0DB         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1332  0002EC  ECDD  F00B         	call	_SendStoredPIDValues	;wreg free
  1333  0002F0  D000               	goto	l6809
  1334  0002F2                     l6809:
  1335                           
  1336                           ;FastBuggy17_Main_Code_TUNING.c: 788: if(PB1pressed() == 1) {
  1337  0002F2  EC75  F00D         	call	_PB1pressed	;wreg free
  1338  0002F6  06E8               	decf	wreg,f,c
  1339  0002F8  A4D8               	btfss	status,2,c
  1340  0002FA  D008               	goto	l6819
  1341                           
  1342                           ;FastBuggy17_Main_Code_TUNING.c: 789: FlashLEDS();
  1343  0002FC  EC5B  F010         	call	_FlashLEDS	;wreg free
  1344                           
  1345                           ;FastBuggy17_Main_Code_TUNING.c: 790: LATJ = 0x03;
  1346  000300  0E03               	movlw	3
  1347  000302  6E91               	movwf	3985,c	;volatile
  1348                           
  1349                           ;FastBuggy17_Main_Code_TUNING.c: 791: SetPIDValues();
  1350  000304  EC71  F004         	call	_SetPIDValues	;wreg free
  1351                           
  1352                           ;FastBuggy17_Main_Code_TUNING.c: 792: break;
  1353  000308  D00E               	goto	l6827
  1354                           
  1355                           ;FastBuggy17_Main_Code_TUNING.c: 793: }
  1356  00030A  D7F3               	goto	l6809
  1357  00030C                     l6819:
  1358                           
  1359                           ;FastBuggy17_Main_Code_TUNING.c: 794: else if(PB2pressed() == 1) {
  1360  00030C  EC17  F00D         	call	_PB2pressed	;wreg free
  1361  000310  06E8               	decf	wreg,f,c
  1362  000312  A4D8               	btfss	status,2,c
  1363  000314  D7EE               	goto	l6809
  1364                           
  1365                           ;FastBuggy17_Main_Code_TUNING.c: 795: FlashLEDS();
  1366  000316  EC5B  F010         	call	_FlashLEDS	;wreg free
  1367                           
  1368                           ;FastBuggy17_Main_Code_TUNING.c: 796: LATJ = 0x03;
  1369  00031A  0E03               	movlw	3
  1370  00031C  6E91               	movwf	3985,c	;volatile
  1371                           
  1372                           ;FastBuggy17_Main_Code_TUNING.c: 797: LoadPIDValues();
  1373  00031E  EC14  F006         	call	_LoadPIDValues	;wreg free
  1374                           
  1375                           ;FastBuggy17_Main_Code_TUNING.c: 798: break;
  1376  000322  D001               	goto	l6827
  1377  000324  D7E6               	goto	l6809
  1378  000326                     l6827:
  1379                           
  1380                           ;FastBuggy17_Main_Code_TUNING.c: 799: }
  1381                           ;FastBuggy17_Main_Code_TUNING.c: 800: }
  1382                           ;FastBuggy17_Main_Code_TUNING.c: 802: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  1383  000326  C096  F0D6         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1384  00032A  C097  F0D7         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1385  00032E  C092  F0D8         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1386  000332  C093  F0D9         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1387  000336  C094  F0DA         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1388  00033A  C095  F0DB         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1389  00033E  EC47  F00C         	call	_SendCurrentPIDValues	;wreg free
  1390  000342  D000               	goto	l6829
  1391  000344                     l6829:
  1392                           
  1393                           ;FastBuggy17_Main_Code_TUNING.c: 808: FlashLEDS();
  1394  000344  EC5B  F010         	call	_FlashLEDS	;wreg free
  1395                           
  1396                           ;FastBuggy17_Main_Code_TUNING.c: 810: LATJ = 0x01;
  1397  000348  0E01               	movlw	1
  1398  00034A  6E91               	movwf	3985,c	;volatile
  1399                           
  1400                           ;FastBuggy17_Main_Code_TUNING.c: 811: SendStatus(0x09);
  1401  00034C  0E09               	movlw	9
  1402  00034E  ECF2  F00E         	call	_SendStatus
  1403  000352  D000               	goto	l6835
  1404  000354                     l6835:
  1405                           
  1406                           ;FastBuggy17_Main_Code_TUNING.c: 814: if(PB1pressed() == 1) {
  1407  000354  EC75  F00D         	call	_PB1pressed	;wreg free
  1408  000358  06E8               	decf	wreg,f,c
  1409  00035A  B4D8               	btfsc	status,2,c
  1410  00035C  D00F               	goto	l6845
  1411  00035E  D001               	goto	l6839
  1412                           
  1413                           ;FastBuggy17_Main_Code_TUNING.c: 815: break;
  1414  000360  D00D               	goto	l6845
  1415  000362                     l6839:
  1416                           
  1417                           ;FastBuggy17_Main_Code_TUNING.c: 816: }
  1418                           ;FastBuggy17_Main_Code_TUNING.c: 817: if(CommandAvailable() == 1 && GetCommand() == 0x02
      +                          ) {
  1419  000362  EC3F  F012         	call	_CommandAvailable	;wreg free
  1420  000366  06E8               	decf	wreg,f,c
  1421  000368  A4D8               	btfss	status,2,c
  1422  00036A  D7F4               	goto	l6835
  1423  00036C  EC79  F012         	call	_GetCommand	;wreg free
  1424  000370  0A02               	xorlw	2
  1425  000372  B4D8               	btfsc	status,2,c
  1426  000374  D003               	goto	l6845
  1427  000376  D7EE               	goto	l6835
  1428                           
  1429                           ;FastBuggy17_Main_Code_TUNING.c: 818: break;
  1430  000378  D001               	goto	l6845
  1431  00037A  D7EC               	goto	l6835
  1432  00037C                     l6845:
  1433                           
  1434                           ;FastBuggy17_Main_Code_TUNING.c: 819: }
  1435                           ;FastBuggy17_Main_Code_TUNING.c: 820: }
  1436                           ;FastBuggy17_Main_Code_TUNING.c: 823: PID_error = 0;
  1437  00037C  0E00               	movlw	0
  1438  00037E  0100               	movlb	0	; () banked
  1439  000380  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1440  000382  0E00               	movlw	0
  1441  000384  6FB8               	movwf	_PID_error& (0+255),b
  1442                           
  1443                           ;FastBuggy17_Main_Code_TUNING.c: 824: PID_output = 0;
  1444  000386  0E00               	movlw	0
  1445  000388  0100               	movlb	0	; () banked
  1446  00038A  6F99               	movwf	(_PID_output+1)& (0+255),b
  1447  00038C  0E00               	movlw	0
  1448  00038E  6F98               	movwf	_PID_output& (0+255),b
  1449                           
  1450                           ;FastBuggy17_Main_Code_TUNING.c: 825: D_temp = 0;
  1451  000390  0E00               	movlw	0
  1452  000392  0101               	movlb	1	; () banked
  1453  000394  6F1B               	movwf	(main@D_temp+1)& (0+255),b
  1454  000396  0E00               	movlw	0
  1455  000398  6F1A               	movwf	main@D_temp& (0+255),b
  1456                           
  1457                           ;FastBuggy17_Main_Code_TUNING.c: 826: I_temp = 0;
  1458  00039A  0E00               	movlw	0
  1459  00039C  0101               	movlb	1	; () banked
  1460  00039E  6F1D               	movwf	(main@I_temp+1)& (0+255),b
  1461  0003A0  0E00               	movlw	0
  1462  0003A2  6F1C               	movwf	main@I_temp& (0+255),b
  1463                           
  1464                           ;FastBuggy17_Main_Code_TUNING.c: 828: stop_flag = 0;
  1465  0003A4  0E00               	movlw	0
  1466  0003A6  0101               	movlb	1	; () banked
  1467  0003A8  6F1E               	movwf	main@stop_flag& (0+255),b
  1468                           
  1469                           ;FastBuggy17_Main_Code_TUNING.c: 829: find_line_flag = 0;
  1470  0003AA  0E00               	movlw	0
  1471  0003AC  0101               	movlb	1	; () banked
  1472  0003AE  6F0A               	movwf	main@find_line_flag& (0+255),b
  1473                           
  1474                           ;FastBuggy17_Main_Code_TUNING.c: 830: line_end_flag = 0;
  1475  0003B0  0E00               	movlw	0
  1476  0003B2  0101               	movlb	1	; () banked
  1477  0003B4  6F08               	movwf	main@line_end_flag& (0+255),b
  1478                           
  1479                           ;FastBuggy17_Main_Code_TUNING.c: 831: wall_detected_flag = 0;
  1480  0003B6  0E00               	movlw	0
  1481  0003B8  0101               	movlb	1	; () banked
  1482  0003BA  6F17               	movwf	main@wall_detected_flag& (0+255),b
  1483                           
  1484                           ;FastBuggy17_Main_Code_TUNING.c: 832: send_battery_stats_flag = 0;
  1485  0003BC  0E00               	movlw	0
  1486  0003BE  0101               	movlb	1	; () banked
  1487  0003C0  6F09               	movwf	main@send_battery_stats_flag& (0+255),b
  1488                           
  1489                           ;FastBuggy17_Main_Code_TUNING.c: 834: LATJ = 0x00;
  1490  0003C2  0E00               	movlw	0
  1491  0003C4  6E91               	movwf	3985,c	;volatile
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;FastBuggy17_Main_Code_TUNING.c: 836: FlashLEDS();
  1495  0003C6  EC5B  F010         	call	_FlashLEDS	;wreg free
  1496                           
  1497                           ;FastBuggy17_Main_Code_TUNING.c: 837: SendStatus(0x0A);
  1498  0003CA  0E0A               	movlw	10
  1499  0003CC  ECF2  F00E         	call	_SendStatus
  1500                           
  1501                           ;FastBuggy17_Main_Code_TUNING.c: 839: ResetAccumulatedCurrent();
  1502  0003D0  EC19  F010         	call	_ResetAccumulatedCurrent	;wreg free
  1503                           
  1504                           ;FastBuggy17_Main_Code_TUNING.c: 841: ResetMillis0();
  1505  0003D4  EC57  F012         	call	_ResetMillis0	;wreg free
  1506                           
  1507                           ;FastBuggy17_Main_Code_TUNING.c: 842: ResetMillis1();
  1508  0003D8  EC52  F012         	call	_ResetMillis1	;wreg free
  1509                           
  1510                           ;FastBuggy17_Main_Code_TUNING.c: 843: ResetMillis2();
  1511  0003DC  EC6B  F012         	call	_ResetMillis2	;wreg free
  1512                           
  1513                           ;FastBuggy17_Main_Code_TUNING.c: 844: ResetMillis3();
  1514  0003E0  EC4D  F012         	call	_ResetMillis3	;wreg free
  1515                           
  1516                           ;FastBuggy17_Main_Code_TUNING.c: 846: GetDistance();
  1517  0003E4  ECB0  F011         	call	_GetDistance	;wreg free
  1518                           
  1519                           ;FastBuggy17_Main_Code_TUNING.c: 848: SetUnipolar();
  1520  0003E8  EC81  F012         	call	_SetUnipolar	;wreg free
  1521                           
  1522                           ;FastBuggy17_Main_Code_TUNING.c: 849: StopMotors();
  1523  0003EC  EC16  F011         	call	_StopMotors	;wreg free
  1524                           
  1525                           ;FastBuggy17_Main_Code_TUNING.c: 850: SetDirectionForward();
  1526  0003F0  EC84  F012         	call	_SetDirectionForward	;wreg free
  1527                           
  1528                           ;FastBuggy17_Main_Code_TUNING.c: 851: EnableMotors();
  1529  0003F4  EC90  F012         	call	_EnableMotors	;wreg free
  1530  0003F8  D000               	goto	l6871
  1531  0003FA                     l6871:
  1532                           
  1533                           ;FastBuggy17_Main_Code_TUNING.c: 856: ResetMillis1();
  1534  0003FA  EC52  F012         	call	_ResetMillis1	;wreg free
  1535                           
  1536                           ;FastBuggy17_Main_Code_TUNING.c: 859: GetSensorReadings();
  1537  0003FE  EC7A  F011         	call	_GetSensorReadings	;wreg free
  1538                           
  1539                           ;FastBuggy17_Main_Code_TUNING.c: 861: while(BusySensorAcq());
  1540  000402  D000               	goto	l6875
  1541  000404                     l6875:
  1542  000404  EC0A  F012         	call	_BusySensorAcq	;wreg free
  1543  000408  0900               	iorlw	0
  1544  00040A  A4D8               	btfss	status,2,c
  1545  00040C  D7FB               	goto	l6875
  1546                           
  1547                           ;FastBuggy17_Main_Code_TUNING.c: 862: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1548  00040E  0EAE               	movlw	low _sensor_readings_raw
  1549  000410  0100               	movlb	0	; () banked
  1550  000412  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1551  000414  0E00               	movlw	high _sensor_readings_raw
  1552  000416  0100               	movlb	0	; () banked
  1553  000418  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1554  00041A  0E9A               	movlw	low _sensor_offsets
  1555  00041C  0100               	movlb	0	; () banked
  1556  00041E  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1557  000420  0E00               	movlw	high _sensor_offsets
  1558  000422  0100               	movlb	0	; () banked
  1559  000424  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1560  000426  ECF4  F00A         	call	_NormaliseSensorReadings	;wreg free
  1561                           
  1562                           ;FastBuggy17_Main_Code_TUNING.c: 863: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1563  00042A  0EA4               	movlw	low _sensor_readings_normalised
  1564  00042C  0100               	movlb	0	; () banked
  1565  00042E  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1566  000430  0E00               	movlw	high _sensor_readings_normalised
  1567  000432  0100               	movlb	0	; () banked
  1568  000434  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1569  000436  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1570  00043A  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1571  00043E  EC15  F005         	call	_CalculateSensorStatuses	;wreg free
  1572                           
  1573                           ;FastBuggy17_Main_Code_TUNING.c: 865: sensor_sum = CalculateSensorSum(sensor_readings_no
      +                          rmalised);
  1574  000442  0EA4               	movlw	low _sensor_readings_normalised
  1575  000444  0100               	movlb	0	; () banked
  1576  000446  6FD4               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  1577  000448  0E00               	movlw	high _sensor_readings_normalised
  1578  00044A  0100               	movlb	0	; () banked
  1579  00044C  6FD5               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  1580  00044E  EC98  F005         	call	_CalculateSensorSum	;wreg free
  1581  000452  C0D4  F11F         	movff	?_CalculateSensorSum,main@sensor_sum
  1582  000456  C0D5  F120         	movff	?_CalculateSensorSum+1,main@sensor_sum+1
  1583                           
  1584                           ;FastBuggy17_Main_Code_TUNING.c: 866: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  1585  00045A  0E25               	movlw	low _sensor_statuses
  1586  00045C  0100               	movlb	0	; () banked
  1587  00045E  6FCE               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  1588  000460  0E00               	movlw	high _sensor_statuses
  1589  000462  0100               	movlb	0	; () banked
  1590  000464  6FCF               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  1591  000466  EC97  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  1592  00046A  0101               	movlb	1	; () banked
  1593  00046C  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  1594                           
  1595                           ; BSR set to: 1
  1596                           ;FastBuggy17_Main_Code_TUNING.c: 869: PID_error = (PID_set_point - sensor_sum) / 100;
  1597  00046E  C11F  F0E2         	movff	main@sensor_sum,??_main
  1598  000472  C120  F0E3         	movff	main@sensor_sum+1,??_main+1
  1599  000476  0100               	movlb	0	; () banked
  1600  000478  1FE2               	comf	??_main& (0+255),f,b
  1601  00047A  1FE3               	comf	(??_main+1)& (0+255),f,b
  1602  00047C  4BE2               	infsnz	??_main& (0+255),f,b
  1603  00047E  2BE3               	incf	(??_main+1)& (0+255),f,b
  1604  000480  0100               	movlb	0	; () banked
  1605  000482  51BA               	movf	_PID_set_point& (0+255),w,b
  1606  000484  0100               	movlb	0	; () banked
  1607  000486  25E2               	addwf	??_main& (0+255),w,b
  1608  000488  0100               	movlb	0	; () banked
  1609  00048A  6FCE               	movwf	___awdiv@dividend& (0+255),b
  1610  00048C  0100               	movlb	0	; () banked
  1611  00048E  51BB               	movf	(_PID_set_point+1)& (0+255),w,b
  1612  000490  0100               	movlb	0	; () banked
  1613  000492  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1614  000494  0100               	movlb	0	; () banked
  1615  000496  6FCF               	movwf	(___awdiv@dividend+1)& (0+255),b
  1616  000498  0E00               	movlw	0
  1617  00049A  0100               	movlb	0	; () banked
  1618  00049C  6FD1               	movwf	(___awdiv@divisor+1)& (0+255),b
  1619  00049E  0E64               	movlw	100
  1620  0004A0  6FD0               	movwf	___awdiv@divisor& (0+255),b
  1621  0004A2  EC7B  F007         	call	___awdiv	;wreg free
  1622  0004A6  C0CE  F0B8         	movff	?___awdiv,_PID_error
  1623  0004AA  C0CF  F0B9         	movff	?___awdiv+1,_PID_error+1
  1624                           
  1625                           ;FastBuggy17_Main_Code_TUNING.c: 870: PID_output = PID_Kp * PID_error + PID_Kd * (D_temp
      +                           - PID_error) + PID_Ki * I_temp;
  1626  0004AE  C096  F0CE         	movff	_PID_Kp,___wmul@multiplier
  1627  0004B2  C097  F0CF         	movff	_PID_Kp+1,___wmul@multiplier+1
  1628  0004B6  C0B8  F0D0         	movff	_PID_error,___wmul@multiplicand
  1629  0004BA  C0B9  F0D1         	movff	_PID_error+1,___wmul@multiplicand+1
  1630  0004BE  EC47  F00F         	call	___wmul	;wreg free
  1631  0004C2  C0CE  F0E2         	movff	?___wmul,??_main
  1632  0004C6  C0CF  F0E3         	movff	?___wmul+1,??_main+1
  1633  0004CA  C0B8  F0E4         	movff	_PID_error,??_main+2
  1634  0004CE  C0B9  F0E5         	movff	_PID_error+1,??_main+3
  1635  0004D2  0100               	movlb	0	; () banked
  1636  0004D4  1FE4               	comf	(??_main+2)& (0+255),f,b
  1637  0004D6  1FE5               	comf	(??_main+3)& (0+255),f,b
  1638  0004D8  4BE4               	infsnz	(??_main+2)& (0+255),f,b
  1639  0004DA  2BE5               	incf	(??_main+3)& (0+255),f,b
  1640  0004DC  0101               	movlb	1	; () banked
  1641  0004DE  511A               	movf	main@D_temp& (0+255),w,b
  1642  0004E0  0100               	movlb	0	; () banked
  1643  0004E2  25E4               	addwf	(??_main+2)& (0+255),w,b
  1644  0004E4  0100               	movlb	0	; () banked
  1645  0004E6  6FCE               	movwf	___wmul@multiplier& (0+255),b
  1646  0004E8  0101               	movlb	1	; () banked
  1647  0004EA  511B               	movf	(main@D_temp+1)& (0+255),w,b
  1648  0004EC  0100               	movlb	0	; () banked
  1649  0004EE  21E5               	addwfc	(??_main+3)& (0+255),w,b
  1650  0004F0  0100               	movlb	0	; () banked
  1651  0004F2  6FCF               	movwf	(___wmul@multiplier+1)& (0+255),b
  1652  0004F4  C092  F0D0         	movff	_PID_Kd,___wmul@multiplicand
  1653  0004F8  C093  F0D1         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1654  0004FC  EC47  F00F         	call	___wmul	;wreg free
  1655  000500  0100               	movlb	0	; () banked
  1656  000502  51CE               	movf	?___wmul& (0+255),w,b
  1657  000504  0100               	movlb	0	; () banked
  1658  000506  27E2               	addwf	??_main& (0+255),f,b
  1659  000508  0100               	movlb	0	; () banked
  1660  00050A  51CF               	movf	(?___wmul+1)& (0+255),w,b
  1661  00050C  0100               	movlb	0	; () banked
  1662  00050E  23E3               	addwfc	(??_main+1)& (0+255),f,b
  1663  000510  C094  F0CE         	movff	_PID_Ki,___wmul@multiplier
  1664  000514  C095  F0CF         	movff	_PID_Ki+1,___wmul@multiplier+1
  1665  000518  C11C  F0D0         	movff	main@I_temp,___wmul@multiplicand
  1666  00051C  C11D  F0D1         	movff	main@I_temp+1,___wmul@multiplicand+1
  1667  000520  EC47  F00F         	call	___wmul	;wreg free
  1668  000524  0100               	movlb	0	; () banked
  1669  000526  51CE               	movf	?___wmul& (0+255),w,b
  1670  000528  0100               	movlb	0	; () banked
  1671  00052A  25E2               	addwf	??_main& (0+255),w,b
  1672  00052C  0100               	movlb	0	; () banked
  1673  00052E  6F98               	movwf	_PID_output& (0+255),b
  1674  000530  0100               	movlb	0	; () banked
  1675  000532  51CF               	movf	(?___wmul+1)& (0+255),w,b
  1676  000534  0100               	movlb	0	; () banked
  1677  000536  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1678  000538  0100               	movlb	0	; () banked
  1679  00053A  6F99               	movwf	(_PID_output+1)& (0+255),b
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;FastBuggy17_Main_Code_TUNING.c: 871: D_temp = PID_error;
  1683  00053C  C0B8  F11A         	movff	_PID_error,main@D_temp
  1684  000540  C0B9  F11B         	movff	_PID_error+1,main@D_temp+1
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;FastBuggy17_Main_Code_TUNING.c: 872: I_temp += PID_error;
  1688  000544  0100               	movlb	0	; () banked
  1689  000546  51B8               	movf	_PID_error& (0+255),w,b
  1690  000548  0101               	movlb	1	; () banked
  1691  00054A  271C               	addwf	main@I_temp& (0+255),f,b
  1692  00054C  0100               	movlb	0	; () banked
  1693  00054E  51B9               	movf	(_PID_error+1)& (0+255),w,b
  1694  000550  0101               	movlb	1	; () banked
  1695  000552  231D               	addwfc	(main@I_temp+1)& (0+255),f,b
  1696                           
  1697                           ; BSR set to: 1
  1698                           ;FastBuggy17_Main_Code_TUNING.c: 874: SetDCMotorPID(PID_output);
  1699  000554  C098  F0D6         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1700  000558  C099  F0D7         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1701  00055C  ECF3  F008         	call	_SetDCMotorPID	;wreg free
  1702                           
  1703                           ;FastBuggy17_Main_Code_TUNING.c: 875: DisplaySensorStatuses(sensor_statuses);
  1704  000560  0E25               	movlw	low _sensor_statuses
  1705  000562  0100               	movlb	0	; () banked
  1706  000564  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1707  000566  0E00               	movlw	high _sensor_statuses
  1708  000568  0100               	movlb	0	; () banked
  1709  00056A  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1710  00056C  ECA4  F00D         	call	_DisplaySensorStatuses	;wreg free
  1711                           
  1712                           ;FastBuggy17_Main_Code_TUNING.c: 878: if(BusyDistanceAcq() == 0 && wall_detected_flag ==
      +                           0 && ReadMillis0() >= 30) {
  1713  000570  EC1A  F012         	call	_BusyDistanceAcq	;wreg free
  1714  000574  0900               	iorlw	0
  1715  000576  A4D8               	btfss	status,2,c
  1716  000578  D0DC               	goto	l6963
  1717  00057A  0101               	movlb	1	; () banked
  1718  00057C  5117               	movf	main@wall_detected_flag& (0+255),w,b
  1719  00057E  0101               	movlb	1	; () banked
  1720  000580  A4D8               	btfss	status,2,c
  1721  000582  D0D7               	goto	l6963
  1722                           
  1723                           ; BSR set to: 1
  1724  000584  EC61  F012         	call	_ReadMillis0	;wreg free
  1725  000588  0100               	movlb	0	; () banked
  1726  00058A  51CF               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1727  00058C  E105               	bnz	u6220
  1728  00058E  0E1E               	movlw	30
  1729  000590  0100               	movlb	0	; () banked
  1730  000592  5DCE               	subwf	?_ReadMillis0& (0+255),w,b
  1731  000594  A0D8               	btfss	status,0,c
  1732  000596  D0CD               	goto	l6963
  1733  000598                     u6220:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;FastBuggy17_Main_Code_TUNING.c: 880: ResetMillis0();
  1737  000598  EC57  F012         	call	_ResetMillis0	;wreg free
  1738                           
  1739                           ;FastBuggy17_Main_Code_TUNING.c: 882: if(ReadEchoLength() < 1670) {
  1740  00059C  EC66  F012         	call	_ReadEchoLength	;wreg free
  1741  0005A0  0E86               	movlw	134
  1742  0005A2  0100               	movlb	0	; () banked
  1743  0005A4  5DCE               	subwf	?_ReadEchoLength& (0+255),w,b
  1744  0005A6  0E06               	movlw	6
  1745  0005A8  0100               	movlb	0	; () banked
  1746  0005AA  59CF               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1747  0005AC  B0D8               	btfsc	status,0,c
  1748  0005AE  D0BE               	goto	l6961
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;FastBuggy17_Main_Code_TUNING.c: 883: wall_detected_flag = 1;
  1752  0005B0  0E01               	movlw	1
  1753  0005B2  0101               	movlb	1	; () banked
  1754  0005B4  6F17               	movwf	main@wall_detected_flag& (0+255),b
  1755                           
  1756                           ; BSR set to: 1
  1757                           ;FastBuggy17_Main_Code_TUNING.c: 886: DisableMotors();
  1758  0005B6  EC92  F012         	call	_DisableMotors	;wreg free
  1759                           
  1760                           ;FastBuggy17_Main_Code_TUNING.c: 888: ResetMillis0();
  1761  0005BA  EC57  F012         	call	_ResetMillis0	;wreg free
  1762                           
  1763                           ;FastBuggy17_Main_Code_TUNING.c: 889: while(ReadMillis0() < 300);
  1764  0005BE  D000               	goto	l6911
  1765  0005C0                     l6911:
  1766  0005C0  EC61  F012         	call	_ReadMillis0	;wreg free
  1767  0005C4  0E2C               	movlw	44
  1768  0005C6  0100               	movlb	0	; () banked
  1769  0005C8  5DCE               	subwf	?_ReadMillis0& (0+255),w,b
  1770  0005CA  0E01               	movlw	1
  1771  0005CC  0100               	movlb	0	; () banked
  1772  0005CE  59CF               	subwfb	(?_ReadMillis0+1)& (0+255),w,b
  1773  0005D0  A0D8               	btfss	status,0,c
  1774  0005D2  D7F6               	goto	l6911
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;FastBuggy17_Main_Code_TUNING.c: 891: PID_error = 0;
  1778                           
  1779                           ; BSR set to: 0
  1780  0005D4  0E00               	movlw	0
  1781  0005D6  0100               	movlb	0	; () banked
  1782  0005D8  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1783  0005DA  0E00               	movlw	0
  1784  0005DC  6FB8               	movwf	_PID_error& (0+255),b
  1785                           
  1786                           ;FastBuggy17_Main_Code_TUNING.c: 892: PID_output = 0;
  1787  0005DE  0E00               	movlw	0
  1788  0005E0  0100               	movlb	0	; () banked
  1789  0005E2  6F99               	movwf	(_PID_output+1)& (0+255),b
  1790  0005E4  0E00               	movlw	0
  1791  0005E6  6F98               	movwf	_PID_output& (0+255),b
  1792                           
  1793                           ;FastBuggy17_Main_Code_TUNING.c: 893: D_temp = 0;
  1794  0005E8  0E00               	movlw	0
  1795  0005EA  0101               	movlb	1	; () banked
  1796  0005EC  6F1B               	movwf	(main@D_temp+1)& (0+255),b
  1797  0005EE  0E00               	movlw	0
  1798  0005F0  6F1A               	movwf	main@D_temp& (0+255),b
  1799                           
  1800                           ;FastBuggy17_Main_Code_TUNING.c: 894: I_temp = 0;
  1801  0005F2  0E00               	movlw	0
  1802  0005F4  0101               	movlb	1	; () banked
  1803  0005F6  6F1D               	movwf	(main@I_temp+1)& (0+255),b
  1804  0005F8  0E00               	movlw	0
  1805  0005FA  6F1C               	movwf	main@I_temp& (0+255),b
  1806                           
  1807                           ; BSR set to: 1
  1808                           ;FastBuggy17_Main_Code_TUNING.c: 896: SetForwardsMotorR();
  1809  0005FC  EC8C  F012         	call	_SetForwardsMotorR	;wreg free
  1810                           
  1811                           ;FastBuggy17_Main_Code_TUNING.c: 897: SetReverseMotorL();
  1812  000600  EC8A  F012         	call	_SetReverseMotorL	;wreg free
  1813                           
  1814                           ;FastBuggy17_Main_Code_TUNING.c: 899: SetDCMotorL(200);
  1815  000604  0E00               	movlw	0
  1816  000606  0100               	movlb	0	; () banked
  1817  000608  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1818  00060A  0EC8               	movlw	200
  1819  00060C  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1820  00060E  EC31  F012         	call	_SetDCMotorL	;wreg free
  1821                           
  1822                           ;FastBuggy17_Main_Code_TUNING.c: 900: SetDCMotorR(310);
  1823  000612  0E01               	movlw	1
  1824  000614  0100               	movlb	0	; () banked
  1825  000616  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1826  000618  0E36               	movlw	54
  1827  00061A  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1828  00061C  EC2A  F012         	call	_SetDCMotorR	;wreg free
  1829                           
  1830                           ;FastBuggy17_Main_Code_TUNING.c: 902: EnableMotors();
  1831  000620  EC90  F012         	call	_EnableMotors	;wreg free
  1832                           
  1833                           ;FastBuggy17_Main_Code_TUNING.c: 904: sensor_sum_discrete = 0;
  1834  000624  0E00               	movlw	0
  1835  000626  0101               	movlb	1	; () banked
  1836  000628  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  1837                           
  1838                           ; BSR set to: 1
  1839                           ;FastBuggy17_Main_Code_TUNING.c: 906: ResetMillis0();
  1840  00062A  EC57  F012         	call	_ResetMillis0	;wreg free
  1841                           
  1842                           ;FastBuggy17_Main_Code_TUNING.c: 907: while(ReadMillis0() < 900);
  1843  00062E  D000               	goto	l6929
  1844  000630                     l6929:
  1845  000630  EC61  F012         	call	_ReadMillis0	;wreg free
  1846  000634  0E84               	movlw	132
  1847  000636  0100               	movlb	0	; () banked
  1848  000638  5DCE               	subwf	?_ReadMillis0& (0+255),w,b
  1849  00063A  0E03               	movlw	3
  1850  00063C  0100               	movlb	0	; () banked
  1851  00063E  59CF               	subwfb	(?_ReadMillis0+1)& (0+255),w,b
  1852  000640  A0D8               	btfss	status,0,c
  1853  000642  D7F6               	goto	l6929
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;FastBuggy17_Main_Code_TUNING.c: 909: GetSensorReadings();
  1857                           
  1858                           ; BSR set to: 0
  1859  000644  EC7A  F011         	call	_GetSensorReadings	;wreg free
  1860                           
  1861                           ;FastBuggy17_Main_Code_TUNING.c: 910: while(BusySensorAcq());
  1862  000648  D000               	goto	l6933
  1863  00064A                     l6933:
  1864  00064A  EC0A  F012         	call	_BusySensorAcq	;wreg free
  1865  00064E  0900               	iorlw	0
  1866  000650  A4D8               	btfss	status,2,c
  1867  000652  D7FB               	goto	l6933
  1868                           
  1869                           ;FastBuggy17_Main_Code_TUNING.c: 911: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1870  000654  0EAE               	movlw	low _sensor_readings_raw
  1871  000656  0100               	movlb	0	; () banked
  1872  000658  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1873  00065A  0E00               	movlw	high _sensor_readings_raw
  1874  00065C  0100               	movlb	0	; () banked
  1875  00065E  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1876  000660  0E9A               	movlw	low _sensor_offsets
  1877  000662  0100               	movlb	0	; () banked
  1878  000664  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1879  000666  0E00               	movlw	high _sensor_offsets
  1880  000668  0100               	movlb	0	; () banked
  1881  00066A  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1882  00066C  ECF4  F00A         	call	_NormaliseSensorReadings	;wreg free
  1883                           
  1884                           ;FastBuggy17_Main_Code_TUNING.c: 912: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1885  000670  0EA4               	movlw	low _sensor_readings_normalised
  1886  000672  0100               	movlb	0	; () banked
  1887  000674  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1888  000676  0E00               	movlw	high _sensor_readings_normalised
  1889  000678  0100               	movlb	0	; () banked
  1890  00067A  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1891  00067C  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1892  000680  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1893  000684  EC15  F005         	call	_CalculateSensorStatuses	;wreg free
  1894                           
  1895                           ;FastBuggy17_Main_Code_TUNING.c: 914: while(sensor_statuses[2] != 1) {
  1896  000688  D02B               	goto	l6949
  1897  00068A                     l6939:
  1898                           
  1899                           ;FastBuggy17_Main_Code_TUNING.c: 916: GetSensorReadings();
  1900  00068A  EC7A  F011         	call	_GetSensorReadings	;wreg free
  1901                           
  1902                           ;FastBuggy17_Main_Code_TUNING.c: 917: while(BusySensorAcq());
  1903  00068E  D000               	goto	l6941
  1904  000690                     l6941:
  1905  000690  EC0A  F012         	call	_BusySensorAcq	;wreg free
  1906  000694  0900               	iorlw	0
  1907  000696  A4D8               	btfss	status,2,c
  1908  000698  D7FB               	goto	l6941
  1909                           
  1910                           ;FastBuggy17_Main_Code_TUNING.c: 918: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1911  00069A  0EAE               	movlw	low _sensor_readings_raw
  1912  00069C  0100               	movlb	0	; () banked
  1913  00069E  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1914  0006A0  0E00               	movlw	high _sensor_readings_raw
  1915  0006A2  0100               	movlb	0	; () banked
  1916  0006A4  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1917  0006A6  0E9A               	movlw	low _sensor_offsets
  1918  0006A8  0100               	movlb	0	; () banked
  1919  0006AA  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1920  0006AC  0E00               	movlw	high _sensor_offsets
  1921  0006AE  0100               	movlb	0	; () banked
  1922  0006B0  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1923  0006B2  ECF4  F00A         	call	_NormaliseSensorReadings	;wreg free
  1924                           
  1925                           ;FastBuggy17_Main_Code_TUNING.c: 919: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1926  0006B6  0EA4               	movlw	low _sensor_readings_normalised
  1927  0006B8  0100               	movlb	0	; () banked
  1928  0006BA  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1929  0006BC  0E00               	movlw	high _sensor_readings_normalised
  1930  0006BE  0100               	movlb	0	; () banked
  1931  0006C0  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1932  0006C2  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1933  0006C6  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1934  0006CA  EC15  F005         	call	_CalculateSensorStatuses	;wreg free
  1935                           
  1936                           ;FastBuggy17_Main_Code_TUNING.c: 923: DisplaySensorStatuses(sensor_statuses);
  1937  0006CE  0E25               	movlw	low _sensor_statuses
  1938  0006D0  0100               	movlb	0	; () banked
  1939  0006D2  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1940  0006D4  0E00               	movlw	high _sensor_statuses
  1941  0006D6  0100               	movlb	0	; () banked
  1942  0006D8  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1943  0006DA  ECA4  F00D         	call	_DisplaySensorStatuses	;wreg free
  1944  0006DE  D000               	goto	l6949
  1945  0006E0                     l6949:
  1946  0006E0  0427               	decf	_sensor_statuses+2,w,c
  1947  0006E2  A4D8               	btfss	status,2,c
  1948  0006E4  D7D2               	goto	l6939
  1949                           
  1950                           ;FastBuggy17_Main_Code_TUNING.c: 924: }
  1951                           ;FastBuggy17_Main_Code_TUNING.c: 926: DisableMotors();
  1952  0006E6  EC92  F012         	call	_DisableMotors	;wreg free
  1953                           
  1954                           ;FastBuggy17_Main_Code_TUNING.c: 927: SetDCMotorL(526);
  1955  0006EA  0E02               	movlw	2
  1956  0006EC  0100               	movlb	0	; () banked
  1957  0006EE  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1958  0006F0  0E0E               	movlw	14
  1959  0006F2  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1960  0006F4  EC31  F012         	call	_SetDCMotorL	;wreg free
  1961                           
  1962                           ;FastBuggy17_Main_Code_TUNING.c: 928: SetDCMotorR(526);
  1963  0006F8  0E02               	movlw	2
  1964  0006FA  0100               	movlb	0	; () banked
  1965  0006FC  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1966  0006FE  0E0E               	movlw	14
  1967  000700  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1968  000702  EC2A  F012         	call	_SetDCMotorR	;wreg free
  1969                           
  1970                           ;FastBuggy17_Main_Code_TUNING.c: 929: SetDirectionForward();
  1971  000706  EC84  F012         	call	_SetDirectionForward	;wreg free
  1972                           
  1973                           ;FastBuggy17_Main_Code_TUNING.c: 930: EnableMotors();
  1974  00070A  EC90  F012         	call	_EnableMotors	;wreg free
  1975                           
  1976                           ;FastBuggy17_Main_Code_TUNING.c: 932: ResetMillis0();
  1977  00070E  EC57  F012         	call	_ResetMillis0	;wreg free
  1978                           
  1979                           ;FastBuggy17_Main_Code_TUNING.c: 933: while(ReadMillis0() < 200);
  1980  000712  D000               	goto	l6959
  1981  000714                     l6959:
  1982  000714  EC61  F012         	call	_ReadMillis0	;wreg free
  1983  000718  0100               	movlb	0	; () banked
  1984  00071A  51CF               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1985  00071C  E106               	bnz	u6290
  1986  00071E  0EC8               	movlw	200
  1987  000720  0100               	movlb	0	; () banked
  1988  000722  5DCE               	subwf	?_ReadMillis0& (0+255),w,b
  1989  000724  B0D8               	btfsc	status,0,c
  1990  000726  D08A               	goto	l7003
  1991  000728  D7F5               	goto	l6959
  1992  00072A                     u6290:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;FastBuggy17_Main_Code_TUNING.c: 935: }
  1996  00072A  D088               	goto	l7003
  1997  00072C                     l6961:
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;FastBuggy17_Main_Code_TUNING.c: 936: else {
  2001                           ;FastBuggy17_Main_Code_TUNING.c: 937: GetDistance();
  2002  00072C  ECB0  F011         	call	_GetDistance	;wreg free
  2003                           
  2004                           ;FastBuggy17_Main_Code_TUNING.c: 938: }
  2005                           ;FastBuggy17_Main_Code_TUNING.c: 939: }
  2006  000730  D085               	goto	l7003
  2007  000732                     l6963:
  2008                           
  2009                           ;FastBuggy17_Main_Code_TUNING.c: 942: else if(sensor_sum_discrete == 0) {
  2010  000732  0101               	movlb	1	; () banked
  2011  000734  5128               	movf	main@sensor_sum_discrete& (0+255),w,b
  2012  000736  0101               	movlb	1	; () banked
  2013  000738  A4D8               	btfss	status,2,c
  2014  00073A  D045               	goto	l6983
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;FastBuggy17_Main_Code_TUNING.c: 943: ResetMillis2();
  2018  00073C  EC6B  F012         	call	_ResetMillis2	;wreg free
  2019                           
  2020                           ;FastBuggy17_Main_Code_TUNING.c: 944: while(ReadMillis2() <= 180) {
  2021  000740  D02D               	goto	l6977
  2022  000742                     l6967:
  2023                           
  2024                           ;FastBuggy17_Main_Code_TUNING.c: 946: GetSensorReadings();
  2025  000742  EC7A  F011         	call	_GetSensorReadings	;wreg free
  2026                           
  2027                           ;FastBuggy17_Main_Code_TUNING.c: 947: while(BusySensorAcq());
  2028  000746  D000               	goto	l6969
  2029  000748                     l6969:
  2030  000748  EC0A  F012         	call	_BusySensorAcq	;wreg free
  2031  00074C  0900               	iorlw	0
  2032  00074E  A4D8               	btfss	status,2,c
  2033  000750  D7FB               	goto	l6969
  2034                           
  2035                           ;FastBuggy17_Main_Code_TUNING.c: 948: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  2036  000752  0EAE               	movlw	low _sensor_readings_raw
  2037  000754  0100               	movlb	0	; () banked
  2038  000756  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  2039  000758  0E00               	movlw	high _sensor_readings_raw
  2040  00075A  0100               	movlb	0	; () banked
  2041  00075C  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  2042  00075E  0E9A               	movlw	low _sensor_offsets
  2043  000760  0100               	movlb	0	; () banked
  2044  000762  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  2045  000764  0E00               	movlw	high _sensor_offsets
  2046  000766  0100               	movlb	0	; () banked
  2047  000768  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  2048  00076A  ECF4  F00A         	call	_NormaliseSensorReadings	;wreg free
  2049                           
  2050                           ;FastBuggy17_Main_Code_TUNING.c: 949: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  2051  00076E  0EA4               	movlw	low _sensor_readings_normalised
  2052  000770  0100               	movlb	0	; () banked
  2053  000772  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  2054  000774  0E00               	movlw	high _sensor_readings_normalised
  2055  000776  0100               	movlb	0	; () banked
  2056  000778  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  2057  00077A  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  2058  00077E  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  2059  000782  EC15  F005         	call	_CalculateSensorStatuses	;wreg free
  2060                           
  2061                           ;FastBuggy17_Main_Code_TUNING.c: 951: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  2062  000786  0E25               	movlw	low _sensor_statuses
  2063  000788  0100               	movlb	0	; () banked
  2064  00078A  6FCE               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  2065  00078C  0E00               	movlw	high _sensor_statuses
  2066  00078E  0100               	movlb	0	; () banked
  2067  000790  6FCF               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  2068  000792  EC97  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  2069  000796  0101               	movlb	1	; () banked
  2070  000798  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  2071  00079A  D000               	goto	l6977
  2072  00079C                     l6977:
  2073  00079C  EC70  F012         	call	_ReadMillis2	;wreg free
  2074  0007A0  0100               	movlb	0	; () banked
  2075  0007A2  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  2076  0007A4  E107               	bnz	l6979
  2077  0007A6  0EB5               	movlw	181
  2078  0007A8  0100               	movlb	0	; () banked
  2079  0007AA  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  2080  0007AC  B0D8               	btfsc	status,0,c
  2081  0007AE  D002               	goto	l6979
  2082  0007B0  D7C8               	goto	l6967
  2083  0007B2  D000               	goto	l6979
  2084  0007B4                     l6979:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;FastBuggy17_Main_Code_TUNING.c: 953: }
  2088                           ;FastBuggy17_Main_Code_TUNING.c: 955: if(sensor_sum_discrete == 0) {
  2089  0007B4  0101               	movlb	1	; () banked
  2090  0007B6  5128               	movf	main@sensor_sum_discrete& (0+255),w,b
  2091  0007B8  0101               	movlb	1	; () banked
  2092  0007BA  A4D8               	btfss	status,2,c
  2093  0007BC  D03F               	goto	l7003
  2094                           
  2095                           ; BSR set to: 1
  2096                           ;FastBuggy17_Main_Code_TUNING.c: 956: StopMotors();
  2097  0007BE  EC16  F011         	call	_StopMotors	;wreg free
  2098                           
  2099                           ;FastBuggy17_Main_Code_TUNING.c: 957: break;
  2100  0007C2  D046               	goto	l7005
  2101                           
  2102                           ;FastBuggy17_Main_Code_TUNING.c: 958: }
  2103                           ;FastBuggy17_Main_Code_TUNING.c: 960: }
  2104  0007C4  D03B               	goto	l7003
  2105  0007C6                     l6983:
  2106                           
  2107                           ;FastBuggy17_Main_Code_TUNING.c: 963: else if(CommandAvailable() == 1) {
  2108  0007C6  EC3F  F012         	call	_CommandAvailable	;wreg free
  2109  0007CA  06E8               	decf	wreg,f,c
  2110  0007CC  A4D8               	btfss	status,2,c
  2111  0007CE  D014               	goto	l6995
  2112                           
  2113                           ;FastBuggy17_Main_Code_TUNING.c: 964: command_msg = GetCommand();
  2114  0007D0  EC79  F012         	call	_GetCommand	;wreg free
  2115  0007D4  0101               	movlb	1	; () banked
  2116  0007D6  6F21               	movwf	main@command_msg& (0+255),b
  2117                           
  2118                           ; BSR set to: 1
  2119                           ;FastBuggy17_Main_Code_TUNING.c: 965: if(command_msg == 0x03) {
  2120  0007D8  0E03               	movlw	3
  2121  0007DA  0101               	movlb	1	; () banked
  2122  0007DC  1921               	xorwf	main@command_msg& (0+255),w,b
  2123  0007DE  A4D8               	btfss	status,2,c
  2124  0007E0  D004               	goto	l6991
  2125                           
  2126                           ; BSR set to: 1
  2127                           ;FastBuggy17_Main_Code_TUNING.c: 966: find_line_flag = 1;
  2128  0007E2  0E01               	movlw	1
  2129  0007E4  0101               	movlb	1	; () banked
  2130  0007E6  6F0A               	movwf	main@find_line_flag& (0+255),b
  2131                           
  2132                           ;FastBuggy17_Main_Code_TUNING.c: 967: }
  2133  0007E8  D029               	goto	l7003
  2134  0007EA                     l6991:
  2135                           
  2136                           ; BSR set to: 1
  2137                           ;FastBuggy17_Main_Code_TUNING.c: 968: else if(command_msg == 0x04) {
  2138  0007EA  0E04               	movlw	4
  2139  0007EC  0101               	movlb	1	; () banked
  2140  0007EE  1921               	xorwf	main@command_msg& (0+255),w,b
  2141  0007F0  A4D8               	btfss	status,2,c
  2142  0007F2  D024               	goto	l7003
  2143  0007F4  D017               	goto	l6997
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;FastBuggy17_Main_Code_TUNING.c: 970: }
  2147                           ;FastBuggy17_Main_Code_TUNING.c: 972: }
  2148                           
  2149                           ; BSR set to: 1
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;FastBuggy17_Main_Code_TUNING.c: 969: stop_flag = 1;
  2153  0007F6  D022               	goto	l7003
  2154  0007F8                     l6995:
  2155                           
  2156                           ;FastBuggy17_Main_Code_TUNING.c: 975: else if(PB1pressed() == 1 | PB2pressed() == 1) {
  2157  0007F8  EC17  F00D         	call	_PB2pressed	;wreg free
  2158  0007FC  06E8               	decf	wreg,f,c
  2159  0007FE  A4D8               	btfss	status,2,c
  2160  000800  D002               	goto	u6370
  2161  000802  0E01               	movlw	1
  2162  000804  D001               	goto	u6372
  2163  000806                     u6370:
  2164  000806  0E00               	movlw	0
  2165  000808                     u6372:
  2166  000808  0100               	movlb	0	; () banked
  2167  00080A  6FE2               	movwf	??_main& (0+255),b
  2168  00080C  EC75  F00D         	call	_PB1pressed	;wreg free
  2169  000810  06E8               	decf	wreg,f,c
  2170  000812  A4D8               	btfss	status,2,c
  2171  000814  D002               	goto	u6380
  2172  000816  0E01               	movlw	1
  2173  000818  D001               	goto	u6382
  2174  00081A                     u6380:
  2175  00081A  0E00               	movlw	0
  2176  00081C                     u6382:
  2177  00081C  0100               	movlb	0	; () banked
  2178  00081E  11E2               	iorwf	??_main& (0+255),w,b
  2179  000820  A0E8               	btfss	wreg,0,c
  2180  000822  D004               	goto	l6999
  2181  000824                     l6997:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;FastBuggy17_Main_Code_TUNING.c: 976: stop_flag = 1;
  2185  000824  0E01               	movlw	1
  2186  000826  0101               	movlb	1	; () banked
  2187  000828  6F1E               	movwf	main@stop_flag& (0+255),b
  2188                           
  2189                           ;FastBuggy17_Main_Code_TUNING.c: 977: }
  2190  00082A  D008               	goto	l7003
  2191  00082C                     l6999:
  2192                           
  2193                           ;FastBuggy17_Main_Code_TUNING.c: 1008: else if(stop_flag == 1) {
  2194  00082C  0101               	movlb	1	; () banked
  2195  00082E  051E               	decf	main@stop_flag& (0+255),w,b
  2196  000830  A4D8               	btfss	status,2,c
  2197  000832  D004               	goto	l7003
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;FastBuggy17_Main_Code_TUNING.c: 1009: StopMotors();
  2201  000834  EC16  F011         	call	_StopMotors	;wreg free
  2202                           
  2203                           ;FastBuggy17_Main_Code_TUNING.c: 1010: break;
  2204  000838  D00B               	goto	l7005
  2205                           
  2206                           ;FastBuggy17_Main_Code_TUNING.c: 1011: }
  2207                           ;FastBuggy17_Main_Code_TUNING.c: 1014: while(ReadMillis1() <= 0);
  2208  00083A  D000               	goto	l7003
  2209  00083C                     l7003:
  2210  00083C  EC5C  F012         	call	_ReadMillis1	;wreg free
  2211  000840  0100               	movlb	0	; () banked
  2212  000842  51CE               	movf	?_ReadMillis1& (0+255),w,b
  2213  000844  0100               	movlb	0	; () banked
  2214  000846  11CF               	iorwf	(?_ReadMillis1+1)& (0+255),w,b
  2215  000848  A4D8               	btfss	status,2,c
  2216  00084A  D5D7               	goto	l6871
  2217  00084C  D7F7               	goto	l7003
  2218                           
  2219                           ; BSR set to: 0
  2220                           
  2221                           ; BSR set to: 0
  2222  00084E  D5D5               	goto	l6871
  2223  000850                     l7005:
  2224                           
  2225                           ;FastBuggy17_Main_Code_TUNING.c: 1016: }
  2226                           ;FastBuggy17_Main_Code_TUNING.c: 1019: FlashLEDS();
  2227  000850  EC5B  F010         	call	_FlashLEDS	;wreg free
  2228                           
  2229                           ;FastBuggy17_Main_Code_TUNING.c: 1020: LATJ = 0x03;
  2230  000854  0E03               	movlw	3
  2231  000856  6E91               	movwf	3985,c	;volatile
  2232                           
  2233                           ;FastBuggy17_Main_Code_TUNING.c: 1021: SendStatus(0x05);
  2234  000858  0E05               	movlw	5
  2235  00085A  ECF2  F00E         	call	_SendStatus
  2236                           
  2237                           ;FastBuggy17_Main_Code_TUNING.c: 1023: Kp_stored = ReadIntEEPROM(0x0010);
  2238  00085E  0E00               	movlw	0
  2239  000860  0100               	movlb	0	; () banked
  2240  000862  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2241  000864  0E10               	movlw	16
  2242  000866  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2243  000868  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  2244  00086C  C0D0  F122         	movff	?_ReadIntEEPROM,main@Kp_stored
  2245  000870  C0D1  F123         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  2246                           
  2247                           ;FastBuggy17_Main_Code_TUNING.c: 1024: Kd_stored = ReadIntEEPROM(0x0012);
  2248  000874  0E00               	movlw	0
  2249  000876  0100               	movlb	0	; () banked
  2250  000878  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2251  00087A  0E12               	movlw	18
  2252  00087C  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2253  00087E  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  2254  000882  C0D0  F124         	movff	?_ReadIntEEPROM,main@Kd_stored
  2255  000886  C0D1  F125         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  2256                           
  2257                           ;FastBuggy17_Main_Code_TUNING.c: 1025: Ki_stored = ReadIntEEPROM(0x0014);
  2258  00088A  0E00               	movlw	0
  2259  00088C  0100               	movlb	0	; () banked
  2260  00088E  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2261  000890  0E14               	movlw	20
  2262  000892  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2263  000894  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  2264  000898  C0D0  F126         	movff	?_ReadIntEEPROM,main@Ki_stored
  2265  00089C  C0D1  F127         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  2266                           
  2267                           ;FastBuggy17_Main_Code_TUNING.c: 1027: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_stor
      +                          ed);
  2268  0008A0  C122  F0D6         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  2269  0008A4  C123  F0D7         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  2270  0008A8  C124  F0D8         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  2271  0008AC  C125  F0D9         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  2272  0008B0  C126  F0DA         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  2273  0008B4  C127  F0DB         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  2274  0008B8  ECDD  F00B         	call	_SendStoredPIDValues	;wreg free
  2275                           
  2276                           ;FastBuggy17_Main_Code_TUNING.c: 1029: SetPIDValues();
  2277  0008BC  EC71  F004         	call	_SetPIDValues	;wreg free
  2278                           
  2279                           ;FastBuggy17_Main_Code_TUNING.c: 1031: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  2280  0008C0  C096  F0D6         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  2281  0008C4  C097  F0D7         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  2282  0008C8  C092  F0D8         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  2283  0008CC  C093  F0D9         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  2284  0008D0  C094  F0DA         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  2285  0008D4  C095  F0DB         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  2286  0008D8  EC47  F00C         	call	_SendCurrentPIDValues	;wreg free
  2287  0008DC  D533               	goto	l6829
  2288  0008DE  EF76  F000         	goto	start
  2289  0008E2                     __end_of_main:
  2290                           	opt stack 0
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function ___awdiv *****************
  2296 ;; Defined at:
  2297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  dividend        2   16[BANK0 ] int 
  2300 ;;  divisor         2   18[BANK0 ] int 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  quotient        2   22[BANK0 ] int 
  2303 ;;  sign            1   21[BANK0 ] unsigned char 
  2304 ;;  counter         1   20[BANK0 ] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  2   16[BANK0 ] int 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;Total ram usage:        8 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    7
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text1
  2329  000EF6                     __ptext1:
  2330                           	opt stack 0
  2331  000EF6                     ___awdiv:
  2332                           	opt stack 23
  2333                           
  2334                           ;incstack = 0
  2335  000EF6  0E00               	movlw	0
  2336  000EF8  0100               	movlb	0	; () banked
  2337  000EFA  6FD3               	movwf	___awdiv@sign& (0+255),b
  2338                           
  2339                           ; BSR set to: 0
  2340  000EFC  0100               	movlb	0	; () banked
  2341  000EFE  AFD1               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2342  000F00  D009               	goto	l6523
  2343                           
  2344                           ; BSR set to: 0
  2345  000F02  0100               	movlb	0	; () banked
  2346  000F04  6DD0               	negf	___awdiv@divisor& (0+255),b
  2347  000F06  1FD1               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2348  000F08  B0D8               	btfsc	status,0,c
  2349  000F0A  2BD1               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2350                           
  2351                           ; BSR set to: 0
  2352  000F0C  0E01               	movlw	1
  2353  000F0E  0100               	movlb	0	; () banked
  2354  000F10  6FD3               	movwf	___awdiv@sign& (0+255),b
  2355  000F12  D000               	goto	l6523
  2356  000F14                     l6523:
  2357                           
  2358                           ; BSR set to: 0
  2359  000F14  0100               	movlb	0	; () banked
  2360  000F16  AFCF               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2361  000F18  D009               	goto	l6529
  2362                           
  2363                           ; BSR set to: 0
  2364  000F1A  0100               	movlb	0	; () banked
  2365  000F1C  6DCE               	negf	___awdiv@dividend& (0+255),b
  2366  000F1E  1FCF               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2367  000F20  B0D8               	btfsc	status,0,c
  2368  000F22  2BCF               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2369                           
  2370                           ; BSR set to: 0
  2371  000F24  0E01               	movlw	1
  2372  000F26  0100               	movlb	0	; () banked
  2373  000F28  1BD3               	xorwf	___awdiv@sign& (0+255),f,b
  2374  000F2A  D000               	goto	l6529
  2375  000F2C                     l6529:
  2376                           
  2377                           ; BSR set to: 0
  2378  000F2C  0E00               	movlw	0
  2379  000F2E  0100               	movlb	0	; () banked
  2380  000F30  6FD5               	movwf	(___awdiv@quotient+1)& (0+255),b
  2381  000F32  0E00               	movlw	0
  2382  000F34  6FD4               	movwf	___awdiv@quotient& (0+255),b
  2383                           
  2384                           ; BSR set to: 0
  2385  000F36  0100               	movlb	0	; () banked
  2386  000F38  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2387  000F3A  0100               	movlb	0	; () banked
  2388  000F3C  11D1               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2389  000F3E  B4D8               	btfsc	status,2,c
  2390  000F40  D031               	goto	l6551
  2391                           
  2392                           ; BSR set to: 0
  2393  000F42  0E01               	movlw	1
  2394  000F44  0100               	movlb	0	; () banked
  2395  000F46  6FD2               	movwf	___awdiv@counter& (0+255),b
  2396  000F48  D007               	goto	l6537
  2397  000F4A                     l6535:
  2398                           
  2399                           ; BSR set to: 0
  2400  000F4A  0100               	movlb	0	; () banked
  2401  000F4C  90D8               	bcf	status,0,c
  2402  000F4E  37D0               	rlcf	___awdiv@divisor& (0+255),f,b
  2403  000F50  37D1               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2404  000F52  0100               	movlb	0	; () banked
  2405  000F54  2BD2               	incf	___awdiv@counter& (0+255),f,b
  2406  000F56  D000               	goto	l6537
  2407  000F58                     l6537:
  2408                           
  2409                           ; BSR set to: 0
  2410  000F58  0100               	movlb	0	; () banked
  2411  000F5A  BFD1               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2412  000F5C  D002               	goto	l6539
  2413  000F5E  D7F5               	goto	l6535
  2414                           
  2415                           ; BSR set to: 0
  2416  000F60  D000               	goto	l6539
  2417  000F62                     l6539:
  2418                           
  2419                           ; BSR set to: 0
  2420  000F62  0100               	movlb	0	; () banked
  2421  000F64  90D8               	bcf	status,0,c
  2422  000F66  37D4               	rlcf	___awdiv@quotient& (0+255),f,b
  2423  000F68  37D5               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2424                           
  2425                           ; BSR set to: 0
  2426  000F6A  0100               	movlb	0	; () banked
  2427  000F6C  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2428  000F6E  0100               	movlb	0	; () banked
  2429  000F70  5DCE               	subwf	___awdiv@dividend& (0+255),w,b
  2430  000F72  0100               	movlb	0	; () banked
  2431  000F74  51D1               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2432  000F76  0100               	movlb	0	; () banked
  2433  000F78  59CF               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2434  000F7A  A0D8               	btfss	status,0,c
  2435  000F7C  D00B               	goto	l6547
  2436                           
  2437                           ; BSR set to: 0
  2438  000F7E  0100               	movlb	0	; () banked
  2439  000F80  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2440  000F82  0100               	movlb	0	; () banked
  2441  000F84  5FCE               	subwf	___awdiv@dividend& (0+255),f,b
  2442  000F86  0100               	movlb	0	; () banked
  2443  000F88  51D1               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2444  000F8A  0100               	movlb	0	; () banked
  2445  000F8C  5BCF               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2446                           
  2447                           ; BSR set to: 0
  2448  000F8E  0100               	movlb	0	; () banked
  2449  000F90  81D4               	bsf	___awdiv@quotient& (0+255),0,b
  2450  000F92  D000               	goto	l6547
  2451  000F94                     l6547:
  2452                           
  2453                           ; BSR set to: 0
  2454  000F94  0100               	movlb	0	; () banked
  2455  000F96  90D8               	bcf	status,0,c
  2456  000F98  33D1               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2457  000F9A  33D0               	rrcf	___awdiv@divisor& (0+255),f,b
  2458                           
  2459                           ; BSR set to: 0
  2460  000F9C  0100               	movlb	0	; () banked
  2461  000F9E  2FD2               	decfsz	___awdiv@counter& (0+255),f,b
  2462  000FA0  D7E0               	goto	l6539
  2463                           
  2464                           ; BSR set to: 0
  2465  000FA2  D000               	goto	l6551
  2466  000FA4                     l6551:
  2467                           
  2468                           ; BSR set to: 0
  2469  000FA4  0100               	movlb	0	; () banked
  2470  000FA6  51D3               	movf	___awdiv@sign& (0+255),w,b
  2471  000FA8  0100               	movlb	0	; () banked
  2472  000FAA  B4D8               	btfsc	status,2,c
  2473  000FAC  D006               	goto	l6555
  2474                           
  2475                           ; BSR set to: 0
  2476  000FAE  0100               	movlb	0	; () banked
  2477  000FB0  6DD4               	negf	___awdiv@quotient& (0+255),b
  2478  000FB2  1FD5               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2479  000FB4  B0D8               	btfsc	status,0,c
  2480  000FB6  2BD5               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2481  000FB8  D000               	goto	l6555
  2482  000FBA                     l6555:
  2483                           
  2484                           ; BSR set to: 0
  2485  000FBA  C0D4  F0CE         	movff	___awdiv@quotient,?___awdiv
  2486  000FBE  C0D5  F0CF         	movff	___awdiv@quotient+1,?___awdiv+1
  2487  000FC2  D000               	goto	l1447
  2488  000FC4                     l1447:
  2489                           
  2490                           ; BSR set to: 0
  2491  000FC4  0012               	return		;funcret
  2492  000FC6                     __end_of___awdiv:
  2493                           	opt stack 0
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _StopMotors *****************
  2499 ;; Defined at:
  2500 ;;		line 128 in file "Motors.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    9
  2521 ;; This function calls:
  2522 ;;		_SetDCMotorL
  2523 ;;		_SetDCMotorR
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text2
  2530  00222C                     __ptext2:
  2531                           	opt stack 0
  2532  00222C                     _StopMotors:
  2533                           	opt stack 21
  2534                           
  2535                           ;Motors.c: 130: SetDCMotorR(526);
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;incstack = 0
  2539  00222C  0E02               	movlw	2
  2540  00222E  0100               	movlb	0	; () banked
  2541  002230  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2542  002232  0E0E               	movlw	14
  2543  002234  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2544  002236  EC2A  F012         	call	_SetDCMotorR	;wreg free
  2545                           
  2546                           ;Motors.c: 131: SetDCMotorL(526);
  2547  00223A  0E02               	movlw	2
  2548  00223C  0100               	movlb	0	; () banked
  2549  00223E  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2550  002240  0E0E               	movlw	14
  2551  002242  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2552  002244  EC31  F012         	call	_SetDCMotorL	;wreg free
  2553  002248  0012               	return		;funcret
  2554  00224A                     __end_of_StopMotors:
  2555                           	opt stack 0
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _SetUnipolar *****************
  2561 ;; Defined at:
  2562 ;;		line 121 in file "Motors.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		None
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    7
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_main
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text3
  2591  002502                     __ptext3:
  2592                           	opt stack 0
  2593  002502                     _SetUnipolar:
  2594                           	opt stack 23
  2595                           
  2596                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2597                           
  2598                           ;incstack = 0
  2599  002502  908C               	bcf	3980,0,c	;volatile
  2600                           
  2601                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2602  002504  948C               	bcf	3980,2,c	;volatile
  2603  002506  0012               	return		;funcret
  2604  002508                     __end_of_SetUnipolar:
  2605                           	opt stack 0
  2606                           postinc0	equ	0xFEE
  2607                           wreg	equ	0xFE8
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _SetReverseMotorL *****************
  2611 ;; Defined at:
  2612 ;;		line 96 in file "Motors.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		None
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    7
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text4
  2641  002514                     __ptext4:
  2642                           	opt stack 0
  2643  002514                     _SetReverseMotorL:
  2644                           	opt stack 23
  2645                           
  2646                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2647                           
  2648                           ;incstack = 0
  2649  002514  968C               	bcf	3980,3,c	;volatile
  2650  002516  0012               	return		;funcret
  2651  002518                     __end_of_SetReverseMotorL:
  2652                           	opt stack 0
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           status	equ	0xFD8
  2656                           
  2657 ;; *************** function _SetForwardsMotorR *****************
  2658 ;; Defined at:
  2659 ;;		line 78 in file "Motors.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		None
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    7
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text5
  2688  002518                     __ptext5:
  2689                           	opt stack 0
  2690  002518                     _SetForwardsMotorR:
  2691                           	opt stack 23
  2692                           
  2693                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2694                           
  2695                           ;incstack = 0
  2696  002518  828C               	bsf	3980,1,c	;volatile
  2697  00251A  0012               	return		;funcret
  2698  00251C                     __end_of_SetForwardsMotorR:
  2699                           	opt stack 0
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _SetDirectionForward *****************
  2705 ;; Defined at:
  2706 ;;		line 64 in file "Motors.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		None
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    7
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text6
  2735  002508                     __ptext6:
  2736                           	opt stack 0
  2737  002508                     _SetDirectionForward:
  2738                           	opt stack 23
  2739                           
  2740                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2741                           
  2742                           ;incstack = 0
  2743  002508  868C               	bsf	3980,3,c	;volatile
  2744                           
  2745                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2746  00250A  828C               	bsf	3980,1,c	;volatile
  2747  00250C  0012               	return		;funcret
  2748  00250E                     __end_of_SetDirectionForward:
  2749                           	opt stack 0
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _SetDCMotorPID *****************
  2755 ;; Defined at:
  2756 ;;		line 47 in file "Motors.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  PIDoutput       2   24[BANK0 ] int 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;		None               void
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;Total ram usage:        4 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    9
  2777 ;; This function calls:
  2778 ;;		_SetDCMotorL
  2779 ;;		_SetDCMotorR
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text7
  2786  0011E6                     __ptext7:
  2787                           	opt stack 0
  2788  0011E6                     _SetDCMotorPID:
  2789                           	opt stack 21
  2790                           
  2791                           ;Motors.c: 49: if(PIDoutput < 0) {
  2792                           
  2793                           ;incstack = 0
  2794  0011E6  0100               	movlb	0	; () banked
  2795  0011E8  AFD7               	btfss	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2796  0011EA  D01D               	goto	l6271
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;Motors.c: 50: SetDCMotorL(200 - PIDoutput);
  2800  0011EC  C0D6  F0D8         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2801  0011F0  C0D7  F0D9         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2802  0011F4  0100               	movlb	0	; () banked
  2803  0011F6  1FD8               	comf	??_SetDCMotorPID& (0+255),f,b
  2804  0011F8  1FD9               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2805  0011FA  4BD8               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2806  0011FC  2BD9               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2807  0011FE  0EC8               	movlw	200
  2808  001200  0100               	movlb	0	; () banked
  2809  001202  25D8               	addwf	??_SetDCMotorPID& (0+255),w,b
  2810  001204  0100               	movlb	0	; () banked
  2811  001206  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2812  001208  0E00               	movlw	0
  2813  00120A  0100               	movlb	0	; () banked
  2814  00120C  21D9               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2815  00120E  0100               	movlb	0	; () banked
  2816  001210  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2817  001212  EC31  F012         	call	_SetDCMotorL	;wreg free
  2818                           
  2819                           ;Motors.c: 51: SetDCMotorR(200);
  2820  001216  0E00               	movlw	0
  2821  001218  0100               	movlb	0	; () banked
  2822  00121A  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2823  00121C  0EC8               	movlw	200
  2824  00121E  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2825  001220  EC2A  F012         	call	_SetDCMotorR	;wreg free
  2826                           
  2827                           ;Motors.c: 52: }
  2828  001224  D033               	goto	l128
  2829  001226                     l6271:
  2830                           
  2831                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2832  001226  0100               	movlb	0	; () banked
  2833  001228  BFD7               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2834  00122A  D01B               	goto	l6275
  2835  00122C  0100               	movlb	0	; () banked
  2836  00122E  51D7               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2837  001230  E104               	bnz	u5430
  2838  001232  0100               	movlb	0	; () banked
  2839  001234  05D6               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2840  001236  A0D8               	btfss	status,0,c
  2841  001238  D014               	goto	l6275
  2842  00123A                     u5430:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;Motors.c: 54: SetDCMotorL(200);
  2846  00123A  0E00               	movlw	0
  2847  00123C  0100               	movlb	0	; () banked
  2848  00123E  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2849  001240  0EC8               	movlw	200
  2850  001242  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2851  001244  EC31  F012         	call	_SetDCMotorL	;wreg free
  2852                           
  2853                           ;Motors.c: 55: SetDCMotorR(200 + PIDoutput);
  2854  001248  0EC8               	movlw	200
  2855  00124A  0100               	movlb	0	; () banked
  2856  00124C  25D6               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2857  00124E  0100               	movlb	0	; () banked
  2858  001250  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2859  001252  0E00               	movlw	0
  2860  001254  0100               	movlb	0	; () banked
  2861  001256  21D7               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2862  001258  0100               	movlb	0	; () banked
  2863  00125A  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2864  00125C  EC2A  F012         	call	_SetDCMotorR	;wreg free
  2865                           
  2866                           ;Motors.c: 56: }
  2867  001260  D015               	goto	l128
  2868  001262                     l6275:
  2869                           
  2870                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2871  001262  0100               	movlb	0	; () banked
  2872  001264  51D6               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2873  001266  0100               	movlb	0	; () banked
  2874  001268  11D7               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2875  00126A  A4D8               	btfss	status,2,c
  2876  00126C  D00F               	goto	l128
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;Motors.c: 58: SetDCMotorL(200);
  2880  00126E  0E00               	movlw	0
  2881  001270  0100               	movlb	0	; () banked
  2882  001272  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2883  001274  0EC8               	movlw	200
  2884  001276  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2885  001278  EC31  F012         	call	_SetDCMotorL	;wreg free
  2886                           
  2887                           ;Motors.c: 59: SetDCMotorR(200);
  2888  00127C  0E00               	movlw	0
  2889  00127E  0100               	movlb	0	; () banked
  2890  001280  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2891  001282  0EC8               	movlw	200
  2892  001284  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2893  001286  EC2A  F012         	call	_SetDCMotorR	;wreg free
  2894  00128A  D000               	goto	l128
  2895  00128C                     l128:
  2896  00128C  0012               	return		;funcret
  2897  00128E                     __end_of_SetDCMotorPID:
  2898                           	opt stack 0
  2899                           postinc0	equ	0xFEE
  2900                           wreg	equ	0xFE8
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _SetDCMotorR *****************
  2904 ;; Defined at:
  2905 ;;		line 19 in file "Motors.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;		None               void
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        2 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    8
  2926 ;; This function calls:
  2927 ;;		_SetDCPWM4
  2928 ;; This function is called by:
  2929 ;;		_SetDCMotorPID
  2930 ;;		_StopMotors
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text8
  2936  002454                     __ptext8:
  2937                           	opt stack 0
  2938  002454                     _SetDCMotorR:
  2939                           	opt stack 21
  2940                           
  2941                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2942                           
  2943                           ;incstack = 0
  2944  002454  C0D4  F0CE         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2945  002458  C0D5  F0CF         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2946  00245C  ECF1  F00D         	call	_SetDCPWM4	;wreg free
  2947  002460  0012               	return		;funcret
  2948  002462                     __end_of_SetDCMotorR:
  2949                           	opt stack 0
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _SetDCPWM4 *****************
  2955 ;; Defined at:
  2956 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        6 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    7
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_SetDCMotorR
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text9
  2985  001BE2                     __ptext9:
  2986                           	opt stack 0
  2987  001BE2                     _SetDCPWM4:
  2988                           	opt stack 21
  2989                           
  2990                           ;incstack = 0
  2991  001BE2  C0CE  F0D0         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2992  001BE6  C0CF  F0D1         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2993  001BEA  0E06               	movlw	6
  2994  001BEC                     u4855:
  2995  001BEC  90D8               	bcf	status,0,c
  2996  001BEE  0100               	movlb	0	; () banked
  2997  001BF0  37D0               	rlcf	??_SetDCPWM4& (0+255),f,b
  2998  001BF2  37D1               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2999  001BF4  2EE8               	decfsz	wreg,f,c
  3000  001BF6  D7FA               	goto	u4855
  3001  001BF8  C0D0  F0D2         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  3002  001BFC  C0D1  F0D3         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  3003                           
  3004                           ; BSR set to: 0
  3005  001C00  C0D3  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  3006  001C04  C0D2  F0D0         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  3007  001C08  0100               	movlb	0	; () banked
  3008  001C0A  90D8               	bcf	status,0,c
  3009  001C0C  33D0               	rrcf	??_SetDCPWM4& (0+255),f,b
  3010  001C0E  0100               	movlb	0	; () banked
  3011  001C10  90D8               	bcf	status,0,c
  3012  001C12  33D0               	rrcf	??_SetDCPWM4& (0+255),f,b
  3013  001C14  0E30               	movlw	48
  3014  001C16  0100               	movlb	0	; () banked
  3015  001C18  17D0               	andwf	??_SetDCPWM4& (0+255),f,b
  3016  001C1A  5073               	movf	3955,w,c	;volatile
  3017  001C1C  0BCF               	andlw	207
  3018  001C1E  0100               	movlb	0	; () banked
  3019  001C20  11D0               	iorwf	??_SetDCPWM4& (0+255),w,b
  3020  001C22  6E73               	movwf	3955,c	;volatile
  3021                           
  3022                           ; BSR set to: 0
  3023  001C24  0012               	return		;funcret
  3024  001C26                     __end_of_SetDCPWM4:
  3025                           	opt stack 0
  3026                           postinc0	equ	0xFEE
  3027                           wreg	equ	0xFE8
  3028                           status	equ	0xFD8
  3029                           
  3030 ;; *************** function _SetDCMotorL *****************
  3031 ;; Defined at:
  3032 ;;		line 6 in file "Motors.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;		None               void
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        2 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    8
  3053 ;; This function calls:
  3054 ;;		_SetDCPWM5
  3055 ;; This function is called by:
  3056 ;;		_SetDCMotorPID
  3057 ;;		_StopMotors
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text10
  3063  002462                     __ptext10:
  3064                           	opt stack 0
  3065  002462                     _SetDCMotorL:
  3066                           	opt stack 21
  3067                           
  3068                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;incstack = 0
  3072  002462  C0D4  F0CE         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  3073  002466  C0D5  F0CF         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  3074  00246A  EC13  F00E         	call	_SetDCPWM5	;wreg free
  3075  00246E  0012               	return		;funcret
  3076  002470                     __end_of_SetDCMotorL:
  3077                           	opt stack 0
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _SetDCPWM5 *****************
  3083 ;; Defined at:
  3084 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        6 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    7
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_SetDCMotorL
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text11
  3113  001C26                     __ptext11:
  3114                           	opt stack 0
  3115  001C26                     _SetDCPWM5:
  3116                           	opt stack 21
  3117                           
  3118                           ;incstack = 0
  3119  001C26  C0CE  F0D0         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  3120  001C2A  C0CF  F0D1         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  3121  001C2E  0E06               	movlw	6
  3122  001C30                     u4845:
  3123  001C30  90D8               	bcf	status,0,c
  3124  001C32  0100               	movlb	0	; () banked
  3125  001C34  37D0               	rlcf	??_SetDCPWM5& (0+255),f,b
  3126  001C36  37D1               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  3127  001C38  2EE8               	decfsz	wreg,f,c
  3128  001C3A  D7FA               	goto	u4845
  3129  001C3C  C0D0  F0D2         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  3130  001C40  C0D1  F0D3         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  3131                           
  3132                           ; BSR set to: 0
  3133  001C44  C0D3  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  3134  001C48  C0D2  F0D0         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  3135  001C4C  0100               	movlb	0	; () banked
  3136  001C4E  90D8               	bcf	status,0,c
  3137  001C50  33D0               	rrcf	??_SetDCPWM5& (0+255),f,b
  3138  001C52  0100               	movlb	0	; () banked
  3139  001C54  90D8               	bcf	status,0,c
  3140  001C56  33D0               	rrcf	??_SetDCPWM5& (0+255),f,b
  3141  001C58  0E30               	movlw	48
  3142  001C5A  0100               	movlb	0	; () banked
  3143  001C5C  17D0               	andwf	??_SetDCPWM5& (0+255),f,b
  3144  001C5E  5070               	movf	3952,w,c	;volatile
  3145  001C60  0BCF               	andlw	207
  3146  001C62  0100               	movlb	0	; () banked
  3147  001C64  11D0               	iorwf	??_SetDCPWM5& (0+255),w,b
  3148  001C66  6E70               	movwf	3952,c	;volatile
  3149                           
  3150                           ; BSR set to: 0
  3151  001C68  0012               	return		;funcret
  3152  001C6A                     __end_of_SetDCPWM5:
  3153                           	opt stack 0
  3154                           postinc0	equ	0xFEE
  3155                           wreg	equ	0xFE8
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _SendThreshold *****************
  3159 ;; Defined at:
  3160 ;;		line 186 in file "Wireless.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  sensor_thres    2   24[BANK0 ] PTR const int 
  3163 ;;		 -> sensor_threshold(2), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;		None               void
  3168 ;; Registers used:
  3169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3175 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;Total ram usage:        4 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    9
  3182 ;; This function calls:
  3183 ;;		_BusyTx
  3184 ;;		_FlushTxBuf
  3185 ;;		_PutCharTxBuf
  3186 ;;		_StartTx
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text12
  3193  0016E2                     __ptext12:
  3194                           	opt stack 0
  3195  0016E2                     _SendThreshold:
  3196                           	opt stack 21
  3197                           
  3198                           ;Wireless.c: 187: while(BusyTx());
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;incstack = 0
  3202  0016E2  D000               	goto	l6355
  3203  0016E4                     l6355:
  3204  0016E4  EC02  F012         	call	_BusyTx	;wreg free
  3205  0016E8  0900               	iorlw	0
  3206  0016EA  A4D8               	btfss	status,2,c
  3207  0016EC  D7FB               	goto	l6355
  3208                           
  3209                           ;Wireless.c: 188: FlushTxBuf();
  3210  0016EE  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3211                           
  3212                           ;Wireless.c: 190: PutCharTxBuf(0xAA);
  3213  0016F2  0EAA               	movlw	170
  3214  0016F4  EC56  F00E         	call	_PutCharTxBuf
  3215                           
  3216                           ;Wireless.c: 191: PutCharTxBuf(0x31);
  3217  0016F8  0E31               	movlw	49
  3218  0016FA  EC56  F00E         	call	_PutCharTxBuf
  3219                           
  3220                           ;Wireless.c: 193: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  3221  0016FE  C0D6  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3222  001702  C0D7  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3223  001706  CFDE F0D8          	movff	postinc2,??_SendThreshold
  3224  00170A  CFDD F0D9          	movff	postdec2,??_SendThreshold+1
  3225  00170E  C0D9  F0D8         	movff	??_SendThreshold+1,??_SendThreshold
  3226  001712  0100               	movlb	0	; () banked
  3227  001714  6BD9               	clrf	(??_SendThreshold+1)& (0+255),b
  3228  001716  BFD8               	btfsc	??_SendThreshold& (0+255),7,b
  3229  001718  69D9               	setf	(??_SendThreshold+1)& (0+255),b
  3230  00171A  0100               	movlb	0	; () banked
  3231  00171C  51D8               	movf	??_SendThreshold& (0+255),w,b
  3232  00171E  EC56  F00E         	call	_PutCharTxBuf
  3233                           
  3234                           ;Wireless.c: 194: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  3235  001722  C0D6  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3236  001726  C0D7  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3237  00172A  50DF               	movf	indf2,w,c
  3238  00172C  EC56  F00E         	call	_PutCharTxBuf
  3239                           
  3240                           ;Wireless.c: 196: PutCharTxBuf('\r');
  3241  001730  0E0D               	movlw	13
  3242  001732  EC56  F00E         	call	_PutCharTxBuf
  3243                           
  3244                           ;Wireless.c: 197: PutCharTxBuf('\n');
  3245  001736  0E0A               	movlw	10
  3246  001738  EC56  F00E         	call	_PutCharTxBuf
  3247                           
  3248                           ;Wireless.c: 198: while (BusyTx());
  3249  00173C  D000               	goto	l6359
  3250  00173E                     l6359:
  3251  00173E  EC02  F012         	call	_BusyTx	;wreg free
  3252  001742  0900               	iorlw	0
  3253  001744  A4D8               	btfss	status,2,c
  3254  001746  D7FB               	goto	l6359
  3255                           
  3256                           ;Wireless.c: 199: StartTx();
  3257  001748  EC75  F012         	call	_StartTx	;wreg free
  3258  00174C  0012               	return		;funcret
  3259  00174E                     __end_of_SendThreshold:
  3260                           	opt stack 0
  3261                           postinc0	equ	0xFEE
  3262                           wreg	equ	0xFE8
  3263                           indf2	equ	0xFDF
  3264                           postinc2	equ	0xFDE
  3265                           postdec2	equ	0xFDD
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _SendStoredPIDValues *****************
  3271 ;; Defined at:
  3272 ;;		line 223 in file "Wireless.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  Kp              2   24[BANK0 ] int 
  3275 ;;  Kd              2   26[BANK0 ] int 
  3276 ;;  Ki              2   28[BANK0 ] int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3288 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;Total ram usage:        6 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    9
  3295 ;; This function calls:
  3296 ;;		_BusyTx
  3297 ;;		_FlushTxBuf
  3298 ;;		_PutCharTxBuf
  3299 ;;		_StartTx
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text13
  3306  0017BA                     __ptext13:
  3307                           	opt stack 0
  3308  0017BA                     _SendStoredPIDValues:
  3309                           	opt stack 21
  3310                           
  3311                           ;Wireless.c: 224: while(BusyTx());
  3312                           
  3313                           ;incstack = 0
  3314  0017BA  D000               	goto	l6375
  3315  0017BC                     l6375:
  3316  0017BC  EC02  F012         	call	_BusyTx	;wreg free
  3317  0017C0  0900               	iorlw	0
  3318  0017C2  A4D8               	btfss	status,2,c
  3319  0017C4  D7FB               	goto	l6375
  3320                           
  3321                           ;Wireless.c: 225: FlushTxBuf();
  3322  0017C6  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3323                           
  3324                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3325  0017CA  0EAA               	movlw	170
  3326  0017CC  EC56  F00E         	call	_PutCharTxBuf
  3327                           
  3328                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3329  0017D0  0E42               	movlw	66
  3330  0017D2  EC56  F00E         	call	_PutCharTxBuf
  3331                           
  3332                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3333  0017D6  0100               	movlb	0	; () banked
  3334  0017D8  51D7               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3335  0017DA  EC56  F00E         	call	_PutCharTxBuf
  3336                           
  3337                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3338  0017DE  0100               	movlb	0	; () banked
  3339  0017E0  51D6               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3340  0017E2  EC56  F00E         	call	_PutCharTxBuf
  3341                           
  3342                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3343  0017E6  0100               	movlb	0	; () banked
  3344  0017E8  51D9               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3345  0017EA  EC56  F00E         	call	_PutCharTxBuf
  3346                           
  3347                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3348  0017EE  0100               	movlb	0	; () banked
  3349  0017F0  51D8               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3350  0017F2  EC56  F00E         	call	_PutCharTxBuf
  3351                           
  3352                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3353  0017F6  0100               	movlb	0	; () banked
  3354  0017F8  51DB               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3355  0017FA  EC56  F00E         	call	_PutCharTxBuf
  3356                           
  3357                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3358  0017FE  0100               	movlb	0	; () banked
  3359  001800  51DA               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3360  001802  EC56  F00E         	call	_PutCharTxBuf
  3361                           
  3362                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3363  001806  0E0D               	movlw	13
  3364  001808  EC56  F00E         	call	_PutCharTxBuf
  3365                           
  3366                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3367  00180C  0E0A               	movlw	10
  3368  00180E  EC56  F00E         	call	_PutCharTxBuf
  3369                           
  3370                           ;Wireless.c: 239: while (BusyTx());
  3371  001812  D000               	goto	l6379
  3372  001814                     l6379:
  3373  001814  EC02  F012         	call	_BusyTx	;wreg free
  3374  001818  0900               	iorlw	0
  3375  00181A  A4D8               	btfss	status,2,c
  3376  00181C  D7FB               	goto	l6379
  3377                           
  3378                           ;Wireless.c: 240: StartTx();
  3379  00181E  EC75  F012         	call	_StartTx	;wreg free
  3380  001822  0012               	return		;funcret
  3381  001824                     __end_of_SendStoredPIDValues:
  3382                           	opt stack 0
  3383                           postinc0	equ	0xFEE
  3384                           wreg	equ	0xFE8
  3385                           indf2	equ	0xFDF
  3386                           postinc2	equ	0xFDE
  3387                           postdec2	equ	0xFDD
  3388                           fsr2h	equ	0xFDA
  3389                           fsr2l	equ	0xFD9
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function _SendPIDSetPointOnLine *****************
  3393 ;; Defined at:
  3394 ;;		line 335 in file "Wireless.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  set_point       2   24[BANK0 ] PTR const int 
  3397 ;;		 -> PID_set_point(2), 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;		None               void
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    9
  3416 ;; This function calls:
  3417 ;;		_BusyTx
  3418 ;;		_FlushTxBuf
  3419 ;;		_PutCharTxBuf
  3420 ;;		_StartTx
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text14
  3427  00174E                     __ptext14:
  3428                           	opt stack 0
  3429  00174E                     _SendPIDSetPointOnLine:
  3430                           	opt stack 21
  3431                           
  3432                           ;Wireless.c: 336: while(BusyTx());
  3433                           
  3434                           ;incstack = 0
  3435  00174E  D000               	goto	l6405
  3436  001750                     l6405:
  3437  001750  EC02  F012         	call	_BusyTx	;wreg free
  3438  001754  0900               	iorlw	0
  3439  001756  A4D8               	btfss	status,2,c
  3440  001758  D7FB               	goto	l6405
  3441                           
  3442                           ;Wireless.c: 337: FlushTxBuf();
  3443  00175A  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3444                           
  3445                           ;Wireless.c: 339: PutCharTxBuf(0xAA);
  3446  00175E  0EAA               	movlw	170
  3447  001760  EC56  F00E         	call	_PutCharTxBuf
  3448                           
  3449                           ;Wireless.c: 340: PutCharTxBuf(0x07);
  3450  001764  0E07               	movlw	7
  3451  001766  EC56  F00E         	call	_PutCharTxBuf
  3452                           
  3453                           ;Wireless.c: 342: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3454  00176A  C0D6  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3455  00176E  C0D7  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3456  001772  CFDE F0D8          	movff	postinc2,??_SendPIDSetPointOnLine
  3457  001776  CFDD F0D9          	movff	postdec2,??_SendPIDSetPointOnLine+1
  3458  00177A  C0D9  F0D8         	movff	??_SendPIDSetPointOnLine+1,??_SendPIDSetPointOnLine
  3459  00177E  0100               	movlb	0	; () banked
  3460  001780  6BD9               	clrf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3461  001782  BFD8               	btfsc	??_SendPIDSetPointOnLine& (0+255),7,b
  3462  001784  69D9               	setf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3463  001786  0100               	movlb	0	; () banked
  3464  001788  51D8               	movf	??_SendPIDSetPointOnLine& (0+255),w,b
  3465  00178A  EC56  F00E         	call	_PutCharTxBuf
  3466                           
  3467                           ;Wireless.c: 343: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3468  00178E  C0D6  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3469  001792  C0D7  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3470  001796  50DF               	movf	indf2,w,c
  3471  001798  EC56  F00E         	call	_PutCharTxBuf
  3472                           
  3473                           ;Wireless.c: 345: PutCharTxBuf('\r');
  3474  00179C  0E0D               	movlw	13
  3475  00179E  EC56  F00E         	call	_PutCharTxBuf
  3476                           
  3477                           ;Wireless.c: 346: PutCharTxBuf('\n');
  3478  0017A2  0E0A               	movlw	10
  3479  0017A4  EC56  F00E         	call	_PutCharTxBuf
  3480                           
  3481                           ;Wireless.c: 347: while (BusyTx());
  3482  0017A8  D000               	goto	l6409
  3483  0017AA                     l6409:
  3484  0017AA  EC02  F012         	call	_BusyTx	;wreg free
  3485  0017AE  0900               	iorlw	0
  3486  0017B0  A4D8               	btfss	status,2,c
  3487  0017B2  D7FB               	goto	l6409
  3488                           
  3489                           ;Wireless.c: 348: StartTx();
  3490  0017B4  EC75  F012         	call	_StartTx	;wreg free
  3491  0017B8  0012               	return		;funcret
  3492  0017BA                     __end_of_SendPIDSetPointOnLine:
  3493                           	opt stack 0
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           indf2	equ	0xFDF
  3497                           postinc2	equ	0xFDE
  3498                           postdec2	equ	0xFDD
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _SendOffsets *****************
  3504 ;; Defined at:
  3505 ;;		line 165 in file "Wireless.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  3508 ;;		 -> sensor_offsets(10), 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  index           1   28[BANK0 ] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        5 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    9
  3527 ;; This function calls:
  3528 ;;		_BusyTx
  3529 ;;		_FlushTxBuf
  3530 ;;		_PutCharTxBuf
  3531 ;;		_StartTx
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text15
  3538  001332                     __ptext15:
  3539                           	opt stack 0
  3540  001332                     _SendOffsets:
  3541                           	opt stack 21
  3542                           
  3543                           ;Wireless.c: 166: unsigned char index;
  3544                           ;Wireless.c: 168: while(BusyTx());
  3545                           
  3546                           ;incstack = 0
  3547  001332  D000               	goto	l6331
  3548  001334                     l6331:
  3549  001334  EC02  F012         	call	_BusyTx	;wreg free
  3550  001338  0900               	iorlw	0
  3551  00133A  A4D8               	btfss	status,2,c
  3552  00133C  D7FB               	goto	l6331
  3553                           
  3554                           ;Wireless.c: 169: FlushTxBuf();
  3555  00133E  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3556                           
  3557                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  3558  001342  0EAA               	movlw	170
  3559  001344  EC56  F00E         	call	_PutCharTxBuf
  3560                           
  3561                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  3562  001348  0E21               	movlw	33
  3563  00134A  EC56  F00E         	call	_PutCharTxBuf
  3564                           
  3565                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  3566  00134E  0E00               	movlw	0
  3567  001350  0100               	movlb	0	; () banked
  3568  001352  6FDA               	movwf	SendOffsets@index& (0+255),b
  3569  001354                     l6337:
  3570                           
  3571                           ; BSR set to: 0
  3572  001354  0E04               	movlw	4
  3573  001356  0100               	movlb	0	; () banked
  3574  001358  65DA               	cpfsgt	SendOffsets@index& (0+255),b
  3575  00135A  D001               	goto	l6341
  3576                           
  3577                           ; BSR set to: 0
  3578  00135C  D02C               	goto	l6347
  3579  00135E                     l6341:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3583  00135E  0100               	movlb	0	; () banked
  3584  001360  51DA               	movf	SendOffsets@index& (0+255),w,b
  3585  001362  0D02               	mullw	2
  3586  001364  50F3               	movf	prodl,w,c
  3587  001366  0100               	movlb	0	; () banked
  3588  001368  25D6               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3589  00136A  6ED9               	movwf	fsr2l,c
  3590  00136C  50F4               	movf	prodh,w,c
  3591  00136E  0100               	movlb	0	; () banked
  3592  001370  21D7               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3593  001372  6EDA               	movwf	fsr2h,c
  3594  001374  CFDE F0D8          	movff	postinc2,??_SendOffsets
  3595  001378  CFDD F0D9          	movff	postdec2,??_SendOffsets+1
  3596  00137C  C0D9  F0D8         	movff	??_SendOffsets+1,??_SendOffsets
  3597  001380  0100               	movlb	0	; () banked
  3598  001382  6BD9               	clrf	(??_SendOffsets+1)& (0+255),b
  3599  001384  BFD8               	btfsc	??_SendOffsets& (0+255),7,b
  3600  001386  69D9               	setf	(??_SendOffsets+1)& (0+255),b
  3601  001388  0100               	movlb	0	; () banked
  3602  00138A  51D8               	movf	??_SendOffsets& (0+255),w,b
  3603  00138C  EC56  F00E         	call	_PutCharTxBuf
  3604                           
  3605                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3606  001390  0100               	movlb	0	; () banked
  3607  001392  51DA               	movf	SendOffsets@index& (0+255),w,b
  3608  001394  0D02               	mullw	2
  3609  001396  50F3               	movf	prodl,w,c
  3610  001398  0100               	movlb	0	; () banked
  3611  00139A  25D6               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3612  00139C  6ED9               	movwf	fsr2l,c
  3613  00139E  50F4               	movf	prodh,w,c
  3614  0013A0  0100               	movlb	0	; () banked
  3615  0013A2  21D7               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3616  0013A4  6EDA               	movwf	fsr2h,c
  3617  0013A6  50DF               	movf	indf2,w,c
  3618  0013A8  0DFF               	mullw	255
  3619  0013AA  50F3               	movf	prodl,w,c
  3620  0013AC  EC56  F00E         	call	_PutCharTxBuf
  3621  0013B0  0100               	movlb	0	; () banked
  3622  0013B2  2BDA               	incf	SendOffsets@index& (0+255),f,b
  3623  0013B4  D7CF               	goto	l6337
  3624  0013B6                     l6347:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;Wireless.c: 177: }
  3628                           ;Wireless.c: 179: PutCharTxBuf('\r');
  3629  0013B6  0E0D               	movlw	13
  3630  0013B8  EC56  F00E         	call	_PutCharTxBuf
  3631                           
  3632                           ;Wireless.c: 180: PutCharTxBuf('\n');
  3633  0013BC  0E0A               	movlw	10
  3634  0013BE  EC56  F00E         	call	_PutCharTxBuf
  3635                           
  3636                           ;Wireless.c: 181: while(BusyTx());
  3637  0013C2  D000               	goto	l6349
  3638  0013C4                     l6349:
  3639  0013C4  EC02  F012         	call	_BusyTx	;wreg free
  3640  0013C8  0900               	iorlw	0
  3641  0013CA  A4D8               	btfss	status,2,c
  3642  0013CC  D7FB               	goto	l6349
  3643                           
  3644                           ;Wireless.c: 182: StartTx();
  3645  0013CE  EC75  F012         	call	_StartTx	;wreg free
  3646  0013D2  0012               	return		;funcret
  3647  0013D4                     __end_of_SendOffsets:
  3648                           	opt stack 0
  3649                           prodh	equ	0xFF4
  3650                           prodl	equ	0xFF3
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           indf2	equ	0xFDF
  3654                           postinc2	equ	0xFDE
  3655                           postdec2	equ	0xFDD
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _SendLineMode *****************
  3661 ;; Defined at:
  3662 ;;		line 152 in file "Wireless.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3665 ;;		 -> line_mode(1), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        2 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    9
  3684 ;; This function calls:
  3685 ;;		_BusyTx
  3686 ;;		_FlushTxBuf
  3687 ;;		_PutCharTxBuf
  3688 ;;		_StartTx
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text16
  3695  001D6E                     __ptext16:
  3696                           	opt stack 0
  3697  001D6E                     _SendLineMode:
  3698                           	opt stack 21
  3699                           
  3700                           ;Wireless.c: 153: while(BusyTx());
  3701                           
  3702                           ;incstack = 0
  3703  001D6E  D000               	goto	l6323
  3704  001D70                     l6323:
  3705  001D70  EC02  F012         	call	_BusyTx	;wreg free
  3706  001D74  0900               	iorlw	0
  3707  001D76  A4D8               	btfss	status,2,c
  3708  001D78  D7FB               	goto	l6323
  3709                           
  3710                           ;Wireless.c: 154: FlushTxBuf();
  3711  001D7A  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3712                           
  3713                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3714  001D7E  0EAA               	movlw	170
  3715  001D80  EC56  F00E         	call	_PutCharTxBuf
  3716                           
  3717                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3718  001D84  0E11               	movlw	17
  3719  001D86  EC56  F00E         	call	_PutCharTxBuf
  3720                           
  3721                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3722  001D8A  C0D6  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3723  001D8E  C0D7  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3724  001D92  50DF               	movf	indf2,w,c
  3725  001D94  EC56  F00E         	call	_PutCharTxBuf
  3726                           
  3727                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3728  001D98  0E0D               	movlw	13
  3729  001D9A  EC56  F00E         	call	_PutCharTxBuf
  3730                           
  3731                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3732  001D9E  0E0A               	movlw	10
  3733  001DA0  EC56  F00E         	call	_PutCharTxBuf
  3734                           
  3735                           ;Wireless.c: 162: StartTx();
  3736  001DA4  EC75  F012         	call	_StartTx	;wreg free
  3737  001DA8  0012               	return		;funcret
  3738  001DAA                     __end_of_SendLineMode:
  3739                           	opt stack 0
  3740                           prodh	equ	0xFF4
  3741                           prodl	equ	0xFF3
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           indf2	equ	0xFDF
  3745                           postinc2	equ	0xFDE
  3746                           postdec2	equ	0xFDD
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _SendDefaultPIDValues *****************
  3752 ;; Defined at:
  3753 ;;		line 203 in file "Wireless.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  Kp              2   24[BANK0 ] int 
  3756 ;;  Kd              2   26[BANK0 ] int 
  3757 ;;  Ki              2   28[BANK0 ] int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;		None               void
  3762 ;; Registers used:
  3763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3769 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;Total ram usage:        6 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    9
  3776 ;; This function calls:
  3777 ;;		_BusyTx
  3778 ;;		_FlushTxBuf
  3779 ;;		_PutCharTxBuf
  3780 ;;		_StartTx
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text17
  3787  001824                     __ptext17:
  3788                           	opt stack 0
  3789  001824                     _SendDefaultPIDValues:
  3790                           	opt stack 21
  3791                           
  3792                           ;Wireless.c: 204: while(BusyTx());
  3793                           
  3794                           ;incstack = 0
  3795  001824  D000               	goto	l6365
  3796  001826                     l6365:
  3797  001826  EC02  F012         	call	_BusyTx	;wreg free
  3798  00182A  0900               	iorlw	0
  3799  00182C  A4D8               	btfss	status,2,c
  3800  00182E  D7FB               	goto	l6365
  3801                           
  3802                           ;Wireless.c: 205: FlushTxBuf();
  3803  001830  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3804                           
  3805                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3806  001834  0EAA               	movlw	170
  3807  001836  EC56  F00E         	call	_PutCharTxBuf
  3808                           
  3809                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3810  00183A  0E41               	movlw	65
  3811  00183C  EC56  F00E         	call	_PutCharTxBuf
  3812                           
  3813                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3814  001840  0100               	movlb	0	; () banked
  3815  001842  51D7               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3816  001844  EC56  F00E         	call	_PutCharTxBuf
  3817                           
  3818                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3819  001848  0100               	movlb	0	; () banked
  3820  00184A  51D6               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3821  00184C  EC56  F00E         	call	_PutCharTxBuf
  3822                           
  3823                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3824  001850  0100               	movlb	0	; () banked
  3825  001852  51D9               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3826  001854  EC56  F00E         	call	_PutCharTxBuf
  3827                           
  3828                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3829  001858  0100               	movlb	0	; () banked
  3830  00185A  51D8               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3831  00185C  EC56  F00E         	call	_PutCharTxBuf
  3832                           
  3833                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3834  001860  0100               	movlb	0	; () banked
  3835  001862  51DB               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3836  001864  EC56  F00E         	call	_PutCharTxBuf
  3837                           
  3838                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3839  001868  0100               	movlb	0	; () banked
  3840  00186A  51DA               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3841  00186C  EC56  F00E         	call	_PutCharTxBuf
  3842                           
  3843                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3844  001870  0E0D               	movlw	13
  3845  001872  EC56  F00E         	call	_PutCharTxBuf
  3846                           
  3847                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3848  001876  0E0A               	movlw	10
  3849  001878  EC56  F00E         	call	_PutCharTxBuf
  3850                           
  3851                           ;Wireless.c: 219: while (BusyTx());
  3852  00187C  D000               	goto	l6369
  3853  00187E                     l6369:
  3854  00187E  EC02  F012         	call	_BusyTx	;wreg free
  3855  001882  0900               	iorlw	0
  3856  001884  A4D8               	btfss	status,2,c
  3857  001886  D7FB               	goto	l6369
  3858                           
  3859                           ;Wireless.c: 220: StartTx();
  3860  001888  EC75  F012         	call	_StartTx	;wreg free
  3861  00188C  0012               	return		;funcret
  3862  00188E                     __end_of_SendDefaultPIDValues:
  3863                           	opt stack 0
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           postinc0	equ	0xFEE
  3867                           wreg	equ	0xFE8
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _SendCurrentPIDValues *****************
  3876 ;; Defined at:
  3877 ;;		line 243 in file "Wireless.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  Kp              2   24[BANK0 ] int 
  3880 ;;  Kd              2   26[BANK0 ] int 
  3881 ;;  Ki              2   28[BANK0 ] int 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3893 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;Total ram usage:        6 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    9
  3900 ;; This function calls:
  3901 ;;		_BusyTx
  3902 ;;		_FlushTxBuf
  3903 ;;		_PutCharTxBuf
  3904 ;;		_StartTx
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text18
  3911  00188E                     __ptext18:
  3912                           	opt stack 0
  3913  00188E                     _SendCurrentPIDValues:
  3914                           	opt stack 21
  3915                           
  3916                           ;Wireless.c: 244: while(BusyTx());
  3917                           
  3918                           ;incstack = 0
  3919  00188E  D000               	goto	l6385
  3920  001890                     l6385:
  3921  001890  EC02  F012         	call	_BusyTx	;wreg free
  3922  001894  0900               	iorlw	0
  3923  001896  A4D8               	btfss	status,2,c
  3924  001898  D7FB               	goto	l6385
  3925                           
  3926                           ;Wireless.c: 245: FlushTxBuf();
  3927  00189A  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  3928                           
  3929                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3930  00189E  0EAA               	movlw	170
  3931  0018A0  EC56  F00E         	call	_PutCharTxBuf
  3932                           
  3933                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3934  0018A4  0E43               	movlw	67
  3935  0018A6  EC56  F00E         	call	_PutCharTxBuf
  3936                           
  3937                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3938  0018AA  0100               	movlb	0	; () banked
  3939  0018AC  51D7               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3940  0018AE  EC56  F00E         	call	_PutCharTxBuf
  3941                           
  3942                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3943  0018B2  0100               	movlb	0	; () banked
  3944  0018B4  51D6               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3945  0018B6  EC56  F00E         	call	_PutCharTxBuf
  3946                           
  3947                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3948  0018BA  0100               	movlb	0	; () banked
  3949  0018BC  51D9               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3950  0018BE  EC56  F00E         	call	_PutCharTxBuf
  3951                           
  3952                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3953  0018C2  0100               	movlb	0	; () banked
  3954  0018C4  51D8               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3955  0018C6  EC56  F00E         	call	_PutCharTxBuf
  3956                           
  3957                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3958  0018CA  0100               	movlb	0	; () banked
  3959  0018CC  51DB               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3960  0018CE  EC56  F00E         	call	_PutCharTxBuf
  3961                           
  3962                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3963  0018D2  0100               	movlb	0	; () banked
  3964  0018D4  51DA               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3965  0018D6  EC56  F00E         	call	_PutCharTxBuf
  3966                           
  3967                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3968  0018DA  0E0D               	movlw	13
  3969  0018DC  EC56  F00E         	call	_PutCharTxBuf
  3970                           
  3971                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3972  0018E0  0E0A               	movlw	10
  3973  0018E2  EC56  F00E         	call	_PutCharTxBuf
  3974                           
  3975                           ;Wireless.c: 259: while (BusyTx());
  3976  0018E6  D000               	goto	l6389
  3977  0018E8                     l6389:
  3978  0018E8  EC02  F012         	call	_BusyTx	;wreg free
  3979  0018EC  0900               	iorlw	0
  3980  0018EE  A4D8               	btfss	status,2,c
  3981  0018F0  D7FB               	goto	l6389
  3982                           
  3983                           ;Wireless.c: 260: StartTx();
  3984  0018F2  EC75  F012         	call	_StartTx	;wreg free
  3985  0018F6  0012               	return		;funcret
  3986  0018F8                     __end_of_SendCurrentPIDValues:
  3987                           	opt stack 0
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           postinc0	equ	0xFEE
  3991                           wreg	equ	0xFE8
  3992                           indf2	equ	0xFDF
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _SendBattVoltageInitial *****************
  4000 ;; Defined at:
  4001 ;;		line 263 in file "Wireless.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  4004 ;;		 -> main@battery_voltage(2), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;		None               void
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;Total ram usage:        4 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    9
  4023 ;; This function calls:
  4024 ;;		_BusyTx
  4025 ;;		_FlushTxBuf
  4026 ;;		_PutCharTxBuf
  4027 ;;		_StartTx
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text19
  4034  001962                     __ptext19:
  4035                           	opt stack 0
  4036  001962                     _SendBattVoltageInitial:
  4037                           	opt stack 21
  4038                           
  4039                           ;Wireless.c: 264: while(BusyTx());
  4040                           
  4041                           ;incstack = 0
  4042  001962  D000               	goto	l6395
  4043  001964                     l6395:
  4044  001964  EC02  F012         	call	_BusyTx	;wreg free
  4045  001968  0900               	iorlw	0
  4046  00196A  A4D8               	btfss	status,2,c
  4047  00196C  D7FB               	goto	l6395
  4048                           
  4049                           ;Wireless.c: 265: FlushTxBuf();
  4050  00196E  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  4051                           
  4052                           ;Wireless.c: 267: PutCharTxBuf(0xAA);
  4053  001972  0EAA               	movlw	170
  4054  001974  EC56  F00E         	call	_PutCharTxBuf
  4055                           
  4056                           ;Wireless.c: 268: PutCharTxBuf(0x06);
  4057  001978  0E06               	movlw	6
  4058  00197A  EC56  F00E         	call	_PutCharTxBuf
  4059                           
  4060                           ;Wireless.c: 270: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  4061  00197E  C0D6  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4062  001982  C0D7  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4063  001986  CFDE F0D8          	movff	postinc2,??_SendBattVoltageInitial
  4064  00198A  CFDD F0D9          	movff	postdec2,??_SendBattVoltageInitial+1
  4065  00198E  C0D9  F0D8         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  4066  001992  0100               	movlb	0	; () banked
  4067  001994  6BD9               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  4068  001996  0100               	movlb	0	; () banked
  4069  001998  51D8               	movf	??_SendBattVoltageInitial& (0+255),w,b
  4070  00199A  EC56  F00E         	call	_PutCharTxBuf
  4071                           
  4072                           ;Wireless.c: 271: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  4073  00199E  C0D6  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4074  0019A2  C0D7  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4075  0019A6  50DF               	movf	indf2,w,c
  4076  0019A8  EC56  F00E         	call	_PutCharTxBuf
  4077                           
  4078                           ;Wireless.c: 273: PutCharTxBuf('\r');
  4079  0019AC  0E0D               	movlw	13
  4080  0019AE  EC56  F00E         	call	_PutCharTxBuf
  4081                           
  4082                           ;Wireless.c: 274: PutCharTxBuf('\n');
  4083  0019B2  0E0A               	movlw	10
  4084  0019B4  EC56  F00E         	call	_PutCharTxBuf
  4085                           
  4086                           ;Wireless.c: 275: while (BusyTx());
  4087  0019B8  D000               	goto	l6399
  4088  0019BA                     l6399:
  4089  0019BA  EC02  F012         	call	_BusyTx	;wreg free
  4090  0019BE  0900               	iorlw	0
  4091  0019C0  A4D8               	btfss	status,2,c
  4092  0019C2  D7FB               	goto	l6399
  4093                           
  4094                           ;Wireless.c: 276: StartTx();
  4095  0019C4  EC75  F012         	call	_StartTx	;wreg free
  4096  0019C8  0012               	return		;funcret
  4097  0019CA                     __end_of_SendBattVoltageInitial:
  4098                           	opt stack 0
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           indf2	equ	0xFDF
  4104                           postinc2	equ	0xFDE
  4105                           postdec2	equ	0xFDD
  4106                           fsr2h	equ	0xFDA
  4107                           fsr2l	equ	0xFD9
  4108                           status	equ	0xFD8
  4109                           
  4110 ;; *************** function _ResetMillis3 *****************
  4111 ;; Defined at:
  4112 ;;		line 50 in file "MillisecondTimer.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;		None               void
  4119 ;; Registers used:
  4120 ;;		wreg, status,2
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    7
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text20
  4141  00249A                     __ptext20:
  4142                           	opt stack 0
  4143  00249A                     _ResetMillis3:
  4144                           	opt stack 23
  4145                           
  4146                           ;MillisecondTimer.c: 52: millisecond_COUNT3 = 0;
  4147                           
  4148                           ;incstack = 0
  4149  00249A  0E00               	movlw	0
  4150  00249C  6E14               	movwf	_millisecond_COUNT3+1,c	;volatile
  4151  00249E  0E00               	movlw	0
  4152  0024A0  6E13               	movwf	_millisecond_COUNT3,c	;volatile
  4153  0024A2  0012               	return		;funcret
  4154  0024A4                     __end_of_ResetMillis3:
  4155                           	opt stack 0
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           indf2	equ	0xFDF
  4161                           postinc2	equ	0xFDE
  4162                           postdec2	equ	0xFDD
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _ResetMillis1 *****************
  4168 ;; Defined at:
  4169 ;;		line 39 in file "MillisecondTimer.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;		None               void
  4176 ;; Registers used:
  4177 ;;		wreg, status,2
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    7
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text21
  4198  0024A4                     __ptext21:
  4199                           	opt stack 0
  4200  0024A4                     _ResetMillis1:
  4201                           	opt stack 23
  4202                           
  4203                           ;MillisecondTimer.c: 41: millisecond_COUNT1 = 0;
  4204                           
  4205                           ;incstack = 0
  4206  0024A4  0E00               	movlw	0
  4207  0024A6  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  4208  0024A8  0E00               	movlw	0
  4209  0024AA  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  4210  0024AC  0012               	return		;funcret
  4211  0024AE                     __end_of_ResetMillis1:
  4212                           	opt stack 0
  4213                           prodh	equ	0xFF4
  4214                           prodl	equ	0xFF3
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           indf2	equ	0xFDF
  4218                           postinc2	equ	0xFDE
  4219                           postdec2	equ	0xFDD
  4220                           fsr2h	equ	0xFDA
  4221                           fsr2l	equ	0xFD9
  4222                           status	equ	0xFD8
  4223                           
  4224 ;; *************** function _ResetMillis0 *****************
  4225 ;; Defined at:
  4226 ;;		line 33 in file "MillisecondTimer.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		wreg, status,2
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;Total ram usage:        0 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    7
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_main
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text22
  4255  0024AE                     __ptext22:
  4256                           	opt stack 0
  4257  0024AE                     _ResetMillis0:
  4258                           	opt stack 23
  4259                           
  4260                           ;MillisecondTimer.c: 35: millisecond_COUNT0 = 0;
  4261                           
  4262                           ;incstack = 0
  4263  0024AE  0E00               	movlw	0
  4264  0024B0  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  4265  0024B2  0E00               	movlw	0
  4266  0024B4  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  4267  0024B6  0012               	return		;funcret
  4268  0024B8                     __end_of_ResetMillis0:
  4269                           	opt stack 0
  4270                           prodh	equ	0xFF4
  4271                           prodl	equ	0xFF3
  4272                           postinc0	equ	0xFEE
  4273                           wreg	equ	0xFE8
  4274                           indf2	equ	0xFDF
  4275                           postinc2	equ	0xFDE
  4276                           postdec2	equ	0xFDD
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function _ResetAccumulatedCurrent *****************
  4282 ;; Defined at:
  4283 ;;		line 103 in file "BatteryLib/ds2781.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;		None               void
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    9
  4304 ;; This function calls:
  4305 ;;		_OWReset
  4306 ;;		_OWWriteByte
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text23
  4313  002032                     __ptext23:
  4314                           	opt stack 0
  4315  002032                     _ResetAccumulatedCurrent:
  4316                           	opt stack 21
  4317                           
  4318                           ;ds2781.c: 105: if( OWReset() == TRUE)
  4319                           
  4320                           ;incstack = 0
  4321  002032  EC0F  F00F         	call	_OWReset	;wreg free
  4322  002036  06E8               	decf	wreg,f,c
  4323  002038  A4D8               	btfss	status,2,c
  4324  00203A  D010               	goto	l487
  4325                           
  4326                           ;ds2781.c: 106: {
  4327                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  4328  00203C  0ECC               	movlw	204
  4329  00203E  EC2F  F010         	call	_OWWriteByte
  4330                           
  4331                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  4332  002042  0E6C               	movlw	108
  4333  002044  EC2F  F010         	call	_OWWriteByte
  4334                           
  4335                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  4336  002048  0E10               	movlw	16
  4337  00204A  EC2F  F010         	call	_OWWriteByte
  4338                           
  4339                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  4340  00204E  0E00               	movlw	0
  4341  002050  EC2F  F010         	call	_OWWriteByte
  4342                           
  4343                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  4344  002054  0E00               	movlw	0
  4345  002056  EC2F  F010         	call	_OWWriteByte
  4346  00205A  D000               	goto	l487
  4347  00205C                     l487:
  4348  00205C  0012               	return		;funcret
  4349  00205E                     __end_of_ResetAccumulatedCurrent:
  4350                           	opt stack 0
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           postinc0	equ	0xFEE
  4354                           wreg	equ	0xFE8
  4355                           indf2	equ	0xFDF
  4356                           postinc2	equ	0xFDE
  4357                           postdec2	equ	0xFDD
  4358                           fsr2h	equ	0xFDA
  4359                           fsr2l	equ	0xFD9
  4360                           status	equ	0xFD8
  4361                           
  4362 ;; *************** function _ReadVoltage *****************
  4363 ;; Defined at:
  4364 ;;		line 33 in file "BatteryLib/ds2781.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  result          2   24[BANK0 ] unsigned short 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  2   19[BANK0 ] unsigned short 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;Total ram usage:        7 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    9
  4385 ;; This function calls:
  4386 ;;		_OWReadByte
  4387 ;;		_OWReset
  4388 ;;		_OWWriteByte
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text24
  4395  0018F8                     __ptext24:
  4396                           	opt stack 0
  4397  0018F8                     _ReadVoltage:
  4398                           	opt stack 21
  4399                           
  4400                           ;ds2781.c: 35: WORD result = 0;
  4401                           
  4402                           ;incstack = 0
  4403  0018F8  0E00               	movlw	0
  4404  0018FA  0100               	movlb	0	; () banked
  4405  0018FC  6FD7               	movwf	(ReadVoltage@result+1)& (0+255),b
  4406  0018FE  0E00               	movlw	0
  4407  001900  6FD6               	movwf	ReadVoltage@result& (0+255),b
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4411  001902  EC0F  F00F         	call	_OWReset	;wreg free
  4412  001906  06E8               	decf	wreg,f,c
  4413  001908  A4D8               	btfss	status,2,c
  4414  00190A  D017               	goto	l6419
  4415                           
  4416                           ;ds2781.c: 37: {
  4417                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4418  00190C  0ECC               	movlw	204
  4419  00190E  EC2F  F010         	call	_OWWriteByte
  4420                           
  4421                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4422  001912  0E69               	movlw	105
  4423  001914  EC2F  F010         	call	_OWWriteByte
  4424                           
  4425                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4426  001918  0E0C               	movlw	12
  4427  00191A  EC2F  F010         	call	_OWWriteByte
  4428                           
  4429                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4430  00191E  EC2B  F00F         	call	_OWReadByte	;wreg free
  4431  001922  0100               	movlb	0	; () banked
  4432  001924  6FD7               	movwf	(ReadVoltage@result+1)& (0+255),b
  4433  001926  6BD6               	clrf	ReadVoltage@result& (0+255),b
  4434                           
  4435                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4436  001928  EC2B  F00F         	call	_OWReadByte	;wreg free
  4437  00192C  0100               	movlb	0	; () banked
  4438  00192E  6FD3               	movwf	??_ReadVoltage& (0+255),b
  4439  001930  0100               	movlb	0	; () banked
  4440  001932  51D3               	movf	??_ReadVoltage& (0+255),w,b
  4441  001934  0100               	movlb	0	; () banked
  4442  001936  13D6               	iorwf	ReadVoltage@result& (0+255),f,b
  4443  001938  D000               	goto	l6419
  4444  00193A                     l6419:
  4445                           
  4446                           ;ds2781.c: 43: }
  4447                           ;ds2781.c: 44: return (result >> 5);
  4448  00193A  C0D6  F0D3         	movff	ReadVoltage@result,??_ReadVoltage
  4449  00193E  C0D7  F0D4         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4450  001942  0E05               	movlw	5
  4451  001944  0100               	movlb	0	; () banked
  4452  001946  6FD5               	movwf	(??_ReadVoltage+2)& (0+255),b
  4453  001948                     u5635:
  4454  001948  0100               	movlb	0	; () banked
  4455  00194A  90D8               	bcf	status,0,c
  4456  00194C  33D4               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4457  00194E  33D3               	rrcf	??_ReadVoltage& (0+255),f,b
  4458  001950  0100               	movlb	0	; () banked
  4459  001952  2FD5               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4460  001954  D7F9               	goto	u5635
  4461  001956  C0D3  F0D1         	movff	??_ReadVoltage,?_ReadVoltage
  4462  00195A  C0D4  F0D2         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4463  00195E  D000               	goto	l475
  4464  001960                     l475:
  4465                           
  4466                           ; BSR set to: 0
  4467  001960  0012               	return		;funcret
  4468  001962                     __end_of_ReadVoltage:
  4469                           	opt stack 0
  4470                           prodh	equ	0xFF4
  4471                           prodl	equ	0xFF3
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           indf2	equ	0xFDF
  4475                           postinc2	equ	0xFDE
  4476                           postdec2	equ	0xFDD
  4477                           fsr2h	equ	0xFDA
  4478                           fsr2l	equ	0xFD9
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _OWWriteByte *****************
  4482 ;; Defined at:
  4483 ;;		line 143 in file "BatteryLib/OneWire.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  byte            1    wreg     unsigned char 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  byte            1   17[BANK0 ] unsigned char 
  4488 ;;  i               1   18[BANK0 ] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;		None               void
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        2 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    8
  4505 ;; This function calls:
  4506 ;;		_OWWriteBit
  4507 ;; This function is called by:
  4508 ;;		_ReadVoltage
  4509 ;;		_ResetAccumulatedCurrent
  4510 ;;		_ReadCurrent
  4511 ;;		_ReadAccumulatedCurrent
  4512 ;;		_ReadNetAddress
  4513 ;;		_ReadTemperature
  4514 ;;		_ReadCurrentOffset
  4515 ;;		_WriteCurrentOffset
  4516 ;;		_AdjustCurrentOffset
  4517 ;;		_UpdateControlRegister
  4518 ;;		_ReadRAM
  4519 ;;		_WriteRAM
  4520 ;;		_CopyEEPROM
  4521 ;;		_RecallEEPROM
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text25
  4526  00205E                     __ptext25:
  4527                           	opt stack 0
  4528  00205E                     _OWWriteByte:
  4529                           	opt stack 21
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;incstack = 0
  4533                           ;OWWriteByte@byte stored from wreg
  4534  00205E  0100               	movlb	0	; () banked
  4535  002060  6FCF               	movwf	OWWriteByte@byte& (0+255),b
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;OneWire.c: 145: BYTE i;
  4539                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4540  002062  0E00               	movlw	0
  4541  002064  0100               	movlb	0	; () banked
  4542  002066  6FD0               	movwf	OWWriteByte@i& (0+255),b
  4543  002068                     l6017:
  4544                           
  4545                           ; BSR set to: 0
  4546  002068  0E07               	movlw	7
  4547  00206A  0100               	movlb	0	; () banked
  4548  00206C  65D0               	cpfsgt	OWWriteByte@i& (0+255),b
  4549  00206E  D001               	goto	l6021
  4550                           
  4551                           ; BSR set to: 0
  4552  002070  D00B               	goto	l562
  4553  002072                     l6021:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;OneWire.c: 148: {
  4557                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4558  002072  0100               	movlb	0	; () banked
  4559  002074  51CF               	movf	OWWriteByte@byte& (0+255),w,b
  4560  002076  0B01               	andlw	1
  4561  002078  ECD5  F00E         	call	_OWWriteBit
  4562                           
  4563                           ;OneWire.c: 150: byte >>= 1;
  4564  00207C  0100               	movlb	0	; () banked
  4565  00207E  90D8               	bcf	status,0,c
  4566  002080  33CF               	rrcf	OWWriteByte@byte& (0+255),f,b
  4567                           
  4568                           ; BSR set to: 0
  4569  002082  0100               	movlb	0	; () banked
  4570  002084  2BD0               	incf	OWWriteByte@i& (0+255),f,b
  4571  002086  D7F0               	goto	l6017
  4572  002088                     l562:
  4573                           
  4574                           ; BSR set to: 0
  4575  002088  0012               	return		;funcret
  4576  00208A                     __end_of_OWWriteByte:
  4577                           	opt stack 0
  4578                           prodh	equ	0xFF4
  4579                           prodl	equ	0xFF3
  4580                           postinc0	equ	0xFEE
  4581                           wreg	equ	0xFE8
  4582                           indf2	equ	0xFDF
  4583                           postinc2	equ	0xFDE
  4584                           postdec2	equ	0xFDD
  4585                           fsr2h	equ	0xFDA
  4586                           fsr2l	equ	0xFD9
  4587                           status	equ	0xFD8
  4588                           
  4589 ;; *************** function _OWWriteBit *****************
  4590 ;; Defined at:
  4591 ;;		line 72 in file "BatteryLib/OneWire.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  b               1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  b               1   16[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;Total ram usage:        1 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    7
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_OWWriteByte
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text26
  4620  001DAA                     __ptext26:
  4621                           	opt stack 0
  4622  001DAA                     _OWWriteBit:
  4623                           	opt stack 21
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;incstack = 0
  4627                           ;OWWriteBit@b stored from wreg
  4628  001DAA  0100               	movlb	0	; () banked
  4629  001DAC  6FCE               	movwf	OWWriteBit@b& (0+255),b
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;OneWire.c: 74: if (b)
  4633  001DAE  0100               	movlb	0	; () banked
  4634  001DB0  51CE               	movf	OWWriteBit@b& (0+255),w,b
  4635  001DB2  0100               	movlb	0	; () banked
  4636  001DB4  B4D8               	btfsc	status,2,c
  4637  001DB6  D00A               	goto	l552
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;OneWire.c: 75: {
  4641                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4642  001DB8  9690               	bcf	3984,3,c	;volatile
  4643                           
  4644                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4645  001DBA  9699               	bcf	3993,3,c	;volatile
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4649  001DBC  0E04               	movlw	4
  4650  001DBE                     u6427:
  4651  001DBE  2EE8               	decfsz	wreg,f,c
  4652  001DC0  D7FE               	goto	u6427
  4653                           
  4654                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4655  001DC2  8699               	bsf	3993,3,c	;volatile
  4656                           
  4657                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4658  001DC4  0E35               	movlw	53
  4659  001DC6                     u6437:
  4660  001DC6  2EE8               	decfsz	wreg,f,c
  4661  001DC8  D7FE               	goto	u6437
  4662  001DCA  D009               	goto	L2
  4663  001DCC                     l552:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;OneWire.c: 87: else
  4667                           ;OneWire.c: 88: {
  4668                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4669  001DCC  9690               	bcf	3984,3,c	;volatile
  4670                           
  4671                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4672  001DCE  9699               	bcf	3993,3,c	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4676  001DD0  0E32               	movlw	50
  4677  001DD2                     u6447:
  4678  001DD2  2EE8               	decfsz	wreg,f,c
  4679  001DD4  D7FE               	goto	u6447
  4680                           
  4681                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4682  001DD6  8699               	bsf	3993,3,c	;volatile
  4683                           
  4684                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4685  001DD8  0E08               	movlw	8
  4686  001DDA                     u6457:
  4687  001DDA  2EE8               	decfsz	wreg,f,c
  4688  001DDC  D7FE               	goto	u6457
  4689  001DDE                     L2:
  4690  001DDE  F000               	nop	
  4691  001DE0  D000               	goto	l554
  4692  001DE2                     l554:
  4693  001DE2  0012               	return		;funcret
  4694  001DE4                     __end_of_OWWriteBit:
  4695                           	opt stack 0
  4696                           prodh	equ	0xFF4
  4697                           prodl	equ	0xFF3
  4698                           postinc0	equ	0xFEE
  4699                           wreg	equ	0xFE8
  4700                           indf2	equ	0xFDF
  4701                           postinc2	equ	0xFDE
  4702                           postdec2	equ	0xFDD
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _OWReset *****************
  4708 ;; Defined at:
  4709 ;;		line 41 in file "BatteryLib/OneWire.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  result          1   16[BANK0 ] enum E6350
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      enum E6350
  4716 ;; Registers used:
  4717 ;;		wreg, status,2
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:        1 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    7
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_ReadVoltage
  4734 ;;		_ResetAccumulatedCurrent
  4735 ;;		_ReadCurrent
  4736 ;;		_ReadAccumulatedCurrent
  4737 ;;		_ReadNetAddress
  4738 ;;		_ReadTemperature
  4739 ;;		_ReadCurrentOffset
  4740 ;;		_WriteCurrentOffset
  4741 ;;		_AdjustCurrentOffset
  4742 ;;		_UpdateControlRegister
  4743 ;;		_ReadRAM
  4744 ;;		_WriteRAM
  4745 ;;		_CopyEEPROM
  4746 ;;		_RecallEEPROM
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text27
  4751  001E1E                     __ptext27:
  4752                           	opt stack 0
  4753  001E1E                     _OWReset:
  4754                           	opt stack 22
  4755                           
  4756                           ;OneWire.c: 43: BOOL result = FALSE;
  4757                           
  4758                           ;incstack = 0
  4759  001E1E  0E00               	movlw	0
  4760  001E20  0100               	movlb	0	; () banked
  4761  001E22  6FCE               	movwf	OWReset@result& (0+255),b
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  4765  001E24  9690               	bcf	3984,3,c	;volatile
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  4769  001E26  9699               	bcf	3993,3,c	;volatile
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  4773  001E28  0EF0               	movlw	240
  4774  001E2A                     u6467:
  4775  001E2A  D000               	nop2	
  4776  001E2C  2EE8               	decfsz	wreg,f,c
  4777  001E2E  D7FD               	goto	u6467
  4778                           
  4779                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  4780  001E30  8699               	bsf	3993,3,c	;volatile
  4781                           
  4782                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  4783  001E32  0E38               	movlw	56
  4784  001E34                     u6477:
  4785  001E34  2EE8               	decfsz	wreg,f,c
  4786  001E36  D7FE               	goto	u6477
  4787  001E38  D000               	nop2		;nop
  4788                           
  4789                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  4790  001E3A  B690               	btfsc	3984,3,c	;volatile
  4791  001E3C  D004               	goto	l6009
  4792                           
  4793                           ;OneWire.c: 54: {
  4794                           ;OneWire.c: 55: result = TRUE;
  4795  001E3E  0E01               	movlw	1
  4796  001E40  0100               	movlb	0	; () banked
  4797  001E42  6FCE               	movwf	OWReset@result& (0+255),b
  4798  001E44  D000               	goto	l6009
  4799  001E46                     l6009:
  4800                           
  4801                           ;OneWire.c: 56: }
  4802                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  4803  001E46  0EFD               	movlw	253
  4804  001E48                     u6487:
  4805  001E48  F000               	nop	
  4806  001E4A  2EE8               	decfsz	wreg,f,c
  4807  001E4C  D7FD               	goto	u6487
  4808                           
  4809                           ;OneWire.c: 59: return result;
  4810  001E4E  0100               	movlb	0	; () banked
  4811  001E50  51CE               	movf	OWReset@result& (0+255),w,b
  4812  001E52  D000               	goto	l549
  4813  001E54                     l549:
  4814                           
  4815                           ; BSR set to: 0
  4816  001E54  0012               	return		;funcret
  4817  001E56                     __end_of_OWReset:
  4818                           	opt stack 0
  4819                           prodh	equ	0xFF4
  4820                           prodl	equ	0xFF3
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           indf2	equ	0xFDF
  4824                           postinc2	equ	0xFDE
  4825                           postdec2	equ	0xFDD
  4826                           fsr2h	equ	0xFDA
  4827                           fsr2l	equ	0xFD9
  4828                           status	equ	0xFD8
  4829                           
  4830 ;; *************** function _OWReadByte *****************
  4831 ;; Defined at:
  4832 ;;		line 163 in file "BatteryLib/OneWire.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  i               1   18[BANK0 ] unsigned char 
  4837 ;;  result          1   17[BANK0 ] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      unsigned char 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;Total ram usage:        2 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    8
  4854 ;; This function calls:
  4855 ;;		_OWReadBit
  4856 ;; This function is called by:
  4857 ;;		_ReadVoltage
  4858 ;;		_ReadCurrent
  4859 ;;		_ReadAccumulatedCurrent
  4860 ;;		_ReadTemperature
  4861 ;;		_ReadCurrentOffset
  4862 ;;		_AdjustCurrentOffset
  4863 ;;		_ReadRAM
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text28
  4868  001E56                     __ptext28:
  4869                           	opt stack 0
  4870  001E56                     _OWReadByte:
  4871                           	opt stack 21
  4872                           
  4873                           ;OneWire.c: 165: BYTE i, result=0;
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;incstack = 0
  4877  001E56  0E00               	movlw	0
  4878  001E58  0100               	movlb	0	; () banked
  4879  001E5A  6FCF               	movwf	OWReadByte@result& (0+255),b
  4880                           
  4881                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  4882  001E5C  0E00               	movlw	0
  4883  001E5E  0100               	movlb	0	; () banked
  4884  001E60  6FD0               	movwf	OWReadByte@i& (0+255),b
  4885  001E62                     l6031:
  4886                           
  4887                           ; BSR set to: 0
  4888  001E62  0E07               	movlw	7
  4889  001E64  0100               	movlb	0	; () banked
  4890  001E66  65D0               	cpfsgt	OWReadByte@i& (0+255),b
  4891  001E68  D001               	goto	l6035
  4892                           
  4893                           ; BSR set to: 0
  4894  001E6A  D00D               	goto	l6043
  4895  001E6C                     l6035:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;OneWire.c: 168: {
  4899                           ;OneWire.c: 169: result >>= 1;
  4900  001E6C  0100               	movlb	0	; () banked
  4901  001E6E  90D8               	bcf	status,0,c
  4902  001E70  33CF               	rrcf	OWReadByte@result& (0+255),f,b
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;OneWire.c: 171: if (OWReadBit())
  4906  001E72  EC01  F010         	call	_OWReadBit	;wreg free
  4907  001E76  0900               	iorlw	0
  4908  001E78  B4D8               	btfsc	status,2,c
  4909  001E7A  D002               	goto	l567
  4910                           
  4911                           ;OneWire.c: 172: result |= 0x80;
  4912  001E7C  0100               	movlb	0	; () banked
  4913  001E7E  8FCF               	bsf	OWReadByte@result& (0+255),7,b
  4914  001E80                     l567:
  4915  001E80  0100               	movlb	0	; () banked
  4916  001E82  2BD0               	incf	OWReadByte@i& (0+255),f,b
  4917  001E84  D7EE               	goto	l6031
  4918  001E86                     l6043:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;OneWire.c: 173: }
  4922                           ;OneWire.c: 174: return result;
  4923  001E86  0100               	movlb	0	; () banked
  4924  001E88  51CF               	movf	OWReadByte@result& (0+255),w,b
  4925  001E8A  D000               	goto	l568
  4926  001E8C                     l568:
  4927                           
  4928                           ; BSR set to: 0
  4929  001E8C  0012               	return		;funcret
  4930  001E8E                     __end_of_OWReadByte:
  4931                           	opt stack 0
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           indf2	equ	0xFDF
  4937                           postinc2	equ	0xFDE
  4938                           postdec2	equ	0xFDD
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _OWReadBit *****************
  4944 ;; Defined at:
  4945 ;;		line 112 in file "BatteryLib/OneWire.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  result          1   16[BANK0 ] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      unsigned char 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    7
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_OWReadByte
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text29
  4974  002002                     __ptext29:
  4975                           	opt stack 0
  4976  002002                     _OWReadBit:
  4977                           	opt stack 21
  4978                           
  4979                           ;OneWire.c: 114: BYTE result;
  4980                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;incstack = 0
  4984  002002  9690               	bcf	3984,3,c	;volatile
  4985                           
  4986                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  4987  002004  9699               	bcf	3993,3,c	;volatile
  4988                           
  4989                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4990  002006  0E04               	movlw	4
  4991  002008                     u6497:
  4992  002008  2EE8               	decfsz	wreg,f,c
  4993  00200A  D7FE               	goto	u6497
  4994                           
  4995                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  4996  00200C  8699               	bsf	3993,3,c	;volatile
  4997                           
  4998                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4999  00200E  0E08               	movlw	8
  5000  002010                     u6507:
  5001  002010  2EE8               	decfsz	wreg,f,c
  5002  002012  D7FE               	goto	u6507
  5003  002014  F000               	nop	
  5004                           
  5005                           ;OneWire.c: 127: result = PORTHbits.RH3;
  5006  002016  0E00               	movlw	0
  5007  002018  B687               	btfsc	3975,3,c	;volatile
  5008  00201A  0E01               	movlw	1
  5009  00201C  0100               	movlb	0	; () banked
  5010  00201E  6FCE               	movwf	OWReadBit@result& (0+255),b
  5011                           
  5012                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  5013  002020  0E2D               	movlw	45
  5014  002022                     u6517:
  5015  002022  2EE8               	decfsz	wreg,f,c
  5016  002024  D7FE               	goto	u6517
  5017  002026  D000               	nop2		;nop
  5018                           
  5019                           ;OneWire.c: 131: return result & 0x01;
  5020  002028  0100               	movlb	0	; () banked
  5021  00202A  51CE               	movf	OWReadBit@result& (0+255),w,b
  5022  00202C  0B01               	andlw	1
  5023  00202E  D000               	goto	l557
  5024  002030                     l557:
  5025                           
  5026                           ; BSR set to: 0
  5027  002030  0012               	return		;funcret
  5028  002032                     __end_of_OWReadBit:
  5029                           	opt stack 0
  5030                           prodh	equ	0xFF4
  5031                           prodl	equ	0xFF3
  5032                           postinc0	equ	0xFEE
  5033                           wreg	equ	0xFE8
  5034                           indf2	equ	0xFDF
  5035                           postinc2	equ	0xFDE
  5036                           postdec2	equ	0xFDD
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _ReadMillis1 *****************
  5042 ;; Defined at:
  5043 ;;		line 13 in file "MillisecondTimer.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  2   16[BANK0 ] unsigned int 
  5050 ;; Registers used:
  5051 ;;		None
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;Total ram usage:        2 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    7
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text30
  5072  0024B8                     __ptext30:
  5073                           	opt stack 0
  5074  0024B8                     _ReadMillis1:
  5075                           	opt stack 23
  5076                           
  5077                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;incstack = 0
  5081  0024B8  C00F  F0CE         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  5082  0024BC  C010  F0CF         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  5083  0024C0  0012               	return		;funcret
  5084  0024C2                     __end_of_ReadMillis1:
  5085                           	opt stack 0
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           fsr2h	equ	0xFDA
  5094                           fsr2l	equ	0xFD9
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _ReadMillis0 *****************
  5098 ;; Defined at:
  5099 ;;		line 7 in file "MillisecondTimer.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  2   16[BANK0 ] unsigned int 
  5106 ;; Registers used:
  5107 ;;		None
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;Total ram usage:        2 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    7
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text31
  5128  0024C2                     __ptext31:
  5129                           	opt stack 0
  5130  0024C2                     _ReadMillis0:
  5131                           	opt stack 23
  5132                           
  5133                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  5134                           
  5135                           ;incstack = 0
  5136  0024C2  C00D  F0CE         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  5137  0024C6  C00E  F0CF         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  5138  0024CA  0012               	return		;funcret
  5139  0024CC                     __end_of_ReadMillis0:
  5140                           	opt stack 0
  5141                           prodh	equ	0xFF4
  5142                           prodl	equ	0xFF3
  5143                           postinc0	equ	0xFEE
  5144                           wreg	equ	0xFE8
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           postdec2	equ	0xFDD
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _ReadEchoLength *****************
  5153 ;; Defined at:
  5154 ;;		line 68 in file "Ultrasound.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  2   16[BANK0 ] unsigned int 
  5161 ;; Registers used:
  5162 ;;		None
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        2 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    7
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_main
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text32
  5183  0024CC                     __ptext32:
  5184                           	opt stack 0
  5185  0024CC                     _ReadEchoLength:
  5186                           	opt stack 23
  5187                           
  5188                           ;Ultrasound.c: 70: return (echo_time);
  5189                           
  5190                           ;incstack = 0
  5191  0024CC  C00B  F0CE         	movff	_echo_time,?_ReadEchoLength	;volatile
  5192  0024D0  C00C  F0CF         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  5193  0024D4  0012               	return		;funcret
  5194  0024D6                     __end_of_ReadEchoLength:
  5195                           	opt stack 0
  5196                           prodh	equ	0xFF4
  5197                           prodl	equ	0xFF3
  5198                           postinc0	equ	0xFEE
  5199                           wreg	equ	0xFE8
  5200                           indf2	equ	0xFDF
  5201                           postinc2	equ	0xFDE
  5202                           postdec2	equ	0xFDD
  5203                           fsr2h	equ	0xFDA
  5204                           fsr2l	equ	0xFD9
  5205                           status	equ	0xFD8
  5206                           
  5207 ;; *************** function _LoadPIDValues *****************
  5208 ;; Defined at:
  5209 ;;		line 608 in file "FastBuggy17_Main_Code_TUNING.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;		None
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;		None
  5214 ;; Return value:  Size  Location     Type
  5215 ;;		None               void
  5216 ;; Registers used:
  5217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;Total ram usage:        0 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:   11
  5230 ;; This function calls:
  5231 ;;		_PB1pressed
  5232 ;;		_PB2pressed
  5233 ;;		_ReadCharEEPROM
  5234 ;;		_ReadIntEEPROM
  5235 ;;		_SendStatus
  5236 ;;		_SetPIDValues
  5237 ;;		_WriteCharEEPROM
  5238 ;;		_WriteIntEEPROM
  5239 ;; This function is called by:
  5240 ;;		_main
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text33
  5245  000C28                     __ptext33:
  5246                           	opt stack 0
  5247  000C28                     _LoadPIDValues:
  5248                           	opt stack 19
  5249                           
  5250                           ;FastBuggy17_Main_Code_TUNING.c: 609: SendStatus(0x07);
  5251                           
  5252                           ;incstack = 0
  5253  000C28  0E07               	movlw	7
  5254  000C2A  ECF2  F00E         	call	_SendStatus
  5255  000C2E  D000               	goto	l6493
  5256  000C30                     l6493:
  5257                           
  5258                           ;FastBuggy17_Main_Code_TUNING.c: 612: if(PB1pressed() == 1) {
  5259  000C30  EC75  F00D         	call	_PB1pressed	;wreg free
  5260  000C34  06E8               	decf	wreg,f,c
  5261  000C36  A4D8               	btfss	status,2,c
  5262  000C38  D03C               	goto	l6507
  5263                           
  5264                           ;FastBuggy17_Main_Code_TUNING.c: 613: PID_Kp = 20;
  5265  000C3A  0E00               	movlw	0
  5266  000C3C  0100               	movlb	0	; () banked
  5267  000C3E  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5268  000C40  0E14               	movlw	20
  5269  000C42  6F96               	movwf	_PID_Kp& (0+255),b
  5270                           
  5271                           ;FastBuggy17_Main_Code_TUNING.c: 614: PID_Kd = 0;
  5272  000C44  0E00               	movlw	0
  5273  000C46  0100               	movlb	0	; () banked
  5274  000C48  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5275  000C4A  0E00               	movlw	0
  5276  000C4C  6F92               	movwf	_PID_Kd& (0+255),b
  5277                           
  5278                           ;FastBuggy17_Main_Code_TUNING.c: 615: PID_Ki = 0;
  5279  000C4E  0E00               	movlw	0
  5280  000C50  0100               	movlb	0	; () banked
  5281  000C52  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5282  000C54  0E00               	movlw	0
  5283  000C56  6F94               	movwf	_PID_Ki& (0+255),b
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;FastBuggy17_Main_Code_TUNING.c: 616: WriteIntEEPROM(0x0010, PID_Kp);
  5287  000C58  0E00               	movlw	0
  5288  000C5A  0100               	movlb	0	; () banked
  5289  000C5C  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5290  000C5E  0E10               	movlw	16
  5291  000C60  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5292  000C62  C096  F0D3         	movff	_PID_Kp,WriteIntEEPROM@data
  5293  000C66  C097  F0D4         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5294  000C6A  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  5295                           
  5296                           ;FastBuggy17_Main_Code_TUNING.c: 617: WriteIntEEPROM(0x0012, PID_Kd);
  5297  000C6E  0E00               	movlw	0
  5298  000C70  0100               	movlb	0	; () banked
  5299  000C72  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5300  000C74  0E12               	movlw	18
  5301  000C76  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5302  000C78  C092  F0D3         	movff	_PID_Kd,WriteIntEEPROM@data
  5303  000C7C  C093  F0D4         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5304  000C80  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  5305                           
  5306                           ;FastBuggy17_Main_Code_TUNING.c: 618: WriteIntEEPROM(0x0014, PID_Ki);
  5307  000C84  0E00               	movlw	0
  5308  000C86  0100               	movlb	0	; () banked
  5309  000C88  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5310  000C8A  0E14               	movlw	20
  5311  000C8C  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5312  000C8E  C094  F0D3         	movff	_PID_Ki,WriteIntEEPROM@data
  5313  000C92  C095  F0D4         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5314  000C96  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  5315                           
  5316                           ;FastBuggy17_Main_Code_TUNING.c: 620: WriteCharEEPROM(0x000D, 1);
  5317  000C9A  0E00               	movlw	0
  5318  000C9C  0100               	movlb	0	; () banked
  5319  000C9E  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5320  000CA0  0E0D               	movlw	13
  5321  000CA2  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  5322  000CA4  0E01               	movlw	1
  5323  000CA6  0100               	movlb	0	; () banked
  5324  000CA8  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  5325  000CAA  ECC4  F011         	call	_WriteCharEEPROM	;wreg free
  5326                           
  5327                           ;FastBuggy17_Main_Code_TUNING.c: 621: break;
  5328  000CAE  D036               	goto	l943
  5329                           
  5330                           ;FastBuggy17_Main_Code_TUNING.c: 622: }
  5331  000CB0  D7BF               	goto	l6493
  5332  000CB2                     l6507:
  5333                           
  5334                           ;FastBuggy17_Main_Code_TUNING.c: 623: else if(PB2pressed() == 1) {
  5335  000CB2  EC17  F00D         	call	_PB2pressed	;wreg free
  5336  000CB6  06E8               	decf	wreg,f,c
  5337  000CB8  A4D8               	btfss	status,2,c
  5338  000CBA  D7BA               	goto	l6493
  5339                           
  5340                           ;FastBuggy17_Main_Code_TUNING.c: 624: if(ReadCharEEPROM(0x000D) == 0xFF) {
  5341  000CBC  0E00               	movlw	0
  5342  000CBE  0100               	movlb	0	; () banked
  5343  000CC0  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5344  000CC2  0E0D               	movlw	13
  5345  000CC4  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  5346  000CC6  ECFA  F011         	call	_ReadCharEEPROM	;wreg free
  5347  000CCA  0AFF               	xorlw	255
  5348  000CCC  A4D8               	btfss	status,2,c
  5349  000CCE  D003               	goto	l6513
  5350                           
  5351                           ;FastBuggy17_Main_Code_TUNING.c: 625: SetPIDValues();
  5352  000CD0  EC71  F004         	call	_SetPIDValues	;wreg free
  5353                           
  5354                           ;FastBuggy17_Main_Code_TUNING.c: 626: }
  5355  000CD4  D023               	goto	l943
  5356  000CD6                     l6513:
  5357                           
  5358                           ;FastBuggy17_Main_Code_TUNING.c: 627: else {
  5359                           ;FastBuggy17_Main_Code_TUNING.c: 628: PID_Kp = ReadIntEEPROM(0x0010);
  5360  000CD6  0E00               	movlw	0
  5361  000CD8  0100               	movlb	0	; () banked
  5362  000CDA  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5363  000CDC  0E10               	movlw	16
  5364  000CDE  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5365  000CE0  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  5366  000CE4  C0D0  F096         	movff	?_ReadIntEEPROM,_PID_Kp
  5367  000CE8  C0D1  F097         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  5368                           
  5369                           ;FastBuggy17_Main_Code_TUNING.c: 629: PID_Kd = ReadIntEEPROM(0x0012);
  5370  000CEC  0E00               	movlw	0
  5371  000CEE  0100               	movlb	0	; () banked
  5372  000CF0  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5373  000CF2  0E12               	movlw	18
  5374  000CF4  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5375  000CF6  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  5376  000CFA  C0D0  F092         	movff	?_ReadIntEEPROM,_PID_Kd
  5377  000CFE  C0D1  F093         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  5378                           
  5379                           ;FastBuggy17_Main_Code_TUNING.c: 630: PID_Ki = ReadIntEEPROM(0x0014);
  5380  000D02  0E00               	movlw	0
  5381  000D04  0100               	movlb	0	; () banked
  5382  000D06  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5383  000D08  0E14               	movlw	20
  5384  000D0A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5385  000D0C  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  5386  000D10  C0D0  F094         	movff	?_ReadIntEEPROM,_PID_Ki
  5387  000D14  C0D1  F095         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5388                           
  5389                           ;FastBuggy17_Main_Code_TUNING.c: 631: }
  5390                           ;FastBuggy17_Main_Code_TUNING.c: 632: break;
  5391  000D18  D001               	goto	l943
  5392  000D1A  D78A               	goto	l6493
  5393  000D1C                     l943:
  5394  000D1C  0012               	return		;funcret
  5395  000D1E                     __end_of_LoadPIDValues:
  5396                           	opt stack 0
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           postinc0	equ	0xFEE
  5400                           wreg	equ	0xFE8
  5401                           indf2	equ	0xFDF
  5402                           postinc2	equ	0xFDE
  5403                           postdec2	equ	0xFDD
  5404                           fsr2h	equ	0xFDA
  5405                           fsr2l	equ	0xFD9
  5406                           status	equ	0xFD8
  5407                           
  5408 ;; *************** function _SetPIDValues *****************
  5409 ;; Defined at:
  5410 ;;		line 572 in file "FastBuggy17_Main_Code_TUNING.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;		None
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  char_index      1   28[BANK0 ] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;		None               void
  5417 ;; Registers used:
  5418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;Total ram usage:        4 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:   10
  5431 ;; This function calls:
  5432 ;;		_FlushRxBuf
  5433 ;;		_GetCharRxBuf
  5434 ;;		_PutCharRxBuf
  5435 ;;		_Read1USART
  5436 ;;		_SendStatus
  5437 ;;		_WriteCharEEPROM
  5438 ;;		_WriteIntEEPROM
  5439 ;; This function is called by:
  5440 ;;		_LoadPIDValues
  5441 ;;		_main
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text34
  5446  0008E2                     __ptext34:
  5447                           	opt stack 0
  5448  0008E2                     _SetPIDValues:
  5449                           	opt stack 20
  5450                           
  5451                           ;FastBuggy17_Main_Code_TUNING.c: 573: SendStatus(0x08);
  5452                           
  5453                           ;incstack = 0
  5454  0008E2  0E08               	movlw	8
  5455  0008E4  ECF2  F00E         	call	_SendStatus
  5456                           
  5457                           ;FastBuggy17_Main_Code_TUNING.c: 575: unsigned char char_index;
  5458                           ;FastBuggy17_Main_Code_TUNING.c: 577: FlushRxBuf();
  5459  0008E8  EC9A  F00F         	call	_FlushRxBuf	;wreg free
  5460                           
  5461                           ;FastBuggy17_Main_Code_TUNING.c: 579: while((PIR1bits.RCIF) == 0);
  5462  0008EC  D000               	goto	l918
  5463  0008EE                     l918:
  5464  0008EE  AA9E               	btfss	3998,5,c	;volatile
  5465  0008F0  D7FE               	goto	l918
  5466                           
  5467                           ;FastBuggy17_Main_Code_TUNING.c: 581: for(char_index = 0; char_index <= 8; char_index++)
      +                           {
  5468  0008F2  0E00               	movlw	0
  5469  0008F4  0100               	movlb	0	; () banked
  5470  0008F6  6FDA               	movwf	SetPIDValues@char_index& (0+255),b
  5471  0008F8                     l6201:
  5472                           
  5473                           ; BSR set to: 0
  5474  0008F8  0E08               	movlw	8
  5475  0008FA  0100               	movlb	0	; () banked
  5476  0008FC  65DA               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5477  0008FE  D002               	goto	l923
  5478                           
  5479                           ; BSR set to: 0
  5480  000900  D00B               	goto	l6211
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;FastBuggy17_Main_Code_TUNING.c: 582: while(!(PIR1bits.RCIF));
  5484  000902  D000               	goto	l923
  5485  000904                     l923:
  5486  000904  AA9E               	btfss	3998,5,c	;volatile
  5487  000906  D7FE               	goto	l923
  5488                           
  5489                           ;FastBuggy17_Main_Code_TUNING.c: 584: PutCharRxBuf(Read1USART());
  5490  000908  EC97  F010         	call	_Read1USART	;wreg free
  5491  00090C  EC35  F00E         	call	_PutCharRxBuf
  5492  000910  0100               	movlb	0	; () banked
  5493  000912  2BDA               	incf	SetPIDValues@char_index& (0+255),f,b
  5494  000914  D7F1               	goto	l6201
  5495                           
  5496                           ; BSR set to: 0
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;FastBuggy17_Main_Code_TUNING.c: 585: }
  5500                           ;FastBuggy17_Main_Code_TUNING.c: 587: while(GetCharRxBuf() != 0xAA);
  5501                           
  5502                           ; BSR set to: 0
  5503  000916  D000               	goto	l6211
  5504  000918                     l6211:
  5505  000918  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5506  00091C  0AAA               	xorlw	170
  5507  00091E  B4D8               	btfsc	status,2,c
  5508  000920  D002               	goto	l6213
  5509  000922  D7FA               	goto	l6211
  5510                           
  5511                           ;FastBuggy17_Main_Code_TUNING.c: 588: while(GetCharRxBuf() != 0x01);
  5512  000924  D000               	goto	l6213
  5513  000926                     l6213:
  5514  000926  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5515  00092A  06E8               	decf	wreg,f,c
  5516  00092C  A4D8               	btfss	status,2,c
  5517  00092E  D7FB               	goto	l6213
  5518                           
  5519                           ;FastBuggy17_Main_Code_TUNING.c: 590: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5520  000930  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5521  000934  0100               	movlb	0	; () banked
  5522  000936  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5523  000938  0100               	movlb	0	; () banked
  5524  00093A  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5525  00093C  0100               	movlb	0	; () banked
  5526  00093E  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5527  000940  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5528  000942  0E00               	movlw	0
  5529  000944  0100               	movlb	0	; () banked
  5530  000946  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5531  000948  0100               	movlb	0	; () banked
  5532  00094A  6F96               	movwf	_PID_Kp& (0+255),b
  5533  00094C  0EFF               	movlw	255
  5534  00094E  0100               	movlb	0	; () banked
  5535  000950  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5536  000952  0100               	movlb	0	; () banked
  5537  000954  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5538                           
  5539                           ;FastBuggy17_Main_Code_TUNING.c: 591: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5540  000956  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5541  00095A  0100               	movlb	0	; () banked
  5542  00095C  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5543  00095E  0100               	movlb	0	; () banked
  5544  000960  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5545  000962  0100               	movlb	0	; () banked
  5546  000964  1396               	iorwf	_PID_Kp& (0+255),f,b
  5547                           
  5548                           ;FastBuggy17_Main_Code_TUNING.c: 593: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5549  000966  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5550  00096A  0100               	movlb	0	; () banked
  5551  00096C  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5552  00096E  0100               	movlb	0	; () banked
  5553  000970  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5554  000972  0100               	movlb	0	; () banked
  5555  000974  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5556  000976  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5557  000978  0E00               	movlw	0
  5558  00097A  0100               	movlb	0	; () banked
  5559  00097C  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5560  00097E  0100               	movlb	0	; () banked
  5561  000980  6F92               	movwf	_PID_Kd& (0+255),b
  5562  000982  0EFF               	movlw	255
  5563  000984  0100               	movlb	0	; () banked
  5564  000986  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5565  000988  0100               	movlb	0	; () banked
  5566  00098A  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5567                           
  5568                           ;FastBuggy17_Main_Code_TUNING.c: 594: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5569  00098C  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5570  000990  0100               	movlb	0	; () banked
  5571  000992  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5572  000994  0100               	movlb	0	; () banked
  5573  000996  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5574  000998  0100               	movlb	0	; () banked
  5575  00099A  1392               	iorwf	_PID_Kd& (0+255),f,b
  5576                           
  5577                           ;FastBuggy17_Main_Code_TUNING.c: 596: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5578  00099C  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5579  0009A0  0100               	movlb	0	; () banked
  5580  0009A2  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5581  0009A4  0100               	movlb	0	; () banked
  5582  0009A6  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5583  0009A8  0100               	movlb	0	; () banked
  5584  0009AA  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5585  0009AC  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5586  0009AE  0E00               	movlw	0
  5587  0009B0  0100               	movlb	0	; () banked
  5588  0009B2  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5589  0009B4  0100               	movlb	0	; () banked
  5590  0009B6  6F94               	movwf	_PID_Ki& (0+255),b
  5591  0009B8  0EFF               	movlw	255
  5592  0009BA  0100               	movlb	0	; () banked
  5593  0009BC  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5594  0009BE  0100               	movlb	0	; () banked
  5595  0009C0  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5596                           
  5597                           ;FastBuggy17_Main_Code_TUNING.c: 597: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5598  0009C2  ECCE  F00D         	call	_GetCharRxBuf	;wreg free
  5599  0009C6  0100               	movlb	0	; () banked
  5600  0009C8  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5601  0009CA  0100               	movlb	0	; () banked
  5602  0009CC  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5603  0009CE  0100               	movlb	0	; () banked
  5604  0009D0  1394               	iorwf	_PID_Ki& (0+255),f,b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;FastBuggy17_Main_Code_TUNING.c: 599: WriteIntEEPROM(0x0010, PID_Kp);
  5608  0009D2  0E00               	movlw	0
  5609  0009D4  0100               	movlb	0	; () banked
  5610  0009D6  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5611  0009D8  0E10               	movlw	16
  5612  0009DA  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5613  0009DC  C096  F0D3         	movff	_PID_Kp,WriteIntEEPROM@data
  5614  0009E0  C097  F0D4         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5615  0009E4  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  5616                           
  5617                           ;FastBuggy17_Main_Code_TUNING.c: 600: WriteIntEEPROM(0x0012, PID_Kd);
  5618  0009E8  0E00               	movlw	0
  5619  0009EA  0100               	movlb	0	; () banked
  5620  0009EC  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5621  0009EE  0E12               	movlw	18
  5622  0009F0  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5623  0009F2  C092  F0D3         	movff	_PID_Kd,WriteIntEEPROM@data
  5624  0009F6  C093  F0D4         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5625  0009FA  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  5626                           
  5627                           ;FastBuggy17_Main_Code_TUNING.c: 601: WriteIntEEPROM(0x0014, PID_Ki);
  5628  0009FE  0E00               	movlw	0
  5629  000A00  0100               	movlb	0	; () banked
  5630  000A02  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5631  000A04  0E14               	movlw	20
  5632  000A06  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5633  000A08  C094  F0D3         	movff	_PID_Ki,WriteIntEEPROM@data
  5634  000A0C  C095  F0D4         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5635  000A10  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  5636                           
  5637                           ;FastBuggy17_Main_Code_TUNING.c: 603: WriteCharEEPROM(0x000D, 1);
  5638  000A14  0E00               	movlw	0
  5639  000A16  0100               	movlb	0	; () banked
  5640  000A18  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5641  000A1A  0E0D               	movlw	13
  5642  000A1C  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  5643  000A1E  0E01               	movlw	1
  5644  000A20  0100               	movlb	0	; () banked
  5645  000A22  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  5646  000A24  ECC4  F011         	call	_WriteCharEEPROM	;wreg free
  5647  000A28  0012               	return		;funcret
  5648  000A2A                     __end_of_SetPIDValues:
  5649                           	opt stack 0
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _PutCharRxBuf *****************
  5662 ;; Defined at:
  5663 ;;		line 25 in file "Wireless.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  ch              1    wreg     unsigned char 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  ch              1   23[BANK0 ] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;Total ram usage:        2 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    8
  5684 ;; This function calls:
  5685 ;;		___awmod
  5686 ;; This function is called by:
  5687 ;;		_SetPIDValues
  5688 ;;		_WirelessRx_ISR
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text35
  5693  001C6A                     __ptext35:
  5694                           	opt stack 0
  5695  001C6A                     _PutCharRxBuf:
  5696                           	opt stack 21
  5697                           
  5698                           ;incstack = 0
  5699                           ;PutCharRxBuf@ch stored from wreg
  5700  001C6A  0100               	movlb	0	; () banked
  5701  001C6C  6FD5               	movwf	PutCharRxBuf@ch& (0+255),b
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5705  001C6E  501F               	movf	_put_Rx_index,w,c
  5706  001C70  0D01               	mullw	1
  5707  001C72  0E60               	movlw	low _Rx_buffer
  5708  001C74  24F3               	addwf	prodl,w,c
  5709  001C76  6ED9               	movwf	fsr2l,c
  5710  001C78  0E00               	movlw	high _Rx_buffer
  5711  001C7A  20F4               	addwfc	prodh,w,c
  5712  001C7C  6EDA               	movwf	fsr2h,c
  5713  001C7E  C0D5  FFDF         	movff	PutCharRxBuf@ch,indf2
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5717  001C82  C01F  F0D4         	movff	_put_Rx_index,??_PutCharRxBuf
  5718  001C86  0E01               	movlw	1
  5719  001C88  0100               	movlb	0	; () banked
  5720  001C8A  27D4               	addwf	??_PutCharRxBuf& (0+255),f,b
  5721  001C8C  0100               	movlb	0	; () banked
  5722  001C8E  51D4               	movf	??_PutCharRxBuf& (0+255),w,b
  5723  001C90  0100               	movlb	0	; () banked
  5724  001C92  6FCE               	movwf	___awmod@dividend& (0+255),b
  5725  001C94  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  5726  001C96  0E00               	movlw	0
  5727  001C98  0100               	movlb	0	; () banked
  5728  001C9A  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  5729  001C9C  0E19               	movlw	25
  5730  001C9E  6FD0               	movwf	___awmod@divisor& (0+255),b
  5731  001CA0  EC41  F008         	call	___awmod	;wreg free
  5732  001CA4  0100               	movlb	0	; () banked
  5733  001CA6  51CE               	movf	?___awmod& (0+255),w,b
  5734  001CA8  6E1F               	movwf	_put_Rx_index,c
  5735                           
  5736                           ; BSR set to: 0
  5737  001CAA  0012               	return		;funcret
  5738  001CAC                     __end_of_PutCharRxBuf:
  5739                           	opt stack 0
  5740                           prodh	equ	0xFF4
  5741                           prodl	equ	0xFF3
  5742                           postinc0	equ	0xFEE
  5743                           wreg	equ	0xFE8
  5744                           indf2	equ	0xFDF
  5745                           postinc2	equ	0xFDE
  5746                           postdec2	equ	0xFDD
  5747                           fsr2h	equ	0xFDA
  5748                           fsr2l	equ	0xFD9
  5749                           status	equ	0xFD8
  5750                           
  5751 ;; *************** function _GetCharRxBuf *****************
  5752 ;; Defined at:
  5753 ;;		line 31 in file "Wireless.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  ch              1   23[BANK0 ] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      unsigned char 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;Total ram usage:        2 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    8
  5774 ;; This function calls:
  5775 ;;		___awmod
  5776 ;; This function is called by:
  5777 ;;		_SetPIDValues
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text36
  5782  001B9C                     __ptext36:
  5783                           	opt stack 0
  5784  001B9C                     _GetCharRxBuf:
  5785                           	opt stack 21
  5786                           
  5787                           ;Wireless.c: 32: unsigned char ch;
  5788                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;incstack = 0
  5792  001B9C  501D               	movf	_get_Rx_index,w,c
  5793  001B9E  0D01               	mullw	1
  5794  001BA0  0E60               	movlw	low _Rx_buffer
  5795  001BA2  24F3               	addwf	prodl,w,c
  5796  001BA4  6ED9               	movwf	fsr2l,c
  5797  001BA6  0E00               	movlw	high _Rx_buffer
  5798  001BA8  20F4               	addwfc	prodh,w,c
  5799  001BAA  6EDA               	movwf	fsr2h,c
  5800  001BAC  50DF               	movf	indf2,w,c
  5801  001BAE  0100               	movlb	0	; () banked
  5802  001BB0  6FD5               	movwf	GetCharRxBuf@ch& (0+255),b
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5806  001BB2  C01D  F0D4         	movff	_get_Rx_index,??_GetCharRxBuf
  5807  001BB6  0E01               	movlw	1
  5808  001BB8  0100               	movlb	0	; () banked
  5809  001BBA  27D4               	addwf	??_GetCharRxBuf& (0+255),f,b
  5810  001BBC  0100               	movlb	0	; () banked
  5811  001BBE  51D4               	movf	??_GetCharRxBuf& (0+255),w,b
  5812  001BC0  0100               	movlb	0	; () banked
  5813  001BC2  6FCE               	movwf	___awmod@dividend& (0+255),b
  5814  001BC4  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  5815  001BC6  0E00               	movlw	0
  5816  001BC8  0100               	movlb	0	; () banked
  5817  001BCA  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  5818  001BCC  0E19               	movlw	25
  5819  001BCE  6FD0               	movwf	___awmod@divisor& (0+255),b
  5820  001BD0  EC41  F008         	call	___awmod	;wreg free
  5821  001BD4  0100               	movlb	0	; () banked
  5822  001BD6  51CE               	movf	?___awmod& (0+255),w,b
  5823  001BD8  6E1D               	movwf	_get_Rx_index,c
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;Wireless.c: 37: return(ch);
  5827  001BDA  0100               	movlb	0	; () banked
  5828  001BDC  51D5               	movf	GetCharRxBuf@ch& (0+255),w,b
  5829  001BDE  D000               	goto	l286
  5830  001BE0                     l286:
  5831                           
  5832                           ; BSR set to: 0
  5833  001BE0  0012               	return		;funcret
  5834  001BE2                     __end_of_GetCharRxBuf:
  5835                           	opt stack 0
  5836                           prodh	equ	0xFF4
  5837                           prodl	equ	0xFF3
  5838                           postinc0	equ	0xFEE
  5839                           wreg	equ	0xFE8
  5840                           indf2	equ	0xFDF
  5841                           postinc2	equ	0xFDE
  5842                           postdec2	equ	0xFDD
  5843                           fsr2h	equ	0xFDA
  5844                           fsr2l	equ	0xFD9
  5845                           status	equ	0xFD8
  5846                           
  5847 ;; *************** function _PB2pressed *****************
  5848 ;; Defined at:
  5849 ;;		line 434 in file "FastBuggy17_Main_Code_TUNING.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      unsigned char 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    9
  5870 ;; This function calls:
  5871 ;;		_CommandAvailable
  5872 ;;		_GetCommand
  5873 ;;		_ReadMillis2
  5874 ;;		_ResetMillis2
  5875 ;; This function is called by:
  5876 ;;		_LoadPIDValues
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text37
  5882  001A2E                     __ptext37:
  5883                           	opt stack 0
  5884  001A2E                     _PB2pressed:
  5885                           	opt stack 21
  5886                           
  5887                           ;FastBuggy17_Main_Code_TUNING.c: 435: if(CommandAvailable() == 1) {
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;incstack = 0
  5891  001A2E  EC3F  F012         	call	_CommandAvailable	;wreg free
  5892  001A32  06E8               	decf	wreg,f,c
  5893  001A34  A4D8               	btfss	status,2,c
  5894  001A36  D00B               	goto	l858
  5895                           
  5896                           ;FastBuggy17_Main_Code_TUNING.c: 436: if(GetCommand() == 0x06) {
  5897  001A38  EC79  F012         	call	_GetCommand	;wreg free
  5898  001A3C  0A06               	xorlw	6
  5899  001A3E  A4D8               	btfss	status,2,c
  5900  001A40  D01F               	goto	l6161
  5901  001A42  D01B               	goto	l6155
  5902                           
  5903                           ;FastBuggy17_Main_Code_TUNING.c: 437: return(1);
  5904  001A44  D022               	goto	l860
  5905                           
  5906                           ;FastBuggy17_Main_Code_TUNING.c: 438: }
  5907  001A46  D01F               	goto	l6165
  5908  001A48  D01B               	goto	l6161
  5909                           
  5910                           ;FastBuggy17_Main_Code_TUNING.c: 439: else {
  5911                           ;FastBuggy17_Main_Code_TUNING.c: 440: return(0);
  5912  001A4A  D01F               	goto	l860
  5913                           
  5914                           ;FastBuggy17_Main_Code_TUNING.c: 441: }
  5915                           ;FastBuggy17_Main_Code_TUNING.c: 442: }
  5916  001A4C  D01C               	goto	l6165
  5917  001A4E                     l858:
  5918                           
  5919                           ;FastBuggy17_Main_Code_TUNING.c: 443: else if(PORTBbits.RB2 == 0) {
  5920  001A4E  B481               	btfsc	3969,2,c	;volatile
  5921  001A50  D003               	goto	l863
  5922  001A52  D016               	goto	l6161
  5923                           
  5924                           ;FastBuggy17_Main_Code_TUNING.c: 444: return(0);
  5925  001A54  D01A               	goto	l860
  5926                           
  5927                           ;FastBuggy17_Main_Code_TUNING.c: 445: }
  5928  001A56  D017               	goto	l6165
  5929  001A58                     l863:
  5930                           
  5931                           ;FastBuggy17_Main_Code_TUNING.c: 446: else if(PORTBbits.RB2 == 1) {
  5932  001A58  A481               	btfss	3969,2,c	;volatile
  5933  001A5A  D015               	goto	l6165
  5934                           
  5935                           ;FastBuggy17_Main_Code_TUNING.c: 447: ResetMillis2();
  5936  001A5C  EC6B  F012         	call	_ResetMillis2	;wreg free
  5937                           
  5938                           ;FastBuggy17_Main_Code_TUNING.c: 448: while(ReadMillis2() < 10);
  5939  001A60  D000               	goto	l6153
  5940  001A62                     l6153:
  5941  001A62  EC70  F012         	call	_ReadMillis2	;wreg free
  5942  001A66  0100               	movlb	0	; () banked
  5943  001A68  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  5944  001A6A  E105               	bnz	u5290
  5945  001A6C  0E0A               	movlw	10
  5946  001A6E  0100               	movlb	0	; () banked
  5947  001A70  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  5948  001A72  A0D8               	btfss	status,0,c
  5949  001A74  D7F6               	goto	l6153
  5950  001A76                     u5290:
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;FastBuggy17_Main_Code_TUNING.c: 449: if(PORTBbits.RB2 == 1) {
  5954  001A76  A481               	btfss	3969,2,c	;volatile
  5955  001A78  D003               	goto	l6161
  5956  001A7A                     l6155:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;FastBuggy17_Main_Code_TUNING.c: 450: return(1);
  5960  001A7A  0E01               	movlw	1
  5961                           
  5962                           ; BSR set to: 0
  5963  001A7C  D006               	goto	l860
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;FastBuggy17_Main_Code_TUNING.c: 451: }
  5967  001A7E  D003               	goto	l6165
  5968  001A80                     l6161:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;FastBuggy17_Main_Code_TUNING.c: 452: else {
  5972                           ;FastBuggy17_Main_Code_TUNING.c: 453: return(0);
  5973  001A80  0E00               	movlw	0
  5974                           
  5975                           ; BSR set to: 0
  5976  001A82  D003               	goto	l860
  5977                           
  5978                           ; BSR set to: 0
  5979                           
  5980                           ; BSR set to: 0
  5981                           
  5982                           ; BSR set to: 0
  5983  001A84  D000               	goto	l6165
  5984  001A86                     l6165:
  5985                           
  5986                           ;FastBuggy17_Main_Code_TUNING.c: 454: }
  5987                           ;FastBuggy17_Main_Code_TUNING.c: 455: }
  5988                           ;FastBuggy17_Main_Code_TUNING.c: 457: return(0);
  5989  001A86  0E00               	movlw	0
  5990  001A88  D000               	goto	l860
  5991  001A8A                     l860:
  5992  001A8A  0012               	return		;funcret
  5993  001A8C                     __end_of_PB2pressed:
  5994                           	opt stack 0
  5995                           prodh	equ	0xFF4
  5996                           prodl	equ	0xFF3
  5997                           postinc0	equ	0xFEE
  5998                           wreg	equ	0xFE8
  5999                           indf2	equ	0xFDF
  6000                           postinc2	equ	0xFDE
  6001                           postdec2	equ	0xFDD
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006 ;; *************** function _LoadCalibration *****************
  6007 ;; Defined at:
  6008 ;;		line 552 in file "FastBuggy17_Main_Code_TUNING.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;		None
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  index           1   35[BANK0 ] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;		None               void
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;Total ram usage:        3 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:   12
  6029 ;; This function calls:
  6030 ;;		_GenerateCalibration
  6031 ;;		_ReadCharEEPROM
  6032 ;;		_ReadIntEEPROM
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text38
  6039  000FC6                     __ptext38:
  6040                           	opt stack 0
  6041  000FC6                     _LoadCalibration:
  6042                           	opt stack 18
  6043                           
  6044                           ;FastBuggy17_Main_Code_TUNING.c: 553: unsigned char index;
  6045                           ;FastBuggy17_Main_Code_TUNING.c: 555: if(ReadCharEEPROM(0x0000) == 0xFF) {
  6046                           
  6047                           ;incstack = 0
  6048  000FC6  0E00               	movlw	0
  6049  000FC8  0100               	movlb	0	; () banked
  6050  000FCA  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6051  000FCC  0E00               	movlw	0
  6052  000FCE  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  6053  000FD0  ECFA  F011         	call	_ReadCharEEPROM	;wreg free
  6054  000FD4  0AFF               	xorlw	255
  6055  000FD6  A4D8               	btfss	status,2,c
  6056  000FD8  D003               	goto	l6475
  6057                           
  6058                           ;FastBuggy17_Main_Code_TUNING.c: 556: GenerateCalibration();
  6059  000FDA  EC9B  F008         	call	_GenerateCalibration	;wreg free
  6060                           
  6061                           ;FastBuggy17_Main_Code_TUNING.c: 557: }
  6062  000FDE  D050               	goto	l915
  6063  000FE0                     l6475:
  6064                           
  6065                           ;FastBuggy17_Main_Code_TUNING.c: 559: else if(ReadCharEEPROM(0x0000) == 1) {
  6066  000FE0  0E00               	movlw	0
  6067  000FE2  0100               	movlb	0	; () banked
  6068  000FE4  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6069  000FE6  0E00               	movlw	0
  6070  000FE8  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  6071  000FEA  ECFA  F011         	call	_ReadCharEEPROM	;wreg free
  6072  000FEE  06E8               	decf	wreg,f,c
  6073  000FF0  A4D8               	btfss	status,2,c
  6074  000FF2  D046               	goto	l915
  6075                           
  6076                           ;FastBuggy17_Main_Code_TUNING.c: 560: for(index = 0; index < 5; index++) {
  6077  000FF4  0E00               	movlw	0
  6078  000FF6  0100               	movlb	0	; () banked
  6079  000FF8  6FE1               	movwf	LoadCalibration@index& (0+255),b
  6080  000FFA                     l6479:
  6081                           
  6082                           ; BSR set to: 0
  6083  000FFA  0E04               	movlw	4
  6084  000FFC  0100               	movlb	0	; () banked
  6085  000FFE  65E1               	cpfsgt	LoadCalibration@index& (0+255),b
  6086  001000  D001               	goto	l6483
  6087                           
  6088                           ; BSR set to: 0
  6089  001002  D027               	goto	l6489
  6090  001004                     l6483:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;FastBuggy17_Main_Code_TUNING.c: 561: sensor_offsets[index] = ReadIntEEPROM(0x0003 + (2 
      +                          * index));
  6094  001004  0100               	movlb	0	; () banked
  6095  001006  51E1               	movf	LoadCalibration@index& (0+255),w,b
  6096  001008  0100               	movlb	0	; () banked
  6097  00100A  6FDF               	movwf	??_LoadCalibration& (0+255),b
  6098  00100C  6BE0               	clrf	(??_LoadCalibration+1)& (0+255),b
  6099  00100E  90D8               	bcf	status,0,c
  6100  001010  0100               	movlb	0	; () banked
  6101  001012  37DF               	rlcf	??_LoadCalibration& (0+255),f,b
  6102  001014  37E0               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  6103  001016  0E03               	movlw	3
  6104  001018  0100               	movlb	0	; () banked
  6105  00101A  25DF               	addwf	??_LoadCalibration& (0+255),w,b
  6106  00101C  0100               	movlb	0	; () banked
  6107  00101E  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6108  001020  0E00               	movlw	0
  6109  001022  0100               	movlb	0	; () banked
  6110  001024  21E0               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  6111  001026  0100               	movlb	0	; () banked
  6112  001028  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6113  00102A  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  6114  00102E  0100               	movlb	0	; () banked
  6115  001030  51E1               	movf	LoadCalibration@index& (0+255),w,b
  6116  001032  0D02               	mullw	2
  6117  001034  0E9A               	movlw	low _sensor_offsets
  6118  001036  24F3               	addwf	prodl,w,c
  6119  001038  6ED9               	movwf	fsr2l,c
  6120  00103A  0E00               	movlw	high _sensor_offsets
  6121  00103C  20F4               	addwfc	prodh,w,c
  6122  00103E  6EDA               	movwf	fsr2h,c
  6123  001040  0100               	movlb	0	; () banked
  6124  001042  C0D0  FFDE         	movff	?_ReadIntEEPROM,postinc2
  6125  001046  0100               	movlb	0	; () banked
  6126  001048  C0D1  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  6127                           
  6128                           ; BSR set to: 0
  6129  00104C  0100               	movlb	0	; () banked
  6130  00104E  2BE1               	incf	LoadCalibration@index& (0+255),f,b
  6131  001050  D7D4               	goto	l6479
  6132  001052                     l6489:
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;FastBuggy17_Main_Code_TUNING.c: 562: }
  6136                           ;FastBuggy17_Main_Code_TUNING.c: 564: PID_set_point = ReadIntEEPROM(0x000E);
  6137  001052  0E00               	movlw	0
  6138  001054  0100               	movlb	0	; () banked
  6139  001056  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6140  001058  0E0E               	movlw	14
  6141  00105A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6142  00105C  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  6143  001060  C0D0  F0BA         	movff	?_ReadIntEEPROM,_PID_set_point
  6144  001064  C0D1  F0BB         	movff	?_ReadIntEEPROM+1,_PID_set_point+1
  6145                           
  6146                           ;FastBuggy17_Main_Code_TUNING.c: 566: sensor_threshold = ReadIntEEPROM(0x0001);
  6147  001068  0E00               	movlw	0
  6148  00106A  0100               	movlb	0	; () banked
  6149  00106C  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6150  00106E  0E01               	movlw	1
  6151  001070  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6152  001072  EC46  F00D         	call	_ReadIntEEPROM	;wreg free
  6153  001076  C0D0  F0BC         	movff	?_ReadIntEEPROM,_sensor_threshold
  6154  00107A  C0D1  F0BD         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  6155  00107E  D000               	goto	l915
  6156  001080                     l915:
  6157  001080  0012               	return		;funcret
  6158  001082                     __end_of_LoadCalibration:
  6159                           	opt stack 0
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           indf2	equ	0xFDF
  6165                           postinc2	equ	0xFDE
  6166                           postdec2	equ	0xFDD
  6167                           fsr2h	equ	0xFDA
  6168                           fsr2l	equ	0xFD9
  6169                           status	equ	0xFD8
  6170                           
  6171 ;; *************** function _ReadIntEEPROM *****************
  6172 ;; Defined at:
  6173 ;;		line 84 in file "eeprom.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  address         2   18[BANK0 ] unsigned int 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  data            2   23[BANK0 ] unsigned int 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  2   18[BANK0 ] unsigned int 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        7 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    8
  6194 ;; This function calls:
  6195 ;;		_ReadEEPROM
  6196 ;; This function is called by:
  6197 ;;		_LoadCalibration
  6198 ;;		_LoadPIDValues
  6199 ;;		_main
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text39
  6204  001A8C                     __ptext39:
  6205                           	opt stack 0
  6206  001A8C                     _ReadIntEEPROM:
  6207                           	opt stack 22
  6208                           
  6209                           ;eeprom.c: 85: unsigned int data;
  6210                           ;eeprom.c: 87: data = (ReadEEPROM(address) << 8) & 0xFF00;
  6211                           
  6212                           ;incstack = 0
  6213  001A8C  C0D0  F0CE         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  6214  001A90  C0D1  F0CF         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  6215  001A94  EC45  F010         	call	_ReadEEPROM	;wreg free
  6216  001A98  0100               	movlb	0	; () banked
  6217  001A9A  6FD2               	movwf	??_ReadIntEEPROM& (0+255),b
  6218  001A9C  0100               	movlb	0	; () banked
  6219  001A9E  51D2               	movf	??_ReadIntEEPROM& (0+255),w,b
  6220  001AA0  0100               	movlb	0	; () banked
  6221  001AA2  6FD4               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  6222  001AA4  6BD3               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  6223  001AA6  0E00               	movlw	0
  6224  001AA8  0100               	movlb	0	; () banked
  6225  001AAA  15D3               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  6226  001AAC  0100               	movlb	0	; () banked
  6227  001AAE  6FD5               	movwf	ReadIntEEPROM@data& (0+255),b
  6228  001AB0  0EFF               	movlw	255
  6229  001AB2  0100               	movlb	0	; () banked
  6230  001AB4  15D4               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  6231  001AB6  0100               	movlb	0	; () banked
  6232  001AB8  6FD6               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  6233                           
  6234                           ;eeprom.c: 88: data |= ReadEEPROM(address + 1) & 0x00FF;
  6235  001ABA  0E01               	movlw	1
  6236  001ABC  0100               	movlb	0	; () banked
  6237  001ABE  25D0               	addwf	ReadIntEEPROM@address& (0+255),w,b
  6238  001AC0  0100               	movlb	0	; () banked
  6239  001AC2  6FCE               	movwf	ReadEEPROM@address& (0+255),b
  6240  001AC4  0E00               	movlw	0
  6241  001AC6  0100               	movlb	0	; () banked
  6242  001AC8  21D1               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  6243  001ACA  0100               	movlb	0	; () banked
  6244  001ACC  6FCF               	movwf	(ReadEEPROM@address+1)& (0+255),b
  6245  001ACE  EC45  F010         	call	_ReadEEPROM	;wreg free
  6246  001AD2  0100               	movlb	0	; () banked
  6247  001AD4  6FD2               	movwf	??_ReadIntEEPROM& (0+255),b
  6248  001AD6  0100               	movlb	0	; () banked
  6249  001AD8  51D2               	movf	??_ReadIntEEPROM& (0+255),w,b
  6250  001ADA  0100               	movlb	0	; () banked
  6251  001ADC  13D5               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;eeprom.c: 90: return(data);
  6255  001ADE  C0D5  F0D0         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  6256  001AE2  C0D6  F0D1         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  6257  001AE6  D000               	goto	l237
  6258  001AE8                     l237:
  6259                           
  6260                           ; BSR set to: 0
  6261  001AE8  0012               	return		;funcret
  6262  001AEA                     __end_of_ReadIntEEPROM:
  6263                           	opt stack 0
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           postinc0	equ	0xFEE
  6267                           wreg	equ	0xFE8
  6268                           indf2	equ	0xFDF
  6269                           postinc2	equ	0xFDE
  6270                           postdec2	equ	0xFDD
  6271                           fsr2h	equ	0xFDA
  6272                           fsr2l	equ	0xFD9
  6273                           status	equ	0xFD8
  6274                           
  6275 ;; *************** function _ReadCharEEPROM *****************
  6276 ;; Defined at:
  6277 ;;		line 94 in file "eeprom.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  address         2   18[BANK0 ] unsigned int 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      unsigned char 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;Total ram usage:        2 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    8
  6298 ;; This function calls:
  6299 ;;		_ReadEEPROM
  6300 ;; This function is called by:
  6301 ;;		_LoadCalibration
  6302 ;;		_LoadPIDValues
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text40
  6307  0023F4                     __ptext40:
  6308                           	opt stack 0
  6309  0023F4                     _ReadCharEEPROM:
  6310                           	opt stack 21
  6311                           
  6312                           ;eeprom.c: 95: return(ReadEEPROM(address));
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  0023F4  C0D0  F0CE         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6317  0023F8  C0D1  F0CF         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6318  0023FC  EC45  F010         	call	_ReadEEPROM	;wreg free
  6319  002400  D000               	goto	l240
  6320  002402                     l240:
  6321  002402  0012               	return		;funcret
  6322  002404                     __end_of_ReadCharEEPROM:
  6323                           	opt stack 0
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           postinc0	equ	0xFEE
  6327                           wreg	equ	0xFE8
  6328                           indf2	equ	0xFDF
  6329                           postinc2	equ	0xFDE
  6330                           postdec2	equ	0xFDD
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _ReadEEPROM *****************
  6336 ;; Defined at:
  6337 ;;		line 37 in file "eeprom.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  address         2   16[BANK0 ] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      unsigned char 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;Total ram usage:        2 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    7
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_ReadIntEEPROM
  6362 ;;		_ReadCharEEPROM
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text41
  6367  00208A                     __ptext41:
  6368                           	opt stack 0
  6369  00208A                     _ReadEEPROM:
  6370                           	opt stack 22
  6371                           
  6372                           ;eeprom.c: 38: if(address > 0x03FF) {
  6373                           
  6374                           ;incstack = 0
  6375  00208A  0E04               	movlw	4
  6376  00208C  0100               	movlb	0	; () banked
  6377  00208E  5DCF               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6378  002090  A0D8               	btfss	status,0,c
  6379  002092  D002               	goto	l223
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;eeprom.c: 39: return(0);
  6383  002094  0E00               	movlw	0
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;eeprom.c: 40: }
  6387                           
  6388                           ; BSR set to: 0
  6389  002096  D00E               	goto	l224
  6390  002098                     l223:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;eeprom.c: 41: else {
  6394                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6395  002098  C0CE  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6399  00209C  0100               	movlb	0	; () banked
  6400  00209E  51CF               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6401  0020A0  0B03               	andlw	3
  6402  0020A2  6EAA               	movwf	4010,c	;volatile
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6406  0020A4  9EA6               	bcf	4006,7,c	;volatile
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6410  0020A6  9CA6               	bcf	4006,6,c	;volatile
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6414  0020A8  80A6               	bsf	4006,0,c	;volatile
  6415                           
  6416                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6417  0020AA  D000               	goto	l226
  6418  0020AC                     l226:
  6419  0020AC  B0A6               	btfsc	4006,0,c	;volatile
  6420  0020AE  D7FE               	goto	l226
  6421                           
  6422                           ;eeprom.c: 50: return(EEDATA);
  6423  0020B0  50A8               	movf	4008,w,c	;volatile
  6424  0020B2  D000               	goto	l224
  6425  0020B4                     l224:
  6426  0020B4  0012               	return		;funcret
  6427  0020B6                     __end_of_ReadEEPROM:
  6428                           	opt stack 0
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           postinc0	equ	0xFEE
  6432                           wreg	equ	0xFE8
  6433                           indf2	equ	0xFDF
  6434                           postinc2	equ	0xFDE
  6435                           postdec2	equ	0xFDD
  6436                           fsr2h	equ	0xFDA
  6437                           fsr2l	equ	0xFD9
  6438                           status	equ	0xFD8
  6439                           
  6440 ;; *************** function _GenerateCalibration *****************
  6441 ;; Defined at:
  6442 ;;		line 527 in file "FastBuggy17_Main_Code_TUNING.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  index           1   32[BANK0 ] unsigned char 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;		None               void
  6449 ;; Registers used:
  6450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;Total ram usage:        3 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:   11
  6463 ;; This function calls:
  6464 ;;		_CalibrateOffsets
  6465 ;;		_CalibrateOnLine
  6466 ;;		_CalibrateThreshold
  6467 ;;		_FlashLEDS
  6468 ;;		_WriteCharEEPROM
  6469 ;;		_WriteIntEEPROM
  6470 ;; This function is called by:
  6471 ;;		_LoadCalibration
  6472 ;;		_main
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text42
  6477  001136                     __ptext42:
  6478                           	opt stack 0
  6479  001136                     _GenerateCalibration:
  6480                           	opt stack 18
  6481                           
  6482                           ;FastBuggy17_Main_Code_TUNING.c: 528: unsigned char index;
  6483                           ;FastBuggy17_Main_Code_TUNING.c: 530: CalibrateOffsets();
  6484                           
  6485                           ;incstack = 0
  6486  001136  ECEA  F009         	call	_CalibrateOffsets	;wreg free
  6487                           
  6488                           ;FastBuggy17_Main_Code_TUNING.c: 532: for(index = 0; index < 5; index++) {
  6489  00113A  0E00               	movlw	0
  6490  00113C  0100               	movlb	0	; () banked
  6491  00113E  6FDE               	movwf	GenerateCalibration@index& (0+255),b
  6492  001140                     l6173:
  6493                           
  6494                           ; BSR set to: 0
  6495  001140  0E04               	movlw	4
  6496  001142  0100               	movlb	0	; () banked
  6497  001144  65DE               	cpfsgt	GenerateCalibration@index& (0+255),b
  6498  001146  D001               	goto	l6177
  6499                           
  6500                           ; BSR set to: 0
  6501  001148  D025               	goto	l6183
  6502  00114A                     l6177:
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;FastBuggy17_Main_Code_TUNING.c: 533: WriteIntEEPROM(0x0003 + (2* index), sensor_offsets
      +                          [index]);
  6506  00114A  0100               	movlb	0	; () banked
  6507  00114C  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6508  00114E  0100               	movlb	0	; () banked
  6509  001150  6FDC               	movwf	??_GenerateCalibration& (0+255),b
  6510  001152  6BDD               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6511  001154  90D8               	bcf	status,0,c
  6512  001156  0100               	movlb	0	; () banked
  6513  001158  37DC               	rlcf	??_GenerateCalibration& (0+255),f,b
  6514  00115A  37DD               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6515  00115C  0E03               	movlw	3
  6516  00115E  0100               	movlb	0	; () banked
  6517  001160  25DC               	addwf	??_GenerateCalibration& (0+255),w,b
  6518  001162  0100               	movlb	0	; () banked
  6519  001164  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6520  001166  0E00               	movlw	0
  6521  001168  0100               	movlb	0	; () banked
  6522  00116A  21DD               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6523  00116C  0100               	movlb	0	; () banked
  6524  00116E  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6525  001170  0100               	movlb	0	; () banked
  6526  001172  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6527  001174  0D02               	mullw	2
  6528  001176  0E9A               	movlw	low _sensor_offsets
  6529  001178  24F3               	addwf	prodl,w,c
  6530  00117A  6ED9               	movwf	fsr2l,c
  6531  00117C  0E00               	movlw	high _sensor_offsets
  6532  00117E  20F4               	addwfc	prodh,w,c
  6533  001180  6EDA               	movwf	fsr2h,c
  6534  001182  CFDE F0D3          	movff	postinc2,WriteIntEEPROM@data
  6535  001186  CFDD F0D4          	movff	postdec2,WriteIntEEPROM@data+1
  6536  00118A  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  6537  00118E  0100               	movlb	0	; () banked
  6538  001190  2BDE               	incf	GenerateCalibration@index& (0+255),f,b
  6539  001192  D7D6               	goto	l6173
  6540  001194                     l6183:
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;FastBuggy17_Main_Code_TUNING.c: 534: }
  6544                           ;FastBuggy17_Main_Code_TUNING.c: 536: FlashLEDS();
  6545  001194  EC5B  F010         	call	_FlashLEDS	;wreg free
  6546                           
  6547                           ;FastBuggy17_Main_Code_TUNING.c: 538: CalibrateOnLine();
  6548  001198  ECE5  F00C         	call	_CalibrateOnLine	;wreg free
  6549                           
  6550                           ;FastBuggy17_Main_Code_TUNING.c: 540: WriteIntEEPROM(0x000E, PID_set_point);
  6551  00119C  0E00               	movlw	0
  6552  00119E  0100               	movlb	0	; () banked
  6553  0011A0  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6554  0011A2  0E0E               	movlw	14
  6555  0011A4  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6556  0011A6  C0BA  F0D3         	movff	_PID_set_point,WriteIntEEPROM@data
  6557  0011AA  C0BB  F0D4         	movff	_PID_set_point+1,WriteIntEEPROM@data+1
  6558  0011AE  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  6559                           
  6560                           ;FastBuggy17_Main_Code_TUNING.c: 542: FlashLEDS();
  6561  0011B2  EC5B  F010         	call	_FlashLEDS	;wreg free
  6562                           
  6563                           ;FastBuggy17_Main_Code_TUNING.c: 544: CalibrateThreshold();
  6564  0011B6  EC47  F009         	call	_CalibrateThreshold	;wreg free
  6565                           
  6566                           ;FastBuggy17_Main_Code_TUNING.c: 546: WriteIntEEPROM(0x0001, sensor_threshold);
  6567  0011BA  0E00               	movlw	0
  6568  0011BC  0100               	movlb	0	; () banked
  6569  0011BE  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6570  0011C0  0E01               	movlw	1
  6571  0011C2  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6572  0011C4  C0BC  F0D3         	movff	_sensor_threshold,WriteIntEEPROM@data
  6573  0011C8  C0BD  F0D4         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6574  0011CC  ECCF  F00F         	call	_WriteIntEEPROM	;wreg free
  6575                           
  6576                           ;FastBuggy17_Main_Code_TUNING.c: 547: WriteCharEEPROM(0x0000, 1);
  6577  0011D0  0E00               	movlw	0
  6578  0011D2  0100               	movlb	0	; () banked
  6579  0011D4  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6580  0011D6  0E00               	movlw	0
  6581  0011D8  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  6582  0011DA  0E01               	movlw	1
  6583  0011DC  0100               	movlb	0	; () banked
  6584  0011DE  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  6585  0011E0  ECC4  F011         	call	_WriteCharEEPROM	;wreg free
  6586  0011E4  0012               	return		;funcret
  6587  0011E6                     __end_of_GenerateCalibration:
  6588                           	opt stack 0
  6589                           prodh	equ	0xFF4
  6590                           prodl	equ	0xFF3
  6591                           postinc0	equ	0xFEE
  6592                           wreg	equ	0xFE8
  6593                           indf2	equ	0xFDF
  6594                           postinc2	equ	0xFDE
  6595                           postdec2	equ	0xFDD
  6596                           fsr2h	equ	0xFDA
  6597                           fsr2l	equ	0xFD9
  6598                           status	equ	0xFD8
  6599                           
  6600 ;; *************** function _WriteIntEEPROM *****************
  6601 ;; Defined at:
  6602 ;;		line 63 in file "eeprom.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  address         2   19[BANK0 ] unsigned int 
  6605 ;;  data            2   21[BANK0 ] unsigned int 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;		None               void
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6617 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;Total ram usage:        4 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    8
  6624 ;; This function calls:
  6625 ;;		_WriteEEPROM
  6626 ;; This function is called by:
  6627 ;;		_GenerateCalibration
  6628 ;;		_SetPIDValues
  6629 ;;		_LoadPIDValues
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text43
  6634  001F9E                     __ptext43:
  6635                           	opt stack 0
  6636  001F9E                     _WriteIntEEPROM:
  6637                           	opt stack 21
  6638                           
  6639                           ;eeprom.c: 64: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6640                           
  6641                           ;incstack = 0
  6642  001F9E  C0D1  F0CE         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6643  001FA2  C0D2  F0CF         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6644  001FA6  0100               	movlb	0	; () banked
  6645  001FA8  51D4               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6646  001FAA  0100               	movlb	0	; () banked
  6647  001FAC  6FD0               	movwf	WriteEEPROM@data& (0+255),b
  6648  001FAE  EC77  F00E         	call	_WriteEEPROM	;wreg free
  6649                           
  6650                           ;eeprom.c: 65: WriteEEPROM(address + 1, (data & 0x00FF));
  6651  001FB2  0E01               	movlw	1
  6652  001FB4  0100               	movlb	0	; () banked
  6653  001FB6  25D1               	addwf	WriteIntEEPROM@address& (0+255),w,b
  6654  001FB8  0100               	movlb	0	; () banked
  6655  001FBA  6FCE               	movwf	WriteEEPROM@address& (0+255),b
  6656  001FBC  0E00               	movlw	0
  6657  001FBE  0100               	movlb	0	; () banked
  6658  001FC0  21D2               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  6659  001FC2  0100               	movlb	0	; () banked
  6660  001FC4  6FCF               	movwf	(WriteEEPROM@address+1)& (0+255),b
  6661  001FC6  C0D3  F0D0         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  6662  001FCA  EC77  F00E         	call	_WriteEEPROM	;wreg free
  6663  001FCE  0012               	return		;funcret
  6664  001FD0                     __end_of_WriteIntEEPROM:
  6665                           	opt stack 0
  6666                           prodh	equ	0xFF4
  6667                           prodl	equ	0xFF3
  6668                           postinc0	equ	0xFEE
  6669                           wreg	equ	0xFE8
  6670                           indf2	equ	0xFDF
  6671                           postinc2	equ	0xFDE
  6672                           postdec2	equ	0xFDD
  6673                           fsr2h	equ	0xFDA
  6674                           fsr2l	equ	0xFD9
  6675                           status	equ	0xFD8
  6676                           
  6677 ;; *************** function _WriteCharEEPROM *****************
  6678 ;; Defined at:
  6679 ;;		line 69 in file "eeprom.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  address         2   19[BANK0 ] unsigned int 
  6682 ;;  data            1   21[BANK0 ] unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;		None               void
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6694 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;Total ram usage:        3 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    8
  6701 ;; This function calls:
  6702 ;;		_WriteEEPROM
  6703 ;; This function is called by:
  6704 ;;		_GenerateCalibration
  6705 ;;		_SetPIDValues
  6706 ;;		_LoadPIDValues
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text44
  6711  002388                     __ptext44:
  6712                           	opt stack 0
  6713  002388                     _WriteCharEEPROM:
  6714                           	opt stack 21
  6715                           
  6716                           ;eeprom.c: 70: WriteEEPROM(address, data);
  6717                           
  6718                           ;incstack = 0
  6719  002388  C0D1  F0CE         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  6720  00238C  C0D2  F0CF         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  6721  002390  C0D3  F0D0         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  6722  002394  EC77  F00E         	call	_WriteEEPROM	;wreg free
  6723  002398  0012               	return		;funcret
  6724  00239A                     __end_of_WriteCharEEPROM:
  6725                           	opt stack 0
  6726                           prodh	equ	0xFF4
  6727                           prodl	equ	0xFF3
  6728                           postinc0	equ	0xFEE
  6729                           wreg	equ	0xFE8
  6730                           indf2	equ	0xFDF
  6731                           postinc2	equ	0xFDE
  6732                           postdec2	equ	0xFDD
  6733                           fsr2h	equ	0xFDA
  6734                           fsr2l	equ	0xFD9
  6735                           status	equ	0xFD8
  6736                           
  6737 ;; *************** function _WriteEEPROM *****************
  6738 ;; Defined at:
  6739 ;;		line 3 in file "eeprom.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  address         2   16[BANK0 ] unsigned int 
  6742 ;;  data            1   18[BANK0 ] unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      unsigned char 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;Total ram usage:        3 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    7
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_WriteIntEEPROM
  6765 ;;		_WriteCharEEPROM
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text45
  6770  001CEE                     __ptext45:
  6771                           	opt stack 0
  6772  001CEE                     _WriteEEPROM:
  6773                           	opt stack 21
  6774                           
  6775                           ;eeprom.c: 4: if(address > 0x03FF) {
  6776                           
  6777                           ;incstack = 0
  6778  001CEE  0E04               	movlw	4
  6779  001CF0  0100               	movlb	0	; () banked
  6780  001CF2  5DCF               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  6781  001CF4  B0D8               	btfsc	status,0,c
  6782  001CF6  D01A               	goto	l214
  6783  001CF8  D001               	goto	l213
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;eeprom.c: 6: }
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;eeprom.c: 5: return(1);
  6790                           ;	Return value of _WriteEEPROM is never used
  6791  001CFA  D018               	goto	l214
  6792  001CFC                     l213:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;eeprom.c: 7: else {
  6796                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  6797  001CFC  C0CE  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  6801  001D00  0100               	movlb	0	; () banked
  6802  001D02  51CF               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  6803  001D04  0B03               	andlw	3
  6804  001D06  6EAA               	movwf	4010,c	;volatile
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;eeprom.c: 10: EEDATA = data;
  6808  001D08  C0D0  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  6812  001D0C  9EA6               	bcf	4006,7,c	;volatile
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  6816  001D0E  9CA6               	bcf	4006,6,c	;volatile
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  6820  001D10  84A6               	bsf	4006,2,c	;volatile
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  6824  001D12  9EF2               	bcf	intcon,7,c	;volatile
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;eeprom.c: 17: EECON2 = 0x55;
  6828  001D14  0E55               	movlw	85
  6829  001D16  6EA7               	movwf	4007,c	;volatile
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;eeprom.c: 18: EECON2 = 0x0AA;
  6833  001D18  0EAA               	movlw	170
  6834  001D1A  6EA7               	movwf	4007,c	;volatile
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;eeprom.c: 19: EECON1bits.WR = 1;
  6838  001D1C  82A6               	bsf	4006,1,c	;volatile
  6839                           
  6840                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  6841  001D1E  D000               	goto	l216
  6842  001D20                     l216:
  6843  001D20  B2A6               	btfsc	4006,1,c	;volatile
  6844  001D22  D7FE               	goto	l216
  6845                           
  6846                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  6847  001D24  94A6               	bcf	4006,2,c	;volatile
  6848                           
  6849                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  6850  001D26  8EF2               	bsf	intcon,7,c	;volatile
  6851                           
  6852                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  6853  001D28  50A6               	movf	4006,w,c	;volatile
  6854                           
  6855                           ;eeprom.c: 29: else {
  6856                           ;eeprom.c: 30: return(1);
  6857                           ;	Return value of _WriteEEPROM is never used
  6858                           
  6859                           ;eeprom.c: 28: }
  6860                           
  6861                           ;eeprom.c: 27: return(0);
  6862                           ;	Return value of _WriteEEPROM is never used
  6863  001D2A  D000               	goto	l214
  6864  001D2C                     l214:
  6865  001D2C  0012               	return		;funcret
  6866  001D2E                     __end_of_WriteEEPROM:
  6867                           	opt stack 0
  6868                           prodh	equ	0xFF4
  6869                           prodl	equ	0xFF3
  6870                           intcon	equ	0xFF2
  6871                           postinc0	equ	0xFEE
  6872                           wreg	equ	0xFE8
  6873                           indf2	equ	0xFDF
  6874                           postinc2	equ	0xFDE
  6875                           postdec2	equ	0xFDD
  6876                           fsr2h	equ	0xFDA
  6877                           fsr2l	equ	0xFD9
  6878                           status	equ	0xFD8
  6879                           
  6880 ;; *************** function _FlashLEDS *****************
  6881 ;; Defined at:
  6882 ;;		line 394 in file "FastBuggy17_Main_Code_TUNING.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;		None               void
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;Total ram usage:        0 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    8
  6903 ;; This function calls:
  6904 ;;		_Delay10KTCYx
  6905 ;; This function is called by:
  6906 ;;		_GenerateCalibration
  6907 ;;		_main
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text46
  6912  0020B6                     __ptext46:
  6913                           	opt stack 0
  6914  0020B6                     _FlashLEDS:
  6915                           	opt stack 20
  6916                           
  6917                           ;FastBuggy17_Main_Code_TUNING.c: 395: LATJ = 0x00;
  6918                           
  6919                           ;incstack = 0
  6920  0020B6  0E00               	movlw	0
  6921  0020B8  6E91               	movwf	3985,c	;volatile
  6922                           
  6923                           ;FastBuggy17_Main_Code_TUNING.c: 396: LATJ = 0x1F;
  6924  0020BA  0E1F               	movlw	31
  6925  0020BC  6E91               	movwf	3985,c	;volatile
  6926                           
  6927                           ;FastBuggy17_Main_Code_TUNING.c: 397: Delay10KTCYx(75);
  6928  0020BE  0E4B               	movlw	75
  6929  0020C0  EC25  F011         	call	_Delay10KTCYx
  6930                           
  6931                           ;FastBuggy17_Main_Code_TUNING.c: 398: LATJ = 0x00;
  6932  0020C4  0E00               	movlw	0
  6933  0020C6  6E91               	movwf	3985,c	;volatile
  6934                           
  6935                           ;FastBuggy17_Main_Code_TUNING.c: 399: Delay10KTCYx(75);
  6936  0020C8  0E4B               	movlw	75
  6937  0020CA  EC25  F011         	call	_Delay10KTCYx
  6938                           
  6939                           ;FastBuggy17_Main_Code_TUNING.c: 400: LATJ = 0x1F;
  6940  0020CE  0E1F               	movlw	31
  6941  0020D0  6E91               	movwf	3985,c	;volatile
  6942                           
  6943                           ;FastBuggy17_Main_Code_TUNING.c: 401: Delay10KTCYx(75);
  6944  0020D2  0E4B               	movlw	75
  6945  0020D4  EC25  F011         	call	_Delay10KTCYx
  6946                           
  6947                           ;FastBuggy17_Main_Code_TUNING.c: 402: LATJ = 0x00;
  6948  0020D8  0E00               	movlw	0
  6949  0020DA  6E91               	movwf	3985,c	;volatile
  6950  0020DC  0012               	return		;funcret
  6951  0020DE                     __end_of_FlashLEDS:
  6952                           	opt stack 0
  6953                           prodh	equ	0xFF4
  6954                           prodl	equ	0xFF3
  6955                           intcon	equ	0xFF2
  6956                           postinc0	equ	0xFEE
  6957                           wreg	equ	0xFE8
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8
  6964                           
  6965 ;; *************** function _Delay10KTCYx *****************
  6966 ;; Defined at:
  6967 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  unit            1    wreg     unsigned char 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  unit            1   17[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;		None               void
  6974 ;; Registers used:
  6975 ;;		wreg
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;Total ram usage:        2 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    7
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_FlashLEDS
  6992 ;;		_main
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text47
  6997  00224A                     __ptext47:
  6998                           	opt stack 0
  6999  00224A                     _Delay10KTCYx:
  7000                           	opt stack 20
  7001                           
  7002                           ;incstack = 0
  7003                           ;Delay10KTCYx@unit stored from wreg
  7004  00224A  0100               	movlb	0	; () banked
  7005  00224C  6FCF               	movwf	Delay10KTCYx@unit& (0+255),b
  7006  00224E                     
  7007                           ; BSR set to: 0
  7008  00224E  0E0D               	movlw	13
  7009  002250  0100               	movlb	0	; () banked
  7010  002252  6FCE               	movwf	??_Delay10KTCYx& (0+255),b
  7011  002254  0EFC               	movlw	252
  7012  002256                     u6527:
  7013  002256  2EE8               	decfsz	wreg,f,c
  7014  002258  D7FE               	goto	u6527
  7015  00225A  2FCE               	decfsz	??_Delay10KTCYx& (0+255),f,b
  7016  00225C  D7FC               	goto	u6527
  7017  00225E  0100               	movlb	0	; () banked
  7018  002260  2FCF               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  7019  002262  D7F5               	goto	l5719
  7020  002264  D000               	goto	l1479
  7021  002266                     l1479:
  7022                           
  7023                           ; BSR set to: 0
  7024  002266  0012               	return		;funcret
  7025  002268                     __end_of_Delay10KTCYx:
  7026                           	opt stack 0
  7027                           prodh	equ	0xFF4
  7028                           prodl	equ	0xFF3
  7029                           intcon	equ	0xFF2
  7030                           postinc0	equ	0xFEE
  7031                           wreg	equ	0xFE8
  7032                           indf2	equ	0xFDF
  7033                           postinc2	equ	0xFDE
  7034                           postdec2	equ	0xFDD
  7035                           fsr2h	equ	0xFDA
  7036                           fsr2l	equ	0xFD9
  7037                           status	equ	0xFD8
  7038                           
  7039 ;; *************** function _CalibrateThreshold *****************
  7040 ;; Defined at:
  7041 ;;		line 497 in file "FastBuggy17_Main_Code_TUNING.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  sensor_thres    2   28[BANK0 ] int 
  7046 ;;  sensor_thres    2   26[BANK0 ] PTR int 
  7047 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;Total ram usage:        4 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:   10
  7064 ;; This function calls:
  7065 ;;		_BusyADC
  7066 ;;		_BusySensorAcq
  7067 ;;		_CalculateSensorStatuses
  7068 ;;		_ConvertADC
  7069 ;;		_DisplaySensorStatuses
  7070 ;;		_GetSensorReadings
  7071 ;;		_NormaliseSensorReadings
  7072 ;;		_PB1pressed
  7073 ;;		_ReadADC
  7074 ;;		_SendStatus
  7075 ;;		_SetADCChannel
  7076 ;; This function is called by:
  7077 ;;		_GenerateCalibration
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text48
  7082  00128E                     __ptext48:
  7083                           	opt stack 0
  7084  00128E                     _CalibrateThreshold:
  7085                           	opt stack 18
  7086                           
  7087                           ;FastBuggy17_Main_Code_TUNING.c: 498: int sensor_threshold_temp;
  7088                           ;FastBuggy17_Main_Code_TUNING.c: 499: int *sensor_threshold_temp_ptr;
  7089                           ;FastBuggy17_Main_Code_TUNING.c: 501: sensor_threshold_temp_ptr = &sensor_threshold_temp
      +                          ;
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;incstack = 0
  7093  00128E  0EDA               	movlw	low CalibrateThreshold@sensor_threshold_temp
  7094  001290  0100               	movlb	0	; () banked
  7095  001292  6FD8               	movwf	CalibrateThreshold@sensor_threshold_temp_ptr& (0+255),b
  7096  001294  0E00               	movlw	high CalibrateThreshold@sensor_threshold_temp
  7097  001296  0100               	movlb	0	; () banked
  7098  001298  6FD9               	movwf	(CalibrateThreshold@sensor_threshold_temp_ptr+1)& (0+255),b
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;FastBuggy17_Main_Code_TUNING.c: 503: SendStatus(0x05);
  7102  00129A  0E05               	movlw	5
  7103  00129C  ECF2  F00E         	call	_SendStatus
  7104                           
  7105                           ;FastBuggy17_Main_Code_TUNING.c: 504: LATJ = 0x07;
  7106  0012A0  0E07               	movlw	7
  7107  0012A2  6E91               	movwf	3985,c	;volatile
  7108                           
  7109                           ;FastBuggy17_Main_Code_TUNING.c: 506: while(PB1pressed() == 0) {
  7110  0012A4  D03C               	goto	l5919
  7111  0012A6                     l5901:
  7112                           
  7113                           ;FastBuggy17_Main_Code_TUNING.c: 508: SetADCChannel(5);
  7114  0012A6  0E05               	movlw	5
  7115  0012A8  EC8F  F006         	call	_SetADCChannel
  7116                           
  7117                           ;FastBuggy17_Main_Code_TUNING.c: 509: ConvertADC();
  7118  0012AC  EC8E  F012         	call	_ConvertADC	;wreg free
  7119                           
  7120                           ;FastBuggy17_Main_Code_TUNING.c: 510: while(BusyADC());
  7121  0012B0  D000               	goto	l5905
  7122  0012B2                     l5905:
  7123  0012B2  EC38  F012         	call	_BusyADC	;wreg free
  7124  0012B6  0900               	iorlw	0
  7125  0012B8  A4D8               	btfss	status,2,c
  7126  0012BA  D7FB               	goto	l5905
  7127                           
  7128                           ;FastBuggy17_Main_Code_TUNING.c: 511: sensor_threshold_temp = ReadADC();
  7129  0012BC  ECA6  F011         	call	_ReadADC	;wreg free
  7130  0012C0  C0CE  F0DA         	movff	?_ReadADC,CalibrateThreshold@sensor_threshold_temp
  7131  0012C4  C0CF  F0DB         	movff	?_ReadADC+1,CalibrateThreshold@sensor_threshold_temp+1
  7132                           
  7133                           ;FastBuggy17_Main_Code_TUNING.c: 513: GetSensorReadings();
  7134  0012C8  EC7A  F011         	call	_GetSensorReadings	;wreg free
  7135                           
  7136                           ;FastBuggy17_Main_Code_TUNING.c: 514: while(BusySensorAcq() == 1);
  7137  0012CC  D000               	goto	l5911
  7138  0012CE                     l5911:
  7139  0012CE  EC0A  F012         	call	_BusySensorAcq	;wreg free
  7140  0012D2  06E8               	decf	wreg,f,c
  7141  0012D4  B4D8               	btfsc	status,2,c
  7142  0012D6  D7FB               	goto	l5911
  7143                           
  7144                           ;FastBuggy17_Main_Code_TUNING.c: 515: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7145  0012D8  0EAE               	movlw	low _sensor_readings_raw
  7146  0012DA  0100               	movlb	0	; () banked
  7147  0012DC  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7148  0012DE  0E00               	movlw	high _sensor_readings_raw
  7149  0012E0  0100               	movlb	0	; () banked
  7150  0012E2  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7151  0012E4  0E9A               	movlw	low _sensor_offsets
  7152  0012E6  0100               	movlb	0	; () banked
  7153  0012E8  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7154  0012EA  0E00               	movlw	high _sensor_offsets
  7155  0012EC  0100               	movlb	0	; () banked
  7156  0012EE  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7157  0012F0  ECF4  F00A         	call	_NormaliseSensorReadings	;wreg free
  7158                           
  7159                           ;FastBuggy17_Main_Code_TUNING.c: 516: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_temp_ptr);
  7160  0012F4  0EA4               	movlw	low _sensor_readings_normalised
  7161  0012F6  0100               	movlb	0	; () banked
  7162  0012F8  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  7163  0012FA  0E00               	movlw	high _sensor_readings_normalised
  7164  0012FC  0100               	movlb	0	; () banked
  7165  0012FE  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  7166  001300  C0D8  F0D0         	movff	CalibrateThreshold@sensor_threshold_temp_ptr,CalculateSensorStatuses@sensor_thres
      +                          hold
  7167  001304  C0D9  F0D1         	movff	CalibrateThreshold@sensor_threshold_temp_ptr+1,CalculateSensorStatuses@sensor_thr
      +                          eshold+1
  7168  001308  EC15  F005         	call	_CalculateSensorStatuses	;wreg free
  7169                           
  7170                           ;FastBuggy17_Main_Code_TUNING.c: 518: DisplaySensorStatuses(sensor_statuses);
  7171  00130C  0E25               	movlw	low _sensor_statuses
  7172  00130E  0100               	movlb	0	; () banked
  7173  001310  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  7174  001312  0E00               	movlw	high _sensor_statuses
  7175  001314  0100               	movlb	0	; () banked
  7176  001316  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  7177  001318  ECA4  F00D         	call	_DisplaySensorStatuses	;wreg free
  7178  00131C  D000               	goto	l5919
  7179  00131E                     l5919:
  7180  00131E  EC75  F00D         	call	_PB1pressed	;wreg free
  7181  001322  0900               	iorlw	0
  7182  001324  B4D8               	btfsc	status,2,c
  7183  001326  D7BF               	goto	l5901
  7184                           
  7185                           ;FastBuggy17_Main_Code_TUNING.c: 520: }
  7186                           ;FastBuggy17_Main_Code_TUNING.c: 522: sensor_threshold = sensor_threshold_temp;
  7187  001328  C0DA  F0BC         	movff	CalibrateThreshold@sensor_threshold_temp,_sensor_threshold
  7188  00132C  C0DB  F0BD         	movff	CalibrateThreshold@sensor_threshold_temp+1,_sensor_threshold+1
  7189  001330  0012               	return		;funcret
  7190  001332                     __end_of_CalibrateThreshold:
  7191                           	opt stack 0
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           intcon	equ	0xFF2
  7195                           postinc0	equ	0xFEE
  7196                           wreg	equ	0xFE8
  7197                           indf2	equ	0xFDF
  7198                           postinc2	equ	0xFDE
  7199                           postdec2	equ	0xFDD
  7200                           fsr2h	equ	0xFDA
  7201                           fsr2l	equ	0xFD9
  7202                           status	equ	0xFD8
  7203                           
  7204 ;; *************** function _ReadADC *****************
  7205 ;; Defined at:
  7206 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  2   16[BANK0 ] int 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;Total ram usage:        4 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:    7
  7227 ;; This function calls:
  7228 ;;		Nothing
  7229 ;; This function is called by:
  7230 ;;		_CalibrateThreshold
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text49
  7235  00234C                     __ptext49:
  7236                           	opt stack 0
  7237  00234C                     _ReadADC:
  7238                           	opt stack 20
  7239                           
  7240                           ;incstack = 0
  7241  00234C  50C4               	movf	4036,w,c	;volatile
  7242  00234E  0100               	movlb	0	; () banked
  7243  002350  6FD0               	movwf	??_ReadADC& (0+255),b
  7244  002352  50C3               	movf	4035,w,c	;volatile
  7245  002354  0100               	movlb	0	; () banked
  7246  002356  6FCE               	movwf	?_ReadADC& (0+255),b
  7247  002358  C0D0  F0CF         	movff	??_ReadADC,?_ReadADC+1
  7248  00235C  D000               	goto	l1069
  7249  00235E                     l1069:
  7250                           
  7251                           ; BSR set to: 0
  7252  00235E  0012               	return		;funcret
  7253  002360                     __end_of_ReadADC:
  7254                           	opt stack 0
  7255                           prodh	equ	0xFF4
  7256                           prodl	equ	0xFF3
  7257                           intcon	equ	0xFF2
  7258                           postinc0	equ	0xFEE
  7259                           wreg	equ	0xFE8
  7260                           indf2	equ	0xFDF
  7261                           postinc2	equ	0xFDE
  7262                           postdec2	equ	0xFDD
  7263                           fsr2h	equ	0xFDA
  7264                           fsr2l	equ	0xFD9
  7265                           status	equ	0xFD8
  7266                           
  7267 ;; *************** function _DisplaySensorStatuses *****************
  7268 ;; Defined at:
  7269 ;;		line 369 in file "FastBuggy17_Main_Code_TUNING.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
  7272 ;;		 -> sensor_statuses(5), 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  index           1   20[BANK0 ] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;		None               void
  7277 ;; Registers used:
  7278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;Total ram usage:        5 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    7
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_CalibrateThreshold
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text50
  7300  001B48                     __ptext50:
  7301                           	opt stack 0
  7302  001B48                     _DisplaySensorStatuses:
  7303                           	opt stack 20
  7304                           
  7305                           ;FastBuggy17_Main_Code_TUNING.c: 370: unsigned char index;
  7306                           ;FastBuggy17_Main_Code_TUNING.c: 372: LATJ = 0x00;
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;incstack = 0
  7310  001B48  0E00               	movlw	0
  7311  001B4A  6E91               	movwf	3985,c	;volatile
  7312                           
  7313                           ;FastBuggy17_Main_Code_TUNING.c: 374: for(index = 0; index < 5; index++) {
  7314  001B4C  0E00               	movlw	0
  7315  001B4E  0100               	movlb	0	; () banked
  7316  001B50  6FD2               	movwf	DisplaySensorStatuses@index& (0+255),b
  7317  001B52                     l5709:
  7318                           
  7319                           ; BSR set to: 0
  7320  001B52  0E04               	movlw	4
  7321  001B54  0100               	movlb	0	; () banked
  7322  001B56  65D2               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  7323  001B58  D001               	goto	l5713
  7324                           
  7325                           ; BSR set to: 0
  7326  001B5A  D01F               	goto	l831
  7327  001B5C                     l5713:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;FastBuggy17_Main_Code_TUNING.c: 375: LATJ ^= *(sensor_statuses + index) << index;
  7331  001B5C  C0D2  F0D0         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  7332  001B60  0100               	movlb	0	; () banked
  7333  001B62  51D2               	movf	DisplaySensorStatuses@index& (0+255),w,b
  7334  001B64  0D01               	mullw	1
  7335  001B66  50F3               	movf	prodl,w,c
  7336  001B68  0100               	movlb	0	; () banked
  7337  001B6A  25CE               	addwf	DisplaySensorStatuses@sensor_statuses& (0+255),w,b
  7338  001B6C  6ED9               	movwf	fsr2l,c
  7339  001B6E  50F4               	movf	prodh,w,c
  7340  001B70  0100               	movlb	0	; () banked
  7341  001B72  21CF               	addwfc	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),w,b
  7342  001B74  6EDA               	movwf	fsr2h,c
  7343  001B76  50DF               	movf	indf2,w,c
  7344  001B78  0100               	movlb	0	; () banked
  7345  001B7A  6FD1               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  7346  001B7C  0100               	movlb	0	; () banked
  7347  001B7E  2BD0               	incf	??_DisplaySensorStatuses& (0+255),f,b
  7348  001B80  D003               	goto	u4754
  7349  001B82                     u4755:
  7350  001B82  0100               	movlb	0	; () banked
  7351  001B84  90D8               	bcf	status,0,c
  7352  001B86  37D1               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  7353  001B88                     u4754:
  7354  001B88  0100               	movlb	0	; () banked
  7355  001B8A  2FD0               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  7356  001B8C  D7FA               	goto	u4755
  7357  001B8E  0100               	movlb	0	; () banked
  7358  001B90  51D1               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  7359  001B92  1A91               	xorwf	3985,f,c	;volatile
  7360                           
  7361                           ; BSR set to: 0
  7362  001B94  0100               	movlb	0	; () banked
  7363  001B96  2BD2               	incf	DisplaySensorStatuses@index& (0+255),f,b
  7364  001B98  D7DC               	goto	l5709
  7365  001B9A                     l831:
  7366                           
  7367                           ; BSR set to: 0
  7368  001B9A  0012               	return		;funcret
  7369  001B9C                     __end_of_DisplaySensorStatuses:
  7370                           	opt stack 0
  7371                           prodh	equ	0xFF4
  7372                           prodl	equ	0xFF3
  7373                           intcon	equ	0xFF2
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           indf2	equ	0xFDF
  7377                           postinc2	equ	0xFDE
  7378                           postdec2	equ	0xFDD
  7379                           fsr2h	equ	0xFDA
  7380                           fsr2l	equ	0xFD9
  7381                           status	equ	0xFD8
  7382                           
  7383 ;; *************** function _CalculateSensorStatuses *****************
  7384 ;; Defined at:
  7385 ;;		line 313 in file "FastBuggy17_Main_Code_TUNING.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  sensor_readi    2   16[BANK0 ] PTR const int 
  7388 ;;		 -> sensor_readings_normalised(10), 
  7389 ;;  sensor_thres    2   18[BANK0 ] PTR const int 
  7390 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), sensor_threshold(2), 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  index           1   25[BANK0 ] unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;		None               void
  7395 ;; Registers used:
  7396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;Total ram usage:       10 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    7
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_CalibrateThreshold
  7413 ;;		_main
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text51
  7418  000A2A                     __ptext51:
  7419                           	opt stack 0
  7420  000A2A                     _CalculateSensorStatuses:
  7421                           	opt stack 20
  7422                           
  7423                           ;FastBuggy17_Main_Code_TUNING.c: 314: unsigned char index;
  7424                           ;FastBuggy17_Main_Code_TUNING.c: 316: if(line_mode == 0) {
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;incstack = 0
  7428  000A2A  502A               	movf	_line_mode,w,c
  7429  000A2C  A4D8               	btfss	status,2,c
  7430  000A2E  D03E               	goto	l5673
  7431                           
  7432                           ;FastBuggy17_Main_Code_TUNING.c: 317: for(index = 0; index < 5; index++) {
  7433  000A30  0E00               	movlw	0
  7434  000A32  0100               	movlb	0	; () banked
  7435  000A34  6FD7               	movwf	CalculateSensorStatuses@index& (0+255),b
  7436  000A36                     l5659:
  7437                           
  7438                           ; BSR set to: 0
  7439  000A36  0E04               	movlw	4
  7440  000A38  0100               	movlb	0	; () banked
  7441  000A3A  65D7               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7442  000A3C  D001               	goto	l5663
  7443                           
  7444                           ; BSR set to: 0
  7445  000A3E  D077               	goto	l818
  7446  000A40                     l5663:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;FastBuggy17_Main_Code_TUNING.c: 318: if(*(sensor_readings_normalised + index) < *sensor
      +                          _threshold) {
  7450  000A40  C0D0  FFD9         	movff	CalculateSensorStatuses@sensor_threshold,fsr2l
  7451  000A44  C0D1  FFDA         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr2h
  7452  000A48  0100               	movlb	0	; () banked
  7453  000A4A  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7454  000A4C  0D02               	mullw	2
  7455  000A4E  50F3               	movf	prodl,w,c
  7456  000A50  0100               	movlb	0	; () banked
  7457  000A52  25CE               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7458  000A54  6EE1               	movwf	fsr1l,c
  7459  000A56  50F4               	movf	prodh,w,c
  7460  000A58  0100               	movlb	0	; () banked
  7461  000A5A  21CF               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7462  000A5C  6EE2               	movwf	fsr1h,c
  7463  000A5E  50DE               	movf	postinc2,w,c
  7464  000A60  5CE6               	subwf	postinc1,w,c
  7465  000A62  50E6               	movf	postinc1,w,c
  7466  000A64  0A80               	xorlw	128
  7467  000A66  0100               	movlb	0	; () banked
  7468  000A68  6FD6               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7469  000A6A  50DE               	movf	postinc2,w,c
  7470  000A6C  0A80               	xorlw	128
  7471  000A6E  0100               	movlb	0	; () banked
  7472  000A70  59D6               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7473  000A72  B0D8               	btfsc	status,0,c
  7474  000A74  D00B               	goto	l5667
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;FastBuggy17_Main_Code_TUNING.c: 319: sensor_statuses[index] = 1;
  7478  000A76  0100               	movlb	0	; () banked
  7479  000A78  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7480  000A7A  0D01               	mullw	1
  7481  000A7C  0E25               	movlw	low _sensor_statuses
  7482  000A7E  24F3               	addwf	prodl,w,c
  7483  000A80  6ED9               	movwf	fsr2l,c
  7484  000A82  0E00               	movlw	high _sensor_statuses
  7485  000A84  20F4               	addwfc	prodh,w,c
  7486  000A86  6EDA               	movwf	fsr2h,c
  7487  000A88  0E01               	movlw	1
  7488  000A8A  D00A               	goto	L3
  7489  000A8C                     l5667:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;FastBuggy17_Main_Code_TUNING.c: 321: else {
  7493                           ;FastBuggy17_Main_Code_TUNING.c: 322: sensor_statuses[index] = 0;
  7494  000A8C  0100               	movlb	0	; () banked
  7495  000A8E  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7496  000A90  0D01               	mullw	1
  7497  000A92  0E25               	movlw	low _sensor_statuses
  7498  000A94  24F3               	addwf	prodl,w,c
  7499  000A96  6ED9               	movwf	fsr2l,c
  7500  000A98  0E00               	movlw	high _sensor_statuses
  7501  000A9A  20F4               	addwfc	prodh,w,c
  7502  000A9C  6EDA               	movwf	fsr2h,c
  7503  000A9E  0E00               	movlw	0
  7504  000AA0                     L3:
  7505  000AA0  6EDF               	movwf	indf2,c
  7506  000AA2  D000               	goto	l5669
  7507  000AA4                     l5669:
  7508                           
  7509                           ; BSR set to: 0
  7510  000AA4  0100               	movlb	0	; () banked
  7511  000AA6  2BD7               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7512  000AA8  D7C6               	goto	l5659
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;FastBuggy17_Main_Code_TUNING.c: 323: }
  7516                           ;FastBuggy17_Main_Code_TUNING.c: 324: }
  7517                           ;FastBuggy17_Main_Code_TUNING.c: 325: }
  7518                           
  7519                           ; BSR set to: 0
  7520  000AAA  D041               	goto	l818
  7521  000AAC                     l5673:
  7522                           
  7523                           ;FastBuggy17_Main_Code_TUNING.c: 326: else if(line_mode == 1) {
  7524  000AAC  042A               	decf	_line_mode,w,c
  7525  000AAE  A4D8               	btfss	status,2,c
  7526  000AB0  D03E               	goto	l818
  7527                           
  7528                           ;FastBuggy17_Main_Code_TUNING.c: 327: for(index = 0; index < 5; index++) {
  7529  000AB2  0E00               	movlw	0
  7530  000AB4  0100               	movlb	0	; () banked
  7531  000AB6  6FD7               	movwf	CalculateSensorStatuses@index& (0+255),b
  7532  000AB8                     l5677:
  7533                           
  7534                           ; BSR set to: 0
  7535  000AB8  0E04               	movlw	4
  7536  000ABA  0100               	movlb	0	; () banked
  7537  000ABC  65D7               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7538  000ABE  D001               	goto	l5681
  7539                           
  7540                           ; BSR set to: 0
  7541  000AC0  D036               	goto	l818
  7542  000AC2                     l5681:
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;FastBuggy17_Main_Code_TUNING.c: 328: if(*(sensor_readings_normalised + index) > *sensor
      +                          _threshold) {
  7546  000AC2  0100               	movlb	0	; () banked
  7547  000AC4  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7548  000AC6  0D02               	mullw	2
  7549  000AC8  50F3               	movf	prodl,w,c
  7550  000ACA  0100               	movlb	0	; () banked
  7551  000ACC  25CE               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7552  000ACE  6ED9               	movwf	fsr2l,c
  7553  000AD0  50F4               	movf	prodh,w,c
  7554  000AD2  0100               	movlb	0	; () banked
  7555  000AD4  21CF               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7556  000AD6  6EDA               	movwf	fsr2h,c
  7557  000AD8  C0D0  FFE1         	movff	CalculateSensorStatuses@sensor_threshold,fsr1l
  7558  000ADC  C0D1  FFE2         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr1h
  7559  000AE0  50DE               	movf	postinc2,w,c
  7560  000AE2  5CE6               	subwf	postinc1,w,c
  7561  000AE4  50E6               	movf	postinc1,w,c
  7562  000AE6  0A80               	xorlw	128
  7563  000AE8  0100               	movlb	0	; () banked
  7564  000AEA  6FD6               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7565  000AEC  50DE               	movf	postinc2,w,c
  7566  000AEE  0A80               	xorlw	128
  7567  000AF0  0100               	movlb	0	; () banked
  7568  000AF2  59D6               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7569  000AF4  B0D8               	btfsc	status,0,c
  7570  000AF6  D00B               	goto	l5685
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;FastBuggy17_Main_Code_TUNING.c: 329: sensor_statuses[index] = 1;
  7574  000AF8  0100               	movlb	0	; () banked
  7575  000AFA  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7576  000AFC  0D01               	mullw	1
  7577  000AFE  0E25               	movlw	low _sensor_statuses
  7578  000B00  24F3               	addwf	prodl,w,c
  7579  000B02  6ED9               	movwf	fsr2l,c
  7580  000B04  0E00               	movlw	high _sensor_statuses
  7581  000B06  20F4               	addwfc	prodh,w,c
  7582  000B08  6EDA               	movwf	fsr2h,c
  7583  000B0A  0E01               	movlw	1
  7584  000B0C  D00A               	goto	L4
  7585  000B0E                     l5685:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;FastBuggy17_Main_Code_TUNING.c: 331: else {
  7589                           ;FastBuggy17_Main_Code_TUNING.c: 332: sensor_statuses[index] = 0;
  7590  000B0E  0100               	movlb	0	; () banked
  7591  000B10  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7592  000B12  0D01               	mullw	1
  7593  000B14  0E25               	movlw	low _sensor_statuses
  7594  000B16  24F3               	addwf	prodl,w,c
  7595  000B18  6ED9               	movwf	fsr2l,c
  7596  000B1A  0E00               	movlw	high _sensor_statuses
  7597  000B1C  20F4               	addwfc	prodh,w,c
  7598  000B1E  6EDA               	movwf	fsr2h,c
  7599  000B20  0E00               	movlw	0
  7600  000B22                     L4:
  7601  000B22  6EDF               	movwf	indf2,c
  7602  000B24  D000               	goto	l5687
  7603  000B26                     l5687:
  7604                           
  7605                           ; BSR set to: 0
  7606  000B26  0100               	movlb	0	; () banked
  7607  000B28  2BD7               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7608  000B2A  D7C6               	goto	l5677
  7609                           
  7610                           ; BSR set to: 0
  7611                           
  7612                           ; BSR set to: 0
  7613                           
  7614                           ; BSR set to: 0
  7615  000B2C  D000               	goto	l818
  7616  000B2E                     l818:
  7617  000B2E  0012               	return		;funcret
  7618  000B30                     __end_of_CalculateSensorStatuses:
  7619                           	opt stack 0
  7620                           prodh	equ	0xFF4
  7621                           prodl	equ	0xFF3
  7622                           intcon	equ	0xFF2
  7623                           postinc0	equ	0xFEE
  7624                           wreg	equ	0xFE8
  7625                           postinc1	equ	0xFE6
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           indf2	equ	0xFDF
  7629                           postinc2	equ	0xFDE
  7630                           postdec2	equ	0xFDD
  7631                           fsr2h	equ	0xFDA
  7632                           fsr2l	equ	0xFD9
  7633                           status	equ	0xFD8
  7634                           
  7635 ;; *************** function _BusyADC *****************
  7636 ;; Defined at:
  7637 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      unsigned char 
  7644 ;; Registers used:
  7645 ;;		wreg
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;Total ram usage:        0 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    7
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_CalibrateThreshold
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text52
  7666  002470                     __ptext52:
  7667                           	opt stack 0
  7668  002470                     _BusyADC:
  7669                           	opt stack 20
  7670                           
  7671                           ;incstack = 0
  7672  002470  A2C2               	btfss	4034,1,c	;volatile
  7673  002472  D002               	goto	u4830
  7674  002474  0E01               	movlw	1
  7675  002476  D002               	goto	l1039
  7676  002478                     u4830:
  7677  002478  0E00               	movlw	0
  7678  00247A  D000               	goto	l1039
  7679  00247C                     l1039:
  7680  00247C  0012               	return		;funcret
  7681  00247E                     __end_of_BusyADC:
  7682                           	opt stack 0
  7683                           prodh	equ	0xFF4
  7684                           prodl	equ	0xFF3
  7685                           intcon	equ	0xFF2
  7686                           postinc0	equ	0xFEE
  7687                           wreg	equ	0xFE8
  7688                           postinc1	equ	0xFE6
  7689                           fsr1h	equ	0xFE2
  7690                           fsr1l	equ	0xFE1
  7691                           indf2	equ	0xFDF
  7692                           postinc2	equ	0xFDE
  7693                           postdec2	equ	0xFDD
  7694                           fsr2h	equ	0xFDA
  7695                           fsr2l	equ	0xFD9
  7696                           status	equ	0xFD8
  7697                           
  7698 ;; *************** function _CalibrateOnLine *****************
  7699 ;; Defined at:
  7700 ;;		line 481 in file "FastBuggy17_Main_Code_TUNING.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;		None               void
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:   10
  7721 ;; This function calls:
  7722 ;;		_BusySensorAcq
  7723 ;;		_CalculateSensorSum
  7724 ;;		_GetSensorReadings
  7725 ;;		_NormaliseSensorReadings
  7726 ;;		_PB1pressed
  7727 ;;		_SendStatus
  7728 ;; This function is called by:
  7729 ;;		_GenerateCalibration
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text53
  7734  0019CA                     __ptext53:
  7735                           	opt stack 0
  7736  0019CA                     _CalibrateOnLine:
  7737                           	opt stack 18
  7738                           
  7739                           ;FastBuggy17_Main_Code_TUNING.c: 482: SendStatus(0x04);
  7740                           
  7741                           ;incstack = 0
  7742  0019CA  0E04               	movlw	4
  7743  0019CC  ECF2  F00E         	call	_SendStatus
  7744                           
  7745                           ;FastBuggy17_Main_Code_TUNING.c: 483: LATJ = 0x07;
  7746  0019D0  0E07               	movlw	7
  7747  0019D2  6E91               	movwf	3985,c	;volatile
  7748                           
  7749                           ;FastBuggy17_Main_Code_TUNING.c: 485: while(PB1pressed() == 0);
  7750  0019D4  D000               	goto	l5885
  7751  0019D6                     l5885:
  7752  0019D6  EC75  F00D         	call	_PB1pressed	;wreg free
  7753  0019DA  0900               	iorlw	0
  7754  0019DC  B4D8               	btfsc	status,2,c
  7755  0019DE  D7FB               	goto	l5885
  7756                           
  7757                           ;FastBuggy17_Main_Code_TUNING.c: 487: GetSensorReadings();
  7758  0019E0  EC7A  F011         	call	_GetSensorReadings	;wreg free
  7759                           
  7760                           ;FastBuggy17_Main_Code_TUNING.c: 488: while(BusySensorAcq() == 1);
  7761  0019E4  D000               	goto	l5889
  7762  0019E6                     l5889:
  7763  0019E6  EC0A  F012         	call	_BusySensorAcq	;wreg free
  7764  0019EA  06E8               	decf	wreg,f,c
  7765  0019EC  B4D8               	btfsc	status,2,c
  7766  0019EE  D7FB               	goto	l5889
  7767                           
  7768                           ;FastBuggy17_Main_Code_TUNING.c: 489: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7769  0019F0  0EAE               	movlw	low _sensor_readings_raw
  7770  0019F2  0100               	movlb	0	; () banked
  7771  0019F4  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7772  0019F6  0E00               	movlw	high _sensor_readings_raw
  7773  0019F8  0100               	movlb	0	; () banked
  7774  0019FA  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7775  0019FC  0E9A               	movlw	low _sensor_offsets
  7776  0019FE  0100               	movlb	0	; () banked
  7777  001A00  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7778  001A02  0E00               	movlw	high _sensor_offsets
  7779  001A04  0100               	movlb	0	; () banked
  7780  001A06  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7781  001A08  ECF4  F00A         	call	_NormaliseSensorReadings	;wreg free
  7782                           
  7783                           ;FastBuggy17_Main_Code_TUNING.c: 491: sensor_threshold = sensor_readings_normalised[2];
  7784  001A0C  C0A8  F0BC         	movff	_sensor_readings_normalised+4,_sensor_threshold
  7785  001A10  C0A9  F0BD         	movff	_sensor_readings_normalised+5,_sensor_threshold+1
  7786                           
  7787                           ;FastBuggy17_Main_Code_TUNING.c: 492: PID_set_point = CalculateSensorSum(sensor_readings
      +                          _normalised);
  7788  001A14  0EA4               	movlw	low _sensor_readings_normalised
  7789  001A16  0100               	movlb	0	; () banked
  7790  001A18  6FD4               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  7791  001A1A  0E00               	movlw	high _sensor_readings_normalised
  7792  001A1C  0100               	movlb	0	; () banked
  7793  001A1E  6FD5               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  7794  001A20  EC98  F005         	call	_CalculateSensorSum	;wreg free
  7795  001A24  C0D4  F0BA         	movff	?_CalculateSensorSum,_PID_set_point
  7796  001A28  C0D5  F0BB         	movff	?_CalculateSensorSum+1,_PID_set_point+1
  7797  001A2C  0012               	return		;funcret
  7798  001A2E                     __end_of_CalibrateOnLine:
  7799                           	opt stack 0
  7800                           prodh	equ	0xFF4
  7801                           prodl	equ	0xFF3
  7802                           intcon	equ	0xFF2
  7803                           postinc0	equ	0xFEE
  7804                           wreg	equ	0xFE8
  7805                           postinc1	equ	0xFE6
  7806                           fsr1h	equ	0xFE2
  7807                           fsr1l	equ	0xFE1
  7808                           indf2	equ	0xFDF
  7809                           postinc2	equ	0xFDE
  7810                           postdec2	equ	0xFDD
  7811                           fsr2h	equ	0xFDA
  7812                           fsr2l	equ	0xFD9
  7813                           status	equ	0xFD8
  7814                           
  7815 ;; *************** function _NormaliseSensorReadings *****************
  7816 ;; Defined at:
  7817 ;;		line 303 in file "FastBuggy17_Main_Code_TUNING.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  sensor_readi    2   16[BANK0 ] PTR  int 
  7820 ;;		 -> sensor_readings_raw(10), 
  7821 ;;  sensor_offse    2   18[BANK0 ] PTR const int 
  7822 ;;		 -> sensor_offsets(10), 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  index           1   24[BANK0 ] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;		None               void
  7827 ;; Registers used:
  7828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;Total ram usage:        9 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    7
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_CalibrateOnLine
  7845 ;;		_CalibrateThreshold
  7846 ;;		_main
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text54
  7851  0015E8                     __ptext54:
  7852                           	opt stack 0
  7853  0015E8                     _NormaliseSensorReadings:
  7854                           	opt stack 23
  7855                           
  7856                           ;FastBuggy17_Main_Code_TUNING.c: 304: unsigned char index;
  7857                           ;FastBuggy17_Main_Code_TUNING.c: 306: for(index = 0; index < 5; index++) {
  7858                           
  7859                           ;incstack = 0
  7860  0015E8  0E00               	movlw	0
  7861  0015EA  0100               	movlb	0	; () banked
  7862  0015EC  6FD6               	movwf	NormaliseSensorReadings@index& (0+255),b
  7863  0015EE                     l5645:
  7864                           
  7865                           ; BSR set to: 0
  7866  0015EE  0E04               	movlw	4
  7867  0015F0  0100               	movlb	0	; () banked
  7868  0015F2  65D6               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  7869  0015F4  D001               	goto	l5649
  7870                           
  7871                           ; BSR set to: 0
  7872  0015F6  D036               	goto	l804
  7873  0015F8                     l5649:
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;FastBuggy17_Main_Code_TUNING.c: 307: sensor_readings_normalised[index] = *(sensor_readi
      +                          ngs_raw + index) + *(sensor_offsets + index);
  7877  0015F8  0100               	movlb	0	; () banked
  7878  0015FA  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7879  0015FC  0D02               	mullw	2
  7880  0015FE  50F3               	movf	prodl,w,c
  7881  001600  0100               	movlb	0	; () banked
  7882  001602  25D0               	addwf	NormaliseSensorReadings@sensor_offsets& (0+255),w,b
  7883  001604  6ED9               	movwf	fsr2l,c
  7884  001606  50F4               	movf	prodh,w,c
  7885  001608  0100               	movlb	0	; () banked
  7886  00160A  21D1               	addwfc	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),w,b
  7887  00160C  6EDA               	movwf	fsr2h,c
  7888  00160E  CFDE F0D2          	movff	postinc2,??_NormaliseSensorReadings
  7889  001612  CFDD F0D3          	movff	postdec2,??_NormaliseSensorReadings+1
  7890  001616  0100               	movlb	0	; () banked
  7891  001618  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7892  00161A  0D02               	mullw	2
  7893  00161C  50F3               	movf	prodl,w,c
  7894  00161E  0100               	movlb	0	; () banked
  7895  001620  25CE               	addwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),w,b
  7896  001622  6ED9               	movwf	fsr2l,c
  7897  001624  50F4               	movf	prodh,w,c
  7898  001626  0100               	movlb	0	; () banked
  7899  001628  21CF               	addwfc	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),w,b
  7900  00162A  6EDA               	movwf	fsr2h,c
  7901  00162C  CFDE F0D4          	movff	postinc2,??_NormaliseSensorReadings+2
  7902  001630  CFDD F0D5          	movff	postdec2,??_NormaliseSensorReadings+3
  7903  001634  0100               	movlb	0	; () banked
  7904  001636  51D2               	movf	??_NormaliseSensorReadings& (0+255),w,b
  7905  001638  0100               	movlb	0	; () banked
  7906  00163A  27D4               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  7907  00163C  0100               	movlb	0	; () banked
  7908  00163E  51D3               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  7909  001640  0100               	movlb	0	; () banked
  7910  001642  23D5               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  7911  001644  0100               	movlb	0	; () banked
  7912  001646  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7913  001648  0D02               	mullw	2
  7914  00164A  0EA4               	movlw	low _sensor_readings_normalised
  7915  00164C  24F3               	addwf	prodl,w,c
  7916  00164E  6ED9               	movwf	fsr2l,c
  7917  001650  0E00               	movlw	high _sensor_readings_normalised
  7918  001652  20F4               	addwfc	prodh,w,c
  7919  001654  6EDA               	movwf	fsr2h,c
  7920  001656  C0D4  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  7921  00165A  C0D5  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  7922                           
  7923                           ; BSR set to: 0
  7924  00165E  0100               	movlb	0	; () banked
  7925  001660  2BD6               	incf	NormaliseSensorReadings@index& (0+255),f,b
  7926  001662  D7C5               	goto	l5645
  7927  001664                     l804:
  7928                           
  7929                           ; BSR set to: 0
  7930  001664  0012               	return		;funcret
  7931  001666                     __end_of_NormaliseSensorReadings:
  7932                           	opt stack 0
  7933                           prodh	equ	0xFF4
  7934                           prodl	equ	0xFF3
  7935                           intcon	equ	0xFF2
  7936                           postinc0	equ	0xFEE
  7937                           wreg	equ	0xFE8
  7938                           postinc1	equ	0xFE6
  7939                           fsr1h	equ	0xFE2
  7940                           fsr1l	equ	0xFE1
  7941                           indf2	equ	0xFDF
  7942                           postinc2	equ	0xFDE
  7943                           postdec2	equ	0xFDD
  7944                           fsr2h	equ	0xFDA
  7945                           fsr2l	equ	0xFD9
  7946                           status	equ	0xFD8
  7947                           
  7948 ;; *************** function _CalculateSensorSum *****************
  7949 ;; Defined at:
  7950 ;;		line 340 in file "FastBuggy17_Main_Code_TUNING.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  sensor_readi    2   22[BANK0 ] PTR const int 
  7953 ;;		 -> sensor_readings_normalised(10), 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  sum             2   26[BANK0 ] int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2   22[BANK0 ] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;Total ram usage:        6 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    8
  7972 ;; This function calls:
  7973 ;;		___wmul
  7974 ;; This function is called by:
  7975 ;;		_CalibrateOnLine
  7976 ;;		_main
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text55
  7981  000B30                     __ptext55:
  7982                           	opt stack 0
  7983  000B30                     _CalculateSensorSum:
  7984                           	opt stack 19
  7985                           
  7986                           ;FastBuggy17_Main_Code_TUNING.c: 342: int sum = 0;
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;incstack = 0
  7990  000B30  0E00               	movlw	0
  7991  000B32  0100               	movlb	0	; () banked
  7992  000B34  6FD9               	movwf	(CalculateSensorSum@sum+1)& (0+255),b
  7993  000B36  0E00               	movlw	0
  7994  000B38  6FD8               	movwf	CalculateSensorSum@sum& (0+255),b
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;FastBuggy17_Main_Code_TUNING.c: 344: sum += *(sensor_readings_normalised + 0) * 3;
  7998  000B3A  C0D4  FFD9         	movff	CalculateSensorSum@sensor_readings_normalised,fsr2l
  7999  000B3E  C0D5  FFDA         	movff	CalculateSensorSum@sensor_readings_normalised+1,fsr2h
  8000  000B42  CFDE F0CE          	movff	postinc2,___wmul@multiplier
  8001  000B46  CFDD F0CF          	movff	postdec2,___wmul@multiplier+1
  8002  000B4A  0E00               	movlw	0
  8003  000B4C  0100               	movlb	0	; () banked
  8004  000B4E  6FD1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8005  000B50  0E03               	movlw	3
  8006  000B52  6FD0               	movwf	___wmul@multiplicand& (0+255),b
  8007  000B54  EC47  F00F         	call	___wmul	;wreg free
  8008  000B58  0100               	movlb	0	; () banked
  8009  000B5A  51CE               	movf	?___wmul& (0+255),w,b
  8010  000B5C  0100               	movlb	0	; () banked
  8011  000B5E  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8012  000B60  0100               	movlb	0	; () banked
  8013  000B62  51CF               	movf	(?___wmul+1)& (0+255),w,b
  8014  000B64  0100               	movlb	0	; () banked
  8015  000B66  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;FastBuggy17_Main_Code_TUNING.c: 345: sum += *(sensor_readings_normalised + 1) * 2;
  8019  000B68  0100               	movlb	0	; () banked
  8020  000B6A  EE20 F002          	lfsr	2,2
  8021  000B6E  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8022  000B70  26D9               	addwf	fsr2l,f,c
  8023  000B72  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8024  000B74  22DA               	addwfc	fsr2h,f,c
  8025  000B76  CFDE F0D6          	movff	postinc2,??_CalculateSensorSum
  8026  000B7A  CFDD F0D7          	movff	postdec2,??_CalculateSensorSum+1
  8027  000B7E  90D8               	bcf	status,0,c
  8028  000B80  0100               	movlb	0	; () banked
  8029  000B82  37D6               	rlcf	??_CalculateSensorSum& (0+255),f,b
  8030  000B84  37D7               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  8031  000B86  0100               	movlb	0	; () banked
  8032  000B88  51D6               	movf	??_CalculateSensorSum& (0+255),w,b
  8033  000B8A  0100               	movlb	0	; () banked
  8034  000B8C  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8035  000B8E  0100               	movlb	0	; () banked
  8036  000B90  51D7               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8037  000B92  0100               	movlb	0	; () banked
  8038  000B94  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;FastBuggy17_Main_Code_TUNING.c: 346: sum += *(sensor_readings_normalised + 2) * 1;
  8042  000B96  0100               	movlb	0	; () banked
  8043  000B98  EE20 F004          	lfsr	2,4
  8044  000B9C  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8045  000B9E  26D9               	addwf	fsr2l,f,c
  8046  000BA0  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8047  000BA2  22DA               	addwfc	fsr2h,f,c
  8048  000BA4  50DE               	movf	postinc2,w,c
  8049  000BA6  0100               	movlb	0	; () banked
  8050  000BA8  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8051  000BAA  50DD               	movf	postdec2,w,c
  8052  000BAC  0100               	movlb	0	; () banked
  8053  000BAE  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;FastBuggy17_Main_Code_TUNING.c: 347: sum += *(sensor_readings_normalised + 3) * -2;
  8057  000BB0  0100               	movlb	0	; () banked
  8058  000BB2  EE20 F006          	lfsr	2,6
  8059  000BB6  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8060  000BB8  26D9               	addwf	fsr2l,f,c
  8061  000BBA  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8062  000BBC  22DA               	addwfc	fsr2h,f,c
  8063  000BBE  CFDE F0D6          	movff	postinc2,??_CalculateSensorSum
  8064  000BC2  CFDD F0D7          	movff	postdec2,??_CalculateSensorSum+1
  8065  000BC6  90D8               	bcf	status,0,c
  8066  000BC8  0100               	movlb	0	; () banked
  8067  000BCA  37D6               	rlcf	??_CalculateSensorSum& (0+255),f,b
  8068  000BCC  37D7               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  8069  000BCE  0100               	movlb	0	; () banked
  8070  000BD0  1FD6               	comf	??_CalculateSensorSum& (0+255),f,b
  8071  000BD2  1FD7               	comf	(??_CalculateSensorSum+1)& (0+255),f,b
  8072  000BD4  4BD6               	infsnz	??_CalculateSensorSum& (0+255),f,b
  8073  000BD6  2BD7               	incf	(??_CalculateSensorSum+1)& (0+255),f,b
  8074  000BD8  0100               	movlb	0	; () banked
  8075  000BDA  51D6               	movf	??_CalculateSensorSum& (0+255),w,b
  8076  000BDC  0100               	movlb	0	; () banked
  8077  000BDE  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8078  000BE0  0100               	movlb	0	; () banked
  8079  000BE2  51D7               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8080  000BE4  0100               	movlb	0	; () banked
  8081  000BE6  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;FastBuggy17_Main_Code_TUNING.c: 348: sum += *(sensor_readings_normalised + 4) * -3;
  8085  000BE8  0100               	movlb	0	; () banked
  8086  000BEA  EE20 F008          	lfsr	2,8
  8087  000BEE  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8088  000BF0  26D9               	addwf	fsr2l,f,c
  8089  000BF2  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8090  000BF4  22DA               	addwfc	fsr2h,f,c
  8091  000BF6  CFDE F0CE          	movff	postinc2,___wmul@multiplier
  8092  000BFA  CFDD F0CF          	movff	postdec2,___wmul@multiplier+1
  8093  000BFE  0EFF               	movlw	255
  8094  000C00  0100               	movlb	0	; () banked
  8095  000C02  6FD1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8096  000C04  0EFD               	movlw	253
  8097  000C06  6FD0               	movwf	___wmul@multiplicand& (0+255),b
  8098  000C08  EC47  F00F         	call	___wmul	;wreg free
  8099  000C0C  0100               	movlb	0	; () banked
  8100  000C0E  51CE               	movf	?___wmul& (0+255),w,b
  8101  000C10  0100               	movlb	0	; () banked
  8102  000C12  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8103  000C14  0100               	movlb	0	; () banked
  8104  000C16  51CF               	movf	(?___wmul+1)& (0+255),w,b
  8105  000C18  0100               	movlb	0	; () banked
  8106  000C1A  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;FastBuggy17_Main_Code_TUNING.c: 350: return(sum);
  8110  000C1C  C0D8  F0D4         	movff	CalculateSensorSum@sum,?_CalculateSensorSum
  8111  000C20  C0D9  F0D5         	movff	CalculateSensorSum@sum+1,?_CalculateSensorSum+1
  8112  000C24  D000               	goto	l821
  8113  000C26                     l821:
  8114                           
  8115                           ; BSR set to: 0
  8116  000C26  0012               	return		;funcret
  8117  000C28                     __end_of_CalculateSensorSum:
  8118                           	opt stack 0
  8119                           prodh	equ	0xFF4
  8120                           prodl	equ	0xFF3
  8121                           intcon	equ	0xFF2
  8122                           postinc0	equ	0xFEE
  8123                           wreg	equ	0xFE8
  8124                           postinc1	equ	0xFE6
  8125                           fsr1h	equ	0xFE2
  8126                           fsr1l	equ	0xFE1
  8127                           indf2	equ	0xFDF
  8128                           postinc2	equ	0xFDE
  8129                           postdec2	equ	0xFDD
  8130                           fsr2h	equ	0xFDA
  8131                           fsr2l	equ	0xFD9
  8132                           status	equ	0xFD8
  8133                           
  8134 ;; *************** function ___wmul *****************
  8135 ;; Defined at:
  8136 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  multiplier      2   16[BANK0 ] unsigned int 
  8139 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  product         2   20[BANK0 ] unsigned int 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  2   16[BANK0 ] unsigned int 
  8144 ;; Registers used:
  8145 ;;		wreg, status,2, status,0, prodl, prodh
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8151 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;Total ram usage:        6 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    7
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_CalculateSensorSum
  8162 ;;		_main
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text56
  8167  001E8E                     __ptext56:
  8168                           	opt stack 0
  8169  001E8E                     ___wmul:
  8170                           	opt stack 23
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;incstack = 0
  8174  001E8E  0100               	movlb	0	; () banked
  8175  001E90  51CE               	movf	___wmul@multiplier& (0+255),w,b
  8176  001E92  0100               	movlb	0	; () banked
  8177  001E94  03D0               	mulwf	___wmul@multiplicand& (0+255),b
  8178  001E96  CFF3 F0D2          	movff	prodl,___wmul@product
  8179  001E9A  CFF4 F0D3          	movff	prodh,___wmul@product+1
  8180  001E9E  0100               	movlb	0	; () banked
  8181  001EA0  51CE               	movf	___wmul@multiplier& (0+255),w,b
  8182  001EA2  0100               	movlb	0	; () banked
  8183  001EA4  03D1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8184  001EA6  50F3               	movf	prodl,w,c
  8185  001EA8  0100               	movlb	0	; () banked
  8186  001EAA  27D3               	addwf	(___wmul@product+1)& (0+255),f,b
  8187  001EAC  0100               	movlb	0	; () banked
  8188  001EAE  51CF               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8189  001EB0  0100               	movlb	0	; () banked
  8190  001EB2  03D0               	mulwf	___wmul@multiplicand& (0+255),b
  8191  001EB4  50F3               	movf	prodl,w,c
  8192  001EB6  0100               	movlb	0	; () banked
  8193  001EB8  27D3               	addwf	(___wmul@product+1)& (0+255),f,b
  8194                           
  8195                           ; BSR set to: 0
  8196  001EBA  C0D2  F0CE         	movff	___wmul@product,?___wmul
  8197  001EBE  C0D3  F0CF         	movff	___wmul@product+1,?___wmul+1
  8198  001EC2  D000               	goto	l1254
  8199  001EC4                     l1254:
  8200                           
  8201                           ; BSR set to: 0
  8202  001EC4  0012               	return		;funcret
  8203  001EC6                     __end_of___wmul:
  8204                           	opt stack 0
  8205                           prodh	equ	0xFF4
  8206                           prodl	equ	0xFF3
  8207                           intcon	equ	0xFF2
  8208                           postinc0	equ	0xFEE
  8209                           wreg	equ	0xFE8
  8210                           postinc1	equ	0xFE6
  8211                           fsr1h	equ	0xFE2
  8212                           fsr1l	equ	0xFE1
  8213                           indf2	equ	0xFDF
  8214                           postinc2	equ	0xFDE
  8215                           postdec2	equ	0xFDD
  8216                           fsr2h	equ	0xFDA
  8217                           fsr2l	equ	0xFD9
  8218                           status	equ	0xFD8
  8219                           
  8220 ;; *************** function _CalibrateOffsets *****************
  8221 ;; Defined at:
  8222 ;;		line 461 in file "FastBuggy17_Main_Code_TUNING.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  index           1   27[BANK0 ] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;		None               void
  8229 ;; Registers used:
  8230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;Total ram usage:        3 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:   10
  8243 ;; This function calls:
  8244 ;;		_BusySensorAcq
  8245 ;;		_GetSensorReadings
  8246 ;;		_PB1pressed
  8247 ;;		_SendStatus
  8248 ;; This function is called by:
  8249 ;;		_GenerateCalibration
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text57
  8254  0013D4                     __ptext57:
  8255                           	opt stack 0
  8256  0013D4                     _CalibrateOffsets:
  8257                           	opt stack 18
  8258                           
  8259                           ;FastBuggy17_Main_Code_TUNING.c: 462: unsigned char index;
  8260                           ;FastBuggy17_Main_Code_TUNING.c: 464: SendStatus(0x03);
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;incstack = 0
  8264  0013D4  0E03               	movlw	3
  8265  0013D6  ECF2  F00E         	call	_SendStatus
  8266                           
  8267                           ;FastBuggy17_Main_Code_TUNING.c: 465: LATJ = 0x07;
  8268  0013DA  0E07               	movlw	7
  8269  0013DC  6E91               	movwf	3985,c	;volatile
  8270                           
  8271                           ;FastBuggy17_Main_Code_TUNING.c: 467: while(PB1pressed() == 0);
  8272  0013DE  D000               	goto	l5863
  8273  0013E0                     l5863:
  8274  0013E0  EC75  F00D         	call	_PB1pressed	;wreg free
  8275  0013E4  0900               	iorlw	0
  8276  0013E6  B4D8               	btfsc	status,2,c
  8277  0013E8  D7FB               	goto	l5863
  8278                           
  8279                           ;FastBuggy17_Main_Code_TUNING.c: 469: GetSensorReadings();
  8280  0013EA  EC7A  F011         	call	_GetSensorReadings	;wreg free
  8281                           
  8282                           ;FastBuggy17_Main_Code_TUNING.c: 470: while(BusySensorAcq());
  8283  0013EE  D000               	goto	l5867
  8284  0013F0                     l5867:
  8285  0013F0  EC0A  F012         	call	_BusySensorAcq	;wreg free
  8286  0013F4  0900               	iorlw	0
  8287  0013F6  A4D8               	btfss	status,2,c
  8288  0013F8  D7FB               	goto	l5867
  8289                           
  8290                           ;FastBuggy17_Main_Code_TUNING.c: 472: for(index = 0; index < 5; index++) {
  8291  0013FA  0E00               	movlw	0
  8292  0013FC  0100               	movlb	0	; () banked
  8293  0013FE  6FD9               	movwf	CalibrateOffsets@index& (0+255),b
  8294  001400                     l5871:
  8295                           
  8296                           ; BSR set to: 0
  8297  001400  0E04               	movlw	4
  8298  001402  0100               	movlb	0	; () banked
  8299  001404  65D9               	cpfsgt	CalibrateOffsets@index& (0+255),b
  8300  001406  D001               	goto	l5875
  8301                           
  8302                           ; BSR set to: 0
  8303  001408  D02A               	goto	l881
  8304  00140A                     l5875:
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;FastBuggy17_Main_Code_TUNING.c: 474: sensor_offsets[index] = sensor_readings_raw[2] - s
      +                          ensor_readings_raw[index];
  8308  00140A  0100               	movlb	0	; () banked
  8309  00140C  51D9               	movf	CalibrateOffsets@index& (0+255),w,b
  8310  00140E  0D02               	mullw	2
  8311  001410  0EAE               	movlw	low _sensor_readings_raw
  8312  001412  24F3               	addwf	prodl,w,c
  8313  001414  6ED9               	movwf	fsr2l,c
  8314  001416  0E00               	movlw	high _sensor_readings_raw
  8315  001418  20F4               	addwfc	prodh,w,c
  8316  00141A  6EDA               	movwf	fsr2h,c
  8317  00141C  CFDE F0D7          	movff	postinc2,??_CalibrateOffsets
  8318  001420  CFDD F0D8          	movff	postdec2,??_CalibrateOffsets+1
  8319  001424  0100               	movlb	0	; () banked
  8320  001426  1FD7               	comf	??_CalibrateOffsets& (0+255),f,b
  8321  001428  1FD8               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  8322  00142A  4BD7               	infsnz	??_CalibrateOffsets& (0+255),f,b
  8323  00142C  2BD8               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  8324  00142E  0100               	movlb	0	; () banked
  8325  001430  51B2               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  8326  001432  0100               	movlb	0	; () banked
  8327  001434  27D7               	addwf	??_CalibrateOffsets& (0+255),f,b
  8328  001436  0100               	movlb	0	; () banked
  8329  001438  51B3               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  8330  00143A  0100               	movlb	0	; () banked
  8331  00143C  23D8               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  8332  00143E  0100               	movlb	0	; () banked
  8333  001440  51D9               	movf	CalibrateOffsets@index& (0+255),w,b
  8334  001442  0D02               	mullw	2
  8335  001444  0E9A               	movlw	low _sensor_offsets
  8336  001446  24F3               	addwf	prodl,w,c
  8337  001448  6ED9               	movwf	fsr2l,c
  8338  00144A  0E00               	movlw	high _sensor_offsets
  8339  00144C  20F4               	addwfc	prodh,w,c
  8340  00144E  6EDA               	movwf	fsr2h,c
  8341  001450  C0D7  FFDE         	movff	??_CalibrateOffsets,postinc2
  8342  001454  C0D8  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  8343                           
  8344                           ; BSR set to: 0
  8345  001458  0100               	movlb	0	; () banked
  8346  00145A  2BD9               	incf	CalibrateOffsets@index& (0+255),f,b
  8347  00145C  D7D1               	goto	l5871
  8348  00145E                     l881:
  8349                           
  8350                           ; BSR set to: 0
  8351  00145E  0012               	return		;funcret
  8352  001460                     __end_of_CalibrateOffsets:
  8353                           	opt stack 0
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           intcon	equ	0xFF2
  8357                           postinc0	equ	0xFEE
  8358                           wreg	equ	0xFE8
  8359                           postinc1	equ	0xFE6
  8360                           fsr1h	equ	0xFE2
  8361                           fsr1l	equ	0xFE1
  8362                           indf2	equ	0xFDF
  8363                           postinc2	equ	0xFDE
  8364                           postdec2	equ	0xFDD
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function _SendStatus *****************
  8370 ;; Defined at:
  8371 ;;		line 139 in file "Wireless.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  status_code     1    wreg     const unsigned char 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  status_code     1   24[BANK0 ] const unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;		None               void
  8378 ;; Registers used:
  8379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;Total ram usage:        1 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    9
  8392 ;; This function calls:
  8393 ;;		_BusyTx
  8394 ;;		_FlushTxBuf
  8395 ;;		_PutCharTxBuf
  8396 ;;		_StartTx
  8397 ;; This function is called by:
  8398 ;;		_CalibrateOffsets
  8399 ;;		_CalibrateOnLine
  8400 ;;		_CalibrateThreshold
  8401 ;;		_SetPIDValues
  8402 ;;		_LoadPIDValues
  8403 ;;		_main
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text58
  8408  001DE4                     __ptext58:
  8409                           	opt stack 0
  8410  001DE4                     _SendStatus:
  8411                           	opt stack 20
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;incstack = 0
  8415                           ;SendStatus@status_code stored from wreg
  8416  001DE4  0100               	movlb	0	; () banked
  8417  001DE6  6FD6               	movwf	SendStatus@status_code& (0+255),b
  8418                           
  8419                           ; BSR set to: 0
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;Wireless.c: 140: while(BusyTx());
  8423  001DE8  D000               	goto	l5625
  8424  001DEA                     l5625:
  8425  001DEA  EC02  F012         	call	_BusyTx	;wreg free
  8426  001DEE  0900               	iorlw	0
  8427  001DF0  A4D8               	btfss	status,2,c
  8428  001DF2  D7FB               	goto	l5625
  8429                           
  8430                           ;Wireless.c: 141: FlushTxBuf();
  8431  001DF4  EC7F  F00F         	call	_FlushTxBuf	;wreg free
  8432                           
  8433                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  8434  001DF8  0EAA               	movlw	170
  8435  001DFA  EC56  F00E         	call	_PutCharTxBuf
  8436                           
  8437                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  8438  001DFE  0E01               	movlw	1
  8439  001E00  EC56  F00E         	call	_PutCharTxBuf
  8440                           
  8441                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  8442  001E04  0100               	movlb	0	; () banked
  8443  001E06  51D6               	movf	SendStatus@status_code& (0+255),w,b
  8444  001E08  EC56  F00E         	call	_PutCharTxBuf
  8445                           
  8446                           ;Wireless.c: 146: PutCharTxBuf('\r');
  8447  001E0C  0E0D               	movlw	13
  8448  001E0E  EC56  F00E         	call	_PutCharTxBuf
  8449                           
  8450                           ;Wireless.c: 147: PutCharTxBuf('\n');
  8451  001E12  0E0A               	movlw	10
  8452  001E14  EC56  F00E         	call	_PutCharTxBuf
  8453                           
  8454                           ;Wireless.c: 149: StartTx();
  8455  001E18  EC75  F012         	call	_StartTx	;wreg free
  8456  001E1C  0012               	return		;funcret
  8457  001E1E                     __end_of_SendStatus:
  8458                           	opt stack 0
  8459                           prodh	equ	0xFF4
  8460                           prodl	equ	0xFF3
  8461                           intcon	equ	0xFF2
  8462                           postinc0	equ	0xFEE
  8463                           wreg	equ	0xFE8
  8464                           postinc1	equ	0xFE6
  8465                           fsr1h	equ	0xFE2
  8466                           fsr1l	equ	0xFE1
  8467                           indf2	equ	0xFDF
  8468                           postinc2	equ	0xFDE
  8469                           postdec2	equ	0xFDD
  8470                           fsr2h	equ	0xFDA
  8471                           fsr2l	equ	0xFD9
  8472                           status	equ	0xFD8
  8473                           
  8474 ;; *************** function _StartTx *****************
  8475 ;; Defined at:
  8476 ;;		line 41 in file "Wireless.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;		None
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;		None               void
  8483 ;; Registers used:
  8484 ;;		wreg, status,2
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;Total ram usage:        0 bytes
  8495 ;; Hardware stack levels used:    1
  8496 ;; Hardware stack levels required when called:    7
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_SendStatus
  8501 ;;		_SendLineMode
  8502 ;;		_SendOffsets
  8503 ;;		_SendThreshold
  8504 ;;		_SendDefaultPIDValues
  8505 ;;		_SendStoredPIDValues
  8506 ;;		_SendCurrentPIDValues
  8507 ;;		_SendBattVoltageInitial
  8508 ;;		_SendPIDSetPointOnLine
  8509 ;;		_SendBattVoltage
  8510 ;;		_SendBattCurrent
  8511 ;;		_SendBattCurrentAcc
  8512 ;;		_SendPIDSetPointOffLine
  8513 ;;		_SendPIDError
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text59
  8518  0024EA                     __ptext59:
  8519                           	opt stack 0
  8520  0024EA                     _StartTx:
  8521                           	opt stack 21
  8522                           
  8523                           ;Wireless.c: 42: Tx_complete = 0;
  8524                           
  8525                           ;incstack = 0
  8526  0024EA  0E00               	movlw	0
  8527  0024EC  6E1A               	movwf	_Tx_complete,c
  8528                           
  8529                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  8530  0024EE  889D               	bsf	3997,4,c	;volatile
  8531  0024F0  0012               	return		;funcret
  8532  0024F2                     __end_of_StartTx:
  8533                           	opt stack 0
  8534                           prodh	equ	0xFF4
  8535                           prodl	equ	0xFF3
  8536                           intcon	equ	0xFF2
  8537                           postinc0	equ	0xFEE
  8538                           wreg	equ	0xFE8
  8539                           postinc1	equ	0xFE6
  8540                           fsr1h	equ	0xFE2
  8541                           fsr1l	equ	0xFE1
  8542                           indf2	equ	0xFDF
  8543                           postinc2	equ	0xFDE
  8544                           postdec2	equ	0xFDD
  8545                           fsr2h	equ	0xFDA
  8546                           fsr2l	equ	0xFD9
  8547                           status	equ	0xFD8
  8548                           
  8549 ;; *************** function _PutCharTxBuf *****************
  8550 ;; Defined at:
  8551 ;;		line 9 in file "Wireless.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  ch              1    wreg     unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  ch              1   23[BANK0 ] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;		None               void
  8558 ;; Registers used:
  8559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;Total ram usage:        2 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:    8
  8572 ;; This function calls:
  8573 ;;		___awmod
  8574 ;; This function is called by:
  8575 ;;		_SendStatus
  8576 ;;		_SendLineMode
  8577 ;;		_SendOffsets
  8578 ;;		_SendThreshold
  8579 ;;		_SendDefaultPIDValues
  8580 ;;		_SendStoredPIDValues
  8581 ;;		_SendCurrentPIDValues
  8582 ;;		_SendBattVoltageInitial
  8583 ;;		_SendPIDSetPointOnLine
  8584 ;;		_SendBattVoltage
  8585 ;;		_SendBattCurrent
  8586 ;;		_SendBattCurrentAcc
  8587 ;;		_SendPIDSetPointOffLine
  8588 ;;		_SendPIDError
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text60
  8593  001CAC                     __ptext60:
  8594                           	opt stack 0
  8595  001CAC                     _PutCharTxBuf:
  8596                           	opt stack 20
  8597                           
  8598                           ;incstack = 0
  8599                           ;PutCharTxBuf@ch stored from wreg
  8600  001CAC  0100               	movlb	0	; () banked
  8601  001CAE  6FD5               	movwf	PutCharTxBuf@ch& (0+255),b
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  8605  001CB0  5020               	movf	_put_Tx_index,w,c
  8606  001CB2  0D01               	mullw	1
  8607  001CB4  0E79               	movlw	low _Tx_buffer
  8608  001CB6  24F3               	addwf	prodl,w,c
  8609  001CB8  6ED9               	movwf	fsr2l,c
  8610  001CBA  0E00               	movlw	high _Tx_buffer
  8611  001CBC  20F4               	addwfc	prodh,w,c
  8612  001CBE  6EDA               	movwf	fsr2h,c
  8613  001CC0  C0D5  FFDF         	movff	PutCharTxBuf@ch,indf2
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  8617  001CC4  C020  F0D4         	movff	_put_Tx_index,??_PutCharTxBuf
  8618  001CC8  0E01               	movlw	1
  8619  001CCA  0100               	movlb	0	; () banked
  8620  001CCC  27D4               	addwf	??_PutCharTxBuf& (0+255),f,b
  8621  001CCE  0100               	movlb	0	; () banked
  8622  001CD0  51D4               	movf	??_PutCharTxBuf& (0+255),w,b
  8623  001CD2  0100               	movlb	0	; () banked
  8624  001CD4  6FCE               	movwf	___awmod@dividend& (0+255),b
  8625  001CD6  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  8626  001CD8  0E00               	movlw	0
  8627  001CDA  0100               	movlb	0	; () banked
  8628  001CDC  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  8629  001CDE  0E19               	movlw	25
  8630  001CE0  6FD0               	movwf	___awmod@divisor& (0+255),b
  8631  001CE2  EC41  F008         	call	___awmod	;wreg free
  8632  001CE6  0100               	movlb	0	; () banked
  8633  001CE8  51CE               	movf	?___awmod& (0+255),w,b
  8634  001CEA  6E20               	movwf	_put_Tx_index,c
  8635                           
  8636                           ; BSR set to: 0
  8637  001CEC  0012               	return		;funcret
  8638  001CEE                     __end_of_PutCharTxBuf:
  8639                           	opt stack 0
  8640                           prodh	equ	0xFF4
  8641                           prodl	equ	0xFF3
  8642                           intcon	equ	0xFF2
  8643                           postinc0	equ	0xFEE
  8644                           wreg	equ	0xFE8
  8645                           postinc1	equ	0xFE6
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           indf2	equ	0xFDF
  8649                           postinc2	equ	0xFDE
  8650                           postdec2	equ	0xFDD
  8651                           fsr2h	equ	0xFDA
  8652                           fsr2l	equ	0xFD9
  8653                           status	equ	0xFD8
  8654                           
  8655 ;; *************** function ___awmod *****************
  8656 ;; Defined at:
  8657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  dividend        2   16[BANK0 ] int 
  8660 ;;  divisor         2   18[BANK0 ] int 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  sign            1   21[BANK0 ] unsigned char 
  8663 ;;  counter         1   20[BANK0 ] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  2   16[BANK0 ] int 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;Total ram usage:        6 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    7
  8680 ;; This function calls:
  8681 ;;		Nothing
  8682 ;; This function is called by:
  8683 ;;		_PutCharTxBuf
  8684 ;;		_PutCharRxBuf
  8685 ;;		_GetCharRxBuf
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text61
  8690  001082                     __ptext61:
  8691                           	opt stack 0
  8692  001082                     ___awmod:
  8693                           	opt stack 20
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;incstack = 0
  8697  001082  0E00               	movlw	0
  8698  001084  0100               	movlb	0	; () banked
  8699  001086  6FD3               	movwf	___awmod@sign& (0+255),b
  8700                           
  8701                           ; BSR set to: 0
  8702  001088  0100               	movlb	0	; () banked
  8703  00108A  AFCF               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8704  00108C  D009               	goto	l5483
  8705                           
  8706                           ; BSR set to: 0
  8707  00108E  0100               	movlb	0	; () banked
  8708  001090  6DCE               	negf	___awmod@dividend& (0+255),b
  8709  001092  1FCF               	comf	(___awmod@dividend+1)& (0+255),f,b
  8710  001094  B0D8               	btfsc	status,0,c
  8711  001096  2BCF               	incf	(___awmod@dividend+1)& (0+255),f,b
  8712                           
  8713                           ; BSR set to: 0
  8714  001098  0E01               	movlw	1
  8715  00109A  0100               	movlb	0	; () banked
  8716  00109C  6FD3               	movwf	___awmod@sign& (0+255),b
  8717  00109E  D000               	goto	l5483
  8718  0010A0                     l5483:
  8719                           
  8720                           ; BSR set to: 0
  8721  0010A0  0100               	movlb	0	; () banked
  8722  0010A2  AFD1               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8723  0010A4  D006               	goto	l5487
  8724                           
  8725                           ; BSR set to: 0
  8726  0010A6  0100               	movlb	0	; () banked
  8727  0010A8  6DD0               	negf	___awmod@divisor& (0+255),b
  8728  0010AA  1FD1               	comf	(___awmod@divisor+1)& (0+255),f,b
  8729  0010AC  B0D8               	btfsc	status,0,c
  8730  0010AE  2BD1               	incf	(___awmod@divisor+1)& (0+255),f,b
  8731  0010B0  D000               	goto	l5487
  8732  0010B2                     l5487:
  8733                           
  8734                           ; BSR set to: 0
  8735  0010B2  0100               	movlb	0	; () banked
  8736  0010B4  51D0               	movf	___awmod@divisor& (0+255),w,b
  8737  0010B6  0100               	movlb	0	; () banked
  8738  0010B8  11D1               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8739  0010BA  B4D8               	btfsc	status,2,c
  8740  0010BC  D02B               	goto	l5503
  8741                           
  8742                           ; BSR set to: 0
  8743  0010BE  0E01               	movlw	1
  8744  0010C0  0100               	movlb	0	; () banked
  8745  0010C2  6FD2               	movwf	___awmod@counter& (0+255),b
  8746  0010C4  D007               	goto	l5493
  8747  0010C6                     l5491:
  8748                           
  8749                           ; BSR set to: 0
  8750  0010C6  0100               	movlb	0	; () banked
  8751  0010C8  90D8               	bcf	status,0,c
  8752  0010CA  37D0               	rlcf	___awmod@divisor& (0+255),f,b
  8753  0010CC  37D1               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8754  0010CE  0100               	movlb	0	; () banked
  8755  0010D0  2BD2               	incf	___awmod@counter& (0+255),f,b
  8756  0010D2  D000               	goto	l5493
  8757  0010D4                     l5493:
  8758                           
  8759                           ; BSR set to: 0
  8760  0010D4  0100               	movlb	0	; () banked
  8761  0010D6  BFD1               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  8762  0010D8  D002               	goto	l5495
  8763  0010DA  D7F5               	goto	l5491
  8764                           
  8765                           ; BSR set to: 0
  8766  0010DC  D000               	goto	l5495
  8767  0010DE                     l5495:
  8768                           
  8769                           ; BSR set to: 0
  8770  0010DE  0100               	movlb	0	; () banked
  8771  0010E0  51D0               	movf	___awmod@divisor& (0+255),w,b
  8772  0010E2  0100               	movlb	0	; () banked
  8773  0010E4  5DCE               	subwf	___awmod@dividend& (0+255),w,b
  8774  0010E6  0100               	movlb	0	; () banked
  8775  0010E8  51D1               	movf	(___awmod@divisor+1)& (0+255),w,b
  8776  0010EA  0100               	movlb	0	; () banked
  8777  0010EC  59CF               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8778  0010EE  A0D8               	btfss	status,0,c
  8779  0010F0  D009               	goto	l5499
  8780                           
  8781                           ; BSR set to: 0
  8782  0010F2  0100               	movlb	0	; () banked
  8783  0010F4  51D0               	movf	___awmod@divisor& (0+255),w,b
  8784  0010F6  0100               	movlb	0	; () banked
  8785  0010F8  5FCE               	subwf	___awmod@dividend& (0+255),f,b
  8786  0010FA  0100               	movlb	0	; () banked
  8787  0010FC  51D1               	movf	(___awmod@divisor+1)& (0+255),w,b
  8788  0010FE  0100               	movlb	0	; () banked
  8789  001100  5BCF               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8790  001102  D000               	goto	l5499
  8791  001104                     l5499:
  8792                           
  8793                           ; BSR set to: 0
  8794  001104  0100               	movlb	0	; () banked
  8795  001106  90D8               	bcf	status,0,c
  8796  001108  33D1               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8797  00110A  33D0               	rrcf	___awmod@divisor& (0+255),f,b
  8798                           
  8799                           ; BSR set to: 0
  8800  00110C  0100               	movlb	0	; () banked
  8801  00110E  2FD2               	decfsz	___awmod@counter& (0+255),f,b
  8802  001110  D7E6               	goto	l5495
  8803                           
  8804                           ; BSR set to: 0
  8805  001112  D000               	goto	l5503
  8806  001114                     l5503:
  8807                           
  8808                           ; BSR set to: 0
  8809  001114  0100               	movlb	0	; () banked
  8810  001116  51D3               	movf	___awmod@sign& (0+255),w,b
  8811  001118  0100               	movlb	0	; () banked
  8812  00111A  B4D8               	btfsc	status,2,c
  8813  00111C  D006               	goto	l5507
  8814                           
  8815                           ; BSR set to: 0
  8816  00111E  0100               	movlb	0	; () banked
  8817  001120  6DCE               	negf	___awmod@dividend& (0+255),b
  8818  001122  1FCF               	comf	(___awmod@dividend+1)& (0+255),f,b
  8819  001124  B0D8               	btfsc	status,0,c
  8820  001126  2BCF               	incf	(___awmod@dividend+1)& (0+255),f,b
  8821  001128  D000               	goto	l5507
  8822  00112A                     l5507:
  8823                           
  8824                           ; BSR set to: 0
  8825  00112A  C0CE  F0CE         	movff	___awmod@dividend,?___awmod
  8826  00112E  C0CF  F0CF         	movff	___awmod@dividend+1,?___awmod+1
  8827  001132  D000               	goto	l1460
  8828  001134                     l1460:
  8829                           
  8830                           ; BSR set to: 0
  8831  001134  0012               	return		;funcret
  8832  001136                     __end_of___awmod:
  8833                           	opt stack 0
  8834                           prodh	equ	0xFF4
  8835                           prodl	equ	0xFF3
  8836                           intcon	equ	0xFF2
  8837                           postinc0	equ	0xFEE
  8838                           wreg	equ	0xFE8
  8839                           postinc1	equ	0xFE6
  8840                           fsr1h	equ	0xFE2
  8841                           fsr1l	equ	0xFE1
  8842                           indf2	equ	0xFDF
  8843                           postinc2	equ	0xFDE
  8844                           postdec2	equ	0xFDD
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _BusyTx *****************
  8850 ;; Defined at:
  8851 ;;		line 131 in file "Wireless.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      unsigned char 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    7
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_SendStatus
  8876 ;;		_SendLineMode
  8877 ;;		_SendOffsets
  8878 ;;		_SendThreshold
  8879 ;;		_SendDefaultPIDValues
  8880 ;;		_SendStoredPIDValues
  8881 ;;		_SendCurrentPIDValues
  8882 ;;		_SendBattVoltageInitial
  8883 ;;		_SendPIDSetPointOnLine
  8884 ;;		_SendBattVoltage
  8885 ;;		_SendBattCurrent
  8886 ;;		_SendBattCurrentAcc
  8887 ;;		_SendPIDSetPointOffLine
  8888 ;;		_SendPIDError
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text62
  8893  002404                     __ptext62:
  8894                           	opt stack 0
  8895  002404                     _BusyTx:
  8896                           	opt stack 21
  8897                           
  8898                           ;Wireless.c: 132: return(!Tx_complete);
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;incstack = 0
  8902  002404  501A               	movf	_Tx_complete,w,c
  8903  002406  A4D8               	btfss	status,2,c
  8904  002408  D002               	goto	u4560
  8905  00240A  0E01               	movlw	1
  8906  00240C  D002               	goto	l324
  8907  00240E                     u4560:
  8908  00240E  0E00               	movlw	0
  8909  002410  D000               	goto	l324
  8910  002412                     l324:
  8911  002412  0012               	return		;funcret
  8912  002414                     __end_of_BusyTx:
  8913                           	opt stack 0
  8914                           prodh	equ	0xFF4
  8915                           prodl	equ	0xFF3
  8916                           intcon	equ	0xFF2
  8917                           postinc0	equ	0xFEE
  8918                           wreg	equ	0xFE8
  8919                           postinc1	equ	0xFE6
  8920                           fsr1h	equ	0xFE2
  8921                           fsr1l	equ	0xFE1
  8922                           indf2	equ	0xFDF
  8923                           postinc2	equ	0xFDE
  8924                           postdec2	equ	0xFDD
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function _PB1pressed *****************
  8930 ;; Defined at:
  8931 ;;		line 406 in file "FastBuggy17_Main_Code_TUNING.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      unsigned char 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;Total ram usage:        0 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    9
  8952 ;; This function calls:
  8953 ;;		_CommandAvailable
  8954 ;;		_GetCommand
  8955 ;;		_ReadMillis2
  8956 ;;		_ResetMillis2
  8957 ;; This function is called by:
  8958 ;;		_CalibrateOffsets
  8959 ;;		_CalibrateOnLine
  8960 ;;		_CalibrateThreshold
  8961 ;;		_LoadPIDValues
  8962 ;;		_main
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text63
  8967  001AEA                     __ptext63:
  8968                           	opt stack 0
  8969  001AEA                     _PB1pressed:
  8970                           	opt stack 21
  8971                           
  8972                           ;FastBuggy17_Main_Code_TUNING.c: 407: if(CommandAvailable() == 1) {
  8973                           
  8974                           ;incstack = 0
  8975  001AEA  EC3F  F012         	call	_CommandAvailable	;wreg free
  8976  001AEE  06E8               	decf	wreg,f,c
  8977  001AF0  A4D8               	btfss	status,2,c
  8978  001AF2  D00B               	goto	l843
  8979                           
  8980                           ;FastBuggy17_Main_Code_TUNING.c: 408: if(GetCommand() == 0x05) {
  8981  001AF4  EC79  F012         	call	_GetCommand	;wreg free
  8982  001AF8  0A05               	xorlw	5
  8983  001AFA  A4D8               	btfss	status,2,c
  8984  001AFC  D01F               	goto	l5753
  8985  001AFE  D01B               	goto	l5747
  8986                           
  8987                           ;FastBuggy17_Main_Code_TUNING.c: 409: return(1);
  8988  001B00  D022               	goto	l845
  8989                           
  8990                           ;FastBuggy17_Main_Code_TUNING.c: 410: }
  8991  001B02  D01F               	goto	l5757
  8992  001B04  D01B               	goto	l5753
  8993                           
  8994                           ;FastBuggy17_Main_Code_TUNING.c: 411: else {
  8995                           ;FastBuggy17_Main_Code_TUNING.c: 412: return(0);
  8996  001B06  D01F               	goto	l845
  8997                           
  8998                           ;FastBuggy17_Main_Code_TUNING.c: 413: }
  8999                           ;FastBuggy17_Main_Code_TUNING.c: 414: }
  9000  001B08  D01C               	goto	l5757
  9001  001B0A                     l843:
  9002                           
  9003                           ;FastBuggy17_Main_Code_TUNING.c: 415: else if(PORTBbits.RB1 == 0) {
  9004  001B0A  B281               	btfsc	3969,1,c	;volatile
  9005  001B0C  D003               	goto	l848
  9006  001B0E  D016               	goto	l5753
  9007                           
  9008                           ;FastBuggy17_Main_Code_TUNING.c: 416: return(0);
  9009  001B10  D01A               	goto	l845
  9010                           
  9011                           ;FastBuggy17_Main_Code_TUNING.c: 417: }
  9012  001B12  D017               	goto	l5757
  9013  001B14                     l848:
  9014                           
  9015                           ;FastBuggy17_Main_Code_TUNING.c: 418: else if(PORTBbits.RB1 == 1) {
  9016  001B14  A281               	btfss	3969,1,c	;volatile
  9017  001B16  D015               	goto	l5757
  9018                           
  9019                           ;FastBuggy17_Main_Code_TUNING.c: 419: ResetMillis2();
  9020  001B18  EC6B  F012         	call	_ResetMillis2	;wreg free
  9021                           
  9022                           ;FastBuggy17_Main_Code_TUNING.c: 420: while(ReadMillis2() < 10);
  9023  001B1C  D000               	goto	l5745
  9024  001B1E                     l5745:
  9025  001B1E  EC70  F012         	call	_ReadMillis2	;wreg free
  9026  001B22  0100               	movlb	0	; () banked
  9027  001B24  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  9028  001B26  E105               	bnz	u4810
  9029  001B28  0E0A               	movlw	10
  9030  001B2A  0100               	movlb	0	; () banked
  9031  001B2C  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  9032  001B2E  A0D8               	btfss	status,0,c
  9033  001B30  D7F6               	goto	l5745
  9034  001B32                     u4810:
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;FastBuggy17_Main_Code_TUNING.c: 421: if(PORTBbits.RB1 == 1) {
  9038  001B32  A281               	btfss	3969,1,c	;volatile
  9039  001B34  D003               	goto	l5753
  9040  001B36                     l5747:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;FastBuggy17_Main_Code_TUNING.c: 422: return(1);
  9044  001B36  0E01               	movlw	1
  9045                           
  9046                           ; BSR set to: 0
  9047  001B38  D006               	goto	l845
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;FastBuggy17_Main_Code_TUNING.c: 423: }
  9051  001B3A  D003               	goto	l5757
  9052  001B3C                     l5753:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;FastBuggy17_Main_Code_TUNING.c: 424: else {
  9056                           ;FastBuggy17_Main_Code_TUNING.c: 425: return(0);
  9057  001B3C  0E00               	movlw	0
  9058                           
  9059                           ; BSR set to: 0
  9060  001B3E  D003               	goto	l845
  9061                           
  9062                           ; BSR set to: 0
  9063                           
  9064                           ; BSR set to: 0
  9065                           
  9066                           ; BSR set to: 0
  9067  001B40  D000               	goto	l5757
  9068  001B42                     l5757:
  9069                           
  9070                           ;FastBuggy17_Main_Code_TUNING.c: 426: }
  9071                           ;FastBuggy17_Main_Code_TUNING.c: 427: }
  9072                           ;FastBuggy17_Main_Code_TUNING.c: 429: return(0);
  9073  001B42  0E00               	movlw	0
  9074  001B44  D000               	goto	l845
  9075  001B46                     l845:
  9076  001B46  0012               	return		;funcret
  9077  001B48                     __end_of_PB1pressed:
  9078                           	opt stack 0
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           postinc0	equ	0xFEE
  9083                           wreg	equ	0xFE8
  9084                           postinc1	equ	0xFE6
  9085                           fsr1h	equ	0xFE2
  9086                           fsr1l	equ	0xFE1
  9087                           indf2	equ	0xFDF
  9088                           postinc2	equ	0xFDE
  9089                           postdec2	equ	0xFDD
  9090                           fsr2h	equ	0xFDA
  9091                           fsr2l	equ	0xFD9
  9092                           status	equ	0xFD8
  9093                           
  9094 ;; *************** function _ResetMillis2 *****************
  9095 ;; Defined at:
  9096 ;;		line 45 in file "MillisecondTimer.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;		None
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;		None               void
  9103 ;; Registers used:
  9104 ;;		wreg, status,2
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    7
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_PB1pressed
  9121 ;;		_PB2pressed
  9122 ;;		_main
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text64
  9127  0024D6                     __ptext64:
  9128                           	opt stack 0
  9129  0024D6                     _ResetMillis2:
  9130                           	opt stack 23
  9131                           
  9132                           ;MillisecondTimer.c: 47: millisecond_COUNT2 = 0;
  9133                           
  9134                           ;incstack = 0
  9135  0024D6  0E00               	movlw	0
  9136  0024D8  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  9137  0024DA  0E00               	movlw	0
  9138  0024DC  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  9139  0024DE  0012               	return		;funcret
  9140  0024E0                     __end_of_ResetMillis2:
  9141                           	opt stack 0
  9142                           prodh	equ	0xFF4
  9143                           prodl	equ	0xFF3
  9144                           intcon	equ	0xFF2
  9145                           postinc0	equ	0xFEE
  9146                           wreg	equ	0xFE8
  9147                           postinc1	equ	0xFE6
  9148                           fsr1h	equ	0xFE2
  9149                           fsr1l	equ	0xFE1
  9150                           indf2	equ	0xFDF
  9151                           postinc2	equ	0xFDE
  9152                           postdec2	equ	0xFDD
  9153                           fsr2h	equ	0xFDA
  9154                           fsr2l	equ	0xFD9
  9155                           status	equ	0xFD8
  9156                           
  9157 ;; *************** function _ReadMillis2 *****************
  9158 ;; Defined at:
  9159 ;;		line 19 in file "MillisecondTimer.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  2   16[BANK0 ] unsigned int 
  9166 ;; Registers used:
  9167 ;;		None
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;Total ram usage:        2 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    7
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_PB1pressed
  9184 ;;		_PB2pressed
  9185 ;;		_main
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text65
  9190  0024E0                     __ptext65:
  9191                           	opt stack 0
  9192  0024E0                     _ReadMillis2:
  9193                           	opt stack 23
  9194                           
  9195                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  9196                           
  9197                           ;incstack = 0
  9198  0024E0  C011  F0CE         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  9199  0024E4  C012  F0CF         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  9200  0024E8  0012               	return		;funcret
  9201  0024EA                     __end_of_ReadMillis2:
  9202                           	opt stack 0
  9203                           prodh	equ	0xFF4
  9204                           prodl	equ	0xFF3
  9205                           intcon	equ	0xFF2
  9206                           postinc0	equ	0xFEE
  9207                           wreg	equ	0xFE8
  9208                           postinc1	equ	0xFE6
  9209                           fsr1h	equ	0xFE2
  9210                           fsr1l	equ	0xFE1
  9211                           indf2	equ	0xFDF
  9212                           postinc2	equ	0xFDE
  9213                           postdec2	equ	0xFDD
  9214                           fsr2h	equ	0xFDA
  9215                           fsr2l	equ	0xFD9
  9216                           status	equ	0xFD8
  9217                           
  9218 ;; *************** function _GetCommand *****************
  9219 ;; Defined at:
  9220 ;;		line 405 in file "Wireless.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      unsigned char 
  9227 ;; Registers used:
  9228 ;;		wreg, status,2, status,0, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9238 ;;Total ram usage:        0 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    8
  9241 ;; This function calls:
  9242 ;;		_Read1USART
  9243 ;; This function is called by:
  9244 ;;		_PB1pressed
  9245 ;;		_PB2pressed
  9246 ;;		_main
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           	psect	text66
  9251  0024F2                     __ptext66:
  9252                           	opt stack 0
  9253  0024F2                     _GetCommand:
  9254                           	opt stack 21
  9255                           
  9256                           ;Wireless.c: 407: return(Read1USART());
  9257                           
  9258                           ;incstack = 0
  9259  0024F2  EC97  F010         	call	_Read1USART	;wreg free
  9260  0024F6  D000               	goto	l461
  9261  0024F8                     l461:
  9262  0024F8  0012               	return		;funcret
  9263  0024FA                     __end_of_GetCommand:
  9264                           	opt stack 0
  9265                           prodh	equ	0xFF4
  9266                           prodl	equ	0xFF3
  9267                           intcon	equ	0xFF2
  9268                           postinc0	equ	0xFEE
  9269                           wreg	equ	0xFE8
  9270                           postinc1	equ	0xFE6
  9271                           fsr1h	equ	0xFE2
  9272                           fsr1l	equ	0xFE1
  9273                           indf2	equ	0xFDF
  9274                           postinc2	equ	0xFDE
  9275                           postdec2	equ	0xFDD
  9276                           fsr2h	equ	0xFDA
  9277                           fsr2l	equ	0xFD9
  9278                           status	equ	0xFD8
  9279                           
  9280 ;; *************** function _Read1USART *****************
  9281 ;; Defined at:
  9282 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;  data            1   16[BANK0 ] unsigned char 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      unsigned char 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;Total ram usage:        1 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    7
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_GetCommand
  9307 ;;		_SetPIDValues
  9308 ;;		_WirelessRx_ISR
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text67
  9313  00212E                     __ptext67:
  9314                           	opt stack 0
  9315  00212E                     _Read1USART:
  9316                           	opt stack 22
  9317                           
  9318                           ;incstack = 0
  9319  00212E  0EF2               	movlw	242
  9320  002130  161B               	andwf	_USART1_Status,f,c
  9321  002132  ACAB               	btfss	4011,6,c	;volatile
  9322  002134  D005               	goto	l1236
  9323  002136  901B               	bcf	_USART1_Status,0,c
  9324  002138  A0AB               	btfss	4011,0,c	;volatile
  9325  00213A  D002               	goto	l1236
  9326  00213C  801B               	bsf	_USART1_Status,0,c
  9327  00213E  D000               	goto	l1236
  9328  002140                     l1236:
  9329  002140  B4AB               	btfsc	4011,2,c	;volatile
  9330  002142  841B               	bsf	_USART1_Status,2,c
  9331  002144  B2AB               	btfsc	4011,1,c	;volatile
  9332  002146  861B               	bsf	_USART1_Status,3,c
  9333  002148  CFAE F0CE          	movff	4014,Read1USART@data	;volatile
  9334  00214C  0100               	movlb	0	; () banked
  9335  00214E  51CE               	movf	Read1USART@data& (0+255),w,b
  9336  002150  D000               	goto	l1240
  9337  002152                     l1240:
  9338                           
  9339                           ; BSR set to: 0
  9340  002152  0012               	return		;funcret
  9341  002154                     __end_of_Read1USART:
  9342                           	opt stack 0
  9343                           prodh	equ	0xFF4
  9344                           prodl	equ	0xFF3
  9345                           intcon	equ	0xFF2
  9346                           postinc0	equ	0xFEE
  9347                           wreg	equ	0xFE8
  9348                           postinc1	equ	0xFE6
  9349                           fsr1h	equ	0xFE2
  9350                           fsr1l	equ	0xFE1
  9351                           indf2	equ	0xFDF
  9352                           postinc2	equ	0xFDE
  9353                           postdec2	equ	0xFDD
  9354                           fsr2h	equ	0xFDA
  9355                           fsr2l	equ	0xFD9
  9356                           status	equ	0xFD8
  9357                           
  9358 ;; *************** function _CommandAvailable *****************
  9359 ;; Defined at:
  9360 ;;		line 401 in file "Wireless.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      unsigned char 
  9367 ;; Registers used:
  9368 ;;		wreg
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;Total ram usage:        0 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    7
  9381 ;; This function calls:
  9382 ;;		Nothing
  9383 ;; This function is called by:
  9384 ;;		_PB1pressed
  9385 ;;		_PB2pressed
  9386 ;;		_main
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text68
  9391  00247E                     __ptext68:
  9392                           	opt stack 0
  9393  00247E                     _CommandAvailable:
  9394                           	opt stack 22
  9395                           
  9396                           ;Wireless.c: 402: return((PIR1bits.RCIF));
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;incstack = 0
  9400  00247E  AA9E               	btfss	3998,5,c	;volatile
  9401  002480  D002               	goto	u4580
  9402  002482  0E01               	movlw	1
  9403  002484  D002               	goto	l458
  9404  002486                     u4580:
  9405  002486  0E00               	movlw	0
  9406  002488  D000               	goto	l458
  9407  00248A                     l458:
  9408  00248A  0012               	return		;funcret
  9409  00248C                     __end_of_CommandAvailable:
  9410                           	opt stack 0
  9411                           prodh	equ	0xFF4
  9412                           prodl	equ	0xFF3
  9413                           intcon	equ	0xFF2
  9414                           postinc0	equ	0xFEE
  9415                           wreg	equ	0xFE8
  9416                           postinc1	equ	0xFE6
  9417                           fsr1h	equ	0xFE2
  9418                           fsr1l	equ	0xFE1
  9419                           indf2	equ	0xFDF
  9420                           postinc2	equ	0xFDE
  9421                           postdec2	equ	0xFDD
  9422                           fsr2h	equ	0xFDA
  9423                           fsr2l	equ	0xFD9
  9424                           status	equ	0xFD8
  9425                           
  9426 ;; *************** function _GetSensorReadings *****************
  9427 ;; Defined at:
  9428 ;;		line 285 in file "FastBuggy17_Main_Code_TUNING.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;		None               void
  9435 ;; Registers used:
  9436 ;;		wreg, status,2, status,0, cstack
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:    9
  9449 ;; This function calls:
  9450 ;;		_ConvertADC
  9451 ;;		_SetADCChannel
  9452 ;; This function is called by:
  9453 ;;		_CalibrateOffsets
  9454 ;;		_CalibrateOnLine
  9455 ;;		_CalibrateThreshold
  9456 ;;		_main
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text69
  9461  0022F4                     __ptext69:
  9462                           	opt stack 0
  9463  0022F4                     _GetSensorReadings:
  9464                           	opt stack 18
  9465                           
  9466                           ;FastBuggy17_Main_Code_TUNING.c: 287: sensor_acq_index = 0;
  9467                           
  9468                           ;incstack = 0
  9469  0022F4  0E00               	movlw	0
  9470  0022F6  6E23               	movwf	_sensor_acq_index,c	;volatile
  9471                           
  9472                           ;FastBuggy17_Main_Code_TUNING.c: 288: sensor_acq_done = 0;
  9473  0022F8  0E00               	movlw	0
  9474  0022FA  6E22               	movwf	_sensor_acq_done,c	;volatile
  9475                           
  9476                           ;FastBuggy17_Main_Code_TUNING.c: 289: SetADCChannel(sensor_acq_index);
  9477  0022FC  5023               	movf	_sensor_acq_index,w,c	;volatile
  9478  0022FE  EC8F  F006         	call	_SetADCChannel
  9479                           
  9480                           ;FastBuggy17_Main_Code_TUNING.c: 290: ConvertADC();
  9481  002302  EC8E  F012         	call	_ConvertADC	;wreg free
  9482                           
  9483                           ;FastBuggy17_Main_Code_TUNING.c: 291: PIE1bits.ADIE = 1;
  9484  002306  8C9D               	bsf	3997,6,c	;volatile
  9485  002308  0012               	return		;funcret
  9486  00230A                     __end_of_GetSensorReadings:
  9487                           	opt stack 0
  9488                           prodh	equ	0xFF4
  9489                           prodl	equ	0xFF3
  9490                           intcon	equ	0xFF2
  9491                           postinc0	equ	0xFEE
  9492                           wreg	equ	0xFE8
  9493                           postinc1	equ	0xFE6
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           indf2	equ	0xFDF
  9497                           postinc2	equ	0xFDE
  9498                           postdec2	equ	0xFDD
  9499                           fsr2h	equ	0xFDA
  9500                           fsr2l	equ	0xFD9
  9501                           status	equ	0xFD8
  9502                           
  9503 ;; *************** function _SetADCChannel *****************
  9504 ;; Defined at:
  9505 ;;		line 227 in file "FastBuggy17_Main_Code_TUNING.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  channel         1    wreg     unsigned char 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;  channel         1   18[BANK0 ] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;		None               void
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;Total ram usage:        1 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    8
  9526 ;; This function calls:
  9527 ;;		_SetChanADC
  9528 ;; This function is called by:
  9529 ;;		_GetSensorReadings
  9530 ;;		_CalibrateThreshold
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text70
  9535  000D1E                     __ptext70:
  9536                           	opt stack 0
  9537  000D1E                     _SetADCChannel:
  9538                           	opt stack 19
  9539                           
  9540                           ;incstack = 0
  9541                           ;SetADCChannel@channel stored from wreg
  9542  000D1E  0100               	movlb	0	; () banked
  9543  000D20  6FD0               	movwf	SetADCChannel@channel& (0+255),b
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;FastBuggy17_Main_Code_TUNING.c: 229: switch (channel) {
  9547  000D22  D040               	goto	l5585
  9548  000D24                     l5551:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;FastBuggy17_Main_Code_TUNING.c: 231: SetChanADC(0b10000111);
  9552  000D24  0E87               	movlw	135
  9553  000D26  EC34  F011         	call	_SetChanADC
  9554                           
  9555                           ;FastBuggy17_Main_Code_TUNING.c: 232: break;
  9556  000D2A  D06F               	goto	l793
  9557  000D2C                     l5553:
  9558                           
  9559                           ;FastBuggy17_Main_Code_TUNING.c: 234: SetChanADC(0b10001111);
  9560  000D2C  0E8F               	movlw	143
  9561  000D2E  EC34  F011         	call	_SetChanADC
  9562                           
  9563                           ;FastBuggy17_Main_Code_TUNING.c: 235: break;
  9564  000D32  D06B               	goto	l793
  9565  000D34                     l5555:
  9566                           
  9567                           ;FastBuggy17_Main_Code_TUNING.c: 237: SetChanADC(0b10010111);
  9568  000D34  0E97               	movlw	151
  9569  000D36  EC34  F011         	call	_SetChanADC
  9570                           
  9571                           ;FastBuggy17_Main_Code_TUNING.c: 238: break;
  9572  000D3A  D067               	goto	l793
  9573  000D3C                     l5557:
  9574                           
  9575                           ;FastBuggy17_Main_Code_TUNING.c: 240: SetChanADC(0b10011111);
  9576  000D3C  0E9F               	movlw	159
  9577  000D3E  EC34  F011         	call	_SetChanADC
  9578                           
  9579                           ;FastBuggy17_Main_Code_TUNING.c: 241: break;
  9580  000D42  D063               	goto	l793
  9581  000D44                     l5559:
  9582                           
  9583                           ;FastBuggy17_Main_Code_TUNING.c: 243: SetChanADC(0b10100111);
  9584  000D44  0EA7               	movlw	167
  9585  000D46  EC34  F011         	call	_SetChanADC
  9586                           
  9587                           ;FastBuggy17_Main_Code_TUNING.c: 244: break;
  9588  000D4A  D05F               	goto	l793
  9589  000D4C                     l5561:
  9590                           
  9591                           ;FastBuggy17_Main_Code_TUNING.c: 246: SetChanADC(0b10101111);
  9592  000D4C  0EAF               	movlw	175
  9593  000D4E  EC34  F011         	call	_SetChanADC
  9594                           
  9595                           ;FastBuggy17_Main_Code_TUNING.c: 247: break;
  9596  000D52  D05B               	goto	l793
  9597  000D54                     l5563:
  9598                           
  9599                           ;FastBuggy17_Main_Code_TUNING.c: 249: SetChanADC(0b10110111);
  9600  000D54  0EB7               	movlw	183
  9601  000D56  EC34  F011         	call	_SetChanADC
  9602                           
  9603                           ;FastBuggy17_Main_Code_TUNING.c: 250: break;
  9604  000D5A  D057               	goto	l793
  9605  000D5C                     l5565:
  9606                           
  9607                           ;FastBuggy17_Main_Code_TUNING.c: 252: SetChanADC(0b10111111);
  9608  000D5C  0EBF               	movlw	191
  9609  000D5E  EC34  F011         	call	_SetChanADC
  9610                           
  9611                           ;FastBuggy17_Main_Code_TUNING.c: 253: break;
  9612  000D62  D053               	goto	l793
  9613  000D64                     l5567:
  9614                           
  9615                           ;FastBuggy17_Main_Code_TUNING.c: 255: SetChanADC(0b11000111);
  9616  000D64  0EC7               	movlw	199
  9617  000D66  EC34  F011         	call	_SetChanADC
  9618                           
  9619                           ;FastBuggy17_Main_Code_TUNING.c: 256: break;
  9620  000D6A  D04F               	goto	l793
  9621  000D6C                     l5569:
  9622                           
  9623                           ;FastBuggy17_Main_Code_TUNING.c: 258: SetChanADC(0b11001111);
  9624  000D6C  0ECF               	movlw	207
  9625  000D6E  EC34  F011         	call	_SetChanADC
  9626                           
  9627                           ;FastBuggy17_Main_Code_TUNING.c: 259: break;
  9628  000D72  D04B               	goto	l793
  9629  000D74                     l5571:
  9630                           
  9631                           ;FastBuggy17_Main_Code_TUNING.c: 261: SetChanADC(0b11010111);
  9632  000D74  0ED7               	movlw	215
  9633  000D76  EC34  F011         	call	_SetChanADC
  9634                           
  9635                           ;FastBuggy17_Main_Code_TUNING.c: 262: break;
  9636  000D7A  D047               	goto	l793
  9637  000D7C                     l5573:
  9638                           
  9639                           ;FastBuggy17_Main_Code_TUNING.c: 264: SetChanADC(0b11011111);
  9640  000D7C  0EDF               	movlw	223
  9641  000D7E  EC34  F011         	call	_SetChanADC
  9642                           
  9643                           ;FastBuggy17_Main_Code_TUNING.c: 265: break;
  9644  000D82  D043               	goto	l793
  9645  000D84                     l5575:
  9646                           
  9647                           ;FastBuggy17_Main_Code_TUNING.c: 267: SetChanADC(0b11100111);
  9648  000D84  0EE7               	movlw	231
  9649  000D86  EC34  F011         	call	_SetChanADC
  9650                           
  9651                           ;FastBuggy17_Main_Code_TUNING.c: 268: break;
  9652  000D8A  D03F               	goto	l793
  9653  000D8C                     l5577:
  9654                           
  9655                           ;FastBuggy17_Main_Code_TUNING.c: 270: SetChanADC(0b11101111);
  9656  000D8C  0EEF               	movlw	239
  9657  000D8E  EC34  F011         	call	_SetChanADC
  9658                           
  9659                           ;FastBuggy17_Main_Code_TUNING.c: 271: break;
  9660  000D92  D03B               	goto	l793
  9661  000D94                     l5579:
  9662                           
  9663                           ;FastBuggy17_Main_Code_TUNING.c: 273: SetChanADC(0b11110111);
  9664  000D94  0EF7               	movlw	247
  9665  000D96  EC34  F011         	call	_SetChanADC
  9666                           
  9667                           ;FastBuggy17_Main_Code_TUNING.c: 274: break;
  9668  000D9A  D037               	goto	l793
  9669  000D9C                     l5581:
  9670                           
  9671                           ;FastBuggy17_Main_Code_TUNING.c: 276: SetChanADC(0b11111111);
  9672  000D9C  0EFF               	movlw	255
  9673  000D9E  EC34  F011         	call	_SetChanADC
  9674                           
  9675                           ;FastBuggy17_Main_Code_TUNING.c: 280: }
  9676                           
  9677                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
  9678                           
  9679                           ;FastBuggy17_Main_Code_TUNING.c: 278: default:
  9680                           
  9681                           ;FastBuggy17_Main_Code_TUNING.c: 277: break;
  9682  000DA2  D033               	goto	l793
  9683  000DA4                     l5585:
  9684  000DA4  0100               	movlb	0	; () banked
  9685  000DA6  51D0               	movf	SetADCChannel@channel& (0+255),w,b
  9686                           
  9687                           ; Switch size 1, requested type "space"
  9688                           ; Number of cases is 16, Range of values is 0 to 15
  9689                           ; switch strategies available:
  9690                           ; Name         Instructions Cycles
  9691                           ; simple_byte           49    25 (average)
  9692                           ;	Chosen strategy is simple_byte
  9693  000DA8  0A00               	xorlw	0	; case 0
  9694  000DAA  B4D8               	btfsc	status,2,c
  9695  000DAC  D7BB               	goto	l5551
  9696  000DAE  0A01               	xorlw	1	; case 1
  9697  000DB0  B4D8               	btfsc	status,2,c
  9698  000DB2  D7BC               	goto	l5553
  9699  000DB4  0A03               	xorlw	3	; case 2
  9700  000DB6  B4D8               	btfsc	status,2,c
  9701  000DB8  D7BD               	goto	l5555
  9702  000DBA  0A01               	xorlw	1	; case 3
  9703  000DBC  B4D8               	btfsc	status,2,c
  9704  000DBE  D7BE               	goto	l5557
  9705  000DC0  0A07               	xorlw	7	; case 4
  9706  000DC2  B4D8               	btfsc	status,2,c
  9707  000DC4  D7BF               	goto	l5559
  9708  000DC6  0A01               	xorlw	1	; case 5
  9709  000DC8  B4D8               	btfsc	status,2,c
  9710  000DCA  D7C0               	goto	l5561
  9711  000DCC  0A03               	xorlw	3	; case 6
  9712  000DCE  B4D8               	btfsc	status,2,c
  9713  000DD0  D7C1               	goto	l5563
  9714  000DD2  0A01               	xorlw	1	; case 7
  9715  000DD4  B4D8               	btfsc	status,2,c
  9716  000DD6  D7C2               	goto	l5565
  9717  000DD8  0A0F               	xorlw	15	; case 8
  9718  000DDA  B4D8               	btfsc	status,2,c
  9719  000DDC  D7C3               	goto	l5567
  9720  000DDE  0A01               	xorlw	1	; case 9
  9721  000DE0  B4D8               	btfsc	status,2,c
  9722  000DE2  D7C4               	goto	l5569
  9723  000DE4  0A03               	xorlw	3	; case 10
  9724  000DE6  B4D8               	btfsc	status,2,c
  9725  000DE8  D7C5               	goto	l5571
  9726  000DEA  0A01               	xorlw	1	; case 11
  9727  000DEC  B4D8               	btfsc	status,2,c
  9728  000DEE  D7C6               	goto	l5573
  9729  000DF0  0A07               	xorlw	7	; case 12
  9730  000DF2  B4D8               	btfsc	status,2,c
  9731  000DF4  D7C7               	goto	l5575
  9732  000DF6  0A01               	xorlw	1	; case 13
  9733  000DF8  B4D8               	btfsc	status,2,c
  9734  000DFA  D7C8               	goto	l5577
  9735  000DFC  0A03               	xorlw	3	; case 14
  9736  000DFE  B4D8               	btfsc	status,2,c
  9737  000E00  D7C9               	goto	l5579
  9738  000E02  0A01               	xorlw	1	; case 15
  9739  000E04  B4D8               	btfsc	status,2,c
  9740  000E06  D7CA               	goto	l5581
  9741  000E08  D000               	goto	l793
  9742  000E0A                     l793:
  9743  000E0A  0012               	return		;funcret
  9744  000E0C                     __end_of_SetADCChannel:
  9745                           	opt stack 0
  9746                           prodh	equ	0xFF4
  9747                           prodl	equ	0xFF3
  9748                           intcon	equ	0xFF2
  9749                           postinc0	equ	0xFEE
  9750                           wreg	equ	0xFE8
  9751                           postinc1	equ	0xFE6
  9752                           fsr1h	equ	0xFE2
  9753                           fsr1l	equ	0xFE1
  9754                           indf2	equ	0xFDF
  9755                           postinc2	equ	0xFDE
  9756                           postdec2	equ	0xFDD
  9757                           fsr2h	equ	0xFDA
  9758                           fsr2l	equ	0xFD9
  9759                           status	equ	0xFD8
  9760                           
  9761 ;; *************** function _SetChanADC *****************
  9762 ;; Defined at:
  9763 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  channel         1    wreg     unsigned char 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  channel         1   17[BANK0 ] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;		None               void
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    7
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_SetADCChannel
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text71
  9792  002268                     __ptext71:
  9793                           	opt stack 0
  9794  002268                     _SetChanADC:
  9795                           	opt stack 19
  9796                           
  9797                           ;incstack = 0
  9798                           ;SetChanADC@channel stored from wreg
  9799  002268  0100               	movlb	0	; () banked
  9800  00226A  6FCF               	movwf	SetChanADC@channel& (0+255),b
  9801                           
  9802                           ; BSR set to: 0
  9803  00226C  CFC2 F0CE          	movff	4034,??_SetChanADC	;volatile
  9804  002270  0EC3               	movlw	195
  9805  002272  0100               	movlb	0	; () banked
  9806  002274  17CE               	andwf	??_SetChanADC& (0+255),f,b
  9807  002276  0100               	movlb	0	; () banked
  9808  002278  90D8               	bcf	status,0,c
  9809  00227A  31CF               	rrcf	SetChanADC@channel& (0+255),w,b
  9810  00227C  0B3C               	andlw	60
  9811  00227E  0100               	movlb	0	; () banked
  9812  002280  11CE               	iorwf	??_SetChanADC& (0+255),w,b
  9813  002282  6EC2               	movwf	4034,c	;volatile
  9814                           
  9815                           ; BSR set to: 0
  9816  002284  0012               	return		;funcret
  9817  002286                     __end_of_SetChanADC:
  9818                           	opt stack 0
  9819                           prodh	equ	0xFF4
  9820                           prodl	equ	0xFF3
  9821                           intcon	equ	0xFF2
  9822                           postinc0	equ	0xFEE
  9823                           wreg	equ	0xFE8
  9824                           postinc1	equ	0xFE6
  9825                           fsr1h	equ	0xFE2
  9826                           fsr1l	equ	0xFE1
  9827                           indf2	equ	0xFDF
  9828                           postinc2	equ	0xFDE
  9829                           postdec2	equ	0xFDD
  9830                           fsr2h	equ	0xFDA
  9831                           fsr2l	equ	0xFD9
  9832                           status	equ	0xFD8
  9833                           
  9834 ;; *************** function _ConvertADC *****************
  9835 ;; Defined at:
  9836 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;		None
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;		None
  9841 ;; Return value:  Size  Location     Type
  9842 ;;		None               void
  9843 ;; Registers used:
  9844 ;;		None
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;Total ram usage:        0 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    7
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_GetSensorReadings
  9861 ;;		_CalibrateThreshold
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text72
  9866  00251C                     __ptext72:
  9867                           	opt stack 0
  9868  00251C                     _ConvertADC:
  9869                           	opt stack 19
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;incstack = 0
  9873  00251C  82C2               	bsf	4034,1,c	;volatile
  9874  00251E  0012               	return		;funcret
  9875  002520                     __end_of_ConvertADC:
  9876                           	opt stack 0
  9877                           prodh	equ	0xFF4
  9878                           prodl	equ	0xFF3
  9879                           intcon	equ	0xFF2
  9880                           postinc0	equ	0xFEE
  9881                           wreg	equ	0xFE8
  9882                           postinc1	equ	0xFE6
  9883                           fsr1h	equ	0xFE2
  9884                           fsr1l	equ	0xFE1
  9885                           indf2	equ	0xFDF
  9886                           postinc2	equ	0xFDE
  9887                           postdec2	equ	0xFDD
  9888                           fsr2h	equ	0xFDA
  9889                           fsr2l	equ	0xFD9
  9890                           status	equ	0xFD8
  9891                           
  9892 ;; *************** function _BusySensorAcq *****************
  9893 ;; Defined at:
  9894 ;;		line 296 in file "FastBuggy17_Main_Code_TUNING.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      unsigned char 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:    7
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_CalibrateOffsets
  9919 ;;		_CalibrateOnLine
  9920 ;;		_CalibrateThreshold
  9921 ;;		_main
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text73
  9926  002414                     __ptext73:
  9927                           	opt stack 0
  9928  002414                     _BusySensorAcq:
  9929                           	opt stack 20
  9930                           
  9931                           ;FastBuggy17_Main_Code_TUNING.c: 298: return (!sensor_acq_done);
  9932                           
  9933                           ;incstack = 0
  9934  002414  5022               	movf	_sensor_acq_done,w,c	;volatile
  9935  002416  A4D8               	btfss	status,2,c
  9936  002418  D002               	goto	u4620
  9937  00241A  0E01               	movlw	1
  9938  00241C  D002               	goto	l799
  9939  00241E                     u4620:
  9940  00241E  0E00               	movlw	0
  9941  002420  D000               	goto	l799
  9942  002422                     l799:
  9943  002422  0012               	return		;funcret
  9944  002424                     __end_of_BusySensorAcq:
  9945                           	opt stack 0
  9946                           prodh	equ	0xFF4
  9947                           prodl	equ	0xFF3
  9948                           intcon	equ	0xFF2
  9949                           postinc0	equ	0xFEE
  9950                           wreg	equ	0xFE8
  9951                           postinc1	equ	0xFE6
  9952                           fsr1h	equ	0xFE2
  9953                           fsr1l	equ	0xFE1
  9954                           indf2	equ	0xFDF
  9955                           postinc2	equ	0xFDE
  9956                           postdec2	equ	0xFDD
  9957                           fsr2h	equ	0xFDA
  9958                           fsr2l	equ	0xFD9
  9959                           status	equ	0xFD8
  9960                           
  9961 ;; *************** function _GetDistance *****************
  9962 ;; Defined at:
  9963 ;;		line 48 in file "Ultrasound.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;		None
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;		None               void
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;Total ram usage:        0 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    8
  9984 ;; This function calls:
  9985 ;;		_Delay1TCYx
  9986 ;; This function is called by:
  9987 ;;		_main
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text74
  9992  002360                     __ptext74:
  9993                           	opt stack 0
  9994  002360                     _GetDistance:
  9995                           	opt stack 22
  9996                           
  9997                           ;Ultrasound.c: 50: LATEbits.LATE5 = 1;
  9998                           
  9999                           ;incstack = 0
 10000  002360  8A8D               	bsf	3981,5,c	;volatile
 10001                           
 10002                           ;Ultrasound.c: 51: Delay1TCYx(25);
 10003  002362  0E19               	movlw	25
 10004  002364  EC12  F012         	call	_Delay1TCYx
 10005                           
 10006                           ;Ultrasound.c: 52: LATEbits.LATE5 = 0;
 10007  002368  9A8D               	bcf	3981,5,c	;volatile
 10008                           
 10009                           ;Ultrasound.c: 53: INTCON2bits.INTEDG3 = 1;
 10010  00236A  86F1               	bsf	intcon2,3,c	;volatile
 10011                           
 10012                           ;Ultrasound.c: 54: INTCON3bits.INT3IE = 1;
 10013  00236C  8AF0               	bsf	intcon3,5,c	;volatile
 10014                           
 10015                           ;Ultrasound.c: 56: echo_acq_done = 0;
 10016  00236E  0E00               	movlw	0
 10017  002370  6E1C               	movwf	_echo_acq_done,c
 10018  002372  0012               	return		;funcret
 10019  002374                     __end_of_GetDistance:
 10020                           	opt stack 0
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           intcon	equ	0xFF2
 10024                           intcon2	equ	0xFF1
 10025                           intcon3	equ	0xFF0
 10026                           postinc0	equ	0xFEE
 10027                           wreg	equ	0xFE8
 10028                           postinc1	equ	0xFE6
 10029                           fsr1h	equ	0xFE2
 10030                           fsr1l	equ	0xFE1
 10031                           indf2	equ	0xFDF
 10032                           postinc2	equ	0xFDE
 10033                           postdec2	equ	0xFDD
 10034                           fsr2h	equ	0xFDA
 10035                           fsr2l	equ	0xFD9
 10036                           status	equ	0xFD8
 10037                           
 10038 ;; *************** function _Delay1TCYx *****************
 10039 ;; Defined at:
 10040 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  unit            1    wreg     unsigned char 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  unit            1   16[BANK0 ] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;		None               void
 10047 ;; Registers used:
 10048 ;;		wreg
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;Total ram usage:        1 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    7
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_GetDistance
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           	psect	text75
 10069  002424                     __ptext75:
 10070                           	opt stack 0
 10071  002424                     _Delay1TCYx:
 10072                           	opt stack 22
 10073                           
 10074                           ;incstack = 0
 10075                           ;Delay1TCYx@unit stored from wreg
 10076  002424  0100               	movlb	0	; () banked
 10077  002426  6FCE               	movwf	Delay1TCYx@unit& (0+255),b
 10078  002428                     l1484:
 10079                           
 10080                           ; BSR set to: 0
 10081  002428  F000               	nop	
 10082  00242A  0100               	movlb	0	; () banked
 10083  00242C  2FCE               	decfsz	Delay1TCYx@unit& (0+255),f,b
 10084  00242E  D7FC               	goto	l1484
 10085  002430  D000               	goto	l1486
 10086  002432                     l1486:
 10087                           
 10088                           ; BSR set to: 0
 10089  002432  0012               	return		;funcret
 10090  002434                     __end_of_Delay1TCYx:
 10091                           	opt stack 0
 10092                           prodh	equ	0xFF4
 10093                           prodl	equ	0xFF3
 10094                           intcon	equ	0xFF2
 10095                           intcon2	equ	0xFF1
 10096                           intcon3	equ	0xFF0
 10097                           postinc0	equ	0xFEE
 10098                           wreg	equ	0xFE8
 10099                           postinc1	equ	0xFE6
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           fsr2h	equ	0xFDA
 10106                           fsr2l	equ	0xFD9
 10107                           status	equ	0xFD8
 10108                           
 10109 ;; *************** function _EnableSensorLEDS *****************
 10110 ;; Defined at:
 10111 ;;		line 380 in file "FastBuggy17_Main_Code_TUNING.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;		None
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;		None
 10116 ;; Return value:  Size  Location     Type
 10117 ;;		None               void
 10118 ;; Registers used:
 10119 ;;		wreg, status,2
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10129 ;;Total ram usage:        0 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    7
 10132 ;; This function calls:
 10133 ;;		Nothing
 10134 ;; This function is called by:
 10135 ;;		_main
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           	psect	text76
 10140  00250E                     __ptext76:
 10141                           	opt stack 0
 10142  00250E                     _EnableSensorLEDS:
 10143                           	opt stack 23
 10144                           
 10145                           ;FastBuggy17_Main_Code_TUNING.c: 382: LATE = 0x1F;
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;incstack = 0
 10149  00250E  0E1F               	movlw	31
 10150  002510  6E8D               	movwf	3981,c	;volatile
 10151  002512  0012               	return		;funcret
 10152  002514                     __end_of_EnableSensorLEDS:
 10153                           	opt stack 0
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           intcon2	equ	0xFF1
 10158                           intcon3	equ	0xFF0
 10159                           postinc0	equ	0xFEE
 10160                           wreg	equ	0xFE8
 10161                           postinc1	equ	0xFE6
 10162                           fsr1h	equ	0xFE2
 10163                           fsr1l	equ	0xFE1
 10164                           indf2	equ	0xFDF
 10165                           postinc2	equ	0xFDE
 10166                           postdec2	equ	0xFDD
 10167                           fsr2h	equ	0xFDA
 10168                           fsr2l	equ	0xFD9
 10169                           status	equ	0xFD8
 10170                           
 10171 ;; *************** function _EnableMotors *****************
 10172 ;; Defined at:
 10173 ;;		line 102 in file "Motors.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;		None               void
 10180 ;; Registers used:
 10181 ;;		None
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;Total ram usage:        0 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:    7
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_main
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text77
 10202  002520                     __ptext77:
 10203                           	opt stack 0
 10204  002520                     _EnableMotors:
 10205                           	opt stack 23
 10206                           
 10207                           ;Motors.c: 104: LATDbits.LATD4 = 1;
 10208                           
 10209                           ;incstack = 0
 10210  002520  888C               	bsf	3980,4,c	;volatile
 10211  002522  0012               	return		;funcret
 10212  002524                     __end_of_EnableMotors:
 10213                           	opt stack 0
 10214                           prodh	equ	0xFF4
 10215                           prodl	equ	0xFF3
 10216                           intcon	equ	0xFF2
 10217                           intcon2	equ	0xFF1
 10218                           intcon3	equ	0xFF0
 10219                           postinc0	equ	0xFEE
 10220                           wreg	equ	0xFE8
 10221                           postinc1	equ	0xFE6
 10222                           fsr1h	equ	0xFE2
 10223                           fsr1l	equ	0xFE1
 10224                           indf2	equ	0xFDF
 10225                           postinc2	equ	0xFDE
 10226                           postdec2	equ	0xFDD
 10227                           fsr2h	equ	0xFDA
 10228                           fsr2l	equ	0xFD9
 10229                           status	equ	0xFD8
 10230                           
 10231 ;; *************** function _DisableMotors *****************
 10232 ;; Defined at:
 10233 ;;		line 108 in file "Motors.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;		None
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;		None               void
 10240 ;; Registers used:
 10241 ;;		None
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;Total ram usage:        0 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:    7
 10254 ;; This function calls:
 10255 ;;		Nothing
 10256 ;; This function is called by:
 10257 ;;		_main
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text78
 10262  002524                     __ptext78:
 10263                           	opt stack 0
 10264  002524                     _DisableMotors:
 10265                           	opt stack 23
 10266                           
 10267                           ;Motors.c: 110: LATDbits.LATD4 = 0;
 10268                           
 10269                           ;incstack = 0
 10270  002524  988C               	bcf	3980,4,c	;volatile
 10271  002526  0012               	return		;funcret
 10272  002528                     __end_of_DisableMotors:
 10273                           	opt stack 0
 10274                           prodh	equ	0xFF4
 10275                           prodl	equ	0xFF3
 10276                           intcon	equ	0xFF2
 10277                           intcon2	equ	0xFF1
 10278                           intcon3	equ	0xFF0
 10279                           postinc0	equ	0xFEE
 10280                           wreg	equ	0xFE8
 10281                           postinc1	equ	0xFE6
 10282                           fsr1h	equ	0xFE2
 10283                           fsr1l	equ	0xFE1
 10284                           indf2	equ	0xFDF
 10285                           postinc2	equ	0xFDE
 10286                           postdec2	equ	0xFDD
 10287                           fsr2h	equ	0xFDA
 10288                           fsr2l	equ	0xFD9
 10289                           status	equ	0xFD8
 10290                           
 10291 ;; *************** function _ConfigureWireless *****************
 10292 ;; Defined at:
 10293 ;;		line 114 in file "Wireless.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;		None
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;		None
 10298 ;; Return value:  Size  Location     Type
 10299 ;;		None               void
 10300 ;; Registers used:
 10301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;Total ram usage:        0 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:    8
 10314 ;; This function calls:
 10315 ;;		_FlushRxBuf
 10316 ;;		_FlushTxBuf
 10317 ;;		_Open1USART
 10318 ;; This function is called by:
 10319 ;;		_main
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           	psect	text79
 10324  002286                     __ptext79:
 10325                           	opt stack 0
 10326  002286                     _ConfigureWireless:
 10327                           	opt stack 22
 10328                           
 10329                           ;Wireless.c: 116: Open1USART(0b01111111
 10330                           ;Wireless.c: 117: & 0b10111111
 10331                           ;Wireless.c: 118: & 0b11111110
 10332                           ;Wireless.c: 119: & 0b11111101
 10333                           ;Wireless.c: 120: & 0b11111111
 10334                           ;Wireless.c: 121: & 0b11111111,
 10335                           ;Wireless.c: 122: 64);
 10336                           
 10337                           ;incstack = 0
 10338  002286  0E00               	movlw	0
 10339  002288  0100               	movlb	0	; () banked
 10340  00228A  6FCF               	movwf	(Open1USART@spbrg+1)& (0+255),b
 10341  00228C  0E40               	movlw	64
 10342  00228E  6FCE               	movwf	Open1USART@spbrg& (0+255),b
 10343  002290  0E3C               	movlw	60
 10344  002292  EC30  F00A         	call	_Open1USART
 10345                           
 10346                           ;Wireless.c: 124: FlushTxBuf();
 10347  002296  EC7F  F00F         	call	_FlushTxBuf	;wreg free
 10348                           
 10349                           ;Wireless.c: 125: FlushRxBuf();
 10350  00229A  EC9A  F00F         	call	_FlushRxBuf	;wreg free
 10351                           
 10352                           ;Wireless.c: 127: Tx_complete = 1;
 10353  00229E  0E01               	movlw	1
 10354  0022A0  6E1A               	movwf	_Tx_complete,c
 10355  0022A2  0012               	return		;funcret
 10356  0022A4                     __end_of_ConfigureWireless:
 10357                           	opt stack 0
 10358                           prodh	equ	0xFF4
 10359                           prodl	equ	0xFF3
 10360                           intcon	equ	0xFF2
 10361                           intcon2	equ	0xFF1
 10362                           intcon3	equ	0xFF0
 10363                           postinc0	equ	0xFEE
 10364                           wreg	equ	0xFE8
 10365                           postinc1	equ	0xFE6
 10366                           fsr1h	equ	0xFE2
 10367                           fsr1l	equ	0xFE1
 10368                           indf2	equ	0xFDF
 10369                           postinc2	equ	0xFDE
 10370                           postdec2	equ	0xFDD
 10371                           fsr2h	equ	0xFDA
 10372                           fsr2l	equ	0xFD9
 10373                           status	equ	0xFD8
 10374                           
 10375 ;; *************** function _Open1USART *****************
 10376 ;; Defined at:
 10377 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  config          1    wreg     unsigned char 
 10380 ;;  spbrg           2   16[BANK0 ] unsigned int 
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;  config          1   18[BANK0 ] unsigned char 
 10383 ;; Return value:  Size  Location     Type
 10384 ;;		None               void
 10385 ;; Registers used:
 10386 ;;		wreg, status,2
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;Total ram usage:        3 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    7
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		_ConfigureWireless
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text80
 10407  001460                     __ptext80:
 10408                           	opt stack 0
 10409  001460                     _Open1USART:
 10410                           	opt stack 22
 10411                           
 10412                           ;incstack = 0
 10413                           ;Open1USART@config stored from wreg
 10414  001460  0100               	movlb	0	; () banked
 10415  001462  6FD0               	movwf	Open1USART@config& (0+255),b
 10416                           
 10417                           ; BSR set to: 0
 10418  001464  0E00               	movlw	0
 10419  001466  6EAC               	movwf	4012,c	;volatile
 10420  001468  0E00               	movlw	0
 10421  00146A  6EAB               	movwf	4011,c	;volatile
 10422                           
 10423                           ; BSR set to: 0
 10424  00146C  0100               	movlb	0	; () banked
 10425  00146E  A1D0               	btfss	Open1USART@config& (0+255),0,b
 10426  001470  D002               	goto	l5949
 10427                           
 10428                           ; BSR set to: 0
 10429  001472  88AC               	bsf	4012,4,c	;volatile
 10430  001474  D000               	goto	l5949
 10431  001476                     l5949:
 10432                           
 10433                           ; BSR set to: 0
 10434  001476  0100               	movlb	0	; () banked
 10435  001478  A3D0               	btfss	Open1USART@config& (0+255),1,b
 10436  00147A  D003               	goto	l5953
 10437                           
 10438                           ; BSR set to: 0
 10439  00147C  8CAC               	bsf	4012,6,c	;volatile
 10440  00147E  8CAB               	bsf	4011,6,c	;volatile
 10441  001480  D000               	goto	l5953
 10442  001482                     l5953:
 10443                           
 10444                           ; BSR set to: 0
 10445  001482  0100               	movlb	0	; () banked
 10446  001484  A5D0               	btfss	Open1USART@config& (0+255),2,b
 10447  001486  D002               	goto	l5957
 10448                           
 10449                           ; BSR set to: 0
 10450  001488  8EAC               	bsf	4012,7,c	;volatile
 10451  00148A  D000               	goto	l5957
 10452  00148C                     l5957:
 10453                           
 10454                           ; BSR set to: 0
 10455  00148C  0100               	movlb	0	; () banked
 10456  00148E  A7D0               	btfss	Open1USART@config& (0+255),3,b
 10457  001490  D002               	goto	l1218
 10458                           
 10459                           ; BSR set to: 0
 10460  001492  88AB               	bsf	4011,4,c	;volatile
 10461  001494  D002               	goto	l5961
 10462  001496                     l1218:
 10463                           
 10464                           ; BSR set to: 0
 10465  001496  8AAB               	bsf	4011,5,c	;volatile
 10466  001498  D000               	goto	l5961
 10467  00149A                     l5961:
 10468                           
 10469                           ; BSR set to: 0
 10470  00149A  0100               	movlb	0	; () banked
 10471  00149C  A9D0               	btfss	Open1USART@config& (0+255),4,b
 10472  00149E  D002               	goto	l5965
 10473                           
 10474                           ; BSR set to: 0
 10475  0014A0  84AC               	bsf	4012,2,c	;volatile
 10476  0014A2  D000               	goto	l5965
 10477  0014A4                     l5965:
 10478                           
 10479                           ; BSR set to: 0
 10480  0014A4  0100               	movlb	0	; () banked
 10481  0014A6  ABD0               	btfss	Open1USART@config& (0+255),5,b
 10482  0014A8  D002               	goto	l5969
 10483                           
 10484                           ; BSR set to: 0
 10485  0014AA  86AB               	bsf	4011,3,c	;volatile
 10486  0014AC  D000               	goto	l5969
 10487  0014AE                     l5969:
 10488                           
 10489                           ; BSR set to: 0
 10490  0014AE  0100               	movlb	0	; () banked
 10491  0014B0  ADD0               	btfss	Open1USART@config& (0+255),6,b
 10492  0014B2  D002               	goto	l1222
 10493                           
 10494                           ; BSR set to: 0
 10495  0014B4  8A9D               	bsf	3997,5,c	;volatile
 10496  0014B6  D002               	goto	l5973
 10497  0014B8                     l1222:
 10498                           
 10499                           ; BSR set to: 0
 10500  0014B8  9A9D               	bcf	3997,5,c	;volatile
 10501  0014BA  D000               	goto	l5973
 10502  0014BC                     l5973:
 10503                           
 10504                           ; BSR set to: 0
 10505  0014BC  0100               	movlb	0	; () banked
 10506  0014BE  AFD0               	btfss	Open1USART@config& (0+255),7,b
 10507  0014C0  D002               	goto	l1224
 10508                           
 10509                           ; BSR set to: 0
 10510  0014C2  889D               	bsf	3997,4,c	;volatile
 10511  0014C4  D001               	goto	l1225
 10512  0014C6                     l1224:
 10513                           
 10514                           ; BSR set to: 0
 10515  0014C6  989D               	bcf	3997,4,c	;volatile
 10516  0014C8                     l1225:
 10517                           
 10518                           ; BSR set to: 0
 10519  0014C8  C0CE  FFAF         	movff	Open1USART@spbrg,4015	;volatile
 10520                           
 10521                           ; BSR set to: 0
 10522  0014CC  0100               	movlb	0	; () banked
 10523  0014CE  51CF               	movf	(Open1USART@spbrg+1)& (0+255),w,b
 10524  0014D0  6E7F               	movwf	3967,c	;volatile
 10525                           
 10526                           ; BSR set to: 0
 10527  0014D2  8AAC               	bsf	4012,5,c	;volatile
 10528                           
 10529                           ; BSR set to: 0
 10530  0014D4  8EAB               	bsf	4011,7,c	;volatile
 10531                           
 10532                           ; BSR set to: 0
 10533  0014D6  9C94               	bcf	3988,6,c	;volatile
 10534                           
 10535                           ; BSR set to: 0
 10536  0014D8  8E94               	bsf	3988,7,c	;volatile
 10537                           
 10538                           ; BSR set to: 0
 10539  0014DA  B8AC               	btfsc	4012,4,c	;volatile
 10540                           
 10541                           ; BSR set to: 0
 10542  0014DC  BEAC               	btfsc	4012,7,c	;volatile
 10543  0014DE  D002               	goto	l1227
 10544                           
 10545                           ; BSR set to: 0
 10546  0014E0  8C94               	bsf	3988,6,c	;volatile
 10547  0014E2  D000               	goto	l1227
 10548  0014E4                     l1227:
 10549                           
 10550                           ; BSR set to: 0
 10551  0014E4  0012               	return		;funcret
 10552  0014E6                     __end_of_Open1USART:
 10553                           	opt stack 0
 10554                           prodh	equ	0xFF4
 10555                           prodl	equ	0xFF3
 10556                           intcon	equ	0xFF2
 10557                           intcon2	equ	0xFF1
 10558                           intcon3	equ	0xFF0
 10559                           postinc0	equ	0xFEE
 10560                           wreg	equ	0xFE8
 10561                           postinc1	equ	0xFE6
 10562                           fsr1h	equ	0xFE2
 10563                           fsr1l	equ	0xFE1
 10564                           indf2	equ	0xFDF
 10565                           postinc2	equ	0xFDE
 10566                           postdec2	equ	0xFDD
 10567                           fsr2h	equ	0xFDA
 10568                           fsr2l	equ	0xFD9
 10569                           status	equ	0xFD8
 10570                           
 10571 ;; *************** function _FlushTxBuf *****************
 10572 ;; Defined at:
 10573 ;;		line 90 in file "Wireless.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;		None
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  index           1   16[BANK0 ] unsigned char 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;		None               void
 10580 ;; Registers used:
 10581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;Total ram usage:        1 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; Hardware stack levels required when called:    7
 10594 ;; This function calls:
 10595 ;;		Nothing
 10596 ;; This function is called by:
 10597 ;;		_ConfigureWireless
 10598 ;;		_SendStatus
 10599 ;;		_SendLineMode
 10600 ;;		_SendOffsets
 10601 ;;		_SendThreshold
 10602 ;;		_SendDefaultPIDValues
 10603 ;;		_SendStoredPIDValues
 10604 ;;		_SendCurrentPIDValues
 10605 ;;		_SendBattVoltageInitial
 10606 ;;		_SendPIDSetPointOnLine
 10607 ;;		_SendBattVoltage
 10608 ;;		_SendBattCurrent
 10609 ;;		_SendBattCurrentAcc
 10610 ;;		_SendPIDSetPointOffLine
 10611 ;;		_SendPIDError
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text81
 10616  001EFE                     __ptext81:
 10617                           	opt stack 0
 10618  001EFE                     _FlushTxBuf:
 10619                           	opt stack 21
 10620                           
 10621                           ;Wireless.c: 91: unsigned char index;
 10622                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;incstack = 0
 10626  001EFE  0E00               	movlw	0
 10627  001F00  0100               	movlb	0	; () banked
 10628  001F02  6FCE               	movwf	FlushTxBuf@index& (0+255),b
 10629  001F04                     l5525:
 10630                           
 10631                           ; BSR set to: 0
 10632  001F04  0E18               	movlw	24
 10633  001F06  0100               	movlb	0	; () banked
 10634  001F08  65CE               	cpfsgt	FlushTxBuf@index& (0+255),b
 10635  001F0A  D001               	goto	l5529
 10636                           
 10637                           ; BSR set to: 0
 10638  001F0C  D00E               	goto	l5535
 10639  001F0E                     l5529:
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;Wireless.c: 94: Tx_buffer[index] = 0;
 10643  001F0E  0100               	movlb	0	; () banked
 10644  001F10  51CE               	movf	FlushTxBuf@index& (0+255),w,b
 10645  001F12  0D01               	mullw	1
 10646  001F14  0E79               	movlw	low _Tx_buffer
 10647  001F16  24F3               	addwf	prodl,w,c
 10648  001F18  6ED9               	movwf	fsr2l,c
 10649  001F1A  0E00               	movlw	high _Tx_buffer
 10650  001F1C  20F4               	addwfc	prodh,w,c
 10651  001F1E  6EDA               	movwf	fsr2h,c
 10652  001F20  0E00               	movlw	0
 10653  001F22  6EDF               	movwf	indf2,c
 10654                           
 10655                           ; BSR set to: 0
 10656  001F24  0100               	movlb	0	; () banked
 10657  001F26  2BCE               	incf	FlushTxBuf@index& (0+255),f,b
 10658  001F28  D7ED               	goto	l5525
 10659  001F2A                     l5535:
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;Wireless.c: 95: }
 10663                           ;Wireless.c: 97: put_Tx_index = 0;
 10664  001F2A  0E00               	movlw	0
 10665  001F2C  6E20               	movwf	_put_Tx_index,c
 10666                           
 10667                           ;Wireless.c: 98: get_Tx_index = 0;
 10668  001F2E  0E00               	movlw	0
 10669  001F30  6E1E               	movwf	_get_Tx_index,c
 10670                           
 10671                           ; BSR set to: 0
 10672  001F32  0012               	return		;funcret
 10673  001F34                     __end_of_FlushTxBuf:
 10674                           	opt stack 0
 10675                           prodh	equ	0xFF4
 10676                           prodl	equ	0xFF3
 10677                           intcon	equ	0xFF2
 10678                           intcon2	equ	0xFF1
 10679                           intcon3	equ	0xFF0
 10680                           postinc0	equ	0xFEE
 10681                           wreg	equ	0xFE8
 10682                           postinc1	equ	0xFE6
 10683                           fsr1h	equ	0xFE2
 10684                           fsr1l	equ	0xFE1
 10685                           indf2	equ	0xFDF
 10686                           postinc2	equ	0xFDE
 10687                           postdec2	equ	0xFDD
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           
 10692 ;; *************** function _FlushRxBuf *****************
 10693 ;; Defined at:
 10694 ;;		line 102 in file "Wireless.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  index           1   16[BANK0 ] unsigned char 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;		None               void
 10701 ;; Registers used:
 10702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;Total ram usage:        1 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    7
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_ConfigureWireless
 10719 ;;		_SetPIDValues
 10720 ;;		_ReceiveCommandsEnable
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text82
 10725  001F34                     __ptext82:
 10726                           	opt stack 0
 10727  001F34                     _FlushRxBuf:
 10728                           	opt stack 22
 10729                           
 10730                           ;Wireless.c: 103: unsigned char index;
 10731                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;incstack = 0
 10735  001F34  0E00               	movlw	0
 10736  001F36  0100               	movlb	0	; () banked
 10737  001F38  6FCE               	movwf	FlushRxBuf@index& (0+255),b
 10738  001F3A                     l5815:
 10739                           
 10740                           ; BSR set to: 0
 10741  001F3A  0E18               	movlw	24
 10742  001F3C  0100               	movlb	0	; () banked
 10743  001F3E  65CE               	cpfsgt	FlushRxBuf@index& (0+255),b
 10744  001F40  D001               	goto	l5819
 10745                           
 10746                           ; BSR set to: 0
 10747  001F42  D00E               	goto	l5825
 10748  001F44                     l5819:
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10752  001F44  0100               	movlb	0	; () banked
 10753  001F46  51CE               	movf	FlushRxBuf@index& (0+255),w,b
 10754  001F48  0D01               	mullw	1
 10755  001F4A  0E60               	movlw	low _Rx_buffer
 10756  001F4C  24F3               	addwf	prodl,w,c
 10757  001F4E  6ED9               	movwf	fsr2l,c
 10758  001F50  0E00               	movlw	high _Rx_buffer
 10759  001F52  20F4               	addwfc	prodh,w,c
 10760  001F54  6EDA               	movwf	fsr2h,c
 10761  001F56  0E00               	movlw	0
 10762  001F58  6EDF               	movwf	indf2,c
 10763                           
 10764                           ; BSR set to: 0
 10765  001F5A  0100               	movlb	0	; () banked
 10766  001F5C  2BCE               	incf	FlushRxBuf@index& (0+255),f,b
 10767  001F5E  D7ED               	goto	l5815
 10768  001F60                     l5825:
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;Wireless.c: 107: }
 10772                           ;Wireless.c: 109: put_Rx_index = 0;
 10773  001F60  0E00               	movlw	0
 10774  001F62  6E1F               	movwf	_put_Rx_index,c
 10775                           
 10776                           ;Wireless.c: 110: get_Rx_index = 0;
 10777  001F64  0E00               	movlw	0
 10778  001F66  6E1D               	movwf	_get_Rx_index,c
 10779                           
 10780                           ; BSR set to: 0
 10781  001F68  0012               	return		;funcret
 10782  001F6A                     __end_of_FlushRxBuf:
 10783                           	opt stack 0
 10784                           prodh	equ	0xFF4
 10785                           prodl	equ	0xFF3
 10786                           intcon	equ	0xFF2
 10787                           intcon2	equ	0xFF1
 10788                           intcon3	equ	0xFF0
 10789                           postinc0	equ	0xFEE
 10790                           wreg	equ	0xFE8
 10791                           postinc1	equ	0xFE6
 10792                           fsr1h	equ	0xFE2
 10793                           fsr1l	equ	0xFE1
 10794                           indf2	equ	0xFDF
 10795                           postinc2	equ	0xFDE
 10796                           postdec2	equ	0xFDD
 10797                           fsr2h	equ	0xFDA
 10798                           fsr2l	equ	0xFD9
 10799                           status	equ	0xFD8
 10800                           
 10801 ;; *************** function _ConfigureUltrasound *****************
 10802 ;; Defined at:
 10803 ;;		line 9 in file "Ultrasound.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  echo_to_cm      3   20[BANK0 ] float 
 10806 ;;  echo_to_in      3   23[BANK0 ] float 
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;		None
 10809 ;; Return value:  Size  Location     Type
 10810 ;;		None               void
 10811 ;; Registers used:
 10812 ;;		wreg, status,2, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10818 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;Total ram usage:        6 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:    8
 10825 ;; This function calls:
 10826 ;;		_WriteTimer1
 10827 ;; This function is called by:
 10828 ;;		_main
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text83
 10833  0020DE                     __ptext83:
 10834                           	opt stack 0
 10835  0020DE                     _ConfigureUltrasound:
 10836                           	opt stack 22
 10837                           
 10838                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;incstack = 0
 10842  0020DE  C0D2  F0E6         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10843  0020E2  C0D3  F0E7         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10844  0020E6  C0D4  F0E8         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10845                           
 10846                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10847  0020EA  C0D5  F0E9         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10848  0020EE  C0D6  F0EA         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10849  0020F2  C0D7  F0EB         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10850                           
 10851                           ;Ultrasound.c: 12: WriteTimer1(0);
 10852  0020F6  0E00               	movlw	0
 10853  0020F8  0100               	movlb	0	; () banked
 10854  0020FA  6FCF               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10855  0020FC  0E00               	movlw	0
 10856  0020FE  6FCE               	movwf	WriteTimer1@timer1& (0+255),b
 10857  002100  ECCD  F011         	call	_WriteTimer1	;wreg free
 10858  002104  0012               	return		;funcret
 10859  002106                     __end_of_ConfigureUltrasound:
 10860                           	opt stack 0
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           intcon2	equ	0xFF1
 10865                           intcon3	equ	0xFF0
 10866                           postinc0	equ	0xFEE
 10867                           wreg	equ	0xFE8
 10868                           postinc1	equ	0xFE6
 10869                           fsr1h	equ	0xFE2
 10870                           fsr1l	equ	0xFE1
 10871                           indf2	equ	0xFDF
 10872                           postinc2	equ	0xFDE
 10873                           postdec2	equ	0xFDD
 10874                           fsr2h	equ	0xFDA
 10875                           fsr2l	equ	0xFD9
 10876                           status	equ	0xFD8
 10877                           
 10878 ;; *************** function _ConfigureTimer2 *****************
 10879 ;; Defined at:
 10880 ;;		line 146 in file "FastBuggy17_Main_Code_TUNING.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;		None               void
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10898 ;;Total ram usage:        0 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    8
 10901 ;; This function calls:
 10902 ;;		_OpenTimer2
 10903 ;; This function is called by:
 10904 ;;		_main
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text84
 10909  0024FA                     __ptext84:
 10910                           	opt stack 0
 10911  0024FA                     _ConfigureTimer2:
 10912                           	opt stack 22
 10913                           
 10914                           ;FastBuggy17_Main_Code_TUNING.c: 148: OpenTimer2(0b01111111
 10915                           ;FastBuggy17_Main_Code_TUNING.c: 149: & 0b11111100
 10916                           ;FastBuggy17_Main_Code_TUNING.c: 150: & 0b10000111
 10917                           ;FastBuggy17_Main_Code_TUNING.c: 151: & 0b10110111);
 10918                           
 10919                           ;incstack = 0
 10920  0024FA  0E04               	movlw	4
 10921  0024FC  ECF6  F010         	call	_OpenTimer2
 10922  002500  0012               	return		;funcret
 10923  002502                     __end_of_ConfigureTimer2:
 10924                           	opt stack 0
 10925                           prodh	equ	0xFF4
 10926                           prodl	equ	0xFF3
 10927                           intcon	equ	0xFF2
 10928                           intcon2	equ	0xFF1
 10929                           intcon3	equ	0xFF0
 10930                           postinc0	equ	0xFEE
 10931                           wreg	equ	0xFE8
 10932                           postinc1	equ	0xFE6
 10933                           fsr1h	equ	0xFE2
 10934                           fsr1l	equ	0xFE1
 10935                           indf2	equ	0xFDF
 10936                           postinc2	equ	0xFDE
 10937                           postdec2	equ	0xFDD
 10938                           fsr2h	equ	0xFDA
 10939                           fsr2l	equ	0xFD9
 10940                           status	equ	0xFD8
 10941                           
 10942 ;; *************** function _OpenTimer2 *****************
 10943 ;; Defined at:
 10944 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  config          1    wreg     unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  config          1   16[BANK0 ] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;		None               void
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;Total ram usage:        1 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; Hardware stack levels required when called:    7
 10965 ;; This function calls:
 10966 ;;		Nothing
 10967 ;; This function is called by:
 10968 ;;		_ConfigureTimer2
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           	psect	text85
 10973  0021EC                     __ptext85:
 10974                           	opt stack 0
 10975  0021EC                     _OpenTimer2:
 10976                           	opt stack 22
 10977                           
 10978                           ;incstack = 0
 10979                           ;OpenTimer2@config stored from wreg
 10980  0021EC  0100               	movlb	0	; () banked
 10981  0021EE  6FCE               	movwf	OpenTimer2@config& (0+255),b
 10982                           
 10983                           ; BSR set to: 0
 10984  0021F0  0100               	movlb	0	; () banked
 10985  0021F2  51CE               	movf	OpenTimer2@config& (0+255),w,b
 10986  0021F4  0BFB               	andlw	251
 10987  0021F6  6ECA               	movwf	4042,c	;volatile
 10988                           
 10989                           ; BSR set to: 0
 10990  0021F8  0E00               	movlw	0
 10991  0021FA  6ECC               	movwf	4044,c	;volatile
 10992                           
 10993                           ; BSR set to: 0
 10994  0021FC  929E               	bcf	3998,1,c	;volatile
 10995                           
 10996                           ; BSR set to: 0
 10997  0021FE  0100               	movlb	0	; () banked
 10998  002200  AFCE               	btfss	OpenTimer2@config& (0+255),7,b
 10999  002202  D002               	goto	l1194
 11000                           
 11001                           ; BSR set to: 0
 11002  002204  829D               	bsf	3997,1,c	;volatile
 11003  002206  D001               	goto	l1195
 11004  002208                     l1194:
 11005                           
 11006                           ; BSR set to: 0
 11007  002208  929D               	bcf	3997,1,c	;volatile
 11008  00220A                     l1195:
 11009                           
 11010                           ; BSR set to: 0
 11011  00220A  84CA               	bsf	4042,2,c	;volatile
 11012                           
 11013                           ; BSR set to: 0
 11014  00220C  0012               	return		;funcret
 11015  00220E                     __end_of_OpenTimer2:
 11016                           	opt stack 0
 11017                           prodh	equ	0xFF4
 11018                           prodl	equ	0xFF3
 11019                           intcon	equ	0xFF2
 11020                           intcon2	equ	0xFF1
 11021                           intcon3	equ	0xFF0
 11022                           postinc0	equ	0xFEE
 11023                           wreg	equ	0xFE8
 11024                           postinc1	equ	0xFE6
 11025                           fsr1h	equ	0xFE2
 11026                           fsr1l	equ	0xFE1
 11027                           indf2	equ	0xFDF
 11028                           postinc2	equ	0xFDE
 11029                           postdec2	equ	0xFDD
 11030                           fsr2h	equ	0xFDA
 11031                           fsr2l	equ	0xFD9
 11032                           status	equ	0xFD8
 11033                           
 11034 ;; *************** function _ConfigureTimer1 *****************
 11035 ;; Defined at:
 11036 ;;		line 128 in file "FastBuggy17_Main_Code_TUNING.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;		None
 11041 ;; Return value:  Size  Location     Type
 11042 ;;		None               void
 11043 ;; Registers used:
 11044 ;;		wreg, status,2, status,0, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;Total ram usage:        0 bytes
 11055 ;; Hardware stack levels used:    1
 11056 ;; Hardware stack levels required when called:    8
 11057 ;; This function calls:
 11058 ;;		_OpenTimer1
 11059 ;;		_WriteTimer1
 11060 ;; This function is called by:
 11061 ;;		_main
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text86
 11066  0022DC                     __ptext86:
 11067                           	opt stack 0
 11068  0022DC                     _ConfigureTimer1:
 11069                           	opt stack 22
 11070                           
 11071                           ;FastBuggy17_Main_Code_TUNING.c: 130: OpenTimer1(0b01111111
 11072                           ;FastBuggy17_Main_Code_TUNING.c: 131: & 0b11111111
 11073                           ;FastBuggy17_Main_Code_TUNING.c: 132: & 0b11111101
 11074                           ;FastBuggy17_Main_Code_TUNING.c: 133: & 0b11011111
 11075                           ;FastBuggy17_Main_Code_TUNING.c: 134: & 0b11110111
 11076                           ;FastBuggy17_Main_Code_TUNING.c: 135: & 0b11111111);
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;incstack = 0
 11080  0022DC  0E55               	movlw	85
 11081  0022DE  ECB5  F00F         	call	_OpenTimer1
 11082                           
 11083                           ;FastBuggy17_Main_Code_TUNING.c: 139: T1CONbits.TMR1ON = 0;
 11084  0022E2  90CD               	bcf	4045,0,c	;volatile
 11085                           
 11086                           ;FastBuggy17_Main_Code_TUNING.c: 141: WriteTimer1(0);
 11087  0022E4  0E00               	movlw	0
 11088  0022E6  0100               	movlb	0	; () banked
 11089  0022E8  6FCF               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 11090  0022EA  0E00               	movlw	0
 11091  0022EC  6FCE               	movwf	WriteTimer1@timer1& (0+255),b
 11092  0022EE  ECCD  F011         	call	_WriteTimer1	;wreg free
 11093  0022F2  0012               	return		;funcret
 11094  0022F4                     __end_of_ConfigureTimer1:
 11095                           	opt stack 0
 11096                           prodh	equ	0xFF4
 11097                           prodl	equ	0xFF3
 11098                           intcon	equ	0xFF2
 11099                           intcon2	equ	0xFF1
 11100                           intcon3	equ	0xFF0
 11101                           postinc0	equ	0xFEE
 11102                           wreg	equ	0xFE8
 11103                           postinc1	equ	0xFE6
 11104                           fsr1h	equ	0xFE2
 11105                           fsr1l	equ	0xFE1
 11106                           indf2	equ	0xFDF
 11107                           postinc2	equ	0xFDE
 11108                           postdec2	equ	0xFDD
 11109                           fsr2h	equ	0xFDA
 11110                           fsr2l	equ	0xFD9
 11111                           status	equ	0xFD8
 11112                           
 11113 ;; *************** function _WriteTimer1 *****************
 11114 ;; Defined at:
 11115 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  timer1          2   16[BANK0 ] unsigned int 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  timer           2   18[BANK0 ] struct Timers
 11120 ;; Return value:  Size  Location     Type
 11121 ;;		None               void
 11122 ;; Registers used:
 11123 ;;		None
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11132 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;Total ram usage:        4 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    7
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_ConfigureUltrasound
 11140 ;;		_ConfigureTimer1
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text87
 11145  00239A                     __ptext87:
 11146                           	opt stack 0
 11147  00239A                     _WriteTimer1:
 11148                           	opt stack 22
 11149                           
 11150                           ;incstack = 0
 11151  00239A  C0CE  F0D0         	movff	WriteTimer1@timer1,WriteTimer1@timer
 11152  00239E  C0CF  F0D1         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 11153  0023A2  C0D1  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 11154  0023A6  C0D0  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 11155  0023AA  0012               	return		;funcret
 11156  0023AC                     __end_of_WriteTimer1:
 11157                           	opt stack 0
 11158                           prodh	equ	0xFF4
 11159                           prodl	equ	0xFF3
 11160                           intcon	equ	0xFF2
 11161                           intcon2	equ	0xFF1
 11162                           intcon3	equ	0xFF0
 11163                           postinc0	equ	0xFEE
 11164                           wreg	equ	0xFE8
 11165                           postinc1	equ	0xFE6
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           postdec2	equ	0xFDD
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function _OpenTimer1 *****************
 11176 ;; Defined at:
 11177 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;  config          1    wreg     unsigned char 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  config          1   16[BANK0 ] unsigned char 
 11182 ;; Return value:  Size  Location     Type
 11183 ;;		None               void
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11194 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11195 ;;Total ram usage:        1 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:    7
 11198 ;; This function calls:
 11199 ;;		Nothing
 11200 ;; This function is called by:
 11201 ;;		_ConfigureTimer1
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text88
 11206  001F6A                     __ptext88:
 11207                           	opt stack 0
 11208  001F6A                     _OpenTimer1:
 11209                           	opt stack 22
 11210                           
 11211                           ;incstack = 0
 11212                           ;OpenTimer1@config stored from wreg
 11213  001F6A  0100               	movlb	0	; () banked
 11214  001F6C  6FCE               	movwf	OpenTimer1@config& (0+255),b
 11215                           
 11216                           ; BSR set to: 0
 11217  001F6E  0100               	movlb	0	; () banked
 11218  001F70  51CE               	movf	OpenTimer1@config& (0+255),w,b
 11219  001F72  0B7E               	andlw	126
 11220  001F74  6ECD               	movwf	4045,c	;volatile
 11221                           
 11222                           ; BSR set to: 0
 11223  001F76  0100               	movlb	0	; () banked
 11224  001F78  ADCE               	btfss	OpenTimer1@config& (0+255),6,b
 11225  001F7A  D002               	goto	l1163
 11226                           
 11227                           ; BSR set to: 0
 11228  001F7C  8ECD               	bsf	4045,7,c	;volatile
 11229  001F7E  D002               	goto	l6065
 11230  001F80                     l1163:
 11231                           
 11232                           ; BSR set to: 0
 11233  001F80  9ECD               	bcf	4045,7,c	;volatile
 11234  001F82  D000               	goto	l6065
 11235  001F84                     l6065:
 11236                           
 11237                           ; BSR set to: 0
 11238  001F84  0E00               	movlw	0
 11239  001F86  6ECF               	movwf	4047,c	;volatile
 11240  001F88  0E00               	movlw	0
 11241  001F8A  6ECE               	movwf	4046,c	;volatile
 11242                           
 11243                           ; BSR set to: 0
 11244  001F8C  909E               	bcf	3998,0,c	;volatile
 11245                           
 11246                           ; BSR set to: 0
 11247  001F8E  0100               	movlb	0	; () banked
 11248  001F90  AFCE               	btfss	OpenTimer1@config& (0+255),7,b
 11249  001F92  D002               	goto	l1165
 11250                           
 11251                           ; BSR set to: 0
 11252  001F94  809D               	bsf	3997,0,c	;volatile
 11253  001F96  D001               	goto	l1166
 11254  001F98                     l1165:
 11255                           
 11256                           ; BSR set to: 0
 11257  001F98  909D               	bcf	3997,0,c	;volatile
 11258  001F9A                     l1166:
 11259                           
 11260                           ; BSR set to: 0
 11261  001F9A  80CD               	bsf	4045,0,c	;volatile
 11262                           
 11263                           ; BSR set to: 0
 11264  001F9C  0012               	return		;funcret
 11265  001F9E                     __end_of_OpenTimer1:
 11266                           	opt stack 0
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           intcon2	equ	0xFF1
 11271                           intcon3	equ	0xFF0
 11272                           postinc0	equ	0xFEE
 11273                           wreg	equ	0xFE8
 11274                           postinc1	equ	0xFE6
 11275                           fsr1h	equ	0xFE2
 11276                           fsr1l	equ	0xFE1
 11277                           indf2	equ	0xFDF
 11278                           postinc2	equ	0xFDE
 11279                           postdec2	equ	0xFDD
 11280                           fsr2h	equ	0xFDA
 11281                           fsr2l	equ	0xFD9
 11282                           status	equ	0xFD8
 11283                           
 11284 ;; *************** function _ConfigureTimer0 *****************
 11285 ;; Defined at:
 11286 ;;		line 114 in file "FastBuggy17_Main_Code_TUNING.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;		None
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;		None
 11291 ;; Return value:  Size  Location     Type
 11292 ;;		None               void
 11293 ;; Registers used:
 11294 ;;		wreg, status,2, status,0, cstack
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;Total ram usage:        0 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; Hardware stack levels required when called:    8
 11307 ;; This function calls:
 11308 ;;		_OpenTimer0
 11309 ;;		_WriteTimer0
 11310 ;; This function is called by:
 11311 ;;		_main
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text89
 11316  00230A                     __ptext89:
 11317                           	opt stack 0
 11318  00230A                     _ConfigureTimer0:
 11319                           	opt stack 22
 11320                           
 11321                           ;FastBuggy17_Main_Code_TUNING.c: 116: OpenTimer0(0b11111111
 11322                           ;FastBuggy17_Main_Code_TUNING.c: 117: & 0b10111111
 11323                           ;FastBuggy17_Main_Code_TUNING.c: 118: & 0b11011111
 11324                           ;FastBuggy17_Main_Code_TUNING.c: 119: & 0b11111111);
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;incstack = 0
 11328  00230A  0E9F               	movlw	159
 11329  00230C  ECAA  F010         	call	_OpenTimer0
 11330                           
 11331                           ;FastBuggy17_Main_Code_TUNING.c: 123: WriteTimer0(63036);
 11332  002310  0EF6               	movlw	246
 11333  002312  0100               	movlb	0	; () banked
 11334  002314  6FCF               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 11335  002316  0E3C               	movlw	60
 11336  002318  6FCE               	movwf	WriteTimer0@timer0& (0+255),b
 11337  00231A  ECD6  F011         	call	_WriteTimer0	;wreg free
 11338  00231E  0012               	return		;funcret
 11339  002320                     __end_of_ConfigureTimer0:
 11340                           	opt stack 0
 11341                           prodh	equ	0xFF4
 11342                           prodl	equ	0xFF3
 11343                           intcon	equ	0xFF2
 11344                           intcon2	equ	0xFF1
 11345                           intcon3	equ	0xFF0
 11346                           postinc0	equ	0xFEE
 11347                           wreg	equ	0xFE8
 11348                           postinc1	equ	0xFE6
 11349                           fsr1h	equ	0xFE2
 11350                           fsr1l	equ	0xFE1
 11351                           indf2	equ	0xFDF
 11352                           postinc2	equ	0xFDE
 11353                           postdec2	equ	0xFDD
 11354                           fsr2h	equ	0xFDA
 11355                           fsr2l	equ	0xFD9
 11356                           status	equ	0xFD8
 11357                           
 11358 ;; *************** function _WriteTimer0 *****************
 11359 ;; Defined at:
 11360 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;  timer0          2   16[BANK0 ] unsigned int 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  timer           2   18[BANK0 ] struct Timers
 11365 ;; Return value:  Size  Location     Type
 11366 ;;		None               void
 11367 ;; Registers used:
 11368 ;;		None
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;Total ram usage:        4 bytes
 11379 ;; Hardware stack levels used:    1
 11380 ;; Hardware stack levels required when called:    7
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_ConfigureTimer0
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text90
 11389  0023AC                     __ptext90:
 11390                           	opt stack 0
 11391  0023AC                     _WriteTimer0:
 11392                           	opt stack 22
 11393                           
 11394                           ;incstack = 0
 11395  0023AC  C0CE  F0D0         	movff	WriteTimer0@timer0,WriteTimer0@timer
 11396  0023B0  C0CF  F0D1         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 11397  0023B4  C0D1  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 11398  0023B8  C0D0  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 11399  0023BC  0012               	return		;funcret
 11400  0023BE                     __end_of_WriteTimer0:
 11401                           	opt stack 0
 11402                           prodh	equ	0xFF4
 11403                           prodl	equ	0xFF3
 11404                           intcon	equ	0xFF2
 11405                           intcon2	equ	0xFF1
 11406                           intcon3	equ	0xFF0
 11407                           postinc0	equ	0xFEE
 11408                           wreg	equ	0xFE8
 11409                           postinc1	equ	0xFE6
 11410                           fsr1h	equ	0xFE2
 11411                           fsr1l	equ	0xFE1
 11412                           indf2	equ	0xFDF
 11413                           postinc2	equ	0xFDE
 11414                           postdec2	equ	0xFDD
 11415                           fsr2h	equ	0xFDA
 11416                           fsr2l	equ	0xFD9
 11417                           status	equ	0xFD8
 11418                           
 11419 ;; *************** function _OpenTimer0 *****************
 11420 ;; Defined at:
 11421 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  config          1    wreg     unsigned char 
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;  config          1   16[BANK0 ] unsigned char 
 11426 ;; Return value:  Size  Location     Type
 11427 ;;		None               void
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;Total ram usage:        1 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    7
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_ConfigureTimer0
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text91
 11450  002154                     __ptext91:
 11451                           	opt stack 0
 11452  002154                     _OpenTimer0:
 11453                           	opt stack 22
 11454                           
 11455                           ;incstack = 0
 11456                           ;OpenTimer0@config stored from wreg
 11457  002154  0100               	movlb	0	; () banked
 11458  002156  6FCE               	movwf	OpenTimer0@config& (0+255),b
 11459                           
 11460                           ; BSR set to: 0
 11461  002158  0100               	movlb	0	; () banked
 11462  00215A  51CE               	movf	OpenTimer0@config& (0+255),w,b
 11463  00215C  0B7F               	andlw	127
 11464  00215E  6ED5               	movwf	4053,c	;volatile
 11465                           
 11466                           ; BSR set to: 0
 11467  002160  0E00               	movlw	0
 11468  002162  6ED7               	movwf	4055,c	;volatile
 11469                           
 11470                           ; BSR set to: 0
 11471  002164  0E00               	movlw	0
 11472  002166  6ED6               	movwf	4054,c	;volatile
 11473                           
 11474                           ; BSR set to: 0
 11475  002168  94F2               	bcf	intcon,2,c	;volatile
 11476                           
 11477                           ; BSR set to: 0
 11478  00216A  0100               	movlb	0	; () banked
 11479  00216C  AFCE               	btfss	OpenTimer0@config& (0+255),7,b
 11480  00216E  D002               	goto	l1139
 11481                           
 11482                           ; BSR set to: 0
 11483  002170  8AF2               	bsf	intcon,5,c	;volatile
 11484  002172  D001               	goto	l1140
 11485  002174                     l1139:
 11486                           
 11487                           ; BSR set to: 0
 11488  002174  9AF2               	bcf	intcon,5,c	;volatile
 11489  002176                     l1140:
 11490                           
 11491                           ; BSR set to: 0
 11492  002176  8ED5               	bsf	4053,7,c	;volatile
 11493                           
 11494                           ; BSR set to: 0
 11495  002178  0012               	return		;funcret
 11496  00217A                     __end_of_OpenTimer0:
 11497                           	opt stack 0
 11498                           prodh	equ	0xFF4
 11499                           prodl	equ	0xFF3
 11500                           intcon	equ	0xFF2
 11501                           intcon2	equ	0xFF1
 11502                           intcon3	equ	0xFF0
 11503                           postinc0	equ	0xFEE
 11504                           wreg	equ	0xFE8
 11505                           postinc1	equ	0xFE6
 11506                           fsr1h	equ	0xFE2
 11507                           fsr1l	equ	0xFE1
 11508                           indf2	equ	0xFDF
 11509                           postinc2	equ	0xFDE
 11510                           postdec2	equ	0xFDD
 11511                           fsr2h	equ	0xFDA
 11512                           fsr2l	equ	0xFD9
 11513                           status	equ	0xFD8
 11514                           
 11515 ;; *************** function _ConfigurePWM *****************
 11516 ;; Defined at:
 11517 ;;		line 164 in file "FastBuggy17_Main_Code_TUNING.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;		None
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;		None
 11522 ;; Return value:  Size  Location     Type
 11523 ;;		None               void
 11524 ;; Registers used:
 11525 ;;		wreg, status,2, cstack
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11535 ;;Total ram usage:        0 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    8
 11538 ;; This function calls:
 11539 ;;		_OpenPWM4
 11540 ;;		_OpenPWM5
 11541 ;; This function is called by:
 11542 ;;		_main
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           	psect	text92
 11547  00248C                     __ptext92:
 11548                           	opt stack 0
 11549  00248C                     _ConfigurePWM:
 11550                           	opt stack 22
 11551                           
 11552                           ;FastBuggy17_Main_Code_TUNING.c: 166: OpenPWM4(130);
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;incstack = 0
 11556  00248C  0E82               	movlw	130
 11557  00248E  ECD0  F010         	call	_OpenPWM4
 11558                           
 11559                           ;FastBuggy17_Main_Code_TUNING.c: 167: OpenPWM5(130);
 11560  002492  0E82               	movlw	130
 11561  002494  ECBD  F010         	call	_OpenPWM5
 11562  002498  0012               	return		;funcret
 11563  00249A                     __end_of_ConfigurePWM:
 11564                           	opt stack 0
 11565                           prodh	equ	0xFF4
 11566                           prodl	equ	0xFF3
 11567                           intcon	equ	0xFF2
 11568                           intcon2	equ	0xFF1
 11569                           intcon3	equ	0xFF0
 11570                           postinc0	equ	0xFEE
 11571                           wreg	equ	0xFE8
 11572                           postinc1	equ	0xFE6
 11573                           fsr1h	equ	0xFE2
 11574                           fsr1l	equ	0xFE1
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           postdec2	equ	0xFDD
 11578                           fsr2h	equ	0xFDA
 11579                           fsr2l	equ	0xFD9
 11580                           status	equ	0xFD8
 11581                           
 11582 ;; *************** function _OpenPWM5 *****************
 11583 ;; Defined at:
 11584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  period          1    wreg     unsigned char 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  period          1   16[BANK0 ] unsigned char 
 11589 ;; Return value:  Size  Location     Type
 11590 ;;		None               void
 11591 ;; Registers used:
 11592 ;;		wreg, status,2
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;Total ram usage:        1 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; Hardware stack levels required when called:    7
 11605 ;; This function calls:
 11606 ;;		Nothing
 11607 ;; This function is called by:
 11608 ;;		_ConfigurePWM
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612                           	psect	text93
 11613  00217A                     __ptext93:
 11614                           	opt stack 0
 11615  00217A                     _OpenPWM5:
 11616                           	opt stack 22
 11617                           
 11618                           ;incstack = 0
 11619                           ;OpenPWM5@period stored from wreg
 11620  00217A  0100               	movlb	0	; () banked
 11621  00217C  6FCE               	movwf	OpenPWM5@period& (0+255),b
 11622                           
 11623                           ; BSR set to: 0
 11624  00217E  0E0C               	movlw	12
 11625  002180  6E70               	movwf	3952,c	;volatile
 11626                           
 11627                           ; BSR set to: 0
 11628  002182  ACB1               	btfss	4017,6,c	;volatile
 11629                           
 11630                           ; BSR set to: 0
 11631  002184  B6B1               	btfsc	4017,3,c	;volatile
 11632  002186  D005               	goto	l1117
 11633                           
 11634                           ; BSR set to: 0
 11635  002188  94CA               	bcf	4042,2,c	;volatile
 11636                           
 11637                           ; BSR set to: 0
 11638  00218A  C0CE  FFCB         	movff	OpenPWM5@period,4043	;volatile
 11639                           
 11640                           ; BSR set to: 0
 11641  00218E  84CA               	bsf	4042,2,c	;volatile
 11642  002190  D005               	goto	l6117
 11643  002192                     l1117:
 11644                           
 11645                           ; BSR set to: 0
 11646  002192  9476               	bcf	3958,2,c	;volatile
 11647                           
 11648                           ; BSR set to: 0
 11649  002194  C0CE  FF77         	movff	OpenPWM5@period,3959	;volatile
 11650                           
 11651                           ; BSR set to: 0
 11652  002198  8476               	bsf	3958,2,c	;volatile
 11653  00219A  D000               	goto	l6117
 11654  00219C                     l6117:
 11655                           
 11656                           ; BSR set to: 0
 11657  00219C  9898               	bcf	3992,4,c	;volatile
 11658                           
 11659                           ; BSR set to: 0
 11660  00219E  0012               	return		;funcret
 11661  0021A0                     __end_of_OpenPWM5:
 11662                           	opt stack 0
 11663                           prodh	equ	0xFF4
 11664                           prodl	equ	0xFF3
 11665                           intcon	equ	0xFF2
 11666                           intcon2	equ	0xFF1
 11667                           intcon3	equ	0xFF0
 11668                           postinc0	equ	0xFEE
 11669                           wreg	equ	0xFE8
 11670                           postinc1	equ	0xFE6
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           postinc2	equ	0xFDE
 11675                           postdec2	equ	0xFDD
 11676                           fsr2h	equ	0xFDA
 11677                           fsr2l	equ	0xFD9
 11678                           status	equ	0xFD8
 11679                           
 11680 ;; *************** function _OpenPWM4 *****************
 11681 ;; Defined at:
 11682 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  period          1    wreg     unsigned char 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;  period          1   16[BANK0 ] unsigned char 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;		None               void
 11689 ;; Registers used:
 11690 ;;		wreg, status,2
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;Total ram usage:        1 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    7
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_ConfigurePWM
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text94
 11711  0021A0                     __ptext94:
 11712                           	opt stack 0
 11713  0021A0                     _OpenPWM4:
 11714                           	opt stack 22
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;incstack = 0
 11718                           ;OpenPWM4@period stored from wreg
 11719  0021A0  0100               	movlb	0	; () banked
 11720  0021A2  6FCE               	movwf	OpenPWM4@period& (0+255),b
 11721                           
 11722                           ; BSR set to: 0
 11723  0021A4  0E0C               	movlw	12
 11724  0021A6  6E73               	movwf	3955,c	;volatile
 11725                           
 11726                           ; BSR set to: 0
 11727  0021A8  9698               	bcf	3992,3,c	;volatile
 11728                           
 11729                           ; BSR set to: 0
 11730  0021AA  ACB1               	btfss	4017,6,c	;volatile
 11731                           
 11732                           ; BSR set to: 0
 11733  0021AC  B6B1               	btfsc	4017,3,c	;volatile
 11734  0021AE  D005               	goto	l1091
 11735                           
 11736                           ; BSR set to: 0
 11737  0021B0  94CA               	bcf	4042,2,c	;volatile
 11738                           
 11739                           ; BSR set to: 0
 11740  0021B2  C0CE  FFCB         	movff	OpenPWM4@period,4043	;volatile
 11741                           
 11742                           ; BSR set to: 0
 11743  0021B6  84CA               	bsf	4042,2,c	;volatile
 11744  0021B8  D005               	goto	l1093
 11745  0021BA                     l1091:
 11746                           
 11747                           ; BSR set to: 0
 11748  0021BA  9476               	bcf	3958,2,c	;volatile
 11749                           
 11750                           ; BSR set to: 0
 11751  0021BC  C0CE  FF77         	movff	OpenPWM4@period,3959	;volatile
 11752                           
 11753                           ; BSR set to: 0
 11754  0021C0  8476               	bsf	3958,2,c	;volatile
 11755  0021C2  D000               	goto	l1093
 11756  0021C4                     l1093:
 11757                           
 11758                           ; BSR set to: 0
 11759  0021C4  0012               	return		;funcret
 11760  0021C6                     __end_of_OpenPWM4:
 11761                           	opt stack 0
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           intcon2	equ	0xFF1
 11766                           intcon3	equ	0xFF0
 11767                           postinc0	equ	0xFEE
 11768                           wreg	equ	0xFE8
 11769                           postinc1	equ	0xFE6
 11770                           fsr1h	equ	0xFE2
 11771                           fsr1l	equ	0xFE1
 11772                           indf2	equ	0xFDF
 11773                           postinc2	equ	0xFDE
 11774                           postdec2	equ	0xFDD
 11775                           fsr2h	equ	0xFDA
 11776                           fsr2l	equ	0xFD9
 11777                           status	equ	0xFD8
 11778                           
 11779 ;; *************** function _ConfigureInterrupts *****************
 11780 ;; Defined at:
 11781 ;;		line 57 in file "FastBuggy17_Main_Code_TUNING.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;		None
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;		None
 11786 ;; Return value:  Size  Location     Type
 11787 ;;		None               void
 11788 ;; Registers used:
 11789 ;;		None
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;Total ram usage:        0 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    7
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_main
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text95
 11810  002106                     __ptext95:
 11811                           	opt stack 0
 11812  002106                     _ConfigureInterrupts:
 11813                           	opt stack 23
 11814                           
 11815                           ;FastBuggy17_Main_Code_TUNING.c: 59: INTCONbits.GIE = 1;
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;incstack = 0
 11819  002106  8EF2               	bsf	intcon,7,c	;volatile
 11820                           
 11821                           ;FastBuggy17_Main_Code_TUNING.c: 60: INTCONbits.PEIE = 1;
 11822  002108  8CF2               	bsf	intcon,6,c	;volatile
 11823                           
 11824                           ;FastBuggy17_Main_Code_TUNING.c: 61: RCONbits.IPEN = 1;
 11825  00210A  8ED0               	bsf	4048,7,c	;volatile
 11826                           
 11827                           ;FastBuggy17_Main_Code_TUNING.c: 83: INTCON3bits.INT3IE = 0;
 11828  00210C  9AF0               	bcf	intcon3,5,c	;volatile
 11829                           
 11830                           ;FastBuggy17_Main_Code_TUNING.c: 84: INTCON3bits.INT3IF = 0;
 11831  00210E  94F0               	bcf	intcon3,2,c	;volatile
 11832                           
 11833                           ;FastBuggy17_Main_Code_TUNING.c: 85: INTCON2bits.INTEDG3 = 1;
 11834  002110  86F1               	bsf	intcon2,3,c	;volatile
 11835                           
 11836                           ;FastBuggy17_Main_Code_TUNING.c: 86: INTCON2bits.INT3IP = 1;
 11837  002112  82F1               	bsf	intcon2,1,c	;volatile
 11838                           
 11839                           ;FastBuggy17_Main_Code_TUNING.c: 89: INTCONbits.TMR0IE = 1;
 11840  002114  8AF2               	bsf	intcon,5,c	;volatile
 11841                           
 11842                           ;FastBuggy17_Main_Code_TUNING.c: 90: INTCONbits.TMR0IF = 0;
 11843  002116  94F2               	bcf	intcon,2,c	;volatile
 11844                           
 11845                           ;FastBuggy17_Main_Code_TUNING.c: 91: INTCON2bits.TMR0IP = 1;
 11846  002118  84F1               	bsf	intcon2,2,c	;volatile
 11847                           
 11848                           ;FastBuggy17_Main_Code_TUNING.c: 100: PIE1bits.ADIE = 0;
 11849  00211A  9C9D               	bcf	3997,6,c	;volatile
 11850                           
 11851                           ;FastBuggy17_Main_Code_TUNING.c: 101: PIR1bits.ADIF = 0;
 11852  00211C  9C9E               	bcf	3998,6,c	;volatile
 11853                           
 11854                           ;FastBuggy17_Main_Code_TUNING.c: 102: IPR1bits.ADIP = 0;
 11855  00211E  9C9F               	bcf	3999,6,c	;volatile
 11856                           
 11857                           ;FastBuggy17_Main_Code_TUNING.c: 105: PIE1bits.RC1IE = 0;
 11858  002120  9A9D               	bcf	3997,5,c	;volatile
 11859                           
 11860                           ;FastBuggy17_Main_Code_TUNING.c: 106: PIE1bits.TX1IE = 0;
 11861  002122  989D               	bcf	3997,4,c	;volatile
 11862                           
 11863                           ;FastBuggy17_Main_Code_TUNING.c: 107: PIR1bits.RC1IF = 0;
 11864  002124  9A9E               	bcf	3998,5,c	;volatile
 11865                           
 11866                           ;FastBuggy17_Main_Code_TUNING.c: 108: PIR1bits.TX1IF = 0;
 11867  002126  989E               	bcf	3998,4,c	;volatile
 11868                           
 11869                           ;FastBuggy17_Main_Code_TUNING.c: 109: IPR1bits.RC1IP = 0;
 11870  002128  9A9F               	bcf	3999,5,c	;volatile
 11871                           
 11872                           ;FastBuggy17_Main_Code_TUNING.c: 110: IPR1bits.TX1IP = 0;
 11873  00212A  989F               	bcf	3999,4,c	;volatile
 11874  00212C  0012               	return		;funcret
 11875  00212E                     __end_of_ConfigureInterrupts:
 11876                           	opt stack 0
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           intcon2	equ	0xFF1
 11881                           intcon3	equ	0xFF0
 11882                           postinc0	equ	0xFEE
 11883                           wreg	equ	0xFE8
 11884                           postinc1	equ	0xFE6
 11885                           fsr1h	equ	0xFE2
 11886                           fsr1l	equ	0xFE1
 11887                           indf2	equ	0xFDF
 11888                           postinc2	equ	0xFDE
 11889                           postdec2	equ	0xFDD
 11890                           fsr2h	equ	0xFDA
 11891                           fsr2l	equ	0xFD9
 11892                           status	equ	0xFD8
 11893                           
 11894 ;; *************** function _ConfigureBuggyIO *****************
 11895 ;; Defined at:
 11896 ;;		line 187 in file "FastBuggy17_Main_Code_TUNING.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;		None
 11901 ;; Return value:  Size  Location     Type
 11902 ;;		None               void
 11903 ;; Registers used:
 11904 ;;		wreg, status,2
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;Total ram usage:        0 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:    7
 11917 ;; This function calls:
 11918 ;;		Nothing
 11919 ;; This function is called by:
 11920 ;;		_main
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text96
 11925  0022C2                     __ptext96:
 11926                           	opt stack 0
 11927  0022C2                     _ConfigureBuggyIO:
 11928                           	opt stack 23
 11929                           
 11930                           ;FastBuggy17_Main_Code_TUNING.c: 190: TRISA = 0xFF;
 11931                           
 11932                           ;incstack = 0
 11933  0022C2  6892               	setf	3986,c	;volatile
 11934                           
 11935                           ;FastBuggy17_Main_Code_TUNING.c: 193: TRISB = 0xFF;
 11936  0022C4  6893               	setf	3987,c	;volatile
 11937                           
 11938                           ;FastBuggy17_Main_Code_TUNING.c: 196: TRISC = 0x9F;
 11939  0022C6  0E9F               	movlw	159
 11940  0022C8  6E94               	movwf	3988,c	;volatile
 11941                           
 11942                           ;FastBuggy17_Main_Code_TUNING.c: 199: TRISD = 0xE0;
 11943  0022CA  0EE0               	movlw	224
 11944  0022CC  6E95               	movwf	3989,c	;volatile
 11945                           
 11946                           ;FastBuggy17_Main_Code_TUNING.c: 202: TRISE = 0x00;
 11947  0022CE  0E00               	movlw	0
 11948  0022D0  6E96               	movwf	3990,c	;volatile
 11949                           
 11950                           ;FastBuggy17_Main_Code_TUNING.c: 205: TRISG = 0xE7;
 11951  0022D2  0EE7               	movlw	231
 11952  0022D4  6E98               	movwf	3992,c	;volatile
 11953                           
 11954                           ;FastBuggy17_Main_Code_TUNING.c: 208: TRISJ = 0x00;
 11955  0022D6  0E00               	movlw	0
 11956  0022D8  6E9A               	movwf	3994,c	;volatile
 11957  0022DA  0012               	return		;funcret
 11958  0022DC                     __end_of_ConfigureBuggyIO:
 11959                           	opt stack 0
 11960                           prodh	equ	0xFF4
 11961                           prodl	equ	0xFF3
 11962                           intcon	equ	0xFF2
 11963                           intcon2	equ	0xFF1
 11964                           intcon3	equ	0xFF0
 11965                           postinc0	equ	0xFEE
 11966                           wreg	equ	0xFE8
 11967                           postinc1	equ	0xFE6
 11968                           fsr1h	equ	0xFE2
 11969                           fsr1l	equ	0xFE1
 11970                           indf2	equ	0xFDF
 11971                           postinc2	equ	0xFDE
 11972                           postdec2	equ	0xFDD
 11973                           fsr2h	equ	0xFDA
 11974                           fsr2l	equ	0xFD9
 11975                           status	equ	0xFD8
 11976                           
 11977 ;; *************** function _ConfigureADC *****************
 11978 ;; Defined at:
 11979 ;;		line 213 in file "FastBuggy17_Main_Code_TUNING.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;		None
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;		None
 11984 ;; Return value:  Size  Location     Type
 11985 ;;		None               void
 11986 ;; Registers used:
 11987 ;;		wreg, status,2, status,0, cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;Total ram usage:        0 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    8
 12000 ;; This function calls:
 12001 ;;		_OpenADC
 12002 ;; This function is called by:
 12003 ;;		_main
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           	psect	text97
 12008  002374                     __ptext97:
 12009                           	opt stack 0
 12010  002374                     _ConfigureADC:
 12011                           	opt stack 22
 12012                           
 12013                           ;FastBuggy17_Main_Code_TUNING.c: 215: OpenADC(0b10011111
 12014                           ;FastBuggy17_Main_Code_TUNING.c: 216: & 0b11111111
 12015                           ;FastBuggy17_Main_Code_TUNING.c: 217: & 0b11110101,
 12016                           ;FastBuggy17_Main_Code_TUNING.c: 218: 0b10000111
 12017                           ;FastBuggy17_Main_Code_TUNING.c: 219: & 0b01111111
 12018                           ;FastBuggy17_Main_Code_TUNING.c: 220: & 0b11111110
 12019                           ;FastBuggy17_Main_Code_TUNING.c: 221: & 0b11111101,
 12020                           ;FastBuggy17_Main_Code_TUNING.c: 222: 9);
 12021                           
 12022                           ;incstack = 0
 12023  002374  0E04               	movlw	4
 12024  002376  0100               	movlb	0	; () banked
 12025  002378  6FCE               	movwf	OpenADC@config2& (0+255),b
 12026  00237A  0E09               	movlw	9
 12027  00237C  0100               	movlb	0	; () banked
 12028  00237E  6FCF               	movwf	OpenADC@portconfig& (0+255),b
 12029  002380  0E95               	movlw	149
 12030  002382  EC33  F00B         	call	_OpenADC
 12031  002386  0012               	return		;funcret
 12032  002388                     __end_of_ConfigureADC:
 12033                           	opt stack 0
 12034                           prodh	equ	0xFF4
 12035                           prodl	equ	0xFF3
 12036                           intcon	equ	0xFF2
 12037                           intcon2	equ	0xFF1
 12038                           intcon3	equ	0xFF0
 12039                           postinc0	equ	0xFEE
 12040                           wreg	equ	0xFE8
 12041                           postinc1	equ	0xFE6
 12042                           fsr1h	equ	0xFE2
 12043                           fsr1l	equ	0xFE1
 12044                           indf2	equ	0xFDF
 12045                           postinc2	equ	0xFDE
 12046                           postdec2	equ	0xFDD
 12047                           fsr2h	equ	0xFDA
 12048                           fsr2l	equ	0xFD9
 12049                           status	equ	0xFD8
 12050                           
 12051 ;; *************** function _OpenADC *****************
 12052 ;; Defined at:
 12053 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;  config          1    wreg     unsigned char 
 12056 ;;  config2         1   16[BANK0 ] unsigned char 
 12057 ;;  portconfig      1   17[BANK0 ] unsigned char 
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;  config          1   20[BANK0 ] unsigned char 
 12060 ;; Return value:  Size  Location     Type
 12061 ;;		None               void
 12062 ;; Registers used:
 12063 ;;		wreg, status,2, status,0
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12073 ;;Total ram usage:        5 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:    7
 12076 ;; This function calls:
 12077 ;;		Nothing
 12078 ;; This function is called by:
 12079 ;;		_ConfigureADC
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text98
 12084  001666                     __ptext98:
 12085                           	opt stack 0
 12086  001666                     _OpenADC:
 12087                           	opt stack 22
 12088                           
 12089                           ;incstack = 0
 12090                           ;OpenADC@config stored from wreg
 12091  001666  0100               	movlb	0	; () banked
 12092  001668  6FD2               	movwf	OpenADC@config& (0+255),b
 12093                           
 12094                           ; BSR set to: 0
 12095  00166A  0E00               	movlw	0
 12096  00166C  6EC2               	movwf	4034,c	;volatile
 12097  00166E  0E00               	movlw	0
 12098  001670  6EC0               	movwf	4032,c	;volatile
 12099                           
 12100                           ; BSR set to: 0
 12101  001672  0100               	movlb	0	; () banked
 12102  001674  90D8               	bcf	status,0,c
 12103  001676  31CE               	rrcf	OpenADC@config2& (0+255),w,b
 12104  001678  0B3C               	andlw	60
 12105  00167A  6EC2               	movwf	4034,c	;volatile
 12106                           
 12107                           ; BSR set to: 0
 12108  00167C  C0CE  F0D0         	movff	OpenADC@config2,??_OpenADC
 12109  001680  0100               	movlb	0	; () banked
 12110  001682  3BD0               	swapf	??_OpenADC& (0+255),f,b
 12111  001684  0EF0               	movlw	240
 12112  001686  17D0               	andwf	??_OpenADC& (0+255),f,b
 12113  001688  0E30               	movlw	48
 12114  00168A  0100               	movlb	0	; () banked
 12115  00168C  17D0               	andwf	??_OpenADC& (0+255),f,b
 12116  00168E  0100               	movlb	0	; () banked
 12117  001690  51CF               	movf	OpenADC@portconfig& (0+255),w,b
 12118  001692  0B0F               	andlw	15
 12119  001694  0100               	movlb	0	; () banked
 12120  001696  11D0               	iorwf	??_OpenADC& (0+255),w,b
 12121  001698  6EC1               	movwf	4033,c	;volatile
 12122                           
 12123                           ; BSR set to: 0
 12124  00169A  C0D2  F0D0         	movff	OpenADC@config,??_OpenADC
 12125  00169E  0100               	movlb	0	; () banked
 12126  0016A0  90D8               	bcf	status,0,c
 12127  0016A2  37D0               	rlcf	??_OpenADC& (0+255),f,b
 12128  0016A4  0100               	movlb	0	; () banked
 12129  0016A6  90D8               	bcf	status,0,c
 12130  0016A8  37D0               	rlcf	??_OpenADC& (0+255),f,b
 12131  0016AA  0E38               	movlw	56
 12132  0016AC  0100               	movlb	0	; () banked
 12133  0016AE  17D0               	andwf	??_OpenADC& (0+255),f,b
 12134  0016B0  C0D2  F0D1         	movff	OpenADC@config,??_OpenADC+1
 12135  0016B4  0100               	movlb	0	; () banked
 12136  0016B6  3BD1               	swapf	(??_OpenADC+1)& (0+255),f,b
 12137  0016B8  0E0F               	movlw	15
 12138  0016BA  17D1               	andwf	(??_OpenADC+1)& (0+255),f,b
 12139  0016BC  0E07               	movlw	7
 12140  0016BE  0100               	movlb	0	; () banked
 12141  0016C0  17D1               	andwf	(??_OpenADC+1)& (0+255),f,b
 12142  0016C2  0100               	movlb	0	; () banked
 12143  0016C4  51D2               	movf	OpenADC@config& (0+255),w,b
 12144  0016C6  0B80               	andlw	128
 12145  0016C8  0100               	movlb	0	; () banked
 12146  0016CA  11D1               	iorwf	(??_OpenADC+1)& (0+255),w,b
 12147  0016CC  0100               	movlb	0	; () banked
 12148  0016CE  11D0               	iorwf	??_OpenADC& (0+255),w,b
 12149  0016D0  6EC0               	movwf	4032,c	;volatile
 12150                           
 12151                           ; BSR set to: 0
 12152  0016D2  0100               	movlb	0	; () banked
 12153  0016D4  AFCE               	btfss	OpenADC@config2& (0+255),7,b
 12154  0016D6  D003               	goto	l1061
 12155                           
 12156                           ; BSR set to: 0
 12157  0016D8  9C9E               	bcf	3998,6,c	;volatile
 12158  0016DA  8C9D               	bsf	3997,6,c	;volatile
 12159  0016DC  8CF2               	bsf	intcon,6,c	;volatile
 12160  0016DE                     l1061:
 12161                           
 12162                           ; BSR set to: 0
 12163  0016DE  80C2               	bsf	4034,0,c	;volatile
 12164                           
 12165                           ; BSR set to: 0
 12166  0016E0  0012               	return		;funcret
 12167  0016E2                     __end_of_OpenADC:
 12168                           	opt stack 0
 12169                           prodh	equ	0xFF4
 12170                           prodl	equ	0xFF3
 12171                           intcon	equ	0xFF2
 12172                           intcon2	equ	0xFF1
 12173                           intcon3	equ	0xFF0
 12174                           postinc0	equ	0xFEE
 12175                           wreg	equ	0xFE8
 12176                           postinc1	equ	0xFE6
 12177                           fsr1h	equ	0xFE2
 12178                           fsr1l	equ	0xFE1
 12179                           indf2	equ	0xFDF
 12180                           postinc2	equ	0xFDE
 12181                           postdec2	equ	0xFDD
 12182                           fsr2h	equ	0xFDA
 12183                           fsr2l	equ	0xFD9
 12184                           status	equ	0xFD8
 12185                           
 12186 ;; *************** function _CalculateSensorSumDiscrete *****************
 12187 ;; Defined at:
 12188 ;;		line 355 in file "FastBuggy17_Main_Code_TUNING.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
 12191 ;;		 -> sensor_statuses(5), 
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;  index           1   19[BANK0 ] unsigned char 
 12194 ;;  sum             1   18[BANK0 ] unsigned char 
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  1    wreg      unsigned char 
 12197 ;; Registers used:
 12198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12208 ;;Total ram usage:        4 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:    7
 12211 ;; This function calls:
 12212 ;;		Nothing
 12213 ;; This function is called by:
 12214 ;;		_main
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           	psect	text99
 12219  001D2E                     __ptext99:
 12220                           	opt stack 0
 12221  001D2E                     _CalculateSensorSumDiscrete:
 12222                           	opt stack 23
 12223                           
 12224                           ;FastBuggy17_Main_Code_TUNING.c: 356: unsigned char index, sum = 0;
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;incstack = 0
 12228  001D2E  0E00               	movlw	0
 12229  001D30  0100               	movlb	0	; () banked
 12230  001D32  6FD0               	movwf	CalculateSensorSumDiscrete@sum& (0+255),b
 12231                           
 12232                           ;FastBuggy17_Main_Code_TUNING.c: 358: for(index = 0; index < 5; index++) {
 12233  001D34  0E00               	movlw	0
 12234  001D36  0100               	movlb	0	; () banked
 12235  001D38  6FD1               	movwf	CalculateSensorSumDiscrete@index& (0+255),b
 12236  001D3A                     l6455:
 12237                           
 12238                           ; BSR set to: 0
 12239  001D3A  0E04               	movlw	4
 12240  001D3C  0100               	movlb	0	; () banked
 12241  001D3E  65D1               	cpfsgt	CalculateSensorSumDiscrete@index& (0+255),b
 12242  001D40  D001               	goto	l6459
 12243                           
 12244                           ; BSR set to: 0
 12245  001D42  D011               	goto	l6465
 12246  001D44                     l6459:
 12247                           
 12248                           ; BSR set to: 0
 12249                           ;FastBuggy17_Main_Code_TUNING.c: 360: sum += *(sensor_statuses + index);
 12250  001D44  0100               	movlb	0	; () banked
 12251  001D46  51D1               	movf	CalculateSensorSumDiscrete@index& (0+255),w,b
 12252  001D48  0D01               	mullw	1
 12253  001D4A  50F3               	movf	prodl,w,c
 12254  001D4C  0100               	movlb	0	; () banked
 12255  001D4E  25CE               	addwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),w,b
 12256  001D50  6ED9               	movwf	fsr2l,c
 12257  001D52  50F4               	movf	prodh,w,c
 12258  001D54  0100               	movlb	0	; () banked
 12259  001D56  21CF               	addwfc	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),w,b
 12260  001D58  6EDA               	movwf	fsr2h,c
 12261  001D5A  50DF               	movf	indf2,w,c
 12262  001D5C  0100               	movlb	0	; () banked
 12263  001D5E  27D0               	addwf	CalculateSensorSumDiscrete@sum& (0+255),f,b
 12264                           
 12265                           ; BSR set to: 0
 12266  001D60  0100               	movlb	0	; () banked
 12267  001D62  2BD1               	incf	CalculateSensorSumDiscrete@index& (0+255),f,b
 12268  001D64  D7EA               	goto	l6455
 12269  001D66                     l6465:
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;FastBuggy17_Main_Code_TUNING.c: 362: }
 12273                           ;FastBuggy17_Main_Code_TUNING.c: 364: return(sum);
 12274  001D66  0100               	movlb	0	; () banked
 12275  001D68  51D0               	movf	CalculateSensorSumDiscrete@sum& (0+255),w,b
 12276  001D6A  D000               	goto	l826
 12277  001D6C                     l826:
 12278                           
 12279                           ; BSR set to: 0
 12280  001D6C  0012               	return		;funcret
 12281  001D6E                     __end_of_CalculateSensorSumDiscrete:
 12282                           	opt stack 0
 12283                           prodh	equ	0xFF4
 12284                           prodl	equ	0xFF3
 12285                           intcon	equ	0xFF2
 12286                           intcon2	equ	0xFF1
 12287                           intcon3	equ	0xFF0
 12288                           postinc0	equ	0xFEE
 12289                           wreg	equ	0xFE8
 12290                           postinc1	equ	0xFE6
 12291                           fsr1h	equ	0xFE2
 12292                           fsr1l	equ	0xFE1
 12293                           indf2	equ	0xFDF
 12294                           postinc2	equ	0xFDE
 12295                           postdec2	equ	0xFDD
 12296                           fsr2h	equ	0xFDA
 12297                           fsr2l	equ	0xFD9
 12298                           status	equ	0xFD8
 12299                           
 12300 ;; *************** function _BusyDistanceAcq *****************
 12301 ;; Defined at:
 12302 ;;		line 61 in file "Ultrasound.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;		None
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;		None
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      unsigned char 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12320 ;;Total ram usage:        0 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; Hardware stack levels required when called:    7
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_main
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           	psect	text100
 12331  002434                     __ptext100:
 12332                           	opt stack 0
 12333  002434                     _BusyDistanceAcq:
 12334                           	opt stack 23
 12335                           
 12336                           ;Ultrasound.c: 63: return (!echo_acq_done);
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;incstack = 0
 12340  002434  501C               	movf	_echo_acq_done,w,c
 12341  002436  A4D8               	btfss	status,2,c
 12342  002438  D002               	goto	u5400
 12343  00243A  0E01               	movlw	1
 12344  00243C  D002               	goto	l36
 12345  00243E                     u5400:
 12346  00243E  0E00               	movlw	0
 12347  002440  D000               	goto	l36
 12348  002442                     l36:
 12349  002442  0012               	return		;funcret
 12350  002444                     __end_of_BusyDistanceAcq:
 12351                           	opt stack 0
 12352                           prodh	equ	0xFF4
 12353                           prodl	equ	0xFF3
 12354                           intcon	equ	0xFF2
 12355                           intcon2	equ	0xFF1
 12356                           intcon3	equ	0xFF0
 12357                           postinc0	equ	0xFEE
 12358                           wreg	equ	0xFE8
 12359                           postinc1	equ	0xFE6
 12360                           fsr1h	equ	0xFE2
 12361                           fsr1l	equ	0xFE1
 12362                           indf2	equ	0xFDF
 12363                           postinc2	equ	0xFDE
 12364                           postdec2	equ	0xFDD
 12365                           fsr2h	equ	0xFDA
 12366                           fsr2l	equ	0xFD9
 12367                           status	equ	0xFD8
 12368                           
 12369 ;; *************** function _isrLP *****************
 12370 ;; Defined at:
 12371 ;;		line 661 in file "FastBuggy17_Main_Code_TUNING.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;		None
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;		None
 12376 ;; Return value:  Size  Location     Type
 12377 ;;		None               void
 12378 ;; Registers used:
 12379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;Total ram usage:       17 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; Hardware stack levels required when called:    6
 12392 ;; This function calls:
 12393 ;;		_WirelessTx_ISR
 12394 ;;		i1_ConvertADC
 12395 ;;		i1_ReadADC
 12396 ;;		i1_SetADCChannel
 12397 ;; This function is called by:
 12398 ;;		Interrupt level 1
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	intcodelo
 12403  000018                     __pintcodelo:
 12404                           	opt stack 0
 12405  000018                     _isrLP:
 12406                           	opt stack 18
 12407                           
 12408                           ;incstack = 0
 12409  000018  CFD8 F033          	movff	status,??_isrLP
 12410  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 12411  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 12412  000024  CFFA F036          	movff	pclath,??_isrLP+3
 12413  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 12414  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 12415  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 12416  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 12417  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 12418  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 12419  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 12420  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 12421  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 12422  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 12423  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 12424  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 12425  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 12426                           
 12427                           ;FastBuggy17_Main_Code_TUNING.c: 664: if (PIR1bits.ADIF == 1) {
 12428  00005C  AC9E               	btfss	3998,6,c	;volatile
 12429  00005E  D01D               	goto	i1l952
 12430                           
 12431                           ;FastBuggy17_Main_Code_TUNING.c: 665: PIR1bits.ADIF = 0;
 12432  000060  9C9E               	bcf	3998,6,c	;volatile
 12433                           
 12434                           ;FastBuggy17_Main_Code_TUNING.c: 666: if (sensor_acq_index < 5) {
 12435  000062  0E05               	movlw	5
 12436  000064  6023               	cpfslt	_sensor_acq_index,c	;volatile
 12437  000066  D015               	goto	i1l5103
 12438                           
 12439                           ;FastBuggy17_Main_Code_TUNING.c: 667: *(sensor_readings_raw + sensor_acq_index) = ReadAD
      +                          C();
 12440  000068  EC22  F012         	call	i1_ReadADC	;wreg free
 12441  00006C  5023               	movf	_sensor_acq_index,w,c	;volatile
 12442  00006E  0D02               	mullw	2
 12443  000070  0EAE               	movlw	low _sensor_readings_raw
 12444  000072  24F3               	addwf	prodl,w,c
 12445  000074  6ED9               	movwf	fsr2l,c
 12446  000076  0E00               	movlw	high _sensor_readings_raw
 12447  000078  20F4               	addwfc	prodh,w,c
 12448  00007A  6EDA               	movwf	fsr2h,c
 12449  00007C  C02B  FFDE         	movff	?i1_ReadADC,postinc2
 12450  000080  C02C  FFDD         	movff	?i1_ReadADC+1,postdec2
 12451                           
 12452                           ;FastBuggy17_Main_Code_TUNING.c: 668: sensor_acq_index++;
 12453  000084  2A23               	incf	_sensor_acq_index,f,c	;volatile
 12454                           
 12455                           ;FastBuggy17_Main_Code_TUNING.c: 669: SetADCChannel(sensor_acq_index);
 12456  000086  5023               	movf	_sensor_acq_index,w,c	;volatile
 12457  000088  EC06  F007         	call	i1_SetADCChannel
 12458                           
 12459                           ;FastBuggy17_Main_Code_TUNING.c: 670: ConvertADC();
 12460  00008C  EC94  F012         	call	i1_ConvertADC	;wreg free
 12461                           
 12462                           ;FastBuggy17_Main_Code_TUNING.c: 671: } else {
 12463  000090  D00A               	goto	i1l957
 12464  000092                     i1l5103:
 12465                           
 12466                           ;FastBuggy17_Main_Code_TUNING.c: 672: sensor_acq_done = 1;
 12467  000092  0E01               	movlw	1
 12468  000094  6E22               	movwf	_sensor_acq_done,c	;volatile
 12469                           
 12470                           ;FastBuggy17_Main_Code_TUNING.c: 673: PIE1bits.ADIE = 0;
 12471  000096  9C9D               	bcf	3997,6,c	;volatile
 12472                           
 12473                           ;FastBuggy17_Main_Code_TUNING.c: 674: }
 12474                           ;FastBuggy17_Main_Code_TUNING.c: 675: }
 12475  000098  D006               	goto	i1l957
 12476  00009A                     i1l952:
 12477                           
 12478                           ;FastBuggy17_Main_Code_TUNING.c: 677: else if(PIR1bits.TX1IF == 1) {
 12479  00009A  A89E               	btfss	3998,4,c	;volatile
 12480  00009C  D004               	goto	i1l957
 12481                           
 12482                           ;FastBuggy17_Main_Code_TUNING.c: 678: PIR1bits.TX1IF = 0;
 12483  00009E  989E               	bcf	3998,4,c	;volatile
 12484                           
 12485                           ;FastBuggy17_Main_Code_TUNING.c: 679: WirelessTx_ISR();
 12486  0000A0  ECE3  F010         	call	_WirelessTx_ISR	;wreg free
 12487  0000A4  D000               	goto	i1l957
 12488  0000A6                     i1l957:
 12489  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 12490  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 12491  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 12492  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 12493  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 12494  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 12495  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 12496  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 12497  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 12498  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 12499  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 12500  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 12501  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 12502  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 12503  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 12504  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 12505  0000E6  C033  FFD8         	movff	??_isrLP,status
 12506  0000EA  0010               	retfie	
 12507  0000EC                     __end_of_isrLP:
 12508                           	opt stack 0
 12509                           pclatu	equ	0xFFB
 12510                           pclath	equ	0xFFA
 12511                           tblptru	equ	0xFF8
 12512                           tblptrh	equ	0xFF7
 12513                           tblptrl	equ	0xFF6
 12514                           tablat	equ	0xFF5
 12515                           prodh	equ	0xFF4
 12516                           prodl	equ	0xFF3
 12517                           intcon	equ	0xFF2
 12518                           intcon2	equ	0xFF1
 12519                           intcon3	equ	0xFF0
 12520                           postinc0	equ	0xFEE
 12521                           fsr0h	equ	0xFEA
 12522                           fsr0l	equ	0xFE9
 12523                           wreg	equ	0xFE8
 12524                           postinc1	equ	0xFE6
 12525                           fsr1h	equ	0xFE2
 12526                           fsr1l	equ	0xFE1
 12527                           bsr	equ	0xFE0
 12528                           indf2	equ	0xFDF
 12529                           postinc2	equ	0xFDE
 12530                           postdec2	equ	0xFDD
 12531                           fsr2h	equ	0xFDA
 12532                           fsr2l	equ	0xFD9
 12533                           status	equ	0xFD8
 12534                           
 12535 ;; *************** function i1_SetADCChannel *****************
 12536 ;; Defined at:
 12537 ;;		line 227 in file "FastBuggy17_Main_Code_TUNING.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;  channel         1    wreg     unsigned char 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;  channel         1    2[COMRAM] unsigned char 
 12542 ;; Return value:  Size  Location     Type
 12543 ;;		None               void
 12544 ;; Registers used:
 12545 ;;		wreg, status,2, status,0, cstack
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;Total ram usage:        1 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:    4
 12558 ;; This function calls:
 12559 ;;		i1_SetChanADC
 12560 ;; This function is called by:
 12561 ;;		_isrLP
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text102
 12566  000E0C                     __ptext102:
 12567                           	opt stack 0
 12568  000E0C                     i1_SetADCChannel:
 12569                           	opt stack 19
 12570                           
 12571                           ;incstack = 0
 12572                           ;i1SetADCChannel@channel stored from wreg
 12573  000E0C  6E2D               	movwf	i1SetADCChannel@channel,c
 12574                           
 12575                           ;FastBuggy17_Main_Code_TUNING.c: 229: switch (channel) {
 12576  000E0E  D040               	goto	i1l4903
 12577  000E10                     i1l4869:
 12578                           
 12579                           ;FastBuggy17_Main_Code_TUNING.c: 231: SetChanADC(0b10000111);
 12580  000E10  0E87               	movlw	135
 12581  000E12  EC90  F011         	call	i1_SetChanADC
 12582                           
 12583                           ;FastBuggy17_Main_Code_TUNING.c: 232: break;
 12584  000E16  D06E               	goto	i1l793
 12585  000E18                     i1l4871:
 12586                           
 12587                           ;FastBuggy17_Main_Code_TUNING.c: 234: SetChanADC(0b10001111);
 12588  000E18  0E8F               	movlw	143
 12589  000E1A  EC90  F011         	call	i1_SetChanADC
 12590                           
 12591                           ;FastBuggy17_Main_Code_TUNING.c: 235: break;
 12592  000E1E  D06A               	goto	i1l793
 12593  000E20                     i1l4873:
 12594                           
 12595                           ;FastBuggy17_Main_Code_TUNING.c: 237: SetChanADC(0b10010111);
 12596  000E20  0E97               	movlw	151
 12597  000E22  EC90  F011         	call	i1_SetChanADC
 12598                           
 12599                           ;FastBuggy17_Main_Code_TUNING.c: 238: break;
 12600  000E26  D066               	goto	i1l793
 12601  000E28                     i1l4875:
 12602                           
 12603                           ;FastBuggy17_Main_Code_TUNING.c: 240: SetChanADC(0b10011111);
 12604  000E28  0E9F               	movlw	159
 12605  000E2A  EC90  F011         	call	i1_SetChanADC
 12606                           
 12607                           ;FastBuggy17_Main_Code_TUNING.c: 241: break;
 12608  000E2E  D062               	goto	i1l793
 12609  000E30                     i1l4877:
 12610                           
 12611                           ;FastBuggy17_Main_Code_TUNING.c: 243: SetChanADC(0b10100111);
 12612  000E30  0EA7               	movlw	167
 12613  000E32  EC90  F011         	call	i1_SetChanADC
 12614                           
 12615                           ;FastBuggy17_Main_Code_TUNING.c: 244: break;
 12616  000E36  D05E               	goto	i1l793
 12617  000E38                     i1l4879:
 12618                           
 12619                           ;FastBuggy17_Main_Code_TUNING.c: 246: SetChanADC(0b10101111);
 12620  000E38  0EAF               	movlw	175
 12621  000E3A  EC90  F011         	call	i1_SetChanADC
 12622                           
 12623                           ;FastBuggy17_Main_Code_TUNING.c: 247: break;
 12624  000E3E  D05A               	goto	i1l793
 12625  000E40                     i1l4881:
 12626                           
 12627                           ;FastBuggy17_Main_Code_TUNING.c: 249: SetChanADC(0b10110111);
 12628  000E40  0EB7               	movlw	183
 12629  000E42  EC90  F011         	call	i1_SetChanADC
 12630                           
 12631                           ;FastBuggy17_Main_Code_TUNING.c: 250: break;
 12632  000E46  D056               	goto	i1l793
 12633  000E48                     i1l4883:
 12634                           
 12635                           ;FastBuggy17_Main_Code_TUNING.c: 252: SetChanADC(0b10111111);
 12636  000E48  0EBF               	movlw	191
 12637  000E4A  EC90  F011         	call	i1_SetChanADC
 12638                           
 12639                           ;FastBuggy17_Main_Code_TUNING.c: 253: break;
 12640  000E4E  D052               	goto	i1l793
 12641  000E50                     i1l4885:
 12642                           
 12643                           ;FastBuggy17_Main_Code_TUNING.c: 255: SetChanADC(0b11000111);
 12644  000E50  0EC7               	movlw	199
 12645  000E52  EC90  F011         	call	i1_SetChanADC
 12646                           
 12647                           ;FastBuggy17_Main_Code_TUNING.c: 256: break;
 12648  000E56  D04E               	goto	i1l793
 12649  000E58                     i1l4887:
 12650                           
 12651                           ;FastBuggy17_Main_Code_TUNING.c: 258: SetChanADC(0b11001111);
 12652  000E58  0ECF               	movlw	207
 12653  000E5A  EC90  F011         	call	i1_SetChanADC
 12654                           
 12655                           ;FastBuggy17_Main_Code_TUNING.c: 259: break;
 12656  000E5E  D04A               	goto	i1l793
 12657  000E60                     i1l4889:
 12658                           
 12659                           ;FastBuggy17_Main_Code_TUNING.c: 261: SetChanADC(0b11010111);
 12660  000E60  0ED7               	movlw	215
 12661  000E62  EC90  F011         	call	i1_SetChanADC
 12662                           
 12663                           ;FastBuggy17_Main_Code_TUNING.c: 262: break;
 12664  000E66  D046               	goto	i1l793
 12665  000E68                     i1l4891:
 12666                           
 12667                           ;FastBuggy17_Main_Code_TUNING.c: 264: SetChanADC(0b11011111);
 12668  000E68  0EDF               	movlw	223
 12669  000E6A  EC90  F011         	call	i1_SetChanADC
 12670                           
 12671                           ;FastBuggy17_Main_Code_TUNING.c: 265: break;
 12672  000E6E  D042               	goto	i1l793
 12673  000E70                     i1l4893:
 12674                           
 12675                           ;FastBuggy17_Main_Code_TUNING.c: 267: SetChanADC(0b11100111);
 12676  000E70  0EE7               	movlw	231
 12677  000E72  EC90  F011         	call	i1_SetChanADC
 12678                           
 12679                           ;FastBuggy17_Main_Code_TUNING.c: 268: break;
 12680  000E76  D03E               	goto	i1l793
 12681  000E78                     i1l4895:
 12682                           
 12683                           ;FastBuggy17_Main_Code_TUNING.c: 270: SetChanADC(0b11101111);
 12684  000E78  0EEF               	movlw	239
 12685  000E7A  EC90  F011         	call	i1_SetChanADC
 12686                           
 12687                           ;FastBuggy17_Main_Code_TUNING.c: 271: break;
 12688  000E7E  D03A               	goto	i1l793
 12689  000E80                     i1l4897:
 12690                           
 12691                           ;FastBuggy17_Main_Code_TUNING.c: 273: SetChanADC(0b11110111);
 12692  000E80  0EF7               	movlw	247
 12693  000E82  EC90  F011         	call	i1_SetChanADC
 12694                           
 12695                           ;FastBuggy17_Main_Code_TUNING.c: 274: break;
 12696  000E86  D036               	goto	i1l793
 12697  000E88                     i1l4899:
 12698                           
 12699                           ;FastBuggy17_Main_Code_TUNING.c: 276: SetChanADC(0b11111111);
 12700  000E88  0EFF               	movlw	255
 12701  000E8A  EC90  F011         	call	i1_SetChanADC
 12702                           
 12703                           ;FastBuggy17_Main_Code_TUNING.c: 280: }
 12704                           
 12705                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
 12706                           
 12707                           ;FastBuggy17_Main_Code_TUNING.c: 278: default:
 12708                           
 12709                           ;FastBuggy17_Main_Code_TUNING.c: 277: break;
 12710  000E8E  D032               	goto	i1l793
 12711  000E90                     i1l4903:
 12712  000E90  502D               	movf	i1SetADCChannel@channel,w,c
 12713                           
 12714                           ; Switch size 1, requested type "space"
 12715                           ; Number of cases is 16, Range of values is 0 to 15
 12716                           ; switch strategies available:
 12717                           ; Name         Instructions Cycles
 12718                           ; simple_byte           49    25 (average)
 12719                           ;	Chosen strategy is simple_byte
 12720  000E92  0A00               	xorlw	0	; case 0
 12721  000E94  B4D8               	btfsc	status,2,c
 12722  000E96  D7BC               	goto	i1l4869
 12723  000E98  0A01               	xorlw	1	; case 1
 12724  000E9A  B4D8               	btfsc	status,2,c
 12725  000E9C  D7BD               	goto	i1l4871
 12726  000E9E  0A03               	xorlw	3	; case 2
 12727  000EA0  B4D8               	btfsc	status,2,c
 12728  000EA2  D7BE               	goto	i1l4873
 12729  000EA4  0A01               	xorlw	1	; case 3
 12730  000EA6  B4D8               	btfsc	status,2,c
 12731  000EA8  D7BF               	goto	i1l4875
 12732  000EAA  0A07               	xorlw	7	; case 4
 12733  000EAC  B4D8               	btfsc	status,2,c
 12734  000EAE  D7C0               	goto	i1l4877
 12735  000EB0  0A01               	xorlw	1	; case 5
 12736  000EB2  B4D8               	btfsc	status,2,c
 12737  000EB4  D7C1               	goto	i1l4879
 12738  000EB6  0A03               	xorlw	3	; case 6
 12739  000EB8  B4D8               	btfsc	status,2,c
 12740  000EBA  D7C2               	goto	i1l4881
 12741  000EBC  0A01               	xorlw	1	; case 7
 12742  000EBE  B4D8               	btfsc	status,2,c
 12743  000EC0  D7C3               	goto	i1l4883
 12744  000EC2  0A0F               	xorlw	15	; case 8
 12745  000EC4  B4D8               	btfsc	status,2,c
 12746  000EC6  D7C4               	goto	i1l4885
 12747  000EC8  0A01               	xorlw	1	; case 9
 12748  000ECA  B4D8               	btfsc	status,2,c
 12749  000ECC  D7C5               	goto	i1l4887
 12750  000ECE  0A03               	xorlw	3	; case 10
 12751  000ED0  B4D8               	btfsc	status,2,c
 12752  000ED2  D7C6               	goto	i1l4889
 12753  000ED4  0A01               	xorlw	1	; case 11
 12754  000ED6  B4D8               	btfsc	status,2,c
 12755  000ED8  D7C7               	goto	i1l4891
 12756  000EDA  0A07               	xorlw	7	; case 12
 12757  000EDC  B4D8               	btfsc	status,2,c
 12758  000EDE  D7C8               	goto	i1l4893
 12759  000EE0  0A01               	xorlw	1	; case 13
 12760  000EE2  B4D8               	btfsc	status,2,c
 12761  000EE4  D7C9               	goto	i1l4895
 12762  000EE6  0A03               	xorlw	3	; case 14
 12763  000EE8  B4D8               	btfsc	status,2,c
 12764  000EEA  D7CA               	goto	i1l4897
 12765  000EEC  0A01               	xorlw	1	; case 15
 12766  000EEE  B4D8               	btfsc	status,2,c
 12767  000EF0  D7CB               	goto	i1l4899
 12768  000EF2  D000               	goto	i1l793
 12769  000EF4                     i1l793:
 12770  000EF4  0012               	return		;funcret
 12771  000EF6                     __end_ofi1_SetADCChannel:
 12772                           	opt stack 0
 12773                           pclatu	equ	0xFFB
 12774                           pclath	equ	0xFFA
 12775                           tblptru	equ	0xFF8
 12776                           tblptrh	equ	0xFF7
 12777                           tblptrl	equ	0xFF6
 12778                           tablat	equ	0xFF5
 12779                           prodh	equ	0xFF4
 12780                           prodl	equ	0xFF3
 12781                           intcon	equ	0xFF2
 12782                           intcon2	equ	0xFF1
 12783                           intcon3	equ	0xFF0
 12784                           postinc0	equ	0xFEE
 12785                           fsr0h	equ	0xFEA
 12786                           fsr0l	equ	0xFE9
 12787                           wreg	equ	0xFE8
 12788                           postinc1	equ	0xFE6
 12789                           fsr1h	equ	0xFE2
 12790                           fsr1l	equ	0xFE1
 12791                           bsr	equ	0xFE0
 12792                           indf2	equ	0xFDF
 12793                           postinc2	equ	0xFDE
 12794                           postdec2	equ	0xFDD
 12795                           fsr2h	equ	0xFDA
 12796                           fsr2l	equ	0xFD9
 12797                           status	equ	0xFD8
 12798                           
 12799 ;; *************** function i1_SetChanADC *****************
 12800 ;; Defined at:
 12801 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  channel         1    wreg     unsigned char 
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;  channel         1    1[COMRAM] unsigned char 
 12806 ;; Return value:  Size  Location     Type
 12807 ;;		None               void
 12808 ;; Registers used:
 12809 ;;		wreg, status,2, status,0
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12819 ;;Total ram usage:        2 bytes
 12820 ;; Hardware stack levels used:    1
 12821 ;; Hardware stack levels required when called:    3
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		i1_SetADCChannel
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text103
 12830  002320                     __ptext103:
 12831                           	opt stack 0
 12832  002320                     i1_SetChanADC:
 12833                           	opt stack 19
 12834                           
 12835                           ;incstack = 0
 12836                           ;i1SetChanADC@channel stored from wreg
 12837  002320  6E2C               	movwf	i1SetChanADC@channel,c
 12838  002322  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 12839  002326  0EC3               	movlw	195
 12840  002328  162B               	andwf	??i1_SetChanADC,f,c
 12841  00232A  90D8               	bcf	status,0,c
 12842  00232C  302C               	rrcf	i1SetChanADC@channel,w,c
 12843  00232E  0B3C               	andlw	60
 12844  002330  102B               	iorwf	??i1_SetChanADC,w,c
 12845  002332  6EC2               	movwf	4034,c	;volatile
 12846  002334  0012               	return		;funcret
 12847  002336                     __end_ofi1_SetChanADC:
 12848                           	opt stack 0
 12849                           pclatu	equ	0xFFB
 12850                           pclath	equ	0xFFA
 12851                           tblptru	equ	0xFF8
 12852                           tblptrh	equ	0xFF7
 12853                           tblptrl	equ	0xFF6
 12854                           tablat	equ	0xFF5
 12855                           prodh	equ	0xFF4
 12856                           prodl	equ	0xFF3
 12857                           intcon	equ	0xFF2
 12858                           intcon2	equ	0xFF1
 12859                           intcon3	equ	0xFF0
 12860                           postinc0	equ	0xFEE
 12861                           fsr0h	equ	0xFEA
 12862                           fsr0l	equ	0xFE9
 12863                           wreg	equ	0xFE8
 12864                           postinc1	equ	0xFE6
 12865                           fsr1h	equ	0xFE2
 12866                           fsr1l	equ	0xFE1
 12867                           bsr	equ	0xFE0
 12868                           indf2	equ	0xFDF
 12869                           postinc2	equ	0xFDE
 12870                           postdec2	equ	0xFDD
 12871                           fsr2h	equ	0xFDA
 12872                           fsr2l	equ	0xFD9
 12873                           status	equ	0xFD8
 12874                           
 12875 ;; *************** function i1_ReadADC *****************
 12876 ;; Defined at:
 12877 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  2    0[COMRAM] int 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12895 ;;Total ram usage:        4 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    3
 12898 ;; This function calls:
 12899 ;;		Nothing
 12900 ;; This function is called by:
 12901 ;;		_isrLP
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           
 12905                           	psect	text104
 12906  002444                     __ptext104:
 12907                           	opt stack 0
 12908  002444                     i1_ReadADC:
 12909                           	opt stack 20
 12910                           
 12911                           ;incstack = 0
 12912  002444  50C4               	movf	4036,w,c	;volatile
 12913  002446  6E2D               	movwf	??i1_ReadADC& (0+255),c
 12914  002448  50C3               	movf	4035,w,c	;volatile
 12915  00244A  6E2B               	movwf	?i1_ReadADC,c
 12916  00244C  C02D  F02C         	movff	??i1_ReadADC,?i1_ReadADC+1
 12917  002450  D000               	goto	i1l1069
 12918  002452                     i1l1069:
 12919  002452  0012               	return		;funcret
 12920  002454                     __end_ofi1_ReadADC:
 12921                           	opt stack 0
 12922                           pclatu	equ	0xFFB
 12923                           pclath	equ	0xFFA
 12924                           tblptru	equ	0xFF8
 12925                           tblptrh	equ	0xFF7
 12926                           tblptrl	equ	0xFF6
 12927                           tablat	equ	0xFF5
 12928                           prodh	equ	0xFF4
 12929                           prodl	equ	0xFF3
 12930                           intcon	equ	0xFF2
 12931                           intcon2	equ	0xFF1
 12932                           intcon3	equ	0xFF0
 12933                           postinc0	equ	0xFEE
 12934                           fsr0h	equ	0xFEA
 12935                           fsr0l	equ	0xFE9
 12936                           wreg	equ	0xFE8
 12937                           postinc1	equ	0xFE6
 12938                           fsr1h	equ	0xFE2
 12939                           fsr1l	equ	0xFE1
 12940                           bsr	equ	0xFE0
 12941                           indf2	equ	0xFDF
 12942                           postinc2	equ	0xFDE
 12943                           postdec2	equ	0xFDD
 12944                           fsr2h	equ	0xFDA
 12945                           fsr2l	equ	0xFD9
 12946                           status	equ	0xFD8
 12947                           
 12948 ;; *************** function i1_ConvertADC *****************
 12949 ;; Defined at:
 12950 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12951 ;; Parameters:    Size  Location     Type
 12952 ;;		None
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;		None
 12955 ;; Return value:  Size  Location     Type
 12956 ;;		None               void
 12957 ;; Registers used:
 12958 ;;		None
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12968 ;;Total ram usage:        0 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:    3
 12971 ;; This function calls:
 12972 ;;		Nothing
 12973 ;; This function is called by:
 12974 ;;		_isrLP
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           	psect	text105
 12979  002528                     __ptext105:
 12980                           	opt stack 0
 12981  002528                     i1_ConvertADC:
 12982                           	opt stack 20
 12983                           
 12984                           ;incstack = 0
 12985  002528  82C2               	bsf	4034,1,c	;volatile
 12986  00252A  0012               	return		;funcret
 12987  00252C                     __end_ofi1_ConvertADC:
 12988                           	opt stack 0
 12989                           pclatu	equ	0xFFB
 12990                           pclath	equ	0xFFA
 12991                           tblptru	equ	0xFF8
 12992                           tblptrh	equ	0xFF7
 12993                           tblptrl	equ	0xFF6
 12994                           tablat	equ	0xFF5
 12995                           prodh	equ	0xFF4
 12996                           prodl	equ	0xFF3
 12997                           intcon	equ	0xFF2
 12998                           intcon2	equ	0xFF1
 12999                           intcon3	equ	0xFF0
 13000                           postinc0	equ	0xFEE
 13001                           fsr0h	equ	0xFEA
 13002                           fsr0l	equ	0xFE9
 13003                           wreg	equ	0xFE8
 13004                           postinc1	equ	0xFE6
 13005                           fsr1h	equ	0xFE2
 13006                           fsr1l	equ	0xFE1
 13007                           bsr	equ	0xFE0
 13008                           indf2	equ	0xFDF
 13009                           postinc2	equ	0xFDE
 13010                           postdec2	equ	0xFDD
 13011                           fsr2h	equ	0xFDA
 13012                           fsr2l	equ	0xFD9
 13013                           status	equ	0xFD8
 13014                           
 13015 ;; *************** function _WirelessTx_ISR *****************
 13016 ;; Defined at:
 13017 ;;		line 61 in file "Wireless.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;		None               void
 13024 ;; Registers used:
 13025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;Total ram usage:        0 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    5
 13038 ;; This function calls:
 13039 ;;		_GetCharTxBuf
 13040 ;;		_Write1USART
 13041 ;; This function is called by:
 13042 ;;		_isrLP
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           	psect	text106
 13047  0021C6                     __ptext106:
 13048                           	opt stack 0
 13049  0021C6                     _WirelessTx_ISR:
 13050                           	opt stack 18
 13051                           
 13052                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 13053                           
 13054                           ;incstack = 0
 13055  0021C6  EC63  F00F         	call	_GetCharTxBuf	;wreg free
 13056  0021CA  6E19               	movwf	_TxCharacter,c	;volatile
 13057                           
 13058                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 13059  0021CC  0E0A               	movlw	10
 13060  0021CE  1819               	xorwf	_TxCharacter,w,c	;volatile
 13061  0021D0  A4D8               	btfss	status,2,c
 13062  0021D2  D007               	goto	i1l4583
 13063                           
 13064                           ;Wireless.c: 64: Write1USART(TxCharacter);
 13065  0021D4  5019               	movf	_TxCharacter,w,c	;volatile
 13066  0021D6  EC9B  F011         	call	_Write1USART
 13067                           
 13068                           ;Wireless.c: 65: Tx_complete = 1;
 13069  0021DA  0E01               	movlw	1
 13070  0021DC  6E1A               	movwf	_Tx_complete,c
 13071                           
 13072                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 13073  0021DE  989D               	bcf	3997,4,c	;volatile
 13074                           
 13075                           ;Wireless.c: 67: }
 13076  0021E0  D004               	goto	i1l303
 13077  0021E2                     i1l4583:
 13078                           
 13079                           ;Wireless.c: 68: else {
 13080                           ;Wireless.c: 69: Write1USART(TxCharacter);
 13081  0021E2  5019               	movf	_TxCharacter,w,c	;volatile
 13082  0021E4  EC9B  F011         	call	_Write1USART
 13083  0021E8  D000               	goto	i1l303
 13084  0021EA                     i1l303:
 13085  0021EA  0012               	return		;funcret
 13086  0021EC                     __end_of_WirelessTx_ISR:
 13087                           	opt stack 0
 13088                           pclatu	equ	0xFFB
 13089                           pclath	equ	0xFFA
 13090                           tblptru	equ	0xFF8
 13091                           tblptrh	equ	0xFF7
 13092                           tblptrl	equ	0xFF6
 13093                           tablat	equ	0xFF5
 13094                           prodh	equ	0xFF4
 13095                           prodl	equ	0xFF3
 13096                           intcon	equ	0xFF2
 13097                           intcon2	equ	0xFF1
 13098                           intcon3	equ	0xFF0
 13099                           postinc0	equ	0xFEE
 13100                           fsr0h	equ	0xFEA
 13101                           fsr0l	equ	0xFE9
 13102                           wreg	equ	0xFE8
 13103                           postinc1	equ	0xFE6
 13104                           fsr1h	equ	0xFE2
 13105                           fsr1l	equ	0xFE1
 13106                           bsr	equ	0xFE0
 13107                           indf2	equ	0xFDF
 13108                           postinc2	equ	0xFDE
 13109                           postdec2	equ	0xFDD
 13110                           fsr2h	equ	0xFDA
 13111                           fsr2l	equ	0xFD9
 13112                           status	equ	0xFD8
 13113                           
 13114 ;; *************** function _Write1USART *****************
 13115 ;; Defined at:
 13116 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;  data            1    wreg     unsigned char 
 13119 ;; Auto vars:     Size  Location     Type
 13120 ;;  data            1    0[COMRAM] unsigned char 
 13121 ;; Return value:  Size  Location     Type
 13122 ;;		None               void
 13123 ;; Registers used:
 13124 ;;		wreg
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;Total ram usage:        1 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:    3
 13137 ;; This function calls:
 13138 ;;		Nothing
 13139 ;; This function is called by:
 13140 ;;		_WirelessTx_ISR
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           	psect	text107
 13145  002336                     __ptext107:
 13146                           	opt stack 0
 13147  002336                     _Write1USART:
 13148                           	opt stack 19
 13149                           
 13150                           ;incstack = 0
 13151                           ;Write1USART@data stored from wreg
 13152  002336  6E2B               	movwf	Write1USART@data,c
 13153  002338  ACAC               	btfss	4012,6,c	;volatile
 13154  00233A  D005               	goto	i1l4199
 13155  00233C  90AC               	bcf	4012,0,c	;volatile
 13156  00233E  A21B               	btfss	_USART1_Status,1,c
 13157  002340  D002               	goto	i1l4199
 13158  002342  80AC               	bsf	4012,0,c	;volatile
 13159  002344  D000               	goto	i1l4199
 13160  002346                     i1l4199:
 13161  002346  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 13162  00234A  0012               	return		;funcret
 13163  00234C                     __end_of_Write1USART:
 13164                           	opt stack 0
 13165                           pclatu	equ	0xFFB
 13166                           pclath	equ	0xFFA
 13167                           tblptru	equ	0xFF8
 13168                           tblptrh	equ	0xFF7
 13169                           tblptrl	equ	0xFF6
 13170                           tablat	equ	0xFF5
 13171                           prodh	equ	0xFF4
 13172                           prodl	equ	0xFF3
 13173                           intcon	equ	0xFF2
 13174                           intcon2	equ	0xFF1
 13175                           intcon3	equ	0xFF0
 13176                           postinc0	equ	0xFEE
 13177                           fsr0h	equ	0xFEA
 13178                           fsr0l	equ	0xFE9
 13179                           wreg	equ	0xFE8
 13180                           postinc1	equ	0xFE6
 13181                           fsr1h	equ	0xFE2
 13182                           fsr1l	equ	0xFE1
 13183                           bsr	equ	0xFE0
 13184                           indf2	equ	0xFDF
 13185                           postinc2	equ	0xFDE
 13186                           postdec2	equ	0xFDD
 13187                           fsr2h	equ	0xFDA
 13188                           fsr2l	equ	0xFD9
 13189                           status	equ	0xFD8
 13190                           
 13191 ;; *************** function _GetCharTxBuf *****************
 13192 ;; Defined at:
 13193 ;;		line 15 in file "Wireless.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;  ch              1    7[COMRAM] unsigned char 
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1    wreg      unsigned char 
 13200 ;; Registers used:
 13201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/0
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;Total ram usage:        2 bytes
 13212 ;; Hardware stack levels used:    1
 13213 ;; Hardware stack levels required when called:    4
 13214 ;; This function calls:
 13215 ;;		i1___awmod
 13216 ;; This function is called by:
 13217 ;;		_WirelessTx_ISR
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text108
 13222  001EC6                     __ptext108:
 13223                           	opt stack 0
 13224  001EC6                     _GetCharTxBuf:
 13225                           	opt stack 18
 13226                           
 13227                           ;Wireless.c: 16: unsigned char ch;
 13228                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 13229                           
 13230                           ;incstack = 0
 13231  001EC6  501E               	movf	_get_Tx_index,w,c
 13232  001EC8  0D01               	mullw	1
 13233  001ECA  0E79               	movlw	low _Tx_buffer
 13234  001ECC  24F3               	addwf	prodl,w,c
 13235  001ECE  6ED9               	movwf	fsr2l,c
 13236  001ED0  0E00               	movlw	high _Tx_buffer
 13237  001ED2  20F4               	addwfc	prodh,w,c
 13238  001ED4  6EDA               	movwf	fsr2h,c
 13239  001ED6  50DF               	movf	indf2,w,c
 13240  001ED8  6E32               	movwf	GetCharTxBuf@ch,c
 13241                           
 13242                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 13243  001EDA  C01E  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 13244  001EDE  0E01               	movlw	1
 13245  001EE0  2631               	addwf	??_GetCharTxBuf,f,c
 13246  001EE2  5031               	movf	??_GetCharTxBuf,w,c
 13247  001EE4  6E2B               	movwf	i1___awmod@dividend,c
 13248  001EE6  6A2C               	clrf	i1___awmod@dividend+1,c
 13249  001EE8  0E00               	movlw	0
 13250  001EEA  6E2E               	movwf	i1___awmod@divisor+1,c
 13251  001EEC  0E19               	movlw	25
 13252  001EEE  6E2D               	movwf	i1___awmod@divisor,c
 13253  001EF0  EC73  F00A         	call	i1___awmod	;wreg free
 13254  001EF4  502B               	movf	?i1___awmod,w,c
 13255  001EF6  6E1E               	movwf	_get_Tx_index,c
 13256                           
 13257                           ;Wireless.c: 21: return(ch);
 13258  001EF8  5032               	movf	GetCharTxBuf@ch,w,c
 13259  001EFA  D000               	goto	i1l280
 13260  001EFC                     i1l280:
 13261  001EFC  0012               	return		;funcret
 13262  001EFE                     __end_of_GetCharTxBuf:
 13263                           	opt stack 0
 13264                           pclatu	equ	0xFFB
 13265                           pclath	equ	0xFFA
 13266                           tblptru	equ	0xFF8
 13267                           tblptrh	equ	0xFF7
 13268                           tblptrl	equ	0xFF6
 13269                           tablat	equ	0xFF5
 13270                           prodh	equ	0xFF4
 13271                           prodl	equ	0xFF3
 13272                           intcon	equ	0xFF2
 13273                           intcon2	equ	0xFF1
 13274                           intcon3	equ	0xFF0
 13275                           postinc0	equ	0xFEE
 13276                           fsr0h	equ	0xFEA
 13277                           fsr0l	equ	0xFE9
 13278                           wreg	equ	0xFE8
 13279                           postinc1	equ	0xFE6
 13280                           fsr1h	equ	0xFE2
 13281                           fsr1l	equ	0xFE1
 13282                           bsr	equ	0xFE0
 13283                           indf2	equ	0xFDF
 13284                           postinc2	equ	0xFDE
 13285                           postdec2	equ	0xFDD
 13286                           fsr2h	equ	0xFDA
 13287                           fsr2l	equ	0xFD9
 13288                           status	equ	0xFD8
 13289                           
 13290 ;; *************** function i1___awmod *****************
 13291 ;; Defined at:
 13292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;  dividend        2    0[COMRAM] int 
 13295 ;;  divisor         2    2[COMRAM] int 
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;  __awmod         1    5[COMRAM] unsigned char 
 13298 ;;  __awmod         1    4[COMRAM] unsigned char 
 13299 ;; Return value:  Size  Location     Type
 13300 ;;                  2    0[COMRAM] int 
 13301 ;; Registers used:
 13302 ;;		wreg, status,2, status,0
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13311 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13312 ;;Total ram usage:        6 bytes
 13313 ;; Hardware stack levels used:    1
 13314 ;; Hardware stack levels required when called:    3
 13315 ;; This function calls:
 13316 ;;		Nothing
 13317 ;; This function is called by:
 13318 ;;		_GetCharTxBuf
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           	psect	text109
 13323  0014E6                     __ptext109:
 13324                           	opt stack 0
 13325  0014E6                     i1___awmod:
 13326                           	opt stack 18
 13327                           
 13328                           ;incstack = 0
 13329  0014E6  0E00               	movlw	0
 13330  0014E8  6E30               	movwf	i1___awmod@sign,c
 13331  0014EA  AE2C               	btfss	i1___awmod@dividend+1,7,c
 13332  0014EC  D007               	goto	i1l4135
 13333  0014EE  6C2B               	negf	i1___awmod@dividend,c
 13334  0014F0  1E2C               	comf	i1___awmod@dividend+1,f,c
 13335  0014F2  B0D8               	btfsc	status,0,c
 13336  0014F4  2A2C               	incf	i1___awmod@dividend+1,f,c
 13337  0014F6  0E01               	movlw	1
 13338  0014F8  6E30               	movwf	i1___awmod@sign,c
 13339  0014FA  D000               	goto	i1l4135
 13340  0014FC                     i1l4135:
 13341  0014FC  AE2E               	btfss	i1___awmod@divisor+1,7,c
 13342  0014FE  D005               	goto	i1l4139
 13343  001500  6C2D               	negf	i1___awmod@divisor,c
 13344  001502  1E2E               	comf	i1___awmod@divisor+1,f,c
 13345  001504  B0D8               	btfsc	status,0,c
 13346  001506  2A2E               	incf	i1___awmod@divisor+1,f,c
 13347  001508  D000               	goto	i1l4139
 13348  00150A                     i1l4139:
 13349  00150A  502D               	movf	i1___awmod@divisor,w,c
 13350  00150C  102E               	iorwf	i1___awmod@divisor+1,w,c
 13351  00150E  B4D8               	btfsc	status,2,c
 13352  001510  D01D               	goto	i1l4155
 13353  001512  0E01               	movlw	1
 13354  001514  6E2F               	movwf	i1___awmod@counter,c
 13355  001516  D005               	goto	i1l4145
 13356  001518                     i1l4143:
 13357  001518  90D8               	bcf	status,0,c
 13358  00151A  362D               	rlcf	i1___awmod@divisor,f,c
 13359  00151C  362E               	rlcf	i1___awmod@divisor+1,f,c
 13360  00151E  2A2F               	incf	i1___awmod@counter,f,c
 13361  001520  D000               	goto	i1l4145
 13362  001522                     i1l4145:
 13363  001522  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 13364  001524  D002               	goto	i1l4147
 13365  001526  D7F8               	goto	i1l4143
 13366  001528  D000               	goto	i1l4147
 13367  00152A                     i1l4147:
 13368  00152A  502D               	movf	i1___awmod@divisor,w,c
 13369  00152C  5C2B               	subwf	i1___awmod@dividend,w,c
 13370  00152E  502E               	movf	i1___awmod@divisor+1,w,c
 13371  001530  582C               	subwfb	i1___awmod@dividend+1,w,c
 13372  001532  A0D8               	btfss	status,0,c
 13373  001534  D005               	goto	i1l4151
 13374  001536  502D               	movf	i1___awmod@divisor,w,c
 13375  001538  5E2B               	subwf	i1___awmod@dividend,f,c
 13376  00153A  502E               	movf	i1___awmod@divisor+1,w,c
 13377  00153C  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 13378  00153E  D000               	goto	i1l4151
 13379  001540                     i1l4151:
 13380  001540  90D8               	bcf	status,0,c
 13381  001542  322E               	rrcf	i1___awmod@divisor+1,f,c
 13382  001544  322D               	rrcf	i1___awmod@divisor,f,c
 13383  001546  2E2F               	decfsz	i1___awmod@counter,f,c
 13384  001548  D7F0               	goto	i1l4147
 13385  00154A  D000               	goto	i1l4155
 13386  00154C                     i1l4155:
 13387  00154C  5030               	movf	i1___awmod@sign,w,c
 13388  00154E  B4D8               	btfsc	status,2,c
 13389  001550  D005               	goto	i1l4159
 13390  001552  6C2B               	negf	i1___awmod@dividend,c
 13391  001554  1E2C               	comf	i1___awmod@dividend+1,f,c
 13392  001556  B0D8               	btfsc	status,0,c
 13393  001558  2A2C               	incf	i1___awmod@dividend+1,f,c
 13394  00155A  D000               	goto	i1l4159
 13395  00155C                     i1l4159:
 13396  00155C  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 13397  001560  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 13398  001564  D000               	goto	i1l1460
 13399  001566                     i1l1460:
 13400  001566  0012               	return		;funcret
 13401  001568                     __end_ofi1___awmod:
 13402                           	opt stack 0
 13403                           pclatu	equ	0xFFB
 13404                           pclath	equ	0xFFA
 13405                           tblptru	equ	0xFF8
 13406                           tblptrh	equ	0xFF7
 13407                           tblptrl	equ	0xFF6
 13408                           tablat	equ	0xFF5
 13409                           prodh	equ	0xFF4
 13410                           prodl	equ	0xFF3
 13411                           intcon	equ	0xFF2
 13412                           intcon2	equ	0xFF1
 13413                           intcon3	equ	0xFF0
 13414                           postinc0	equ	0xFEE
 13415                           fsr0h	equ	0xFEA
 13416                           fsr0l	equ	0xFE9
 13417                           wreg	equ	0xFE8
 13418                           postinc1	equ	0xFE6
 13419                           fsr1h	equ	0xFE2
 13420                           fsr1l	equ	0xFE1
 13421                           bsr	equ	0xFE0
 13422                           indf2	equ	0xFDF
 13423                           postinc2	equ	0xFDE
 13424                           postdec2	equ	0xFDD
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429 ;; *************** function _isrHP *****************
 13430 ;; Defined at:
 13431 ;;		line 639 in file "FastBuggy17_Main_Code_TUNING.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;		None
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;		None               void
 13438 ;; Registers used:
 13439 ;;		wreg, status,2, status,0, cstack
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13447 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13448 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13449 ;;Total ram usage:       14 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:    2
 13452 ;; This function calls:
 13453 ;;		_MillisecondTimerISR
 13454 ;;		_UltrasoundISR
 13455 ;; This function is called by:
 13456 ;;		Interrupt level 2
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	intcode
 13461  000008                     __pintcode:
 13462                           	opt stack 0
 13463  000008                     _isrHP:
 13464                           	opt stack 18
 13465                           
 13466                           ;incstack = 0
 13467  000008  CFFA F0C0          	movff	pclath,??_isrHP
 13468  00000C  CFFB F0C1          	movff	pclatu,??_isrHP+1
 13469  000010  CFE9 F0C2          	movff	fsr0l,??_isrHP+2
 13470  000014  EDB4  F00A         	call	int_func,f	;refresh shadow registers
 13471                           pclatu	equ	0xFFB
 13472                           pclath	equ	0xFFA
 13473                           tblptru	equ	0xFF8
 13474                           tblptrh	equ	0xFF7
 13475                           tblptrl	equ	0xFF6
 13476                           tablat	equ	0xFF5
 13477                           prodh	equ	0xFF4
 13478                           prodl	equ	0xFF3
 13479                           intcon	equ	0xFF2
 13480                           intcon2	equ	0xFF1
 13481                           intcon3	equ	0xFF0
 13482                           postinc0	equ	0xFEE
 13483                           fsr0h	equ	0xFEA
 13484                           fsr0l	equ	0xFE9
 13485                           wreg	equ	0xFE8
 13486                           postinc1	equ	0xFE6
 13487                           fsr1h	equ	0xFE2
 13488                           fsr1l	equ	0xFE1
 13489                           bsr	equ	0xFE0
 13490                           indf2	equ	0xFDF
 13491                           postinc2	equ	0xFDE
 13492                           postdec2	equ	0xFDD
 13493                           fsr2h	equ	0xFDA
 13494                           fsr2l	equ	0xFD9
 13495                           status	equ	0xFD8
 13496                           
 13497                           	psect	intcode_body
 13498  001568                     __pintcode_body:
 13499                           	opt stack 18
 13500  001568                     int_func:
 13501                           	opt stack 18
 13502  001568  0006               	pop		; remove dummy address from shadow register refresh
 13503  00156A  CFEA F0C3          	movff	fsr0h,??_isrHP+3
 13504  00156E  CFE1 F0C4          	movff	fsr1l,??_isrHP+4
 13505  001572  CFE2 F0C5          	movff	fsr1h,??_isrHP+5
 13506  001576  CFD9 F0C6          	movff	fsr2l,??_isrHP+6
 13507  00157A  CFDA F0C7          	movff	fsr2h,??_isrHP+7
 13508  00157E  CFF3 F0C8          	movff	prodl,??_isrHP+8
 13509  001582  CFF4 F0C9          	movff	prodh,??_isrHP+9
 13510  001586  CFF6 F0CA          	movff	tblptrl,??_isrHP+10
 13511  00158A  CFF7 F0CB          	movff	tblptrh,??_isrHP+11
 13512  00158E  CFF8 F0CC          	movff	tblptru,??_isrHP+12
 13513  001592  CFF5 F0CD          	movff	tablat,??_isrHP+13
 13514                           
 13515                           ;FastBuggy17_Main_Code_TUNING.c: 642: if (INTCONbits.TMR0IF == 1) {
 13516  001596  A4F2               	btfss	intcon,2,c	;volatile
 13517  001598  D004               	goto	i2l946
 13518                           
 13519                           ;FastBuggy17_Main_Code_TUNING.c: 643: INTCONbits.TMR0IF = 0;
 13520  00159A  94F2               	bcf	intcon,2,c	;volatile
 13521                           
 13522                           ;FastBuggy17_Main_Code_TUNING.c: 645: MillisecondTimerISR();
 13523  00159C  EC52  F011         	call	_MillisecondTimerISR	;wreg free
 13524                           
 13525                           ;FastBuggy17_Main_Code_TUNING.c: 649: }
 13526  0015A0  D006               	goto	i2l949
 13527  0015A2                     i2l946:
 13528                           
 13529                           ;FastBuggy17_Main_Code_TUNING.c: 652: else if (INTCON3bits.INT3IF == 1) {
 13530  0015A2  A4F0               	btfss	intcon3,2,c	;volatile
 13531  0015A4  D004               	goto	i2l949
 13532                           
 13533                           ;FastBuggy17_Main_Code_TUNING.c: 653: INTCON3bits.INT3IF = 0;
 13534  0015A6  94F0               	bcf	intcon3,2,c	;volatile
 13535                           
 13536                           ;FastBuggy17_Main_Code_TUNING.c: 655: UltrasoundISR();
 13537  0015A8  ECE8  F00F         	call	_UltrasoundISR	;wreg free
 13538  0015AC  D000               	goto	i2l949
 13539  0015AE                     i2l949:
 13540  0015AE  C0CD  FFF5         	movff	??_isrHP+13,tablat
 13541  0015B2  C0CC  FFF8         	movff	??_isrHP+12,tblptru
 13542  0015B6  C0CB  FFF7         	movff	??_isrHP+11,tblptrh
 13543  0015BA  C0CA  FFF6         	movff	??_isrHP+10,tblptrl
 13544  0015BE  C0C9  FFF4         	movff	??_isrHP+9,prodh
 13545  0015C2  C0C8  FFF3         	movff	??_isrHP+8,prodl
 13546  0015C6  C0C7  FFDA         	movff	??_isrHP+7,fsr2h
 13547  0015CA  C0C6  FFD9         	movff	??_isrHP+6,fsr2l
 13548  0015CE  C0C5  FFE2         	movff	??_isrHP+5,fsr1h
 13549  0015D2  C0C4  FFE1         	movff	??_isrHP+4,fsr1l
 13550  0015D6  C0C3  FFEA         	movff	??_isrHP+3,fsr0h
 13551  0015DA  C0C2  FFE9         	movff	??_isrHP+2,fsr0l
 13552  0015DE  C0C1  FFFB         	movff	??_isrHP+1,pclatu
 13553  0015E2  C0C0  FFFA         	movff	??_isrHP,pclath
 13554  0015E6  0011               	retfie		f
 13555  0015E8                     __end_of_isrHP:
 13556                           	opt stack 0
 13557                           pclatu	equ	0xFFB
 13558                           pclath	equ	0xFFA
 13559                           tblptru	equ	0xFF8
 13560                           tblptrh	equ	0xFF7
 13561                           tblptrl	equ	0xFF6
 13562                           tablat	equ	0xFF5
 13563                           prodh	equ	0xFF4
 13564                           prodl	equ	0xFF3
 13565                           intcon	equ	0xFF2
 13566                           intcon2	equ	0xFF1
 13567                           intcon3	equ	0xFF0
 13568                           postinc0	equ	0xFEE
 13569                           fsr0h	equ	0xFEA
 13570                           fsr0l	equ	0xFE9
 13571                           wreg	equ	0xFE8
 13572                           postinc1	equ	0xFE6
 13573                           fsr1h	equ	0xFE2
 13574                           fsr1l	equ	0xFE1
 13575                           bsr	equ	0xFE0
 13576                           indf2	equ	0xFDF
 13577                           postinc2	equ	0xFDE
 13578                           postdec2	equ	0xFDD
 13579                           fsr2h	equ	0xFDA
 13580                           fsr2l	equ	0xFD9
 13581                           status	equ	0xFD8
 13582                           
 13583 ;; *************** function _UltrasoundISR *****************
 13584 ;; Defined at:
 13585 ;;		line 17 in file "Ultrasound.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;		None               void
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, cstack
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;Total ram usage:        0 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:    1
 13606 ;; This function calls:
 13607 ;;		_ReadTimer1
 13608 ;;		i2_WriteTimer1
 13609 ;; This function is called by:
 13610 ;;		_isrHP
 13611 ;; This function uses a non-reentrant model
 13612 ;;
 13613                           
 13614                           	psect	text111
 13615  001FD0                     __ptext111:
 13616                           	opt stack 0
 13617  001FD0                     _UltrasoundISR:
 13618                           	opt stack 18
 13619                           
 13620                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 13621                           
 13622                           ;incstack = 0
 13623  001FD0  9AF0               	bcf	intcon3,5,c	;volatile
 13624                           
 13625                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 13626  001FD2  B0CD               	btfsc	4045,0,c	;volatile
 13627  001FD4  D009               	goto	i2l28
 13628                           
 13629                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 13630  001FD6  80CD               	bsf	4045,0,c	;volatile
 13631                           
 13632                           ;Ultrasound.c: 35: WriteTimer1(0);
 13633  001FD8  0E00               	movlw	0
 13634  001FDA  6E45               	movwf	i2WriteTimer1@timer1+1,c
 13635  001FDC  0E00               	movlw	0
 13636  001FDE  6E44               	movwf	i2WriteTimer1@timer1,c
 13637  001FE0  ECDF  F011         	call	i2_WriteTimer1	;wreg free
 13638                           
 13639                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 13640  001FE4  96F1               	bcf	intcon2,3,c	;volatile
 13641                           
 13642                           ;Ultrasound.c: 37: }
 13643  001FE6  D00A               	goto	i2l6245
 13644  001FE8                     i2l28:
 13645                           
 13646                           ;Ultrasound.c: 38: else {
 13647                           ;Ultrasound.c: 39: T1CONbits.TMR1ON = 0;
 13648  001FE8  90CD               	bcf	4045,0,c	;volatile
 13649                           
 13650                           ;Ultrasound.c: 40: echo_time = ReadTimer1();
 13651  001FEA  ECE8  F011         	call	_ReadTimer1	;wreg free
 13652  001FEE  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 13653  001FF2  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 13654                           
 13655                           ;Ultrasound.c: 41: echo_acq_done = 1;
 13656  001FF6  0E01               	movlw	1
 13657  001FF8  6E1C               	movwf	_echo_acq_done,c
 13658  001FFA  D000               	goto	i2l6245
 13659  001FFC                     i2l6245:
 13660                           
 13661                           ;Ultrasound.c: 42: }
 13662                           ;Ultrasound.c: 43: INTCON3bits.INT3IF = 0;
 13663  001FFC  94F0               	bcf	intcon3,2,c	;volatile
 13664                           
 13665                           ;Ultrasound.c: 44: INTCON3bits.INT3IE = 1;
 13666  001FFE  8AF0               	bsf	intcon3,5,c	;volatile
 13667  002000  0012               	return		;funcret
 13668  002002                     __end_of_UltrasoundISR:
 13669                           	opt stack 0
 13670                           pclatu	equ	0xFFB
 13671                           pclath	equ	0xFFA
 13672                           tblptru	equ	0xFF8
 13673                           tblptrh	equ	0xFF7
 13674                           tblptrl	equ	0xFF6
 13675                           tablat	equ	0xFF5
 13676                           prodh	equ	0xFF4
 13677                           prodl	equ	0xFF3
 13678                           intcon	equ	0xFF2
 13679                           intcon2	equ	0xFF1
 13680                           intcon3	equ	0xFF0
 13681                           postinc0	equ	0xFEE
 13682                           fsr0h	equ	0xFEA
 13683                           fsr0l	equ	0xFE9
 13684                           wreg	equ	0xFE8
 13685                           postinc1	equ	0xFE6
 13686                           fsr1h	equ	0xFE2
 13687                           fsr1l	equ	0xFE1
 13688                           bsr	equ	0xFE0
 13689                           indf2	equ	0xFDF
 13690                           postinc2	equ	0xFDE
 13691                           postdec2	equ	0xFDD
 13692                           fsr2h	equ	0xFDA
 13693                           fsr2l	equ	0xFD9
 13694                           status	equ	0xFD8
 13695                           
 13696 ;; *************** function i2_WriteTimer1 *****************
 13697 ;; Defined at:
 13698 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 13699 ;; Parameters:    Size  Location     Type
 13700 ;;  timer1          2   25[COMRAM] unsigned int 
 13701 ;; Auto vars:     Size  Location     Type
 13702 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 13703 ;; Return value:  Size  Location     Type
 13704 ;;		None               void
 13705 ;; Registers used:
 13706 ;;		None
 13707 ;; Tracked objects:
 13708 ;;		On entry : 0/0
 13709 ;;		On exit  : 0/0
 13710 ;;		Unchanged: 0/0
 13711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13713 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13715 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13716 ;;Total ram usage:        4 bytes
 13717 ;; Hardware stack levels used:    1
 13718 ;; This function calls:
 13719 ;;		Nothing
 13720 ;; This function is called by:
 13721 ;;		_UltrasoundISR
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           	psect	text112
 13726  0023BE                     __ptext112:
 13727                           	opt stack 0
 13728  0023BE                     i2_WriteTimer1:
 13729                           	opt stack 18
 13730                           
 13731                           ;incstack = 0
 13732  0023BE  C044  F0BE         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 13733  0023C2  C045  F0BF         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 13734  0023C6  C0BF  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 13735  0023CA  C0BE  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 13736  0023CE  0012               	return		;funcret
 13737  0023D0                     __end_ofi2_WriteTimer1:
 13738                           	opt stack 0
 13739                           pclatu	equ	0xFFB
 13740                           pclath	equ	0xFFA
 13741                           tblptru	equ	0xFF8
 13742                           tblptrh	equ	0xFF7
 13743                           tblptrl	equ	0xFF6
 13744                           tablat	equ	0xFF5
 13745                           prodh	equ	0xFF4
 13746                           prodl	equ	0xFF3
 13747                           intcon	equ	0xFF2
 13748                           intcon2	equ	0xFF1
 13749                           intcon3	equ	0xFF0
 13750                           postinc0	equ	0xFEE
 13751                           fsr0h	equ	0xFEA
 13752                           fsr0l	equ	0xFE9
 13753                           wreg	equ	0xFE8
 13754                           postinc1	equ	0xFE6
 13755                           fsr1h	equ	0xFE2
 13756                           fsr1l	equ	0xFE1
 13757                           bsr	equ	0xFE0
 13758                           indf2	equ	0xFDF
 13759                           postinc2	equ	0xFDE
 13760                           postdec2	equ	0xFDD
 13761                           fsr2h	equ	0xFDA
 13762                           fsr2l	equ	0xFD9
 13763                           status	equ	0xFD8
 13764                           
 13765 ;; *************** function _ReadTimer1 *****************
 13766 ;; Defined at:
 13767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;		None
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;  timer           2    0[BANK0 ] struct Timers
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  2   25[COMRAM] unsigned int 
 13774 ;; Registers used:
 13775 ;;		None
 13776 ;; Tracked objects:
 13777 ;;		On entry : 0/0
 13778 ;;		On exit  : 0/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;Total ram usage:        4 bytes
 13786 ;; Hardware stack levels used:    1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_UltrasoundISR
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text113
 13795  0023D0                     __ptext113:
 13796                           	opt stack 0
 13797  0023D0                     _ReadTimer1:
 13798                           	opt stack 18
 13799                           
 13800                           ;incstack = 0
 13801  0023D0  CFCE F0BE          	movff	4046,ReadTimer1@timer	;volatile
 13802  0023D4  CFCF F0BF          	movff	4047,ReadTimer1@timer+1	;volatile
 13803  0023D8  C0BE  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 13804  0023DC  C0BF  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 13805  0023E0  0012               	return		;funcret
 13806  0023E2                     __end_of_ReadTimer1:
 13807                           	opt stack 0
 13808                           pclatu	equ	0xFFB
 13809                           pclath	equ	0xFFA
 13810                           tblptru	equ	0xFF8
 13811                           tblptrh	equ	0xFF7
 13812                           tblptrl	equ	0xFF6
 13813                           tablat	equ	0xFF5
 13814                           prodh	equ	0xFF4
 13815                           prodl	equ	0xFF3
 13816                           intcon	equ	0xFF2
 13817                           intcon2	equ	0xFF1
 13818                           intcon3	equ	0xFF0
 13819                           postinc0	equ	0xFEE
 13820                           fsr0h	equ	0xFEA
 13821                           fsr0l	equ	0xFE9
 13822                           wreg	equ	0xFE8
 13823                           postinc1	equ	0xFE6
 13824                           fsr1h	equ	0xFE2
 13825                           fsr1l	equ	0xFE1
 13826                           bsr	equ	0xFE0
 13827                           indf2	equ	0xFDF
 13828                           postinc2	equ	0xFDE
 13829                           postdec2	equ	0xFDD
 13830                           fsr2h	equ	0xFDA
 13831                           fsr2l	equ	0xFD9
 13832                           status	equ	0xFD8
 13833                           
 13834 ;; *************** function _MillisecondTimerISR *****************
 13835 ;; Defined at:
 13836 ;;		line 55 in file "MillisecondTimer.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;		None
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;		None               void
 13843 ;; Registers used:
 13844 ;;		wreg, status,2, status,0, cstack
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/0
 13847 ;;		On exit  : 0/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;Total ram usage:        0 bytes
 13855 ;; Hardware stack levels used:    1
 13856 ;; Hardware stack levels required when called:    1
 13857 ;; This function calls:
 13858 ;;		i2_WriteTimer0
 13859 ;; This function is called by:
 13860 ;;		_isrHP
 13861 ;; This function uses a non-reentrant model
 13862 ;;
 13863                           
 13864                           	psect	text114
 13865  0022A4                     __ptext114:
 13866                           	opt stack 0
 13867  0022A4                     _MillisecondTimerISR:
 13868                           	opt stack 18
 13869                           
 13870                           ;MillisecondTimer.c: 57: WriteTimer0(63036);
 13871                           
 13872                           ;incstack = 0
 13873  0022A4  0EF6               	movlw	246
 13874  0022A6  6E45               	movwf	i2WriteTimer0@timer0+1,c
 13875  0022A8  0E3C               	movlw	60
 13876  0022AA  6E44               	movwf	i2WriteTimer0@timer0,c
 13877  0022AC  ECF1  F011         	call	i2_WriteTimer0	;wreg free
 13878                           
 13879                           ;MillisecondTimer.c: 58: millisecond_COUNT0++;
 13880  0022B0  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 13881  0022B2  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 13882                           
 13883                           ;MillisecondTimer.c: 59: millisecond_COUNT1++;
 13884  0022B4  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 13885  0022B6  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 13886                           
 13887                           ;MillisecondTimer.c: 60: millisecond_COUNT2++;
 13888  0022B8  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 13889  0022BA  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 13890                           
 13891                           ;MillisecondTimer.c: 61: millisecond_COUNT3++;
 13892  0022BC  4A13               	infsnz	_millisecond_COUNT3,f,c	;volatile
 13893  0022BE  2A14               	incf	_millisecond_COUNT3+1,f,c	;volatile
 13894  0022C0  0012               	return		;funcret
 13895  0022C2                     __end_of_MillisecondTimerISR:
 13896                           	opt stack 0
 13897                           pclatu	equ	0xFFB
 13898                           pclath	equ	0xFFA
 13899                           tblptru	equ	0xFF8
 13900                           tblptrh	equ	0xFF7
 13901                           tblptrl	equ	0xFF6
 13902                           tablat	equ	0xFF5
 13903                           prodh	equ	0xFF4
 13904                           prodl	equ	0xFF3
 13905                           intcon	equ	0xFF2
 13906                           intcon2	equ	0xFF1
 13907                           intcon3	equ	0xFF0
 13908                           postinc0	equ	0xFEE
 13909                           fsr0h	equ	0xFEA
 13910                           fsr0l	equ	0xFE9
 13911                           wreg	equ	0xFE8
 13912                           postinc1	equ	0xFE6
 13913                           fsr1h	equ	0xFE2
 13914                           fsr1l	equ	0xFE1
 13915                           bsr	equ	0xFE0
 13916                           indf2	equ	0xFDF
 13917                           postinc2	equ	0xFDE
 13918                           postdec2	equ	0xFDD
 13919                           fsr2h	equ	0xFDA
 13920                           fsr2l	equ	0xFD9
 13921                           status	equ	0xFD8
 13922                           
 13923 ;; *************** function i2_WriteTimer0 *****************
 13924 ;; Defined at:
 13925 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  timer0          2   25[COMRAM] unsigned int 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 13930 ;; Return value:  Size  Location     Type
 13931 ;;		None               void
 13932 ;; Registers used:
 13933 ;;		None
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13942 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;Total ram usage:        4 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; This function calls:
 13946 ;;		Nothing
 13947 ;; This function is called by:
 13948 ;;		_MillisecondTimerISR
 13949 ;; This function uses a non-reentrant model
 13950 ;;
 13951                           
 13952                           	psect	text115
 13953  0023E2                     __ptext115:
 13954                           	opt stack 0
 13955  0023E2                     i2_WriteTimer0:
 13956                           	opt stack 18
 13957                           
 13958                           ;incstack = 0
 13959  0023E2  C044  F0BE         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 13960  0023E6  C045  F0BF         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 13961  0023EA  C0BF  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 13962  0023EE  C0BE  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 13963  0023F2  0012               	return		;funcret
 13964  0023F4                     __end_ofi2_WriteTimer0:
 13965                           	opt stack 0
 13966  0000                     pclatu	equ	0xFFB
 13967                           pclath	equ	0xFFA
 13968                           tblptru	equ	0xFF8
 13969                           tblptrh	equ	0xFF7
 13970                           tblptrl	equ	0xFF6
 13971                           tablat	equ	0xFF5
 13972                           prodh	equ	0xFF4
 13973                           prodl	equ	0xFF3
 13974                           intcon	equ	0xFF2
 13975                           intcon2	equ	0xFF1
 13976                           intcon3	equ	0xFF0
 13977                           postinc0	equ	0xFEE
 13978                           fsr0h	equ	0xFEA
 13979                           fsr0l	equ	0xFE9
 13980                           wreg	equ	0xFE8
 13981                           postinc1	equ	0xFE6
 13982                           fsr1h	equ	0xFE2
 13983                           fsr1l	equ	0xFE1
 13984                           bsr	equ	0xFE0
 13985                           indf2	equ	0xFDF
 13986                           postinc2	equ	0xFDE
 13987                           postdec2	equ	0xFDD
 13988                           fsr2h	equ	0xFDA
 13989                           fsr2l	equ	0xFD9
 13990                           status	equ	0xFD8
 13991                           pclatu	equ	0xFFB
 13992                           pclath	equ	0xFFA
 13993                           tblptru	equ	0xFF8
 13994                           tblptrh	equ	0xFF7
 13995                           tblptrl	equ	0xFF6
 13996                           tablat	equ	0xFF5
 13997                           prodh	equ	0xFF4
 13998                           prodl	equ	0xFF3
 13999                           intcon	equ	0xFF2
 14000                           intcon2	equ	0xFF1
 14001                           intcon3	equ	0xFF0
 14002                           postinc0	equ	0xFEE
 14003                           fsr0h	equ	0xFEA
 14004                           fsr0l	equ	0xFE9
 14005                           wreg	equ	0xFE8
 14006                           postinc1	equ	0xFE6
 14007                           fsr1h	equ	0xFE2
 14008                           fsr1l	equ	0xFE1
 14009                           bsr	equ	0xFE0
 14010                           indf2	equ	0xFDF
 14011                           postinc2	equ	0xFDE
 14012                           postdec2	equ	0xFDD
 14013                           fsr2h	equ	0xFDA
 14014                           fsr2l	equ	0xFD9
 14015                           status	equ	0xFD8
 14016                           
 14017                           	psect	rparam
 14018  0000                     pclatu	equ	0xFFB
 14019                           pclath	equ	0xFFA
 14020                           tblptru	equ	0xFF8
 14021                           tblptrh	equ	0xFF7
 14022                           tblptrl	equ	0xFF6
 14023                           tablat	equ	0xFF5
 14024                           prodh	equ	0xFF4
 14025                           prodl	equ	0xFF3
 14026                           intcon	equ	0xFF2
 14027                           intcon2	equ	0xFF1
 14028                           intcon3	equ	0xFF0
 14029                           postinc0	equ	0xFEE
 14030                           fsr0h	equ	0xFEA
 14031                           fsr0l	equ	0xFE9
 14032                           wreg	equ	0xFE8
 14033                           postinc1	equ	0xFE6
 14034                           fsr1h	equ	0xFE2
 14035                           fsr1l	equ	0xFE1
 14036                           bsr	equ	0xFE0
 14037                           indf2	equ	0xFDF
 14038                           postinc2	equ	0xFDE
 14039                           postdec2	equ	0xFDD
 14040                           fsr2h	equ	0xFDA
 14041                           fsr2l	equ	0xFD9
 14042                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         136
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160     40     140
    BANK1           256     43      43
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@PID_set_point_ptr	PTR int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    main@PID_error_ptr	PTR int  size(2) Largest target is 2
		 -> PID_error(BANK0[2]), 

    main@sensor_sum_ptr	PTR int  size(2) Largest target is 2
		 -> main@sensor_sum(BANK1[2]), 

    main@sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    CalibrateThreshold@sensor_threshold_temp_ptr	PTR int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), 

    DisplaySensorStatuses@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSumDiscrete@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSum@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    CalculateSensorStatuses@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), sensor_threshold(BANK0[2]), 

    CalculateSensorStatuses@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    NormaliseSensorReadings@sensor_offsets	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    NormaliseSensorReadings@sensor_readings_raw	PTR  int  size(2) Largest target is 10
		 -> sensor_readings_raw(BANK0[10]), 

    SendPIDSetPointOnLine@set_point	PTR const int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_LoadCalibration
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendThreshold->_PutCharTxBuf
    _SendStoredPIDValues->_PutCharTxBuf
    _SendPIDSetPointOnLine->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_CalibrateThreshold
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_CalculateSensorStatuses
    _CalibrateOnLine->_CalculateSensorSum
    _CalculateSensorSum->___wmul
    _CalibrateOffsets->_SendStatus
    _SendStatus->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   67368
                                             36 BANK0      4     4      0
                                              0 BANK1     43    43      0
                    _BusyDistanceAcq
                      _BusySensorAcq
            _CalculateSensorStatuses
                 _CalculateSensorSum
         _CalculateSensorSumDiscrete
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadMillis2
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
                       _ResetMillis3
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                        _SendOffsets
              _SendPIDSetPointOnLine
                         _SendStatus
                _SendStoredPIDValues
                      _SendThreshold
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     575
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1170
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1390
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendThreshold                                        4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOnLine                                4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1270
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11417
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5850
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   13137
                                             33 BANK0      3     3      0
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1167
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     514
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0   11326
                                             30 BANK0      3     3      0
                   _CalibrateOffsets
                    _CalibrateOnLine
                 _CalibrateThreshold
                          _FlashLEDS
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3     966
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   4     4      0    3762
                                             26 BANK0      4     4      0
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                            _ReadADC
                         _SendStatus
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                             10     6      4    1096
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOnLine                                      0     0      0    3359
                      _BusySensorAcq
                 _CalculateSensorSum
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              9     5      4    1003
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorSum                                   6     4      2    1216
                                             22 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0    1270
                                             25 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     573
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     375
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSumDiscrete                           4     2      2     297
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorStatuses
   _CalculateSensorSum
     ___wmul
   _CalculateSensorSumDiscrete
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateOnLine
       _BusySensorAcq
       _CalculateSensorSum
         ___wmul
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _ReadADC
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SetADCChannel
         _SetChanADC
     _FlashLEDS
       _Delay10KTCYx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateOnLine
         _BusySensorAcq
         _CalculateSensorSum
           ___wmul
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _ReadADC
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
         _SetADCChannel
           _SetChanADC
       _FlashLEDS
         _Delay10KTCYx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadMillis2
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _ResetMillis3
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOnLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendThreshold
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___awdiv
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2B      2B       7       16.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      8C       5       87.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC      32        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 27 13:15:18 2017

                             __size_of_WriteEEPROM 0040                                __end_of_OWWriteByte 208A  
                             __end_of_GetCharRxBuf 1BE2                               __end_of_GetCharTxBuf 1EFE  
                                               l36 2442                                       ___awdiv@sign 00D3  
                              WriteCharEEPROM@data 00D3                                                 bsr 000FE0  
                              ___wmul@multiplicand 00D0                                        __CFG_BORV$0 000000  
                       __end_of_CalculateSensorSum 0C28                                  main@line_end_flag 0108  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                      __CFG_OSC$HS 000000                                       __CFG_CP4$OFF 000000  
                                     __CFG_CP5$OFF 000000                                __end_of_GetDistance 2374  
                                     __CFG_CP6$OFF 000000                                       __CFG_CP7$OFF 000000  
                             LoadCalibration@index 00E1                                                l213 1CFC  
                                              l214 1D2C                                                l223 2098  
                                              l216 1D20                                                l224 20B4  
                                              l240 2402                                                l128 128C  
                                              l226 20AC                                                l324 2412  
                                              l237 1AE8                                                l461 24F8  
                                              l286 1BE0                                                l552 1DCC  
                                              l458 248A                                                l554 1DE2  
                                              l562 2088                                                l475 1960  
                                              l804 1664                                                l821 0C26  
                                              l557 2030                                                l549 1E54  
                                              l831 1B9A                                                l567 1E80  
                                              l487 205C                                                l568 1E8C  
                                              l826 1D6C                                                l818 0B2E  
                                              l843 1B0A                                                l915 1080  
                                              l923 0904                                                l860 1A8A  
                                              l845 1B46                                                l918 08EE  
                                              l863 1A58                                                l943 0D1C  
                                              l848 1B14                                                l793 0E0A  
                                              l881 145E                                                l858 1A4E  
                                              l799 2422                                       __CFG_CPB$OFF 000000  
                                              _PR2 000FCB                                                _PR4 000F77  
                                     __CFG_CPD$OFF 000000                      __size_of_SendCurrentPIDValues 006A  
                           __size_of_SetDCMotorPID 00A8                               __size_of_WriteTimer0 0012  
                             __size_of_WriteTimer1 0012                              CalibrateOffsets@index 00D9  
                                       _OWReadByte 1E56                                      _SetADCChannel 0D1E  
                                     ___awmod@sign 00D3                                                prod 000FF3  
                             ?_SendStoredPIDValues 00D6                                                wreg 000FE8  
                                       _TXSTA1bits 000FAC                                       __CFG_MODE$MC 000000  
                        ??_CalculateSensorStatuses 00D2                                        ?_PB1pressed 002B  
                                  ReadTimer1@timer 00BE                                      main@Kd_stored 0124  
                                main@line_mode_ptr 0111                                        ?_PB2pressed 002B  
                                     __CFG_LVP$OFF 000000                                         _Delay1TCYx 2424  
                                     __CFG_WDT$OFF 000000                                               l1140 2176  
                                             l1061 16DE                                               l1117 2192  
                                             l1222 14B8                                               l1039 247C  
                                             l1224 14C6                                               l1240 2152  
                                             l1225 14C8                                               l1218 1496  
                                             l1091 21BA                                               l1139 2174  
                                             l1163 1F80                                               l1227 14E4  
                                             l1236 2140                                               l1093 21C4  
                                             l1165 1F98                                               l1069 235E  
                                             l1166 1F9A                                               l1254 1EC4  
                                             l1194 2208                                               l1195 220A  
                                             l1460 1134                                               l1447 0FC4  
                                             l1484 2428                                               l1486 2432  
                                             l1479 2266                                               l6021 2072  
                                             l6031 1E62                                               l6201 08F8  
                                             l6009 1E46                                               l6017 2068  
                                             l6211 0918                                               l6043 1E86  
                                             l6035 1E6C                                               l7003 083C  
                                             l6117 219C                                               l6213 0926  
                                             l7005 0850                                               l5503 1114  
                                             l6065 1F84                                               l6161 1A80  
                                             l6153 1A62                                               l5507 112A  
                                             l6155 1A7A                                               l6323 1D70  
                                             l6331 1334                                               l5525 1F04  
                                             l6173 1140                                               l6165 1A86  
                                             l6341 135E                                               l6405 1750  
                                             l5535 1F2A                                               l5551 0D24  
                                             l6183 1194                                               l6271 1226  
                                             l5529 1F0E                                               l5561 0D4C  
                                             l5553 0D2C                                               l5625 1DEA  
                                             l5713 1B5C                                               l6177 114A  
                                             l6513 0CD6                                               l6337 1354  
                                             l6409 17AA                                               l5571 0D74  
                                             l5563 0D54                                               l5555 0D34  
                                             l5491 10C6                                               l5483 10A0  
                                             l6507 0CB2                                               l6419 193A  
                                             l6347 13B6                                               l6355 16E4  
                                             l6275 1262                                               l6523 0F14  
                                             l5581 0D9C                                               l5573 0D7C  
                                             l5565 0D5C                                               l5557 0D3C  
                                             l5493 10D4                                               l5645 15EE  
                                             l5709 1B52                                               l5901 12A6  
                                             l6365 1826                                               l6349 13C4  
                                             l6455 1D3A                                               l5815 1F3A  
                                             l5575 0D84                                               l5567 0D64  
                                             l5559 0D44                                               l5495 10DE  
                                             l5487 10B2                                               l5663 0A40  
                                             l5911 12CE                                               l5719 224E  
                                             l6375 17BC                                               l6359 173E  
                                             l6535 0F4A                                               l6551 0FA4  
                                             l6465 1D66                                               l5825 1F60  
                                             l5577 0D8C                                               l5569 0D6C  
                                             l5585 0DA4                                               l5753 1B3C  
                                             l5745 1B1E                                               l5649 15F8  
                                             l5681 0AC2                                               l5673 0AAC  
                                             l5905 12B2                                               l6385 1890  
                                             l6369 187E                                               l6537 0F58  
                                             l6529 0F2C                                               l6459 1D44  
                                             l5819 1F44                                               l5579 0D94  
                                             l5747 1B36                                               l5499 1104  
                                             l5667 0A8C                                               l5659 0A36  
                                             l6483 1004                                               l6475 0FE0  
                                             l6395 1964                                               l6379 1814  
                                             l6555 0FBA                                               l6547 0F94  
                                             l6539 0F62                                               l5757 1B42  
                                             l5685 0B0E                                               l5677 0AB8  
                                             l5669 0AA4                                               l6493 0C30  
                                             l6389 18E8                                               l5871 1400  
                                             l5863 13E0                                               l5687 0B26  
                                             l5919 131E                                               l6479 0FFA  
                                             l6399 19BA                                               l6911 05C0  
                                             l5961 149A                                               l5953 1482  
                                             l6489 1052                                               l6809 02F2  
                                             l5875 140A                                               l5867 13F0  
                                             l6835 0354                                               l6827 0326  
                                             l6819 030C                                               l6763 01DC  
                                             l5973 14BC                                               l5965 14A4  
                                             l5957 148C                                               l5949 1476  
                                             l5885 19D6                                               l6941 0690  
                                             l6933 064A                                               l6845 037C  
                                             l6829 0344                                               l6757 01CC  
                                             l6871 03FA                                               l6839 0362  
                                             l6791 023A                                               l6767 01EE  
                                             l5969 14AE                                               l5889 19E6  
                                             l6929 0630                                               l6961 072C  
                                             l6785 0224                                               l6777 020E  
                                             l6939 068A                                               l6963 0732  
                                             l6875 0404                                               l6949 06E0  
                                             l6991 07EA                                               l6967 0742  
                                             l6983 07C6                                               l6959 0714  
                                             l6969 0748                                               l6977 079C  
                                             l6995 07F8                                               l6979 07B4  
                                             l6997 0824                                               l6999 082C  
                                             _LATE 000F8D                                               _LATJ 000F91  
                                             u5400 243E                                               u4620 241E  
                                             u6220 0598                                               u5430 123A  
                                             u4560 240E                                               u4810 1B32  
                                             u5290 1A76                                               u4580 2486  
                                             u4830 2478                                               u4754 1B88  
                                             u6370 0806                                               u6290 072A  
                                             u4755 1B82                                               u6507 2010  
                                             u6427 1DBE                                               u5635 1948  
                                             i2l28 1FE8                                               u6380 081A  
                                             u6372 0808                                               u6517 2022  
                                             u6437 1DC6                                               u4845 1C30  
                                             u6382 081C                                               u6527 2256  
                                             u6447 1DD2                                               u4855 1BEC  
                                             u6457 1DDA                                               u6467 1E2A  
                                             u6477 1E34                                               u6487 1E48  
                                             u6497 2008                                    _BusyDistanceAcq 2434  
                                             _TMR2 000FCC                                      main@Ki_stored 0126  
                        __size_of_ConfigureBuggyIO 001A                                     Read1USART@data 00CE  
                                             _main 00F0                           __end_of_EnableSensorLEDS 2514  
                          _NormaliseSensorReadings 15E8                             __end_of_WirelessTx_ISR 21EC  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr0l 000FE9                                               fsr2h 000FDA  
                                             fsr1l 000FE1                                               indf2 000FDF  
                                             fsr2l 000FD9                             __size_ofi2_WriteTimer0 0012  
                           __size_ofi2_WriteTimer1 0012                                               pclat 000FFA  
                          ??_SendPIDSetPointOnLine 00D8               DisplaySensorStatuses@sensor_statuses 00CE  
                                             prodh 000FF4                                               prodl 000FF3  
                                   _ReadCharEEPROM 23F4                                               start 00EC  
                                  __end_of_OWReset 1E56                                         _OWWriteBit 1DAA  
                                    __CFG_IESO$OFF 000000                                _ConfigureInterrupts 2106  
                                    main@Kp_stored 0122                                      _BusySensorAcq 2414  
                                    _ReadIntEEPROM 1A8C                               __end_of_EnableMotors 2524  
                                    __CFG_MCLRE$ON 000000                                         _GetCommand 24F2  
                                     ___param_bank 000010                                    __end_of_BusyADC 247E  
                                  __end_of_ReadADC 2360                                      ??_ReadMillis0 00D0  
                                    ??_ReadMillis1 00D0                                      ??_ReadMillis2 00D0  
                                  __end_of_OpenADC 16E2                                      ??_SetDCMotorL 00D6  
                                    ??_SetDCMotorR 00D6                              _DisplaySensorStatuses 1B48  
                                    __CFG_WAIT$OFF 000000                                    __end_of_StartTx 24F2  
                                    ??_ReadVoltage 00D3                                     _ReadEchoLength 24CC  
                                            ?_main 002B                                    __end_of___awdiv 0FC6  
                                            _EEADR 000FA9                                    __end_of___awmod 1136  
                                   PutCharRxBuf@ch 00D5                                              _T0CON 000FD5  
                                  ___awdiv@divisor 00D0                                              _T1CON 000FCD  
                                            _T2CON 000FCA                                              i1l303 21EA  
                                            i1l280 1EFC                                     ?_SetADCChannel 002B  
                                            i1l952 009A                                              i1l793 0EF4  
                 __size_of_ResetAccumulatedCurrent 002C                                              i1l957 00A6  
                                  _CalibrateOnLine 19CA                                              i2l946 15A2  
                                  ___awdiv@counter 00D2                                              i2l949 15AE  
                                    _UltrasoundISR 1FD0                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR1L 000FCE                                     PutCharTxBuf@ch 00D5  
                            ??_SendStoredPIDValues 00DC                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                            CalculateSensorSum@sum 00D8                                              _TRISG 000F98  
                                            _TRISJ 000F9A                               ?_ConfigureInterrupts 002B  
                            __size_of_Delay10KTCYx 001E                                      __CFG_PWRT$OFF 000000  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                      __CFG_WRT3$OFF 000000  
                                    __CFG_WRT4$OFF 000000                                      __CFG_WRT5$OFF 000000  
                                    __CFG_WRT6$OFF 000000                                      __CFG_WRT7$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                     __CFG_EBTR4$OFF 000000  
                                   __CFG_EBTR5$OFF 000000                                     __CFG_EBTR6$OFF 000000  
                                   __CFG_EBTR7$OFF 000000                             WriteCharEEPROM@address 00D1  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     i1___awmod@sign 0030  
          CalculateSensorStatuses@sensor_threshold 00D0                                     __CFG_EBTRB$OFF 000000  
                               __size_ofi1_ReadADC 0010                                              _isrHP 0008  
                                            _isrLP 0018                                         _Read1USART 212E  
                                       _ConvertADC 251C                                    ??_LoadPIDValues 00DB  
                                   __CFG_BOREN$OFF 000000                                              tablat 000FF5  
                                       _ReadEEPROM 208A                             __end_of_ReadCharEEPROM 2404  
                                            status 000FD8                              SendStoredPIDValues@Kd 00D8  
                            SendStoredPIDValues@Ki 00DA                              SendStoredPIDValues@Kp 00D6  
                                  ?_WirelessTx_ISR 002B                                 __size_ofi1___awmod 0082  
                                      _OWWriteByte 205E                                      _SetDCMotorPID 11E6  
                                   ?_BusySensorAcq 002B                                     ?_ReadIntEEPROM 00D0  
                                    ?_SetPIDValues 002B                                         _FlushRxBuf 1F34  
                                  _ConfigureTimer0 230A                                    _ConfigureTimer1 22DC  
                                  _ConfigureTimer2 24FA                                         _FlushTxBuf 1EFE  
                               __size_of_OWReadBit 0030                                    __initialization 220E  
                                 ?_LoadCalibration 002B                                        _GetDistance 2360  
                               main@sensor_sum_ptr 0100                                       __end_of_main 08E2  
                                       _ReadTimer1 23D0                                __size_of_PB1pressed 005E  
                              __size_of_PB2pressed 005E                                       _Delay10KTCYx 224A  
                                    ??_SendOffsets 00D8                             __end_of_ReadEchoLength 24D6  
                          __size_of_WriteIntEEPROM 0032                                   _CommandAvailable 247E  
                                       _Open1USART 1460                                   __end_of_OpenPWM4 21C6  
                                 __end_of_OpenPWM5 21A0                                             ??_main 00E2  
                             __end_of_ConfigureADC 2388                                     ?_UltrasoundISR 002B  
                                    i2_WriteTimer0 23E2                               __end_of_ConfigurePWM 249A  
                                    i2_WriteTimer1 23BE                                      __activetblptr 000003  
                                ReadVoltage@result 00D6                                __end_of_ReadMillis0 24CC  
                              __end_of_ReadMillis1 24C2                                __end_of_ReadMillis2 24EA  
                            ??_ConfigureInterrupts 00CE                                 __size_of_FlashLEDS 0028  
                                       _SetChanADC 2268                                _ConfigureUltrasound 20DE  
                                      ?_OWReadByte 002B                        __size_of_CalibrateThreshold 00A4  
                          __end_of_BusyDistanceAcq 2444                                __end_of_SetDCMotorL 2470  
                              __end_of_SetDCMotorR 2462                                __end_of_ReadVoltage 1962  
                            __end_of_DisableMotors 2528                                             _ADCON0 000FC2  
                                           _ADCON1 000FC1                                             _ADCON2 000FC0  
                                ReadEEPROM@address 00CE                                             ?_isrHP 002B  
                                           ?_isrLP 002B                                             _ADRESH 000FC4  
                                           _EEADRH 000FAA                                             _ADRESL 000FC3  
                                           _EEDATA 000FA8                                        ?_Delay1TCYx 002B  
                                    ??_SetUnipolar 00CE                                             _CCPR4L 000F74  
                                           _CCPR5L 000F71                                             _EECON2 000FA7  
                                 ___awdiv@dividend 00CE                                    i1_SetADCChannel 0E0C  
                        ??_NormaliseSensorReadings 00D2                                         _SendStatus 1DE4  
                                           i1l1069 2452                                             i1l1460 1566  
                                           i1l4151 1540                                             i1l4143 1518  
                                           i1l4135 14FC                                             i1l5103 0092  
                                           i1l4145 1522                                             i1l4147 152A  
                                           i1l4155 154C                                             i1l4139 150A  
                                        ??_OWReset 00CE                                             i1l4159 155C  
                                  __CFG_BBSIZ$BB2K 000000                                             i1l4199 2346  
                                           i1l4583 21E2                                             i1l4903 0E90  
                                       _OpenTimer0 2154                                         _OpenTimer1 1F6A  
                                       _OpenTimer2 21EC                                             i1l4871 0E18  
                                           i1l4881 0E40                                             i1l4873 0E20  
                                           i1l4891 0E68                                             i1l4883 0E48  
                                           i1l4875 0E28                                             i1l4893 0E70  
                                           i1l4885 0E50                                             i1l4877 0E30  
                                           i1l4869 0E10                                             i1l4895 0E78  
                                           i1l4887 0E58                                             i1l4879 0E38  
                                           i1l4897 0E80                                             i1l4889 0E60  
                                           i1l4899 0E88                                             i2l6245 1FFC  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _PID_Kd 0092                                             _PID_Ki 0094  
                                           _PID_Kp 0096                           GenerateCalibration@index 00DE  
                                           _SPBRG1 000FAF                                    ?_ReadCharEEPROM 00D0  
                               __size_of_SetDCPWM4 0044                                 __size_of_SetDCPWM5 0044  
                                 _CalibrateOffsets 13D4                                     ?_SetDCMotorPID 00D6  
                                        ??_BusyADC 00CE                                             _TXREG1 000FAD  
                                        ??_ReadADC 00D0                                             _TXSTA1 000FAC  
                             ?_ConfigureUltrasound 00D2                                _SetDirectionForward 2508  
                                   ??_SetPIDValues 00D7                                        ?_OWWriteBit 002B  
                            __size_of_GetCharRxBuf 0046                                          ??_OpenADC 00D0  
                            __size_of_GetCharTxBuf 0038                         _sensor_readings_normalised 00A4  
                                           _BusyTx 2404                                     __CFG_XINST$OFF 000000  
                                      ?_GetCommand 002B                                  ?_SetReverseMotorL 002B  
                                        ??_StartTx 00CE                                  __end_ofi1_ReadADC 2454  
                                           ___wmul 1E8E                                _sensor_readings_raw 00AE  
                                        ??___awdiv 00D2                             ?_DisplaySensorStatuses 00CE  
                                        ??___awmod 00D2                            __end_of_CalibrateOnLine 1A2E  
                                 OpenTimer0@config 00CE                                 ??_SetReverseMotorL 00CE  
                                 OpenTimer1@config 00CE                                    ?_ReadEchoLength 00CE  
                           SendCurrentPIDValues@Kd 00D8                             SendCurrentPIDValues@Ki 00DA  
                           SendCurrentPIDValues@Kp 00D6                                   OpenTimer2@config 00CE  
                                           clear_0 2214                                             clear_1 2220  
                                 ___awdiv@quotient 00D4                                    ___awmod@divisor 00D0  
                                  ??_SetADCChannel 00D0                                     ?i2_WriteTimer0 0044  
                                   ?i2_WriteTimer1 0044                                    ___awmod@counter 00D2  
                            ReadCharEEPROM@address 00D0                                      ?_SendLineMode 00D6  
                         __size_of_WriteCharEEPROM 0012                                  __end_ofi1___awmod 1568  
                             ?_SetDirectionForward 002B                                __end_of_SendOffsets 13D4  
                     ??_CalculateSensorSumDiscrete 00D0                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                __end_of_OWReadBit 2032                              WriteIntEEPROM@address 00D1  
                               main@find_line_flag 010A                                        ?_Read1USART 002B  
                                     _GetCharRxBuf 1B9C                                        ?_ConvertADC 002B  
                                     _GetCharTxBuf 1EC6                            __end_of_ConfigureTimer0 2320  
                          __end_of_ConfigureTimer1 22F4                            __end_of_ConfigureTimer2 2502  
                                    main@stop_flag 011E                                   _ConfigureBuggyIO 22C2  
                                      ?_ReadEEPROM 00CE                                         __accesstop 0060  
                          __end_of__initialization 2226                              __size_of_EnableMotors 0004  
                                  ??_BusySensorAcq 00CE                                 _millisecond_COUNT0 000D  
                               _millisecond_COUNT1 000F                                 _millisecond_COUNT2 0011  
                               _millisecond_COUNT3 0013                                    ??_ReadIntEEPROM 00D2  
                                       _StopMotors 222C                              ??_ConfigureUltrasound 00D8  
                         ??_SendBattVoltageInitial 00D8                      ConfigureUltrasound@echo_to_cm 00D2  
                    ConfigureUltrasound@echo_to_in 00D5                                      ___rparam_used 000001  
                              __end_of_SetUnipolar 2508                                  __end_of_FlashLEDS 20DE  
                     __end_of_SendDefaultPIDValues 188E                                        ?_FlushRxBuf 002B  
                                      ?_FlushTxBuf 002B                                __size_of_OWReadByte 0038  
                                   __pcstackCOMRAM 002B                                        ?_ReadTimer1 0044  
                                      _ReadMillis0 24C2                                        _ReadMillis1 24B8  
                                      _ReadMillis2 24E0                                      __end_of_isrHP 15E8  
                                    __end_of_isrLP 00EC                                __size_of_Delay1TCYx 0010  
                                  ??_UltrasoundISR 0046                                        _SetDCMotorL 2462  
                                      _SetDCMotorR 2454                                     ??_SendLineMode 00D8  
                                      ?_Open1USART 00CE                            _ResetAccumulatedCurrent 2032  
                                __end_of_SetDCPWM4 1C26                                  __end_of_SetDCPWM5 1C6A  
                                      _ReadVoltage 18F8                              ??_SetDirectionForward 00CE  
                                    ?_ResetMillis0 002B                                      ?_ResetMillis1 002B  
                                    ?_ResetMillis2 002B                                      ?_ResetMillis3 002B  
                              i1SetChanADC@channel 002C                                        ?_SetChanADC 002B  
                          __end_ofi1_SetADCChannel 0EF6  CalculateSensorStatuses@sensor_readings_normalised 00CE  
                                  _sensor_acq_done 0022                        __end_of_MillisecondTimerISR 22C2  
                             ReadIntEEPROM@address 00D0                       CalculateSensorStatuses@index 00D7  
                                 ?_BusyDistanceAcq 002B                                __size_of_OWWriteBit 003A  
                                     _EnableMotors 2520                                       ??_PB1pressed 00D0  
                                     ??_PB2pressed 00D0                                __size_of_GetCommand 0008  
                                          ??_isrHP 00C0                                            ??_isrLP 0033  
                      __end_of_GenerateCalibration 11E6                                 _CalculateSensorSum 0B30  
                  CalculateSensorSumDiscrete@index 00D1                                        ?_SendStatus 002B  
                                       __pbssBANK0 0060                                    ??_SetDCMotorPID 00D8  
                                      ?_OpenTimer0 002B                                        ?_OpenTimer1 002B  
                                      ?_OpenTimer2 002B                                      ??_Write1USART 002B  
                     __end_of_SendCurrentPIDValues 18F8                            main@battery_current_acc 010B  
                           __size_of_SendThreshold 006C                                  ?_EnableSensorLEDS 002B  
                          main@battery_current_ptr 0104                                      ??_WriteEEPROM 00D1  
                                        ?_OpenPWM4 002B                                          ?_OpenPWM5 002B  
                              ?_CalculateSensorSum 00D4                      CalculateSensorSumDiscrete@sum 00D0  
                                          ?_BusyTx 002B                     __size_of_SendPIDSetPointOnLine 006C  
                               ??_EnableSensorLEDS 00CE                      __end_of_SendPIDSetPointOnLine 17BA  
                            __size_of_ConfigureADC 0014                                            ?___wmul 00CE  
                                      _RxCharacter 0015                              __size_of_ConfigurePWM 000E  
                                 ?_CalibrateOnLine 002B                                    ??i2_WriteTimer0 0046  
                                  ??i2_WriteTimer1 0046                                 __end_of_PB1pressed 1B48  
                                   _WriteIntEEPROM 1F9E                                  main@PID_error_ptr 0102  
                                          _CCP4CON 000F73                                            _CCP5CON 000F70  
                                 WriteTimer0@timer 00D0                                 __end_of_PB2pressed 1A8C  
                                      _SendOffsets 1332                                   WriteTimer1@timer 00D0  
                                    ??_WriteTimer0 00D0                                      ??_WriteTimer1 00D0  
                              __size_of_Read1USART 0026                                __size_of_ConvertADC 0004  
                                  _sensor_statuses 0025                                      ?_PutCharRxBuf 002B  
                                 SendOffsets@index 00DA                                      ?_PutCharTxBuf 002B  
                                   ??_ResetMillis0 00CE                                     ??_ResetMillis1 00CE  
                                   ??_ResetMillis2 00CE                                     ??_ResetMillis3 00CE  
                              __size_of_ReadEEPROM 002C                               ??_CalculateSensorSum 00D6  
                                 Open1USART@config 00D0                             SetPIDValues@char_index 00DA  
                             __end_of_SetPIDValues 0A2A                                __size_of_FlushRxBuf 0036  
                                          _SPBRGH1 000F7F                                __size_of_FlushTxBuf 0036  
                          main@sensor_sum_discrete 0128                                  ??_WriteCharEEPROM 00D4  
                                      _TxCharacter 0019                                   ??_WirelessTx_ISR 0033  
                                      _SetUnipolar 2502                                __size_of_ReadTimer1 0012  
                                          _OWReset 1E1E                           __end_of_CommandAvailable 248C  
                           SetDCMotorPID@PIDoutput 00D6                                   ?_ConfigureTimer0 002B  
                                 ?_ConfigureTimer1 002B                                   ?_ConfigureTimer2 002B  
                                       _convert_cm 00E6                                         _convert_in 00E9  
                                      ?_StopMotors 002B                                __size_of_Open1USART 0086  
                                     ?_OWWriteByte 002B                                       _ConfigureADC 2374  
                                          _BusyADC 2470                                            _ReadADC 234C  
                                     _ConfigurePWM 248C                                i2WriteTimer0@timer0 0044  
                                       ??_OpenPWM4 00CE                                         ??_OpenPWM5 00CE  
                  __size_of_SendBattVoltageInitial 0068                                i2WriteTimer1@timer1 0044  
                                          _OpenADC 1666                                            __Hparam 0000  
                              __size_of_SetChanADC 001E                                    __size_of_BusyTx 0010  
                                          __Lparam 0000                                __end_of_Write1USART 234C  
                                     ?_GetDistance 002B                             __end_of_WriteIntEEPROM 1FD0  
                                          _StartTx 24EA                                            ___awdiv 0EF6  
                                          ___awmod 1082                                    __size_of___wmul 0038  
                        ??_ResetAccumulatedCurrent 00D1                                __end_of_WriteEEPROM 1D2E  
                                    ?i1_ConvertADC 002B          CalculateSensorSumDiscrete@sensor_statuses 00CE  
                                ReadIntEEPROM@data 00D5                        __end_of_SendStoredPIDValues 1824  
                                   ??_PutCharRxBuf 00D4                                    __CFG_STVREN$OFF 000000  
                                   ??_PutCharTxBuf 00D4                                            __pcinit 220E  
                               WriteEEPROM@address 00CE                                            __ramtop 1000  
                              __size_of_SendStatus 003A                                __size_of_OpenTimer0 0026  
                              __size_of_OpenTimer1 0034                                __size_of_OpenTimer2 0022  
                                          __ptext0 00F0                                            __ptext1 0EF6  
                                          __ptext2 222C                                            __ptext3 2502  
                                          __ptext4 2514                                            __ptext5 2518  
                                          __ptext6 2508                                            __ptext7 11E6  
                                          __ptext8 2454                                            __ptext9 1BE2  
                                     _get_Rx_index 001D                           __end_of_CalibrateOffsets 1460  
                                    _SendThreshold 16E2                                          _T0CONbits 000FD5  
                         ?_CalculateSensorStatuses 00CE                                          _T1CONbits 000FCD  
                                     _get_Tx_index 001E         NormaliseSensorReadings@sensor_readings_raw 00CE  
               __end_of_CalculateSensorSumDiscrete 1D6E                         _CalculateSensorSumDiscrete 1D2E  
                                     ??_OWReadByte 00CF                                          _T2CONbits 000FCA  
                                 ?i1_SetADCChannel 002B                                          _T3CONbits 000FB1  
                                 ___awmod@dividend 00CE                                          _T4CONbits 000F76  
                             _SendDefaultPIDValues 1824                                __end_of_WriteTimer0 23BE  
                              __end_of_WriteTimer1 23AC                                   ??_ReadCharEEPROM 00D2  
                                     ??_Delay1TCYx 00CE                                     OpenADC@config2 00CE  
                                   __pintcode_body 1568                                  _GetSensorReadings 22F4  
                             end_of_initialization 2226                                     main@sensor_sum 011F  
                                  FlushRxBuf@index 00CE                                 ?_GetSensorReadings 002B  
                            __end_of_LoadPIDValues 0D1E                               __end_of_SendLineMode 1DAA  
                                          int_func 1568                                main@battery_current 010F  
                                    ?i1_SetChanADC 002B                                       ??_OWWriteBit 00CE  
     CalculateSensorSum@sensor_readings_normalised 00D4                            ??_DisplaySensorStatuses 00D0  
                                 ??_ReadEchoLength 00D0                                        _Rx_complete 0017  
                                     ??_GetCommand 00CF                                ??_GetSensorReadings 00D1  
                               __end_of_OWReadByte 1E8E                                    ?_WriteIntEEPROM 00D1  
                                          postdec2 000FDD                                main@battery_voltage 0118  
                                          postinc0 000FEE                                            postinc1 000FE6  
                                          postinc2 000FDE                                     ??i1_ConvertADC 002B  
                                        _PID_error 00B8                        __end_of_ConfigureInterrupts 212E  
                               __end_of_Delay1TCYx 2434                                    FlushTxBuf@index 00CE  
                         __end_of_ConfigureBuggyIO 22DC                                     ?_SendThreshold 00D6  
                       __end_of_CalibrateThreshold 1332                                     GetCharRxBuf@ch 00D5  
                                        i1_ReadADC 2444                                          _PORTBbits 000F81  
                                        _PORTHbits 000F87                           __size_of_LoadCalibration 00BC  
                                   GetCharTxBuf@ch 0032                             _SendBattVoltageInitial 1962  
                                _SetForwardsMotorR 2518                               _SendCurrentPIDValues 188E  
                              __size_of_StopMotors 001E                              ?_SendDefaultPIDValues 00D6  
                                      _Tx_complete 001A                                          _TRISCbits 000F94  
                               ?_SetForwardsMotorR 002B                          __size_of_SetReverseMotorL 0004  
                                        _TRISGbits 000F98                                          _TRISHbits 000F99  
                                       main@D_temp 011A                                 __end_of_OWWriteBit 1DE4  
                        __end_of_GetSensorReadings 230A                                          i1___awmod 14E6  
                                       main@I_temp 011C                             main@wall_detected_flag 0117  
                                     ??_Read1USART 00CE                                 __end_of_GetCommand 24FA  
                                     ??_ConvertADC 00CE                                          _OWReadBit 2002  
                              ??_SetForwardsMotorR 00CE                                       ??_ReadEEPROM 00D0  
                                      _Write1USART 2336                                     ??i1_SetChanADC 002B  
                             __end_of_ResetMillis0 24B8                               __end_of_ResetMillis1 24AE  
                             __end_of_ResetMillis2 24E0                               __end_of_ResetMillis3 24A4  
                           i1SetADCChannel@channel 002D                                        _WriteEEPROM 1CEE  
                                     ??_FlushRxBuf 00CE                                       ??_FlushTxBuf 00CE  
            NormaliseSensorReadings@sensor_offsets 00D0                              SetDCMotorL@duty_cycle 00D4  
                                   __end_of_BusyTx 2414                                  _ConfigureWireless 2286  
                                     ??_ReadTimer1 0046                                          _FlashLEDS 20B6  
                                     ?_ReadMillis0 00CE                                       ?_ReadMillis1 00CE  
                                     ?_ReadMillis2 00CE                               _second_rollover_flag 0021  
                           __size_of_DisableMotors 0004                    __end_of_CalculateSensorStatuses 0B30  
                               ?_ConfigureWireless 002B                                     __end_of___wmul 1EC6  
                                     ?_SetDCMotorL 00D4                                       ?_SetDCMotorR 00D4  
                                     ??_Open1USART 00D0                              __size_of_SetPIDValues 0148  
                                      _WriteTimer0 23AC                                        _WriteTimer1 239A  
                        __end_of_SetForwardsMotorR 251C                                 __end_of_Read1USART 2154  
                                       ?i1_ReadADC 002B                                 __end_of_ConvertADC 2520  
                                     ?_ReadVoltage 00D1                              ?_SendCurrentPIDValues 00D6  
                            __end_of_SetADCChannel 0E0C                                       ??_SetChanADC 00CE  
                               __end_of_ReadEEPROM 20B6                            main@battery_voltage_ptr 0115  
                              ??_ConfigureWireless 00D1                                start_initialization 220E  
                         ?_NormaliseSensorReadings 00CE                           main@sensor_threshold_ptr 0129  
                                        _SetDCPWM4 1BE2                                          _SetDCPWM5 1C26  
                                       ?i1___awmod 002B                                 __end_of_FlushRxBuf 1F6A  
                               __end_of_FlushTxBuf 1F34                                    SetDCPWM4@DCycle 00D2  
                      __end_of_ConfigureUltrasound 2106                                    SetDCPWM5@DCycle 00D2  
                                     ??_SendStatus 00D6                                       ??_OpenTimer0 00CE  
                                     ??_OpenTimer1 00CE                                       ??_OpenTimer2 00CE  
                                       ?_OWReadBit 002B                                      _echo_acq_done 001C  
                               __end_of_ReadTimer1 23E2                                   OWReadByte@result 00CF  
                             __end_of_PutCharRxBuf 1CAC                               __end_of_PutCharTxBuf 1CEE  
                                      _SystemClock 0001                                   _sensor_acq_index 0023  
                               __end_of_Open1USART 14E6                              __end_of_BusySensorAcq 2424  
                             SetADCChannel@channel 00D0                              __end_of_ReadIntEEPROM 1AEA  
                        __end_of_ConfigureWireless 22A4                                           ??_BusyTx 00CE  
                             __size_of_OWWriteByte 002C                                       _SetPIDValues 08E2  
                               __end_of_SetChanADC 2286                                  __size_of_OpenPWM4 0026  
                                __size_of_OpenPWM5 0026                                           ??___wmul 00D2  
                                       ?_FlashLEDS 002B                        __end_of_SetDirectionForward 250E  
                                  ??_SendThreshold 00D8                                 i1___awmod@dividend 002B  
                                 __CFG_LPT1OSC$OFF 000000                               __size_of_GetDistance 0014  
                                     ?_SendOffsets 00D6                                          _Rx_buffer 0060  
                                  _WriteCharEEPROM 2388                          __size_of_EnableSensorLEDS 0006  
                               __end_of_SendStatus 1E1E                              __end_of_UltrasoundISR 2002  
                               __end_of_OpenTimer0 217A                                 __end_of_OpenTimer1 1F9E  
                               __end_of_OpenTimer2 220E                                       OWWriteByte@i 00D0  
                           ??_SendDefaultPIDValues 00DC                                          _Tx_buffer 0079  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00BE  
                                    __pcstackBANK1 0100                                         ?_SetDCPWM4 00CE  
                                       ?_SetDCPWM5 00CE                         __size_of_GetSensorReadings 0016  
                            __size_of_SendLineMode 003C                                  ??_LoadCalibration 00DF  
                                    _PID_set_point 00BA                                      _DisableMotors 2524  
                                     ?_SetUnipolar 002B                               __end_ofi1_ConvertADC 252C  
                     __size_of_MillisecondTimerISR 001E                                           ?_OWReset 002B  
                                ?_CommandAvailable 002B                           __size_of_BusyDistanceAcq 0010  
                            __end_of_SetDCMotorPID 128E                                       ??_StopMotors 00D6  
                               WriteIntEEPROM@data 00D3                                           ?_BusyADC 002B  
                                         ?_ReadADC 00CE                                          __pnvBANK0 00E6  
                     __size_of_GenerateCalibration 00B0                                 ??_CommandAvailable 00CE  
                                OpenADC@portconfig 00CF                                           ?_OpenADC 00CE  
                                   _sensor_offsets 009A                                          _echo_time 000B  
                                __CFG_CCP2MX$PORTC 000000                                          __pintcode 0008  
                                  main@command_msg 0121                                           ?_StartTx 002B  
                                         ?___awdiv 00CE                                          __ptext100 2434  
                                        __ptext102 0E0C                                          __ptext111 1FD0  
                                        __ptext103 2320                                          __ptext112 23BE  
                                        __ptext104 2444                                          __ptext113 23D0  
                                        __ptext105 2528                                          __ptext114 22A4  
                                        __ptext106 21C6                                          __ptext115 23E2  
                                        __ptext107 2336                                          __ptext108 1EC6  
                                        __ptext109 14E6                                           ?___awmod 00CE  
                                      OWReadByte@i 00D0                              _SendPIDSetPointOnLine 174E  
                                    ?_Delay10KTCYx 002B                        main@battery_current_acc_ptr 0106  
                                      __pintcodelo 0018                                    Open1USART@spbrg 00CE  
                       __size_of_SetForwardsMotorR 0004                             ??_SendCurrentPIDValues 00DC  
                            __end_ofi2_WriteTimer0 23F4                              __end_ofi2_WriteTimer1 23D0  
                  __end_of_NormaliseSensorReadings 1666                                        ??i1_ReadADC 002D  
                                 _sensor_threshold 00BC                                       _SendLineMode 1D6E  
                                ?_CalibrateOffsets 002B                              SendLineMode@line_mode 00D6  
                                WriteTimer0@timer0 00CE                               __end_ofi1_SetChanADC 2336  
                      __size_of_CalculateSensorSum 00F8                                  WriteTimer1@timer1 00CE  
                      ?_CalculateSensorSumDiscrete 00CE                                 i2WriteTimer0@timer 00BE  
                               __end_of_StopMotors 224A                           __size_of_CalibrateOnLine 0064  
                               i2WriteTimer1@timer 00BE                                 ??_CalibrateOffsets 00D7  
                                 _SetReverseMotorL 2514        CalibrateThreshold@sensor_threshold_temp_ptr 00D8  
                                      ??i1___awmod 002F                                     ?_DisableMotors 002B  
                                        _line_mode 002A                                     __size_of_isrHP 15E0  
                                   __size_of_isrLP 00D4                                    Write1USART@data 002B  
                            __size_of_ResetMillis0 000A                              __size_of_ResetMillis1 000A  
                            __size_of_ResetMillis2 000A                              __size_of_ResetMillis3 000A  
                                  OWReadBit@result 00CE                                        ??_OWReadBit 00CE  
                 __size_of_CalculateSensorStatuses 0106                                     ___wmul@product 00D2  
                                    OpenADC@config 00D2                                           _LATDbits 000F8C  
                                         _LATEbits 000F8D                                           _LATHbits 000F90  
                                 ??_WriteIntEEPROM 00D5                                           _IPR1bits 000F9F  
                                         _PIE1bits 000F9D                         __size_of_ConfigureWireless 001E  
                       DisplaySensorStatuses@index 00D2                        main@send_battery_stats_flag 0109  
                           SendDefaultPIDValues@Kd 00D8                             SendDefaultPIDValues@Ki 00DA  
                           SendDefaultPIDValues@Kp 00D6                                           _PIR1bits 000F9E  
                                         _DCmotorL 0007                                           _DCmotorR 0009  
                            __CFG_DATABW$DATA16BIT 000000                            __end_of_WriteCharEEPROM 239A  
                   __size_of_DisplaySensorStatuses 0054                                           _RCONbits 000FD0  
                         __size_of_ConfigureTimer0 0016                           __size_of_ConfigureTimer1 0018  
                         __size_of_ConfigureTimer2 0008                      __end_of_DisplaySensorStatuses 1B9C  
                                 __CFG_WDTPS$32768 000000                                     ??_Delay10KTCYx 00CE  
                            SetDCMotorR@duty_cycle 00D4                                        ??_FlashLEDS 00D0  
                          ?_SendBattVoltageInitial 00D6                               __size_of_ReadMillis0 000A  
                             __size_of_ReadMillis1 000A                               __size_of_ReadMillis2 000A  
                                __CFG_ECCPMX$PORTH 000000                                         _ADCON0bits 000FC2  
                                ?_ConfigureBuggyIO 002B                                  ___wmul@multiplier 00CE  
                             __size_of_SetDCMotorL 000E                               __size_of_SetDCMotorR 000E  
                                     _ResetMillis0 24AE                                       _ResetMillis1 24A4  
                                     _ResetMillis2 24D6                                       _ResetMillis3 249A  
                               ??_ConfigureBuggyIO 00CE                               __size_of_ReadVoltage 006A  
                     __size_of_SendStoredPIDValues 006A                                        ??_SetDCPWM4 00D0  
                                      ??_SetDCPWM5 00D0                                   Delay10KTCYx@unit 00CF  
                            __size_of_PutCharRxBuf 0042                              __size_of_PutCharTxBuf 0042  
                                      _INTCON2bits 000FF1                                      ?_GetCharRxBuf 002B  
                                      _INTCON3bits 000FF0                                      ?_GetCharTxBuf 002B  
                               _CalibrateThreshold 128E                           __size_ofi1_SetADCChannel 00EA  
                                 __size_of_OWReset 0038                                       ?_Write1USART 002B  
                                       _EECON1bits 000FA6                                           _OpenPWM4 21A0  
                                         _OpenPWM5 217A                                       ?_WriteEEPROM 00CE  
                              ?_CalibrateThreshold 002B                                   __size_of_BusyADC 000E  
                                 __size_of_ReadADC 0014                                           __Hrparam 0000  
                         ?_ResetAccumulatedCurrent 002B                            __size_of_WirelessTx_ISR 0026  
                                 __size_of_OpenADC 007C                                           __Lrparam 0000  
                    SendThreshold@sensor_threshold 00D6                                  ??_BusyDistanceAcq 00CE  
                           ?_SendPIDSetPointOnLine 00D6                     __end_of_SendBattVoltageInitial 19CA  
                                i1___awmod@divisor 002D                                        OWWriteBit@b 00CE  
                                i1___awmod@counter 002F                                   __size_of_StartTx 0008  
                                 __size_of___awdiv 00D0                                   __size_of___awmod 00B4  
                                     ?_WriteTimer0 00CE                                       ?_WriteTimer1 00CE  
                                 _EnableSensorLEDS 250E                                       _PutCharRxBuf 1C6A  
                                     _PutCharTxBuf 1CAC                               __size_of_SendOffsets 00A2  
                           __size_of_LoadPIDValues 00F6                                _system_clock_enable 0024  
                             ??_CalibrateThreshold 00D8                       __size_of_ConfigureInterrupts 0028  
                            __size_ofi1_ConvertADC 0004                                    ??_DisableMotors 00CE  
                                    ?_EnableMotors 002B                                 SetDCPWM4@dutycycle 00CE  
                                   OpenPWM4@period 00CE                                           __ptext10 2462  
                                         __ptext11 1C26                                           __ptext20 249A  
                                         __ptext12 16E2                                           __ptext21 24A4  
                                         __ptext13 17BA                                           __ptext30 24B8  
                                         __ptext22 24AE                                           __ptext14 174E  
                                         __ptext31 24C2                                           __ptext23 2032  
                                         __ptext15 1332                                           __ptext40 23F4  
                                         __ptext32 24CC                                           __ptext24 18F8  
                                         __ptext16 1D6E                                           __ptext41 208A  
                                         __ptext33 0C28                                           __ptext25 205E  
                                         __ptext17 1824                                           __ptext50 1B48  
                                         __ptext42 1136                                           __ptext34 08E2  
                                         __ptext26 1DAA                                           __ptext18 188E  
                                         __ptext51 0A2A                                           __ptext43 1F9E  
                                         __ptext35 1C6A                                           __ptext27 1E1E  
                                         __ptext19 1962                                           __ptext60 1CAC  
                                         __ptext52 2470                                           __ptext44 2388  
                                         __ptext36 1B9C                                           __ptext28 1E56  
                                         __ptext61 1082                                           __ptext53 19CA  
                                         __ptext45 1CEE                                           __ptext37 1A2E  
                                         __ptext29 2002                                           __ptext70 0D1E  
                                         __ptext62 2404                                           __ptext54 15E8  
                                         __ptext46 20B6                                           __ptext38 0FC6  
                                         __ptext71 2268                                           __ptext63 1AEA  
                                         __ptext55 0B30                                           __ptext47 224A  
                                         __ptext39 1A8C                                           __ptext80 1460  
                                         __ptext72 251C                                           __ptext64 24D6  
                                         __ptext56 1E8E                                           __ptext48 128E  
                                         __ptext81 1EFE                                           __ptext73 2414  
                                         __ptext65 24E0                                           __ptext57 13D4  
                                         __ptext49 234C                                           __ptext90 23AC  
                                         __ptext82 1F34                                           __ptext74 2360  
                                         __ptext66 24F2                                           __ptext58 1DE4  
                                         __ptext91 2154                                           __ptext83 20DE  
                                         __ptext75 2424                                           __ptext67 212E  
                                         __ptext59 24EA                                           __ptext92 248C  
                                         __ptext84 24FA                                           __ptext76 250E  
                                         __ptext68 247E                                           __ptext93 217A  
                                         __ptext85 21EC                                           __ptext77 2520  
                                         __ptext69 22F4                                           __ptext94 21A0  
                                         __ptext86 22DC                                           __ptext78 2524  
                                         __ptext95 2106                                           __ptext87 239A  
                                         __ptext79 2286                                           __ptext96 22C2  
                                         __ptext88 1F6A                                           __ptext97 2374  
                                         __ptext89 230A                                     OpenPWM5@period 00CE  
                                         __ptext98 1666                                           __ptext99 1D2E  
                                   ??_GetCharRxBuf 00D4                                     ??_GetCharTxBuf 0031  
                                ??_CalibrateOnLine 00DA                                 SetDCPWM5@dutycycle 00CE  
                             __size_of_SetUnipolar 0006                                      __size_of_main 07F2  
                                   Delay1TCYx@unit 00CE                   __size_of_NormaliseSensorReadings 007E  
                          __size_of_ReadCharEEPROM 0010                __size_of_CalculateSensorSumDiscrete 0040  
                                 ?_WriteCharEEPROM 00D1            CalibrateThreshold@sensor_threshold_temp 00DA  
                            __size_ofi1_SetChanADC 0016                                       i1_ConvertADC 2528  
                              _MillisecondTimerISR 22A4                                    _LoadCalibration 0FC6  
                                    _USART1_Status 001B                                  ??_ConfigureTimer0 00D2  
                                ??_ConfigureTimer1 00D2                                  ??_ConfigureTimer2 00CF  
                          __size_of_ReadEchoLength 000A                              __CFG_ADDRBW$ADDR20BIT 000000  
                     NormaliseSensorReadings@index 00D6                                _GenerateCalibration 1136  
                                       _INTCONbits 000FF2                                     ??_EnableMotors 00CE  
                                _Rx_chars_received 0016                                         _PB1pressed 1AEA  
                                       _PB2pressed 1A2E                                      OWReset@result 00CE  
                             __end_of_Delay10KTCYx 2268                               ?_MillisecondTimerISR 002B  
                                         intlevel1 0000                                           intlevel2 0000  
                          _CalculateSensorStatuses 0A2A                    __end_of_ResetAccumulatedCurrent 205E  
                                    ??_OWWriteByte 00CF                                      ?_ConfigureADC 002B  
                                    ?_ConfigurePWM 002B                                      _LoadPIDValues 0C28  
                             ?_GenerateCalibration 002B                                  SetChanADC@channel 00CF  
                                       _RCSTA1bits 000FAB                       __size_of_ConfigureUltrasound 0028  
                                  WriteEEPROM@data 00D0                                       i1_SetChanADC 2320  
                                    _Rx_msg_length 0018                             __size_of_SetADCChannel 00EE  
                            SendStatus@status_code 00D6                                  ??i1_SetADCChannel 002D  
                         __end_of_SetReverseMotorL 2518                                      ??_GetDistance 00CF  
                   SendPIDSetPointOnLine@set_point 00D6                              main@PID_set_point_ptr 0113  
                        __size_of_CommandAvailable 000E                      SendBattVoltageInitial@reading 00D6  
                            __end_of_SendThreshold 174E                                         _PID_output 0098  
                     __size_of_SetDirectionForward 0006                           SendOffsets@offsets_array 00D6  
                           __size_of_BusySensorAcq 0010                      __size_of_SendDefaultPIDValues 006A  
                           __size_of_ReadIntEEPROM 005E                              ??_MillisecondTimerISR 0046  
                                   ??_ConfigureADC 00D3                                     ??_ConfigurePWM 00CF  
                                   ?_LoadPIDValues 002B                                    OWWriteByte@byte 00CF  
                        __size_of_CalibrateOffsets 008C                              ??_GenerateCalibration 00DC  
                           __size_of_UltrasoundISR 0032                               __size_of_Write1USART 0016  
                                     _put_Rx_index 001F                                     _WirelessTx_ISR 21C6  
                              _SendStoredPIDValues 17BA                            __end_of_LoadCalibration 1082  
                                     _put_Tx_index 0020  
