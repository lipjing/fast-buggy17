

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 26 12:59:23 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	text88,global,reloc=2,class=CODE,delta=1
   102                           	psect	text89,global,reloc=2,class=CODE,delta=1
   103                           	psect	text90,global,reloc=2,class=CODE,delta=1
   104                           	psect	text91,global,reloc=2,class=CODE,delta=1
   105                           	psect	text92,global,reloc=2,class=CODE,delta=1
   106                           	psect	text93,global,reloc=2,class=CODE,delta=1
   107                           	psect	text94,global,reloc=2,class=CODE,delta=1
   108                           	psect	text95,global,reloc=2,class=CODE,delta=1
   109                           	psect	text96,global,reloc=2,class=CODE,delta=1
   110                           	psect	text97,global,reloc=2,class=CODE,delta=1
   111                           	psect	text98,global,reloc=2,class=CODE,delta=1
   112                           	psect	text99,global,reloc=2,class=CODE,delta=1
   113                           	psect	text100,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   115                           	psect	text102,global,reloc=2,class=CODE,delta=1
   116                           	psect	text103,global,reloc=2,class=CODE,delta=1
   117                           	psect	text104,global,reloc=2,class=CODE,delta=1
   118                           	psect	text105,global,reloc=2,class=CODE,delta=1
   119                           	psect	text106,global,reloc=2,class=CODE,delta=1
   120                           	psect	text107,global,reloc=2,class=CODE,delta=1
   121                           	psect	text108,global,reloc=2,class=CODE,delta=1
   122                           	psect	text109,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   125                           	psect	text111,global,reloc=2,class=CODE,delta=1
   126                           	psect	text112,global,reloc=2,class=CODE,delta=1
   127                           	psect	text113,global,reloc=2,class=CODE,delta=1
   128                           	psect	text114,global,reloc=2,class=CODE,delta=1
   129                           	psect	text115,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   132  0000                     
   133                           	psect	nvBANK0
   134  0000CF                     __pnvBANK0:
   135                           	opt stack 0
   136  0000CF                     _convert_cm:
   137                           	opt stack 0
   138  0000CF                     	ds	3
   139  0000D2                     _convert_in:
   140                           	opt stack 0
   141  0000D2                     	ds	3
   142  0000                     _ADCON0	set	4034
   143  0000                     _ADCON0bits	set	4034
   144  0000                     _ADCON1	set	4033
   145  0000                     _ADCON2	set	4032
   146  0000                     _ADRESH	set	4036
   147  0000                     _ADRESL	set	4035
   148  0000                     _CCP4CON	set	3955
   149  0000                     _CCP5CON	set	3952
   150  0000                     _CCPR4L	set	3956
   151  0000                     _CCPR5L	set	3953
   152  0000                     _EEADR	set	4009
   153  0000                     _EEADRH	set	4010
   154  0000                     _EECON1bits	set	4006
   155  0000                     _EECON2	set	4007
   156  0000                     _EEDATA	set	4008
   157  0000                     _INTCON2bits	set	4081
   158  0000                     _INTCON3bits	set	4080
   159  0000                     _INTCONbits	set	4082
   160  0000                     _IPR1bits	set	3999
   161  0000                     _LATDbits	set	3980
   162  0000                     _LATE	set	3981
   163  0000                     _LATEbits	set	3981
   164  0000                     _LATHbits	set	3984
   165  0000                     _LATJ	set	3985
   166  0000                     _PIE1bits	set	3997
   167  0000                     _PIR1bits	set	3998
   168  0000                     _PORTBbits	set	3969
   169  0000                     _PORTHbits	set	3975
   170  0000                     _PR2	set	4043
   171  0000                     _PR4	set	3959
   172  0000                     _RCONbits	set	4048
   173  0000                     _RCREG1	set	4014
   174  0000                     _RCSTA1	set	4011
   175  0000                     _RCSTA1bits	set	4011
   176  0000                     _SPBRG1	set	4015
   177  0000                     _SPBRGH1	set	3967
   178  0000                     _T0CON	set	4053
   179  0000                     _T0CONbits	set	4053
   180  0000                     _T1CON	set	4045
   181  0000                     _T1CONbits	set	4045
   182  0000                     _T2CON	set	4042
   183  0000                     _T2CONbits	set	4042
   184  0000                     _T3CONbits	set	4017
   185  0000                     _T4CONbits	set	3958
   186  0000                     _TMR0H	set	4055
   187  0000                     _TMR0L	set	4054
   188  0000                     _TMR1H	set	4047
   189  0000                     _TMR1L	set	4046
   190  0000                     _TMR2	set	4044
   191  0000                     _TRISA	set	3986
   192  0000                     _TRISB	set	3987
   193  0000                     _TRISC	set	3988
   194  0000                     _TRISCbits	set	3988
   195  0000                     _TRISD	set	3989
   196  0000                     _TRISE	set	3990
   197  0000                     _TRISG	set	3992
   198  0000                     _TRISGbits	set	3992
   199  0000                     _TRISHbits	set	3993
   200  0000                     _TRISJ	set	3994
   201  0000                     _TXREG1	set	4013
   202  0000                     _TXSTA1	set	4012
   203  0000                     _TXSTA1bits	set	4012
   204                           
   205                           ; #config settings
   206  0000                     
   207                           	psect	cinit
   208  002042                     __pcinit:
   209                           	opt stack 0
   210  002042                     start_initialization:
   211                           	opt stack 0
   212  002042                     __initialization:
   213                           	opt stack 0
   214                           
   215                           ; Clear objects allocated to BANK1 (25 bytes)
   216  002042  EE01  F02D         	lfsr	0,__pbssBANK1
   217  002046  0E19               	movlw	25
   218  002048                     clear_0:
   219  002048  6AEE               	clrf	postinc0,c
   220  00204A  06E8               	decf	wreg,f,c
   221  00204C  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK0 (71 bytes)
   224  00204E  EE00  F060         	lfsr	0,__pbssBANK0
   225  002052  0E47               	movlw	71
   226  002054                     clear_1:
   227  002054  6AEE               	clrf	postinc0,c
   228  002056  06E8               	decf	wreg,f,c
   229  002058  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to COMRAM (42 bytes)
   232  00205A  EE00  F001         	lfsr	0,__pbssCOMRAM
   233  00205E  0E2A               	movlw	42
   234  002060                     clear_2:
   235  002060  6AEE               	clrf	postinc0,c
   236  002062  06E8               	decf	wreg,f,c
   237  002064  E1FD               	bnz	clear_2
   238  002066                     end_of_initialization:
   239                           	opt stack 0
   240  002066                     __end_of__initialization:
   241                           	opt stack 0
   242  002066  0100               	movlb	0
   243  002068  EF78  F000         	goto	_main	;jump to C main() function
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	bssCOMRAM
   248  000001                     __pbssCOMRAM:
   249                           	opt stack 0
   250  000001                     _SystemClock:
   251                           	opt stack 0
   252  000001                     	ds	6
   253  000007                     _DCmotorL:
   254                           	opt stack 0
   255  000007                     	ds	2
   256  000009                     _DCmotorR:
   257                           	opt stack 0
   258  000009                     	ds	2
   259  00000B                     _echo_time:
   260                           	opt stack 0
   261  00000B                     	ds	2
   262  00000D                     _millisecond_COUNT0:
   263                           	opt stack 0
   264  00000D                     	ds	2
   265  00000F                     _millisecond_COUNT1:
   266                           	opt stack 0
   267  00000F                     	ds	2
   268  000011                     _millisecond_COUNT2:
   269                           	opt stack 0
   270  000011                     	ds	2
   271  000013                     _millisecond_COUNT3:
   272                           	opt stack 0
   273  000013                     	ds	2
   274  000015                     _RxCharacter:
   275                           	opt stack 0
   276  000015                     	ds	1
   277  000016                     _Rx_chars_received:
   278                           	opt stack 0
   279  000016                     	ds	1
   280  000017                     _Rx_complete:
   281                           	opt stack 0
   282  000017                     	ds	1
   283  000018                     _Rx_msg_length:
   284                           	opt stack 0
   285  000018                     	ds	1
   286  000019                     _TxCharacter:
   287                           	opt stack 0
   288  000019                     	ds	1
   289  00001A                     _Tx_complete:
   290                           	opt stack 0
   291  00001A                     	ds	1
   292  00001B                     _USART1_Status:
   293                           	opt stack 0
   294  00001B                     	ds	1
   295  00001C                     _echo_acq_done:
   296                           	opt stack 0
   297  00001C                     	ds	1
   298  00001D                     _get_Rx_index:
   299                           	opt stack 0
   300  00001D                     	ds	1
   301  00001E                     _get_Tx_index:
   302                           	opt stack 0
   303  00001E                     	ds	1
   304  00001F                     _put_Rx_index:
   305                           	opt stack 0
   306  00001F                     	ds	1
   307  000020                     _put_Tx_index:
   308                           	opt stack 0
   309  000020                     	ds	1
   310  000021                     _second_rollover_flag:
   311                           	opt stack 0
   312  000021                     	ds	1
   313  000022                     _sensor_acq_done:
   314                           	opt stack 0
   315  000022                     	ds	1
   316  000023                     _sensor_acq_index:
   317                           	opt stack 0
   318  000023                     	ds	1
   319  000024                     _system_clock_enable:
   320                           	opt stack 0
   321  000024                     	ds	1
   322  000025                     _sensor_statuses:
   323                           	opt stack 0
   324  000025                     	ds	5
   325  00002A                     _line_mode:
   326                           	opt stack 0
   327  00002A                     	ds	1
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           
   331                           	psect	bssBANK0
   332  000060                     __pbssBANK0:
   333                           	opt stack 0
   334  000060                     _Tx_buffer:
   335                           	opt stack 0
   336  000060                     	ds	25
   337  000079                     _PID_Kd:
   338                           	opt stack 0
   339  000079                     	ds	2
   340  00007B                     _PID_Ki:
   341                           	opt stack 0
   342  00007B                     	ds	2
   343  00007D                     _PID_Kp:
   344                           	opt stack 0
   345  00007D                     	ds	2
   346  00007F                     _PID_output:
   347                           	opt stack 0
   348  00007F                     	ds	2
   349  000081                     _sensor_offsets:
   350                           	opt stack 0
   351  000081                     	ds	10
   352  00008B                     _sensor_readings_normalised:
   353                           	opt stack 0
   354  00008B                     	ds	10
   355  000095                     _sensor_readings_raw:
   356                           	opt stack 0
   357  000095                     	ds	10
   358  00009F                     _PID_error:
   359                           	opt stack 0
   360  00009F                     	ds	2
   361  0000A1                     _PID_set_point:
   362                           	opt stack 0
   363  0000A1                     	ds	2
   364  0000A3                     _off_line_sum:
   365                           	opt stack 0
   366  0000A3                     	ds	2
   367  0000A5                     _sensor_threshold:
   368                           	opt stack 0
   369  0000A5                     	ds	2
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           	psect	bssBANK1
   374  00012D                     __pbssBANK1:
   375                           	opt stack 0
   376  00012D                     _Rx_buffer:
   377                           	opt stack 0
   378  00012D                     	ds	25
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           
   382                           	psect	cstackBANK1
   383  000100                     __pcstackBANK1:
   384                           	opt stack 0
   385  000100                     main@sensor_sum_ptr:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x0
   389  000100                     	ds	2
   390  000102                     main@PID_error_ptr:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x2
   394  000102                     	ds	2
   395  000104                     main@battery_current_ptr:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x4
   399  000104                     	ds	2
   400  000106                     main@battery_current_acc_ptr:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x6
   404  000106                     	ds	2
   405  000108                     main@line_end_flag:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x8
   409  000108                     	ds	1
   410  000109                     main@send_battery_stats_flag:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x9
   414  000109                     	ds	1
   415  00010A                     main@find_line_flag:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xA
   419  00010A                     	ds	1
   420  00010B                     main@battery_current_acc:
   421                           	opt stack 0
   422                           
   423                           ; 4 bytes @ 0xB
   424  00010B                     	ds	4
   425  00010F                     main@battery_current:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0xF
   429  00010F                     	ds	2
   430  000111                     main@line_mode_ptr:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x11
   434  000111                     	ds	2
   435  000113                     main@PID_set_point_ptr:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x13
   439  000113                     	ds	2
   440  000115                     main@off_line_sum_ptr:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x15
   444  000115                     	ds	2
   445  000117                     main@battery_voltage_ptr:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x17
   449  000117                     	ds	2
   450  000119                     main@wall_detected_flag:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x19
   454  000119                     	ds	1
   455  00011A                     main@battery_voltage:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1A
   459  00011A                     	ds	2
   460  00011C                     main@D_temp:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1C
   464  00011C                     	ds	2
   465  00011E                     main@I_temp:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x1E
   469  00011E                     	ds	2
   470  000120                     main@stop_flag:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x20
   474  000120                     	ds	1
   475  000121                     main@sensor_sum:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x21
   479  000121                     	ds	2
   480  000123                     main@command_msg:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x23
   484  000123                     	ds	1
   485  000124                     main@Kp_stored:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x24
   489  000124                     	ds	2
   490  000126                     main@Kd_stored:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x26
   494  000126                     	ds	2
   495  000128                     main@Ki_stored:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x28
   499  000128                     	ds	2
   500  00012A                     main@sensor_threshold_ptr:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x2A
   504  00012A                     	ds	2
   505  00012C                     main@sensor_sum_discrete:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x2C
   509  00012C                     	ds	1
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	cstackBANK0
   514  0000A7                     __pcstackBANK0:
   515                           	opt stack 0
   516  0000A7                     ReadTimer1@timer:
   517                           	opt stack 0
   518  0000A7                     i2WriteTimer0@timer:
   519                           	opt stack 0
   520  0000A7                     i2WriteTimer1@timer:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x0
   524  0000A7                     	ds	2
   525  0000A9                     ??_isrHP:
   526                           
   527                           ; 0 bytes @ 0x2
   528  0000A9                     	ds	14
   529  0000B7                     ??_SetChanADC:
   530  0000B7                     ??_Delay10KTCYx:
   531  0000B7                     ?_ReadADC:
   532                           	opt stack 0
   533  0000B7                     ?_ReadEchoLength:
   534                           	opt stack 0
   535  0000B7                     ?_ReadMillis0:
   536                           	opt stack 0
   537  0000B7                     ?_ReadMillis1:
   538                           	opt stack 0
   539  0000B7                     ?_ReadMillis2:
   540                           	opt stack 0
   541  0000B7                     ?___wmul:
   542                           	opt stack 0
   543  0000B7                     ?___awdiv:
   544                           	opt stack 0
   545  0000B7                     ?___awmod:
   546                           	opt stack 0
   547  0000B7                     FlushTxBuf@index:
   548                           	opt stack 0
   549  0000B7                     FlushRxBuf@index:
   550                           	opt stack 0
   551  0000B7                     OWReset@result:
   552                           	opt stack 0
   553  0000B7                     OWWriteBit@b:
   554                           	opt stack 0
   555  0000B7                     OWReadBit@result:
   556                           	opt stack 0
   557  0000B7                     OpenADC@config2:
   558                           	opt stack 0
   559  0000B7                     OpenPWM4@period:
   560                           	opt stack 0
   561  0000B7                     OpenPWM5@period:
   562                           	opt stack 0
   563  0000B7                     OpenTimer0@config:
   564                           	opt stack 0
   565  0000B7                     OpenTimer1@config:
   566                           	opt stack 0
   567  0000B7                     OpenTimer2@config:
   568                           	opt stack 0
   569  0000B7                     Read1USART@data:
   570                           	opt stack 0
   571  0000B7                     Delay1TCYx@unit:
   572                           	opt stack 0
   573  0000B7                     WriteEEPROM@address:
   574                           	opt stack 0
   575  0000B7                     ReadEEPROM@address:
   576                           	opt stack 0
   577  0000B7                     NormaliseSensorReadings@sensor_readings_raw:
   578                           	opt stack 0
   579  0000B7                     CalculateSensorStatuses@sensor_readings_normalised:
   580                           	opt stack 0
   581  0000B7                     CalculateSensorSumDiscrete@sensor_statuses:
   582                           	opt stack 0
   583  0000B7                     DisplaySensorStatuses@sensor_statuses:
   584                           	opt stack 0
   585  0000B7                     SetDCPWM4@dutycycle:
   586                           	opt stack 0
   587  0000B7                     SetDCPWM5@dutycycle:
   588                           	opt stack 0
   589  0000B7                     WriteTimer0@timer0:
   590                           	opt stack 0
   591  0000B7                     WriteTimer1@timer1:
   592                           	opt stack 0
   593  0000B7                     Open1USART@spbrg:
   594                           	opt stack 0
   595  0000B7                     ___wmul@multiplier:
   596                           	opt stack 0
   597  0000B7                     ___awdiv@dividend:
   598                           	opt stack 0
   599  0000B7                     ___awmod@dividend:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x10
   603  0000B7                     	ds	1
   604  0000B8                     OWWriteByte@byte:
   605                           	opt stack 0
   606  0000B8                     OWReadByte@result:
   607                           	opt stack 0
   608  0000B8                     OpenADC@portconfig:
   609                           	opt stack 0
   610  0000B8                     SetChanADC@channel:
   611                           	opt stack 0
   612  0000B8                     Delay10KTCYx@unit:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x11
   616  0000B8                     	ds	1
   617  0000B9                     ??_SetDCPWM5:
   618  0000B9                     ??_SetDCPWM4:
   619  0000B9                     ??_OpenADC:
   620  0000B9                     ??_ReadADC:
   621  0000B9                     ??_DisplaySensorStatuses:
   622  0000B9                     ?_ReadIntEEPROM:
   623                           	opt stack 0
   624  0000B9                     WriteEEPROM@data:
   625                           	opt stack 0
   626  0000B9                     OWWriteByte@i:
   627                           	opt stack 0
   628  0000B9                     OWReadByte@i:
   629                           	opt stack 0
   630  0000B9                     SetADCChannel@channel:
   631                           	opt stack 0
   632  0000B9                     CalculateSensorSumDiscrete@sum:
   633                           	opt stack 0
   634  0000B9                     Open1USART@config:
   635                           	opt stack 0
   636  0000B9                     ReadIntEEPROM@address:
   637                           	opt stack 0
   638  0000B9                     ReadCharEEPROM@address:
   639                           	opt stack 0
   640  0000B9                     NormaliseSensorReadings@sensor_offsets:
   641                           	opt stack 0
   642  0000B9                     CalculateSensorStatuses@sensor_threshold:
   643                           	opt stack 0
   644  0000B9                     WriteTimer0@timer:
   645                           	opt stack 0
   646  0000B9                     WriteTimer1@timer:
   647                           	opt stack 0
   648  0000B9                     ___wmul@multiplicand:
   649                           	opt stack 0
   650  0000B9                     ___awdiv@divisor:
   651                           	opt stack 0
   652  0000B9                     ___awmod@divisor:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x12
   656  0000B9                     	ds	1
   657  0000BA                     ?_ReadVoltage:
   658                           	opt stack 0
   659  0000BA                     CalculateSensorSumDiscrete@index:
   660                           	opt stack 0
   661  0000BA                     WriteIntEEPROM@address:
   662                           	opt stack 0
   663  0000BA                     WriteCharEEPROM@address:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x13
   667  0000BA                     	ds	1
   668  0000BB                     ??_ReadIntEEPROM:
   669  0000BB                     ??_NormaliseSensorReadings:
   670  0000BB                     ??_CalculateSensorStatuses:
   671  0000BB                     DisplaySensorStatuses@index:
   672                           	opt stack 0
   673  0000BB                     OpenADC@config:
   674                           	opt stack 0
   675  0000BB                     ___awdiv@counter:
   676                           	opt stack 0
   677  0000BB                     ___awmod@counter:
   678                           	opt stack 0
   679  0000BB                     SetDCPWM4@DCycle:
   680                           	opt stack 0
   681  0000BB                     SetDCPWM5@DCycle:
   682                           	opt stack 0
   683  0000BB                     ___wmul@product:
   684                           	opt stack 0
   685  0000BB                     ConfigureUltrasound@echo_to_cm:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x14
   689  0000BB                     	ds	1
   690  0000BC                     ??_ReadVoltage:
   691  0000BC                     WriteCharEEPROM@data:
   692                           	opt stack 0
   693  0000BC                     ___awdiv@sign:
   694                           	opt stack 0
   695  0000BC                     ___awmod@sign:
   696                           	opt stack 0
   697  0000BC                     WriteIntEEPROM@data:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x15
   701  0000BC                     	ds	1
   702  0000BD                     ??_PutCharTxBuf:
   703  0000BD                     ??_PutCharRxBuf:
   704  0000BD                     ??_GetCharRxBuf:
   705  0000BD                     ?_CalculateSensorSum:
   706                           	opt stack 0
   707  0000BD                     SetDCMotorL@duty_cycle:
   708                           	opt stack 0
   709  0000BD                     SetDCMotorR@duty_cycle:
   710                           	opt stack 0
   711  0000BD                     CalculateSensorSum@sensor_readings_normalised:
   712                           	opt stack 0
   713  0000BD                     ___awdiv@quotient:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x16
   717  0000BD                     	ds	1
   718  0000BE                     PutCharTxBuf@ch:
   719                           	opt stack 0
   720  0000BE                     PutCharRxBuf@ch:
   721                           	opt stack 0
   722  0000BE                     GetCharRxBuf@ch:
   723                           	opt stack 0
   724  0000BE                     ReadIntEEPROM@data:
   725                           	opt stack 0
   726  0000BE                     ConfigureUltrasound@echo_to_in:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x17
   730  0000BE                     	ds	1
   731  0000BF                     ??_CalculateSensorSum:
   732  0000BF                     SendStatus@status_code:
   733                           	opt stack 0
   734  0000BF                     NormaliseSensorReadings@index:
   735                           	opt stack 0
   736  0000BF                     SetDCMotorPID@PIDoutput:
   737                           	opt stack 0
   738  0000BF                     SendLineMode@line_mode:
   739                           	opt stack 0
   740  0000BF                     SendOffsets@offsets_array:
   741                           	opt stack 0
   742  0000BF                     SendDefaultPIDValues@Kp:
   743                           	opt stack 0
   744  0000BF                     SendStoredPIDValues@Kp:
   745                           	opt stack 0
   746  0000BF                     SendCurrentPIDValues@Kp:
   747                           	opt stack 0
   748  0000BF                     SendBattVoltageInitial@reading:
   749                           	opt stack 0
   750  0000BF                     SendPIDSetPointOnLine@set_point:
   751                           	opt stack 0
   752  0000BF                     SendPIDSetPointOffLine@set_point:
   753                           	opt stack 0
   754  0000BF                     ReadVoltage@result:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x18
   758  0000BF                     	ds	1
   759  0000C0                     ??_CalibrateOffsets:
   760  0000C0                     ??_SetPIDValues:
   761  0000C0                     CalculateSensorStatuses@index:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x19
   765  0000C0                     	ds	1
   766  0000C1                     ??_SetDCMotorPID:
   767  0000C1                     ??_SendOffsets:
   768  0000C1                     ??_SendBattVoltageInitial:
   769  0000C1                     ??_SendPIDSetPointOnLine:
   770  0000C1                     ??_SendPIDSetPointOffLine:
   771  0000C1                     SendDefaultPIDValues@Kd:
   772                           	opt stack 0
   773  0000C1                     SendStoredPIDValues@Kd:
   774                           	opt stack 0
   775  0000C1                     SendCurrentPIDValues@Kd:
   776                           	opt stack 0
   777  0000C1                     CalculateSensorSum@sum:
   778                           	opt stack 0
   779  0000C1                     CalibrateThreshold@sensor_threshold_temp_ptr:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x1A
   783  0000C1                     	ds	1
   784  0000C2                     CalibrateOffsets@index:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x1B
   788  0000C2                     	ds	1
   789  0000C3                     SendOffsets@index:
   790                           	opt stack 0
   791  0000C3                     SetPIDValues@char_index:
   792                           	opt stack 0
   793  0000C3                     SendDefaultPIDValues@Ki:
   794                           	opt stack 0
   795  0000C3                     SendStoredPIDValues@Ki:
   796                           	opt stack 0
   797  0000C3                     SendCurrentPIDValues@Ki:
   798                           	opt stack 0
   799  0000C3                     CalibrateThreshold@sensor_threshold_temp:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x1C
   803  0000C3                     	ds	1
   804  0000C4                     
   805                           ; 0 bytes @ 0x1D
   806  0000C4                     	ds	1
   807  0000C5                     ??_GenerateCalibration:
   808                           
   809                           ; 0 bytes @ 0x1E
   810  0000C5                     	ds	2
   811  0000C7                     GenerateCalibration@index:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x20
   815  0000C7                     	ds	1
   816  0000C8                     ??_LoadCalibration:
   817                           
   818                           ; 0 bytes @ 0x21
   819  0000C8                     	ds	2
   820  0000CA                     LoadCalibration@index:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x23
   824  0000CA                     	ds	1
   825  0000CB                     ??_main:
   826                           
   827                           ; 0 bytes @ 0x24
   828  0000CB                     	ds	4
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           
   832                           	psect	cstackCOMRAM
   833  00002B                     __pcstackCOMRAM:
   834                           	opt stack 0
   835  00002B                     ??i1_SetChanADC:
   836  00002B                     ?i1_ReadADC:
   837                           	opt stack 0
   838  00002B                     ?i1___awmod:
   839                           	opt stack 0
   840  00002B                     Write1USART@data:
   841                           	opt stack 0
   842  00002B                     i1___awmod@dividend:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x0
   846  00002B                     	ds	1
   847  00002C                     i1SetChanADC@channel:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x1
   851  00002C                     	ds	1
   852  00002D                     ??i1_ReadADC:
   853  00002D                     i1SetADCChannel@channel:
   854                           	opt stack 0
   855  00002D                     i1___awmod@divisor:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x2
   859  00002D                     	ds	2
   860  00002F                     i1___awmod@counter:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x4
   864  00002F                     	ds	1
   865  000030                     i1___awmod@sign:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x5
   869  000030                     	ds	1
   870  000031                     ??_GetCharTxBuf:
   871                           
   872                           ; 0 bytes @ 0x6
   873  000031                     	ds	1
   874  000032                     GetCharTxBuf@ch:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x7
   878  000032                     	ds	1
   879  000033                     ??_isrLP:
   880                           
   881                           ; 0 bytes @ 0x8
   882  000033                     	ds	17
   883  000044                     ?_ReadTimer1:
   884                           	opt stack 0
   885  000044                     i2WriteTimer0@timer0:
   886                           	opt stack 0
   887  000044                     i2WriteTimer1@timer1:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x19
   891  000044                     	ds	2
   892  000046                     postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           
   895                           ; 0 bytes @ 0x1B
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 682 in file "FastBuggy17_Main_Code_TUNING.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  battery_curr    4   11[BANK1 ] unsigned long 
   906 ;;  sensor_thres    2   42[BANK1 ] PTR int 
   907 ;;		 -> sensor_threshold(2), 
   908 ;;  Ki_stored       2   40[BANK1 ] int 
   909 ;;  Kd_stored       2   38[BANK1 ] int 
   910 ;;  Kp_stored       2   36[BANK1 ] int 
   911 ;;  sensor_sum      2   33[BANK1 ] int 
   912 ;;  I_temp          2   30[BANK1 ] int 
   913 ;;  D_temp          2   28[BANK1 ] int 
   914 ;;  battery_volt    2   26[BANK1 ] unsigned int 
   915 ;;  battery_volt    2   23[BANK1 ] PTR unsigned int 
   916 ;;		 -> main@battery_voltage(2), 
   917 ;;  off_line_sum    2   21[BANK1 ] PTR int 
   918 ;;		 -> off_line_sum(2), 
   919 ;;  PID_set_poin    2   19[BANK1 ] PTR int 
   920 ;;		 -> PID_set_point(2), 
   921 ;;  line_mode_pt    2   17[BANK1 ] PTR unsigned char 
   922 ;;		 -> line_mode(1), 
   923 ;;  battery_curr    2   15[BANK1 ] unsigned int 
   924 ;;  battery_curr    2    6[BANK1 ] PTR unsigned long 
   925 ;;		 -> main@battery_current_acc(4), 
   926 ;;  battery_curr    2    4[BANK1 ] PTR unsigned int 
   927 ;;		 -> main@battery_current(2), 
   928 ;;  PID_error_pt    2    2[BANK1 ] PTR int 
   929 ;;		 -> PID_error(2), 
   930 ;;  sensor_sum_p    2    0[BANK1 ] PTR int 
   931 ;;		 -> main@sensor_sum(2), 
   932 ;;  I_min           2    0        int 
   933 ;;  I_max           2    0        int 
   934 ;;  echo_length     2    0        unsigned int 
   935 ;;  sensor_sum_d    1   44[BANK1 ] unsigned char 
   936 ;;  command_msg     1   35[BANK1 ] unsigned char 
   937 ;;  stop_flag       1   32[BANK1 ] unsigned char 
   938 ;;  wall_detecte    1   25[BANK1 ] unsigned char 
   939 ;;  find_line_fl    1   10[BANK1 ] unsigned char 
   940 ;;  send_battery    1    9[BANK1 ] unsigned char 
   941 ;;  line_end_fla    1    8[BANK1 ] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         0       4      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:       49 bytes
   956 ;; Hardware stack levels required when called:   13
   957 ;; This function calls:
   958 ;;		_BusyDistanceAcq
   959 ;;		_BusySensorAcq
   960 ;;		_CalculateSensorStatuses
   961 ;;		_CalculateSensorSum
   962 ;;		_CalculateSensorSumDiscrete
   963 ;;		_CommandAvailable
   964 ;;		_ConfigureADC
   965 ;;		_ConfigureBuggyIO
   966 ;;		_ConfigureInterrupts
   967 ;;		_ConfigurePWM
   968 ;;		_ConfigureTimer0
   969 ;;		_ConfigureTimer1
   970 ;;		_ConfigureTimer2
   971 ;;		_ConfigureUltrasound
   972 ;;		_ConfigureWireless
   973 ;;		_Delay10KTCYx
   974 ;;		_DisableMotors
   975 ;;		_DisplaySensorStatuses
   976 ;;		_EnableMotors
   977 ;;		_EnableSensorLEDS
   978 ;;		_FlashLEDS
   979 ;;		_GenerateCalibration
   980 ;;		_GetCommand
   981 ;;		_GetDistance
   982 ;;		_GetSensorReadings
   983 ;;		_LoadCalibration
   984 ;;		_LoadPIDValues
   985 ;;		_NormaliseSensorReadings
   986 ;;		_PB1pressed
   987 ;;		_PB2pressed
   988 ;;		_ReadEchoLength
   989 ;;		_ReadIntEEPROM
   990 ;;		_ReadMillis0
   991 ;;		_ReadMillis1
   992 ;;		_ReadMillis2
   993 ;;		_ReadVoltage
   994 ;;		_ResetAccumulatedCurrent
   995 ;;		_ResetMillis0
   996 ;;		_ResetMillis1
   997 ;;		_ResetMillis2
   998 ;;		_ResetMillis3
   999 ;;		_SendBattVoltageInitial
  1000 ;;		_SendCurrentPIDValues
  1001 ;;		_SendDefaultPIDValues
  1002 ;;		_SendLineMode
  1003 ;;		_SendOffsets
  1004 ;;		_SendPIDSetPointOffLine
  1005 ;;		_SendPIDSetPointOnLine
  1006 ;;		_SendStatus
  1007 ;;		_SendStoredPIDValues
  1008 ;;		_SetDCMotorL
  1009 ;;		_SetDCMotorPID
  1010 ;;		_SetDCMotorR
  1011 ;;		_SetDirectionForward
  1012 ;;		_SetForwardsMotorR
  1013 ;;		_SetPIDValues
  1014 ;;		_SetReverseMotorL
  1015 ;;		_SetUnipolar
  1016 ;;		_StopMotors
  1017 ;;		___awdiv
  1018 ;;		___wmul
  1019 ;; This function is called by:
  1020 ;;		Startup code after reset
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text0
  1025  0000F0                     __ptext0:
  1026                           	opt stack 0
  1027  0000F0                     _main:
  1028                           	opt stack 18
  1029                           
  1030                           ;FastBuggy17_Main_Code_TUNING.c: 685: unsigned char stop_flag, find_line_flag, line_end_
      +                          flag, wall_detected_flag, send_battery_stats_flag, command_msg, sensor_sum_discrete;
  1031                           ;FastBuggy17_Main_Code_TUNING.c: 686: unsigned int echo_length, battery_voltage, battery
      +                          _current;
  1032                           ;FastBuggy17_Main_Code_TUNING.c: 687: unsigned long int battery_current_acc;
  1033                           ;FastBuggy17_Main_Code_TUNING.c: 688: int sensor_sum, D_temp, I_temp, I_max, I_min, Kp_s
      +                          tored, Kd_stored, Ki_stored;
  1034                           ;FastBuggy17_Main_Code_TUNING.c: 691: unsigned char *line_mode_ptr;
  1035                           
  1036                           ;incstack = 0
  1037  0000F0  0E2A               	movlw	low _line_mode
  1038  0000F2  0101               	movlb	1	; () banked
  1039  0000F4  6F11               	movwf	main@line_mode_ptr& (0+255),b
  1040  0000F6  0E00               	movlw	high _line_mode
  1041  0000F8  0101               	movlb	1	; () banked
  1042  0000FA  6F12               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1043                           
  1044                           ;FastBuggy17_Main_Code_TUNING.c: 695: sensor_threshold_ptr = &sensor_threshold;
  1045  0000FC  0EA5               	movlw	low _sensor_threshold
  1046  0000FE  0101               	movlb	1	; () banked
  1047  000100  6F2A               	movwf	main@sensor_threshold_ptr& (0+255),b
  1048  000102  0E00               	movlw	high _sensor_threshold
  1049  000104  0101               	movlb	1	; () banked
  1050  000106  6F2B               	movwf	(main@sensor_threshold_ptr+1)& (0+255),b
  1051                           
  1052                           ;FastBuggy17_Main_Code_TUNING.c: 696: sensor_sum_ptr = &sensor_sum;
  1053  000108  0E21               	movlw	low main@sensor_sum
  1054  00010A  0101               	movlb	1	; () banked
  1055  00010C  6F00               	movwf	main@sensor_sum_ptr& (0+255),b
  1056  00010E  0E01               	movlw	high main@sensor_sum
  1057  000110  0101               	movlb	1	; () banked
  1058  000112  6F01               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1059                           
  1060                           ;FastBuggy17_Main_Code_TUNING.c: 697: PID_error_ptr = &PID_error;
  1061  000114  0E9F               	movlw	low _PID_error
  1062  000116  0101               	movlb	1	; () banked
  1063  000118  6F02               	movwf	main@PID_error_ptr& (0+255),b
  1064  00011A  0E00               	movlw	high _PID_error
  1065  00011C  0101               	movlb	1	; () banked
  1066  00011E  6F03               	movwf	(main@PID_error_ptr+1)& (0+255),b
  1067                           
  1068                           ;FastBuggy17_Main_Code_TUNING.c: 698: PID_set_point_ptr = &PID_set_point;
  1069  000120  0EA1               	movlw	low _PID_set_point
  1070  000122  0101               	movlb	1	; () banked
  1071  000124  6F13               	movwf	main@PID_set_point_ptr& (0+255),b
  1072  000126  0E00               	movlw	high _PID_set_point
  1073  000128  0101               	movlb	1	; () banked
  1074  00012A  6F14               	movwf	(main@PID_set_point_ptr+1)& (0+255),b
  1075                           
  1076                           ;FastBuggy17_Main_Code_TUNING.c: 699: off_line_sum_ptr = &off_line_sum;
  1077  00012C  0EA3               	movlw	low _off_line_sum
  1078  00012E  0101               	movlb	1	; () banked
  1079  000130  6F15               	movwf	main@off_line_sum_ptr& (0+255),b
  1080  000132  0E00               	movlw	high _off_line_sum
  1081  000134  0101               	movlb	1	; () banked
  1082  000136  6F16               	movwf	(main@off_line_sum_ptr+1)& (0+255),b
  1083                           
  1084                           ;FastBuggy17_Main_Code_TUNING.c: 702: unsigned int *battery_voltage_ptr, *battery_curren
      +                          t_ptr;
  1085                           ;FastBuggy17_Main_Code_TUNING.c: 703: unsigned long int *battery_current_acc_ptr;
  1086                           ;FastBuggy17_Main_Code_TUNING.c: 705: battery_voltage_ptr = &battery_voltage;
  1087  000138  0E1A               	movlw	low main@battery_voltage
  1088  00013A  0101               	movlb	1	; () banked
  1089  00013C  6F17               	movwf	main@battery_voltage_ptr& (0+255),b
  1090  00013E  0E01               	movlw	high main@battery_voltage
  1091  000140  0101               	movlb	1	; () banked
  1092  000142  6F18               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1093                           
  1094                           ;FastBuggy17_Main_Code_TUNING.c: 706: battery_current_ptr = &battery_current;
  1095  000144  0E0F               	movlw	low main@battery_current
  1096  000146  0101               	movlb	1	; () banked
  1097  000148  6F04               	movwf	main@battery_current_ptr& (0+255),b
  1098  00014A  0E01               	movlw	high main@battery_current
  1099  00014C  0101               	movlb	1	; () banked
  1100  00014E  6F05               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1101                           
  1102                           ;FastBuggy17_Main_Code_TUNING.c: 707: battery_current_acc_ptr = &battery_current_acc;
  1103  000150  0E0B               	movlw	low main@battery_current_acc
  1104  000152  0101               	movlb	1	; () banked
  1105  000154  6F06               	movwf	main@battery_current_acc_ptr& (0+255),b
  1106  000156  0E01               	movlw	high main@battery_current_acc
  1107  000158  0101               	movlb	1	; () banked
  1108  00015A  6F07               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1109                           
  1110                           ; BSR set to: 1
  1111                           ;FastBuggy17_Main_Code_TUNING.c: 709: ConfigureUltrasound(0.0137, 0.054);
  1112  00015C  0E76               	movlw	118
  1113  00015E  0100               	movlb	0	; () banked
  1114  000160  6FBB               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1115  000162  0E60               	movlw	96
  1116  000164  0100               	movlb	0	; () banked
  1117  000166  6FBC               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1118  000168  0E3C               	movlw	60
  1119  00016A  0100               	movlb	0	; () banked
  1120  00016C  6FBD               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1121  00016E  0E2F               	movlw	47
  1122  000170  0100               	movlb	0	; () banked
  1123  000172  6FBE               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1124  000174  0E5D               	movlw	93
  1125  000176  0100               	movlb	0	; () banked
  1126  000178  6FBF               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1127  00017A  0E3D               	movlw	61
  1128  00017C  0100               	movlb	0	; () banked
  1129  00017E  6FC0               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1130  000180  EC4A  F010         	call	_ConfigureUltrasound	;wreg free
  1131                           
  1132                           ;FastBuggy17_Main_Code_TUNING.c: 710: ConfigureBuggyIO();
  1133  000184  EC2D  F011         	call	_ConfigureBuggyIO	;wreg free
  1134                           
  1135                           ;FastBuggy17_Main_Code_TUNING.c: 711: ConfigureInterrupts();
  1136  000188  EC5E  F010         	call	_ConfigureInterrupts	;wreg free
  1137                           
  1138                           ;FastBuggy17_Main_Code_TUNING.c: 712: ConfigureTimer0();
  1139  00018C  EC51  F011         	call	_ConfigureTimer0	;wreg free
  1140                           
  1141                           ;FastBuggy17_Main_Code_TUNING.c: 713: ConfigureTimer1();
  1142  000190  EC3A  F011         	call	_ConfigureTimer1	;wreg free
  1143                           
  1144                           ;FastBuggy17_Main_Code_TUNING.c: 714: ConfigureTimer2();
  1145  000194  EC49  F012         	call	_ConfigureTimer2	;wreg free
  1146                           
  1147                           ;FastBuggy17_Main_Code_TUNING.c: 715: ConfigurePWM();
  1148  000198  EC12  F012         	call	_ConfigurePWM	;wreg free
  1149                           
  1150                           ;FastBuggy17_Main_Code_TUNING.c: 716: ConfigureADC();
  1151  00019C  EC86  F011         	call	_ConfigureADC	;wreg free
  1152                           
  1153                           ;FastBuggy17_Main_Code_TUNING.c: 717: ConfigureWireless();
  1154  0001A0  EC0F  F011         	call	_ConfigureWireless	;wreg free
  1155                           
  1156                           ;FastBuggy17_Main_Code_TUNING.c: 719: DisableMotors();
  1157  0001A4  EC5E  F012         	call	_DisableMotors	;wreg free
  1158                           
  1159                           ;FastBuggy17_Main_Code_TUNING.c: 721: Delay10KTCYx(100);
  1160  0001A8  0E64               	movlw	100
  1161  0001AA  ECF1  F010         	call	_Delay10KTCYx
  1162                           
  1163                           ;FastBuggy17_Main_Code_TUNING.c: 723: battery_voltage = ReadVoltage();
  1164  0001AE  EC42  F00C         	call	_ReadVoltage	;wreg free
  1165  0001B2  C0BA  F11A         	movff	?_ReadVoltage,main@battery_voltage
  1166  0001B6  C0BB  F11B         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1167                           
  1168                           ;FastBuggy17_Main_Code_TUNING.c: 725: SendStatus(0x00);
  1169  0001BA  0E00               	movlw	0
  1170  0001BC  ECB8  F00E         	call	_SendStatus
  1171                           
  1172                           ;FastBuggy17_Main_Code_TUNING.c: 727: SendBattVoltageInitial(battery_voltage_ptr);
  1173  0001C0  C117  F0BF         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1174  0001C4  C118  F0C0         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1175  0001C8  EC77  F00C         	call	_SendBattVoltageInitial	;wreg free
  1176                           
  1177                           ;FastBuggy17_Main_Code_TUNING.c: 730: LATJ = 0x1F;
  1178  0001CC  0E1F               	movlw	31
  1179  0001CE  6E91               	movwf	3985,c	;volatile
  1180                           
  1181                           ;FastBuggy17_Main_Code_TUNING.c: 731: SendStatus(0x01);
  1182  0001D0  0E01               	movlw	1
  1183  0001D2  ECB8  F00E         	call	_SendStatus
  1184  0001D6  D000               	goto	l6731
  1185  0001D8                     l6731:
  1186                           
  1187                           ;FastBuggy17_Main_Code_TUNING.c: 734: if(PB1pressed() == 1) {
  1188  0001D8  EC3B  F00D         	call	_PB1pressed	;wreg free
  1189  0001DC  06E8               	decf	wreg,f,c
  1190  0001DE  A4D8               	btfss	status,2,c
  1191  0001E0  D003               	goto	l6737
  1192                           
  1193                           ;FastBuggy17_Main_Code_TUNING.c: 735: line_mode = 0;
  1194  0001E2  0E00               	movlw	0
  1195  0001E4  D007               	goto	L1
  1196                           
  1197                           ;FastBuggy17_Main_Code_TUNING.c: 737: }
  1198                           
  1199                           ;FastBuggy17_Main_Code_TUNING.c: 736: break;
  1200  0001E6  D7F8               	goto	l6731
  1201  0001E8                     l6737:
  1202                           
  1203                           ;FastBuggy17_Main_Code_TUNING.c: 738: else if(PB2pressed() == 1) {
  1204  0001E8  ECDD  F00C         	call	_PB2pressed	;wreg free
  1205  0001EC  06E8               	decf	wreg,f,c
  1206  0001EE  A4D8               	btfss	status,2,c
  1207  0001F0  D7F3               	goto	l6731
  1208                           
  1209                           ;FastBuggy17_Main_Code_TUNING.c: 739: line_mode = 1;
  1210  0001F2  0E01               	movlw	1
  1211  0001F4                     L1:
  1212  0001F4  6E2A               	movwf	_line_mode,c
  1213                           
  1214                           ;FastBuggy17_Main_Code_TUNING.c: 740: break;
  1215  0001F6  D001               	goto	l6741
  1216  0001F8  D7EF               	goto	l6731
  1217  0001FA                     l6741:
  1218                           
  1219                           ;FastBuggy17_Main_Code_TUNING.c: 741: }
  1220                           ;FastBuggy17_Main_Code_TUNING.c: 742: }
  1221                           ;FastBuggy17_Main_Code_TUNING.c: 744: SendLineMode(line_mode_ptr);
  1222  0001FA  C111  F0BF         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1223  0001FE  C112  F0C0         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1224  000202  EC7D  F00E         	call	_SendLineMode	;wreg free
  1225                           
  1226                           ;FastBuggy17_Main_Code_TUNING.c: 745: FlashLEDS();
  1227  000206  EC36  F010         	call	_FlashLEDS	;wreg free
  1228                           
  1229                           ;FastBuggy17_Main_Code_TUNING.c: 747: EnableSensorLEDS();
  1230  00020A  EC53  F012         	call	_EnableSensorLEDS	;wreg free
  1231                           
  1232                           ;FastBuggy17_Main_Code_TUNING.c: 750: LATJ = 0x0F;
  1233  00020E  0E0F               	movlw	15
  1234  000210  6E91               	movwf	3985,c	;volatile
  1235                           
  1236                           ;FastBuggy17_Main_Code_TUNING.c: 751: SendStatus(0x02);
  1237  000212  0E02               	movlw	2
  1238  000214  ECB8  F00E         	call	_SendStatus
  1239  000218  D000               	goto	l6751
  1240  00021A                     l6751:
  1241                           
  1242                           ;FastBuggy17_Main_Code_TUNING.c: 754: if(PB1pressed() == 1) {
  1243  00021A  EC3B  F00D         	call	_PB1pressed	;wreg free
  1244  00021E  06E8               	decf	wreg,f,c
  1245  000220  A4D8               	btfss	status,2,c
  1246  000222  D006               	goto	l6759
  1247                           
  1248                           ;FastBuggy17_Main_Code_TUNING.c: 755: FlashLEDS();
  1249  000224  EC36  F010         	call	_FlashLEDS	;wreg free
  1250                           
  1251                           ;FastBuggy17_Main_Code_TUNING.c: 756: GenerateCalibration();
  1252  000228  EC0D  F008         	call	_GenerateCalibration	;wreg free
  1253                           
  1254                           ;FastBuggy17_Main_Code_TUNING.c: 757: break;
  1255  00022C  D00C               	goto	l6765
  1256                           
  1257                           ;FastBuggy17_Main_Code_TUNING.c: 758: }
  1258  00022E  D7F5               	goto	l6751
  1259  000230                     l6759:
  1260                           
  1261                           ;FastBuggy17_Main_Code_TUNING.c: 759: else if(PB2pressed() == 1) {
  1262  000230  ECDD  F00C         	call	_PB2pressed	;wreg free
  1263  000234  06E8               	decf	wreg,f,c
  1264  000236  A4D8               	btfss	status,2,c
  1265  000238  D7F0               	goto	l6751
  1266                           
  1267                           ;FastBuggy17_Main_Code_TUNING.c: 760: FlashLEDS();
  1268  00023A  EC36  F010         	call	_FlashLEDS	;wreg free
  1269                           
  1270                           ;FastBuggy17_Main_Code_TUNING.c: 761: LoadCalibration();
  1271  00023E  ECB9  F008         	call	_LoadCalibration	;wreg free
  1272                           
  1273                           ;FastBuggy17_Main_Code_TUNING.c: 762: break;
  1274  000242  D001               	goto	l6765
  1275  000244  D7EA               	goto	l6751
  1276  000246                     l6765:
  1277                           
  1278                           ;FastBuggy17_Main_Code_TUNING.c: 763: }
  1279                           ;FastBuggy17_Main_Code_TUNING.c: 765: }
  1280                           ;FastBuggy17_Main_Code_TUNING.c: 767: SendOffsets(sensor_offsets);
  1281  000246  0E81               	movlw	low _sensor_offsets
  1282  000248  0100               	movlb	0	; () banked
  1283  00024A  6FBF               	movwf	SendOffsets@offsets_array& (0+255),b
  1284  00024C  0E00               	movlw	high _sensor_offsets
  1285  00024E  0100               	movlb	0	; () banked
  1286  000250  6FC0               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1287  000252  EC5F  F009         	call	_SendOffsets	;wreg free
  1288                           
  1289                           ;FastBuggy17_Main_Code_TUNING.c: 768: SendPIDSetPointOnLine(PID_set_point_ptr);
  1290  000256  C113  F0BF         	movff	main@PID_set_point_ptr,SendPIDSetPointOnLine@set_point
  1291  00025A  C114  F0C0         	movff	main@PID_set_point_ptr+1,SendPIDSetPointOnLine@set_point+1
  1292  00025E  EC37  F00B         	call	_SendPIDSetPointOnLine	;wreg free
  1293                           
  1294                           ;FastBuggy17_Main_Code_TUNING.c: 769: SendPIDSetPointOffLine(off_line_sum_ptr);
  1295  000262  C115  F0BF         	movff	main@off_line_sum_ptr,SendPIDSetPointOffLine@set_point
  1296  000266  C116  F0C0         	movff	main@off_line_sum_ptr+1,SendPIDSetPointOffLine@set_point+1
  1297  00026A  EC6D  F00B         	call	_SendPIDSetPointOffLine	;wreg free
  1298                           
  1299                           ;FastBuggy17_Main_Code_TUNING.c: 771: FlashLEDS();
  1300  00026E  EC36  F010         	call	_FlashLEDS	;wreg free
  1301                           
  1302                           ;FastBuggy17_Main_Code_TUNING.c: 774: LATJ = 0x03;
  1303  000272  0E03               	movlw	3
  1304  000274  6E91               	movwf	3985,c	;volatile
  1305                           
  1306                           ;FastBuggy17_Main_Code_TUNING.c: 775: SendStatus(0x06);
  1307  000276  0E06               	movlw	6
  1308  000278  ECB8  F00E         	call	_SendStatus
  1309                           
  1310                           ;FastBuggy17_Main_Code_TUNING.c: 777: SendDefaultPIDValues(20, 0, 0);
  1311  00027C  0E00               	movlw	0
  1312  00027E  0100               	movlb	0	; () banked
  1313  000280  6FC0               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1314  000282  0E14               	movlw	20
  1315  000284  6FBF               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1316  000286  0E00               	movlw	0
  1317  000288  0100               	movlb	0	; () banked
  1318  00028A  6FC2               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1319  00028C  0E00               	movlw	0
  1320  00028E  6FC1               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1321  000290  0E00               	movlw	0
  1322  000292  0100               	movlb	0	; () banked
  1323  000294  6FC4               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1324  000296  0E00               	movlw	0
  1325  000298  6FC3               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1326  00029A  ECD8  F00B         	call	_SendDefaultPIDValues	;wreg free
  1327                           
  1328                           ;FastBuggy17_Main_Code_TUNING.c: 779: Kp_stored = ReadIntEEPROM(0x0006);
  1329  00029E  0E00               	movlw	0
  1330  0002A0  0100               	movlb	0	; () banked
  1331  0002A2  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1332  0002A4  0E06               	movlw	6
  1333  0002A6  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  1334  0002A8  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  1335  0002AC  C0B9  F124         	movff	?_ReadIntEEPROM,main@Kp_stored
  1336  0002B0  C0BA  F125         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1337                           
  1338                           ;FastBuggy17_Main_Code_TUNING.c: 780: Kd_stored = ReadIntEEPROM(0x0009);
  1339  0002B4  0E00               	movlw	0
  1340  0002B6  0100               	movlb	0	; () banked
  1341  0002B8  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1342  0002BA  0E09               	movlw	9
  1343  0002BC  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  1344  0002BE  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  1345  0002C2  C0B9  F126         	movff	?_ReadIntEEPROM,main@Kd_stored
  1346  0002C6  C0BA  F127         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1347                           
  1348                           ;FastBuggy17_Main_Code_TUNING.c: 781: Ki_stored = ReadIntEEPROM(0x000C);
  1349  0002CA  0E00               	movlw	0
  1350  0002CC  0100               	movlb	0	; () banked
  1351  0002CE  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1352  0002D0  0E0C               	movlw	12
  1353  0002D2  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  1354  0002D4  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  1355  0002D8  C0B9  F128         	movff	?_ReadIntEEPROM,main@Ki_stored
  1356  0002DC  C0BA  F129         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1357                           
  1358                           ;FastBuggy17_Main_Code_TUNING.c: 783: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  1359  0002E0  C124  F0BF         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1360  0002E4  C125  F0C0         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1361  0002E8  C126  F0C1         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1362  0002EC  C127  F0C2         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1363  0002F0  C128  F0C3         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1364  0002F4  C129  F0C4         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1365  0002F8  ECA3  F00B         	call	_SendStoredPIDValues	;wreg free
  1366  0002FC  D000               	goto	l6783
  1367  0002FE                     l6783:
  1368                           
  1369                           ;FastBuggy17_Main_Code_TUNING.c: 786: if(PB1pressed() == 1) {
  1370  0002FE  EC3B  F00D         	call	_PB1pressed	;wreg free
  1371  000302  06E8               	decf	wreg,f,c
  1372  000304  A4D8               	btfss	status,2,c
  1373  000306  D008               	goto	l6793
  1374                           
  1375                           ;FastBuggy17_Main_Code_TUNING.c: 787: FlashLEDS();
  1376  000308  EC36  F010         	call	_FlashLEDS	;wreg free
  1377                           
  1378                           ;FastBuggy17_Main_Code_TUNING.c: 788: LATJ = 0x03;
  1379  00030C  0E03               	movlw	3
  1380  00030E  6E91               	movwf	3985,c	;volatile
  1381                           
  1382                           ;FastBuggy17_Main_Code_TUNING.c: 789: SetPIDValues();
  1383  000310  EC44  F004         	call	_SetPIDValues	;wreg free
  1384                           
  1385                           ;FastBuggy17_Main_Code_TUNING.c: 790: break;
  1386  000314  D00E               	goto	l6801
  1387                           
  1388                           ;FastBuggy17_Main_Code_TUNING.c: 791: }
  1389  000316  D7F3               	goto	l6783
  1390  000318                     l6793:
  1391                           
  1392                           ;FastBuggy17_Main_Code_TUNING.c: 792: else if(PB2pressed() == 1) {
  1393  000318  ECDD  F00C         	call	_PB2pressed	;wreg free
  1394  00031C  06E8               	decf	wreg,f,c
  1395  00031E  A4D8               	btfss	status,2,c
  1396  000320  D7EE               	goto	l6783
  1397                           
  1398                           ;FastBuggy17_Main_Code_TUNING.c: 793: FlashLEDS();
  1399  000322  EC36  F010         	call	_FlashLEDS	;wreg free
  1400                           
  1401                           ;FastBuggy17_Main_Code_TUNING.c: 794: LATJ = 0x03;
  1402  000326  0E03               	movlw	3
  1403  000328  6E91               	movwf	3985,c	;volatile
  1404                           
  1405                           ;FastBuggy17_Main_Code_TUNING.c: 795: LoadPIDValues();
  1406  00032A  ECE4  F005         	call	_LoadPIDValues	;wreg free
  1407                           
  1408                           ;FastBuggy17_Main_Code_TUNING.c: 796: break;
  1409  00032E  D001               	goto	l6801
  1410  000330  D7E6               	goto	l6783
  1411  000332                     l6801:
  1412                           
  1413                           ;FastBuggy17_Main_Code_TUNING.c: 797: }
  1414                           ;FastBuggy17_Main_Code_TUNING.c: 798: }
  1415                           ;FastBuggy17_Main_Code_TUNING.c: 800: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  1416  000332  C07D  F0BF         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1417  000336  C07E  F0C0         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1418  00033A  C079  F0C1         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1419  00033E  C07A  F0C2         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1420  000342  C07B  F0C3         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1421  000346  C07C  F0C4         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1422  00034A  EC0D  F00C         	call	_SendCurrentPIDValues	;wreg free
  1423  00034E  D000               	goto	l6803
  1424  000350                     l6803:
  1425                           
  1426                           ;FastBuggy17_Main_Code_TUNING.c: 806: FlashLEDS();
  1427  000350  EC36  F010         	call	_FlashLEDS	;wreg free
  1428                           
  1429                           ;FastBuggy17_Main_Code_TUNING.c: 808: LATJ = 0x01;
  1430  000354  0E01               	movlw	1
  1431  000356  6E91               	movwf	3985,c	;volatile
  1432                           
  1433                           ;FastBuggy17_Main_Code_TUNING.c: 809: SendStatus(0x09);
  1434  000358  0E09               	movlw	9
  1435  00035A  ECB8  F00E         	call	_SendStatus
  1436  00035E  D000               	goto	l6809
  1437  000360                     l6809:
  1438                           
  1439                           ;FastBuggy17_Main_Code_TUNING.c: 812: if(PB1pressed() == 1) {
  1440  000360  EC3B  F00D         	call	_PB1pressed	;wreg free
  1441  000364  06E8               	decf	wreg,f,c
  1442  000366  B4D8               	btfsc	status,2,c
  1443  000368  D00F               	goto	l6819
  1444  00036A  D001               	goto	l6813
  1445                           
  1446                           ;FastBuggy17_Main_Code_TUNING.c: 813: break;
  1447  00036C  D00D               	goto	l6819
  1448  00036E                     l6813:
  1449                           
  1450                           ;FastBuggy17_Main_Code_TUNING.c: 814: }
  1451                           ;FastBuggy17_Main_Code_TUNING.c: 815: if(CommandAvailable() == 1 && GetCommand() == 0x02
      +                          ) {
  1452  00036E  EC0B  F012         	call	_CommandAvailable	;wreg free
  1453  000372  06E8               	decf	wreg,f,c
  1454  000374  A4D8               	btfss	status,2,c
  1455  000376  D7F4               	goto	l6809
  1456  000378  EC45  F012         	call	_GetCommand	;wreg free
  1457  00037C  0A02               	xorlw	2
  1458  00037E  B4D8               	btfsc	status,2,c
  1459  000380  D003               	goto	l6819
  1460  000382  D7EE               	goto	l6809
  1461                           
  1462                           ;FastBuggy17_Main_Code_TUNING.c: 816: break;
  1463  000384  D001               	goto	l6819
  1464  000386  D7EC               	goto	l6809
  1465  000388                     l6819:
  1466                           
  1467                           ;FastBuggy17_Main_Code_TUNING.c: 817: }
  1468                           ;FastBuggy17_Main_Code_TUNING.c: 818: }
  1469                           ;FastBuggy17_Main_Code_TUNING.c: 821: PID_error = 0;
  1470  000388  0E00               	movlw	0
  1471  00038A  0100               	movlb	0	; () banked
  1472  00038C  6FA0               	movwf	(_PID_error+1)& (0+255),b
  1473  00038E  0E00               	movlw	0
  1474  000390  6F9F               	movwf	_PID_error& (0+255),b
  1475                           
  1476                           ;FastBuggy17_Main_Code_TUNING.c: 822: PID_output = 0;
  1477  000392  0E00               	movlw	0
  1478  000394  0100               	movlb	0	; () banked
  1479  000396  6F80               	movwf	(_PID_output+1)& (0+255),b
  1480  000398  0E00               	movlw	0
  1481  00039A  6F7F               	movwf	_PID_output& (0+255),b
  1482                           
  1483                           ;FastBuggy17_Main_Code_TUNING.c: 823: D_temp = 0;
  1484  00039C  0E00               	movlw	0
  1485  00039E  0101               	movlb	1	; () banked
  1486  0003A0  6F1D               	movwf	(main@D_temp+1)& (0+255),b
  1487  0003A2  0E00               	movlw	0
  1488  0003A4  6F1C               	movwf	main@D_temp& (0+255),b
  1489                           
  1490                           ;FastBuggy17_Main_Code_TUNING.c: 824: I_temp = 0;
  1491  0003A6  0E00               	movlw	0
  1492  0003A8  0101               	movlb	1	; () banked
  1493  0003AA  6F1F               	movwf	(main@I_temp+1)& (0+255),b
  1494  0003AC  0E00               	movlw	0
  1495  0003AE  6F1E               	movwf	main@I_temp& (0+255),b
  1496                           
  1497                           ;FastBuggy17_Main_Code_TUNING.c: 826: stop_flag = 0;
  1498  0003B0  0E00               	movlw	0
  1499  0003B2  0101               	movlb	1	; () banked
  1500  0003B4  6F20               	movwf	main@stop_flag& (0+255),b
  1501                           
  1502                           ;FastBuggy17_Main_Code_TUNING.c: 827: find_line_flag = 0;
  1503  0003B6  0E00               	movlw	0
  1504  0003B8  0101               	movlb	1	; () banked
  1505  0003BA  6F0A               	movwf	main@find_line_flag& (0+255),b
  1506                           
  1507                           ;FastBuggy17_Main_Code_TUNING.c: 828: line_end_flag = 0;
  1508  0003BC  0E00               	movlw	0
  1509  0003BE  0101               	movlb	1	; () banked
  1510  0003C0  6F08               	movwf	main@line_end_flag& (0+255),b
  1511                           
  1512                           ;FastBuggy17_Main_Code_TUNING.c: 829: wall_detected_flag = 0;
  1513  0003C2  0E00               	movlw	0
  1514  0003C4  0101               	movlb	1	; () banked
  1515  0003C6  6F19               	movwf	main@wall_detected_flag& (0+255),b
  1516                           
  1517                           ;FastBuggy17_Main_Code_TUNING.c: 830: send_battery_stats_flag = 0;
  1518  0003C8  0E00               	movlw	0
  1519  0003CA  0101               	movlb	1	; () banked
  1520  0003CC  6F09               	movwf	main@send_battery_stats_flag& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;FastBuggy17_Main_Code_TUNING.c: 832: GetDistance();
  1524  0003CE  EC7C  F011         	call	_GetDistance	;wreg free
  1525                           
  1526                           ;FastBuggy17_Main_Code_TUNING.c: 834: LATJ = 0x00;
  1527  0003D2  0E00               	movlw	0
  1528  0003D4  6E91               	movwf	3985,c	;volatile
  1529                           
  1530                           ;FastBuggy17_Main_Code_TUNING.c: 836: FlashLEDS();
  1531  0003D6  EC36  F010         	call	_FlashLEDS	;wreg free
  1532                           
  1533                           ;FastBuggy17_Main_Code_TUNING.c: 837: SendStatus(0x0A);
  1534  0003DA  0E0A               	movlw	10
  1535  0003DC  ECB8  F00E         	call	_SendStatus
  1536                           
  1537                           ;FastBuggy17_Main_Code_TUNING.c: 839: ResetAccumulatedCurrent();
  1538  0003E0  ECDF  F00F         	call	_ResetAccumulatedCurrent	;wreg free
  1539                           
  1540                           ;FastBuggy17_Main_Code_TUNING.c: 841: ResetMillis0();
  1541  0003E4  EC23  F012         	call	_ResetMillis0	;wreg free
  1542                           
  1543                           ;FastBuggy17_Main_Code_TUNING.c: 842: ResetMillis1();
  1544  0003E8  EC1E  F012         	call	_ResetMillis1	;wreg free
  1545                           
  1546                           ;FastBuggy17_Main_Code_TUNING.c: 843: ResetMillis2();
  1547  0003EC  EC37  F012         	call	_ResetMillis2	;wreg free
  1548                           
  1549                           ;FastBuggy17_Main_Code_TUNING.c: 844: ResetMillis3();
  1550  0003F0  EC19  F012         	call	_ResetMillis3	;wreg free
  1551                           
  1552                           ;FastBuggy17_Main_Code_TUNING.c: 846: SetUnipolar();
  1553  0003F4  EC4D  F012         	call	_SetUnipolar	;wreg free
  1554                           
  1555                           ;FastBuggy17_Main_Code_TUNING.c: 847: StopMotors();
  1556  0003F8  ECE2  F010         	call	_StopMotors	;wreg free
  1557                           
  1558                           ;FastBuggy17_Main_Code_TUNING.c: 848: SetDirectionForward();
  1559  0003FC  EC50  F012         	call	_SetDirectionForward	;wreg free
  1560                           
  1561                           ;FastBuggy17_Main_Code_TUNING.c: 849: EnableMotors();
  1562  000400  EC5C  F012         	call	_EnableMotors	;wreg free
  1563  000404  D000               	goto	l6845
  1564  000406                     l6845:
  1565                           
  1566                           ;FastBuggy17_Main_Code_TUNING.c: 854: ResetMillis1();
  1567  000406  EC1E  F012         	call	_ResetMillis1	;wreg free
  1568                           
  1569                           ;FastBuggy17_Main_Code_TUNING.c: 857: GetSensorReadings();
  1570  00040A  EC46  F011         	call	_GetSensorReadings	;wreg free
  1571                           
  1572                           ;FastBuggy17_Main_Code_TUNING.c: 859: while(BusySensorAcq());
  1573  00040E  D000               	goto	l6849
  1574  000410                     l6849:
  1575  000410  ECD6  F011         	call	_BusySensorAcq	;wreg free
  1576  000414  0900               	iorlw	0
  1577  000416  A4D8               	btfss	status,2,c
  1578  000418  D7FB               	goto	l6849
  1579                           
  1580                           ;FastBuggy17_Main_Code_TUNING.c: 860: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1581  00041A  0E95               	movlw	low _sensor_readings_raw
  1582  00041C  0100               	movlb	0	; () banked
  1583  00041E  6FB7               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1584  000420  0E00               	movlw	high _sensor_readings_raw
  1585  000422  0100               	movlb	0	; () banked
  1586  000424  6FB8               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1587  000426  0E81               	movlw	low _sensor_offsets
  1588  000428  0100               	movlb	0	; () banked
  1589  00042A  6FB9               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1590  00042C  0E00               	movlw	high _sensor_offsets
  1591  00042E  0100               	movlb	0	; () banked
  1592  000430  6FBA               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1593  000432  ECBA  F00A         	call	_NormaliseSensorReadings	;wreg free
  1594                           
  1595                           ;FastBuggy17_Main_Code_TUNING.c: 861: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1596  000436  0E8B               	movlw	low _sensor_readings_normalised
  1597  000438  0100               	movlb	0	; () banked
  1598  00043A  6FB7               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1599  00043C  0E00               	movlw	high _sensor_readings_normalised
  1600  00043E  0100               	movlb	0	; () banked
  1601  000440  6FB8               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1602  000442  C12A  F0B9         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1603  000446  C12B  F0BA         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1604  00044A  ECE5  F004         	call	_CalculateSensorStatuses	;wreg free
  1605                           
  1606                           ;FastBuggy17_Main_Code_TUNING.c: 863: sensor_sum = CalculateSensorSum(sensor_readings_no
      +                          rmalised);
  1607  00044E  0E8B               	movlw	low _sensor_readings_normalised
  1608  000450  0100               	movlb	0	; () banked
  1609  000452  6FBD               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  1610  000454  0E00               	movlw	high _sensor_readings_normalised
  1611  000456  0100               	movlb	0	; () banked
  1612  000458  6FBE               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  1613  00045A  EC68  F005         	call	_CalculateSensorSum	;wreg free
  1614  00045E  C0BD  F121         	movff	?_CalculateSensorSum,main@sensor_sum
  1615  000462  C0BE  F122         	movff	?_CalculateSensorSum+1,main@sensor_sum+1
  1616                           
  1617                           ;FastBuggy17_Main_Code_TUNING.c: 864: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  1618  000466  0E25               	movlw	low _sensor_statuses
  1619  000468  0100               	movlb	0	; () banked
  1620  00046A  6FB7               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  1621  00046C  0E00               	movlw	high _sensor_statuses
  1622  00046E  0100               	movlb	0	; () banked
  1623  000470  6FB8               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  1624  000472  EC5D  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  1625  000476  0101               	movlb	1	; () banked
  1626  000478  6F2C               	movwf	main@sensor_sum_discrete& (0+255),b
  1627                           
  1628                           ; BSR set to: 1
  1629                           ;FastBuggy17_Main_Code_TUNING.c: 867: PID_error = (PID_set_point - sensor_sum) / 100;
  1630  00047A  C121  F0CB         	movff	main@sensor_sum,??_main
  1631  00047E  C122  F0CC         	movff	main@sensor_sum+1,??_main+1
  1632  000482  0100               	movlb	0	; () banked
  1633  000484  1FCB               	comf	??_main& (0+255),f,b
  1634  000486  1FCC               	comf	(??_main+1)& (0+255),f,b
  1635  000488  4BCB               	infsnz	??_main& (0+255),f,b
  1636  00048A  2BCC               	incf	(??_main+1)& (0+255),f,b
  1637  00048C  0100               	movlb	0	; () banked
  1638  00048E  51A1               	movf	_PID_set_point& (0+255),w,b
  1639  000490  0100               	movlb	0	; () banked
  1640  000492  25CB               	addwf	??_main& (0+255),w,b
  1641  000494  0100               	movlb	0	; () banked
  1642  000496  6FB7               	movwf	___awdiv@dividend& (0+255),b
  1643  000498  0100               	movlb	0	; () banked
  1644  00049A  51A2               	movf	(_PID_set_point+1)& (0+255),w,b
  1645  00049C  0100               	movlb	0	; () banked
  1646  00049E  21CC               	addwfc	(??_main+1)& (0+255),w,b
  1647  0004A0  0100               	movlb	0	; () banked
  1648  0004A2  6FB8               	movwf	(___awdiv@dividend+1)& (0+255),b
  1649  0004A4  0E00               	movlw	0
  1650  0004A6  0100               	movlb	0	; () banked
  1651  0004A8  6FBA               	movwf	(___awdiv@divisor+1)& (0+255),b
  1652  0004AA  0E64               	movlw	100
  1653  0004AC  6FB9               	movwf	___awdiv@divisor& (0+255),b
  1654  0004AE  EC4B  F007         	call	___awdiv	;wreg free
  1655  0004B2  C0B7  F09F         	movff	?___awdiv,_PID_error
  1656  0004B6  C0B8  F0A0         	movff	?___awdiv+1,_PID_error+1
  1657                           
  1658                           ;FastBuggy17_Main_Code_TUNING.c: 868: PID_output = PID_Kp * PID_error + PID_Kd * (D_temp
      +                           - PID_error) + PID_Ki * I_temp;
  1659  0004BA  C07D  F0B7         	movff	_PID_Kp,___wmul@multiplier
  1660  0004BE  C07E  F0B8         	movff	_PID_Kp+1,___wmul@multiplier+1
  1661  0004C2  C09F  F0B9         	movff	_PID_error,___wmul@multiplicand
  1662  0004C6  C0A0  F0BA         	movff	_PID_error+1,___wmul@multiplicand+1
  1663  0004CA  EC0D  F00F         	call	___wmul	;wreg free
  1664  0004CE  C0B7  F0CB         	movff	?___wmul,??_main
  1665  0004D2  C0B8  F0CC         	movff	?___wmul+1,??_main+1
  1666  0004D6  C09F  F0CD         	movff	_PID_error,??_main+2
  1667  0004DA  C0A0  F0CE         	movff	_PID_error+1,??_main+3
  1668  0004DE  0100               	movlb	0	; () banked
  1669  0004E0  1FCD               	comf	(??_main+2)& (0+255),f,b
  1670  0004E2  1FCE               	comf	(??_main+3)& (0+255),f,b
  1671  0004E4  4BCD               	infsnz	(??_main+2)& (0+255),f,b
  1672  0004E6  2BCE               	incf	(??_main+3)& (0+255),f,b
  1673  0004E8  0101               	movlb	1	; () banked
  1674  0004EA  511C               	movf	main@D_temp& (0+255),w,b
  1675  0004EC  0100               	movlb	0	; () banked
  1676  0004EE  25CD               	addwf	(??_main+2)& (0+255),w,b
  1677  0004F0  0100               	movlb	0	; () banked
  1678  0004F2  6FB7               	movwf	___wmul@multiplier& (0+255),b
  1679  0004F4  0101               	movlb	1	; () banked
  1680  0004F6  511D               	movf	(main@D_temp+1)& (0+255),w,b
  1681  0004F8  0100               	movlb	0	; () banked
  1682  0004FA  21CE               	addwfc	(??_main+3)& (0+255),w,b
  1683  0004FC  0100               	movlb	0	; () banked
  1684  0004FE  6FB8               	movwf	(___wmul@multiplier+1)& (0+255),b
  1685  000500  C079  F0B9         	movff	_PID_Kd,___wmul@multiplicand
  1686  000504  C07A  F0BA         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1687  000508  EC0D  F00F         	call	___wmul	;wreg free
  1688  00050C  0100               	movlb	0	; () banked
  1689  00050E  51B7               	movf	?___wmul& (0+255),w,b
  1690  000510  0100               	movlb	0	; () banked
  1691  000512  27CB               	addwf	??_main& (0+255),f,b
  1692  000514  0100               	movlb	0	; () banked
  1693  000516  51B8               	movf	(?___wmul+1)& (0+255),w,b
  1694  000518  0100               	movlb	0	; () banked
  1695  00051A  23CC               	addwfc	(??_main+1)& (0+255),f,b
  1696  00051C  C07B  F0B7         	movff	_PID_Ki,___wmul@multiplier
  1697  000520  C07C  F0B8         	movff	_PID_Ki+1,___wmul@multiplier+1
  1698  000524  C11E  F0B9         	movff	main@I_temp,___wmul@multiplicand
  1699  000528  C11F  F0BA         	movff	main@I_temp+1,___wmul@multiplicand+1
  1700  00052C  EC0D  F00F         	call	___wmul	;wreg free
  1701  000530  0100               	movlb	0	; () banked
  1702  000532  51B7               	movf	?___wmul& (0+255),w,b
  1703  000534  0100               	movlb	0	; () banked
  1704  000536  25CB               	addwf	??_main& (0+255),w,b
  1705  000538  0100               	movlb	0	; () banked
  1706  00053A  6F7F               	movwf	_PID_output& (0+255),b
  1707  00053C  0100               	movlb	0	; () banked
  1708  00053E  51B8               	movf	(?___wmul+1)& (0+255),w,b
  1709  000540  0100               	movlb	0	; () banked
  1710  000542  21CC               	addwfc	(??_main+1)& (0+255),w,b
  1711  000544  0100               	movlb	0	; () banked
  1712  000546  6F80               	movwf	(_PID_output+1)& (0+255),b
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;FastBuggy17_Main_Code_TUNING.c: 869: D_temp = PID_error;
  1716  000548  C09F  F11C         	movff	_PID_error,main@D_temp
  1717  00054C  C0A0  F11D         	movff	_PID_error+1,main@D_temp+1
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;FastBuggy17_Main_Code_TUNING.c: 870: I_temp += PID_error;
  1721  000550  0100               	movlb	0	; () banked
  1722  000552  519F               	movf	_PID_error& (0+255),w,b
  1723  000554  0101               	movlb	1	; () banked
  1724  000556  271E               	addwf	main@I_temp& (0+255),f,b
  1725  000558  0100               	movlb	0	; () banked
  1726  00055A  51A0               	movf	(_PID_error+1)& (0+255),w,b
  1727  00055C  0101               	movlb	1	; () banked
  1728  00055E  231F               	addwfc	(main@I_temp+1)& (0+255),f,b
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;FastBuggy17_Main_Code_TUNING.c: 872: SetDCMotorPID(PID_output);
  1732  000560  C07F  F0BF         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1733  000564  C080  F0C0         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1734  000568  EC65  F008         	call	_SetDCMotorPID	;wreg free
  1735                           
  1736                           ;FastBuggy17_Main_Code_TUNING.c: 873: DisplaySensorStatuses(sensor_statuses);
  1737  00056C  0E25               	movlw	low _sensor_statuses
  1738  00056E  0100               	movlb	0	; () banked
  1739  000570  6FB7               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1740  000572  0E00               	movlw	high _sensor_statuses
  1741  000574  0100               	movlb	0	; () banked
  1742  000576  6FB8               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1743  000578  EC6A  F00D         	call	_DisplaySensorStatuses	;wreg free
  1744                           
  1745                           ;FastBuggy17_Main_Code_TUNING.c: 876: if(BusyDistanceAcq() == 0 && wall_detected_flag ==
      +                           0 && ReadMillis0() >= 60) {
  1746  00057C  ECE6  F011         	call	_BusyDistanceAcq	;wreg free
  1747  000580  0900               	iorlw	0
  1748  000582  A4D8               	btfss	status,2,c
  1749  000584  D0A8               	goto	l6927
  1750  000586  0101               	movlb	1	; () banked
  1751  000588  5119               	movf	main@wall_detected_flag& (0+255),w,b
  1752  00058A  0101               	movlb	1	; () banked
  1753  00058C  A4D8               	btfss	status,2,c
  1754  00058E  D0A3               	goto	l6927
  1755                           
  1756                           ; BSR set to: 1
  1757  000590  EC2D  F012         	call	_ReadMillis0	;wreg free
  1758  000594  0100               	movlb	0	; () banked
  1759  000596  51B8               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1760  000598  E105               	bnz	u6100
  1761  00059A  0E3C               	movlw	60
  1762  00059C  0100               	movlb	0	; () banked
  1763  00059E  5DB7               	subwf	?_ReadMillis0& (0+255),w,b
  1764  0005A0  A0D8               	btfss	status,0,c
  1765  0005A2  D099               	goto	l6927
  1766  0005A4                     u6100:
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;FastBuggy17_Main_Code_TUNING.c: 878: ResetMillis0();
  1770  0005A4  EC23  F012         	call	_ResetMillis0	;wreg free
  1771                           
  1772                           ;FastBuggy17_Main_Code_TUNING.c: 880: if(ReadEchoLength() < 2000) {
  1773  0005A8  EC32  F012         	call	_ReadEchoLength	;wreg free
  1774  0005AC  0ED0               	movlw	208
  1775  0005AE  0100               	movlb	0	; () banked
  1776  0005B0  5DB7               	subwf	?_ReadEchoLength& (0+255),w,b
  1777  0005B2  0E07               	movlw	7
  1778  0005B4  0100               	movlb	0	; () banked
  1779  0005B6  59B8               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1780  0005B8  B0D8               	btfsc	status,0,c
  1781  0005BA  D08A               	goto	l6925
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;FastBuggy17_Main_Code_TUNING.c: 881: wall_detected_flag = 1;
  1785  0005BC  0E01               	movlw	1
  1786  0005BE  0101               	movlb	1	; () banked
  1787  0005C0  6F19               	movwf	main@wall_detected_flag& (0+255),b
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;FastBuggy17_Main_Code_TUNING.c: 884: DisableMotors();
  1791  0005C2  EC5E  F012         	call	_DisableMotors	;wreg free
  1792                           
  1793                           ;FastBuggy17_Main_Code_TUNING.c: 886: PID_error = 0;
  1794  0005C6  0E00               	movlw	0
  1795  0005C8  0100               	movlb	0	; () banked
  1796  0005CA  6FA0               	movwf	(_PID_error+1)& (0+255),b
  1797  0005CC  0E00               	movlw	0
  1798  0005CE  6F9F               	movwf	_PID_error& (0+255),b
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;FastBuggy17_Main_Code_TUNING.c: 887: PID_output = 0;
  1802  0005D0  0E00               	movlw	0
  1803  0005D2  0100               	movlb	0	; () banked
  1804  0005D4  6F80               	movwf	(_PID_output+1)& (0+255),b
  1805  0005D6  0E00               	movlw	0
  1806  0005D8  6F7F               	movwf	_PID_output& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;FastBuggy17_Main_Code_TUNING.c: 888: D_temp = 0;
  1810  0005DA  0E00               	movlw	0
  1811  0005DC  0101               	movlb	1	; () banked
  1812  0005DE  6F1D               	movwf	(main@D_temp+1)& (0+255),b
  1813  0005E0  0E00               	movlw	0
  1814  0005E2  6F1C               	movwf	main@D_temp& (0+255),b
  1815                           
  1816                           ; BSR set to: 1
  1817                           ;FastBuggy17_Main_Code_TUNING.c: 889: I_temp = 0;
  1818  0005E4  0E00               	movlw	0
  1819  0005E6  0101               	movlb	1	; () banked
  1820  0005E8  6F1F               	movwf	(main@I_temp+1)& (0+255),b
  1821  0005EA  0E00               	movlw	0
  1822  0005EC  6F1E               	movwf	main@I_temp& (0+255),b
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;FastBuggy17_Main_Code_TUNING.c: 891: SetForwardsMotorR();
  1826  0005EE  EC58  F012         	call	_SetForwardsMotorR	;wreg free
  1827                           
  1828                           ;FastBuggy17_Main_Code_TUNING.c: 892: SetReverseMotorL();
  1829  0005F2  EC56  F012         	call	_SetReverseMotorL	;wreg free
  1830                           
  1831                           ;FastBuggy17_Main_Code_TUNING.c: 894: SetDCMotorL(250);
  1832  0005F6  0E00               	movlw	0
  1833  0005F8  0100               	movlb	0	; () banked
  1834  0005FA  6FBE               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1835  0005FC  0EFA               	movlw	250
  1836  0005FE  6FBD               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1837  000600  ECFD  F011         	call	_SetDCMotorL	;wreg free
  1838                           
  1839                           ;FastBuggy17_Main_Code_TUNING.c: 895: SetDCMotorR(340);
  1840  000604  0E01               	movlw	1
  1841  000606  0100               	movlb	0	; () banked
  1842  000608  6FBE               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1843  00060A  0E54               	movlw	84
  1844  00060C  6FBD               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1845  00060E  ECF6  F011         	call	_SetDCMotorR	;wreg free
  1846                           
  1847                           ;FastBuggy17_Main_Code_TUNING.c: 897: EnableMotors();
  1848  000612  EC5C  F012         	call	_EnableMotors	;wreg free
  1849                           
  1850                           ;FastBuggy17_Main_Code_TUNING.c: 899: sensor_sum_discrete = 0;
  1851  000616  0E00               	movlw	0
  1852  000618  0101               	movlb	1	; () banked
  1853  00061A  6F2C               	movwf	main@sensor_sum_discrete& (0+255),b
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;FastBuggy17_Main_Code_TUNING.c: 901: ResetMillis0();
  1857  00061C  EC23  F012         	call	_ResetMillis0	;wreg free
  1858                           
  1859                           ;FastBuggy17_Main_Code_TUNING.c: 902: while(ReadMillis0() < 300);
  1860  000620  D000               	goto	l6905
  1861  000622                     l6905:
  1862  000622  EC2D  F012         	call	_ReadMillis0	;wreg free
  1863  000626  0E2C               	movlw	44
  1864  000628  0100               	movlb	0	; () banked
  1865  00062A  5DB7               	subwf	?_ReadMillis0& (0+255),w,b
  1866  00062C  0E01               	movlw	1
  1867  00062E  0100               	movlb	0	; () banked
  1868  000630  59B8               	subwfb	(?_ReadMillis0+1)& (0+255),w,b
  1869  000632  B0D8               	btfsc	status,0,c
  1870  000634  D037               	goto	l6919
  1871  000636  D7F5               	goto	l6905
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;FastBuggy17_Main_Code_TUNING.c: 904: while(sensor_sum_discrete == 0) {
  1875  000638  D035               	goto	l6919
  1876  00063A                     l6907:
  1877                           
  1878                           ;FastBuggy17_Main_Code_TUNING.c: 906: GetSensorReadings();
  1879  00063A  EC46  F011         	call	_GetSensorReadings	;wreg free
  1880                           
  1881                           ;FastBuggy17_Main_Code_TUNING.c: 907: while(BusySensorAcq());
  1882  00063E  D000               	goto	l6909
  1883  000640                     l6909:
  1884  000640  ECD6  F011         	call	_BusySensorAcq	;wreg free
  1885  000644  0900               	iorlw	0
  1886  000646  A4D8               	btfss	status,2,c
  1887  000648  D7FB               	goto	l6909
  1888                           
  1889                           ;FastBuggy17_Main_Code_TUNING.c: 908: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1890  00064A  0E95               	movlw	low _sensor_readings_raw
  1891  00064C  0100               	movlb	0	; () banked
  1892  00064E  6FB7               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1893  000650  0E00               	movlw	high _sensor_readings_raw
  1894  000652  0100               	movlb	0	; () banked
  1895  000654  6FB8               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1896  000656  0E81               	movlw	low _sensor_offsets
  1897  000658  0100               	movlb	0	; () banked
  1898  00065A  6FB9               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1899  00065C  0E00               	movlw	high _sensor_offsets
  1900  00065E  0100               	movlb	0	; () banked
  1901  000660  6FBA               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1902  000662  ECBA  F00A         	call	_NormaliseSensorReadings	;wreg free
  1903                           
  1904                           ;FastBuggy17_Main_Code_TUNING.c: 909: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1905  000666  0E8B               	movlw	low _sensor_readings_normalised
  1906  000668  0100               	movlb	0	; () banked
  1907  00066A  6FB7               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1908  00066C  0E00               	movlw	high _sensor_readings_normalised
  1909  00066E  0100               	movlb	0	; () banked
  1910  000670  6FB8               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1911  000672  C12A  F0B9         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1912  000676  C12B  F0BA         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1913  00067A  ECE5  F004         	call	_CalculateSensorStatuses	;wreg free
  1914                           
  1915                           ;FastBuggy17_Main_Code_TUNING.c: 911: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  1916  00067E  0E25               	movlw	low _sensor_statuses
  1917  000680  0100               	movlb	0	; () banked
  1918  000682  6FB7               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  1919  000684  0E00               	movlw	high _sensor_statuses
  1920  000686  0100               	movlb	0	; () banked
  1921  000688  6FB8               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  1922  00068A  EC5D  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  1923  00068E  0101               	movlb	1	; () banked
  1924  000690  6F2C               	movwf	main@sensor_sum_discrete& (0+255),b
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;FastBuggy17_Main_Code_TUNING.c: 913: DisplaySensorStatuses(sensor_statuses);
  1928  000692  0E25               	movlw	low _sensor_statuses
  1929  000694  0100               	movlb	0	; () banked
  1930  000696  6FB7               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1931  000698  0E00               	movlw	high _sensor_statuses
  1932  00069A  0100               	movlb	0	; () banked
  1933  00069C  6FB8               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1934  00069E  EC6A  F00D         	call	_DisplaySensorStatuses	;wreg free
  1935  0006A2  D000               	goto	l6919
  1936  0006A4                     l6919:
  1937  0006A4  0101               	movlb	1	; () banked
  1938  0006A6  512C               	movf	main@sensor_sum_discrete& (0+255),w,b
  1939  0006A8  0101               	movlb	1	; () banked
  1940  0006AA  B4D8               	btfsc	status,2,c
  1941  0006AC  D7C6               	goto	l6907
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;FastBuggy17_Main_Code_TUNING.c: 914: }
  1945                           ;FastBuggy17_Main_Code_TUNING.c: 916: SetDCMotorL(526);
  1946                           
  1947                           ; BSR set to: 1
  1948  0006AE  0E02               	movlw	2
  1949  0006B0  0100               	movlb	0	; () banked
  1950  0006B2  6FBE               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1951  0006B4  0E0E               	movlw	14
  1952  0006B6  6FBD               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1953  0006B8  ECFD  F011         	call	_SetDCMotorL	;wreg free
  1954                           
  1955                           ;FastBuggy17_Main_Code_TUNING.c: 917: SetDCMotorR(526);
  1956  0006BC  0E02               	movlw	2
  1957  0006BE  0100               	movlb	0	; () banked
  1958  0006C0  6FBE               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1959  0006C2  0E0E               	movlw	14
  1960  0006C4  6FBD               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1961  0006C6  ECF6  F011         	call	_SetDCMotorR	;wreg free
  1962                           
  1963                           ;FastBuggy17_Main_Code_TUNING.c: 918: SetDirectionForward();
  1964  0006CA  EC50  F012         	call	_SetDirectionForward	;wreg free
  1965                           
  1966                           ;FastBuggy17_Main_Code_TUNING.c: 920: }
  1967  0006CE  D087               	goto	l6967
  1968  0006D0                     l6925:
  1969                           
  1970                           ;FastBuggy17_Main_Code_TUNING.c: 921: else {
  1971                           ;FastBuggy17_Main_Code_TUNING.c: 922: GetDistance();
  1972  0006D0  EC7C  F011         	call	_GetDistance	;wreg free
  1973                           
  1974                           ;FastBuggy17_Main_Code_TUNING.c: 923: }
  1975                           ;FastBuggy17_Main_Code_TUNING.c: 924: }
  1976  0006D4  D084               	goto	l6967
  1977  0006D6                     l6927:
  1978                           
  1979                           ;FastBuggy17_Main_Code_TUNING.c: 927: else if(sensor_sum_discrete == 0) {
  1980  0006D6  0101               	movlb	1	; () banked
  1981  0006D8  512C               	movf	main@sensor_sum_discrete& (0+255),w,b
  1982  0006DA  0101               	movlb	1	; () banked
  1983  0006DC  A4D8               	btfss	status,2,c
  1984  0006DE  D044               	goto	l6947
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;FastBuggy17_Main_Code_TUNING.c: 928: ResetMillis2();
  1988  0006E0  EC37  F012         	call	_ResetMillis2	;wreg free
  1989                           
  1990                           ;FastBuggy17_Main_Code_TUNING.c: 929: while(ReadMillis2() <= 100);
  1991  0006E4  D000               	goto	l6931
  1992  0006E6                     l6931:
  1993  0006E6  EC3C  F012         	call	_ReadMillis2	;wreg free
  1994  0006EA  0100               	movlb	0	; () banked
  1995  0006EC  51B8               	movf	(?_ReadMillis2+1)& (0+255),w,b
  1996  0006EE  E107               	bnz	l6933
  1997  0006F0  0E65               	movlw	101
  1998  0006F2  0100               	movlb	0	; () banked
  1999  0006F4  5DB7               	subwf	?_ReadMillis2& (0+255),w,b
  2000  0006F6  B0D8               	btfsc	status,0,c
  2001  0006F8  D002               	goto	l6933
  2002  0006FA  D7F5               	goto	l6931
  2003  0006FC  D000               	goto	l6933
  2004  0006FE                     l6933:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;FastBuggy17_Main_Code_TUNING.c: 931: GetSensorReadings();
  2008  0006FE  EC46  F011         	call	_GetSensorReadings	;wreg free
  2009                           
  2010                           ;FastBuggy17_Main_Code_TUNING.c: 932: while(BusySensorAcq());
  2011  000702  D000               	goto	l6935
  2012  000704                     l6935:
  2013  000704  ECD6  F011         	call	_BusySensorAcq	;wreg free
  2014  000708  0900               	iorlw	0
  2015  00070A  A4D8               	btfss	status,2,c
  2016  00070C  D7FB               	goto	l6935
  2017                           
  2018                           ;FastBuggy17_Main_Code_TUNING.c: 933: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  2019  00070E  0E95               	movlw	low _sensor_readings_raw
  2020  000710  0100               	movlb	0	; () banked
  2021  000712  6FB7               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  2022  000714  0E00               	movlw	high _sensor_readings_raw
  2023  000716  0100               	movlb	0	; () banked
  2024  000718  6FB8               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  2025  00071A  0E81               	movlw	low _sensor_offsets
  2026  00071C  0100               	movlb	0	; () banked
  2027  00071E  6FB9               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  2028  000720  0E00               	movlw	high _sensor_offsets
  2029  000722  0100               	movlb	0	; () banked
  2030  000724  6FBA               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  2031  000726  ECBA  F00A         	call	_NormaliseSensorReadings	;wreg free
  2032                           
  2033                           ;FastBuggy17_Main_Code_TUNING.c: 934: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  2034  00072A  0E8B               	movlw	low _sensor_readings_normalised
  2035  00072C  0100               	movlb	0	; () banked
  2036  00072E  6FB7               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  2037  000730  0E00               	movlw	high _sensor_readings_normalised
  2038  000732  0100               	movlb	0	; () banked
  2039  000734  6FB8               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  2040  000736  C12A  F0B9         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  2041  00073A  C12B  F0BA         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  2042  00073E  ECE5  F004         	call	_CalculateSensorStatuses	;wreg free
  2043                           
  2044                           ;FastBuggy17_Main_Code_TUNING.c: 936: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  2045  000742  0E25               	movlw	low _sensor_statuses
  2046  000744  0100               	movlb	0	; () banked
  2047  000746  6FB7               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  2048  000748  0E00               	movlw	high _sensor_statuses
  2049  00074A  0100               	movlb	0	; () banked
  2050  00074C  6FB8               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  2051  00074E  EC5D  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  2052  000752  0101               	movlb	1	; () banked
  2053  000754  6F2C               	movwf	main@sensor_sum_discrete& (0+255),b
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;FastBuggy17_Main_Code_TUNING.c: 938: if(sensor_sum_discrete == 0) {
  2057  000756  0101               	movlb	1	; () banked
  2058  000758  512C               	movf	main@sensor_sum_discrete& (0+255),w,b
  2059  00075A  0101               	movlb	1	; () banked
  2060  00075C  A4D8               	btfss	status,2,c
  2061  00075E  D03F               	goto	l6967
  2062                           
  2063                           ; BSR set to: 1
  2064                           ;FastBuggy17_Main_Code_TUNING.c: 939: StopMotors();
  2065  000760  ECE2  F010         	call	_StopMotors	;wreg free
  2066                           
  2067                           ;FastBuggy17_Main_Code_TUNING.c: 940: break;
  2068  000764  D048               	goto	l6969
  2069                           
  2070                           ;FastBuggy17_Main_Code_TUNING.c: 941: }
  2071                           ;FastBuggy17_Main_Code_TUNING.c: 943: }
  2072  000766  D03B               	goto	l6967
  2073  000768                     l6947:
  2074                           
  2075                           ;FastBuggy17_Main_Code_TUNING.c: 946: else if(CommandAvailable() == 1) {
  2076  000768  EC0B  F012         	call	_CommandAvailable	;wreg free
  2077  00076C  06E8               	decf	wreg,f,c
  2078  00076E  A4D8               	btfss	status,2,c
  2079  000770  D014               	goto	l6959
  2080                           
  2081                           ;FastBuggy17_Main_Code_TUNING.c: 947: command_msg = GetCommand();
  2082  000772  EC45  F012         	call	_GetCommand	;wreg free
  2083  000776  0101               	movlb	1	; () banked
  2084  000778  6F23               	movwf	main@command_msg& (0+255),b
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;FastBuggy17_Main_Code_TUNING.c: 948: if(command_msg == 0x03) {
  2088  00077A  0E03               	movlw	3
  2089  00077C  0101               	movlb	1	; () banked
  2090  00077E  1923               	xorwf	main@command_msg& (0+255),w,b
  2091  000780  A4D8               	btfss	status,2,c
  2092  000782  D004               	goto	l6955
  2093                           
  2094                           ; BSR set to: 1
  2095                           ;FastBuggy17_Main_Code_TUNING.c: 949: find_line_flag = 1;
  2096  000784  0E01               	movlw	1
  2097  000786  0101               	movlb	1	; () banked
  2098  000788  6F0A               	movwf	main@find_line_flag& (0+255),b
  2099                           
  2100                           ;FastBuggy17_Main_Code_TUNING.c: 950: }
  2101  00078A  D029               	goto	l6967
  2102  00078C                     l6955:
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;FastBuggy17_Main_Code_TUNING.c: 951: else if(command_msg == 0x04) {
  2106  00078C  0E04               	movlw	4
  2107  00078E  0101               	movlb	1	; () banked
  2108  000790  1923               	xorwf	main@command_msg& (0+255),w,b
  2109  000792  A4D8               	btfss	status,2,c
  2110  000794  D024               	goto	l6967
  2111  000796  D017               	goto	l6961
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;FastBuggy17_Main_Code_TUNING.c: 953: }
  2115                           ;FastBuggy17_Main_Code_TUNING.c: 955: }
  2116                           
  2117                           ; BSR set to: 1
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;FastBuggy17_Main_Code_TUNING.c: 952: stop_flag = 1;
  2121  000798  D022               	goto	l6967
  2122  00079A                     l6959:
  2123                           
  2124                           ;FastBuggy17_Main_Code_TUNING.c: 958: else if(PB1pressed() == 1 | PB2pressed() == 1) {
  2125  00079A  ECDD  F00C         	call	_PB2pressed	;wreg free
  2126  00079E  06E8               	decf	wreg,f,c
  2127  0007A0  A4D8               	btfss	status,2,c
  2128  0007A2  D002               	goto	u6220
  2129  0007A4  0E01               	movlw	1
  2130  0007A6  D001               	goto	u6222
  2131  0007A8                     u6220:
  2132  0007A8  0E00               	movlw	0
  2133  0007AA                     u6222:
  2134  0007AA  0100               	movlb	0	; () banked
  2135  0007AC  6FCB               	movwf	??_main& (0+255),b
  2136  0007AE  EC3B  F00D         	call	_PB1pressed	;wreg free
  2137  0007B2  06E8               	decf	wreg,f,c
  2138  0007B4  A4D8               	btfss	status,2,c
  2139  0007B6  D002               	goto	u6230
  2140  0007B8  0E01               	movlw	1
  2141  0007BA  D001               	goto	u6232
  2142  0007BC                     u6230:
  2143  0007BC  0E00               	movlw	0
  2144  0007BE                     u6232:
  2145  0007BE  0100               	movlb	0	; () banked
  2146  0007C0  11CB               	iorwf	??_main& (0+255),w,b
  2147  0007C2  A0E8               	btfss	wreg,0,c
  2148  0007C4  D004               	goto	l6963
  2149  0007C6                     l6961:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;FastBuggy17_Main_Code_TUNING.c: 959: stop_flag = 1;
  2153  0007C6  0E01               	movlw	1
  2154  0007C8  0101               	movlb	1	; () banked
  2155  0007CA  6F20               	movwf	main@stop_flag& (0+255),b
  2156                           
  2157                           ;FastBuggy17_Main_Code_TUNING.c: 960: }
  2158  0007CC  D008               	goto	l6967
  2159  0007CE                     l6963:
  2160                           
  2161                           ;FastBuggy17_Main_Code_TUNING.c: 991: else if(stop_flag == 1) {
  2162  0007CE  0101               	movlb	1	; () banked
  2163  0007D0  0520               	decf	main@stop_flag& (0+255),w,b
  2164  0007D2  A4D8               	btfss	status,2,c
  2165  0007D4  D004               	goto	l6967
  2166                           
  2167                           ; BSR set to: 1
  2168                           ;FastBuggy17_Main_Code_TUNING.c: 992: StopMotors();
  2169  0007D6  ECE2  F010         	call	_StopMotors	;wreg free
  2170                           
  2171                           ;FastBuggy17_Main_Code_TUNING.c: 993: break;
  2172  0007DA  D00D               	goto	l6969
  2173                           
  2174                           ;FastBuggy17_Main_Code_TUNING.c: 994: }
  2175                           ;FastBuggy17_Main_Code_TUNING.c: 997: while(ReadMillis1() < 25);
  2176  0007DC  D000               	goto	l6967
  2177  0007DE                     l6967:
  2178  0007DE  EC28  F012         	call	_ReadMillis1	;wreg free
  2179  0007E2  0100               	movlb	0	; () banked
  2180  0007E4  51B8               	movf	(?_ReadMillis1+1)& (0+255),w,b
  2181  0007E6  E106               	bnz	u6260
  2182  0007E8  0E19               	movlw	25
  2183  0007EA  0100               	movlb	0	; () banked
  2184  0007EC  5DB7               	subwf	?_ReadMillis1& (0+255),w,b
  2185  0007EE  B0D8               	btfsc	status,0,c
  2186  0007F0  D60A               	goto	l6845
  2187  0007F2  D7F5               	goto	l6967
  2188  0007F4                     u6260:
  2189                           
  2190                           ; BSR set to: 0
  2191                           
  2192                           ; BSR set to: 0
  2193  0007F4  D608               	goto	l6845
  2194  0007F6                     l6969:
  2195                           
  2196                           ;FastBuggy17_Main_Code_TUNING.c: 999: }
  2197                           ;FastBuggy17_Main_Code_TUNING.c: 1002: FlashLEDS();
  2198  0007F6  EC36  F010         	call	_FlashLEDS	;wreg free
  2199                           
  2200                           ;FastBuggy17_Main_Code_TUNING.c: 1003: LATJ = 0x03;
  2201  0007FA  0E03               	movlw	3
  2202  0007FC  6E91               	movwf	3985,c	;volatile
  2203                           
  2204                           ;FastBuggy17_Main_Code_TUNING.c: 1004: SendStatus(0x05);
  2205  0007FE  0E05               	movlw	5
  2206  000800  ECB8  F00E         	call	_SendStatus
  2207                           
  2208                           ;FastBuggy17_Main_Code_TUNING.c: 1006: Kp_stored = ReadIntEEPROM(0x0006);
  2209  000804  0E00               	movlw	0
  2210  000806  0100               	movlb	0	; () banked
  2211  000808  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2212  00080A  0E06               	movlw	6
  2213  00080C  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  2214  00080E  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  2215  000812  C0B9  F124         	movff	?_ReadIntEEPROM,main@Kp_stored
  2216  000816  C0BA  F125         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  2217                           
  2218                           ;FastBuggy17_Main_Code_TUNING.c: 1007: Kd_stored = ReadIntEEPROM(0x0009);
  2219  00081A  0E00               	movlw	0
  2220  00081C  0100               	movlb	0	; () banked
  2221  00081E  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2222  000820  0E09               	movlw	9
  2223  000822  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  2224  000824  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  2225  000828  C0B9  F126         	movff	?_ReadIntEEPROM,main@Kd_stored
  2226  00082C  C0BA  F127         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  2227                           
  2228                           ;FastBuggy17_Main_Code_TUNING.c: 1008: Ki_stored = ReadIntEEPROM(0x000C);
  2229  000830  0E00               	movlw	0
  2230  000832  0100               	movlb	0	; () banked
  2231  000834  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2232  000836  0E0C               	movlw	12
  2233  000838  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  2234  00083A  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  2235  00083E  C0B9  F128         	movff	?_ReadIntEEPROM,main@Ki_stored
  2236  000842  C0BA  F129         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  2237                           
  2238                           ;FastBuggy17_Main_Code_TUNING.c: 1010: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_stor
      +                          ed);
  2239  000846  C124  F0BF         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  2240  00084A  C125  F0C0         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  2241  00084E  C126  F0C1         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  2242  000852  C127  F0C2         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  2243  000856  C128  F0C3         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  2244  00085A  C129  F0C4         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  2245  00085E  ECA3  F00B         	call	_SendStoredPIDValues	;wreg free
  2246                           
  2247                           ;FastBuggy17_Main_Code_TUNING.c: 1012: SetPIDValues();
  2248  000862  EC44  F004         	call	_SetPIDValues	;wreg free
  2249                           
  2250                           ;FastBuggy17_Main_Code_TUNING.c: 1014: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  2251  000866  C07D  F0BF         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  2252  00086A  C07E  F0C0         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  2253  00086E  C079  F0C1         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  2254  000872  C07A  F0C2         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  2255  000876  C07B  F0C3         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  2256  00087A  C07C  F0C4         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  2257  00087E  EC0D  F00C         	call	_SendCurrentPIDValues	;wreg free
  2258  000882  D566               	goto	l6803
  2259  000884  EF76  F000         	goto	start
  2260  000888                     __end_of_main:
  2261                           	opt stack 0
  2262                           postinc0	equ	0xFEE
  2263                           wreg	equ	0xFE8
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function ___awdiv *****************
  2267 ;; Defined at:
  2268 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  dividend        2   16[BANK0 ] int 
  2271 ;;  divisor         2   18[BANK0 ] int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  quotient        2   22[BANK0 ] int 
  2274 ;;  sign            1   21[BANK0 ] unsigned char 
  2275 ;;  counter         1   20[BANK0 ] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2   16[BANK0 ] int 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        8 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    7
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text1
  2300  000E96                     __ptext1:
  2301                           	opt stack 0
  2302  000E96                     ___awdiv:
  2303                           	opt stack 23
  2304                           
  2305                           ;incstack = 0
  2306  000E96  0E00               	movlw	0
  2307  000E98  0100               	movlb	0	; () banked
  2308  000E9A  6FBC               	movwf	___awdiv@sign& (0+255),b
  2309                           
  2310                           ; BSR set to: 0
  2311  000E9C  0100               	movlb	0	; () banked
  2312  000E9E  AFBA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2313  000EA0  D009               	goto	l6495
  2314                           
  2315                           ; BSR set to: 0
  2316  000EA2  0100               	movlb	0	; () banked
  2317  000EA4  6DB9               	negf	___awdiv@divisor& (0+255),b
  2318  000EA6  1FBA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2319  000EA8  B0D8               	btfsc	status,0,c
  2320  000EAA  2BBA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2321                           
  2322                           ; BSR set to: 0
  2323  000EAC  0E01               	movlw	1
  2324  000EAE  0100               	movlb	0	; () banked
  2325  000EB0  6FBC               	movwf	___awdiv@sign& (0+255),b
  2326  000EB2  D000               	goto	l6495
  2327  000EB4                     l6495:
  2328                           
  2329                           ; BSR set to: 0
  2330  000EB4  0100               	movlb	0	; () banked
  2331  000EB6  AFB8               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2332  000EB8  D009               	goto	l6501
  2333                           
  2334                           ; BSR set to: 0
  2335  000EBA  0100               	movlb	0	; () banked
  2336  000EBC  6DB7               	negf	___awdiv@dividend& (0+255),b
  2337  000EBE  1FB8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2338  000EC0  B0D8               	btfsc	status,0,c
  2339  000EC2  2BB8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2340                           
  2341                           ; BSR set to: 0
  2342  000EC4  0E01               	movlw	1
  2343  000EC6  0100               	movlb	0	; () banked
  2344  000EC8  1BBC               	xorwf	___awdiv@sign& (0+255),f,b
  2345  000ECA  D000               	goto	l6501
  2346  000ECC                     l6501:
  2347                           
  2348                           ; BSR set to: 0
  2349  000ECC  0E00               	movlw	0
  2350  000ECE  0100               	movlb	0	; () banked
  2351  000ED0  6FBE               	movwf	(___awdiv@quotient+1)& (0+255),b
  2352  000ED2  0E00               	movlw	0
  2353  000ED4  6FBD               	movwf	___awdiv@quotient& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356  000ED6  0100               	movlb	0	; () banked
  2357  000ED8  51B9               	movf	___awdiv@divisor& (0+255),w,b
  2358  000EDA  0100               	movlb	0	; () banked
  2359  000EDC  11BA               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2360  000EDE  B4D8               	btfsc	status,2,c
  2361  000EE0  D031               	goto	l6523
  2362                           
  2363                           ; BSR set to: 0
  2364  000EE2  0E01               	movlw	1
  2365  000EE4  0100               	movlb	0	; () banked
  2366  000EE6  6FBB               	movwf	___awdiv@counter& (0+255),b
  2367  000EE8  D007               	goto	l6509
  2368  000EEA                     l6507:
  2369                           
  2370                           ; BSR set to: 0
  2371  000EEA  0100               	movlb	0	; () banked
  2372  000EEC  90D8               	bcf	status,0,c
  2373  000EEE  37B9               	rlcf	___awdiv@divisor& (0+255),f,b
  2374  000EF0  37BA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2375  000EF2  0100               	movlb	0	; () banked
  2376  000EF4  2BBB               	incf	___awdiv@counter& (0+255),f,b
  2377  000EF6  D000               	goto	l6509
  2378  000EF8                     l6509:
  2379                           
  2380                           ; BSR set to: 0
  2381  000EF8  0100               	movlb	0	; () banked
  2382  000EFA  BFBA               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2383  000EFC  D002               	goto	l6511
  2384  000EFE  D7F5               	goto	l6507
  2385                           
  2386                           ; BSR set to: 0
  2387  000F00  D000               	goto	l6511
  2388  000F02                     l6511:
  2389                           
  2390                           ; BSR set to: 0
  2391  000F02  0100               	movlb	0	; () banked
  2392  000F04  90D8               	bcf	status,0,c
  2393  000F06  37BD               	rlcf	___awdiv@quotient& (0+255),f,b
  2394  000F08  37BE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2395                           
  2396                           ; BSR set to: 0
  2397  000F0A  0100               	movlb	0	; () banked
  2398  000F0C  51B9               	movf	___awdiv@divisor& (0+255),w,b
  2399  000F0E  0100               	movlb	0	; () banked
  2400  000F10  5DB7               	subwf	___awdiv@dividend& (0+255),w,b
  2401  000F12  0100               	movlb	0	; () banked
  2402  000F14  51BA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2403  000F16  0100               	movlb	0	; () banked
  2404  000F18  59B8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2405  000F1A  A0D8               	btfss	status,0,c
  2406  000F1C  D00B               	goto	l6519
  2407                           
  2408                           ; BSR set to: 0
  2409  000F1E  0100               	movlb	0	; () banked
  2410  000F20  51B9               	movf	___awdiv@divisor& (0+255),w,b
  2411  000F22  0100               	movlb	0	; () banked
  2412  000F24  5FB7               	subwf	___awdiv@dividend& (0+255),f,b
  2413  000F26  0100               	movlb	0	; () banked
  2414  000F28  51BA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2415  000F2A  0100               	movlb	0	; () banked
  2416  000F2C  5BB8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2417                           
  2418                           ; BSR set to: 0
  2419  000F2E  0100               	movlb	0	; () banked
  2420  000F30  81BD               	bsf	___awdiv@quotient& (0+255),0,b
  2421  000F32  D000               	goto	l6519
  2422  000F34                     l6519:
  2423                           
  2424                           ; BSR set to: 0
  2425  000F34  0100               	movlb	0	; () banked
  2426  000F36  90D8               	bcf	status,0,c
  2427  000F38  33BA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2428  000F3A  33B9               	rrcf	___awdiv@divisor& (0+255),f,b
  2429                           
  2430                           ; BSR set to: 0
  2431  000F3C  0100               	movlb	0	; () banked
  2432  000F3E  2FBB               	decfsz	___awdiv@counter& (0+255),f,b
  2433  000F40  D7E0               	goto	l6511
  2434                           
  2435                           ; BSR set to: 0
  2436  000F42  D000               	goto	l6523
  2437  000F44                     l6523:
  2438                           
  2439                           ; BSR set to: 0
  2440  000F44  0100               	movlb	0	; () banked
  2441  000F46  51BC               	movf	___awdiv@sign& (0+255),w,b
  2442  000F48  0100               	movlb	0	; () banked
  2443  000F4A  B4D8               	btfsc	status,2,c
  2444  000F4C  D006               	goto	l6527
  2445                           
  2446                           ; BSR set to: 0
  2447  000F4E  0100               	movlb	0	; () banked
  2448  000F50  6DBD               	negf	___awdiv@quotient& (0+255),b
  2449  000F52  1FBE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2450  000F54  B0D8               	btfsc	status,0,c
  2451  000F56  2BBE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2452  000F58  D000               	goto	l6527
  2453  000F5A                     l6527:
  2454                           
  2455                           ; BSR set to: 0
  2456  000F5A  C0BD  F0B7         	movff	___awdiv@quotient,?___awdiv
  2457  000F5E  C0BE  F0B8         	movff	___awdiv@quotient+1,?___awdiv+1
  2458  000F62  D000               	goto	l1441
  2459  000F64                     l1441:
  2460                           
  2461                           ; BSR set to: 0
  2462  000F64  0012               	return		;funcret
  2463  000F66                     __end_of___awdiv:
  2464                           	opt stack 0
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _StopMotors *****************
  2470 ;; Defined at:
  2471 ;;		line 128 in file "Motors.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;		None               void
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    9
  2492 ;; This function calls:
  2493 ;;		_SetDCMotorL
  2494 ;;		_SetDCMotorR
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text2
  2501  0021C4                     __ptext2:
  2502                           	opt stack 0
  2503  0021C4                     _StopMotors:
  2504                           	opt stack 21
  2505                           
  2506                           ;Motors.c: 130: SetDCMotorR(526);
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;incstack = 0
  2510  0021C4  0E02               	movlw	2
  2511  0021C6  0100               	movlb	0	; () banked
  2512  0021C8  6FBE               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2513  0021CA  0E0E               	movlw	14
  2514  0021CC  6FBD               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2515  0021CE  ECF6  F011         	call	_SetDCMotorR	;wreg free
  2516                           
  2517                           ;Motors.c: 131: SetDCMotorL(526);
  2518  0021D2  0E02               	movlw	2
  2519  0021D4  0100               	movlb	0	; () banked
  2520  0021D6  6FBE               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2521  0021D8  0E0E               	movlw	14
  2522  0021DA  6FBD               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2523  0021DC  ECFD  F011         	call	_SetDCMotorL	;wreg free
  2524  0021E0  0012               	return		;funcret
  2525  0021E2                     __end_of_StopMotors:
  2526                           	opt stack 0
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _SetUnipolar *****************
  2532 ;; Defined at:
  2533 ;;		line 121 in file "Motors.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;		None               void
  2540 ;; Registers used:
  2541 ;;		None
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    7
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text3
  2562  00249A                     __ptext3:
  2563                           	opt stack 0
  2564  00249A                     _SetUnipolar:
  2565                           	opt stack 23
  2566                           
  2567                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2568                           
  2569                           ;incstack = 0
  2570  00249A  908C               	bcf	3980,0,c	;volatile
  2571                           
  2572                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2573  00249C  948C               	bcf	3980,2,c	;volatile
  2574  00249E  0012               	return		;funcret
  2575  0024A0                     __end_of_SetUnipolar:
  2576                           	opt stack 0
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _SetReverseMotorL *****************
  2582 ;; Defined at:
  2583 ;;		line 96 in file "Motors.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		None
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    7
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text4
  2612  0024AC                     __ptext4:
  2613                           	opt stack 0
  2614  0024AC                     _SetReverseMotorL:
  2615                           	opt stack 23
  2616                           
  2617                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2618                           
  2619                           ;incstack = 0
  2620  0024AC  968C               	bcf	3980,3,c	;volatile
  2621  0024AE  0012               	return		;funcret
  2622  0024B0                     __end_of_SetReverseMotorL:
  2623                           	opt stack 0
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _SetForwardsMotorR *****************
  2629 ;; Defined at:
  2630 ;;		line 78 in file "Motors.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;		None               void
  2637 ;; Registers used:
  2638 ;;		None
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    7
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text5
  2659  0024B0                     __ptext5:
  2660                           	opt stack 0
  2661  0024B0                     _SetForwardsMotorR:
  2662                           	opt stack 23
  2663                           
  2664                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2665                           
  2666                           ;incstack = 0
  2667  0024B0  828C               	bsf	3980,1,c	;volatile
  2668  0024B2  0012               	return		;funcret
  2669  0024B4                     __end_of_SetForwardsMotorR:
  2670                           	opt stack 0
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           status	equ	0xFD8
  2674                           
  2675 ;; *************** function _SetDirectionForward *****************
  2676 ;; Defined at:
  2677 ;;		line 64 in file "Motors.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		None
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    7
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text6
  2706  0024A0                     __ptext6:
  2707                           	opt stack 0
  2708  0024A0                     _SetDirectionForward:
  2709                           	opt stack 23
  2710                           
  2711                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2712                           
  2713                           ;incstack = 0
  2714  0024A0  868C               	bsf	3980,3,c	;volatile
  2715                           
  2716                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2717  0024A2  828C               	bsf	3980,1,c	;volatile
  2718  0024A4  0012               	return		;funcret
  2719  0024A6                     __end_of_SetDirectionForward:
  2720                           	opt stack 0
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _SetDCMotorPID *****************
  2726 ;; Defined at:
  2727 ;;		line 47 in file "Motors.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  PIDoutput       2   24[BANK0 ] int 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        4 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    9
  2748 ;; This function calls:
  2749 ;;		_SetDCMotorL
  2750 ;;		_SetDCMotorR
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text7
  2757  0010CA                     __ptext7:
  2758                           	opt stack 0
  2759  0010CA                     _SetDCMotorPID:
  2760                           	opt stack 21
  2761                           
  2762                           ;Motors.c: 49: if(PIDoutput < 0) {
  2763                           
  2764                           ;incstack = 0
  2765  0010CA  0100               	movlb	0	; () banked
  2766  0010CC  AFC0               	btfss	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2767  0010CE  D01D               	goto	l6245
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;Motors.c: 50: SetDCMotorL(100 - PIDoutput);
  2771  0010D0  C0BF  F0C1         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2772  0010D4  C0C0  F0C2         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2773  0010D8  0100               	movlb	0	; () banked
  2774  0010DA  1FC1               	comf	??_SetDCMotorPID& (0+255),f,b
  2775  0010DC  1FC2               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2776  0010DE  4BC1               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2777  0010E0  2BC2               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2778  0010E2  0E64               	movlw	100
  2779  0010E4  0100               	movlb	0	; () banked
  2780  0010E6  25C1               	addwf	??_SetDCMotorPID& (0+255),w,b
  2781  0010E8  0100               	movlb	0	; () banked
  2782  0010EA  6FBD               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2783  0010EC  0E00               	movlw	0
  2784  0010EE  0100               	movlb	0	; () banked
  2785  0010F0  21C2               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2786  0010F2  0100               	movlb	0	; () banked
  2787  0010F4  6FBE               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2788  0010F6  ECFD  F011         	call	_SetDCMotorL	;wreg free
  2789                           
  2790                           ;Motors.c: 51: SetDCMotorR(100);
  2791  0010FA  0E00               	movlw	0
  2792  0010FC  0100               	movlb	0	; () banked
  2793  0010FE  6FBE               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2794  001100  0E64               	movlw	100
  2795  001102  6FBD               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2796  001104  ECF6  F011         	call	_SetDCMotorR	;wreg free
  2797                           
  2798                           ;Motors.c: 52: }
  2799  001108  D033               	goto	l128
  2800  00110A                     l6245:
  2801                           
  2802                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2803  00110A  0100               	movlb	0	; () banked
  2804  00110C  BFC0               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2805  00110E  D01B               	goto	l6249
  2806  001110  0100               	movlb	0	; () banked
  2807  001112  51C0               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2808  001114  E104               	bnz	u5320
  2809  001116  0100               	movlb	0	; () banked
  2810  001118  05BF               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2811  00111A  A0D8               	btfss	status,0,c
  2812  00111C  D014               	goto	l6249
  2813  00111E                     u5320:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;Motors.c: 54: SetDCMotorL(100);
  2817  00111E  0E00               	movlw	0
  2818  001120  0100               	movlb	0	; () banked
  2819  001122  6FBE               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2820  001124  0E64               	movlw	100
  2821  001126  6FBD               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2822  001128  ECFD  F011         	call	_SetDCMotorL	;wreg free
  2823                           
  2824                           ;Motors.c: 55: SetDCMotorR(100 + PIDoutput);
  2825  00112C  0E64               	movlw	100
  2826  00112E  0100               	movlb	0	; () banked
  2827  001130  25BF               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2828  001132  0100               	movlb	0	; () banked
  2829  001134  6FBD               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2830  001136  0E00               	movlw	0
  2831  001138  0100               	movlb	0	; () banked
  2832  00113A  21C0               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2833  00113C  0100               	movlb	0	; () banked
  2834  00113E  6FBE               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2835  001140  ECF6  F011         	call	_SetDCMotorR	;wreg free
  2836                           
  2837                           ;Motors.c: 56: }
  2838  001144  D015               	goto	l128
  2839  001146                     l6249:
  2840                           
  2841                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2842  001146  0100               	movlb	0	; () banked
  2843  001148  51BF               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2844  00114A  0100               	movlb	0	; () banked
  2845  00114C  11C0               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2846  00114E  A4D8               	btfss	status,2,c
  2847  001150  D00F               	goto	l128
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;Motors.c: 58: SetDCMotorL(100);
  2851  001152  0E00               	movlw	0
  2852  001154  0100               	movlb	0	; () banked
  2853  001156  6FBE               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2854  001158  0E64               	movlw	100
  2855  00115A  6FBD               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2856  00115C  ECFD  F011         	call	_SetDCMotorL	;wreg free
  2857                           
  2858                           ;Motors.c: 59: SetDCMotorR(100);
  2859  001160  0E00               	movlw	0
  2860  001162  0100               	movlb	0	; () banked
  2861  001164  6FBE               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2862  001166  0E64               	movlw	100
  2863  001168  6FBD               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2864  00116A  ECF6  F011         	call	_SetDCMotorR	;wreg free
  2865  00116E  D000               	goto	l128
  2866  001170                     l128:
  2867  001170  0012               	return		;funcret
  2868  001172                     __end_of_SetDCMotorPID:
  2869                           	opt stack 0
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _SetDCMotorR *****************
  2875 ;; Defined at:
  2876 ;;		line 19 in file "Motors.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;		None               void
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:        2 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    8
  2897 ;; This function calls:
  2898 ;;		_SetDCPWM4
  2899 ;; This function is called by:
  2900 ;;		_SetDCMotorPID
  2901 ;;		_StopMotors
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text8
  2907  0023EC                     __ptext8:
  2908                           	opt stack 0
  2909  0023EC                     _SetDCMotorR:
  2910                           	opt stack 21
  2911                           
  2912                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2913                           
  2914                           ;incstack = 0
  2915  0023EC  C0BD  F0B7         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2916  0023F0  C0BE  F0B8         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2917  0023F4  ECB7  F00D         	call	_SetDCPWM4	;wreg free
  2918  0023F8  0012               	return		;funcret
  2919  0023FA                     __end_of_SetDCMotorR:
  2920                           	opt stack 0
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           status	equ	0xFD8
  2924                           
  2925 ;; *************** function _SetDCPWM4 *****************
  2926 ;; Defined at:
  2927 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2932 ;; Return value:  Size  Location     Type
  2933 ;;		None               void
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2941 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;Total ram usage:        6 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    7
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_SetDCMotorR
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text9
  2956  001B6E                     __ptext9:
  2957                           	opt stack 0
  2958  001B6E                     _SetDCPWM4:
  2959                           	opt stack 21
  2960                           
  2961                           ;incstack = 0
  2962  001B6E  C0B7  F0B9         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2963  001B72  C0B8  F0BA         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2964  001B76  0E06               	movlw	6
  2965  001B78                     u4755:
  2966  001B78  90D8               	bcf	status,0,c
  2967  001B7A  0100               	movlb	0	; () banked
  2968  001B7C  37B9               	rlcf	??_SetDCPWM4& (0+255),f,b
  2969  001B7E  37BA               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2970  001B80  2EE8               	decfsz	wreg,f,c
  2971  001B82  D7FA               	goto	u4755
  2972  001B84  C0B9  F0BB         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  2973  001B88  C0BA  F0BC         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  2974                           
  2975                           ; BSR set to: 0
  2976  001B8C  C0BC  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  2977  001B90  C0BB  F0B9         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  2978  001B94  0100               	movlb	0	; () banked
  2979  001B96  90D8               	bcf	status,0,c
  2980  001B98  33B9               	rrcf	??_SetDCPWM4& (0+255),f,b
  2981  001B9A  0100               	movlb	0	; () banked
  2982  001B9C  90D8               	bcf	status,0,c
  2983  001B9E  33B9               	rrcf	??_SetDCPWM4& (0+255),f,b
  2984  001BA0  0E30               	movlw	48
  2985  001BA2  0100               	movlb	0	; () banked
  2986  001BA4  17B9               	andwf	??_SetDCPWM4& (0+255),f,b
  2987  001BA6  5073               	movf	3955,w,c	;volatile
  2988  001BA8  0BCF               	andlw	207
  2989  001BAA  0100               	movlb	0	; () banked
  2990  001BAC  11B9               	iorwf	??_SetDCPWM4& (0+255),w,b
  2991  001BAE  6E73               	movwf	3955,c	;volatile
  2992                           
  2993                           ; BSR set to: 0
  2994  001BB0  0012               	return		;funcret
  2995  001BB2                     __end_of_SetDCPWM4:
  2996                           	opt stack 0
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _SetDCMotorL *****************
  3002 ;; Defined at:
  3003 ;;		line 6 in file "Motors.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        2 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    8
  3024 ;; This function calls:
  3025 ;;		_SetDCPWM5
  3026 ;; This function is called by:
  3027 ;;		_SetDCMotorPID
  3028 ;;		_StopMotors
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text10
  3034  0023FA                     __ptext10:
  3035                           	opt stack 0
  3036  0023FA                     _SetDCMotorL:
  3037                           	opt stack 21
  3038                           
  3039                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;incstack = 0
  3043  0023FA  C0BD  F0B7         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  3044  0023FE  C0BE  F0B8         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  3045  002402  ECD9  F00D         	call	_SetDCPWM5	;wreg free
  3046  002406  0012               	return		;funcret
  3047  002408                     __end_of_SetDCMotorL:
  3048                           	opt stack 0
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _SetDCPWM5 *****************
  3054 ;; Defined at:
  3055 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3060 ;; Return value:  Size  Location     Type
  3061 ;;		None               void
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;Total ram usage:        6 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    7
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_SetDCMotorL
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text11
  3084  001BB2                     __ptext11:
  3085                           	opt stack 0
  3086  001BB2                     _SetDCPWM5:
  3087                           	opt stack 21
  3088                           
  3089                           ;incstack = 0
  3090  001BB2  C0B7  F0B9         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  3091  001BB6  C0B8  F0BA         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  3092  001BBA  0E06               	movlw	6
  3093  001BBC                     u4745:
  3094  001BBC  90D8               	bcf	status,0,c
  3095  001BBE  0100               	movlb	0	; () banked
  3096  001BC0  37B9               	rlcf	??_SetDCPWM5& (0+255),f,b
  3097  001BC2  37BA               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  3098  001BC4  2EE8               	decfsz	wreg,f,c
  3099  001BC6  D7FA               	goto	u4745
  3100  001BC8  C0B9  F0BB         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  3101  001BCC  C0BA  F0BC         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  3102                           
  3103                           ; BSR set to: 0
  3104  001BD0  C0BC  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  3105  001BD4  C0BB  F0B9         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  3106  001BD8  0100               	movlb	0	; () banked
  3107  001BDA  90D8               	bcf	status,0,c
  3108  001BDC  33B9               	rrcf	??_SetDCPWM5& (0+255),f,b
  3109  001BDE  0100               	movlb	0	; () banked
  3110  001BE0  90D8               	bcf	status,0,c
  3111  001BE2  33B9               	rrcf	??_SetDCPWM5& (0+255),f,b
  3112  001BE4  0E30               	movlw	48
  3113  001BE6  0100               	movlb	0	; () banked
  3114  001BE8  17B9               	andwf	??_SetDCPWM5& (0+255),f,b
  3115  001BEA  5070               	movf	3952,w,c	;volatile
  3116  001BEC  0BCF               	andlw	207
  3117  001BEE  0100               	movlb	0	; () banked
  3118  001BF0  11B9               	iorwf	??_SetDCPWM5& (0+255),w,b
  3119  001BF2  6E70               	movwf	3952,c	;volatile
  3120                           
  3121                           ; BSR set to: 0
  3122  001BF4  0012               	return		;funcret
  3123  001BF6                     __end_of_SetDCPWM5:
  3124                           	opt stack 0
  3125                           postinc0	equ	0xFEE
  3126                           wreg	equ	0xFE8
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _SendStoredPIDValues *****************
  3130 ;; Defined at:
  3131 ;;		line 223 in file "Wireless.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  Kp              2   24[BANK0 ] int 
  3134 ;;  Kd              2   26[BANK0 ] int 
  3135 ;;  Ki              2   28[BANK0 ] int 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;		None               void
  3140 ;; Registers used:
  3141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        6 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    9
  3154 ;; This function calls:
  3155 ;;		_BusyTx
  3156 ;;		_FlushTxBuf
  3157 ;;		_PutCharTxBuf
  3158 ;;		_StartTx
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text12
  3165  001746                     __ptext12:
  3166                           	opt stack 0
  3167  001746                     _SendStoredPIDValues:
  3168                           	opt stack 21
  3169                           
  3170                           ;Wireless.c: 224: while(BusyTx());
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;incstack = 0
  3174  001746  D000               	goto	l6339
  3175  001748                     l6339:
  3176  001748  ECCE  F011         	call	_BusyTx	;wreg free
  3177  00174C  0900               	iorlw	0
  3178  00174E  A4D8               	btfss	status,2,c
  3179  001750  D7FB               	goto	l6339
  3180                           
  3181                           ;Wireless.c: 225: FlushTxBuf();
  3182  001752  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3183                           
  3184                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3185  001756  0EAA               	movlw	170
  3186  001758  EC1C  F00E         	call	_PutCharTxBuf
  3187                           
  3188                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3189  00175C  0E42               	movlw	66
  3190  00175E  EC1C  F00E         	call	_PutCharTxBuf
  3191                           
  3192                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3193  001762  0100               	movlb	0	; () banked
  3194  001764  51C0               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3195  001766  EC1C  F00E         	call	_PutCharTxBuf
  3196                           
  3197                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3198  00176A  0100               	movlb	0	; () banked
  3199  00176C  51BF               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3200  00176E  EC1C  F00E         	call	_PutCharTxBuf
  3201                           
  3202                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3203  001772  0100               	movlb	0	; () banked
  3204  001774  51C2               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3205  001776  EC1C  F00E         	call	_PutCharTxBuf
  3206                           
  3207                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3208  00177A  0100               	movlb	0	; () banked
  3209  00177C  51C1               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3210  00177E  EC1C  F00E         	call	_PutCharTxBuf
  3211                           
  3212                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3213  001782  0100               	movlb	0	; () banked
  3214  001784  51C4               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3215  001786  EC1C  F00E         	call	_PutCharTxBuf
  3216                           
  3217                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3218  00178A  0100               	movlb	0	; () banked
  3219  00178C  51C3               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3220  00178E  EC1C  F00E         	call	_PutCharTxBuf
  3221                           
  3222                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3223  001792  0E0D               	movlw	13
  3224  001794  EC1C  F00E         	call	_PutCharTxBuf
  3225                           
  3226                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3227  001798  0E0A               	movlw	10
  3228  00179A  EC1C  F00E         	call	_PutCharTxBuf
  3229                           
  3230                           ;Wireless.c: 239: while (BusyTx());
  3231  00179E  D000               	goto	l6343
  3232  0017A0                     l6343:
  3233  0017A0  ECCE  F011         	call	_BusyTx	;wreg free
  3234  0017A4  0900               	iorlw	0
  3235  0017A6  A4D8               	btfss	status,2,c
  3236  0017A8  D7FB               	goto	l6343
  3237                           
  3238                           ;Wireless.c: 240: StartTx();
  3239  0017AA  EC41  F012         	call	_StartTx	;wreg free
  3240  0017AE  0012               	return		;funcret
  3241  0017B0                     __end_of_SendStoredPIDValues:
  3242                           	opt stack 0
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _SendPIDSetPointOnLine *****************
  3248 ;; Defined at:
  3249 ;;		line 337 in file "Wireless.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  set_point       2   24[BANK0 ] PTR const int 
  3252 ;;		 -> PID_set_point(2), 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;		None               void
  3257 ;; Registers used:
  3258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:        4 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    9
  3271 ;; This function calls:
  3272 ;;		_BusyTx
  3273 ;;		_FlushTxBuf
  3274 ;;		_PutCharTxBuf
  3275 ;;		_StartTx
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text13
  3282  00166E                     __ptext13:
  3283                           	opt stack 0
  3284  00166E                     _SendPIDSetPointOnLine:
  3285                           	opt stack 21
  3286                           
  3287                           ;Wireless.c: 338: while(BusyTx());
  3288                           
  3289                           ;incstack = 0
  3290  00166E  D000               	goto	l6369
  3291  001670                     l6369:
  3292  001670  ECCE  F011         	call	_BusyTx	;wreg free
  3293  001674  0900               	iorlw	0
  3294  001676  A4D8               	btfss	status,2,c
  3295  001678  D7FB               	goto	l6369
  3296                           
  3297                           ;Wireless.c: 339: FlushTxBuf();
  3298  00167A  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3299                           
  3300                           ;Wireless.c: 341: PutCharTxBuf(0xAA);
  3301  00167E  0EAA               	movlw	170
  3302  001680  EC1C  F00E         	call	_PutCharTxBuf
  3303                           
  3304                           ;Wireless.c: 342: PutCharTxBuf(0x07);
  3305  001684  0E07               	movlw	7
  3306  001686  EC1C  F00E         	call	_PutCharTxBuf
  3307                           
  3308                           ;Wireless.c: 344: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3309  00168A  C0BF  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3310  00168E  C0C0  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3311  001692  CFDE F0C1          	movff	postinc2,??_SendPIDSetPointOnLine
  3312  001696  CFDD F0C2          	movff	postdec2,??_SendPIDSetPointOnLine+1
  3313  00169A  C0C2  F0C1         	movff	??_SendPIDSetPointOnLine+1,??_SendPIDSetPointOnLine
  3314  00169E  0100               	movlb	0	; () banked
  3315  0016A0  6BC2               	clrf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3316  0016A2  BFC1               	btfsc	??_SendPIDSetPointOnLine& (0+255),7,b
  3317  0016A4  69C2               	setf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3318  0016A6  0100               	movlb	0	; () banked
  3319  0016A8  51C1               	movf	??_SendPIDSetPointOnLine& (0+255),w,b
  3320  0016AA  EC1C  F00E         	call	_PutCharTxBuf
  3321                           
  3322                           ;Wireless.c: 345: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3323  0016AE  C0BF  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3324  0016B2  C0C0  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3325  0016B6  50DF               	movf	indf2,w,c
  3326  0016B8  EC1C  F00E         	call	_PutCharTxBuf
  3327                           
  3328                           ;Wireless.c: 347: PutCharTxBuf('\r');
  3329  0016BC  0E0D               	movlw	13
  3330  0016BE  EC1C  F00E         	call	_PutCharTxBuf
  3331                           
  3332                           ;Wireless.c: 348: PutCharTxBuf('\n');
  3333  0016C2  0E0A               	movlw	10
  3334  0016C4  EC1C  F00E         	call	_PutCharTxBuf
  3335                           
  3336                           ;Wireless.c: 349: while (BusyTx());
  3337  0016C8  D000               	goto	l6373
  3338  0016CA                     l6373:
  3339  0016CA  ECCE  F011         	call	_BusyTx	;wreg free
  3340  0016CE  0900               	iorlw	0
  3341  0016D0  A4D8               	btfss	status,2,c
  3342  0016D2  D7FB               	goto	l6373
  3343                           
  3344                           ;Wireless.c: 350: StartTx();
  3345  0016D4  EC41  F012         	call	_StartTx	;wreg free
  3346  0016D8  0012               	return		;funcret
  3347  0016DA                     __end_of_SendPIDSetPointOnLine:
  3348                           	opt stack 0
  3349                           postinc0	equ	0xFEE
  3350                           wreg	equ	0xFE8
  3351                           indf2	equ	0xFDF
  3352                           postinc2	equ	0xFDE
  3353                           postdec2	equ	0xFDD
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _SendPIDSetPointOffLine *****************
  3359 ;; Defined at:
  3360 ;;		line 354 in file "Wireless.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  set_point       2   24[BANK0 ] PTR const int 
  3363 ;;		 -> off_line_sum(2), 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;		None               void
  3368 ;; Registers used:
  3369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;Total ram usage:        4 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    9
  3382 ;; This function calls:
  3383 ;;		_BusyTx
  3384 ;;		_FlushTxBuf
  3385 ;;		_PutCharTxBuf
  3386 ;;		_StartTx
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text14
  3393  0016DA                     __ptext14:
  3394                           	opt stack 0
  3395  0016DA                     _SendPIDSetPointOffLine:
  3396                           	opt stack 21
  3397                           
  3398                           ;Wireless.c: 355: while(BusyTx());
  3399                           
  3400                           ;incstack = 0
  3401  0016DA  D000               	goto	l6379
  3402  0016DC                     l6379:
  3403  0016DC  ECCE  F011         	call	_BusyTx	;wreg free
  3404  0016E0  0900               	iorlw	0
  3405  0016E2  A4D8               	btfss	status,2,c
  3406  0016E4  D7FB               	goto	l6379
  3407                           
  3408                           ;Wireless.c: 356: FlushTxBuf();
  3409  0016E6  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3410                           
  3411                           ;Wireless.c: 358: PutCharTxBuf(0xAA);
  3412  0016EA  0EAA               	movlw	170
  3413  0016EC  EC1C  F00E         	call	_PutCharTxBuf
  3414                           
  3415                           ;Wireless.c: 359: PutCharTxBuf(0x08);
  3416  0016F0  0E08               	movlw	8
  3417  0016F2  EC1C  F00E         	call	_PutCharTxBuf
  3418                           
  3419                           ;Wireless.c: 361: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3420  0016F6  C0BF  FFD9         	movff	SendPIDSetPointOffLine@set_point,fsr2l
  3421  0016FA  C0C0  FFDA         	movff	SendPIDSetPointOffLine@set_point+1,fsr2h
  3422  0016FE  CFDE F0C1          	movff	postinc2,??_SendPIDSetPointOffLine
  3423  001702  CFDD F0C2          	movff	postdec2,??_SendPIDSetPointOffLine+1
  3424  001706  C0C2  F0C1         	movff	??_SendPIDSetPointOffLine+1,??_SendPIDSetPointOffLine
  3425  00170A  0100               	movlb	0	; () banked
  3426  00170C  6BC2               	clrf	(??_SendPIDSetPointOffLine+1)& (0+255),b
  3427  00170E  BFC1               	btfsc	??_SendPIDSetPointOffLine& (0+255),7,b
  3428  001710  69C2               	setf	(??_SendPIDSetPointOffLine+1)& (0+255),b
  3429  001712  0100               	movlb	0	; () banked
  3430  001714  51C1               	movf	??_SendPIDSetPointOffLine& (0+255),w,b
  3431  001716  EC1C  F00E         	call	_PutCharTxBuf
  3432                           
  3433                           ;Wireless.c: 362: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3434  00171A  C0BF  FFD9         	movff	SendPIDSetPointOffLine@set_point,fsr2l
  3435  00171E  C0C0  FFDA         	movff	SendPIDSetPointOffLine@set_point+1,fsr2h
  3436  001722  50DF               	movf	indf2,w,c
  3437  001724  EC1C  F00E         	call	_PutCharTxBuf
  3438                           
  3439                           ;Wireless.c: 364: PutCharTxBuf('\r');
  3440  001728  0E0D               	movlw	13
  3441  00172A  EC1C  F00E         	call	_PutCharTxBuf
  3442                           
  3443                           ;Wireless.c: 365: PutCharTxBuf('\n');
  3444  00172E  0E0A               	movlw	10
  3445  001730  EC1C  F00E         	call	_PutCharTxBuf
  3446                           
  3447                           ;Wireless.c: 366: while (BusyTx());
  3448  001734  D000               	goto	l6383
  3449  001736                     l6383:
  3450  001736  ECCE  F011         	call	_BusyTx	;wreg free
  3451  00173A  0900               	iorlw	0
  3452  00173C  A4D8               	btfss	status,2,c
  3453  00173E  D7FB               	goto	l6383
  3454                           
  3455                           ;Wireless.c: 367: StartTx();
  3456  001740  EC41  F012         	call	_StartTx	;wreg free
  3457  001744  0012               	return		;funcret
  3458  001746                     __end_of_SendPIDSetPointOffLine:
  3459                           	opt stack 0
  3460                           postinc0	equ	0xFEE
  3461                           wreg	equ	0xFE8
  3462                           indf2	equ	0xFDF
  3463                           postinc2	equ	0xFDE
  3464                           postdec2	equ	0xFDD
  3465                           fsr2h	equ	0xFDA
  3466                           fsr2l	equ	0xFD9
  3467                           status	equ	0xFD8
  3468                           
  3469 ;; *************** function _SendOffsets *****************
  3470 ;; Defined at:
  3471 ;;		line 165 in file "Wireless.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  3474 ;;		 -> sensor_offsets(10), 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  index           1   28[BANK0 ] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;		None               void
  3479 ;; Registers used:
  3480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;Total ram usage:        5 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    9
  3493 ;; This function calls:
  3494 ;;		_BusyTx
  3495 ;;		_FlushTxBuf
  3496 ;;		_PutCharTxBuf
  3497 ;;		_StartTx
  3498 ;; This function is called by:
  3499 ;;		_main
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text15
  3504  0012BE                     __ptext15:
  3505                           	opt stack 0
  3506  0012BE                     _SendOffsets:
  3507                           	opt stack 21
  3508                           
  3509                           ;Wireless.c: 166: unsigned char index;
  3510                           ;Wireless.c: 168: while(BusyTx());
  3511                           
  3512                           ;incstack = 0
  3513  0012BE  D000               	goto	l6305
  3514  0012C0                     l6305:
  3515  0012C0  ECCE  F011         	call	_BusyTx	;wreg free
  3516  0012C4  0900               	iorlw	0
  3517  0012C6  A4D8               	btfss	status,2,c
  3518  0012C8  D7FB               	goto	l6305
  3519                           
  3520                           ;Wireless.c: 169: FlushTxBuf();
  3521  0012CA  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3522                           
  3523                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  3524  0012CE  0EAA               	movlw	170
  3525  0012D0  EC1C  F00E         	call	_PutCharTxBuf
  3526                           
  3527                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  3528  0012D4  0E21               	movlw	33
  3529  0012D6  EC1C  F00E         	call	_PutCharTxBuf
  3530                           
  3531                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  3532  0012DA  0E00               	movlw	0
  3533  0012DC  0100               	movlb	0	; () banked
  3534  0012DE  6FC3               	movwf	SendOffsets@index& (0+255),b
  3535  0012E0                     l6311:
  3536                           
  3537                           ; BSR set to: 0
  3538  0012E0  0E04               	movlw	4
  3539  0012E2  0100               	movlb	0	; () banked
  3540  0012E4  65C3               	cpfsgt	SendOffsets@index& (0+255),b
  3541  0012E6  D001               	goto	l6315
  3542                           
  3543                           ; BSR set to: 0
  3544  0012E8  D02C               	goto	l6321
  3545  0012EA                     l6315:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3549  0012EA  0100               	movlb	0	; () banked
  3550  0012EC  51C3               	movf	SendOffsets@index& (0+255),w,b
  3551  0012EE  0D02               	mullw	2
  3552  0012F0  50F3               	movf	prodl,w,c
  3553  0012F2  0100               	movlb	0	; () banked
  3554  0012F4  25BF               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3555  0012F6  6ED9               	movwf	fsr2l,c
  3556  0012F8  50F4               	movf	prodh,w,c
  3557  0012FA  0100               	movlb	0	; () banked
  3558  0012FC  21C0               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3559  0012FE  6EDA               	movwf	fsr2h,c
  3560  001300  CFDE F0C1          	movff	postinc2,??_SendOffsets
  3561  001304  CFDD F0C2          	movff	postdec2,??_SendOffsets+1
  3562  001308  C0C2  F0C1         	movff	??_SendOffsets+1,??_SendOffsets
  3563  00130C  0100               	movlb	0	; () banked
  3564  00130E  6BC2               	clrf	(??_SendOffsets+1)& (0+255),b
  3565  001310  BFC1               	btfsc	??_SendOffsets& (0+255),7,b
  3566  001312  69C2               	setf	(??_SendOffsets+1)& (0+255),b
  3567  001314  0100               	movlb	0	; () banked
  3568  001316  51C1               	movf	??_SendOffsets& (0+255),w,b
  3569  001318  EC1C  F00E         	call	_PutCharTxBuf
  3570                           
  3571                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3572  00131C  0100               	movlb	0	; () banked
  3573  00131E  51C3               	movf	SendOffsets@index& (0+255),w,b
  3574  001320  0D02               	mullw	2
  3575  001322  50F3               	movf	prodl,w,c
  3576  001324  0100               	movlb	0	; () banked
  3577  001326  25BF               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3578  001328  6ED9               	movwf	fsr2l,c
  3579  00132A  50F4               	movf	prodh,w,c
  3580  00132C  0100               	movlb	0	; () banked
  3581  00132E  21C0               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3582  001330  6EDA               	movwf	fsr2h,c
  3583  001332  50DF               	movf	indf2,w,c
  3584  001334  0DFF               	mullw	255
  3585  001336  50F3               	movf	prodl,w,c
  3586  001338  EC1C  F00E         	call	_PutCharTxBuf
  3587  00133C  0100               	movlb	0	; () banked
  3588  00133E  2BC3               	incf	SendOffsets@index& (0+255),f,b
  3589  001340  D7CF               	goto	l6311
  3590  001342                     l6321:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;Wireless.c: 177: }
  3594                           ;Wireless.c: 179: PutCharTxBuf('\r');
  3595  001342  0E0D               	movlw	13
  3596  001344  EC1C  F00E         	call	_PutCharTxBuf
  3597                           
  3598                           ;Wireless.c: 180: PutCharTxBuf('\n');
  3599  001348  0E0A               	movlw	10
  3600  00134A  EC1C  F00E         	call	_PutCharTxBuf
  3601                           
  3602                           ;Wireless.c: 181: while(BusyTx());
  3603  00134E  D000               	goto	l6323
  3604  001350                     l6323:
  3605  001350  ECCE  F011         	call	_BusyTx	;wreg free
  3606  001354  0900               	iorlw	0
  3607  001356  A4D8               	btfss	status,2,c
  3608  001358  D7FB               	goto	l6323
  3609                           
  3610                           ;Wireless.c: 182: StartTx();
  3611  00135A  EC41  F012         	call	_StartTx	;wreg free
  3612  00135E  0012               	return		;funcret
  3613  001360                     __end_of_SendOffsets:
  3614                           	opt stack 0
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           postinc0	equ	0xFEE
  3618                           wreg	equ	0xFE8
  3619                           indf2	equ	0xFDF
  3620                           postinc2	equ	0xFDE
  3621                           postdec2	equ	0xFDD
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _SendLineMode *****************
  3627 ;; Defined at:
  3628 ;;		line 152 in file "Wireless.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3631 ;;		 -> line_mode(1), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;		None               void
  3636 ;; Registers used:
  3637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;Total ram usage:        2 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    9
  3650 ;; This function calls:
  3651 ;;		_BusyTx
  3652 ;;		_FlushTxBuf
  3653 ;;		_PutCharTxBuf
  3654 ;;		_StartTx
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text16
  3661  001CFA                     __ptext16:
  3662                           	opt stack 0
  3663  001CFA                     _SendLineMode:
  3664                           	opt stack 21
  3665                           
  3666                           ;Wireless.c: 153: while(BusyTx());
  3667                           
  3668                           ;incstack = 0
  3669  001CFA  D000               	goto	l6297
  3670  001CFC                     l6297:
  3671  001CFC  ECCE  F011         	call	_BusyTx	;wreg free
  3672  001D00  0900               	iorlw	0
  3673  001D02  A4D8               	btfss	status,2,c
  3674  001D04  D7FB               	goto	l6297
  3675                           
  3676                           ;Wireless.c: 154: FlushTxBuf();
  3677  001D06  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3678                           
  3679                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3680  001D0A  0EAA               	movlw	170
  3681  001D0C  EC1C  F00E         	call	_PutCharTxBuf
  3682                           
  3683                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3684  001D10  0E11               	movlw	17
  3685  001D12  EC1C  F00E         	call	_PutCharTxBuf
  3686                           
  3687                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3688  001D16  C0BF  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3689  001D1A  C0C0  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3690  001D1E  50DF               	movf	indf2,w,c
  3691  001D20  EC1C  F00E         	call	_PutCharTxBuf
  3692                           
  3693                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3694  001D24  0E0D               	movlw	13
  3695  001D26  EC1C  F00E         	call	_PutCharTxBuf
  3696                           
  3697                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3698  001D2A  0E0A               	movlw	10
  3699  001D2C  EC1C  F00E         	call	_PutCharTxBuf
  3700                           
  3701                           ;Wireless.c: 162: StartTx();
  3702  001D30  EC41  F012         	call	_StartTx	;wreg free
  3703  001D34  0012               	return		;funcret
  3704  001D36                     __end_of_SendLineMode:
  3705                           	opt stack 0
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           indf2	equ	0xFDF
  3711                           postinc2	equ	0xFDE
  3712                           postdec2	equ	0xFDD
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _SendDefaultPIDValues *****************
  3718 ;; Defined at:
  3719 ;;		line 203 in file "Wireless.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  Kp              2   24[BANK0 ] int 
  3722 ;;  Kd              2   26[BANK0 ] int 
  3723 ;;  Ki              2   28[BANK0 ] int 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;		None               void
  3728 ;; Registers used:
  3729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:        6 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    9
  3742 ;; This function calls:
  3743 ;;		_BusyTx
  3744 ;;		_FlushTxBuf
  3745 ;;		_PutCharTxBuf
  3746 ;;		_StartTx
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text17
  3753  0017B0                     __ptext17:
  3754                           	opt stack 0
  3755  0017B0                     _SendDefaultPIDValues:
  3756                           	opt stack 21
  3757                           
  3758                           ;Wireless.c: 204: while(BusyTx());
  3759                           
  3760                           ;incstack = 0
  3761  0017B0  D000               	goto	l6329
  3762  0017B2                     l6329:
  3763  0017B2  ECCE  F011         	call	_BusyTx	;wreg free
  3764  0017B6  0900               	iorlw	0
  3765  0017B8  A4D8               	btfss	status,2,c
  3766  0017BA  D7FB               	goto	l6329
  3767                           
  3768                           ;Wireless.c: 205: FlushTxBuf();
  3769  0017BC  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3770                           
  3771                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3772  0017C0  0EAA               	movlw	170
  3773  0017C2  EC1C  F00E         	call	_PutCharTxBuf
  3774                           
  3775                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3776  0017C6  0E41               	movlw	65
  3777  0017C8  EC1C  F00E         	call	_PutCharTxBuf
  3778                           
  3779                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3780  0017CC  0100               	movlb	0	; () banked
  3781  0017CE  51C0               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3782  0017D0  EC1C  F00E         	call	_PutCharTxBuf
  3783                           
  3784                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3785  0017D4  0100               	movlb	0	; () banked
  3786  0017D6  51BF               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3787  0017D8  EC1C  F00E         	call	_PutCharTxBuf
  3788                           
  3789                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3790  0017DC  0100               	movlb	0	; () banked
  3791  0017DE  51C2               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3792  0017E0  EC1C  F00E         	call	_PutCharTxBuf
  3793                           
  3794                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3795  0017E4  0100               	movlb	0	; () banked
  3796  0017E6  51C1               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3797  0017E8  EC1C  F00E         	call	_PutCharTxBuf
  3798                           
  3799                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3800  0017EC  0100               	movlb	0	; () banked
  3801  0017EE  51C4               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3802  0017F0  EC1C  F00E         	call	_PutCharTxBuf
  3803                           
  3804                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3805  0017F4  0100               	movlb	0	; () banked
  3806  0017F6  51C3               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3807  0017F8  EC1C  F00E         	call	_PutCharTxBuf
  3808                           
  3809                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3810  0017FC  0E0D               	movlw	13
  3811  0017FE  EC1C  F00E         	call	_PutCharTxBuf
  3812                           
  3813                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3814  001802  0E0A               	movlw	10
  3815  001804  EC1C  F00E         	call	_PutCharTxBuf
  3816                           
  3817                           ;Wireless.c: 219: while (BusyTx());
  3818  001808  D000               	goto	l6333
  3819  00180A                     l6333:
  3820  00180A  ECCE  F011         	call	_BusyTx	;wreg free
  3821  00180E  0900               	iorlw	0
  3822  001810  A4D8               	btfss	status,2,c
  3823  001812  D7FB               	goto	l6333
  3824                           
  3825                           ;Wireless.c: 220: StartTx();
  3826  001814  EC41  F012         	call	_StartTx	;wreg free
  3827  001818  0012               	return		;funcret
  3828  00181A                     __end_of_SendDefaultPIDValues:
  3829                           	opt stack 0
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           postinc0	equ	0xFEE
  3833                           wreg	equ	0xFE8
  3834                           indf2	equ	0xFDF
  3835                           postinc2	equ	0xFDE
  3836                           postdec2	equ	0xFDD
  3837                           fsr2h	equ	0xFDA
  3838                           fsr2l	equ	0xFD9
  3839                           status	equ	0xFD8
  3840                           
  3841 ;; *************** function _SendCurrentPIDValues *****************
  3842 ;; Defined at:
  3843 ;;		line 243 in file "Wireless.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  Kp              2   24[BANK0 ] int 
  3846 ;;  Kd              2   26[BANK0 ] int 
  3847 ;;  Ki              2   28[BANK0 ] int 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;		None               void
  3852 ;; Registers used:
  3853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3859 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;Total ram usage:        6 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    9
  3866 ;; This function calls:
  3867 ;;		_BusyTx
  3868 ;;		_FlushTxBuf
  3869 ;;		_PutCharTxBuf
  3870 ;;		_StartTx
  3871 ;; This function is called by:
  3872 ;;		_main
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text18
  3877  00181A                     __ptext18:
  3878                           	opt stack 0
  3879  00181A                     _SendCurrentPIDValues:
  3880                           	opt stack 21
  3881                           
  3882                           ;Wireless.c: 244: while(BusyTx());
  3883                           
  3884                           ;incstack = 0
  3885  00181A  D000               	goto	l6349
  3886  00181C                     l6349:
  3887  00181C  ECCE  F011         	call	_BusyTx	;wreg free
  3888  001820  0900               	iorlw	0
  3889  001822  A4D8               	btfss	status,2,c
  3890  001824  D7FB               	goto	l6349
  3891                           
  3892                           ;Wireless.c: 245: FlushTxBuf();
  3893  001826  EC45  F00F         	call	_FlushTxBuf	;wreg free
  3894                           
  3895                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3896  00182A  0EAA               	movlw	170
  3897  00182C  EC1C  F00E         	call	_PutCharTxBuf
  3898                           
  3899                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3900  001830  0E43               	movlw	67
  3901  001832  EC1C  F00E         	call	_PutCharTxBuf
  3902                           
  3903                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3904  001836  0100               	movlb	0	; () banked
  3905  001838  51C0               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3906  00183A  EC1C  F00E         	call	_PutCharTxBuf
  3907                           
  3908                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3909  00183E  0100               	movlb	0	; () banked
  3910  001840  51BF               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3911  001842  EC1C  F00E         	call	_PutCharTxBuf
  3912                           
  3913                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3914  001846  0100               	movlb	0	; () banked
  3915  001848  51C2               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3916  00184A  EC1C  F00E         	call	_PutCharTxBuf
  3917                           
  3918                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3919  00184E  0100               	movlb	0	; () banked
  3920  001850  51C1               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3921  001852  EC1C  F00E         	call	_PutCharTxBuf
  3922                           
  3923                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3924  001856  0100               	movlb	0	; () banked
  3925  001858  51C4               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3926  00185A  EC1C  F00E         	call	_PutCharTxBuf
  3927                           
  3928                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3929  00185E  0100               	movlb	0	; () banked
  3930  001860  51C3               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3931  001862  EC1C  F00E         	call	_PutCharTxBuf
  3932                           
  3933                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3934  001866  0E0D               	movlw	13
  3935  001868  EC1C  F00E         	call	_PutCharTxBuf
  3936                           
  3937                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3938  00186C  0E0A               	movlw	10
  3939  00186E  EC1C  F00E         	call	_PutCharTxBuf
  3940                           
  3941                           ;Wireless.c: 259: while (BusyTx());
  3942  001872  D000               	goto	l6353
  3943  001874                     l6353:
  3944  001874  ECCE  F011         	call	_BusyTx	;wreg free
  3945  001878  0900               	iorlw	0
  3946  00187A  A4D8               	btfss	status,2,c
  3947  00187C  D7FB               	goto	l6353
  3948                           
  3949                           ;Wireless.c: 260: StartTx();
  3950  00187E  EC41  F012         	call	_StartTx	;wreg free
  3951  001882  0012               	return		;funcret
  3952  001884                     __end_of_SendCurrentPIDValues:
  3953                           	opt stack 0
  3954                           prodh	equ	0xFF4
  3955                           prodl	equ	0xFF3
  3956                           postinc0	equ	0xFEE
  3957                           wreg	equ	0xFE8
  3958                           indf2	equ	0xFDF
  3959                           postinc2	equ	0xFDE
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _SendBattVoltageInitial *****************
  3966 ;; Defined at:
  3967 ;;		line 265 in file "Wireless.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3970 ;;		 -> main@battery_voltage(2), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        4 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    9
  3989 ;; This function calls:
  3990 ;;		_BusyTx
  3991 ;;		_FlushTxBuf
  3992 ;;		_PutCharTxBuf
  3993 ;;		_StartTx
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text19
  4000  0018EE                     __ptext19:
  4001                           	opt stack 0
  4002  0018EE                     _SendBattVoltageInitial:
  4003                           	opt stack 21
  4004                           
  4005                           ;Wireless.c: 266: while(BusyTx());
  4006                           
  4007                           ;incstack = 0
  4008  0018EE  D000               	goto	l6359
  4009  0018F0                     l6359:
  4010  0018F0  ECCE  F011         	call	_BusyTx	;wreg free
  4011  0018F4  0900               	iorlw	0
  4012  0018F6  A4D8               	btfss	status,2,c
  4013  0018F8  D7FB               	goto	l6359
  4014                           
  4015                           ;Wireless.c: 267: FlushTxBuf();
  4016  0018FA  EC45  F00F         	call	_FlushTxBuf	;wreg free
  4017                           
  4018                           ;Wireless.c: 269: PutCharTxBuf(0xAA);
  4019  0018FE  0EAA               	movlw	170
  4020  001900  EC1C  F00E         	call	_PutCharTxBuf
  4021                           
  4022                           ;Wireless.c: 270: PutCharTxBuf(0x06);
  4023  001904  0E06               	movlw	6
  4024  001906  EC1C  F00E         	call	_PutCharTxBuf
  4025                           
  4026                           ;Wireless.c: 272: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  4027  00190A  C0BF  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4028  00190E  C0C0  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4029  001912  CFDE F0C1          	movff	postinc2,??_SendBattVoltageInitial
  4030  001916  CFDD F0C2          	movff	postdec2,??_SendBattVoltageInitial+1
  4031  00191A  C0C2  F0C1         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  4032  00191E  0100               	movlb	0	; () banked
  4033  001920  6BC2               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  4034  001922  0100               	movlb	0	; () banked
  4035  001924  51C1               	movf	??_SendBattVoltageInitial& (0+255),w,b
  4036  001926  EC1C  F00E         	call	_PutCharTxBuf
  4037                           
  4038                           ;Wireless.c: 273: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  4039  00192A  C0BF  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4040  00192E  C0C0  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4041  001932  50DF               	movf	indf2,w,c
  4042  001934  EC1C  F00E         	call	_PutCharTxBuf
  4043                           
  4044                           ;Wireless.c: 275: PutCharTxBuf('\r');
  4045  001938  0E0D               	movlw	13
  4046  00193A  EC1C  F00E         	call	_PutCharTxBuf
  4047                           
  4048                           ;Wireless.c: 276: PutCharTxBuf('\n');
  4049  00193E  0E0A               	movlw	10
  4050  001940  EC1C  F00E         	call	_PutCharTxBuf
  4051                           
  4052                           ;Wireless.c: 277: while (BusyTx());
  4053  001944  D000               	goto	l6363
  4054  001946                     l6363:
  4055  001946  ECCE  F011         	call	_BusyTx	;wreg free
  4056  00194A  0900               	iorlw	0
  4057  00194C  A4D8               	btfss	status,2,c
  4058  00194E  D7FB               	goto	l6363
  4059                           
  4060                           ;Wireless.c: 278: StartTx();
  4061  001950  EC41  F012         	call	_StartTx	;wreg free
  4062  001954  0012               	return		;funcret
  4063  001956                     __end_of_SendBattVoltageInitial:
  4064                           	opt stack 0
  4065                           prodh	equ	0xFF4
  4066                           prodl	equ	0xFF3
  4067                           postinc0	equ	0xFEE
  4068                           wreg	equ	0xFE8
  4069                           indf2	equ	0xFDF
  4070                           postinc2	equ	0xFDE
  4071                           postdec2	equ	0xFDD
  4072                           fsr2h	equ	0xFDA
  4073                           fsr2l	equ	0xFD9
  4074                           status	equ	0xFD8
  4075                           
  4076 ;; *************** function _ResetMillis3 *****************
  4077 ;; Defined at:
  4078 ;;		line 50 in file "MillisecondTimer.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;		None               void
  4085 ;; Registers used:
  4086 ;;		wreg, status,2
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    7
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text20
  4107  002432                     __ptext20:
  4108                           	opt stack 0
  4109  002432                     _ResetMillis3:
  4110                           	opt stack 23
  4111                           
  4112                           ;MillisecondTimer.c: 52: millisecond_COUNT3 = 0;
  4113                           
  4114                           ;incstack = 0
  4115  002432  0E00               	movlw	0
  4116  002434  6E14               	movwf	_millisecond_COUNT3+1,c	;volatile
  4117  002436  0E00               	movlw	0
  4118  002438  6E13               	movwf	_millisecond_COUNT3,c	;volatile
  4119  00243A  0012               	return		;funcret
  4120  00243C                     __end_of_ResetMillis3:
  4121                           	opt stack 0
  4122                           prodh	equ	0xFF4
  4123                           prodl	equ	0xFF3
  4124                           postinc0	equ	0xFEE
  4125                           wreg	equ	0xFE8
  4126                           indf2	equ	0xFDF
  4127                           postinc2	equ	0xFDE
  4128                           postdec2	equ	0xFDD
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _ResetMillis1 *****************
  4134 ;; Defined at:
  4135 ;;		line 39 in file "MillisecondTimer.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;		None               void
  4142 ;; Registers used:
  4143 ;;		wreg, status,2
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    7
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_main
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text21
  4164  00243C                     __ptext21:
  4165                           	opt stack 0
  4166  00243C                     _ResetMillis1:
  4167                           	opt stack 23
  4168                           
  4169                           ;MillisecondTimer.c: 41: millisecond_COUNT1 = 0;
  4170                           
  4171                           ;incstack = 0
  4172  00243C  0E00               	movlw	0
  4173  00243E  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  4174  002440  0E00               	movlw	0
  4175  002442  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  4176  002444  0012               	return		;funcret
  4177  002446                     __end_of_ResetMillis1:
  4178                           	opt stack 0
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           postdec2	equ	0xFDD
  4186                           fsr2h	equ	0xFDA
  4187                           fsr2l	equ	0xFD9
  4188                           status	equ	0xFD8
  4189                           
  4190 ;; *************** function _ResetMillis0 *****************
  4191 ;; Defined at:
  4192 ;;		line 33 in file "MillisecondTimer.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;		None               void
  4199 ;; Registers used:
  4200 ;;		wreg, status,2
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;Total ram usage:        0 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    7
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text22
  4221  002446                     __ptext22:
  4222                           	opt stack 0
  4223  002446                     _ResetMillis0:
  4224                           	opt stack 23
  4225                           
  4226                           ;MillisecondTimer.c: 35: millisecond_COUNT0 = 0;
  4227                           
  4228                           ;incstack = 0
  4229  002446  0E00               	movlw	0
  4230  002448  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  4231  00244A  0E00               	movlw	0
  4232  00244C  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  4233  00244E  0012               	return		;funcret
  4234  002450                     __end_of_ResetMillis0:
  4235                           	opt stack 0
  4236                           prodh	equ	0xFF4
  4237                           prodl	equ	0xFF3
  4238                           postinc0	equ	0xFEE
  4239                           wreg	equ	0xFE8
  4240                           indf2	equ	0xFDF
  4241                           postinc2	equ	0xFDE
  4242                           postdec2	equ	0xFDD
  4243                           fsr2h	equ	0xFDA
  4244                           fsr2l	equ	0xFD9
  4245                           status	equ	0xFD8
  4246                           
  4247 ;; *************** function _ResetAccumulatedCurrent *****************
  4248 ;; Defined at:
  4249 ;;		line 103 in file "BatteryLib/ds2781.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    9
  4270 ;; This function calls:
  4271 ;;		_OWReset
  4272 ;;		_OWWriteByte
  4273 ;; This function is called by:
  4274 ;;		_main
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text23
  4279  001FBE                     __ptext23:
  4280                           	opt stack 0
  4281  001FBE                     _ResetAccumulatedCurrent:
  4282                           	opt stack 21
  4283                           
  4284                           ;ds2781.c: 105: if( OWReset() == TRUE)
  4285                           
  4286                           ;incstack = 0
  4287  001FBE  ECD5  F00E         	call	_OWReset	;wreg free
  4288  001FC2  06E8               	decf	wreg,f,c
  4289  001FC4  A4D8               	btfss	status,2,c
  4290  001FC6  D010               	goto	l487
  4291                           
  4292                           ;ds2781.c: 106: {
  4293                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  4294  001FC8  0ECC               	movlw	204
  4295  001FCA  ECF5  F00F         	call	_OWWriteByte
  4296                           
  4297                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  4298  001FCE  0E6C               	movlw	108
  4299  001FD0  ECF5  F00F         	call	_OWWriteByte
  4300                           
  4301                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  4302  001FD4  0E10               	movlw	16
  4303  001FD6  ECF5  F00F         	call	_OWWriteByte
  4304                           
  4305                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  4306  001FDA  0E00               	movlw	0
  4307  001FDC  ECF5  F00F         	call	_OWWriteByte
  4308                           
  4309                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  4310  001FE0  0E00               	movlw	0
  4311  001FE2  ECF5  F00F         	call	_OWWriteByte
  4312  001FE6  D000               	goto	l487
  4313  001FE8                     l487:
  4314  001FE8  0012               	return		;funcret
  4315  001FEA                     __end_of_ResetAccumulatedCurrent:
  4316                           	opt stack 0
  4317                           prodh	equ	0xFF4
  4318                           prodl	equ	0xFF3
  4319                           postinc0	equ	0xFEE
  4320                           wreg	equ	0xFE8
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           postdec2	equ	0xFDD
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           
  4328 ;; *************** function _ReadVoltage *****************
  4329 ;; Defined at:
  4330 ;;		line 33 in file "BatteryLib/ds2781.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  result          2   24[BANK0 ] unsigned short 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2   19[BANK0 ] unsigned short 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:        7 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    9
  4351 ;; This function calls:
  4352 ;;		_OWReadByte
  4353 ;;		_OWReset
  4354 ;;		_OWWriteByte
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text24
  4361  001884                     __ptext24:
  4362                           	opt stack 0
  4363  001884                     _ReadVoltage:
  4364                           	opt stack 21
  4365                           
  4366                           ;ds2781.c: 35: WORD result = 0;
  4367                           
  4368                           ;incstack = 0
  4369  001884  0E00               	movlw	0
  4370  001886  0100               	movlb	0	; () banked
  4371  001888  6FC0               	movwf	(ReadVoltage@result+1)& (0+255),b
  4372  00188A  0E00               	movlw	0
  4373  00188C  6FBF               	movwf	ReadVoltage@result& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4377  00188E  ECD5  F00E         	call	_OWReset	;wreg free
  4378  001892  06E8               	decf	wreg,f,c
  4379  001894  A4D8               	btfss	status,2,c
  4380  001896  D017               	goto	l6393
  4381                           
  4382                           ;ds2781.c: 37: {
  4383                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4384  001898  0ECC               	movlw	204
  4385  00189A  ECF5  F00F         	call	_OWWriteByte
  4386                           
  4387                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4388  00189E  0E69               	movlw	105
  4389  0018A0  ECF5  F00F         	call	_OWWriteByte
  4390                           
  4391                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4392  0018A4  0E0C               	movlw	12
  4393  0018A6  ECF5  F00F         	call	_OWWriteByte
  4394                           
  4395                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4396  0018AA  ECF1  F00E         	call	_OWReadByte	;wreg free
  4397  0018AE  0100               	movlb	0	; () banked
  4398  0018B0  6FC0               	movwf	(ReadVoltage@result+1)& (0+255),b
  4399  0018B2  6BBF               	clrf	ReadVoltage@result& (0+255),b
  4400                           
  4401                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4402  0018B4  ECF1  F00E         	call	_OWReadByte	;wreg free
  4403  0018B8  0100               	movlb	0	; () banked
  4404  0018BA  6FBC               	movwf	??_ReadVoltage& (0+255),b
  4405  0018BC  0100               	movlb	0	; () banked
  4406  0018BE  51BC               	movf	??_ReadVoltage& (0+255),w,b
  4407  0018C0  0100               	movlb	0	; () banked
  4408  0018C2  13BF               	iorwf	ReadVoltage@result& (0+255),f,b
  4409  0018C4  D000               	goto	l6393
  4410  0018C6                     l6393:
  4411                           
  4412                           ;ds2781.c: 43: }
  4413                           ;ds2781.c: 44: return (result >> 5);
  4414  0018C6  C0BF  F0BC         	movff	ReadVoltage@result,??_ReadVoltage
  4415  0018CA  C0C0  F0BD         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4416  0018CE  0E05               	movlw	5
  4417  0018D0  0100               	movlb	0	; () banked
  4418  0018D2  6FBE               	movwf	(??_ReadVoltage+2)& (0+255),b
  4419  0018D4                     u5525:
  4420  0018D4  0100               	movlb	0	; () banked
  4421  0018D6  90D8               	bcf	status,0,c
  4422  0018D8  33BD               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4423  0018DA  33BC               	rrcf	??_ReadVoltage& (0+255),f,b
  4424  0018DC  0100               	movlb	0	; () banked
  4425  0018DE  2FBE               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4426  0018E0  D7F9               	goto	u5525
  4427  0018E2  C0BC  F0BA         	movff	??_ReadVoltage,?_ReadVoltage
  4428  0018E6  C0BD  F0BB         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4429  0018EA  D000               	goto	l475
  4430  0018EC                     l475:
  4431                           
  4432                           ; BSR set to: 0
  4433  0018EC  0012               	return		;funcret
  4434  0018EE                     __end_of_ReadVoltage:
  4435                           	opt stack 0
  4436                           prodh	equ	0xFF4
  4437                           prodl	equ	0xFF3
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           indf2	equ	0xFDF
  4441                           postinc2	equ	0xFDE
  4442                           postdec2	equ	0xFDD
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _OWWriteByte *****************
  4448 ;; Defined at:
  4449 ;;		line 143 in file "BatteryLib/OneWire.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  byte            1    wreg     unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  byte            1   17[BANK0 ] unsigned char 
  4454 ;;  i               1   18[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;Total ram usage:        2 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    8
  4471 ;; This function calls:
  4472 ;;		_OWWriteBit
  4473 ;; This function is called by:
  4474 ;;		_ReadVoltage
  4475 ;;		_ResetAccumulatedCurrent
  4476 ;;		_ReadCurrent
  4477 ;;		_ReadAccumulatedCurrent
  4478 ;;		_ReadNetAddress
  4479 ;;		_ReadTemperature
  4480 ;;		_ReadCurrentOffset
  4481 ;;		_WriteCurrentOffset
  4482 ;;		_AdjustCurrentOffset
  4483 ;;		_UpdateControlRegister
  4484 ;;		_ReadRAM
  4485 ;;		_WriteRAM
  4486 ;;		_CopyEEPROM
  4487 ;;		_RecallEEPROM
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text25
  4492  001FEA                     __ptext25:
  4493                           	opt stack 0
  4494  001FEA                     _OWWriteByte:
  4495                           	opt stack 21
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;incstack = 0
  4499                           ;OWWriteByte@byte stored from wreg
  4500  001FEA  0100               	movlb	0	; () banked
  4501  001FEC  6FB8               	movwf	OWWriteByte@byte& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;OneWire.c: 145: BYTE i;
  4505                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4506  001FEE  0E00               	movlw	0
  4507  001FF0  0100               	movlb	0	; () banked
  4508  001FF2  6FB9               	movwf	OWWriteByte@i& (0+255),b
  4509  001FF4                     l5991:
  4510                           
  4511                           ; BSR set to: 0
  4512  001FF4  0E07               	movlw	7
  4513  001FF6  0100               	movlb	0	; () banked
  4514  001FF8  65B9               	cpfsgt	OWWriteByte@i& (0+255),b
  4515  001FFA  D001               	goto	l5995
  4516                           
  4517                           ; BSR set to: 0
  4518  001FFC  D00B               	goto	l562
  4519  001FFE                     l5995:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;OneWire.c: 148: {
  4523                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4524  001FFE  0100               	movlb	0	; () banked
  4525  002000  51B8               	movf	OWWriteByte@byte& (0+255),w,b
  4526  002002  0B01               	andlw	1
  4527  002004  EC9B  F00E         	call	_OWWriteBit
  4528                           
  4529                           ;OneWire.c: 150: byte >>= 1;
  4530  002008  0100               	movlb	0	; () banked
  4531  00200A  90D8               	bcf	status,0,c
  4532  00200C  33B8               	rrcf	OWWriteByte@byte& (0+255),f,b
  4533                           
  4534                           ; BSR set to: 0
  4535  00200E  0100               	movlb	0	; () banked
  4536  002010  2BB9               	incf	OWWriteByte@i& (0+255),f,b
  4537  002012  D7F0               	goto	l5991
  4538  002014                     l562:
  4539                           
  4540                           ; BSR set to: 0
  4541  002014  0012               	return		;funcret
  4542  002016                     __end_of_OWWriteByte:
  4543                           	opt stack 0
  4544                           prodh	equ	0xFF4
  4545                           prodl	equ	0xFF3
  4546                           postinc0	equ	0xFEE
  4547                           wreg	equ	0xFE8
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _OWWriteBit *****************
  4556 ;; Defined at:
  4557 ;;		line 72 in file "BatteryLib/OneWire.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  b               1    wreg     unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  b               1   16[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;		None               void
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        1 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    7
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_OWWriteByte
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text26
  4586  001D36                     __ptext26:
  4587                           	opt stack 0
  4588  001D36                     _OWWriteBit:
  4589                           	opt stack 21
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;incstack = 0
  4593                           ;OWWriteBit@b stored from wreg
  4594  001D36  0100               	movlb	0	; () banked
  4595  001D38  6FB7               	movwf	OWWriteBit@b& (0+255),b
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;OneWire.c: 74: if (b)
  4599  001D3A  0100               	movlb	0	; () banked
  4600  001D3C  51B7               	movf	OWWriteBit@b& (0+255),w,b
  4601  001D3E  0100               	movlb	0	; () banked
  4602  001D40  B4D8               	btfsc	status,2,c
  4603  001D42  D00A               	goto	l552
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;OneWire.c: 75: {
  4607                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4608  001D44  9690               	bcf	3984,3,c	;volatile
  4609                           
  4610                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4611  001D46  9699               	bcf	3993,3,c	;volatile
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4615  001D48  0E04               	movlw	4
  4616  001D4A                     u6277:
  4617  001D4A  2EE8               	decfsz	wreg,f,c
  4618  001D4C  D7FE               	goto	u6277
  4619                           
  4620                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4621  001D4E  8699               	bsf	3993,3,c	;volatile
  4622                           
  4623                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4624  001D50  0E35               	movlw	53
  4625  001D52                     u6287:
  4626  001D52  2EE8               	decfsz	wreg,f,c
  4627  001D54  D7FE               	goto	u6287
  4628  001D56  D009               	goto	L2
  4629  001D58                     l552:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;OneWire.c: 87: else
  4633                           ;OneWire.c: 88: {
  4634                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4635  001D58  9690               	bcf	3984,3,c	;volatile
  4636                           
  4637                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4638  001D5A  9699               	bcf	3993,3,c	;volatile
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4642  001D5C  0E32               	movlw	50
  4643  001D5E                     u6297:
  4644  001D5E  2EE8               	decfsz	wreg,f,c
  4645  001D60  D7FE               	goto	u6297
  4646                           
  4647                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4648  001D62  8699               	bsf	3993,3,c	;volatile
  4649                           
  4650                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4651  001D64  0E08               	movlw	8
  4652  001D66                     u6307:
  4653  001D66  2EE8               	decfsz	wreg,f,c
  4654  001D68  D7FE               	goto	u6307
  4655  001D6A                     L2:
  4656  001D6A  F000               	nop	
  4657  001D6C  D000               	goto	l554
  4658  001D6E                     l554:
  4659  001D6E  0012               	return		;funcret
  4660  001D70                     __end_of_OWWriteBit:
  4661                           	opt stack 0
  4662                           prodh	equ	0xFF4
  4663                           prodl	equ	0xFF3
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           indf2	equ	0xFDF
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           fsr2h	equ	0xFDA
  4670                           fsr2l	equ	0xFD9
  4671                           status	equ	0xFD8
  4672                           
  4673 ;; *************** function _OWReset *****************
  4674 ;; Defined at:
  4675 ;;		line 41 in file "BatteryLib/OneWire.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  result          1   16[BANK0 ] enum E6350
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      enum E6350
  4682 ;; Registers used:
  4683 ;;		wreg, status,2
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        1 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    7
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_ReadVoltage
  4700 ;;		_ResetAccumulatedCurrent
  4701 ;;		_ReadCurrent
  4702 ;;		_ReadAccumulatedCurrent
  4703 ;;		_ReadNetAddress
  4704 ;;		_ReadTemperature
  4705 ;;		_ReadCurrentOffset
  4706 ;;		_WriteCurrentOffset
  4707 ;;		_AdjustCurrentOffset
  4708 ;;		_UpdateControlRegister
  4709 ;;		_ReadRAM
  4710 ;;		_WriteRAM
  4711 ;;		_CopyEEPROM
  4712 ;;		_RecallEEPROM
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text27
  4717  001DAA                     __ptext27:
  4718                           	opt stack 0
  4719  001DAA                     _OWReset:
  4720                           	opt stack 22
  4721                           
  4722                           ;OneWire.c: 43: BOOL result = FALSE;
  4723                           
  4724                           ;incstack = 0
  4725  001DAA  0E00               	movlw	0
  4726  001DAC  0100               	movlb	0	; () banked
  4727  001DAE  6FB7               	movwf	OWReset@result& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  4731  001DB0  9690               	bcf	3984,3,c	;volatile
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  4735  001DB2  9699               	bcf	3993,3,c	;volatile
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  4739  001DB4  0EF0               	movlw	240
  4740  001DB6                     u6317:
  4741  001DB6  D000               	nop2	
  4742  001DB8  2EE8               	decfsz	wreg,f,c
  4743  001DBA  D7FD               	goto	u6317
  4744                           
  4745                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  4746  001DBC  8699               	bsf	3993,3,c	;volatile
  4747                           
  4748                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  4749  001DBE  0E38               	movlw	56
  4750  001DC0                     u6327:
  4751  001DC0  2EE8               	decfsz	wreg,f,c
  4752  001DC2  D7FE               	goto	u6327
  4753  001DC4  D000               	nop2		;nop
  4754                           
  4755                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  4756  001DC6  B690               	btfsc	3984,3,c	;volatile
  4757  001DC8  D004               	goto	l5983
  4758                           
  4759                           ;OneWire.c: 54: {
  4760                           ;OneWire.c: 55: result = TRUE;
  4761  001DCA  0E01               	movlw	1
  4762  001DCC  0100               	movlb	0	; () banked
  4763  001DCE  6FB7               	movwf	OWReset@result& (0+255),b
  4764  001DD0  D000               	goto	l5983
  4765  001DD2                     l5983:
  4766                           
  4767                           ;OneWire.c: 56: }
  4768                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  4769  001DD2  0EFD               	movlw	253
  4770  001DD4                     u6337:
  4771  001DD4  F000               	nop	
  4772  001DD6  2EE8               	decfsz	wreg,f,c
  4773  001DD8  D7FD               	goto	u6337
  4774                           
  4775                           ;OneWire.c: 59: return result;
  4776  001DDA  0100               	movlb	0	; () banked
  4777  001DDC  51B7               	movf	OWReset@result& (0+255),w,b
  4778  001DDE  D000               	goto	l549
  4779  001DE0                     l549:
  4780                           
  4781                           ; BSR set to: 0
  4782  001DE0  0012               	return		;funcret
  4783  001DE2                     __end_of_OWReset:
  4784                           	opt stack 0
  4785                           prodh	equ	0xFF4
  4786                           prodl	equ	0xFF3
  4787                           postinc0	equ	0xFEE
  4788                           wreg	equ	0xFE8
  4789                           indf2	equ	0xFDF
  4790                           postinc2	equ	0xFDE
  4791                           postdec2	equ	0xFDD
  4792                           fsr2h	equ	0xFDA
  4793                           fsr2l	equ	0xFD9
  4794                           status	equ	0xFD8
  4795                           
  4796 ;; *************** function _OWReadByte *****************
  4797 ;; Defined at:
  4798 ;;		line 163 in file "BatteryLib/OneWire.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  i               1   18[BANK0 ] unsigned char 
  4803 ;;  result          1   17[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    8
  4820 ;; This function calls:
  4821 ;;		_OWReadBit
  4822 ;; This function is called by:
  4823 ;;		_ReadVoltage
  4824 ;;		_ReadCurrent
  4825 ;;		_ReadAccumulatedCurrent
  4826 ;;		_ReadTemperature
  4827 ;;		_ReadCurrentOffset
  4828 ;;		_AdjustCurrentOffset
  4829 ;;		_ReadRAM
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text28
  4834  001DE2                     __ptext28:
  4835                           	opt stack 0
  4836  001DE2                     _OWReadByte:
  4837                           	opt stack 21
  4838                           
  4839                           ;OneWire.c: 165: BYTE i, result=0;
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;incstack = 0
  4843  001DE2  0E00               	movlw	0
  4844  001DE4  0100               	movlb	0	; () banked
  4845  001DE6  6FB8               	movwf	OWReadByte@result& (0+255),b
  4846                           
  4847                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  4848  001DE8  0E00               	movlw	0
  4849  001DEA  0100               	movlb	0	; () banked
  4850  001DEC  6FB9               	movwf	OWReadByte@i& (0+255),b
  4851  001DEE                     l6005:
  4852                           
  4853                           ; BSR set to: 0
  4854  001DEE  0E07               	movlw	7
  4855  001DF0  0100               	movlb	0	; () banked
  4856  001DF2  65B9               	cpfsgt	OWReadByte@i& (0+255),b
  4857  001DF4  D001               	goto	l6009
  4858                           
  4859                           ; BSR set to: 0
  4860  001DF6  D00D               	goto	l6017
  4861  001DF8                     l6009:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;OneWire.c: 168: {
  4865                           ;OneWire.c: 169: result >>= 1;
  4866  001DF8  0100               	movlb	0	; () banked
  4867  001DFA  90D8               	bcf	status,0,c
  4868  001DFC  33B8               	rrcf	OWReadByte@result& (0+255),f,b
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;OneWire.c: 171: if (OWReadBit())
  4872  001DFE  ECC7  F00F         	call	_OWReadBit	;wreg free
  4873  001E02  0900               	iorlw	0
  4874  001E04  B4D8               	btfsc	status,2,c
  4875  001E06  D002               	goto	l567
  4876                           
  4877                           ;OneWire.c: 172: result |= 0x80;
  4878  001E08  0100               	movlb	0	; () banked
  4879  001E0A  8FB8               	bsf	OWReadByte@result& (0+255),7,b
  4880  001E0C                     l567:
  4881  001E0C  0100               	movlb	0	; () banked
  4882  001E0E  2BB9               	incf	OWReadByte@i& (0+255),f,b
  4883  001E10  D7EE               	goto	l6005
  4884  001E12                     l6017:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;OneWire.c: 173: }
  4888                           ;OneWire.c: 174: return result;
  4889  001E12  0100               	movlb	0	; () banked
  4890  001E14  51B8               	movf	OWReadByte@result& (0+255),w,b
  4891  001E16  D000               	goto	l568
  4892  001E18                     l568:
  4893                           
  4894                           ; BSR set to: 0
  4895  001E18  0012               	return		;funcret
  4896  001E1A                     __end_of_OWReadByte:
  4897                           	opt stack 0
  4898                           prodh	equ	0xFF4
  4899                           prodl	equ	0xFF3
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           indf2	equ	0xFDF
  4903                           postinc2	equ	0xFDE
  4904                           postdec2	equ	0xFDD
  4905                           fsr2h	equ	0xFDA
  4906                           fsr2l	equ	0xFD9
  4907                           status	equ	0xFD8
  4908                           
  4909 ;; *************** function _OWReadBit *****************
  4910 ;; Defined at:
  4911 ;;		line 112 in file "BatteryLib/OneWire.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  result          1   16[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      unsigned char 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;Total ram usage:        1 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    7
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_OWReadByte
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text29
  4940  001F8E                     __ptext29:
  4941                           	opt stack 0
  4942  001F8E                     _OWReadBit:
  4943                           	opt stack 21
  4944                           
  4945                           ;OneWire.c: 114: BYTE result;
  4946                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;incstack = 0
  4950  001F8E  9690               	bcf	3984,3,c	;volatile
  4951                           
  4952                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  4953  001F90  9699               	bcf	3993,3,c	;volatile
  4954                           
  4955                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4956  001F92  0E04               	movlw	4
  4957  001F94                     u6347:
  4958  001F94  2EE8               	decfsz	wreg,f,c
  4959  001F96  D7FE               	goto	u6347
  4960                           
  4961                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  4962  001F98  8699               	bsf	3993,3,c	;volatile
  4963                           
  4964                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4965  001F9A  0E08               	movlw	8
  4966  001F9C                     u6357:
  4967  001F9C  2EE8               	decfsz	wreg,f,c
  4968  001F9E  D7FE               	goto	u6357
  4969  001FA0  F000               	nop	
  4970                           
  4971                           ;OneWire.c: 127: result = PORTHbits.RH3;
  4972  001FA2  0E00               	movlw	0
  4973  001FA4  B687               	btfsc	3975,3,c	;volatile
  4974  001FA6  0E01               	movlw	1
  4975  001FA8  0100               	movlb	0	; () banked
  4976  001FAA  6FB7               	movwf	OWReadBit@result& (0+255),b
  4977                           
  4978                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  4979  001FAC  0E2D               	movlw	45
  4980  001FAE                     u6367:
  4981  001FAE  2EE8               	decfsz	wreg,f,c
  4982  001FB0  D7FE               	goto	u6367
  4983  001FB2  D000               	nop2		;nop
  4984                           
  4985                           ;OneWire.c: 131: return result & 0x01;
  4986  001FB4  0100               	movlb	0	; () banked
  4987  001FB6  51B7               	movf	OWReadBit@result& (0+255),w,b
  4988  001FB8  0B01               	andlw	1
  4989  001FBA  D000               	goto	l557
  4990  001FBC                     l557:
  4991                           
  4992                           ; BSR set to: 0
  4993  001FBC  0012               	return		;funcret
  4994  001FBE                     __end_of_OWReadBit:
  4995                           	opt stack 0
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           postdec2	equ	0xFDD
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _ReadMillis1 *****************
  5008 ;; Defined at:
  5009 ;;		line 13 in file "MillisecondTimer.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  2   16[BANK0 ] unsigned int 
  5016 ;; Registers used:
  5017 ;;		None
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;Total ram usage:        2 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    7
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_main
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text30
  5038  002450                     __ptext30:
  5039                           	opt stack 0
  5040  002450                     _ReadMillis1:
  5041                           	opt stack 23
  5042                           
  5043                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;incstack = 0
  5047  002450  C00F  F0B7         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  5048  002454  C010  F0B8         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  5049  002458  0012               	return		;funcret
  5050  00245A                     __end_of_ReadMillis1:
  5051                           	opt stack 0
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           postinc0	equ	0xFEE
  5055                           wreg	equ	0xFE8
  5056                           indf2	equ	0xFDF
  5057                           postinc2	equ	0xFDE
  5058                           postdec2	equ	0xFDD
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _ReadMillis0 *****************
  5064 ;; Defined at:
  5065 ;;		line 7 in file "MillisecondTimer.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  2   16[BANK0 ] unsigned int 
  5072 ;; Registers used:
  5073 ;;		None
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;Total ram usage:        2 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    7
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text31
  5094  00245A                     __ptext31:
  5095                           	opt stack 0
  5096  00245A                     _ReadMillis0:
  5097                           	opt stack 23
  5098                           
  5099                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  5100                           
  5101                           ;incstack = 0
  5102  00245A  C00D  F0B7         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  5103  00245E  C00E  F0B8         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  5104  002462  0012               	return		;funcret
  5105  002464                     __end_of_ReadMillis0:
  5106                           	opt stack 0
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           indf2	equ	0xFDF
  5112                           postinc2	equ	0xFDE
  5113                           postdec2	equ	0xFDD
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _ReadEchoLength *****************
  5119 ;; Defined at:
  5120 ;;		line 68 in file "Ultrasound.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2   16[BANK0 ] unsigned int 
  5127 ;; Registers used:
  5128 ;;		None
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        2 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    7
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text32
  5149  002464                     __ptext32:
  5150                           	opt stack 0
  5151  002464                     _ReadEchoLength:
  5152                           	opt stack 23
  5153                           
  5154                           ;Ultrasound.c: 70: return (echo_time);
  5155                           
  5156                           ;incstack = 0
  5157  002464  C00B  F0B7         	movff	_echo_time,?_ReadEchoLength	;volatile
  5158  002468  C00C  F0B8         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  5159  00246C  0012               	return		;funcret
  5160  00246E                     __end_of_ReadEchoLength:
  5161                           	opt stack 0
  5162                           prodh	equ	0xFF4
  5163                           prodl	equ	0xFF3
  5164                           postinc0	equ	0xFEE
  5165                           wreg	equ	0xFE8
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function _LoadPIDValues *****************
  5174 ;; Defined at:
  5175 ;;		line 605 in file "FastBuggy17_Main_Code_TUNING.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;		None               void
  5182 ;; Registers used:
  5183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:   11
  5196 ;; This function calls:
  5197 ;;		_PB1pressed
  5198 ;;		_PB2pressed
  5199 ;;		_ReadCharEEPROM
  5200 ;;		_ReadIntEEPROM
  5201 ;;		_SendStatus
  5202 ;;		_SetPIDValues
  5203 ;;		_WriteCharEEPROM
  5204 ;;		_WriteIntEEPROM
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text33
  5211  000BC8                     __ptext33:
  5212                           	opt stack 0
  5213  000BC8                     _LoadPIDValues:
  5214                           	opt stack 19
  5215                           
  5216                           ;FastBuggy17_Main_Code_TUNING.c: 606: SendStatus(0x07);
  5217                           
  5218                           ;incstack = 0
  5219  000BC8  0E07               	movlw	7
  5220  000BCA  ECB8  F00E         	call	_SendStatus
  5221  000BCE  D000               	goto	l6465
  5222  000BD0                     l6465:
  5223                           
  5224                           ;FastBuggy17_Main_Code_TUNING.c: 609: if(PB1pressed() == 1) {
  5225  000BD0  EC3B  F00D         	call	_PB1pressed	;wreg free
  5226  000BD4  06E8               	decf	wreg,f,c
  5227  000BD6  A4D8               	btfss	status,2,c
  5228  000BD8  D03C               	goto	l6479
  5229                           
  5230                           ;FastBuggy17_Main_Code_TUNING.c: 610: PID_Kp = 20;
  5231  000BDA  0E00               	movlw	0
  5232  000BDC  0100               	movlb	0	; () banked
  5233  000BDE  6F7E               	movwf	(_PID_Kp+1)& (0+255),b
  5234  000BE0  0E14               	movlw	20
  5235  000BE2  6F7D               	movwf	_PID_Kp& (0+255),b
  5236                           
  5237                           ;FastBuggy17_Main_Code_TUNING.c: 611: PID_Kd = 0;
  5238  000BE4  0E00               	movlw	0
  5239  000BE6  0100               	movlb	0	; () banked
  5240  000BE8  6F7A               	movwf	(_PID_Kd+1)& (0+255),b
  5241  000BEA  0E00               	movlw	0
  5242  000BEC  6F79               	movwf	_PID_Kd& (0+255),b
  5243                           
  5244                           ;FastBuggy17_Main_Code_TUNING.c: 612: PID_Ki = 0;
  5245  000BEE  0E00               	movlw	0
  5246  000BF0  0100               	movlb	0	; () banked
  5247  000BF2  6F7C               	movwf	(_PID_Ki+1)& (0+255),b
  5248  000BF4  0E00               	movlw	0
  5249  000BF6  6F7B               	movwf	_PID_Ki& (0+255),b
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;FastBuggy17_Main_Code_TUNING.c: 613: WriteIntEEPROM(0x0006, PID_Kp);
  5253  000BF8  0E00               	movlw	0
  5254  000BFA  0100               	movlb	0	; () banked
  5255  000BFC  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5256  000BFE  0E06               	movlw	6
  5257  000C00  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  5258  000C02  C07D  F0BC         	movff	_PID_Kp,WriteIntEEPROM@data
  5259  000C06  C07E  F0BD         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5260  000C0A  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  5261                           
  5262                           ;FastBuggy17_Main_Code_TUNING.c: 614: WriteIntEEPROM(0x0009, PID_Kd);
  5263  000C0E  0E00               	movlw	0
  5264  000C10  0100               	movlb	0	; () banked
  5265  000C12  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5266  000C14  0E09               	movlw	9
  5267  000C16  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  5268  000C18  C079  F0BC         	movff	_PID_Kd,WriteIntEEPROM@data
  5269  000C1C  C07A  F0BD         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5270  000C20  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  5271                           
  5272                           ;FastBuggy17_Main_Code_TUNING.c: 615: WriteIntEEPROM(0x000C, PID_Ki);
  5273  000C24  0E00               	movlw	0
  5274  000C26  0100               	movlb	0	; () banked
  5275  000C28  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5276  000C2A  0E0C               	movlw	12
  5277  000C2C  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  5278  000C2E  C07B  F0BC         	movff	_PID_Ki,WriteIntEEPROM@data
  5279  000C32  C07C  F0BD         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5280  000C36  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  5281                           
  5282                           ;FastBuggy17_Main_Code_TUNING.c: 617: WriteCharEEPROM(0x0005, 1);
  5283  000C3A  0E00               	movlw	0
  5284  000C3C  0100               	movlb	0	; () banked
  5285  000C3E  6FBB               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5286  000C40  0E05               	movlw	5
  5287  000C42  6FBA               	movwf	WriteCharEEPROM@address& (0+255),b
  5288  000C44  0E01               	movlw	1
  5289  000C46  0100               	movlb	0	; () banked
  5290  000C48  6FBC               	movwf	WriteCharEEPROM@data& (0+255),b
  5291  000C4A  EC90  F011         	call	_WriteCharEEPROM	;wreg free
  5292                           
  5293                           ;FastBuggy17_Main_Code_TUNING.c: 618: break;
  5294  000C4E  D036               	goto	l946
  5295                           
  5296                           ;FastBuggy17_Main_Code_TUNING.c: 619: }
  5297  000C50  D7BF               	goto	l6465
  5298  000C52                     l6479:
  5299                           
  5300                           ;FastBuggy17_Main_Code_TUNING.c: 620: else if(PB2pressed() == 1) {
  5301  000C52  ECDD  F00C         	call	_PB2pressed	;wreg free
  5302  000C56  06E8               	decf	wreg,f,c
  5303  000C58  A4D8               	btfss	status,2,c
  5304  000C5A  D7BA               	goto	l6465
  5305                           
  5306                           ;FastBuggy17_Main_Code_TUNING.c: 621: if(ReadCharEEPROM(0x0005) == 0xFF) {
  5307  000C5C  0E00               	movlw	0
  5308  000C5E  0100               	movlb	0	; () banked
  5309  000C60  6FBA               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5310  000C62  0E05               	movlw	5
  5311  000C64  6FB9               	movwf	ReadCharEEPROM@address& (0+255),b
  5312  000C66  ECC6  F011         	call	_ReadCharEEPROM	;wreg free
  5313  000C6A  0AFF               	xorlw	255
  5314  000C6C  A4D8               	btfss	status,2,c
  5315  000C6E  D003               	goto	l6485
  5316                           
  5317                           ;FastBuggy17_Main_Code_TUNING.c: 622: SetPIDValues();
  5318  000C70  EC44  F004         	call	_SetPIDValues	;wreg free
  5319                           
  5320                           ;FastBuggy17_Main_Code_TUNING.c: 623: }
  5321  000C74  D023               	goto	l946
  5322  000C76                     l6485:
  5323                           
  5324                           ;FastBuggy17_Main_Code_TUNING.c: 624: else {
  5325                           ;FastBuggy17_Main_Code_TUNING.c: 625: PID_Kp = ReadIntEEPROM(0x0006);
  5326  000C76  0E00               	movlw	0
  5327  000C78  0100               	movlb	0	; () banked
  5328  000C7A  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5329  000C7C  0E06               	movlw	6
  5330  000C7E  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  5331  000C80  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  5332  000C84  C0B9  F07D         	movff	?_ReadIntEEPROM,_PID_Kp
  5333  000C88  C0BA  F07E         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  5334                           
  5335                           ;FastBuggy17_Main_Code_TUNING.c: 626: PID_Kd = ReadIntEEPROM(0x0009);
  5336  000C8C  0E00               	movlw	0
  5337  000C8E  0100               	movlb	0	; () banked
  5338  000C90  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5339  000C92  0E09               	movlw	9
  5340  000C94  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  5341  000C96  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  5342  000C9A  C0B9  F079         	movff	?_ReadIntEEPROM,_PID_Kd
  5343  000C9E  C0BA  F07A         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  5344                           
  5345                           ;FastBuggy17_Main_Code_TUNING.c: 627: PID_Ki = ReadIntEEPROM(0x000C);
  5346  000CA2  0E00               	movlw	0
  5347  000CA4  0100               	movlb	0	; () banked
  5348  000CA6  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5349  000CA8  0E0C               	movlw	12
  5350  000CAA  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  5351  000CAC  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  5352  000CB0  C0B9  F07B         	movff	?_ReadIntEEPROM,_PID_Ki
  5353  000CB4  C0BA  F07C         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5354                           
  5355                           ;FastBuggy17_Main_Code_TUNING.c: 628: }
  5356                           ;FastBuggy17_Main_Code_TUNING.c: 629: break;
  5357  000CB8  D001               	goto	l946
  5358  000CBA  D78A               	goto	l6465
  5359  000CBC                     l946:
  5360  000CBC  0012               	return		;funcret
  5361  000CBE                     __end_of_LoadPIDValues:
  5362                           	opt stack 0
  5363                           prodh	equ	0xFF4
  5364                           prodl	equ	0xFF3
  5365                           postinc0	equ	0xFEE
  5366                           wreg	equ	0xFE8
  5367                           indf2	equ	0xFDF
  5368                           postinc2	equ	0xFDE
  5369                           postdec2	equ	0xFDD
  5370                           fsr2h	equ	0xFDA
  5371                           fsr2l	equ	0xFD9
  5372                           status	equ	0xFD8
  5373                           
  5374 ;; *************** function _SetPIDValues *****************
  5375 ;; Defined at:
  5376 ;;		line 573 in file "FastBuggy17_Main_Code_TUNING.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  char_index      1   28[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;		None               void
  5383 ;; Registers used:
  5384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;Total ram usage:        4 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:   10
  5397 ;; This function calls:
  5398 ;;		_FlushRxBuf
  5399 ;;		_GetCharRxBuf
  5400 ;;		_PutCharRxBuf
  5401 ;;		_Read1USART
  5402 ;;		_SendStatus
  5403 ;;		_WriteCharEEPROM
  5404 ;;		_WriteIntEEPROM
  5405 ;; This function is called by:
  5406 ;;		_LoadPIDValues
  5407 ;;		_main
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text34
  5412  000888                     __ptext34:
  5413                           	opt stack 0
  5414  000888                     _SetPIDValues:
  5415                           	opt stack 20
  5416                           
  5417                           ;FastBuggy17_Main_Code_TUNING.c: 574: SendStatus(0x08);
  5418                           
  5419                           ;incstack = 0
  5420  000888  0E08               	movlw	8
  5421  00088A  ECB8  F00E         	call	_SendStatus
  5422                           
  5423                           ;FastBuggy17_Main_Code_TUNING.c: 576: unsigned char char_index;
  5424                           ;FastBuggy17_Main_Code_TUNING.c: 578: FlushRxBuf();
  5425  00088E  EC60  F00F         	call	_FlushRxBuf	;wreg free
  5426                           
  5427                           ;FastBuggy17_Main_Code_TUNING.c: 580: for(char_index = 0; char_index <= 8; char_index++)
      +                           {
  5428  000892  0E00               	movlw	0
  5429  000894  0100               	movlb	0	; () banked
  5430  000896  6FC3               	movwf	SetPIDValues@char_index& (0+255),b
  5431  000898                     l6175:
  5432                           
  5433                           ; BSR set to: 0
  5434  000898  0E08               	movlw	8
  5435  00089A  0100               	movlb	0	; () banked
  5436  00089C  65C3               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5437  00089E  D002               	goto	l926
  5438                           
  5439                           ; BSR set to: 0
  5440  0008A0  D00B               	goto	l6185
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;FastBuggy17_Main_Code_TUNING.c: 581: while(!(PIR1bits.RCIF));
  5444  0008A2  D000               	goto	l926
  5445  0008A4                     l926:
  5446  0008A4  AA9E               	btfss	3998,5,c	;volatile
  5447  0008A6  D7FE               	goto	l926
  5448                           
  5449                           ;FastBuggy17_Main_Code_TUNING.c: 583: PutCharRxBuf(Read1USART());
  5450  0008A8  EC72  F010         	call	_Read1USART	;wreg free
  5451  0008AC  ECFB  F00D         	call	_PutCharRxBuf
  5452  0008B0  0100               	movlb	0	; () banked
  5453  0008B2  2BC3               	incf	SetPIDValues@char_index& (0+255),f,b
  5454  0008B4  D7F1               	goto	l6175
  5455                           
  5456                           ; BSR set to: 0
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;FastBuggy17_Main_Code_TUNING.c: 584: }
  5460                           ;FastBuggy17_Main_Code_TUNING.c: 586: while(GetCharRxBuf() != 0xAA);
  5461                           
  5462                           ; BSR set to: 0
  5463  0008B6  D000               	goto	l6185
  5464  0008B8                     l6185:
  5465  0008B8  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5466  0008BC  0AAA               	xorlw	170
  5467  0008BE  B4D8               	btfsc	status,2,c
  5468  0008C0  D002               	goto	l6187
  5469  0008C2  D7FA               	goto	l6185
  5470                           
  5471                           ;FastBuggy17_Main_Code_TUNING.c: 587: while(GetCharRxBuf() != 0x01);
  5472  0008C4  D000               	goto	l6187
  5473  0008C6                     l6187:
  5474  0008C6  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5475  0008CA  06E8               	decf	wreg,f,c
  5476  0008CC  A4D8               	btfss	status,2,c
  5477  0008CE  D7FB               	goto	l6187
  5478                           
  5479                           ;FastBuggy17_Main_Code_TUNING.c: 589: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5480  0008D0  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5481  0008D4  0100               	movlb	0	; () banked
  5482  0008D6  6FC0               	movwf	??_SetPIDValues& (0+255),b
  5483  0008D8  0100               	movlb	0	; () banked
  5484  0008DA  51C0               	movf	??_SetPIDValues& (0+255),w,b
  5485  0008DC  0100               	movlb	0	; () banked
  5486  0008DE  6FC2               	movwf	(??_SetPIDValues+2)& (0+255),b
  5487  0008E0  6BC1               	clrf	(??_SetPIDValues+1)& (0+255),b
  5488  0008E2  0E00               	movlw	0
  5489  0008E4  0100               	movlb	0	; () banked
  5490  0008E6  15C1               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5491  0008E8  0100               	movlb	0	; () banked
  5492  0008EA  6F7D               	movwf	_PID_Kp& (0+255),b
  5493  0008EC  0EFF               	movlw	255
  5494  0008EE  0100               	movlb	0	; () banked
  5495  0008F0  15C2               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5496  0008F2  0100               	movlb	0	; () banked
  5497  0008F4  6F7E               	movwf	(_PID_Kp+1)& (0+255),b
  5498                           
  5499                           ;FastBuggy17_Main_Code_TUNING.c: 590: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5500  0008F6  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5501  0008FA  0100               	movlb	0	; () banked
  5502  0008FC  6FC0               	movwf	??_SetPIDValues& (0+255),b
  5503  0008FE  0100               	movlb	0	; () banked
  5504  000900  51C0               	movf	??_SetPIDValues& (0+255),w,b
  5505  000902  0100               	movlb	0	; () banked
  5506  000904  137D               	iorwf	_PID_Kp& (0+255),f,b
  5507                           
  5508                           ;FastBuggy17_Main_Code_TUNING.c: 592: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5509  000906  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5510  00090A  0100               	movlb	0	; () banked
  5511  00090C  6FC0               	movwf	??_SetPIDValues& (0+255),b
  5512  00090E  0100               	movlb	0	; () banked
  5513  000910  51C0               	movf	??_SetPIDValues& (0+255),w,b
  5514  000912  0100               	movlb	0	; () banked
  5515  000914  6FC2               	movwf	(??_SetPIDValues+2)& (0+255),b
  5516  000916  6BC1               	clrf	(??_SetPIDValues+1)& (0+255),b
  5517  000918  0E00               	movlw	0
  5518  00091A  0100               	movlb	0	; () banked
  5519  00091C  15C1               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5520  00091E  0100               	movlb	0	; () banked
  5521  000920  6F79               	movwf	_PID_Kd& (0+255),b
  5522  000922  0EFF               	movlw	255
  5523  000924  0100               	movlb	0	; () banked
  5524  000926  15C2               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5525  000928  0100               	movlb	0	; () banked
  5526  00092A  6F7A               	movwf	(_PID_Kd+1)& (0+255),b
  5527                           
  5528                           ;FastBuggy17_Main_Code_TUNING.c: 593: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5529  00092C  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5530  000930  0100               	movlb	0	; () banked
  5531  000932  6FC0               	movwf	??_SetPIDValues& (0+255),b
  5532  000934  0100               	movlb	0	; () banked
  5533  000936  51C0               	movf	??_SetPIDValues& (0+255),w,b
  5534  000938  0100               	movlb	0	; () banked
  5535  00093A  1379               	iorwf	_PID_Kd& (0+255),f,b
  5536                           
  5537                           ;FastBuggy17_Main_Code_TUNING.c: 595: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5538  00093C  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5539  000940  0100               	movlb	0	; () banked
  5540  000942  6FC0               	movwf	??_SetPIDValues& (0+255),b
  5541  000944  0100               	movlb	0	; () banked
  5542  000946  51C0               	movf	??_SetPIDValues& (0+255),w,b
  5543  000948  0100               	movlb	0	; () banked
  5544  00094A  6FC2               	movwf	(??_SetPIDValues+2)& (0+255),b
  5545  00094C  6BC1               	clrf	(??_SetPIDValues+1)& (0+255),b
  5546  00094E  0E00               	movlw	0
  5547  000950  0100               	movlb	0	; () banked
  5548  000952  15C1               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5549  000954  0100               	movlb	0	; () banked
  5550  000956  6F7B               	movwf	_PID_Ki& (0+255),b
  5551  000958  0EFF               	movlw	255
  5552  00095A  0100               	movlb	0	; () banked
  5553  00095C  15C2               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5554  00095E  0100               	movlb	0	; () banked
  5555  000960  6F7C               	movwf	(_PID_Ki+1)& (0+255),b
  5556                           
  5557                           ;FastBuggy17_Main_Code_TUNING.c: 596: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5558  000962  EC94  F00D         	call	_GetCharRxBuf	;wreg free
  5559  000966  0100               	movlb	0	; () banked
  5560  000968  6FC0               	movwf	??_SetPIDValues& (0+255),b
  5561  00096A  0100               	movlb	0	; () banked
  5562  00096C  51C0               	movf	??_SetPIDValues& (0+255),w,b
  5563  00096E  0100               	movlb	0	; () banked
  5564  000970  137B               	iorwf	_PID_Ki& (0+255),f,b
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;FastBuggy17_Main_Code_TUNING.c: 598: WriteIntEEPROM(0x0006, PID_Kp);
  5568  000972  0E00               	movlw	0
  5569  000974  0100               	movlb	0	; () banked
  5570  000976  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5571  000978  0E06               	movlw	6
  5572  00097A  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  5573  00097C  C07D  F0BC         	movff	_PID_Kp,WriteIntEEPROM@data
  5574  000980  C07E  F0BD         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5575  000984  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  5576                           
  5577                           ;FastBuggy17_Main_Code_TUNING.c: 599: WriteIntEEPROM(0x0009, PID_Kd);
  5578  000988  0E00               	movlw	0
  5579  00098A  0100               	movlb	0	; () banked
  5580  00098C  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5581  00098E  0E09               	movlw	9
  5582  000990  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  5583  000992  C079  F0BC         	movff	_PID_Kd,WriteIntEEPROM@data
  5584  000996  C07A  F0BD         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5585  00099A  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  5586                           
  5587                           ;FastBuggy17_Main_Code_TUNING.c: 600: WriteIntEEPROM(0x000C, PID_Ki);
  5588  00099E  0E00               	movlw	0
  5589  0009A0  0100               	movlb	0	; () banked
  5590  0009A2  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5591  0009A4  0E0C               	movlw	12
  5592  0009A6  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  5593  0009A8  C07B  F0BC         	movff	_PID_Ki,WriteIntEEPROM@data
  5594  0009AC  C07C  F0BD         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5595  0009B0  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  5596                           
  5597                           ;FastBuggy17_Main_Code_TUNING.c: 602: WriteCharEEPROM(0x0005, 1);
  5598  0009B4  0E00               	movlw	0
  5599  0009B6  0100               	movlb	0	; () banked
  5600  0009B8  6FBB               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5601  0009BA  0E05               	movlw	5
  5602  0009BC  6FBA               	movwf	WriteCharEEPROM@address& (0+255),b
  5603  0009BE  0E01               	movlw	1
  5604  0009C0  0100               	movlb	0	; () banked
  5605  0009C2  6FBC               	movwf	WriteCharEEPROM@data& (0+255),b
  5606  0009C4  EC90  F011         	call	_WriteCharEEPROM	;wreg free
  5607  0009C8  0012               	return		;funcret
  5608  0009CA                     __end_of_SetPIDValues:
  5609                           	opt stack 0
  5610                           prodh	equ	0xFF4
  5611                           prodl	equ	0xFF3
  5612                           postinc0	equ	0xFEE
  5613                           wreg	equ	0xFE8
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function _PutCharRxBuf *****************
  5622 ;; Defined at:
  5623 ;;		line 25 in file "Wireless.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  ch              1    wreg     unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  ch              1   23[BANK0 ] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;		None               void
  5630 ;; Registers used:
  5631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;Total ram usage:        2 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    8
  5644 ;; This function calls:
  5645 ;;		___awmod
  5646 ;; This function is called by:
  5647 ;;		_SetPIDValues
  5648 ;;		_WirelessRx_ISR
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text35
  5653  001BF6                     __ptext35:
  5654                           	opt stack 0
  5655  001BF6                     _PutCharRxBuf:
  5656                           	opt stack 21
  5657                           
  5658                           ;incstack = 0
  5659                           ;PutCharRxBuf@ch stored from wreg
  5660  001BF6  0100               	movlb	0	; () banked
  5661  001BF8  6FBE               	movwf	PutCharRxBuf@ch& (0+255),b
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5665  001BFA  501F               	movf	_put_Rx_index,w,c
  5666  001BFC  0D01               	mullw	1
  5667  001BFE  0E2D               	movlw	low _Rx_buffer
  5668  001C00  24F3               	addwf	prodl,w,c
  5669  001C02  6ED9               	movwf	fsr2l,c
  5670  001C04  0E01               	movlw	high _Rx_buffer
  5671  001C06  20F4               	addwfc	prodh,w,c
  5672  001C08  6EDA               	movwf	fsr2h,c
  5673  001C0A  C0BE  FFDF         	movff	PutCharRxBuf@ch,indf2
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5677  001C0E  C01F  F0BD         	movff	_put_Rx_index,??_PutCharRxBuf
  5678  001C12  0E01               	movlw	1
  5679  001C14  0100               	movlb	0	; () banked
  5680  001C16  27BD               	addwf	??_PutCharRxBuf& (0+255),f,b
  5681  001C18  0100               	movlb	0	; () banked
  5682  001C1A  51BD               	movf	??_PutCharRxBuf& (0+255),w,b
  5683  001C1C  0100               	movlb	0	; () banked
  5684  001C1E  6FB7               	movwf	___awmod@dividend& (0+255),b
  5685  001C20  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  5686  001C22  0E00               	movlw	0
  5687  001C24  0100               	movlb	0	; () banked
  5688  001C26  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  5689  001C28  0E19               	movlw	25
  5690  001C2A  6FB9               	movwf	___awmod@divisor& (0+255),b
  5691  001C2C  ECB3  F007         	call	___awmod	;wreg free
  5692  001C30  0100               	movlb	0	; () banked
  5693  001C32  51B7               	movf	?___awmod& (0+255),w,b
  5694  001C34  6E1F               	movwf	_put_Rx_index,c
  5695                           
  5696                           ; BSR set to: 0
  5697  001C36  0012               	return		;funcret
  5698  001C38                     __end_of_PutCharRxBuf:
  5699                           	opt stack 0
  5700                           prodh	equ	0xFF4
  5701                           prodl	equ	0xFF3
  5702                           postinc0	equ	0xFEE
  5703                           wreg	equ	0xFE8
  5704                           indf2	equ	0xFDF
  5705                           postinc2	equ	0xFDE
  5706                           postdec2	equ	0xFDD
  5707                           fsr2h	equ	0xFDA
  5708                           fsr2l	equ	0xFD9
  5709                           status	equ	0xFD8
  5710                           
  5711 ;; *************** function _GetCharRxBuf *****************
  5712 ;; Defined at:
  5713 ;;		line 31 in file "Wireless.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  ch              1   23[BANK0 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    8
  5734 ;; This function calls:
  5735 ;;		___awmod
  5736 ;; This function is called by:
  5737 ;;		_SetPIDValues
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text36
  5742  001B28                     __ptext36:
  5743                           	opt stack 0
  5744  001B28                     _GetCharRxBuf:
  5745                           	opt stack 21
  5746                           
  5747                           ;Wireless.c: 32: unsigned char ch;
  5748                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;incstack = 0
  5752  001B28  501D               	movf	_get_Rx_index,w,c
  5753  001B2A  0D01               	mullw	1
  5754  001B2C  0E2D               	movlw	low _Rx_buffer
  5755  001B2E  24F3               	addwf	prodl,w,c
  5756  001B30  6ED9               	movwf	fsr2l,c
  5757  001B32  0E01               	movlw	high _Rx_buffer
  5758  001B34  20F4               	addwfc	prodh,w,c
  5759  001B36  6EDA               	movwf	fsr2h,c
  5760  001B38  50DF               	movf	indf2,w,c
  5761  001B3A  0100               	movlb	0	; () banked
  5762  001B3C  6FBE               	movwf	GetCharRxBuf@ch& (0+255),b
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5766  001B3E  C01D  F0BD         	movff	_get_Rx_index,??_GetCharRxBuf
  5767  001B42  0E01               	movlw	1
  5768  001B44  0100               	movlb	0	; () banked
  5769  001B46  27BD               	addwf	??_GetCharRxBuf& (0+255),f,b
  5770  001B48  0100               	movlb	0	; () banked
  5771  001B4A  51BD               	movf	??_GetCharRxBuf& (0+255),w,b
  5772  001B4C  0100               	movlb	0	; () banked
  5773  001B4E  6FB7               	movwf	___awmod@dividend& (0+255),b
  5774  001B50  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  5775  001B52  0E00               	movlw	0
  5776  001B54  0100               	movlb	0	; () banked
  5777  001B56  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  5778  001B58  0E19               	movlw	25
  5779  001B5A  6FB9               	movwf	___awmod@divisor& (0+255),b
  5780  001B5C  ECB3  F007         	call	___awmod	;wreg free
  5781  001B60  0100               	movlb	0	; () banked
  5782  001B62  51B7               	movf	?___awmod& (0+255),w,b
  5783  001B64  6E1D               	movwf	_get_Rx_index,c
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;Wireless.c: 37: return(ch);
  5787  001B66  0100               	movlb	0	; () banked
  5788  001B68  51BE               	movf	GetCharRxBuf@ch& (0+255),w,b
  5789  001B6A  D000               	goto	l286
  5790  001B6C                     l286:
  5791                           
  5792                           ; BSR set to: 0
  5793  001B6C  0012               	return		;funcret
  5794  001B6E                     __end_of_GetCharRxBuf:
  5795                           	opt stack 0
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           postinc0	equ	0xFEE
  5799                           wreg	equ	0xFE8
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _PB2pressed *****************
  5808 ;; Defined at:
  5809 ;;		line 441 in file "FastBuggy17_Main_Code_TUNING.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      unsigned char 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    9
  5830 ;; This function calls:
  5831 ;;		_CommandAvailable
  5832 ;;		_GetCommand
  5833 ;;		_ReadMillis2
  5834 ;;		_ResetMillis2
  5835 ;; This function is called by:
  5836 ;;		_LoadPIDValues
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text37
  5842  0019BA                     __ptext37:
  5843                           	opt stack 0
  5844  0019BA                     _PB2pressed:
  5845                           	opt stack 21
  5846                           
  5847                           ;FastBuggy17_Main_Code_TUNING.c: 442: if(CommandAvailable() == 1) {
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;incstack = 0
  5851  0019BA  EC0B  F012         	call	_CommandAvailable	;wreg free
  5852  0019BE  06E8               	decf	wreg,f,c
  5853  0019C0  A4D8               	btfss	status,2,c
  5854  0019C2  D00B               	goto	l865
  5855                           
  5856                           ;FastBuggy17_Main_Code_TUNING.c: 443: if(GetCommand() == 0x06) {
  5857  0019C4  EC45  F012         	call	_GetCommand	;wreg free
  5858  0019C8  0A06               	xorlw	6
  5859  0019CA  A4D8               	btfss	status,2,c
  5860  0019CC  D01F               	goto	l6135
  5861  0019CE  D01B               	goto	l6129
  5862                           
  5863                           ;FastBuggy17_Main_Code_TUNING.c: 444: return(1);
  5864  0019D0  D022               	goto	l867
  5865                           
  5866                           ;FastBuggy17_Main_Code_TUNING.c: 445: }
  5867  0019D2  D01F               	goto	l6139
  5868  0019D4  D01B               	goto	l6135
  5869                           
  5870                           ;FastBuggy17_Main_Code_TUNING.c: 446: else {
  5871                           ;FastBuggy17_Main_Code_TUNING.c: 447: return(0);
  5872  0019D6  D01F               	goto	l867
  5873                           
  5874                           ;FastBuggy17_Main_Code_TUNING.c: 448: }
  5875                           ;FastBuggy17_Main_Code_TUNING.c: 449: }
  5876  0019D8  D01C               	goto	l6139
  5877  0019DA                     l865:
  5878                           
  5879                           ;FastBuggy17_Main_Code_TUNING.c: 450: else if(PORTBbits.RB2 == 0) {
  5880  0019DA  B481               	btfsc	3969,2,c	;volatile
  5881  0019DC  D003               	goto	l870
  5882  0019DE  D016               	goto	l6135
  5883                           
  5884                           ;FastBuggy17_Main_Code_TUNING.c: 451: return(0);
  5885  0019E0  D01A               	goto	l867
  5886                           
  5887                           ;FastBuggy17_Main_Code_TUNING.c: 452: }
  5888  0019E2  D017               	goto	l6139
  5889  0019E4                     l870:
  5890                           
  5891                           ;FastBuggy17_Main_Code_TUNING.c: 453: else if(PORTBbits.RB2 == 1) {
  5892  0019E4  A481               	btfss	3969,2,c	;volatile
  5893  0019E6  D015               	goto	l6139
  5894                           
  5895                           ;FastBuggy17_Main_Code_TUNING.c: 454: ResetMillis2();
  5896  0019E8  EC37  F012         	call	_ResetMillis2	;wreg free
  5897                           
  5898                           ;FastBuggy17_Main_Code_TUNING.c: 455: while(ReadMillis2() < 10);
  5899  0019EC  D000               	goto	l6127
  5900  0019EE                     l6127:
  5901  0019EE  EC3C  F012         	call	_ReadMillis2	;wreg free
  5902  0019F2  0100               	movlb	0	; () banked
  5903  0019F4  51B8               	movf	(?_ReadMillis2+1)& (0+255),w,b
  5904  0019F6  E105               	bnz	u5190
  5905  0019F8  0E0A               	movlw	10
  5906  0019FA  0100               	movlb	0	; () banked
  5907  0019FC  5DB7               	subwf	?_ReadMillis2& (0+255),w,b
  5908  0019FE  A0D8               	btfss	status,0,c
  5909  001A00  D7F6               	goto	l6127
  5910  001A02                     u5190:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;FastBuggy17_Main_Code_TUNING.c: 456: if(PORTBbits.RB2 == 1) {
  5914  001A02  A481               	btfss	3969,2,c	;volatile
  5915  001A04  D003               	goto	l6135
  5916  001A06                     l6129:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;FastBuggy17_Main_Code_TUNING.c: 457: return(1);
  5920  001A06  0E01               	movlw	1
  5921                           
  5922                           ; BSR set to: 0
  5923  001A08  D006               	goto	l867
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;FastBuggy17_Main_Code_TUNING.c: 458: }
  5927  001A0A  D003               	goto	l6139
  5928  001A0C                     l6135:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;FastBuggy17_Main_Code_TUNING.c: 459: else {
  5932                           ;FastBuggy17_Main_Code_TUNING.c: 460: return(0);
  5933  001A0C  0E00               	movlw	0
  5934                           
  5935                           ; BSR set to: 0
  5936  001A0E  D003               	goto	l867
  5937                           
  5938                           ; BSR set to: 0
  5939                           
  5940                           ; BSR set to: 0
  5941                           
  5942                           ; BSR set to: 0
  5943  001A10  D000               	goto	l6139
  5944  001A12                     l6139:
  5945                           
  5946                           ;FastBuggy17_Main_Code_TUNING.c: 461: }
  5947                           ;FastBuggy17_Main_Code_TUNING.c: 462: }
  5948                           ;FastBuggy17_Main_Code_TUNING.c: 464: return(0);
  5949  001A12  0E00               	movlw	0
  5950  001A14  D000               	goto	l867
  5951  001A16                     l867:
  5952  001A16  0012               	return		;funcret
  5953  001A18                     __end_of_PB2pressed:
  5954                           	opt stack 0
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           postinc0	equ	0xFEE
  5958                           wreg	equ	0xFE8
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _LoadCalibration *****************
  5967 ;; Defined at:
  5968 ;;		line 554 in file "FastBuggy17_Main_Code_TUNING.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  index           1   35[BANK0 ] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;		None               void
  5975 ;; Registers used:
  5976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;Total ram usage:        3 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:   12
  5989 ;; This function calls:
  5990 ;;		_GenerateCalibration
  5991 ;;		_ReadCharEEPROM
  5992 ;;		_ReadIntEEPROM
  5993 ;; This function is called by:
  5994 ;;		_main
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text38
  5999  001172                     __ptext38:
  6000                           	opt stack 0
  6001  001172                     _LoadCalibration:
  6002                           	opt stack 18
  6003                           
  6004                           ;FastBuggy17_Main_Code_TUNING.c: 555: unsigned char index;
  6005                           ;FastBuggy17_Main_Code_TUNING.c: 557: if(ReadCharEEPROM(0x00) == 0xFF) {
  6006                           
  6007                           ;incstack = 0
  6008  001172  0E00               	movlw	0
  6009  001174  0100               	movlb	0	; () banked
  6010  001176  6FBA               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  6011  001178  0E00               	movlw	0
  6012  00117A  6FB9               	movwf	ReadCharEEPROM@address& (0+255),b
  6013  00117C  ECC6  F011         	call	_ReadCharEEPROM	;wreg free
  6014  001180  0AFF               	xorlw	255
  6015  001182  A4D8               	btfss	status,2,c
  6016  001184  D003               	goto	l6449
  6017                           
  6018                           ;FastBuggy17_Main_Code_TUNING.c: 558: GenerateCalibration();
  6019  001186  EC0D  F008         	call	_GenerateCalibration	;wreg free
  6020                           
  6021                           ;FastBuggy17_Main_Code_TUNING.c: 559: }
  6022  00118A  D046               	goto	l921
  6023  00118C                     l6449:
  6024                           
  6025                           ;FastBuggy17_Main_Code_TUNING.c: 561: else {
  6026                           ;FastBuggy17_Main_Code_TUNING.c: 562: for(index = 0; index < 5; index++) {
  6027  00118C  0E00               	movlw	0
  6028  00118E  0100               	movlb	0	; () banked
  6029  001190  6FCA               	movwf	LoadCalibration@index& (0+255),b
  6030  001192                     l6451:
  6031                           
  6032                           ; BSR set to: 0
  6033  001192  0E04               	movlw	4
  6034  001194  0100               	movlb	0	; () banked
  6035  001196  65CA               	cpfsgt	LoadCalibration@index& (0+255),b
  6036  001198  D001               	goto	l6455
  6037                           
  6038                           ; BSR set to: 0
  6039  00119A  D027               	goto	l6461
  6040  00119C                     l6455:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;FastBuggy17_Main_Code_TUNING.c: 563: sensor_offsets[index] = ReadIntEEPROM(0x00E0 + (2 
      +                          * index));
  6044  00119C  0100               	movlb	0	; () banked
  6045  00119E  51CA               	movf	LoadCalibration@index& (0+255),w,b
  6046  0011A0  0100               	movlb	0	; () banked
  6047  0011A2  6FC8               	movwf	??_LoadCalibration& (0+255),b
  6048  0011A4  6BC9               	clrf	(??_LoadCalibration+1)& (0+255),b
  6049  0011A6  90D8               	bcf	status,0,c
  6050  0011A8  0100               	movlb	0	; () banked
  6051  0011AA  37C8               	rlcf	??_LoadCalibration& (0+255),f,b
  6052  0011AC  37C9               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  6053  0011AE  0EE0               	movlw	224
  6054  0011B0  0100               	movlb	0	; () banked
  6055  0011B2  25C8               	addwf	??_LoadCalibration& (0+255),w,b
  6056  0011B4  0100               	movlb	0	; () banked
  6057  0011B6  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  6058  0011B8  0E00               	movlw	0
  6059  0011BA  0100               	movlb	0	; () banked
  6060  0011BC  21C9               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  6061  0011BE  0100               	movlb	0	; () banked
  6062  0011C0  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6063  0011C2  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  6064  0011C6  0100               	movlb	0	; () banked
  6065  0011C8  51CA               	movf	LoadCalibration@index& (0+255),w,b
  6066  0011CA  0D02               	mullw	2
  6067  0011CC  0E81               	movlw	low _sensor_offsets
  6068  0011CE  24F3               	addwf	prodl,w,c
  6069  0011D0  6ED9               	movwf	fsr2l,c
  6070  0011D2  0E00               	movlw	high _sensor_offsets
  6071  0011D4  20F4               	addwfc	prodh,w,c
  6072  0011D6  6EDA               	movwf	fsr2h,c
  6073  0011D8  0100               	movlb	0	; () banked
  6074  0011DA  C0B9  FFDE         	movff	?_ReadIntEEPROM,postinc2
  6075  0011DE  0100               	movlb	0	; () banked
  6076  0011E0  C0BA  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  6077                           
  6078                           ; BSR set to: 0
  6079  0011E4  0100               	movlb	0	; () banked
  6080  0011E6  2BCA               	incf	LoadCalibration@index& (0+255),f,b
  6081  0011E8  D7D4               	goto	l6451
  6082  0011EA                     l6461:
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;FastBuggy17_Main_Code_TUNING.c: 564: }
  6086                           ;FastBuggy17_Main_Code_TUNING.c: 566: PID_set_point = ReadIntEEPROM(0x0001);
  6087  0011EA  0E00               	movlw	0
  6088  0011EC  0100               	movlb	0	; () banked
  6089  0011EE  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6090  0011F0  0E01               	movlw	1
  6091  0011F2  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  6092  0011F4  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  6093  0011F8  C0B9  F0A1         	movff	?_ReadIntEEPROM,_PID_set_point
  6094  0011FC  C0BA  F0A2         	movff	?_ReadIntEEPROM+1,_PID_set_point+1
  6095                           
  6096                           ;FastBuggy17_Main_Code_TUNING.c: 568: sensor_threshold = ReadIntEEPROM(0x0003);
  6097  001200  0E00               	movlw	0
  6098  001202  0100               	movlb	0	; () banked
  6099  001204  6FBA               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6100  001206  0E03               	movlw	3
  6101  001208  6FB9               	movwf	ReadIntEEPROM@address& (0+255),b
  6102  00120A  EC0C  F00D         	call	_ReadIntEEPROM	;wreg free
  6103  00120E  C0B9  F0A5         	movff	?_ReadIntEEPROM,_sensor_threshold
  6104  001212  C0BA  F0A6         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  6105  001216  D000               	goto	l921
  6106  001218                     l921:
  6107  001218  0012               	return		;funcret
  6108  00121A                     __end_of_LoadCalibration:
  6109                           	opt stack 0
  6110                           prodh	equ	0xFF4
  6111                           prodl	equ	0xFF3
  6112                           postinc0	equ	0xFEE
  6113                           wreg	equ	0xFE8
  6114                           indf2	equ	0xFDF
  6115                           postinc2	equ	0xFDE
  6116                           postdec2	equ	0xFDD
  6117                           fsr2h	equ	0xFDA
  6118                           fsr2l	equ	0xFD9
  6119                           status	equ	0xFD8
  6120                           
  6121 ;; *************** function _ReadIntEEPROM *****************
  6122 ;; Defined at:
  6123 ;;		line 84 in file "eeprom.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  address         2   18[BANK0 ] unsigned int 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  data            2   23[BANK0 ] unsigned int 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  2   18[BANK0 ] unsigned int 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:        7 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    8
  6144 ;; This function calls:
  6145 ;;		_ReadEEPROM
  6146 ;; This function is called by:
  6147 ;;		_LoadCalibration
  6148 ;;		_LoadPIDValues
  6149 ;;		_main
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text39
  6154  001A18                     __ptext39:
  6155                           	opt stack 0
  6156  001A18                     _ReadIntEEPROM:
  6157                           	opt stack 22
  6158                           
  6159                           ;eeprom.c: 85: unsigned int data;
  6160                           ;eeprom.c: 87: data = (ReadEEPROM(address) << 8) & 0xFF00;
  6161                           
  6162                           ;incstack = 0
  6163  001A18  C0B9  F0B7         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  6164  001A1C  C0BA  F0B8         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  6165  001A20  EC0B  F010         	call	_ReadEEPROM	;wreg free
  6166  001A24  0100               	movlb	0	; () banked
  6167  001A26  6FBB               	movwf	??_ReadIntEEPROM& (0+255),b
  6168  001A28  0100               	movlb	0	; () banked
  6169  001A2A  51BB               	movf	??_ReadIntEEPROM& (0+255),w,b
  6170  001A2C  0100               	movlb	0	; () banked
  6171  001A2E  6FBD               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  6172  001A30  6BBC               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  6173  001A32  0E00               	movlw	0
  6174  001A34  0100               	movlb	0	; () banked
  6175  001A36  15BC               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  6176  001A38  0100               	movlb	0	; () banked
  6177  001A3A  6FBE               	movwf	ReadIntEEPROM@data& (0+255),b
  6178  001A3C  0EFF               	movlw	255
  6179  001A3E  0100               	movlb	0	; () banked
  6180  001A40  15BD               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  6181  001A42  0100               	movlb	0	; () banked
  6182  001A44  6FBF               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  6183                           
  6184                           ;eeprom.c: 88: data |= ReadEEPROM(address + 1) & 0x00FF;
  6185  001A46  0E01               	movlw	1
  6186  001A48  0100               	movlb	0	; () banked
  6187  001A4A  25B9               	addwf	ReadIntEEPROM@address& (0+255),w,b
  6188  001A4C  0100               	movlb	0	; () banked
  6189  001A4E  6FB7               	movwf	ReadEEPROM@address& (0+255),b
  6190  001A50  0E00               	movlw	0
  6191  001A52  0100               	movlb	0	; () banked
  6192  001A54  21BA               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  6193  001A56  0100               	movlb	0	; () banked
  6194  001A58  6FB8               	movwf	(ReadEEPROM@address+1)& (0+255),b
  6195  001A5A  EC0B  F010         	call	_ReadEEPROM	;wreg free
  6196  001A5E  0100               	movlb	0	; () banked
  6197  001A60  6FBB               	movwf	??_ReadIntEEPROM& (0+255),b
  6198  001A62  0100               	movlb	0	; () banked
  6199  001A64  51BB               	movf	??_ReadIntEEPROM& (0+255),w,b
  6200  001A66  0100               	movlb	0	; () banked
  6201  001A68  13BE               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;eeprom.c: 90: return(data);
  6205  001A6A  C0BE  F0B9         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  6206  001A6E  C0BF  F0BA         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  6207  001A72  D000               	goto	l237
  6208  001A74                     l237:
  6209                           
  6210                           ; BSR set to: 0
  6211  001A74  0012               	return		;funcret
  6212  001A76                     __end_of_ReadIntEEPROM:
  6213                           	opt stack 0
  6214                           prodh	equ	0xFF4
  6215                           prodl	equ	0xFF3
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           indf2	equ	0xFDF
  6219                           postinc2	equ	0xFDE
  6220                           postdec2	equ	0xFDD
  6221                           fsr2h	equ	0xFDA
  6222                           fsr2l	equ	0xFD9
  6223                           status	equ	0xFD8
  6224                           
  6225 ;; *************** function _ReadCharEEPROM *****************
  6226 ;; Defined at:
  6227 ;;		line 94 in file "eeprom.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  address         2   18[BANK0 ] unsigned int 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      unsigned char 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2, status,0, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;Total ram usage:        2 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    8
  6248 ;; This function calls:
  6249 ;;		_ReadEEPROM
  6250 ;; This function is called by:
  6251 ;;		_LoadCalibration
  6252 ;;		_LoadPIDValues
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text40
  6257  00238C                     __ptext40:
  6258                           	opt stack 0
  6259  00238C                     _ReadCharEEPROM:
  6260                           	opt stack 21
  6261                           
  6262                           ;eeprom.c: 95: return(ReadEEPROM(address));
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;incstack = 0
  6266  00238C  C0B9  F0B7         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6267  002390  C0BA  F0B8         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6268  002394  EC0B  F010         	call	_ReadEEPROM	;wreg free
  6269  002398  D000               	goto	l240
  6270  00239A                     l240:
  6271  00239A  0012               	return		;funcret
  6272  00239C                     __end_of_ReadCharEEPROM:
  6273                           	opt stack 0
  6274                           prodh	equ	0xFF4
  6275                           prodl	equ	0xFF3
  6276                           postinc0	equ	0xFEE
  6277                           wreg	equ	0xFE8
  6278                           indf2	equ	0xFDF
  6279                           postinc2	equ	0xFDE
  6280                           postdec2	equ	0xFDD
  6281                           fsr2h	equ	0xFDA
  6282                           fsr2l	equ	0xFD9
  6283                           status	equ	0xFD8
  6284                           
  6285 ;; *************** function _ReadEEPROM *****************
  6286 ;; Defined at:
  6287 ;;		line 37 in file "eeprom.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  address         2   16[BANK0 ] unsigned int 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      unsigned char 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;Total ram usage:        2 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    7
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_ReadIntEEPROM
  6312 ;;		_ReadCharEEPROM
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text41
  6317  002016                     __ptext41:
  6318                           	opt stack 0
  6319  002016                     _ReadEEPROM:
  6320                           	opt stack 22
  6321                           
  6322                           ;eeprom.c: 38: if(address > 0x03FF) {
  6323                           
  6324                           ;incstack = 0
  6325  002016  0E04               	movlw	4
  6326  002018  0100               	movlb	0	; () banked
  6327  00201A  5DB8               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6328  00201C  A0D8               	btfss	status,0,c
  6329  00201E  D002               	goto	l223
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;eeprom.c: 39: return(0);
  6333  002020  0E00               	movlw	0
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;eeprom.c: 40: }
  6337                           
  6338                           ; BSR set to: 0
  6339  002022  D00E               	goto	l224
  6340  002024                     l223:
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;eeprom.c: 41: else {
  6344                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6345  002024  C0B7  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6349  002028  0100               	movlb	0	; () banked
  6350  00202A  51B8               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6351  00202C  0B03               	andlw	3
  6352  00202E  6EAA               	movwf	4010,c	;volatile
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6356  002030  9EA6               	bcf	4006,7,c	;volatile
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6360  002032  9CA6               	bcf	4006,6,c	;volatile
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6364  002034  80A6               	bsf	4006,0,c	;volatile
  6365                           
  6366                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6367  002036  D000               	goto	l226
  6368  002038                     l226:
  6369  002038  B0A6               	btfsc	4006,0,c	;volatile
  6370  00203A  D7FE               	goto	l226
  6371                           
  6372                           ;eeprom.c: 50: return(EEDATA);
  6373  00203C  50A8               	movf	4008,w,c	;volatile
  6374  00203E  D000               	goto	l224
  6375  002040                     l224:
  6376  002040  0012               	return		;funcret
  6377  002042                     __end_of_ReadEEPROM:
  6378                           	opt stack 0
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           postinc0	equ	0xFEE
  6382                           wreg	equ	0xFE8
  6383                           indf2	equ	0xFDF
  6384                           postinc2	equ	0xFDE
  6385                           postdec2	equ	0xFDD
  6386                           fsr2h	equ	0xFDA
  6387                           fsr2l	equ	0xFD9
  6388                           status	equ	0xFD8
  6389                           
  6390 ;; *************** function _GenerateCalibration *****************
  6391 ;; Defined at:
  6392 ;;		line 530 in file "FastBuggy17_Main_Code_TUNING.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;		None
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  index           1   32[BANK0 ] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;		None               void
  6399 ;; Registers used:
  6400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;Total ram usage:        3 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:   11
  6413 ;; This function calls:
  6414 ;;		_CalibrateOffsets
  6415 ;;		_CalibrateOnLine
  6416 ;;		_CalibrateThreshold
  6417 ;;		_FlashLEDS
  6418 ;;		_WriteCharEEPROM
  6419 ;;		_WriteIntEEPROM
  6420 ;; This function is called by:
  6421 ;;		_LoadCalibration
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text42
  6427  00101A                     __ptext42:
  6428                           	opt stack 0
  6429  00101A                     _GenerateCalibration:
  6430                           	opt stack 18
  6431                           
  6432                           ;FastBuggy17_Main_Code_TUNING.c: 531: unsigned char index;
  6433                           ;FastBuggy17_Main_Code_TUNING.c: 533: CalibrateOffsets();
  6434                           
  6435                           ;incstack = 0
  6436  00101A  ECB0  F009         	call	_CalibrateOffsets	;wreg free
  6437                           
  6438                           ;FastBuggy17_Main_Code_TUNING.c: 535: for(index = 0; index < 5; index++) {
  6439  00101E  0E00               	movlw	0
  6440  001020  0100               	movlb	0	; () banked
  6441  001022  6FC7               	movwf	GenerateCalibration@index& (0+255),b
  6442  001024                     l6147:
  6443                           
  6444                           ; BSR set to: 0
  6445  001024  0E04               	movlw	4
  6446  001026  0100               	movlb	0	; () banked
  6447  001028  65C7               	cpfsgt	GenerateCalibration@index& (0+255),b
  6448  00102A  D001               	goto	l6151
  6449                           
  6450                           ; BSR set to: 0
  6451  00102C  D025               	goto	l6157
  6452  00102E                     l6151:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;FastBuggy17_Main_Code_TUNING.c: 536: WriteIntEEPROM(0x00E0 + (2* index), sensor_offsets
      +                          [index]);
  6456  00102E  0100               	movlb	0	; () banked
  6457  001030  51C7               	movf	GenerateCalibration@index& (0+255),w,b
  6458  001032  0100               	movlb	0	; () banked
  6459  001034  6FC5               	movwf	??_GenerateCalibration& (0+255),b
  6460  001036  6BC6               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6461  001038  90D8               	bcf	status,0,c
  6462  00103A  0100               	movlb	0	; () banked
  6463  00103C  37C5               	rlcf	??_GenerateCalibration& (0+255),f,b
  6464  00103E  37C6               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6465  001040  0EE0               	movlw	224
  6466  001042  0100               	movlb	0	; () banked
  6467  001044  25C5               	addwf	??_GenerateCalibration& (0+255),w,b
  6468  001046  0100               	movlb	0	; () banked
  6469  001048  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  6470  00104A  0E00               	movlw	0
  6471  00104C  0100               	movlb	0	; () banked
  6472  00104E  21C6               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6473  001050  0100               	movlb	0	; () banked
  6474  001052  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6475  001054  0100               	movlb	0	; () banked
  6476  001056  51C7               	movf	GenerateCalibration@index& (0+255),w,b
  6477  001058  0D02               	mullw	2
  6478  00105A  0E81               	movlw	low _sensor_offsets
  6479  00105C  24F3               	addwf	prodl,w,c
  6480  00105E  6ED9               	movwf	fsr2l,c
  6481  001060  0E00               	movlw	high _sensor_offsets
  6482  001062  20F4               	addwfc	prodh,w,c
  6483  001064  6EDA               	movwf	fsr2h,c
  6484  001066  CFDE F0BC          	movff	postinc2,WriteIntEEPROM@data
  6485  00106A  CFDD F0BD          	movff	postdec2,WriteIntEEPROM@data+1
  6486  00106E  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  6487  001072  0100               	movlb	0	; () banked
  6488  001074  2BC7               	incf	GenerateCalibration@index& (0+255),f,b
  6489  001076  D7D6               	goto	l6147
  6490  001078                     l6157:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;FastBuggy17_Main_Code_TUNING.c: 537: }
  6494                           ;FastBuggy17_Main_Code_TUNING.c: 539: FlashLEDS();
  6495  001078  EC36  F010         	call	_FlashLEDS	;wreg free
  6496                           
  6497                           ;FastBuggy17_Main_Code_TUNING.c: 541: CalibrateOnLine();
  6498  00107C  ECAB  F00C         	call	_CalibrateOnLine	;wreg free
  6499                           
  6500                           ;FastBuggy17_Main_Code_TUNING.c: 543: WriteIntEEPROM(0x0001, PID_set_point);
  6501  001080  0E00               	movlw	0
  6502  001082  0100               	movlb	0	; () banked
  6503  001084  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6504  001086  0E01               	movlw	1
  6505  001088  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  6506  00108A  C0A1  F0BC         	movff	_PID_set_point,WriteIntEEPROM@data
  6507  00108E  C0A2  F0BD         	movff	_PID_set_point+1,WriteIntEEPROM@data+1
  6508  001092  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  6509                           
  6510                           ;FastBuggy17_Main_Code_TUNING.c: 545: FlashLEDS();
  6511  001096  EC36  F010         	call	_FlashLEDS	;wreg free
  6512                           
  6513                           ;FastBuggy17_Main_Code_TUNING.c: 547: CalibrateThreshold();
  6514  00109A  EC0D  F009         	call	_CalibrateThreshold	;wreg free
  6515                           
  6516                           ;FastBuggy17_Main_Code_TUNING.c: 549: WriteIntEEPROM(0x0003, sensor_threshold);
  6517  00109E  0E00               	movlw	0
  6518  0010A0  0100               	movlb	0	; () banked
  6519  0010A2  6FBB               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6520  0010A4  0E03               	movlw	3
  6521  0010A6  6FBA               	movwf	WriteIntEEPROM@address& (0+255),b
  6522  0010A8  C0A5  F0BC         	movff	_sensor_threshold,WriteIntEEPROM@data
  6523  0010AC  C0A6  F0BD         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6524  0010B0  EC95  F00F         	call	_WriteIntEEPROM	;wreg free
  6525                           
  6526                           ;FastBuggy17_Main_Code_TUNING.c: 550: WriteCharEEPROM(0x0000, 1);
  6527  0010B4  0E00               	movlw	0
  6528  0010B6  0100               	movlb	0	; () banked
  6529  0010B8  6FBB               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6530  0010BA  0E00               	movlw	0
  6531  0010BC  6FBA               	movwf	WriteCharEEPROM@address& (0+255),b
  6532  0010BE  0E01               	movlw	1
  6533  0010C0  0100               	movlb	0	; () banked
  6534  0010C2  6FBC               	movwf	WriteCharEEPROM@data& (0+255),b
  6535  0010C4  EC90  F011         	call	_WriteCharEEPROM	;wreg free
  6536  0010C8  0012               	return		;funcret
  6537  0010CA                     __end_of_GenerateCalibration:
  6538                           	opt stack 0
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           postinc0	equ	0xFEE
  6542                           wreg	equ	0xFE8
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function _WriteIntEEPROM *****************
  6551 ;; Defined at:
  6552 ;;		line 63 in file "eeprom.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  address         2   19[BANK0 ] unsigned int 
  6555 ;;  data            2   21[BANK0 ] unsigned int 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;		None               void
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;Total ram usage:        4 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    8
  6574 ;; This function calls:
  6575 ;;		_WriteEEPROM
  6576 ;; This function is called by:
  6577 ;;		_GenerateCalibration
  6578 ;;		_SetPIDValues
  6579 ;;		_LoadPIDValues
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text43
  6584  001F2A                     __ptext43:
  6585                           	opt stack 0
  6586  001F2A                     _WriteIntEEPROM:
  6587                           	opt stack 21
  6588                           
  6589                           ;eeprom.c: 64: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6590                           
  6591                           ;incstack = 0
  6592  001F2A  C0BA  F0B7         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6593  001F2E  C0BB  F0B8         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6594  001F32  0100               	movlb	0	; () banked
  6595  001F34  51BD               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6596  001F36  0100               	movlb	0	; () banked
  6597  001F38  6FB9               	movwf	WriteEEPROM@data& (0+255),b
  6598  001F3A  EC3D  F00E         	call	_WriteEEPROM	;wreg free
  6599                           
  6600                           ;eeprom.c: 65: WriteEEPROM(address + 1, (data & 0x00FF));
  6601  001F3E  0E01               	movlw	1
  6602  001F40  0100               	movlb	0	; () banked
  6603  001F42  25BA               	addwf	WriteIntEEPROM@address& (0+255),w,b
  6604  001F44  0100               	movlb	0	; () banked
  6605  001F46  6FB7               	movwf	WriteEEPROM@address& (0+255),b
  6606  001F48  0E00               	movlw	0
  6607  001F4A  0100               	movlb	0	; () banked
  6608  001F4C  21BB               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  6609  001F4E  0100               	movlb	0	; () banked
  6610  001F50  6FB8               	movwf	(WriteEEPROM@address+1)& (0+255),b
  6611  001F52  C0BC  F0B9         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  6612  001F56  EC3D  F00E         	call	_WriteEEPROM	;wreg free
  6613  001F5A  0012               	return		;funcret
  6614  001F5C                     __end_of_WriteIntEEPROM:
  6615                           	opt stack 0
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           indf2	equ	0xFDF
  6621                           postinc2	equ	0xFDE
  6622                           postdec2	equ	0xFDD
  6623                           fsr2h	equ	0xFDA
  6624                           fsr2l	equ	0xFD9
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function _WriteCharEEPROM *****************
  6628 ;; Defined at:
  6629 ;;		line 69 in file "eeprom.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  address         2   19[BANK0 ] unsigned int 
  6632 ;;  data            1   21[BANK0 ] unsigned char 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;		None
  6635 ;; Return value:  Size  Location     Type
  6636 ;;		None               void
  6637 ;; Registers used:
  6638 ;;		wreg, status,2, status,0, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6644 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;Total ram usage:        3 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    8
  6651 ;; This function calls:
  6652 ;;		_WriteEEPROM
  6653 ;; This function is called by:
  6654 ;;		_GenerateCalibration
  6655 ;;		_SetPIDValues
  6656 ;;		_LoadPIDValues
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text44
  6661  002320                     __ptext44:
  6662                           	opt stack 0
  6663  002320                     _WriteCharEEPROM:
  6664                           	opt stack 21
  6665                           
  6666                           ;eeprom.c: 70: WriteEEPROM(address, data);
  6667                           
  6668                           ;incstack = 0
  6669  002320  C0BA  F0B7         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  6670  002324  C0BB  F0B8         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  6671  002328  C0BC  F0B9         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  6672  00232C  EC3D  F00E         	call	_WriteEEPROM	;wreg free
  6673  002330  0012               	return		;funcret
  6674  002332                     __end_of_WriteCharEEPROM:
  6675                           	opt stack 0
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           postinc0	equ	0xFEE
  6679                           wreg	equ	0xFE8
  6680                           indf2	equ	0xFDF
  6681                           postinc2	equ	0xFDE
  6682                           postdec2	equ	0xFDD
  6683                           fsr2h	equ	0xFDA
  6684                           fsr2l	equ	0xFD9
  6685                           status	equ	0xFD8
  6686                           
  6687 ;; *************** function _WriteEEPROM *****************
  6688 ;; Defined at:
  6689 ;;		line 3 in file "eeprom.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  address         2   16[BANK0 ] unsigned int 
  6692 ;;  data            1   18[BANK0 ] unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      unsigned char 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:        3 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    7
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_WriteIntEEPROM
  6715 ;;		_WriteCharEEPROM
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text45
  6720  001C7A                     __ptext45:
  6721                           	opt stack 0
  6722  001C7A                     _WriteEEPROM:
  6723                           	opt stack 21
  6724                           
  6725                           ;eeprom.c: 4: if(address > 0x03FF) {
  6726                           
  6727                           ;incstack = 0
  6728  001C7A  0E04               	movlw	4
  6729  001C7C  0100               	movlb	0	; () banked
  6730  001C7E  5DB8               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  6731  001C80  B0D8               	btfsc	status,0,c
  6732  001C82  D01A               	goto	l214
  6733  001C84  D001               	goto	l213
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;eeprom.c: 6: }
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;eeprom.c: 5: return(1);
  6740                           ;	Return value of _WriteEEPROM is never used
  6741  001C86  D018               	goto	l214
  6742  001C88                     l213:
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;eeprom.c: 7: else {
  6746                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  6747  001C88  C0B7  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  6751  001C8C  0100               	movlb	0	; () banked
  6752  001C8E  51B8               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  6753  001C90  0B03               	andlw	3
  6754  001C92  6EAA               	movwf	4010,c	;volatile
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;eeprom.c: 10: EEDATA = data;
  6758  001C94  C0B9  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  6762  001C98  9EA6               	bcf	4006,7,c	;volatile
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  6766  001C9A  9CA6               	bcf	4006,6,c	;volatile
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  6770  001C9C  84A6               	bsf	4006,2,c	;volatile
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  6774  001C9E  9EF2               	bcf	intcon,7,c	;volatile
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;eeprom.c: 17: EECON2 = 0x55;
  6778  001CA0  0E55               	movlw	85
  6779  001CA2  6EA7               	movwf	4007,c	;volatile
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;eeprom.c: 18: EECON2 = 0x0AA;
  6783  001CA4  0EAA               	movlw	170
  6784  001CA6  6EA7               	movwf	4007,c	;volatile
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;eeprom.c: 19: EECON1bits.WR = 1;
  6788  001CA8  82A6               	bsf	4006,1,c	;volatile
  6789                           
  6790                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  6791  001CAA  D000               	goto	l216
  6792  001CAC                     l216:
  6793  001CAC  B2A6               	btfsc	4006,1,c	;volatile
  6794  001CAE  D7FE               	goto	l216
  6795                           
  6796                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  6797  001CB0  94A6               	bcf	4006,2,c	;volatile
  6798                           
  6799                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  6800  001CB2  8EF2               	bsf	intcon,7,c	;volatile
  6801                           
  6802                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  6803  001CB4  50A6               	movf	4006,w,c	;volatile
  6804                           
  6805                           ;eeprom.c: 29: else {
  6806                           ;eeprom.c: 30: return(1);
  6807                           ;	Return value of _WriteEEPROM is never used
  6808                           
  6809                           ;eeprom.c: 28: }
  6810                           
  6811                           ;eeprom.c: 27: return(0);
  6812                           ;	Return value of _WriteEEPROM is never used
  6813  001CB6  D000               	goto	l214
  6814  001CB8                     l214:
  6815  001CB8  0012               	return		;funcret
  6816  001CBA                     __end_of_WriteEEPROM:
  6817                           	opt stack 0
  6818                           prodh	equ	0xFF4
  6819                           prodl	equ	0xFF3
  6820                           intcon	equ	0xFF2
  6821                           postinc0	equ	0xFEE
  6822                           wreg	equ	0xFE8
  6823                           indf2	equ	0xFDF
  6824                           postinc2	equ	0xFDE
  6825                           postdec2	equ	0xFDD
  6826                           fsr2h	equ	0xFDA
  6827                           fsr2l	equ	0xFD9
  6828                           status	equ	0xFD8
  6829                           
  6830 ;; *************** function _FlashLEDS *****************
  6831 ;; Defined at:
  6832 ;;		line 401 in file "FastBuggy17_Main_Code_TUNING.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;		None               void
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;Total ram usage:        0 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    8
  6853 ;; This function calls:
  6854 ;;		_Delay10KTCYx
  6855 ;; This function is called by:
  6856 ;;		_GenerateCalibration
  6857 ;;		_main
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text46
  6862  00206C                     __ptext46:
  6863                           	opt stack 0
  6864  00206C                     _FlashLEDS:
  6865                           	opt stack 20
  6866                           
  6867                           ;FastBuggy17_Main_Code_TUNING.c: 402: LATJ = 0x00;
  6868                           
  6869                           ;incstack = 0
  6870  00206C  0E00               	movlw	0
  6871  00206E  6E91               	movwf	3985,c	;volatile
  6872                           
  6873                           ;FastBuggy17_Main_Code_TUNING.c: 403: LATJ = 0x1F;
  6874  002070  0E1F               	movlw	31
  6875  002072  6E91               	movwf	3985,c	;volatile
  6876                           
  6877                           ;FastBuggy17_Main_Code_TUNING.c: 404: Delay10KTCYx(75);
  6878  002074  0E4B               	movlw	75
  6879  002076  ECF1  F010         	call	_Delay10KTCYx
  6880                           
  6881                           ;FastBuggy17_Main_Code_TUNING.c: 405: LATJ = 0x00;
  6882  00207A  0E00               	movlw	0
  6883  00207C  6E91               	movwf	3985,c	;volatile
  6884                           
  6885                           ;FastBuggy17_Main_Code_TUNING.c: 406: Delay10KTCYx(75);
  6886  00207E  0E4B               	movlw	75
  6887  002080  ECF1  F010         	call	_Delay10KTCYx
  6888                           
  6889                           ;FastBuggy17_Main_Code_TUNING.c: 407: LATJ = 0x1F;
  6890  002084  0E1F               	movlw	31
  6891  002086  6E91               	movwf	3985,c	;volatile
  6892                           
  6893                           ;FastBuggy17_Main_Code_TUNING.c: 408: Delay10KTCYx(75);
  6894  002088  0E4B               	movlw	75
  6895  00208A  ECF1  F010         	call	_Delay10KTCYx
  6896                           
  6897                           ;FastBuggy17_Main_Code_TUNING.c: 409: LATJ = 0x00;
  6898  00208E  0E00               	movlw	0
  6899  002090  6E91               	movwf	3985,c	;volatile
  6900  002092  0012               	return		;funcret
  6901  002094                     __end_of_FlashLEDS:
  6902                           	opt stack 0
  6903                           prodh	equ	0xFF4
  6904                           prodl	equ	0xFF3
  6905                           intcon	equ	0xFF2
  6906                           postinc0	equ	0xFEE
  6907                           wreg	equ	0xFE8
  6908                           indf2	equ	0xFDF
  6909                           postinc2	equ	0xFDE
  6910                           postdec2	equ	0xFDD
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function _Delay10KTCYx *****************
  6916 ;; Defined at:
  6917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  unit            1    wreg     unsigned char 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  unit            1   17[BANK0 ] unsigned char 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;		None               void
  6924 ;; Registers used:
  6925 ;;		wreg
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;Total ram usage:        2 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    7
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_FlashLEDS
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text47
  6947  0021E2                     __ptext47:
  6948                           	opt stack 0
  6949  0021E2                     _Delay10KTCYx:
  6950                           	opt stack 20
  6951                           
  6952                           ;incstack = 0
  6953                           ;Delay10KTCYx@unit stored from wreg
  6954  0021E2  0100               	movlb	0	; () banked
  6955  0021E4  6FB8               	movwf	Delay10KTCYx@unit& (0+255),b
  6956  0021E6                     
  6957                           ; BSR set to: 0
  6958  0021E6  0E0D               	movlw	13
  6959  0021E8  0100               	movlb	0	; () banked
  6960  0021EA  6FB7               	movwf	??_Delay10KTCYx& (0+255),b
  6961  0021EC  0EFC               	movlw	252
  6962  0021EE                     u6377:
  6963  0021EE  2EE8               	decfsz	wreg,f,c
  6964  0021F0  D7FE               	goto	u6377
  6965  0021F2  2FB7               	decfsz	??_Delay10KTCYx& (0+255),f,b
  6966  0021F4  D7FC               	goto	u6377
  6967  0021F6  0100               	movlb	0	; () banked
  6968  0021F8  2FB8               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  6969  0021FA  D7F5               	goto	l5693
  6970  0021FC  D000               	goto	l1473
  6971  0021FE                     l1473:
  6972                           
  6973                           ; BSR set to: 0
  6974  0021FE  0012               	return		;funcret
  6975  002200                     __end_of_Delay10KTCYx:
  6976                           	opt stack 0
  6977                           prodh	equ	0xFF4
  6978                           prodl	equ	0xFF3
  6979                           intcon	equ	0xFF2
  6980                           postinc0	equ	0xFEE
  6981                           wreg	equ	0xFE8
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _CalibrateThreshold *****************
  6990 ;; Defined at:
  6991 ;;		line 501 in file "FastBuggy17_Main_Code_TUNING.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  sensor_thres    2   28[BANK0 ] int 
  6996 ;;  sensor_thres    2   26[BANK0 ] PTR int 
  6997 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;		None               void
  7000 ;; Registers used:
  7001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;Total ram usage:        4 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:   10
  7014 ;; This function calls:
  7015 ;;		_BusyADC
  7016 ;;		_BusySensorAcq
  7017 ;;		_CalculateSensorStatuses
  7018 ;;		_ConvertADC
  7019 ;;		_DisplaySensorStatuses
  7020 ;;		_GetSensorReadings
  7021 ;;		_NormaliseSensorReadings
  7022 ;;		_PB1pressed
  7023 ;;		_ReadADC
  7024 ;;		_SendStatus
  7025 ;;		_SetADCChannel
  7026 ;; This function is called by:
  7027 ;;		_GenerateCalibration
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text48
  7032  00121A                     __ptext48:
  7033                           	opt stack 0
  7034  00121A                     _CalibrateThreshold:
  7035                           	opt stack 18
  7036                           
  7037                           ;FastBuggy17_Main_Code_TUNING.c: 502: int sensor_threshold_temp;
  7038                           ;FastBuggy17_Main_Code_TUNING.c: 503: int *sensor_threshold_temp_ptr;
  7039                           ;FastBuggy17_Main_Code_TUNING.c: 505: sensor_threshold_temp_ptr = &sensor_threshold_temp
      +                          ;
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;incstack = 0
  7043  00121A  0EC3               	movlw	low CalibrateThreshold@sensor_threshold_temp
  7044  00121C  0100               	movlb	0	; () banked
  7045  00121E  6FC1               	movwf	CalibrateThreshold@sensor_threshold_temp_ptr& (0+255),b
  7046  001220  0E00               	movlw	high CalibrateThreshold@sensor_threshold_temp
  7047  001222  0100               	movlb	0	; () banked
  7048  001224  6FC2               	movwf	(CalibrateThreshold@sensor_threshold_temp_ptr+1)& (0+255),b
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;FastBuggy17_Main_Code_TUNING.c: 507: SendStatus(0x05);
  7052  001226  0E05               	movlw	5
  7053  001228  ECB8  F00E         	call	_SendStatus
  7054                           
  7055                           ;FastBuggy17_Main_Code_TUNING.c: 508: LATJ = 0x07;
  7056  00122C  0E07               	movlw	7
  7057  00122E  6E91               	movwf	3985,c	;volatile
  7058                           
  7059                           ;FastBuggy17_Main_Code_TUNING.c: 510: while(PB1pressed() == 0) {
  7060  001230  D03C               	goto	l5893
  7061  001232                     l5875:
  7062                           
  7063                           ;FastBuggy17_Main_Code_TUNING.c: 512: SetADCChannel(5);
  7064  001232  0E05               	movlw	5
  7065  001234  EC5F  F006         	call	_SetADCChannel
  7066                           
  7067                           ;FastBuggy17_Main_Code_TUNING.c: 513: ConvertADC();
  7068  001238  EC5A  F012         	call	_ConvertADC	;wreg free
  7069                           
  7070                           ;FastBuggy17_Main_Code_TUNING.c: 514: while(BusyADC());
  7071  00123C  D000               	goto	l5879
  7072  00123E                     l5879:
  7073  00123E  EC04  F012         	call	_BusyADC	;wreg free
  7074  001242  0900               	iorlw	0
  7075  001244  A4D8               	btfss	status,2,c
  7076  001246  D7FB               	goto	l5879
  7077                           
  7078                           ;FastBuggy17_Main_Code_TUNING.c: 515: sensor_threshold_temp = ReadADC();
  7079  001248  EC72  F011         	call	_ReadADC	;wreg free
  7080  00124C  C0B7  F0C3         	movff	?_ReadADC,CalibrateThreshold@sensor_threshold_temp
  7081  001250  C0B8  F0C4         	movff	?_ReadADC+1,CalibrateThreshold@sensor_threshold_temp+1
  7082                           
  7083                           ;FastBuggy17_Main_Code_TUNING.c: 517: GetSensorReadings();
  7084  001254  EC46  F011         	call	_GetSensorReadings	;wreg free
  7085                           
  7086                           ;FastBuggy17_Main_Code_TUNING.c: 518: while(BusySensorAcq() == 1);
  7087  001258  D000               	goto	l5885
  7088  00125A                     l5885:
  7089  00125A  ECD6  F011         	call	_BusySensorAcq	;wreg free
  7090  00125E  06E8               	decf	wreg,f,c
  7091  001260  B4D8               	btfsc	status,2,c
  7092  001262  D7FB               	goto	l5885
  7093                           
  7094                           ;FastBuggy17_Main_Code_TUNING.c: 519: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7095  001264  0E95               	movlw	low _sensor_readings_raw
  7096  001266  0100               	movlb	0	; () banked
  7097  001268  6FB7               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7098  00126A  0E00               	movlw	high _sensor_readings_raw
  7099  00126C  0100               	movlb	0	; () banked
  7100  00126E  6FB8               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7101  001270  0E81               	movlw	low _sensor_offsets
  7102  001272  0100               	movlb	0	; () banked
  7103  001274  6FB9               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7104  001276  0E00               	movlw	high _sensor_offsets
  7105  001278  0100               	movlb	0	; () banked
  7106  00127A  6FBA               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7107  00127C  ECBA  F00A         	call	_NormaliseSensorReadings	;wreg free
  7108                           
  7109                           ;FastBuggy17_Main_Code_TUNING.c: 520: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_temp_ptr);
  7110  001280  0E8B               	movlw	low _sensor_readings_normalised
  7111  001282  0100               	movlb	0	; () banked
  7112  001284  6FB7               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  7113  001286  0E00               	movlw	high _sensor_readings_normalised
  7114  001288  0100               	movlb	0	; () banked
  7115  00128A  6FB8               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  7116  00128C  C0C1  F0B9         	movff	CalibrateThreshold@sensor_threshold_temp_ptr,CalculateSensorStatuses@sensor_thres
      +                          hold
  7117  001290  C0C2  F0BA         	movff	CalibrateThreshold@sensor_threshold_temp_ptr+1,CalculateSensorStatuses@sensor_thr
      +                          eshold+1
  7118  001294  ECE5  F004         	call	_CalculateSensorStatuses	;wreg free
  7119                           
  7120                           ;FastBuggy17_Main_Code_TUNING.c: 522: DisplaySensorStatuses(sensor_statuses);
  7121  001298  0E25               	movlw	low _sensor_statuses
  7122  00129A  0100               	movlb	0	; () banked
  7123  00129C  6FB7               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  7124  00129E  0E00               	movlw	high _sensor_statuses
  7125  0012A0  0100               	movlb	0	; () banked
  7126  0012A2  6FB8               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  7127  0012A4  EC6A  F00D         	call	_DisplaySensorStatuses	;wreg free
  7128  0012A8  D000               	goto	l5893
  7129  0012AA                     l5893:
  7130  0012AA  EC3B  F00D         	call	_PB1pressed	;wreg free
  7131  0012AE  0900               	iorlw	0
  7132  0012B0  B4D8               	btfsc	status,2,c
  7133  0012B2  D7BF               	goto	l5875
  7134                           
  7135                           ;FastBuggy17_Main_Code_TUNING.c: 524: }
  7136                           ;FastBuggy17_Main_Code_TUNING.c: 526: sensor_threshold = sensor_threshold_temp;
  7137  0012B4  C0C3  F0A5         	movff	CalibrateThreshold@sensor_threshold_temp,_sensor_threshold
  7138  0012B8  C0C4  F0A6         	movff	CalibrateThreshold@sensor_threshold_temp+1,_sensor_threshold+1
  7139  0012BC  0012               	return		;funcret
  7140  0012BE                     __end_of_CalibrateThreshold:
  7141                           	opt stack 0
  7142                           prodh	equ	0xFF4
  7143                           prodl	equ	0xFF3
  7144                           intcon	equ	0xFF2
  7145                           postinc0	equ	0xFEE
  7146                           wreg	equ	0xFE8
  7147                           indf2	equ	0xFDF
  7148                           postinc2	equ	0xFDE
  7149                           postdec2	equ	0xFDD
  7150                           fsr2h	equ	0xFDA
  7151                           fsr2l	equ	0xFD9
  7152                           status	equ	0xFD8
  7153                           
  7154 ;; *************** function _ReadADC *****************
  7155 ;; Defined at:
  7156 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  2   16[BANK0 ] int 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:        4 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    7
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_CalibrateThreshold
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text49
  7185  0022E4                     __ptext49:
  7186                           	opt stack 0
  7187  0022E4                     _ReadADC:
  7188                           	opt stack 20
  7189                           
  7190                           ;incstack = 0
  7191  0022E4  50C4               	movf	4036,w,c	;volatile
  7192  0022E6  0100               	movlb	0	; () banked
  7193  0022E8  6FB9               	movwf	??_ReadADC& (0+255),b
  7194  0022EA  50C3               	movf	4035,w,c	;volatile
  7195  0022EC  0100               	movlb	0	; () banked
  7196  0022EE  6FB7               	movwf	?_ReadADC& (0+255),b
  7197  0022F0  C0B9  F0B8         	movff	??_ReadADC,?_ReadADC+1
  7198  0022F4  D000               	goto	l1063
  7199  0022F6                     l1063:
  7200                           
  7201                           ; BSR set to: 0
  7202  0022F6  0012               	return		;funcret
  7203  0022F8                     __end_of_ReadADC:
  7204                           	opt stack 0
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           intcon	equ	0xFF2
  7208                           postinc0	equ	0xFEE
  7209                           wreg	equ	0xFE8
  7210                           indf2	equ	0xFDF
  7211                           postinc2	equ	0xFDE
  7212                           postdec2	equ	0xFDD
  7213                           fsr2h	equ	0xFDA
  7214                           fsr2l	equ	0xFD9
  7215                           status	equ	0xFD8
  7216                           
  7217 ;; *************** function _DisplaySensorStatuses *****************
  7218 ;; Defined at:
  7219 ;;		line 376 in file "FastBuggy17_Main_Code_TUNING.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
  7222 ;;		 -> sensor_statuses(5), 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  index           1   20[BANK0 ] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;		None               void
  7227 ;; Registers used:
  7228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;Total ram usage:        5 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    7
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_CalibrateThreshold
  7245 ;;		_main
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text50
  7250  001AD4                     __ptext50:
  7251                           	opt stack 0
  7252  001AD4                     _DisplaySensorStatuses:
  7253                           	opt stack 20
  7254                           
  7255                           ;FastBuggy17_Main_Code_TUNING.c: 377: unsigned char index;
  7256                           ;FastBuggy17_Main_Code_TUNING.c: 379: LATJ = 0x00;
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;incstack = 0
  7260  001AD4  0E00               	movlw	0
  7261  001AD6  6E91               	movwf	3985,c	;volatile
  7262                           
  7263                           ;FastBuggy17_Main_Code_TUNING.c: 381: for(index = 0; index < 5; index++) {
  7264  001AD8  0E00               	movlw	0
  7265  001ADA  0100               	movlb	0	; () banked
  7266  001ADC  6FBB               	movwf	DisplaySensorStatuses@index& (0+255),b
  7267  001ADE                     l5683:
  7268                           
  7269                           ; BSR set to: 0
  7270  001ADE  0E04               	movlw	4
  7271  001AE0  0100               	movlb	0	; () banked
  7272  001AE2  65BB               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  7273  001AE4  D001               	goto	l5687
  7274                           
  7275                           ; BSR set to: 0
  7276  001AE6  D01F               	goto	l838
  7277  001AE8                     l5687:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;FastBuggy17_Main_Code_TUNING.c: 382: LATJ ^= *(sensor_statuses + index) << index;
  7281  001AE8  C0BB  F0B9         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  7282  001AEC  0100               	movlb	0	; () banked
  7283  001AEE  51BB               	movf	DisplaySensorStatuses@index& (0+255),w,b
  7284  001AF0  0D01               	mullw	1
  7285  001AF2  50F3               	movf	prodl,w,c
  7286  001AF4  0100               	movlb	0	; () banked
  7287  001AF6  25B7               	addwf	DisplaySensorStatuses@sensor_statuses& (0+255),w,b
  7288  001AF8  6ED9               	movwf	fsr2l,c
  7289  001AFA  50F4               	movf	prodh,w,c
  7290  001AFC  0100               	movlb	0	; () banked
  7291  001AFE  21B8               	addwfc	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),w,b
  7292  001B00  6EDA               	movwf	fsr2h,c
  7293  001B02  50DF               	movf	indf2,w,c
  7294  001B04  0100               	movlb	0	; () banked
  7295  001B06  6FBA               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  7296  001B08  0100               	movlb	0	; () banked
  7297  001B0A  2BB9               	incf	??_DisplaySensorStatuses& (0+255),f,b
  7298  001B0C  D003               	goto	u4654
  7299  001B0E                     u4655:
  7300  001B0E  0100               	movlb	0	; () banked
  7301  001B10  90D8               	bcf	status,0,c
  7302  001B12  37BA               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  7303  001B14                     u4654:
  7304  001B14  0100               	movlb	0	; () banked
  7305  001B16  2FB9               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  7306  001B18  D7FA               	goto	u4655
  7307  001B1A  0100               	movlb	0	; () banked
  7308  001B1C  51BA               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  7309  001B1E  1A91               	xorwf	3985,f,c	;volatile
  7310                           
  7311                           ; BSR set to: 0
  7312  001B20  0100               	movlb	0	; () banked
  7313  001B22  2BBB               	incf	DisplaySensorStatuses@index& (0+255),f,b
  7314  001B24  D7DC               	goto	l5683
  7315  001B26                     l838:
  7316                           
  7317                           ; BSR set to: 0
  7318  001B26  0012               	return		;funcret
  7319  001B28                     __end_of_DisplaySensorStatuses:
  7320                           	opt stack 0
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           postinc0	equ	0xFEE
  7325                           wreg	equ	0xFE8
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           fsr2h	equ	0xFDA
  7330                           fsr2l	equ	0xFD9
  7331                           status	equ	0xFD8
  7332                           
  7333 ;; *************** function _CalculateSensorStatuses *****************
  7334 ;; Defined at:
  7335 ;;		line 322 in file "FastBuggy17_Main_Code_TUNING.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  sensor_readi    2   16[BANK0 ] PTR const int 
  7338 ;;		 -> sensor_readings_normalised(10), 
  7339 ;;  sensor_thres    2   18[BANK0 ] PTR const int 
  7340 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), sensor_threshold(2), 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  index           1   25[BANK0 ] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;		None               void
  7345 ;; Registers used:
  7346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:       10 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    7
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_CalibrateThreshold
  7363 ;;		_main
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text51
  7368  0009CA                     __ptext51:
  7369                           	opt stack 0
  7370  0009CA                     _CalculateSensorStatuses:
  7371                           	opt stack 20
  7372                           
  7373                           ;FastBuggy17_Main_Code_TUNING.c: 323: unsigned char index;
  7374                           ;FastBuggy17_Main_Code_TUNING.c: 325: if(line_mode == 0) {
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;incstack = 0
  7378  0009CA  502A               	movf	_line_mode,w,c
  7379  0009CC  A4D8               	btfss	status,2,c
  7380  0009CE  D03E               	goto	l5647
  7381                           
  7382                           ;FastBuggy17_Main_Code_TUNING.c: 326: for(index = 0; index < 5; index++) {
  7383  0009D0  0E00               	movlw	0
  7384  0009D2  0100               	movlb	0	; () banked
  7385  0009D4  6FC0               	movwf	CalculateSensorStatuses@index& (0+255),b
  7386  0009D6                     l5633:
  7387                           
  7388                           ; BSR set to: 0
  7389  0009D6  0E04               	movlw	4
  7390  0009D8  0100               	movlb	0	; () banked
  7391  0009DA  65C0               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7392  0009DC  D001               	goto	l5637
  7393                           
  7394                           ; BSR set to: 0
  7395  0009DE  D077               	goto	l825
  7396  0009E0                     l5637:
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;FastBuggy17_Main_Code_TUNING.c: 327: if(*(sensor_readings_normalised + index) < *sensor
      +                          _threshold) {
  7400  0009E0  C0B9  FFD9         	movff	CalculateSensorStatuses@sensor_threshold,fsr2l
  7401  0009E4  C0BA  FFDA         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr2h
  7402  0009E8  0100               	movlb	0	; () banked
  7403  0009EA  51C0               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7404  0009EC  0D02               	mullw	2
  7405  0009EE  50F3               	movf	prodl,w,c
  7406  0009F0  0100               	movlb	0	; () banked
  7407  0009F2  25B7               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7408  0009F4  6EE1               	movwf	fsr1l,c
  7409  0009F6  50F4               	movf	prodh,w,c
  7410  0009F8  0100               	movlb	0	; () banked
  7411  0009FA  21B8               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7412  0009FC  6EE2               	movwf	fsr1h,c
  7413  0009FE  50DE               	movf	postinc2,w,c
  7414  000A00  5CE6               	subwf	postinc1,w,c
  7415  000A02  50E6               	movf	postinc1,w,c
  7416  000A04  0A80               	xorlw	128
  7417  000A06  0100               	movlb	0	; () banked
  7418  000A08  6FBF               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7419  000A0A  50DE               	movf	postinc2,w,c
  7420  000A0C  0A80               	xorlw	128
  7421  000A0E  0100               	movlb	0	; () banked
  7422  000A10  59BF               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7423  000A12  B0D8               	btfsc	status,0,c
  7424  000A14  D00B               	goto	l5641
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;FastBuggy17_Main_Code_TUNING.c: 328: sensor_statuses[index] = 1;
  7428  000A16  0100               	movlb	0	; () banked
  7429  000A18  51C0               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7430  000A1A  0D01               	mullw	1
  7431  000A1C  0E25               	movlw	low _sensor_statuses
  7432  000A1E  24F3               	addwf	prodl,w,c
  7433  000A20  6ED9               	movwf	fsr2l,c
  7434  000A22  0E00               	movlw	high _sensor_statuses
  7435  000A24  20F4               	addwfc	prodh,w,c
  7436  000A26  6EDA               	movwf	fsr2h,c
  7437  000A28  0E01               	movlw	1
  7438  000A2A  D00A               	goto	L3
  7439  000A2C                     l5641:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;FastBuggy17_Main_Code_TUNING.c: 330: else {
  7443                           ;FastBuggy17_Main_Code_TUNING.c: 331: sensor_statuses[index] = 0;
  7444  000A2C  0100               	movlb	0	; () banked
  7445  000A2E  51C0               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7446  000A30  0D01               	mullw	1
  7447  000A32  0E25               	movlw	low _sensor_statuses
  7448  000A34  24F3               	addwf	prodl,w,c
  7449  000A36  6ED9               	movwf	fsr2l,c
  7450  000A38  0E00               	movlw	high _sensor_statuses
  7451  000A3A  20F4               	addwfc	prodh,w,c
  7452  000A3C  6EDA               	movwf	fsr2h,c
  7453  000A3E  0E00               	movlw	0
  7454  000A40                     L3:
  7455  000A40  6EDF               	movwf	indf2,c
  7456  000A42  D000               	goto	l5643
  7457  000A44                     l5643:
  7458                           
  7459                           ; BSR set to: 0
  7460  000A44  0100               	movlb	0	; () banked
  7461  000A46  2BC0               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7462  000A48  D7C6               	goto	l5633
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;FastBuggy17_Main_Code_TUNING.c: 332: }
  7466                           ;FastBuggy17_Main_Code_TUNING.c: 333: }
  7467                           ;FastBuggy17_Main_Code_TUNING.c: 334: }
  7468                           
  7469                           ; BSR set to: 0
  7470  000A4A  D041               	goto	l825
  7471  000A4C                     l5647:
  7472                           
  7473                           ;FastBuggy17_Main_Code_TUNING.c: 335: else if(line_mode == 1) {
  7474  000A4C  042A               	decf	_line_mode,w,c
  7475  000A4E  A4D8               	btfss	status,2,c
  7476  000A50  D03E               	goto	l825
  7477                           
  7478                           ;FastBuggy17_Main_Code_TUNING.c: 336: for(index = 0; index < 5; index++) {
  7479  000A52  0E00               	movlw	0
  7480  000A54  0100               	movlb	0	; () banked
  7481  000A56  6FC0               	movwf	CalculateSensorStatuses@index& (0+255),b
  7482  000A58                     l5651:
  7483                           
  7484                           ; BSR set to: 0
  7485  000A58  0E04               	movlw	4
  7486  000A5A  0100               	movlb	0	; () banked
  7487  000A5C  65C0               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7488  000A5E  D001               	goto	l5655
  7489                           
  7490                           ; BSR set to: 0
  7491  000A60  D036               	goto	l825
  7492  000A62                     l5655:
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;FastBuggy17_Main_Code_TUNING.c: 337: if(*(sensor_readings_normalised + index) > *sensor
      +                          _threshold) {
  7496  000A62  0100               	movlb	0	; () banked
  7497  000A64  51C0               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7498  000A66  0D02               	mullw	2
  7499  000A68  50F3               	movf	prodl,w,c
  7500  000A6A  0100               	movlb	0	; () banked
  7501  000A6C  25B7               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7502  000A6E  6ED9               	movwf	fsr2l,c
  7503  000A70  50F4               	movf	prodh,w,c
  7504  000A72  0100               	movlb	0	; () banked
  7505  000A74  21B8               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7506  000A76  6EDA               	movwf	fsr2h,c
  7507  000A78  C0B9  FFE1         	movff	CalculateSensorStatuses@sensor_threshold,fsr1l
  7508  000A7C  C0BA  FFE2         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr1h
  7509  000A80  50DE               	movf	postinc2,w,c
  7510  000A82  5CE6               	subwf	postinc1,w,c
  7511  000A84  50E6               	movf	postinc1,w,c
  7512  000A86  0A80               	xorlw	128
  7513  000A88  0100               	movlb	0	; () banked
  7514  000A8A  6FBF               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7515  000A8C  50DE               	movf	postinc2,w,c
  7516  000A8E  0A80               	xorlw	128
  7517  000A90  0100               	movlb	0	; () banked
  7518  000A92  59BF               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7519  000A94  B0D8               	btfsc	status,0,c
  7520  000A96  D00B               	goto	l5659
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;FastBuggy17_Main_Code_TUNING.c: 338: sensor_statuses[index] = 1;
  7524  000A98  0100               	movlb	0	; () banked
  7525  000A9A  51C0               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7526  000A9C  0D01               	mullw	1
  7527  000A9E  0E25               	movlw	low _sensor_statuses
  7528  000AA0  24F3               	addwf	prodl,w,c
  7529  000AA2  6ED9               	movwf	fsr2l,c
  7530  000AA4  0E00               	movlw	high _sensor_statuses
  7531  000AA6  20F4               	addwfc	prodh,w,c
  7532  000AA8  6EDA               	movwf	fsr2h,c
  7533  000AAA  0E01               	movlw	1
  7534  000AAC  D00A               	goto	L4
  7535  000AAE                     l5659:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;FastBuggy17_Main_Code_TUNING.c: 340: else {
  7539                           ;FastBuggy17_Main_Code_TUNING.c: 341: sensor_statuses[index] = 0;
  7540  000AAE  0100               	movlb	0	; () banked
  7541  000AB0  51C0               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7542  000AB2  0D01               	mullw	1
  7543  000AB4  0E25               	movlw	low _sensor_statuses
  7544  000AB6  24F3               	addwf	prodl,w,c
  7545  000AB8  6ED9               	movwf	fsr2l,c
  7546  000ABA  0E00               	movlw	high _sensor_statuses
  7547  000ABC  20F4               	addwfc	prodh,w,c
  7548  000ABE  6EDA               	movwf	fsr2h,c
  7549  000AC0  0E00               	movlw	0
  7550  000AC2                     L4:
  7551  000AC2  6EDF               	movwf	indf2,c
  7552  000AC4  D000               	goto	l5661
  7553  000AC6                     l5661:
  7554                           
  7555                           ; BSR set to: 0
  7556  000AC6  0100               	movlb	0	; () banked
  7557  000AC8  2BC0               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7558  000ACA  D7C6               	goto	l5651
  7559                           
  7560                           ; BSR set to: 0
  7561                           
  7562                           ; BSR set to: 0
  7563                           
  7564                           ; BSR set to: 0
  7565  000ACC  D000               	goto	l825
  7566  000ACE                     l825:
  7567  000ACE  0012               	return		;funcret
  7568  000AD0                     __end_of_CalculateSensorStatuses:
  7569                           	opt stack 0
  7570                           prodh	equ	0xFF4
  7571                           prodl	equ	0xFF3
  7572                           intcon	equ	0xFF2
  7573                           postinc0	equ	0xFEE
  7574                           wreg	equ	0xFE8
  7575                           postinc1	equ	0xFE6
  7576                           fsr1h	equ	0xFE2
  7577                           fsr1l	equ	0xFE1
  7578                           indf2	equ	0xFDF
  7579                           postinc2	equ	0xFDE
  7580                           postdec2	equ	0xFDD
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function _BusyADC *****************
  7586 ;; Defined at:
  7587 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      unsigned char 
  7594 ;; Registers used:
  7595 ;;		wreg
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    7
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_CalibrateThreshold
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text52
  7616  002408                     __ptext52:
  7617                           	opt stack 0
  7618  002408                     _BusyADC:
  7619                           	opt stack 20
  7620                           
  7621                           ;incstack = 0
  7622  002408  A2C2               	btfss	4034,1,c	;volatile
  7623  00240A  D002               	goto	u4730
  7624  00240C  0E01               	movlw	1
  7625  00240E  D002               	goto	l1033
  7626  002410                     u4730:
  7627  002410  0E00               	movlw	0
  7628  002412  D000               	goto	l1033
  7629  002414                     l1033:
  7630  002414  0012               	return		;funcret
  7631  002416                     __end_of_BusyADC:
  7632                           	opt stack 0
  7633                           prodh	equ	0xFF4
  7634                           prodl	equ	0xFF3
  7635                           intcon	equ	0xFF2
  7636                           postinc0	equ	0xFEE
  7637                           wreg	equ	0xFE8
  7638                           postinc1	equ	0xFE6
  7639                           fsr1h	equ	0xFE2
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           postdec2	equ	0xFDD
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function _CalibrateOnLine *****************
  7649 ;; Defined at:
  7650 ;;		line 486 in file "FastBuggy17_Main_Code_TUNING.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;		None               void
  7657 ;; Registers used:
  7658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;Total ram usage:        0 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:   10
  7671 ;; This function calls:
  7672 ;;		_BusySensorAcq
  7673 ;;		_CalculateSensorSum
  7674 ;;		_GetSensorReadings
  7675 ;;		_NormaliseSensorReadings
  7676 ;;		_PB1pressed
  7677 ;;		_SendStatus
  7678 ;; This function is called by:
  7679 ;;		_GenerateCalibration
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text53
  7684  001956                     __ptext53:
  7685                           	opt stack 0
  7686  001956                     _CalibrateOnLine:
  7687                           	opt stack 18
  7688                           
  7689                           ;FastBuggy17_Main_Code_TUNING.c: 487: SendStatus(0x04);
  7690                           
  7691                           ;incstack = 0
  7692  001956  0E04               	movlw	4
  7693  001958  ECB8  F00E         	call	_SendStatus
  7694                           
  7695                           ;FastBuggy17_Main_Code_TUNING.c: 488: LATJ = 0x07;
  7696  00195C  0E07               	movlw	7
  7697  00195E  6E91               	movwf	3985,c	;volatile
  7698                           
  7699                           ;FastBuggy17_Main_Code_TUNING.c: 490: while(PB1pressed() == 0);
  7700  001960  D000               	goto	l5859
  7701  001962                     l5859:
  7702  001962  EC3B  F00D         	call	_PB1pressed	;wreg free
  7703  001966  0900               	iorlw	0
  7704  001968  B4D8               	btfsc	status,2,c
  7705  00196A  D7FB               	goto	l5859
  7706                           
  7707                           ;FastBuggy17_Main_Code_TUNING.c: 492: GetSensorReadings();
  7708  00196C  EC46  F011         	call	_GetSensorReadings	;wreg free
  7709                           
  7710                           ;FastBuggy17_Main_Code_TUNING.c: 493: while(BusySensorAcq() == 1);
  7711  001970  D000               	goto	l5863
  7712  001972                     l5863:
  7713  001972  ECD6  F011         	call	_BusySensorAcq	;wreg free
  7714  001976  06E8               	decf	wreg,f,c
  7715  001978  B4D8               	btfsc	status,2,c
  7716  00197A  D7FB               	goto	l5863
  7717                           
  7718                           ;FastBuggy17_Main_Code_TUNING.c: 494: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7719  00197C  0E95               	movlw	low _sensor_readings_raw
  7720  00197E  0100               	movlb	0	; () banked
  7721  001980  6FB7               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7722  001982  0E00               	movlw	high _sensor_readings_raw
  7723  001984  0100               	movlb	0	; () banked
  7724  001986  6FB8               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7725  001988  0E81               	movlw	low _sensor_offsets
  7726  00198A  0100               	movlb	0	; () banked
  7727  00198C  6FB9               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7728  00198E  0E00               	movlw	high _sensor_offsets
  7729  001990  0100               	movlb	0	; () banked
  7730  001992  6FBA               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7731  001994  ECBA  F00A         	call	_NormaliseSensorReadings	;wreg free
  7732                           
  7733                           ;FastBuggy17_Main_Code_TUNING.c: 496: sensor_threshold = sensor_readings_normalised[2];
  7734  001998  C08F  F0A5         	movff	_sensor_readings_normalised+4,_sensor_threshold
  7735  00199C  C090  F0A6         	movff	_sensor_readings_normalised+5,_sensor_threshold+1
  7736                           
  7737                           ;FastBuggy17_Main_Code_TUNING.c: 497: PID_set_point = CalculateSensorSum(sensor_readings
      +                          _normalised);
  7738  0019A0  0E8B               	movlw	low _sensor_readings_normalised
  7739  0019A2  0100               	movlb	0	; () banked
  7740  0019A4  6FBD               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  7741  0019A6  0E00               	movlw	high _sensor_readings_normalised
  7742  0019A8  0100               	movlb	0	; () banked
  7743  0019AA  6FBE               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  7744  0019AC  EC68  F005         	call	_CalculateSensorSum	;wreg free
  7745  0019B0  C0BD  F0A1         	movff	?_CalculateSensorSum,_PID_set_point
  7746  0019B4  C0BE  F0A2         	movff	?_CalculateSensorSum+1,_PID_set_point+1
  7747  0019B8  0012               	return		;funcret
  7748  0019BA                     __end_of_CalibrateOnLine:
  7749                           	opt stack 0
  7750                           prodh	equ	0xFF4
  7751                           prodl	equ	0xFF3
  7752                           intcon	equ	0xFF2
  7753                           postinc0	equ	0xFEE
  7754                           wreg	equ	0xFE8
  7755                           postinc1	equ	0xFE6
  7756                           fsr1h	equ	0xFE2
  7757                           fsr1l	equ	0xFE1
  7758                           indf2	equ	0xFDF
  7759                           postinc2	equ	0xFDE
  7760                           postdec2	equ	0xFDD
  7761                           fsr2h	equ	0xFDA
  7762                           fsr2l	equ	0xFD9
  7763                           status	equ	0xFD8
  7764                           
  7765 ;; *************** function _NormaliseSensorReadings *****************
  7766 ;; Defined at:
  7767 ;;		line 313 in file "FastBuggy17_Main_Code_TUNING.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  sensor_readi    2   16[BANK0 ] PTR  int 
  7770 ;;		 -> sensor_readings_raw(10), 
  7771 ;;  sensor_offse    2   18[BANK0 ] PTR const int 
  7772 ;;		 -> sensor_offsets(10), 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  index           1   24[BANK0 ] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;		None               void
  7777 ;; Registers used:
  7778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;Total ram usage:        9 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    7
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_CalibrateOnLine
  7795 ;;		_CalibrateThreshold
  7796 ;;		_main
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text54
  7801  001574                     __ptext54:
  7802                           	opt stack 0
  7803  001574                     _NormaliseSensorReadings:
  7804                           	opt stack 23
  7805                           
  7806                           ;FastBuggy17_Main_Code_TUNING.c: 314: unsigned char index;
  7807                           ;FastBuggy17_Main_Code_TUNING.c: 316: for(index = 0; index < 5; index++) {
  7808                           
  7809                           ;incstack = 0
  7810  001574  0E00               	movlw	0
  7811  001576  0100               	movlb	0	; () banked
  7812  001578  6FBF               	movwf	NormaliseSensorReadings@index& (0+255),b
  7813  00157A                     l5619:
  7814                           
  7815                           ; BSR set to: 0
  7816  00157A  0E04               	movlw	4
  7817  00157C  0100               	movlb	0	; () banked
  7818  00157E  65BF               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  7819  001580  D001               	goto	l5623
  7820                           
  7821                           ; BSR set to: 0
  7822  001582  D036               	goto	l811
  7823  001584                     l5623:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;FastBuggy17_Main_Code_TUNING.c: 317: sensor_readings_normalised[index] = *(sensor_readi
      +                          ngs_raw + index) + *(sensor_offsets + index);
  7827  001584  0100               	movlb	0	; () banked
  7828  001586  51BF               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7829  001588  0D02               	mullw	2
  7830  00158A  50F3               	movf	prodl,w,c
  7831  00158C  0100               	movlb	0	; () banked
  7832  00158E  25B9               	addwf	NormaliseSensorReadings@sensor_offsets& (0+255),w,b
  7833  001590  6ED9               	movwf	fsr2l,c
  7834  001592  50F4               	movf	prodh,w,c
  7835  001594  0100               	movlb	0	; () banked
  7836  001596  21BA               	addwfc	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),w,b
  7837  001598  6EDA               	movwf	fsr2h,c
  7838  00159A  CFDE F0BB          	movff	postinc2,??_NormaliseSensorReadings
  7839  00159E  CFDD F0BC          	movff	postdec2,??_NormaliseSensorReadings+1
  7840  0015A2  0100               	movlb	0	; () banked
  7841  0015A4  51BF               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7842  0015A6  0D02               	mullw	2
  7843  0015A8  50F3               	movf	prodl,w,c
  7844  0015AA  0100               	movlb	0	; () banked
  7845  0015AC  25B7               	addwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),w,b
  7846  0015AE  6ED9               	movwf	fsr2l,c
  7847  0015B0  50F4               	movf	prodh,w,c
  7848  0015B2  0100               	movlb	0	; () banked
  7849  0015B4  21B8               	addwfc	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),w,b
  7850  0015B6  6EDA               	movwf	fsr2h,c
  7851  0015B8  CFDE F0BD          	movff	postinc2,??_NormaliseSensorReadings+2
  7852  0015BC  CFDD F0BE          	movff	postdec2,??_NormaliseSensorReadings+3
  7853  0015C0  0100               	movlb	0	; () banked
  7854  0015C2  51BB               	movf	??_NormaliseSensorReadings& (0+255),w,b
  7855  0015C4  0100               	movlb	0	; () banked
  7856  0015C6  27BD               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  7857  0015C8  0100               	movlb	0	; () banked
  7858  0015CA  51BC               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  7859  0015CC  0100               	movlb	0	; () banked
  7860  0015CE  23BE               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  7861  0015D0  0100               	movlb	0	; () banked
  7862  0015D2  51BF               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7863  0015D4  0D02               	mullw	2
  7864  0015D6  0E8B               	movlw	low _sensor_readings_normalised
  7865  0015D8  24F3               	addwf	prodl,w,c
  7866  0015DA  6ED9               	movwf	fsr2l,c
  7867  0015DC  0E00               	movlw	high _sensor_readings_normalised
  7868  0015DE  20F4               	addwfc	prodh,w,c
  7869  0015E0  6EDA               	movwf	fsr2h,c
  7870  0015E2  C0BD  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  7871  0015E6  C0BE  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  7872                           
  7873                           ; BSR set to: 0
  7874  0015EA  0100               	movlb	0	; () banked
  7875  0015EC  2BBF               	incf	NormaliseSensorReadings@index& (0+255),f,b
  7876  0015EE  D7C5               	goto	l5619
  7877  0015F0                     l811:
  7878                           
  7879                           ; BSR set to: 0
  7880  0015F0  0012               	return		;funcret
  7881  0015F2                     __end_of_NormaliseSensorReadings:
  7882                           	opt stack 0
  7883                           prodh	equ	0xFF4
  7884                           prodl	equ	0xFF3
  7885                           intcon	equ	0xFF2
  7886                           postinc0	equ	0xFEE
  7887                           wreg	equ	0xFE8
  7888                           postinc1	equ	0xFE6
  7889                           fsr1h	equ	0xFE2
  7890                           fsr1l	equ	0xFE1
  7891                           indf2	equ	0xFDF
  7892                           postinc2	equ	0xFDE
  7893                           postdec2	equ	0xFDD
  7894                           fsr2h	equ	0xFDA
  7895                           fsr2l	equ	0xFD9
  7896                           status	equ	0xFD8
  7897                           
  7898 ;; *************** function _CalculateSensorSum *****************
  7899 ;; Defined at:
  7900 ;;		line 348 in file "FastBuggy17_Main_Code_TUNING.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  sensor_readi    2   22[BANK0 ] PTR const int 
  7903 ;;		 -> sensor_readings_normalised(10), 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  sum             2   26[BANK0 ] int 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  2   22[BANK0 ] int 
  7908 ;; Registers used:
  7909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7919 ;;Total ram usage:        6 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    8
  7922 ;; This function calls:
  7923 ;;		___wmul
  7924 ;; This function is called by:
  7925 ;;		_CalibrateOnLine
  7926 ;;		_main
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text55
  7931  000AD0                     __ptext55:
  7932                           	opt stack 0
  7933  000AD0                     _CalculateSensorSum:
  7934                           	opt stack 19
  7935                           
  7936                           ;FastBuggy17_Main_Code_TUNING.c: 350: int sum = 0;
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;incstack = 0
  7940  000AD0  0E00               	movlw	0
  7941  000AD2  0100               	movlb	0	; () banked
  7942  000AD4  6FC2               	movwf	(CalculateSensorSum@sum+1)& (0+255),b
  7943  000AD6  0E00               	movlw	0
  7944  000AD8  6FC1               	movwf	CalculateSensorSum@sum& (0+255),b
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;FastBuggy17_Main_Code_TUNING.c: 352: sum += *(sensor_readings_normalised + 0) * 3;
  7948  000ADA  C0BD  FFD9         	movff	CalculateSensorSum@sensor_readings_normalised,fsr2l
  7949  000ADE  C0BE  FFDA         	movff	CalculateSensorSum@sensor_readings_normalised+1,fsr2h
  7950  000AE2  CFDE F0B7          	movff	postinc2,___wmul@multiplier
  7951  000AE6  CFDD F0B8          	movff	postdec2,___wmul@multiplier+1
  7952  000AEA  0E00               	movlw	0
  7953  000AEC  0100               	movlb	0	; () banked
  7954  000AEE  6FBA               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7955  000AF0  0E03               	movlw	3
  7956  000AF2  6FB9               	movwf	___wmul@multiplicand& (0+255),b
  7957  000AF4  EC0D  F00F         	call	___wmul	;wreg free
  7958  000AF8  0100               	movlb	0	; () banked
  7959  000AFA  51B7               	movf	?___wmul& (0+255),w,b
  7960  000AFC  0100               	movlb	0	; () banked
  7961  000AFE  27C1               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7962  000B00  0100               	movlb	0	; () banked
  7963  000B02  51B8               	movf	(?___wmul+1)& (0+255),w,b
  7964  000B04  0100               	movlb	0	; () banked
  7965  000B06  23C2               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;FastBuggy17_Main_Code_TUNING.c: 353: sum += *(sensor_readings_normalised + 1) * 2;
  7969  000B08  0100               	movlb	0	; () banked
  7970  000B0A  EE20 F002          	lfsr	2,2
  7971  000B0E  51BD               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7972  000B10  26D9               	addwf	fsr2l,f,c
  7973  000B12  51BE               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7974  000B14  22DA               	addwfc	fsr2h,f,c
  7975  000B16  CFDE F0BF          	movff	postinc2,??_CalculateSensorSum
  7976  000B1A  CFDD F0C0          	movff	postdec2,??_CalculateSensorSum+1
  7977  000B1E  90D8               	bcf	status,0,c
  7978  000B20  0100               	movlb	0	; () banked
  7979  000B22  37BF               	rlcf	??_CalculateSensorSum& (0+255),f,b
  7980  000B24  37C0               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  7981  000B26  0100               	movlb	0	; () banked
  7982  000B28  51BF               	movf	??_CalculateSensorSum& (0+255),w,b
  7983  000B2A  0100               	movlb	0	; () banked
  7984  000B2C  27C1               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7985  000B2E  0100               	movlb	0	; () banked
  7986  000B30  51C0               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  7987  000B32  0100               	movlb	0	; () banked
  7988  000B34  23C2               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;FastBuggy17_Main_Code_TUNING.c: 354: sum += *(sensor_readings_normalised + 2) * 1;
  7992  000B36  0100               	movlb	0	; () banked
  7993  000B38  EE20 F004          	lfsr	2,4
  7994  000B3C  51BD               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7995  000B3E  26D9               	addwf	fsr2l,f,c
  7996  000B40  51BE               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7997  000B42  22DA               	addwfc	fsr2h,f,c
  7998  000B44  50DE               	movf	postinc2,w,c
  7999  000B46  0100               	movlb	0	; () banked
  8000  000B48  27C1               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8001  000B4A  50DD               	movf	postdec2,w,c
  8002  000B4C  0100               	movlb	0	; () banked
  8003  000B4E  23C2               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;FastBuggy17_Main_Code_TUNING.c: 355: sum += *(sensor_readings_normalised + 3) * -2;
  8007  000B50  0100               	movlb	0	; () banked
  8008  000B52  EE20 F006          	lfsr	2,6
  8009  000B56  51BD               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8010  000B58  26D9               	addwf	fsr2l,f,c
  8011  000B5A  51BE               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8012  000B5C  22DA               	addwfc	fsr2h,f,c
  8013  000B5E  CFDE F0BF          	movff	postinc2,??_CalculateSensorSum
  8014  000B62  CFDD F0C0          	movff	postdec2,??_CalculateSensorSum+1
  8015  000B66  90D8               	bcf	status,0,c
  8016  000B68  0100               	movlb	0	; () banked
  8017  000B6A  37BF               	rlcf	??_CalculateSensorSum& (0+255),f,b
  8018  000B6C  37C0               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  8019  000B6E  0100               	movlb	0	; () banked
  8020  000B70  1FBF               	comf	??_CalculateSensorSum& (0+255),f,b
  8021  000B72  1FC0               	comf	(??_CalculateSensorSum+1)& (0+255),f,b
  8022  000B74  4BBF               	infsnz	??_CalculateSensorSum& (0+255),f,b
  8023  000B76  2BC0               	incf	(??_CalculateSensorSum+1)& (0+255),f,b
  8024  000B78  0100               	movlb	0	; () banked
  8025  000B7A  51BF               	movf	??_CalculateSensorSum& (0+255),w,b
  8026  000B7C  0100               	movlb	0	; () banked
  8027  000B7E  27C1               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8028  000B80  0100               	movlb	0	; () banked
  8029  000B82  51C0               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8030  000B84  0100               	movlb	0	; () banked
  8031  000B86  23C2               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;FastBuggy17_Main_Code_TUNING.c: 356: sum += *(sensor_readings_normalised + 4) * -3;
  8035  000B88  0100               	movlb	0	; () banked
  8036  000B8A  EE20 F008          	lfsr	2,8
  8037  000B8E  51BD               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8038  000B90  26D9               	addwf	fsr2l,f,c
  8039  000B92  51BE               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8040  000B94  22DA               	addwfc	fsr2h,f,c
  8041  000B96  CFDE F0B7          	movff	postinc2,___wmul@multiplier
  8042  000B9A  CFDD F0B8          	movff	postdec2,___wmul@multiplier+1
  8043  000B9E  0EFF               	movlw	255
  8044  000BA0  0100               	movlb	0	; () banked
  8045  000BA2  6FBA               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8046  000BA4  0EFD               	movlw	253
  8047  000BA6  6FB9               	movwf	___wmul@multiplicand& (0+255),b
  8048  000BA8  EC0D  F00F         	call	___wmul	;wreg free
  8049  000BAC  0100               	movlb	0	; () banked
  8050  000BAE  51B7               	movf	?___wmul& (0+255),w,b
  8051  000BB0  0100               	movlb	0	; () banked
  8052  000BB2  27C1               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8053  000BB4  0100               	movlb	0	; () banked
  8054  000BB6  51B8               	movf	(?___wmul+1)& (0+255),w,b
  8055  000BB8  0100               	movlb	0	; () banked
  8056  000BBA  23C2               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;FastBuggy17_Main_Code_TUNING.c: 358: return(sum);
  8060  000BBC  C0C1  F0BD         	movff	CalculateSensorSum@sum,?_CalculateSensorSum
  8061  000BC0  C0C2  F0BE         	movff	CalculateSensorSum@sum+1,?_CalculateSensorSum+1
  8062  000BC4  D000               	goto	l828
  8063  000BC6                     l828:
  8064                           
  8065                           ; BSR set to: 0
  8066  000BC6  0012               	return		;funcret
  8067  000BC8                     __end_of_CalculateSensorSum:
  8068                           	opt stack 0
  8069                           prodh	equ	0xFF4
  8070                           prodl	equ	0xFF3
  8071                           intcon	equ	0xFF2
  8072                           postinc0	equ	0xFEE
  8073                           wreg	equ	0xFE8
  8074                           postinc1	equ	0xFE6
  8075                           fsr1h	equ	0xFE2
  8076                           fsr1l	equ	0xFE1
  8077                           indf2	equ	0xFDF
  8078                           postinc2	equ	0xFDE
  8079                           postdec2	equ	0xFDD
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function ___wmul *****************
  8085 ;; Defined at:
  8086 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  multiplier      2   16[BANK0 ] unsigned int 
  8089 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  product         2   20[BANK0 ] unsigned int 
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  2   16[BANK0 ] unsigned int 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0, prodl, prodh
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;Total ram usage:        6 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; Hardware stack levels required when called:    7
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_CalculateSensorSum
  8112 ;;		_main
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text56
  8117  001E1A                     __ptext56:
  8118                           	opt stack 0
  8119  001E1A                     ___wmul:
  8120                           	opt stack 23
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;incstack = 0
  8124  001E1A  0100               	movlb	0	; () banked
  8125  001E1C  51B7               	movf	___wmul@multiplier& (0+255),w,b
  8126  001E1E  0100               	movlb	0	; () banked
  8127  001E20  03B9               	mulwf	___wmul@multiplicand& (0+255),b
  8128  001E22  CFF3 F0BB          	movff	prodl,___wmul@product
  8129  001E26  CFF4 F0BC          	movff	prodh,___wmul@product+1
  8130  001E2A  0100               	movlb	0	; () banked
  8131  001E2C  51B7               	movf	___wmul@multiplier& (0+255),w,b
  8132  001E2E  0100               	movlb	0	; () banked
  8133  001E30  03BA               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8134  001E32  50F3               	movf	prodl,w,c
  8135  001E34  0100               	movlb	0	; () banked
  8136  001E36  27BC               	addwf	(___wmul@product+1)& (0+255),f,b
  8137  001E38  0100               	movlb	0	; () banked
  8138  001E3A  51B8               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8139  001E3C  0100               	movlb	0	; () banked
  8140  001E3E  03B9               	mulwf	___wmul@multiplicand& (0+255),b
  8141  001E40  50F3               	movf	prodl,w,c
  8142  001E42  0100               	movlb	0	; () banked
  8143  001E44  27BC               	addwf	(___wmul@product+1)& (0+255),f,b
  8144                           
  8145                           ; BSR set to: 0
  8146  001E46  C0BB  F0B7         	movff	___wmul@product,?___wmul
  8147  001E4A  C0BC  F0B8         	movff	___wmul@product+1,?___wmul+1
  8148  001E4E  D000               	goto	l1248
  8149  001E50                     l1248:
  8150                           
  8151                           ; BSR set to: 0
  8152  001E50  0012               	return		;funcret
  8153  001E52                     __end_of___wmul:
  8154                           	opt stack 0
  8155                           prodh	equ	0xFF4
  8156                           prodl	equ	0xFF3
  8157                           intcon	equ	0xFF2
  8158                           postinc0	equ	0xFEE
  8159                           wreg	equ	0xFE8
  8160                           postinc1	equ	0xFE6
  8161                           fsr1h	equ	0xFE2
  8162                           fsr1l	equ	0xFE1
  8163                           indf2	equ	0xFDF
  8164                           postinc2	equ	0xFDE
  8165                           postdec2	equ	0xFDD
  8166                           fsr2h	equ	0xFDA
  8167                           fsr2l	equ	0xFD9
  8168                           status	equ	0xFD8
  8169                           
  8170 ;; *************** function _CalibrateOffsets *****************
  8171 ;; Defined at:
  8172 ;;		line 467 in file "FastBuggy17_Main_Code_TUNING.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;		None
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  index           1   27[BANK0 ] unsigned char 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;		None               void
  8179 ;; Registers used:
  8180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;Total ram usage:        3 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:   10
  8193 ;; This function calls:
  8194 ;;		_BusySensorAcq
  8195 ;;		_GetSensorReadings
  8196 ;;		_PB1pressed
  8197 ;;		_SendStatus
  8198 ;; This function is called by:
  8199 ;;		_GenerateCalibration
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text57
  8204  001360                     __ptext57:
  8205                           	opt stack 0
  8206  001360                     _CalibrateOffsets:
  8207                           	opt stack 18
  8208                           
  8209                           ;FastBuggy17_Main_Code_TUNING.c: 468: unsigned char index;
  8210                           ;FastBuggy17_Main_Code_TUNING.c: 470: SendStatus(0x03);
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;incstack = 0
  8214  001360  0E03               	movlw	3
  8215  001362  ECB8  F00E         	call	_SendStatus
  8216                           
  8217                           ;FastBuggy17_Main_Code_TUNING.c: 471: LATJ = 0x07;
  8218  001366  0E07               	movlw	7
  8219  001368  6E91               	movwf	3985,c	;volatile
  8220                           
  8221                           ;FastBuggy17_Main_Code_TUNING.c: 473: while(PB1pressed() == 0);
  8222  00136A  D000               	goto	l5837
  8223  00136C                     l5837:
  8224  00136C  EC3B  F00D         	call	_PB1pressed	;wreg free
  8225  001370  0900               	iorlw	0
  8226  001372  B4D8               	btfsc	status,2,c
  8227  001374  D7FB               	goto	l5837
  8228                           
  8229                           ;FastBuggy17_Main_Code_TUNING.c: 475: GetSensorReadings();
  8230  001376  EC46  F011         	call	_GetSensorReadings	;wreg free
  8231                           
  8232                           ;FastBuggy17_Main_Code_TUNING.c: 476: while(BusySensorAcq());
  8233  00137A  D000               	goto	l5841
  8234  00137C                     l5841:
  8235  00137C  ECD6  F011         	call	_BusySensorAcq	;wreg free
  8236  001380  0900               	iorlw	0
  8237  001382  A4D8               	btfss	status,2,c
  8238  001384  D7FB               	goto	l5841
  8239                           
  8240                           ;FastBuggy17_Main_Code_TUNING.c: 478: for(index = 0; index < 5; index++) {
  8241  001386  0E00               	movlw	0
  8242  001388  0100               	movlb	0	; () banked
  8243  00138A  6FC2               	movwf	CalibrateOffsets@index& (0+255),b
  8244  00138C                     l5845:
  8245                           
  8246                           ; BSR set to: 0
  8247  00138C  0E04               	movlw	4
  8248  00138E  0100               	movlb	0	; () banked
  8249  001390  65C2               	cpfsgt	CalibrateOffsets@index& (0+255),b
  8250  001392  D001               	goto	l5849
  8251                           
  8252                           ; BSR set to: 0
  8253  001394  D02A               	goto	l888
  8254  001396                     l5849:
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;FastBuggy17_Main_Code_TUNING.c: 480: sensor_offsets[index] = sensor_readings_raw[2] - s
      +                          ensor_readings_raw[index];
  8258  001396  0100               	movlb	0	; () banked
  8259  001398  51C2               	movf	CalibrateOffsets@index& (0+255),w,b
  8260  00139A  0D02               	mullw	2
  8261  00139C  0E95               	movlw	low _sensor_readings_raw
  8262  00139E  24F3               	addwf	prodl,w,c
  8263  0013A0  6ED9               	movwf	fsr2l,c
  8264  0013A2  0E00               	movlw	high _sensor_readings_raw
  8265  0013A4  20F4               	addwfc	prodh,w,c
  8266  0013A6  6EDA               	movwf	fsr2h,c
  8267  0013A8  CFDE F0C0          	movff	postinc2,??_CalibrateOffsets
  8268  0013AC  CFDD F0C1          	movff	postdec2,??_CalibrateOffsets+1
  8269  0013B0  0100               	movlb	0	; () banked
  8270  0013B2  1FC0               	comf	??_CalibrateOffsets& (0+255),f,b
  8271  0013B4  1FC1               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  8272  0013B6  4BC0               	infsnz	??_CalibrateOffsets& (0+255),f,b
  8273  0013B8  2BC1               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  8274  0013BA  0100               	movlb	0	; () banked
  8275  0013BC  5199               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  8276  0013BE  0100               	movlb	0	; () banked
  8277  0013C0  27C0               	addwf	??_CalibrateOffsets& (0+255),f,b
  8278  0013C2  0100               	movlb	0	; () banked
  8279  0013C4  519A               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  8280  0013C6  0100               	movlb	0	; () banked
  8281  0013C8  23C1               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  8282  0013CA  0100               	movlb	0	; () banked
  8283  0013CC  51C2               	movf	CalibrateOffsets@index& (0+255),w,b
  8284  0013CE  0D02               	mullw	2
  8285  0013D0  0E81               	movlw	low _sensor_offsets
  8286  0013D2  24F3               	addwf	prodl,w,c
  8287  0013D4  6ED9               	movwf	fsr2l,c
  8288  0013D6  0E00               	movlw	high _sensor_offsets
  8289  0013D8  20F4               	addwfc	prodh,w,c
  8290  0013DA  6EDA               	movwf	fsr2h,c
  8291  0013DC  C0C0  FFDE         	movff	??_CalibrateOffsets,postinc2
  8292  0013E0  C0C1  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  8293                           
  8294                           ; BSR set to: 0
  8295  0013E4  0100               	movlb	0	; () banked
  8296  0013E6  2BC2               	incf	CalibrateOffsets@index& (0+255),f,b
  8297  0013E8  D7D1               	goto	l5845
  8298  0013EA                     l888:
  8299                           
  8300                           ; BSR set to: 0
  8301  0013EA  0012               	return		;funcret
  8302  0013EC                     __end_of_CalibrateOffsets:
  8303                           	opt stack 0
  8304                           prodh	equ	0xFF4
  8305                           prodl	equ	0xFF3
  8306                           intcon	equ	0xFF2
  8307                           postinc0	equ	0xFEE
  8308                           wreg	equ	0xFE8
  8309                           postinc1	equ	0xFE6
  8310                           fsr1h	equ	0xFE2
  8311                           fsr1l	equ	0xFE1
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           
  8319 ;; *************** function _SendStatus *****************
  8320 ;; Defined at:
  8321 ;;		line 139 in file "Wireless.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  status_code     1    wreg     const unsigned char 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  status_code     1   24[BANK0 ] const unsigned char 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;		None               void
  8328 ;; Registers used:
  8329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;Total ram usage:        1 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    9
  8342 ;; This function calls:
  8343 ;;		_BusyTx
  8344 ;;		_FlushTxBuf
  8345 ;;		_PutCharTxBuf
  8346 ;;		_StartTx
  8347 ;; This function is called by:
  8348 ;;		_CalibrateOffsets
  8349 ;;		_CalibrateOnLine
  8350 ;;		_CalibrateThreshold
  8351 ;;		_SetPIDValues
  8352 ;;		_LoadPIDValues
  8353 ;;		_main
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text58
  8358  001D70                     __ptext58:
  8359                           	opt stack 0
  8360  001D70                     _SendStatus:
  8361                           	opt stack 20
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;incstack = 0
  8365                           ;SendStatus@status_code stored from wreg
  8366  001D70  0100               	movlb	0	; () banked
  8367  001D72  6FBF               	movwf	SendStatus@status_code& (0+255),b
  8368                           
  8369                           ; BSR set to: 0
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;Wireless.c: 140: while(BusyTx());
  8373  001D74  D000               	goto	l5599
  8374  001D76                     l5599:
  8375  001D76  ECCE  F011         	call	_BusyTx	;wreg free
  8376  001D7A  0900               	iorlw	0
  8377  001D7C  A4D8               	btfss	status,2,c
  8378  001D7E  D7FB               	goto	l5599
  8379                           
  8380                           ;Wireless.c: 141: FlushTxBuf();
  8381  001D80  EC45  F00F         	call	_FlushTxBuf	;wreg free
  8382                           
  8383                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  8384  001D84  0EAA               	movlw	170
  8385  001D86  EC1C  F00E         	call	_PutCharTxBuf
  8386                           
  8387                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  8388  001D8A  0E01               	movlw	1
  8389  001D8C  EC1C  F00E         	call	_PutCharTxBuf
  8390                           
  8391                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  8392  001D90  0100               	movlb	0	; () banked
  8393  001D92  51BF               	movf	SendStatus@status_code& (0+255),w,b
  8394  001D94  EC1C  F00E         	call	_PutCharTxBuf
  8395                           
  8396                           ;Wireless.c: 146: PutCharTxBuf('\r');
  8397  001D98  0E0D               	movlw	13
  8398  001D9A  EC1C  F00E         	call	_PutCharTxBuf
  8399                           
  8400                           ;Wireless.c: 147: PutCharTxBuf('\n');
  8401  001D9E  0E0A               	movlw	10
  8402  001DA0  EC1C  F00E         	call	_PutCharTxBuf
  8403                           
  8404                           ;Wireless.c: 149: StartTx();
  8405  001DA4  EC41  F012         	call	_StartTx	;wreg free
  8406  001DA8  0012               	return		;funcret
  8407  001DAA                     __end_of_SendStatus:
  8408                           	opt stack 0
  8409                           prodh	equ	0xFF4
  8410                           prodl	equ	0xFF3
  8411                           intcon	equ	0xFF2
  8412                           postinc0	equ	0xFEE
  8413                           wreg	equ	0xFE8
  8414                           postinc1	equ	0xFE6
  8415                           fsr1h	equ	0xFE2
  8416                           fsr1l	equ	0xFE1
  8417                           indf2	equ	0xFDF
  8418                           postinc2	equ	0xFDE
  8419                           postdec2	equ	0xFDD
  8420                           fsr2h	equ	0xFDA
  8421                           fsr2l	equ	0xFD9
  8422                           status	equ	0xFD8
  8423                           
  8424 ;; *************** function _StartTx *****************
  8425 ;; Defined at:
  8426 ;;		line 41 in file "Wireless.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;		None               void
  8433 ;; Registers used:
  8434 ;;		wreg, status,2
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    7
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_SendStatus
  8451 ;;		_SendLineMode
  8452 ;;		_SendOffsets
  8453 ;;		_SendDefaultPIDValues
  8454 ;;		_SendStoredPIDValues
  8455 ;;		_SendCurrentPIDValues
  8456 ;;		_SendBattVoltageInitial
  8457 ;;		_SendPIDSetPointOnLine
  8458 ;;		_SendPIDSetPointOffLine
  8459 ;;		_SendThreshold
  8460 ;;		_SendBattVoltage
  8461 ;;		_SendBattCurrent
  8462 ;;		_SendBattCurrentAcc
  8463 ;;		_SendPIDError
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text59
  8468  002482                     __ptext59:
  8469                           	opt stack 0
  8470  002482                     _StartTx:
  8471                           	opt stack 21
  8472                           
  8473                           ;Wireless.c: 42: Tx_complete = 0;
  8474                           
  8475                           ;incstack = 0
  8476  002482  0E00               	movlw	0
  8477  002484  6E1A               	movwf	_Tx_complete,c
  8478                           
  8479                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  8480  002486  889D               	bsf	3997,4,c	;volatile
  8481  002488  0012               	return		;funcret
  8482  00248A                     __end_of_StartTx:
  8483                           	opt stack 0
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           postinc0	equ	0xFEE
  8488                           wreg	equ	0xFE8
  8489                           postinc1	equ	0xFE6
  8490                           fsr1h	equ	0xFE2
  8491                           fsr1l	equ	0xFE1
  8492                           indf2	equ	0xFDF
  8493                           postinc2	equ	0xFDE
  8494                           postdec2	equ	0xFDD
  8495                           fsr2h	equ	0xFDA
  8496                           fsr2l	equ	0xFD9
  8497                           status	equ	0xFD8
  8498                           
  8499 ;; *************** function _PutCharTxBuf *****************
  8500 ;; Defined at:
  8501 ;;		line 9 in file "Wireless.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  ch              1    wreg     unsigned char 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  ch              1   23[BANK0 ] unsigned char 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;		None               void
  8508 ;; Registers used:
  8509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;Total ram usage:        2 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    8
  8522 ;; This function calls:
  8523 ;;		___awmod
  8524 ;; This function is called by:
  8525 ;;		_SendStatus
  8526 ;;		_SendLineMode
  8527 ;;		_SendOffsets
  8528 ;;		_SendDefaultPIDValues
  8529 ;;		_SendStoredPIDValues
  8530 ;;		_SendCurrentPIDValues
  8531 ;;		_SendBattVoltageInitial
  8532 ;;		_SendPIDSetPointOnLine
  8533 ;;		_SendPIDSetPointOffLine
  8534 ;;		_SendThreshold
  8535 ;;		_SendBattVoltage
  8536 ;;		_SendBattCurrent
  8537 ;;		_SendBattCurrentAcc
  8538 ;;		_SendPIDError
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text60
  8543  001C38                     __ptext60:
  8544                           	opt stack 0
  8545  001C38                     _PutCharTxBuf:
  8546                           	opt stack 20
  8547                           
  8548                           ;incstack = 0
  8549                           ;PutCharTxBuf@ch stored from wreg
  8550  001C38  0100               	movlb	0	; () banked
  8551  001C3A  6FBE               	movwf	PutCharTxBuf@ch& (0+255),b
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  8555  001C3C  5020               	movf	_put_Tx_index,w,c
  8556  001C3E  0D01               	mullw	1
  8557  001C40  0E60               	movlw	low _Tx_buffer
  8558  001C42  24F3               	addwf	prodl,w,c
  8559  001C44  6ED9               	movwf	fsr2l,c
  8560  001C46  0E00               	movlw	high _Tx_buffer
  8561  001C48  20F4               	addwfc	prodh,w,c
  8562  001C4A  6EDA               	movwf	fsr2h,c
  8563  001C4C  C0BE  FFDF         	movff	PutCharTxBuf@ch,indf2
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  8567  001C50  C020  F0BD         	movff	_put_Tx_index,??_PutCharTxBuf
  8568  001C54  0E01               	movlw	1
  8569  001C56  0100               	movlb	0	; () banked
  8570  001C58  27BD               	addwf	??_PutCharTxBuf& (0+255),f,b
  8571  001C5A  0100               	movlb	0	; () banked
  8572  001C5C  51BD               	movf	??_PutCharTxBuf& (0+255),w,b
  8573  001C5E  0100               	movlb	0	; () banked
  8574  001C60  6FB7               	movwf	___awmod@dividend& (0+255),b
  8575  001C62  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8576  001C64  0E00               	movlw	0
  8577  001C66  0100               	movlb	0	; () banked
  8578  001C68  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8579  001C6A  0E19               	movlw	25
  8580  001C6C  6FB9               	movwf	___awmod@divisor& (0+255),b
  8581  001C6E  ECB3  F007         	call	___awmod	;wreg free
  8582  001C72  0100               	movlb	0	; () banked
  8583  001C74  51B7               	movf	?___awmod& (0+255),w,b
  8584  001C76  6E20               	movwf	_put_Tx_index,c
  8585                           
  8586                           ; BSR set to: 0
  8587  001C78  0012               	return		;funcret
  8588  001C7A                     __end_of_PutCharTxBuf:
  8589                           	opt stack 0
  8590                           prodh	equ	0xFF4
  8591                           prodl	equ	0xFF3
  8592                           intcon	equ	0xFF2
  8593                           postinc0	equ	0xFEE
  8594                           wreg	equ	0xFE8
  8595                           postinc1	equ	0xFE6
  8596                           fsr1h	equ	0xFE2
  8597                           fsr1l	equ	0xFE1
  8598                           indf2	equ	0xFDF
  8599                           postinc2	equ	0xFDE
  8600                           postdec2	equ	0xFDD
  8601                           fsr2h	equ	0xFDA
  8602                           fsr2l	equ	0xFD9
  8603                           status	equ	0xFD8
  8604                           
  8605 ;; *************** function ___awmod *****************
  8606 ;; Defined at:
  8607 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  dividend        2   16[BANK0 ] int 
  8610 ;;  divisor         2   18[BANK0 ] int 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  sign            1   21[BANK0 ] unsigned char 
  8613 ;;  counter         1   20[BANK0 ] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  2   16[BANK0 ] int 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8623 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;Total ram usage:        6 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    7
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_PutCharTxBuf
  8634 ;;		_PutCharRxBuf
  8635 ;;		_GetCharRxBuf
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text61
  8640  000F66                     __ptext61:
  8641                           	opt stack 0
  8642  000F66                     ___awmod:
  8643                           	opt stack 20
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;incstack = 0
  8647  000F66  0E00               	movlw	0
  8648  000F68  0100               	movlb	0	; () banked
  8649  000F6A  6FBC               	movwf	___awmod@sign& (0+255),b
  8650                           
  8651                           ; BSR set to: 0
  8652  000F6C  0100               	movlb	0	; () banked
  8653  000F6E  AFB8               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8654  000F70  D009               	goto	l5457
  8655                           
  8656                           ; BSR set to: 0
  8657  000F72  0100               	movlb	0	; () banked
  8658  000F74  6DB7               	negf	___awmod@dividend& (0+255),b
  8659  000F76  1FB8               	comf	(___awmod@dividend+1)& (0+255),f,b
  8660  000F78  B0D8               	btfsc	status,0,c
  8661  000F7A  2BB8               	incf	(___awmod@dividend+1)& (0+255),f,b
  8662                           
  8663                           ; BSR set to: 0
  8664  000F7C  0E01               	movlw	1
  8665  000F7E  0100               	movlb	0	; () banked
  8666  000F80  6FBC               	movwf	___awmod@sign& (0+255),b
  8667  000F82  D000               	goto	l5457
  8668  000F84                     l5457:
  8669                           
  8670                           ; BSR set to: 0
  8671  000F84  0100               	movlb	0	; () banked
  8672  000F86  AFBA               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8673  000F88  D006               	goto	l5461
  8674                           
  8675                           ; BSR set to: 0
  8676  000F8A  0100               	movlb	0	; () banked
  8677  000F8C  6DB9               	negf	___awmod@divisor& (0+255),b
  8678  000F8E  1FBA               	comf	(___awmod@divisor+1)& (0+255),f,b
  8679  000F90  B0D8               	btfsc	status,0,c
  8680  000F92  2BBA               	incf	(___awmod@divisor+1)& (0+255),f,b
  8681  000F94  D000               	goto	l5461
  8682  000F96                     l5461:
  8683                           
  8684                           ; BSR set to: 0
  8685  000F96  0100               	movlb	0	; () banked
  8686  000F98  51B9               	movf	___awmod@divisor& (0+255),w,b
  8687  000F9A  0100               	movlb	0	; () banked
  8688  000F9C  11BA               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8689  000F9E  B4D8               	btfsc	status,2,c
  8690  000FA0  D02B               	goto	l5477
  8691                           
  8692                           ; BSR set to: 0
  8693  000FA2  0E01               	movlw	1
  8694  000FA4  0100               	movlb	0	; () banked
  8695  000FA6  6FBB               	movwf	___awmod@counter& (0+255),b
  8696  000FA8  D007               	goto	l5467
  8697  000FAA                     l5465:
  8698                           
  8699                           ; BSR set to: 0
  8700  000FAA  0100               	movlb	0	; () banked
  8701  000FAC  90D8               	bcf	status,0,c
  8702  000FAE  37B9               	rlcf	___awmod@divisor& (0+255),f,b
  8703  000FB0  37BA               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8704  000FB2  0100               	movlb	0	; () banked
  8705  000FB4  2BBB               	incf	___awmod@counter& (0+255),f,b
  8706  000FB6  D000               	goto	l5467
  8707  000FB8                     l5467:
  8708                           
  8709                           ; BSR set to: 0
  8710  000FB8  0100               	movlb	0	; () banked
  8711  000FBA  BFBA               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  8712  000FBC  D002               	goto	l5469
  8713  000FBE  D7F5               	goto	l5465
  8714                           
  8715                           ; BSR set to: 0
  8716  000FC0  D000               	goto	l5469
  8717  000FC2                     l5469:
  8718                           
  8719                           ; BSR set to: 0
  8720  000FC2  0100               	movlb	0	; () banked
  8721  000FC4  51B9               	movf	___awmod@divisor& (0+255),w,b
  8722  000FC6  0100               	movlb	0	; () banked
  8723  000FC8  5DB7               	subwf	___awmod@dividend& (0+255),w,b
  8724  000FCA  0100               	movlb	0	; () banked
  8725  000FCC  51BA               	movf	(___awmod@divisor+1)& (0+255),w,b
  8726  000FCE  0100               	movlb	0	; () banked
  8727  000FD0  59B8               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8728  000FD2  A0D8               	btfss	status,0,c
  8729  000FD4  D009               	goto	l5473
  8730                           
  8731                           ; BSR set to: 0
  8732  000FD6  0100               	movlb	0	; () banked
  8733  000FD8  51B9               	movf	___awmod@divisor& (0+255),w,b
  8734  000FDA  0100               	movlb	0	; () banked
  8735  000FDC  5FB7               	subwf	___awmod@dividend& (0+255),f,b
  8736  000FDE  0100               	movlb	0	; () banked
  8737  000FE0  51BA               	movf	(___awmod@divisor+1)& (0+255),w,b
  8738  000FE2  0100               	movlb	0	; () banked
  8739  000FE4  5BB8               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8740  000FE6  D000               	goto	l5473
  8741  000FE8                     l5473:
  8742                           
  8743                           ; BSR set to: 0
  8744  000FE8  0100               	movlb	0	; () banked
  8745  000FEA  90D8               	bcf	status,0,c
  8746  000FEC  33BA               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8747  000FEE  33B9               	rrcf	___awmod@divisor& (0+255),f,b
  8748                           
  8749                           ; BSR set to: 0
  8750  000FF0  0100               	movlb	0	; () banked
  8751  000FF2  2FBB               	decfsz	___awmod@counter& (0+255),f,b
  8752  000FF4  D7E6               	goto	l5469
  8753                           
  8754                           ; BSR set to: 0
  8755  000FF6  D000               	goto	l5477
  8756  000FF8                     l5477:
  8757                           
  8758                           ; BSR set to: 0
  8759  000FF8  0100               	movlb	0	; () banked
  8760  000FFA  51BC               	movf	___awmod@sign& (0+255),w,b
  8761  000FFC  0100               	movlb	0	; () banked
  8762  000FFE  B4D8               	btfsc	status,2,c
  8763  001000  D006               	goto	l5481
  8764                           
  8765                           ; BSR set to: 0
  8766  001002  0100               	movlb	0	; () banked
  8767  001004  6DB7               	negf	___awmod@dividend& (0+255),b
  8768  001006  1FB8               	comf	(___awmod@dividend+1)& (0+255),f,b
  8769  001008  B0D8               	btfsc	status,0,c
  8770  00100A  2BB8               	incf	(___awmod@dividend+1)& (0+255),f,b
  8771  00100C  D000               	goto	l5481
  8772  00100E                     l5481:
  8773                           
  8774                           ; BSR set to: 0
  8775  00100E  C0B7  F0B7         	movff	___awmod@dividend,?___awmod
  8776  001012  C0B8  F0B8         	movff	___awmod@dividend+1,?___awmod+1
  8777  001016  D000               	goto	l1454
  8778  001018                     l1454:
  8779                           
  8780                           ; BSR set to: 0
  8781  001018  0012               	return		;funcret
  8782  00101A                     __end_of___awmod:
  8783                           	opt stack 0
  8784                           prodh	equ	0xFF4
  8785                           prodl	equ	0xFF3
  8786                           intcon	equ	0xFF2
  8787                           postinc0	equ	0xFEE
  8788                           wreg	equ	0xFE8
  8789                           postinc1	equ	0xFE6
  8790                           fsr1h	equ	0xFE2
  8791                           fsr1l	equ	0xFE1
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           postdec2	equ	0xFDD
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function _BusyTx *****************
  8800 ;; Defined at:
  8801 ;;		line 131 in file "Wireless.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      unsigned char 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    7
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_SendStatus
  8826 ;;		_SendLineMode
  8827 ;;		_SendOffsets
  8828 ;;		_SendDefaultPIDValues
  8829 ;;		_SendStoredPIDValues
  8830 ;;		_SendCurrentPIDValues
  8831 ;;		_SendBattVoltageInitial
  8832 ;;		_SendPIDSetPointOnLine
  8833 ;;		_SendPIDSetPointOffLine
  8834 ;;		_SendThreshold
  8835 ;;		_SendBattVoltage
  8836 ;;		_SendBattCurrent
  8837 ;;		_SendBattCurrentAcc
  8838 ;;		_SendPIDError
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text62
  8843  00239C                     __ptext62:
  8844                           	opt stack 0
  8845  00239C                     _BusyTx:
  8846                           	opt stack 21
  8847                           
  8848                           ;Wireless.c: 132: return(!Tx_complete);
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;incstack = 0
  8852  00239C  501A               	movf	_Tx_complete,w,c
  8853  00239E  A4D8               	btfss	status,2,c
  8854  0023A0  D002               	goto	u4460
  8855  0023A2  0E01               	movlw	1
  8856  0023A4  D002               	goto	l324
  8857  0023A6                     u4460:
  8858  0023A6  0E00               	movlw	0
  8859  0023A8  D000               	goto	l324
  8860  0023AA                     l324:
  8861  0023AA  0012               	return		;funcret
  8862  0023AC                     __end_of_BusyTx:
  8863                           	opt stack 0
  8864                           prodh	equ	0xFF4
  8865                           prodl	equ	0xFF3
  8866                           intcon	equ	0xFF2
  8867                           postinc0	equ	0xFEE
  8868                           wreg	equ	0xFE8
  8869                           postinc1	equ	0xFE6
  8870                           fsr1h	equ	0xFE2
  8871                           fsr1l	equ	0xFE1
  8872                           indf2	equ	0xFDF
  8873                           postinc2	equ	0xFDE
  8874                           postdec2	equ	0xFDD
  8875                           fsr2h	equ	0xFDA
  8876                           fsr2l	equ	0xFD9
  8877                           status	equ	0xFD8
  8878                           
  8879 ;; *************** function _PB1pressed *****************
  8880 ;; Defined at:
  8881 ;;		line 413 in file "FastBuggy17_Main_Code_TUNING.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      unsigned char 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    9
  8902 ;; This function calls:
  8903 ;;		_CommandAvailable
  8904 ;;		_GetCommand
  8905 ;;		_ReadMillis2
  8906 ;;		_ResetMillis2
  8907 ;; This function is called by:
  8908 ;;		_CalibrateOffsets
  8909 ;;		_CalibrateOnLine
  8910 ;;		_CalibrateThreshold
  8911 ;;		_LoadPIDValues
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text63
  8917  001A76                     __ptext63:
  8918                           	opt stack 0
  8919  001A76                     _PB1pressed:
  8920                           	opt stack 21
  8921                           
  8922                           ;FastBuggy17_Main_Code_TUNING.c: 414: if(CommandAvailable() == 1) {
  8923                           
  8924                           ;incstack = 0
  8925  001A76  EC0B  F012         	call	_CommandAvailable	;wreg free
  8926  001A7A  06E8               	decf	wreg,f,c
  8927  001A7C  A4D8               	btfss	status,2,c
  8928  001A7E  D00B               	goto	l850
  8929                           
  8930                           ;FastBuggy17_Main_Code_TUNING.c: 415: if(GetCommand() == 0x05) {
  8931  001A80  EC45  F012         	call	_GetCommand	;wreg free
  8932  001A84  0A05               	xorlw	5
  8933  001A86  A4D8               	btfss	status,2,c
  8934  001A88  D01F               	goto	l5727
  8935  001A8A  D01B               	goto	l5721
  8936                           
  8937                           ;FastBuggy17_Main_Code_TUNING.c: 416: return(1);
  8938  001A8C  D022               	goto	l852
  8939                           
  8940                           ;FastBuggy17_Main_Code_TUNING.c: 417: }
  8941  001A8E  D01F               	goto	l5731
  8942  001A90  D01B               	goto	l5727
  8943                           
  8944                           ;FastBuggy17_Main_Code_TUNING.c: 418: else {
  8945                           ;FastBuggy17_Main_Code_TUNING.c: 419: return(0);
  8946  001A92  D01F               	goto	l852
  8947                           
  8948                           ;FastBuggy17_Main_Code_TUNING.c: 420: }
  8949                           ;FastBuggy17_Main_Code_TUNING.c: 421: }
  8950  001A94  D01C               	goto	l5731
  8951  001A96                     l850:
  8952                           
  8953                           ;FastBuggy17_Main_Code_TUNING.c: 422: else if(PORTBbits.RB1 == 0) {
  8954  001A96  B281               	btfsc	3969,1,c	;volatile
  8955  001A98  D003               	goto	l855
  8956  001A9A  D016               	goto	l5727
  8957                           
  8958                           ;FastBuggy17_Main_Code_TUNING.c: 423: return(0);
  8959  001A9C  D01A               	goto	l852
  8960                           
  8961                           ;FastBuggy17_Main_Code_TUNING.c: 424: }
  8962  001A9E  D017               	goto	l5731
  8963  001AA0                     l855:
  8964                           
  8965                           ;FastBuggy17_Main_Code_TUNING.c: 425: else if(PORTBbits.RB1 == 1) {
  8966  001AA0  A281               	btfss	3969,1,c	;volatile
  8967  001AA2  D015               	goto	l5731
  8968                           
  8969                           ;FastBuggy17_Main_Code_TUNING.c: 426: ResetMillis2();
  8970  001AA4  EC37  F012         	call	_ResetMillis2	;wreg free
  8971                           
  8972                           ;FastBuggy17_Main_Code_TUNING.c: 427: while(ReadMillis2() < 10);
  8973  001AA8  D000               	goto	l5719
  8974  001AAA                     l5719:
  8975  001AAA  EC3C  F012         	call	_ReadMillis2	;wreg free
  8976  001AAE  0100               	movlb	0	; () banked
  8977  001AB0  51B8               	movf	(?_ReadMillis2+1)& (0+255),w,b
  8978  001AB2  E105               	bnz	u4710
  8979  001AB4  0E0A               	movlw	10
  8980  001AB6  0100               	movlb	0	; () banked
  8981  001AB8  5DB7               	subwf	?_ReadMillis2& (0+255),w,b
  8982  001ABA  A0D8               	btfss	status,0,c
  8983  001ABC  D7F6               	goto	l5719
  8984  001ABE                     u4710:
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;FastBuggy17_Main_Code_TUNING.c: 428: if(PORTBbits.RB1 == 1) {
  8988  001ABE  A281               	btfss	3969,1,c	;volatile
  8989  001AC0  D003               	goto	l5727
  8990  001AC2                     l5721:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;FastBuggy17_Main_Code_TUNING.c: 429: return(1);
  8994  001AC2  0E01               	movlw	1
  8995                           
  8996                           ; BSR set to: 0
  8997  001AC4  D006               	goto	l852
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;FastBuggy17_Main_Code_TUNING.c: 430: }
  9001  001AC6  D003               	goto	l5731
  9002  001AC8                     l5727:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;FastBuggy17_Main_Code_TUNING.c: 431: else {
  9006                           ;FastBuggy17_Main_Code_TUNING.c: 432: return(0);
  9007  001AC8  0E00               	movlw	0
  9008                           
  9009                           ; BSR set to: 0
  9010  001ACA  D003               	goto	l852
  9011                           
  9012                           ; BSR set to: 0
  9013                           
  9014                           ; BSR set to: 0
  9015                           
  9016                           ; BSR set to: 0
  9017  001ACC  D000               	goto	l5731
  9018  001ACE                     l5731:
  9019                           
  9020                           ;FastBuggy17_Main_Code_TUNING.c: 433: }
  9021                           ;FastBuggy17_Main_Code_TUNING.c: 434: }
  9022                           ;FastBuggy17_Main_Code_TUNING.c: 436: return(0);
  9023  001ACE  0E00               	movlw	0
  9024  001AD0  D000               	goto	l852
  9025  001AD2                     l852:
  9026  001AD2  0012               	return		;funcret
  9027  001AD4                     __end_of_PB1pressed:
  9028                           	opt stack 0
  9029                           prodh	equ	0xFF4
  9030                           prodl	equ	0xFF3
  9031                           intcon	equ	0xFF2
  9032                           postinc0	equ	0xFEE
  9033                           wreg	equ	0xFE8
  9034                           postinc1	equ	0xFE6
  9035                           fsr1h	equ	0xFE2
  9036                           fsr1l	equ	0xFE1
  9037                           indf2	equ	0xFDF
  9038                           postinc2	equ	0xFDE
  9039                           postdec2	equ	0xFDD
  9040                           fsr2h	equ	0xFDA
  9041                           fsr2l	equ	0xFD9
  9042                           status	equ	0xFD8
  9043                           
  9044 ;; *************** function _ResetMillis2 *****************
  9045 ;; Defined at:
  9046 ;;		line 45 in file "MillisecondTimer.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;		None
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;		None               void
  9053 ;; Registers used:
  9054 ;;		wreg, status,2
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;Total ram usage:        0 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    7
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_PB1pressed
  9071 ;;		_PB2pressed
  9072 ;;		_main
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text64
  9077  00246E                     __ptext64:
  9078                           	opt stack 0
  9079  00246E                     _ResetMillis2:
  9080                           	opt stack 23
  9081                           
  9082                           ;MillisecondTimer.c: 47: millisecond_COUNT2 = 0;
  9083                           
  9084                           ;incstack = 0
  9085  00246E  0E00               	movlw	0
  9086  002470  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  9087  002472  0E00               	movlw	0
  9088  002474  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  9089  002476  0012               	return		;funcret
  9090  002478                     __end_of_ResetMillis2:
  9091                           	opt stack 0
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           postinc0	equ	0xFEE
  9096                           wreg	equ	0xFE8
  9097                           postinc1	equ	0xFE6
  9098                           fsr1h	equ	0xFE2
  9099                           fsr1l	equ	0xFE1
  9100                           indf2	equ	0xFDF
  9101                           postinc2	equ	0xFDE
  9102                           postdec2	equ	0xFDD
  9103                           fsr2h	equ	0xFDA
  9104                           fsr2l	equ	0xFD9
  9105                           status	equ	0xFD8
  9106                           
  9107 ;; *************** function _ReadMillis2 *****************
  9108 ;; Defined at:
  9109 ;;		line 19 in file "MillisecondTimer.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  2   16[BANK0 ] unsigned int 
  9116 ;; Registers used:
  9117 ;;		None
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    7
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_PB1pressed
  9134 ;;		_PB2pressed
  9135 ;;		_main
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text65
  9140  002478                     __ptext65:
  9141                           	opt stack 0
  9142  002478                     _ReadMillis2:
  9143                           	opt stack 23
  9144                           
  9145                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  9146                           
  9147                           ;incstack = 0
  9148  002478  C011  F0B7         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  9149  00247C  C012  F0B8         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  9150  002480  0012               	return		;funcret
  9151  002482                     __end_of_ReadMillis2:
  9152                           	opt stack 0
  9153                           prodh	equ	0xFF4
  9154                           prodl	equ	0xFF3
  9155                           intcon	equ	0xFF2
  9156                           postinc0	equ	0xFEE
  9157                           wreg	equ	0xFE8
  9158                           postinc1	equ	0xFE6
  9159                           fsr1h	equ	0xFE2
  9160                           fsr1l	equ	0xFE1
  9161                           indf2	equ	0xFDF
  9162                           postinc2	equ	0xFDE
  9163                           postdec2	equ	0xFDD
  9164                           fsr2h	equ	0xFDA
  9165                           fsr2l	equ	0xFD9
  9166                           status	equ	0xFD8
  9167                           
  9168 ;; *************** function _GetCommand *****************
  9169 ;; Defined at:
  9170 ;;		line 407 in file "Wireless.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;		None
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      unsigned char 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;Total ram usage:        0 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    8
  9191 ;; This function calls:
  9192 ;;		_Read1USART
  9193 ;; This function is called by:
  9194 ;;		_PB1pressed
  9195 ;;		_PB2pressed
  9196 ;;		_main
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text66
  9201  00248A                     __ptext66:
  9202                           	opt stack 0
  9203  00248A                     _GetCommand:
  9204                           	opt stack 21
  9205                           
  9206                           ;Wireless.c: 409: return(Read1USART());
  9207                           
  9208                           ;incstack = 0
  9209  00248A  EC72  F010         	call	_Read1USART	;wreg free
  9210  00248E  D000               	goto	l461
  9211  002490                     l461:
  9212  002490  0012               	return		;funcret
  9213  002492                     __end_of_GetCommand:
  9214                           	opt stack 0
  9215                           prodh	equ	0xFF4
  9216                           prodl	equ	0xFF3
  9217                           intcon	equ	0xFF2
  9218                           postinc0	equ	0xFEE
  9219                           wreg	equ	0xFE8
  9220                           postinc1	equ	0xFE6
  9221                           fsr1h	equ	0xFE2
  9222                           fsr1l	equ	0xFE1
  9223                           indf2	equ	0xFDF
  9224                           postinc2	equ	0xFDE
  9225                           postdec2	equ	0xFDD
  9226                           fsr2h	equ	0xFDA
  9227                           fsr2l	equ	0xFD9
  9228                           status	equ	0xFD8
  9229                           
  9230 ;; *************** function _Read1USART *****************
  9231 ;; Defined at:
  9232 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  data            1   16[BANK0 ] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      unsigned char 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;Total ram usage:        1 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    7
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_GetCommand
  9257 ;;		_SetPIDValues
  9258 ;;		_WirelessRx_ISR
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text67
  9263  0020E4                     __ptext67:
  9264                           	opt stack 0
  9265  0020E4                     _Read1USART:
  9266                           	opt stack 22
  9267                           
  9268                           ;incstack = 0
  9269  0020E4  0EF2               	movlw	242
  9270  0020E6  161B               	andwf	_USART1_Status,f,c
  9271  0020E8  ACAB               	btfss	4011,6,c	;volatile
  9272  0020EA  D005               	goto	l1230
  9273  0020EC  901B               	bcf	_USART1_Status,0,c
  9274  0020EE  A0AB               	btfss	4011,0,c	;volatile
  9275  0020F0  D002               	goto	l1230
  9276  0020F2  801B               	bsf	_USART1_Status,0,c
  9277  0020F4  D000               	goto	l1230
  9278  0020F6                     l1230:
  9279  0020F6  B4AB               	btfsc	4011,2,c	;volatile
  9280  0020F8  841B               	bsf	_USART1_Status,2,c
  9281  0020FA  B2AB               	btfsc	4011,1,c	;volatile
  9282  0020FC  861B               	bsf	_USART1_Status,3,c
  9283  0020FE  CFAE F0B7          	movff	4014,Read1USART@data	;volatile
  9284  002102  0100               	movlb	0	; () banked
  9285  002104  51B7               	movf	Read1USART@data& (0+255),w,b
  9286  002106  D000               	goto	l1234
  9287  002108                     l1234:
  9288                           
  9289                           ; BSR set to: 0
  9290  002108  0012               	return		;funcret
  9291  00210A                     __end_of_Read1USART:
  9292                           	opt stack 0
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           intcon	equ	0xFF2
  9296                           postinc0	equ	0xFEE
  9297                           wreg	equ	0xFE8
  9298                           postinc1	equ	0xFE6
  9299                           fsr1h	equ	0xFE2
  9300                           fsr1l	equ	0xFE1
  9301                           indf2	equ	0xFDF
  9302                           postinc2	equ	0xFDE
  9303                           postdec2	equ	0xFDD
  9304                           fsr2h	equ	0xFDA
  9305                           fsr2l	equ	0xFD9
  9306                           status	equ	0xFD8
  9307                           
  9308 ;; *************** function _CommandAvailable *****************
  9309 ;; Defined at:
  9310 ;;		line 403 in file "Wireless.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      unsigned char 
  9317 ;; Registers used:
  9318 ;;		wreg
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    7
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		_PB1pressed
  9335 ;;		_PB2pressed
  9336 ;;		_main
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text68
  9341  002416                     __ptext68:
  9342                           	opt stack 0
  9343  002416                     _CommandAvailable:
  9344                           	opt stack 22
  9345                           
  9346                           ;Wireless.c: 404: return((PIR1bits.RCIF));
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;incstack = 0
  9350  002416  AA9E               	btfss	3998,5,c	;volatile
  9351  002418  D002               	goto	u4480
  9352  00241A  0E01               	movlw	1
  9353  00241C  D002               	goto	l458
  9354  00241E                     u4480:
  9355  00241E  0E00               	movlw	0
  9356  002420  D000               	goto	l458
  9357  002422                     l458:
  9358  002422  0012               	return		;funcret
  9359  002424                     __end_of_CommandAvailable:
  9360                           	opt stack 0
  9361                           prodh	equ	0xFF4
  9362                           prodl	equ	0xFF3
  9363                           intcon	equ	0xFF2
  9364                           postinc0	equ	0xFEE
  9365                           wreg	equ	0xFE8
  9366                           postinc1	equ	0xFE6
  9367                           fsr1h	equ	0xFE2
  9368                           fsr1l	equ	0xFE1
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           fsr2h	equ	0xFDA
  9373                           fsr2l	equ	0xFD9
  9374                           status	equ	0xFD8
  9375                           
  9376 ;; *************** function _GetSensorReadings *****************
  9377 ;; Defined at:
  9378 ;;		line 296 in file "FastBuggy17_Main_Code_TUNING.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;		None
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;		None
  9383 ;; Return value:  Size  Location     Type
  9384 ;;		None               void
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9396 ;;Total ram usage:        0 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    9
  9399 ;; This function calls:
  9400 ;;		_ConvertADC
  9401 ;;		_SetADCChannel
  9402 ;; This function is called by:
  9403 ;;		_CalibrateOffsets
  9404 ;;		_CalibrateOnLine
  9405 ;;		_CalibrateThreshold
  9406 ;;		_main
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text69
  9411  00228C                     __ptext69:
  9412                           	opt stack 0
  9413  00228C                     _GetSensorReadings:
  9414                           	opt stack 18
  9415                           
  9416                           ;FastBuggy17_Main_Code_TUNING.c: 298: sensor_acq_index = 0;
  9417                           
  9418                           ;incstack = 0
  9419  00228C  0E00               	movlw	0
  9420  00228E  6E23               	movwf	_sensor_acq_index,c	;volatile
  9421                           
  9422                           ;FastBuggy17_Main_Code_TUNING.c: 299: sensor_acq_done = 0;
  9423  002290  0E00               	movlw	0
  9424  002292  6E22               	movwf	_sensor_acq_done,c	;volatile
  9425                           
  9426                           ;FastBuggy17_Main_Code_TUNING.c: 300: SetADCChannel(sensor_acq_index);
  9427  002294  5023               	movf	_sensor_acq_index,w,c	;volatile
  9428  002296  EC5F  F006         	call	_SetADCChannel
  9429                           
  9430                           ;FastBuggy17_Main_Code_TUNING.c: 301: ConvertADC();
  9431  00229A  EC5A  F012         	call	_ConvertADC	;wreg free
  9432                           
  9433                           ;FastBuggy17_Main_Code_TUNING.c: 302: PIE1bits.ADIE = 1;
  9434  00229E  8C9D               	bsf	3997,6,c	;volatile
  9435  0022A0  0012               	return		;funcret
  9436  0022A2                     __end_of_GetSensorReadings:
  9437                           	opt stack 0
  9438                           prodh	equ	0xFF4
  9439                           prodl	equ	0xFF3
  9440                           intcon	equ	0xFF2
  9441                           postinc0	equ	0xFEE
  9442                           wreg	equ	0xFE8
  9443                           postinc1	equ	0xFE6
  9444                           fsr1h	equ	0xFE2
  9445                           fsr1l	equ	0xFE1
  9446                           indf2	equ	0xFDF
  9447                           postinc2	equ	0xFDE
  9448                           postdec2	equ	0xFDD
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8
  9452                           
  9453 ;; *************** function _SetADCChannel *****************
  9454 ;; Defined at:
  9455 ;;		line 238 in file "FastBuggy17_Main_Code_TUNING.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;  channel         1    wreg     unsigned char 
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;  channel         1   18[BANK0 ] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;		None               void
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;Total ram usage:        1 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    8
  9476 ;; This function calls:
  9477 ;;		_SetChanADC
  9478 ;; This function is called by:
  9479 ;;		_GetSensorReadings
  9480 ;;		_CalibrateThreshold
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text70
  9485  000CBE                     __ptext70:
  9486                           	opt stack 0
  9487  000CBE                     _SetADCChannel:
  9488                           	opt stack 19
  9489                           
  9490                           ;incstack = 0
  9491                           ;SetADCChannel@channel stored from wreg
  9492  000CBE  0100               	movlb	0	; () banked
  9493  000CC0  6FB9               	movwf	SetADCChannel@channel& (0+255),b
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;FastBuggy17_Main_Code_TUNING.c: 240: switch (channel) {
  9497  000CC2  D040               	goto	l5559
  9498  000CC4                     l5525:
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;FastBuggy17_Main_Code_TUNING.c: 242: SetChanADC(0b10000111);
  9502  000CC4  0E87               	movlw	135
  9503  000CC6  EC00  F011         	call	_SetChanADC
  9504                           
  9505                           ;FastBuggy17_Main_Code_TUNING.c: 243: break;
  9506  000CCA  D06F               	goto	l800
  9507  000CCC                     l5527:
  9508                           
  9509                           ;FastBuggy17_Main_Code_TUNING.c: 245: SetChanADC(0b10001111);
  9510  000CCC  0E8F               	movlw	143
  9511  000CCE  EC00  F011         	call	_SetChanADC
  9512                           
  9513                           ;FastBuggy17_Main_Code_TUNING.c: 246: break;
  9514  000CD2  D06B               	goto	l800
  9515  000CD4                     l5529:
  9516                           
  9517                           ;FastBuggy17_Main_Code_TUNING.c: 248: SetChanADC(0b10010111);
  9518  000CD4  0E97               	movlw	151
  9519  000CD6  EC00  F011         	call	_SetChanADC
  9520                           
  9521                           ;FastBuggy17_Main_Code_TUNING.c: 249: break;
  9522  000CDA  D067               	goto	l800
  9523  000CDC                     l5531:
  9524                           
  9525                           ;FastBuggy17_Main_Code_TUNING.c: 251: SetChanADC(0b10011111);
  9526  000CDC  0E9F               	movlw	159
  9527  000CDE  EC00  F011         	call	_SetChanADC
  9528                           
  9529                           ;FastBuggy17_Main_Code_TUNING.c: 252: break;
  9530  000CE2  D063               	goto	l800
  9531  000CE4                     l5533:
  9532                           
  9533                           ;FastBuggy17_Main_Code_TUNING.c: 254: SetChanADC(0b10100111);
  9534  000CE4  0EA7               	movlw	167
  9535  000CE6  EC00  F011         	call	_SetChanADC
  9536                           
  9537                           ;FastBuggy17_Main_Code_TUNING.c: 255: break;
  9538  000CEA  D05F               	goto	l800
  9539  000CEC                     l5535:
  9540                           
  9541                           ;FastBuggy17_Main_Code_TUNING.c: 257: SetChanADC(0b10101111);
  9542  000CEC  0EAF               	movlw	175
  9543  000CEE  EC00  F011         	call	_SetChanADC
  9544                           
  9545                           ;FastBuggy17_Main_Code_TUNING.c: 258: break;
  9546  000CF2  D05B               	goto	l800
  9547  000CF4                     l5537:
  9548                           
  9549                           ;FastBuggy17_Main_Code_TUNING.c: 260: SetChanADC(0b10110111);
  9550  000CF4  0EB7               	movlw	183
  9551  000CF6  EC00  F011         	call	_SetChanADC
  9552                           
  9553                           ;FastBuggy17_Main_Code_TUNING.c: 261: break;
  9554  000CFA  D057               	goto	l800
  9555  000CFC                     l5539:
  9556                           
  9557                           ;FastBuggy17_Main_Code_TUNING.c: 263: SetChanADC(0b10111111);
  9558  000CFC  0EBF               	movlw	191
  9559  000CFE  EC00  F011         	call	_SetChanADC
  9560                           
  9561                           ;FastBuggy17_Main_Code_TUNING.c: 264: break;
  9562  000D02  D053               	goto	l800
  9563  000D04                     l5541:
  9564                           
  9565                           ;FastBuggy17_Main_Code_TUNING.c: 266: SetChanADC(0b11000111);
  9566  000D04  0EC7               	movlw	199
  9567  000D06  EC00  F011         	call	_SetChanADC
  9568                           
  9569                           ;FastBuggy17_Main_Code_TUNING.c: 267: break;
  9570  000D0A  D04F               	goto	l800
  9571  000D0C                     l5543:
  9572                           
  9573                           ;FastBuggy17_Main_Code_TUNING.c: 269: SetChanADC(0b11001111);
  9574  000D0C  0ECF               	movlw	207
  9575  000D0E  EC00  F011         	call	_SetChanADC
  9576                           
  9577                           ;FastBuggy17_Main_Code_TUNING.c: 270: break;
  9578  000D12  D04B               	goto	l800
  9579  000D14                     l5545:
  9580                           
  9581                           ;FastBuggy17_Main_Code_TUNING.c: 272: SetChanADC(0b11010111);
  9582  000D14  0ED7               	movlw	215
  9583  000D16  EC00  F011         	call	_SetChanADC
  9584                           
  9585                           ;FastBuggy17_Main_Code_TUNING.c: 273: break;
  9586  000D1A  D047               	goto	l800
  9587  000D1C                     l5547:
  9588                           
  9589                           ;FastBuggy17_Main_Code_TUNING.c: 275: SetChanADC(0b11011111);
  9590  000D1C  0EDF               	movlw	223
  9591  000D1E  EC00  F011         	call	_SetChanADC
  9592                           
  9593                           ;FastBuggy17_Main_Code_TUNING.c: 276: break;
  9594  000D22  D043               	goto	l800
  9595  000D24                     l5549:
  9596                           
  9597                           ;FastBuggy17_Main_Code_TUNING.c: 278: SetChanADC(0b11100111);
  9598  000D24  0EE7               	movlw	231
  9599  000D26  EC00  F011         	call	_SetChanADC
  9600                           
  9601                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
  9602  000D2A  D03F               	goto	l800
  9603  000D2C                     l5551:
  9604                           
  9605                           ;FastBuggy17_Main_Code_TUNING.c: 281: SetChanADC(0b11101111);
  9606  000D2C  0EEF               	movlw	239
  9607  000D2E  EC00  F011         	call	_SetChanADC
  9608                           
  9609                           ;FastBuggy17_Main_Code_TUNING.c: 282: break;
  9610  000D32  D03B               	goto	l800
  9611  000D34                     l5553:
  9612                           
  9613                           ;FastBuggy17_Main_Code_TUNING.c: 284: SetChanADC(0b11110111);
  9614  000D34  0EF7               	movlw	247
  9615  000D36  EC00  F011         	call	_SetChanADC
  9616                           
  9617                           ;FastBuggy17_Main_Code_TUNING.c: 285: break;
  9618  000D3A  D037               	goto	l800
  9619  000D3C                     l5555:
  9620                           
  9621                           ;FastBuggy17_Main_Code_TUNING.c: 287: SetChanADC(0b11111111);
  9622  000D3C  0EFF               	movlw	255
  9623  000D3E  EC00  F011         	call	_SetChanADC
  9624                           
  9625                           ;FastBuggy17_Main_Code_TUNING.c: 291: }
  9626                           
  9627                           ;FastBuggy17_Main_Code_TUNING.c: 290: break;
  9628                           
  9629                           ;FastBuggy17_Main_Code_TUNING.c: 289: default:
  9630                           
  9631                           ;FastBuggy17_Main_Code_TUNING.c: 288: break;
  9632  000D42  D033               	goto	l800
  9633  000D44                     l5559:
  9634  000D44  0100               	movlb	0	; () banked
  9635  000D46  51B9               	movf	SetADCChannel@channel& (0+255),w,b
  9636                           
  9637                           ; Switch size 1, requested type "space"
  9638                           ; Number of cases is 16, Range of values is 0 to 15
  9639                           ; switch strategies available:
  9640                           ; Name         Instructions Cycles
  9641                           ; simple_byte           49    25 (average)
  9642                           ;	Chosen strategy is simple_byte
  9643  000D48  0A00               	xorlw	0	; case 0
  9644  000D4A  B4D8               	btfsc	status,2,c
  9645  000D4C  D7BB               	goto	l5525
  9646  000D4E  0A01               	xorlw	1	; case 1
  9647  000D50  B4D8               	btfsc	status,2,c
  9648  000D52  D7BC               	goto	l5527
  9649  000D54  0A03               	xorlw	3	; case 2
  9650  000D56  B4D8               	btfsc	status,2,c
  9651  000D58  D7BD               	goto	l5529
  9652  000D5A  0A01               	xorlw	1	; case 3
  9653  000D5C  B4D8               	btfsc	status,2,c
  9654  000D5E  D7BE               	goto	l5531
  9655  000D60  0A07               	xorlw	7	; case 4
  9656  000D62  B4D8               	btfsc	status,2,c
  9657  000D64  D7BF               	goto	l5533
  9658  000D66  0A01               	xorlw	1	; case 5
  9659  000D68  B4D8               	btfsc	status,2,c
  9660  000D6A  D7C0               	goto	l5535
  9661  000D6C  0A03               	xorlw	3	; case 6
  9662  000D6E  B4D8               	btfsc	status,2,c
  9663  000D70  D7C1               	goto	l5537
  9664  000D72  0A01               	xorlw	1	; case 7
  9665  000D74  B4D8               	btfsc	status,2,c
  9666  000D76  D7C2               	goto	l5539
  9667  000D78  0A0F               	xorlw	15	; case 8
  9668  000D7A  B4D8               	btfsc	status,2,c
  9669  000D7C  D7C3               	goto	l5541
  9670  000D7E  0A01               	xorlw	1	; case 9
  9671  000D80  B4D8               	btfsc	status,2,c
  9672  000D82  D7C4               	goto	l5543
  9673  000D84  0A03               	xorlw	3	; case 10
  9674  000D86  B4D8               	btfsc	status,2,c
  9675  000D88  D7C5               	goto	l5545
  9676  000D8A  0A01               	xorlw	1	; case 11
  9677  000D8C  B4D8               	btfsc	status,2,c
  9678  000D8E  D7C6               	goto	l5547
  9679  000D90  0A07               	xorlw	7	; case 12
  9680  000D92  B4D8               	btfsc	status,2,c
  9681  000D94  D7C7               	goto	l5549
  9682  000D96  0A01               	xorlw	1	; case 13
  9683  000D98  B4D8               	btfsc	status,2,c
  9684  000D9A  D7C8               	goto	l5551
  9685  000D9C  0A03               	xorlw	3	; case 14
  9686  000D9E  B4D8               	btfsc	status,2,c
  9687  000DA0  D7C9               	goto	l5553
  9688  000DA2  0A01               	xorlw	1	; case 15
  9689  000DA4  B4D8               	btfsc	status,2,c
  9690  000DA6  D7CA               	goto	l5555
  9691  000DA8  D000               	goto	l800
  9692  000DAA                     l800:
  9693  000DAA  0012               	return		;funcret
  9694  000DAC                     __end_of_SetADCChannel:
  9695                           	opt stack 0
  9696                           prodh	equ	0xFF4
  9697                           prodl	equ	0xFF3
  9698                           intcon	equ	0xFF2
  9699                           postinc0	equ	0xFEE
  9700                           wreg	equ	0xFE8
  9701                           postinc1	equ	0xFE6
  9702                           fsr1h	equ	0xFE2
  9703                           fsr1l	equ	0xFE1
  9704                           indf2	equ	0xFDF
  9705                           postinc2	equ	0xFDE
  9706                           postdec2	equ	0xFDD
  9707                           fsr2h	equ	0xFDA
  9708                           fsr2l	equ	0xFD9
  9709                           status	equ	0xFD8
  9710                           
  9711 ;; *************** function _SetChanADC *****************
  9712 ;; Defined at:
  9713 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  channel         1    wreg     unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  channel         1   17[BANK0 ] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;		None               void
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;Total ram usage:        2 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    7
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		_SetADCChannel
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text71
  9742  002200                     __ptext71:
  9743                           	opt stack 0
  9744  002200                     _SetChanADC:
  9745                           	opt stack 19
  9746                           
  9747                           ;incstack = 0
  9748                           ;SetChanADC@channel stored from wreg
  9749  002200  0100               	movlb	0	; () banked
  9750  002202  6FB8               	movwf	SetChanADC@channel& (0+255),b
  9751                           
  9752                           ; BSR set to: 0
  9753  002204  CFC2 F0B7          	movff	4034,??_SetChanADC	;volatile
  9754  002208  0EC3               	movlw	195
  9755  00220A  0100               	movlb	0	; () banked
  9756  00220C  17B7               	andwf	??_SetChanADC& (0+255),f,b
  9757  00220E  0100               	movlb	0	; () banked
  9758  002210  90D8               	bcf	status,0,c
  9759  002212  31B8               	rrcf	SetChanADC@channel& (0+255),w,b
  9760  002214  0B3C               	andlw	60
  9761  002216  0100               	movlb	0	; () banked
  9762  002218  11B7               	iorwf	??_SetChanADC& (0+255),w,b
  9763  00221A  6EC2               	movwf	4034,c	;volatile
  9764                           
  9765                           ; BSR set to: 0
  9766  00221C  0012               	return		;funcret
  9767  00221E                     __end_of_SetChanADC:
  9768                           	opt stack 0
  9769                           prodh	equ	0xFF4
  9770                           prodl	equ	0xFF3
  9771                           intcon	equ	0xFF2
  9772                           postinc0	equ	0xFEE
  9773                           wreg	equ	0xFE8
  9774                           postinc1	equ	0xFE6
  9775                           fsr1h	equ	0xFE2
  9776                           fsr1l	equ	0xFE1
  9777                           indf2	equ	0xFDF
  9778                           postinc2	equ	0xFDE
  9779                           postdec2	equ	0xFDD
  9780                           fsr2h	equ	0xFDA
  9781                           fsr2l	equ	0xFD9
  9782                           status	equ	0xFD8
  9783                           
  9784 ;; *************** function _ConvertADC *****************
  9785 ;; Defined at:
  9786 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;		None
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;		None
  9791 ;; Return value:  Size  Location     Type
  9792 ;;		None               void
  9793 ;; Registers used:
  9794 ;;		None
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;Total ram usage:        0 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; Hardware stack levels required when called:    7
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_GetSensorReadings
  9811 ;;		_CalibrateThreshold
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text72
  9816  0024B4                     __ptext72:
  9817                           	opt stack 0
  9818  0024B4                     _ConvertADC:
  9819                           	opt stack 19
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;incstack = 0
  9823  0024B4  82C2               	bsf	4034,1,c	;volatile
  9824  0024B6  0012               	return		;funcret
  9825  0024B8                     __end_of_ConvertADC:
  9826                           	opt stack 0
  9827                           prodh	equ	0xFF4
  9828                           prodl	equ	0xFF3
  9829                           intcon	equ	0xFF2
  9830                           postinc0	equ	0xFEE
  9831                           wreg	equ	0xFE8
  9832                           postinc1	equ	0xFE6
  9833                           fsr1h	equ	0xFE2
  9834                           fsr1l	equ	0xFE1
  9835                           indf2	equ	0xFDF
  9836                           postinc2	equ	0xFDE
  9837                           postdec2	equ	0xFDD
  9838                           fsr2h	equ	0xFDA
  9839                           fsr2l	equ	0xFD9
  9840                           status	equ	0xFD8
  9841                           
  9842 ;; *************** function _BusySensorAcq *****************
  9843 ;; Defined at:
  9844 ;;		line 307 in file "FastBuggy17_Main_Code_TUNING.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      unsigned char 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9862 ;;Total ram usage:        0 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    7
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_CalibrateOffsets
  9869 ;;		_CalibrateOnLine
  9870 ;;		_CalibrateThreshold
  9871 ;;		_main
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text73
  9876  0023AC                     __ptext73:
  9877                           	opt stack 0
  9878  0023AC                     _BusySensorAcq:
  9879                           	opt stack 20
  9880                           
  9881                           ;FastBuggy17_Main_Code_TUNING.c: 309: return (!sensor_acq_done);
  9882                           
  9883                           ;incstack = 0
  9884  0023AC  5022               	movf	_sensor_acq_done,w,c	;volatile
  9885  0023AE  A4D8               	btfss	status,2,c
  9886  0023B0  D002               	goto	u4520
  9887  0023B2  0E01               	movlw	1
  9888  0023B4  D002               	goto	l806
  9889  0023B6                     u4520:
  9890  0023B6  0E00               	movlw	0
  9891  0023B8  D000               	goto	l806
  9892  0023BA                     l806:
  9893  0023BA  0012               	return		;funcret
  9894  0023BC                     __end_of_BusySensorAcq:
  9895                           	opt stack 0
  9896                           prodh	equ	0xFF4
  9897                           prodl	equ	0xFF3
  9898                           intcon	equ	0xFF2
  9899                           postinc0	equ	0xFEE
  9900                           wreg	equ	0xFE8
  9901                           postinc1	equ	0xFE6
  9902                           fsr1h	equ	0xFE2
  9903                           fsr1l	equ	0xFE1
  9904                           indf2	equ	0xFDF
  9905                           postinc2	equ	0xFDE
  9906                           postdec2	equ	0xFDD
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911 ;; *************** function _GetDistance *****************
  9912 ;; Defined at:
  9913 ;;		line 48 in file "Ultrasound.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;		None               void
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    8
  9934 ;; This function calls:
  9935 ;;		_Delay1TCYx
  9936 ;; This function is called by:
  9937 ;;		_main
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text74
  9942  0022F8                     __ptext74:
  9943                           	opt stack 0
  9944  0022F8                     _GetDistance:
  9945                           	opt stack 22
  9946                           
  9947                           ;Ultrasound.c: 50: LATEbits.LATE5 = 1;
  9948                           
  9949                           ;incstack = 0
  9950  0022F8  8A8D               	bsf	3981,5,c	;volatile
  9951                           
  9952                           ;Ultrasound.c: 51: Delay1TCYx(25);
  9953  0022FA  0E19               	movlw	25
  9954  0022FC  ECDE  F011         	call	_Delay1TCYx
  9955                           
  9956                           ;Ultrasound.c: 52: LATEbits.LATE5 = 0;
  9957  002300  9A8D               	bcf	3981,5,c	;volatile
  9958                           
  9959                           ;Ultrasound.c: 53: INTCON2bits.INTEDG3 = 1;
  9960  002302  86F1               	bsf	intcon2,3,c	;volatile
  9961                           
  9962                           ;Ultrasound.c: 54: INTCON3bits.INT3IE = 1;
  9963  002304  8AF0               	bsf	intcon3,5,c	;volatile
  9964                           
  9965                           ;Ultrasound.c: 56: echo_acq_done = 0;
  9966  002306  0E00               	movlw	0
  9967  002308  6E1C               	movwf	_echo_acq_done,c
  9968  00230A  0012               	return		;funcret
  9969  00230C                     __end_of_GetDistance:
  9970                           	opt stack 0
  9971                           prodh	equ	0xFF4
  9972                           prodl	equ	0xFF3
  9973                           intcon	equ	0xFF2
  9974                           intcon2	equ	0xFF1
  9975                           intcon3	equ	0xFF0
  9976                           postinc0	equ	0xFEE
  9977                           wreg	equ	0xFE8
  9978                           postinc1	equ	0xFE6
  9979                           fsr1h	equ	0xFE2
  9980                           fsr1l	equ	0xFE1
  9981                           indf2	equ	0xFDF
  9982                           postinc2	equ	0xFDE
  9983                           postdec2	equ	0xFDD
  9984                           fsr2h	equ	0xFDA
  9985                           fsr2l	equ	0xFD9
  9986                           status	equ	0xFD8
  9987                           
  9988 ;; *************** function _Delay1TCYx *****************
  9989 ;; Defined at:
  9990 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  unit            1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  unit            1   16[BANK0 ] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;		None               void
  9997 ;; Registers used:
  9998 ;;		wreg
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;Total ram usage:        1 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    7
 10011 ;; This function calls:
 10012 ;;		Nothing
 10013 ;; This function is called by:
 10014 ;;		_GetDistance
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text75
 10019  0023BC                     __ptext75:
 10020                           	opt stack 0
 10021  0023BC                     _Delay1TCYx:
 10022                           	opt stack 22
 10023                           
 10024                           ;incstack = 0
 10025                           ;Delay1TCYx@unit stored from wreg
 10026  0023BC  0100               	movlb	0	; () banked
 10027  0023BE  6FB7               	movwf	Delay1TCYx@unit& (0+255),b
 10028  0023C0                     l1478:
 10029                           
 10030                           ; BSR set to: 0
 10031  0023C0  F000               	nop	
 10032  0023C2  0100               	movlb	0	; () banked
 10033  0023C4  2FB7               	decfsz	Delay1TCYx@unit& (0+255),f,b
 10034  0023C6  D7FC               	goto	l1478
 10035  0023C8  D000               	goto	l1480
 10036  0023CA                     l1480:
 10037                           
 10038                           ; BSR set to: 0
 10039  0023CA  0012               	return		;funcret
 10040  0023CC                     __end_of_Delay1TCYx:
 10041                           	opt stack 0
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           intcon	equ	0xFF2
 10045                           intcon2	equ	0xFF1
 10046                           intcon3	equ	0xFF0
 10047                           postinc0	equ	0xFEE
 10048                           wreg	equ	0xFE8
 10049                           postinc1	equ	0xFE6
 10050                           fsr1h	equ	0xFE2
 10051                           fsr1l	equ	0xFE1
 10052                           indf2	equ	0xFDF
 10053                           postinc2	equ	0xFDE
 10054                           postdec2	equ	0xFDD
 10055                           fsr2h	equ	0xFDA
 10056                           fsr2l	equ	0xFD9
 10057                           status	equ	0xFD8
 10058                           
 10059 ;; *************** function _EnableSensorLEDS *****************
 10060 ;; Defined at:
 10061 ;;		line 387 in file "FastBuggy17_Main_Code_TUNING.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;		None
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;		None               void
 10068 ;; Registers used:
 10069 ;;		wreg, status,2
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;Total ram usage:        0 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:    7
 10082 ;; This function calls:
 10083 ;;		Nothing
 10084 ;; This function is called by:
 10085 ;;		_main
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text76
 10090  0024A6                     __ptext76:
 10091                           	opt stack 0
 10092  0024A6                     _EnableSensorLEDS:
 10093                           	opt stack 23
 10094                           
 10095                           ;FastBuggy17_Main_Code_TUNING.c: 389: LATE = 0x1F;
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;incstack = 0
 10099  0024A6  0E1F               	movlw	31
 10100  0024A8  6E8D               	movwf	3981,c	;volatile
 10101  0024AA  0012               	return		;funcret
 10102  0024AC                     __end_of_EnableSensorLEDS:
 10103                           	opt stack 0
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           intcon	equ	0xFF2
 10107                           intcon2	equ	0xFF1
 10108                           intcon3	equ	0xFF0
 10109                           postinc0	equ	0xFEE
 10110                           wreg	equ	0xFE8
 10111                           postinc1	equ	0xFE6
 10112                           fsr1h	equ	0xFE2
 10113                           fsr1l	equ	0xFE1
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           postdec2	equ	0xFDD
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8
 10120                           
 10121 ;; *************** function _EnableMotors *****************
 10122 ;; Defined at:
 10123 ;;		line 102 in file "Motors.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;		None               void
 10130 ;; Registers used:
 10131 ;;		None
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;Total ram usage:        0 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    7
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_main
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text77
 10152  0024B8                     __ptext77:
 10153                           	opt stack 0
 10154  0024B8                     _EnableMotors:
 10155                           	opt stack 23
 10156                           
 10157                           ;Motors.c: 104: LATDbits.LATD4 = 1;
 10158                           
 10159                           ;incstack = 0
 10160  0024B8  888C               	bsf	3980,4,c	;volatile
 10161  0024BA  0012               	return		;funcret
 10162  0024BC                     __end_of_EnableMotors:
 10163                           	opt stack 0
 10164                           prodh	equ	0xFF4
 10165                           prodl	equ	0xFF3
 10166                           intcon	equ	0xFF2
 10167                           intcon2	equ	0xFF1
 10168                           intcon3	equ	0xFF0
 10169                           postinc0	equ	0xFEE
 10170                           wreg	equ	0xFE8
 10171                           postinc1	equ	0xFE6
 10172                           fsr1h	equ	0xFE2
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           postinc2	equ	0xFDE
 10176                           postdec2	equ	0xFDD
 10177                           fsr2h	equ	0xFDA
 10178                           fsr2l	equ	0xFD9
 10179                           status	equ	0xFD8
 10180                           
 10181 ;; *************** function _DisableMotors *****************
 10182 ;; Defined at:
 10183 ;;		line 108 in file "Motors.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;		None
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;		None
 10188 ;; Return value:  Size  Location     Type
 10189 ;;		None               void
 10190 ;; Registers used:
 10191 ;;		None
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;Total ram usage:        0 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    7
 10204 ;; This function calls:
 10205 ;;		Nothing
 10206 ;; This function is called by:
 10207 ;;		_main
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text78
 10212  0024BC                     __ptext78:
 10213                           	opt stack 0
 10214  0024BC                     _DisableMotors:
 10215                           	opt stack 23
 10216                           
 10217                           ;Motors.c: 110: LATDbits.LATD4 = 0;
 10218                           
 10219                           ;incstack = 0
 10220  0024BC  988C               	bcf	3980,4,c	;volatile
 10221  0024BE  0012               	return		;funcret
 10222  0024C0                     __end_of_DisableMotors:
 10223                           	opt stack 0
 10224                           prodh	equ	0xFF4
 10225                           prodl	equ	0xFF3
 10226                           intcon	equ	0xFF2
 10227                           intcon2	equ	0xFF1
 10228                           intcon3	equ	0xFF0
 10229                           postinc0	equ	0xFEE
 10230                           wreg	equ	0xFE8
 10231                           postinc1	equ	0xFE6
 10232                           fsr1h	equ	0xFE2
 10233                           fsr1l	equ	0xFE1
 10234                           indf2	equ	0xFDF
 10235                           postinc2	equ	0xFDE
 10236                           postdec2	equ	0xFDD
 10237                           fsr2h	equ	0xFDA
 10238                           fsr2l	equ	0xFD9
 10239                           status	equ	0xFD8
 10240                           
 10241 ;; *************** function _ConfigureWireless *****************
 10242 ;; Defined at:
 10243 ;;		line 114 in file "Wireless.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;		None
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;		None               void
 10250 ;; Registers used:
 10251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;Total ram usage:        0 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    8
 10264 ;; This function calls:
 10265 ;;		_FlushRxBuf
 10266 ;;		_FlushTxBuf
 10267 ;;		_Open1USART
 10268 ;; This function is called by:
 10269 ;;		_main
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text79
 10274  00221E                     __ptext79:
 10275                           	opt stack 0
 10276  00221E                     _ConfigureWireless:
 10277                           	opt stack 22
 10278                           
 10279                           ;Wireless.c: 116: Open1USART(0b01111111
 10280                           ;Wireless.c: 117: & 0b10111111
 10281                           ;Wireless.c: 118: & 0b11111110
 10282                           ;Wireless.c: 119: & 0b11111101
 10283                           ;Wireless.c: 120: & 0b11111111
 10284                           ;Wireless.c: 121: & 0b11111111,
 10285                           ;Wireless.c: 122: 64);
 10286                           
 10287                           ;incstack = 0
 10288  00221E  0E00               	movlw	0
 10289  002220  0100               	movlb	0	; () banked
 10290  002222  6FB8               	movwf	(Open1USART@spbrg+1)& (0+255),b
 10291  002224  0E40               	movlw	64
 10292  002226  6FB7               	movwf	Open1USART@spbrg& (0+255),b
 10293  002228  0E3C               	movlw	60
 10294  00222A  ECF6  F009         	call	_Open1USART
 10295                           
 10296                           ;Wireless.c: 124: FlushTxBuf();
 10297  00222E  EC45  F00F         	call	_FlushTxBuf	;wreg free
 10298                           
 10299                           ;Wireless.c: 125: FlushRxBuf();
 10300  002232  EC60  F00F         	call	_FlushRxBuf	;wreg free
 10301                           
 10302                           ;Wireless.c: 127: Tx_complete = 1;
 10303  002236  0E01               	movlw	1
 10304  002238  6E1A               	movwf	_Tx_complete,c
 10305  00223A  0012               	return		;funcret
 10306  00223C                     __end_of_ConfigureWireless:
 10307                           	opt stack 0
 10308                           prodh	equ	0xFF4
 10309                           prodl	equ	0xFF3
 10310                           intcon	equ	0xFF2
 10311                           intcon2	equ	0xFF1
 10312                           intcon3	equ	0xFF0
 10313                           postinc0	equ	0xFEE
 10314                           wreg	equ	0xFE8
 10315                           postinc1	equ	0xFE6
 10316                           fsr1h	equ	0xFE2
 10317                           fsr1l	equ	0xFE1
 10318                           indf2	equ	0xFDF
 10319                           postinc2	equ	0xFDE
 10320                           postdec2	equ	0xFDD
 10321                           fsr2h	equ	0xFDA
 10322                           fsr2l	equ	0xFD9
 10323                           status	equ	0xFD8
 10324                           
 10325 ;; *************** function _Open1USART *****************
 10326 ;; Defined at:
 10327 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  config          1    wreg     unsigned char 
 10330 ;;  spbrg           2   16[BANK0 ] unsigned int 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  config          1   18[BANK0 ] unsigned char 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;		None               void
 10335 ;; Registers used:
 10336 ;;		wreg, status,2
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;Total ram usage:        3 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    7
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_ConfigureWireless
 10353 ;;		_ConfigureSerial
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text80
 10358  0013EC                     __ptext80:
 10359                           	opt stack 0
 10360  0013EC                     _Open1USART:
 10361                           	opt stack 22
 10362                           
 10363                           ;incstack = 0
 10364                           ;Open1USART@config stored from wreg
 10365  0013EC  0100               	movlb	0	; () banked
 10366  0013EE  6FB9               	movwf	Open1USART@config& (0+255),b
 10367                           
 10368                           ; BSR set to: 0
 10369  0013F0  0E00               	movlw	0
 10370  0013F2  6EAC               	movwf	4012,c	;volatile
 10371  0013F4  0E00               	movlw	0
 10372  0013F6  6EAB               	movwf	4011,c	;volatile
 10373                           
 10374                           ; BSR set to: 0
 10375  0013F8  0100               	movlb	0	; () banked
 10376  0013FA  A1B9               	btfss	Open1USART@config& (0+255),0,b
 10377  0013FC  D002               	goto	l5923
 10378                           
 10379                           ; BSR set to: 0
 10380  0013FE  88AC               	bsf	4012,4,c	;volatile
 10381  001400  D000               	goto	l5923
 10382  001402                     l5923:
 10383                           
 10384                           ; BSR set to: 0
 10385  001402  0100               	movlb	0	; () banked
 10386  001404  A3B9               	btfss	Open1USART@config& (0+255),1,b
 10387  001406  D003               	goto	l5927
 10388                           
 10389                           ; BSR set to: 0
 10390  001408  8CAC               	bsf	4012,6,c	;volatile
 10391  00140A  8CAB               	bsf	4011,6,c	;volatile
 10392  00140C  D000               	goto	l5927
 10393  00140E                     l5927:
 10394                           
 10395                           ; BSR set to: 0
 10396  00140E  0100               	movlb	0	; () banked
 10397  001410  A5B9               	btfss	Open1USART@config& (0+255),2,b
 10398  001412  D002               	goto	l5931
 10399                           
 10400                           ; BSR set to: 0
 10401  001414  8EAC               	bsf	4012,7,c	;volatile
 10402  001416  D000               	goto	l5931
 10403  001418                     l5931:
 10404                           
 10405                           ; BSR set to: 0
 10406  001418  0100               	movlb	0	; () banked
 10407  00141A  A7B9               	btfss	Open1USART@config& (0+255),3,b
 10408  00141C  D002               	goto	l1212
 10409                           
 10410                           ; BSR set to: 0
 10411  00141E  88AB               	bsf	4011,4,c	;volatile
 10412  001420  D002               	goto	l5935
 10413  001422                     l1212:
 10414                           
 10415                           ; BSR set to: 0
 10416  001422  8AAB               	bsf	4011,5,c	;volatile
 10417  001424  D000               	goto	l5935
 10418  001426                     l5935:
 10419                           
 10420                           ; BSR set to: 0
 10421  001426  0100               	movlb	0	; () banked
 10422  001428  A9B9               	btfss	Open1USART@config& (0+255),4,b
 10423  00142A  D002               	goto	l5939
 10424                           
 10425                           ; BSR set to: 0
 10426  00142C  84AC               	bsf	4012,2,c	;volatile
 10427  00142E  D000               	goto	l5939
 10428  001430                     l5939:
 10429                           
 10430                           ; BSR set to: 0
 10431  001430  0100               	movlb	0	; () banked
 10432  001432  ABB9               	btfss	Open1USART@config& (0+255),5,b
 10433  001434  D002               	goto	l5943
 10434                           
 10435                           ; BSR set to: 0
 10436  001436  86AB               	bsf	4011,3,c	;volatile
 10437  001438  D000               	goto	l5943
 10438  00143A                     l5943:
 10439                           
 10440                           ; BSR set to: 0
 10441  00143A  0100               	movlb	0	; () banked
 10442  00143C  ADB9               	btfss	Open1USART@config& (0+255),6,b
 10443  00143E  D002               	goto	l1216
 10444                           
 10445                           ; BSR set to: 0
 10446  001440  8A9D               	bsf	3997,5,c	;volatile
 10447  001442  D002               	goto	l5947
 10448  001444                     l1216:
 10449                           
 10450                           ; BSR set to: 0
 10451  001444  9A9D               	bcf	3997,5,c	;volatile
 10452  001446  D000               	goto	l5947
 10453  001448                     l5947:
 10454                           
 10455                           ; BSR set to: 0
 10456  001448  0100               	movlb	0	; () banked
 10457  00144A  AFB9               	btfss	Open1USART@config& (0+255),7,b
 10458  00144C  D002               	goto	l1218
 10459                           
 10460                           ; BSR set to: 0
 10461  00144E  889D               	bsf	3997,4,c	;volatile
 10462  001450  D001               	goto	l1219
 10463  001452                     l1218:
 10464                           
 10465                           ; BSR set to: 0
 10466  001452  989D               	bcf	3997,4,c	;volatile
 10467  001454                     l1219:
 10468                           
 10469                           ; BSR set to: 0
 10470  001454  C0B7  FFAF         	movff	Open1USART@spbrg,4015	;volatile
 10471                           
 10472                           ; BSR set to: 0
 10473  001458  0100               	movlb	0	; () banked
 10474  00145A  51B8               	movf	(Open1USART@spbrg+1)& (0+255),w,b
 10475  00145C  6E7F               	movwf	3967,c	;volatile
 10476                           
 10477                           ; BSR set to: 0
 10478  00145E  8AAC               	bsf	4012,5,c	;volatile
 10479                           
 10480                           ; BSR set to: 0
 10481  001460  8EAB               	bsf	4011,7,c	;volatile
 10482                           
 10483                           ; BSR set to: 0
 10484  001462  9C94               	bcf	3988,6,c	;volatile
 10485                           
 10486                           ; BSR set to: 0
 10487  001464  8E94               	bsf	3988,7,c	;volatile
 10488                           
 10489                           ; BSR set to: 0
 10490  001466  B8AC               	btfsc	4012,4,c	;volatile
 10491                           
 10492                           ; BSR set to: 0
 10493  001468  BEAC               	btfsc	4012,7,c	;volatile
 10494  00146A  D002               	goto	l1221
 10495                           
 10496                           ; BSR set to: 0
 10497  00146C  8C94               	bsf	3988,6,c	;volatile
 10498  00146E  D000               	goto	l1221
 10499  001470                     l1221:
 10500                           
 10501                           ; BSR set to: 0
 10502  001470  0012               	return		;funcret
 10503  001472                     __end_of_Open1USART:
 10504                           	opt stack 0
 10505                           prodh	equ	0xFF4
 10506                           prodl	equ	0xFF3
 10507                           intcon	equ	0xFF2
 10508                           intcon2	equ	0xFF1
 10509                           intcon3	equ	0xFF0
 10510                           postinc0	equ	0xFEE
 10511                           wreg	equ	0xFE8
 10512                           postinc1	equ	0xFE6
 10513                           fsr1h	equ	0xFE2
 10514                           fsr1l	equ	0xFE1
 10515                           indf2	equ	0xFDF
 10516                           postinc2	equ	0xFDE
 10517                           postdec2	equ	0xFDD
 10518                           fsr2h	equ	0xFDA
 10519                           fsr2l	equ	0xFD9
 10520                           status	equ	0xFD8
 10521                           
 10522 ;; *************** function _FlushTxBuf *****************
 10523 ;; Defined at:
 10524 ;;		line 90 in file "Wireless.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;		None
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;  index           1   16[BANK0 ] unsigned char 
 10529 ;; Return value:  Size  Location     Type
 10530 ;;		None               void
 10531 ;; Registers used:
 10532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10542 ;;Total ram usage:        1 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:    7
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_ConfigureWireless
 10549 ;;		_SendStatus
 10550 ;;		_SendLineMode
 10551 ;;		_SendOffsets
 10552 ;;		_SendDefaultPIDValues
 10553 ;;		_SendStoredPIDValues
 10554 ;;		_SendCurrentPIDValues
 10555 ;;		_SendBattVoltageInitial
 10556 ;;		_SendPIDSetPointOnLine
 10557 ;;		_SendPIDSetPointOffLine
 10558 ;;		_SendThreshold
 10559 ;;		_SendBattVoltage
 10560 ;;		_SendBattCurrent
 10561 ;;		_SendBattCurrentAcc
 10562 ;;		_SendPIDError
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text81
 10567  001E8A                     __ptext81:
 10568                           	opt stack 0
 10569  001E8A                     _FlushTxBuf:
 10570                           	opt stack 21
 10571                           
 10572                           ;Wireless.c: 91: unsigned char index;
 10573                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;incstack = 0
 10577  001E8A  0E00               	movlw	0
 10578  001E8C  0100               	movlb	0	; () banked
 10579  001E8E  6FB7               	movwf	FlushTxBuf@index& (0+255),b
 10580  001E90                     l5499:
 10581                           
 10582                           ; BSR set to: 0
 10583  001E90  0E18               	movlw	24
 10584  001E92  0100               	movlb	0	; () banked
 10585  001E94  65B7               	cpfsgt	FlushTxBuf@index& (0+255),b
 10586  001E96  D001               	goto	l5503
 10587                           
 10588                           ; BSR set to: 0
 10589  001E98  D00E               	goto	l5509
 10590  001E9A                     l5503:
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;Wireless.c: 94: Tx_buffer[index] = 0;
 10594  001E9A  0100               	movlb	0	; () banked
 10595  001E9C  51B7               	movf	FlushTxBuf@index& (0+255),w,b
 10596  001E9E  0D01               	mullw	1
 10597  001EA0  0E60               	movlw	low _Tx_buffer
 10598  001EA2  24F3               	addwf	prodl,w,c
 10599  001EA4  6ED9               	movwf	fsr2l,c
 10600  001EA6  0E00               	movlw	high _Tx_buffer
 10601  001EA8  20F4               	addwfc	prodh,w,c
 10602  001EAA  6EDA               	movwf	fsr2h,c
 10603  001EAC  0E00               	movlw	0
 10604  001EAE  6EDF               	movwf	indf2,c
 10605                           
 10606                           ; BSR set to: 0
 10607  001EB0  0100               	movlb	0	; () banked
 10608  001EB2  2BB7               	incf	FlushTxBuf@index& (0+255),f,b
 10609  001EB4  D7ED               	goto	l5499
 10610  001EB6                     l5509:
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;Wireless.c: 95: }
 10614                           ;Wireless.c: 97: put_Tx_index = 0;
 10615  001EB6  0E00               	movlw	0
 10616  001EB8  6E20               	movwf	_put_Tx_index,c
 10617                           
 10618                           ;Wireless.c: 98: get_Tx_index = 0;
 10619  001EBA  0E00               	movlw	0
 10620  001EBC  6E1E               	movwf	_get_Tx_index,c
 10621                           
 10622                           ; BSR set to: 0
 10623  001EBE  0012               	return		;funcret
 10624  001EC0                     __end_of_FlushTxBuf:
 10625                           	opt stack 0
 10626                           prodh	equ	0xFF4
 10627                           prodl	equ	0xFF3
 10628                           intcon	equ	0xFF2
 10629                           intcon2	equ	0xFF1
 10630                           intcon3	equ	0xFF0
 10631                           postinc0	equ	0xFEE
 10632                           wreg	equ	0xFE8
 10633                           postinc1	equ	0xFE6
 10634                           fsr1h	equ	0xFE2
 10635                           fsr1l	equ	0xFE1
 10636                           indf2	equ	0xFDF
 10637                           postinc2	equ	0xFDE
 10638                           postdec2	equ	0xFDD
 10639                           fsr2h	equ	0xFDA
 10640                           fsr2l	equ	0xFD9
 10641                           status	equ	0xFD8
 10642                           
 10643 ;; *************** function _FlushRxBuf *****************
 10644 ;; Defined at:
 10645 ;;		line 102 in file "Wireless.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;  index           1   16[BANK0 ] unsigned char 
 10650 ;; Return value:  Size  Location     Type
 10651 ;;		None               void
 10652 ;; Registers used:
 10653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10663 ;;Total ram usage:        1 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    7
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_ConfigureWireless
 10670 ;;		_SetPIDValues
 10671 ;;		_ReceiveCommandsEnable
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text82
 10676  001EC0                     __ptext82:
 10677                           	opt stack 0
 10678  001EC0                     _FlushRxBuf:
 10679                           	opt stack 22
 10680                           
 10681                           ;Wireless.c: 103: unsigned char index;
 10682                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;incstack = 0
 10686  001EC0  0E00               	movlw	0
 10687  001EC2  0100               	movlb	0	; () banked
 10688  001EC4  6FB7               	movwf	FlushRxBuf@index& (0+255),b
 10689  001EC6                     l5789:
 10690                           
 10691                           ; BSR set to: 0
 10692  001EC6  0E18               	movlw	24
 10693  001EC8  0100               	movlb	0	; () banked
 10694  001ECA  65B7               	cpfsgt	FlushRxBuf@index& (0+255),b
 10695  001ECC  D001               	goto	l5793
 10696                           
 10697                           ; BSR set to: 0
 10698  001ECE  D00E               	goto	l5799
 10699  001ED0                     l5793:
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10703  001ED0  0100               	movlb	0	; () banked
 10704  001ED2  51B7               	movf	FlushRxBuf@index& (0+255),w,b
 10705  001ED4  0D01               	mullw	1
 10706  001ED6  0E2D               	movlw	low _Rx_buffer
 10707  001ED8  24F3               	addwf	prodl,w,c
 10708  001EDA  6ED9               	movwf	fsr2l,c
 10709  001EDC  0E01               	movlw	high _Rx_buffer
 10710  001EDE  20F4               	addwfc	prodh,w,c
 10711  001EE0  6EDA               	movwf	fsr2h,c
 10712  001EE2  0E00               	movlw	0
 10713  001EE4  6EDF               	movwf	indf2,c
 10714                           
 10715                           ; BSR set to: 0
 10716  001EE6  0100               	movlb	0	; () banked
 10717  001EE8  2BB7               	incf	FlushRxBuf@index& (0+255),f,b
 10718  001EEA  D7ED               	goto	l5789
 10719  001EEC                     l5799:
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;Wireless.c: 107: }
 10723                           ;Wireless.c: 109: put_Rx_index = 0;
 10724  001EEC  0E00               	movlw	0
 10725  001EEE  6E1F               	movwf	_put_Rx_index,c
 10726                           
 10727                           ;Wireless.c: 110: get_Rx_index = 0;
 10728  001EF0  0E00               	movlw	0
 10729  001EF2  6E1D               	movwf	_get_Rx_index,c
 10730                           
 10731                           ; BSR set to: 0
 10732  001EF4  0012               	return		;funcret
 10733  001EF6                     __end_of_FlushRxBuf:
 10734                           	opt stack 0
 10735                           prodh	equ	0xFF4
 10736                           prodl	equ	0xFF3
 10737                           intcon	equ	0xFF2
 10738                           intcon2	equ	0xFF1
 10739                           intcon3	equ	0xFF0
 10740                           postinc0	equ	0xFEE
 10741                           wreg	equ	0xFE8
 10742                           postinc1	equ	0xFE6
 10743                           fsr1h	equ	0xFE2
 10744                           fsr1l	equ	0xFE1
 10745                           indf2	equ	0xFDF
 10746                           postinc2	equ	0xFDE
 10747                           postdec2	equ	0xFDD
 10748                           fsr2h	equ	0xFDA
 10749                           fsr2l	equ	0xFD9
 10750                           status	equ	0xFD8
 10751                           
 10752 ;; *************** function _ConfigureUltrasound *****************
 10753 ;; Defined at:
 10754 ;;		line 9 in file "Ultrasound.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;  echo_to_cm      3   20[BANK0 ] float 
 10757 ;;  echo_to_in      3   23[BANK0 ] float 
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;		None
 10760 ;; Return value:  Size  Location     Type
 10761 ;;		None               void
 10762 ;; Registers used:
 10763 ;;		wreg, status,2, cstack
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/0
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10769 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;Total ram usage:        6 bytes
 10774 ;; Hardware stack levels used:    1
 10775 ;; Hardware stack levels required when called:    8
 10776 ;; This function calls:
 10777 ;;		_WriteTimer1
 10778 ;; This function is called by:
 10779 ;;		_main
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text83
 10784  002094                     __ptext83:
 10785                           	opt stack 0
 10786  002094                     _ConfigureUltrasound:
 10787                           	opt stack 22
 10788                           
 10789                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;incstack = 0
 10793  002094  C0BB  F0CF         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10794  002098  C0BC  F0D0         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10795  00209C  C0BD  F0D1         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10796                           
 10797                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10798  0020A0  C0BE  F0D2         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10799  0020A4  C0BF  F0D3         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10800  0020A8  C0C0  F0D4         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10801                           
 10802                           ;Ultrasound.c: 12: WriteTimer1(0);
 10803  0020AC  0E00               	movlw	0
 10804  0020AE  0100               	movlb	0	; () banked
 10805  0020B0  6FB8               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10806  0020B2  0E00               	movlw	0
 10807  0020B4  6FB7               	movwf	WriteTimer1@timer1& (0+255),b
 10808  0020B6  EC99  F011         	call	_WriteTimer1	;wreg free
 10809  0020BA  0012               	return		;funcret
 10810  0020BC                     __end_of_ConfigureUltrasound:
 10811                           	opt stack 0
 10812                           prodh	equ	0xFF4
 10813                           prodl	equ	0xFF3
 10814                           intcon	equ	0xFF2
 10815                           intcon2	equ	0xFF1
 10816                           intcon3	equ	0xFF0
 10817                           postinc0	equ	0xFEE
 10818                           wreg	equ	0xFE8
 10819                           postinc1	equ	0xFE6
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           indf2	equ	0xFDF
 10823                           postinc2	equ	0xFDE
 10824                           postdec2	equ	0xFDD
 10825                           fsr2h	equ	0xFDA
 10826                           fsr2l	equ	0xFD9
 10827                           status	equ	0xFD8
 10828                           
 10829 ;; *************** function _ConfigureTimer2 *****************
 10830 ;; Defined at:
 10831 ;;		line 144 in file "FastBuggy17_Main_Code_TUNING.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;		None
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;		None               void
 10838 ;; Registers used:
 10839 ;;		wreg, status,2, status,0, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;Total ram usage:        0 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    8
 10852 ;; This function calls:
 10853 ;;		_OpenTimer2
 10854 ;; This function is called by:
 10855 ;;		_main
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text84
 10860  002492                     __ptext84:
 10861                           	opt stack 0
 10862  002492                     _ConfigureTimer2:
 10863                           	opt stack 22
 10864                           
 10865                           ;FastBuggy17_Main_Code_TUNING.c: 146: OpenTimer2(0b01111111
 10866                           ;FastBuggy17_Main_Code_TUNING.c: 147: & 0b11111100
 10867                           ;FastBuggy17_Main_Code_TUNING.c: 148: & 0b10000111
 10868                           ;FastBuggy17_Main_Code_TUNING.c: 149: & 0b10110111);
 10869                           
 10870                           ;incstack = 0
 10871  002492  0E04               	movlw	4
 10872  002494  ECD1  F010         	call	_OpenTimer2
 10873  002498  0012               	return		;funcret
 10874  00249A                     __end_of_ConfigureTimer2:
 10875                           	opt stack 0
 10876                           prodh	equ	0xFF4
 10877                           prodl	equ	0xFF3
 10878                           intcon	equ	0xFF2
 10879                           intcon2	equ	0xFF1
 10880                           intcon3	equ	0xFF0
 10881                           postinc0	equ	0xFEE
 10882                           wreg	equ	0xFE8
 10883                           postinc1	equ	0xFE6
 10884                           fsr1h	equ	0xFE2
 10885                           fsr1l	equ	0xFE1
 10886                           indf2	equ	0xFDF
 10887                           postinc2	equ	0xFDE
 10888                           postdec2	equ	0xFDD
 10889                           fsr2h	equ	0xFDA
 10890                           fsr2l	equ	0xFD9
 10891                           status	equ	0xFD8
 10892                           
 10893 ;; *************** function _OpenTimer2 *****************
 10894 ;; Defined at:
 10895 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  config          1    wreg     unsigned char 
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;  config          1   16[BANK0 ] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;		None               void
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;Total ram usage:        1 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    7
 10916 ;; This function calls:
 10917 ;;		Nothing
 10918 ;; This function is called by:
 10919 ;;		_ConfigureTimer2
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text85
 10924  0021A2                     __ptext85:
 10925                           	opt stack 0
 10926  0021A2                     _OpenTimer2:
 10927                           	opt stack 22
 10928                           
 10929                           ;incstack = 0
 10930                           ;OpenTimer2@config stored from wreg
 10931  0021A2  0100               	movlb	0	; () banked
 10932  0021A4  6FB7               	movwf	OpenTimer2@config& (0+255),b
 10933                           
 10934                           ; BSR set to: 0
 10935  0021A6  0100               	movlb	0	; () banked
 10936  0021A8  51B7               	movf	OpenTimer2@config& (0+255),w,b
 10937  0021AA  0BFB               	andlw	251
 10938  0021AC  6ECA               	movwf	4042,c	;volatile
 10939                           
 10940                           ; BSR set to: 0
 10941  0021AE  0E00               	movlw	0
 10942  0021B0  6ECC               	movwf	4044,c	;volatile
 10943                           
 10944                           ; BSR set to: 0
 10945  0021B2  929E               	bcf	3998,1,c	;volatile
 10946                           
 10947                           ; BSR set to: 0
 10948  0021B4  0100               	movlb	0	; () banked
 10949  0021B6  AFB7               	btfss	OpenTimer2@config& (0+255),7,b
 10950  0021B8  D002               	goto	l1188
 10951                           
 10952                           ; BSR set to: 0
 10953  0021BA  829D               	bsf	3997,1,c	;volatile
 10954  0021BC  D001               	goto	l1189
 10955  0021BE                     l1188:
 10956                           
 10957                           ; BSR set to: 0
 10958  0021BE  929D               	bcf	3997,1,c	;volatile
 10959  0021C0                     l1189:
 10960                           
 10961                           ; BSR set to: 0
 10962  0021C0  84CA               	bsf	4042,2,c	;volatile
 10963                           
 10964                           ; BSR set to: 0
 10965  0021C2  0012               	return		;funcret
 10966  0021C4                     __end_of_OpenTimer2:
 10967                           	opt stack 0
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           intcon2	equ	0xFF1
 10972                           intcon3	equ	0xFF0
 10973                           postinc0	equ	0xFEE
 10974                           wreg	equ	0xFE8
 10975                           postinc1	equ	0xFE6
 10976                           fsr1h	equ	0xFE2
 10977                           fsr1l	equ	0xFE1
 10978                           indf2	equ	0xFDF
 10979                           postinc2	equ	0xFDE
 10980                           postdec2	equ	0xFDD
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _ConfigureTimer1 *****************
 10986 ;; Defined at:
 10987 ;;		line 126 in file "FastBuggy17_Main_Code_TUNING.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;		None               void
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, status,0, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    8
 11008 ;; This function calls:
 11009 ;;		_OpenTimer1
 11010 ;;		_WriteTimer1
 11011 ;; This function is called by:
 11012 ;;		_main
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text86
 11017  002274                     __ptext86:
 11018                           	opt stack 0
 11019  002274                     _ConfigureTimer1:
 11020                           	opt stack 22
 11021                           
 11022                           ;FastBuggy17_Main_Code_TUNING.c: 128: OpenTimer1(0b01111111
 11023                           ;FastBuggy17_Main_Code_TUNING.c: 129: & 0b11111111
 11024                           ;FastBuggy17_Main_Code_TUNING.c: 130: & 0b11111101
 11025                           ;FastBuggy17_Main_Code_TUNING.c: 131: & 0b11011111
 11026                           ;FastBuggy17_Main_Code_TUNING.c: 132: & 0b11110111
 11027                           ;FastBuggy17_Main_Code_TUNING.c: 133: & 0b11111111);
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;incstack = 0
 11031  002274  0E55               	movlw	85
 11032  002276  EC7B  F00F         	call	_OpenTimer1
 11033                           
 11034                           ;FastBuggy17_Main_Code_TUNING.c: 137: T1CONbits.TMR1ON = 0;
 11035  00227A  90CD               	bcf	4045,0,c	;volatile
 11036                           
 11037                           ;FastBuggy17_Main_Code_TUNING.c: 139: WriteTimer1(0);
 11038  00227C  0E00               	movlw	0
 11039  00227E  0100               	movlb	0	; () banked
 11040  002280  6FB8               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 11041  002282  0E00               	movlw	0
 11042  002284  6FB7               	movwf	WriteTimer1@timer1& (0+255),b
 11043  002286  EC99  F011         	call	_WriteTimer1	;wreg free
 11044  00228A  0012               	return		;funcret
 11045  00228C                     __end_of_ConfigureTimer1:
 11046                           	opt stack 0
 11047                           prodh	equ	0xFF4
 11048                           prodl	equ	0xFF3
 11049                           intcon	equ	0xFF2
 11050                           intcon2	equ	0xFF1
 11051                           intcon3	equ	0xFF0
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postinc1	equ	0xFE6
 11055                           fsr1h	equ	0xFE2
 11056                           fsr1l	equ	0xFE1
 11057                           indf2	equ	0xFDF
 11058                           postinc2	equ	0xFDE
 11059                           postdec2	equ	0xFDD
 11060                           fsr2h	equ	0xFDA
 11061                           fsr2l	equ	0xFD9
 11062                           status	equ	0xFD8
 11063                           
 11064 ;; *************** function _WriteTimer1 *****************
 11065 ;; Defined at:
 11066 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  timer1          2   16[BANK0 ] unsigned int 
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;  timer           2   18[BANK0 ] struct Timers
 11071 ;; Return value:  Size  Location     Type
 11072 ;;		None               void
 11073 ;; Registers used:
 11074 ;;		None
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;Total ram usage:        4 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    7
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_ConfigureUltrasound
 11091 ;;		_ConfigureTimer1
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text87
 11096  002332                     __ptext87:
 11097                           	opt stack 0
 11098  002332                     _WriteTimer1:
 11099                           	opt stack 22
 11100                           
 11101                           ;incstack = 0
 11102  002332  C0B7  F0B9         	movff	WriteTimer1@timer1,WriteTimer1@timer
 11103  002336  C0B8  F0BA         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 11104  00233A  C0BA  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 11105  00233E  C0B9  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 11106  002342  0012               	return		;funcret
 11107  002344                     __end_of_WriteTimer1:
 11108                           	opt stack 0
 11109                           prodh	equ	0xFF4
 11110                           prodl	equ	0xFF3
 11111                           intcon	equ	0xFF2
 11112                           intcon2	equ	0xFF1
 11113                           intcon3	equ	0xFF0
 11114                           postinc0	equ	0xFEE
 11115                           wreg	equ	0xFE8
 11116                           postinc1	equ	0xFE6
 11117                           fsr1h	equ	0xFE2
 11118                           fsr1l	equ	0xFE1
 11119                           indf2	equ	0xFDF
 11120                           postinc2	equ	0xFDE
 11121                           postdec2	equ	0xFDD
 11122                           fsr2h	equ	0xFDA
 11123                           fsr2l	equ	0xFD9
 11124                           status	equ	0xFD8
 11125                           
 11126 ;; *************** function _OpenTimer1 *****************
 11127 ;; Defined at:
 11128 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  config          1    wreg     unsigned char 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  config          1   16[BANK0 ] unsigned char 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;		None               void
 11135 ;; Registers used:
 11136 ;;		wreg, status,2, status,0
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;Total ram usage:        1 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    7
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_ConfigureTimer1
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           	psect	text88
 11157  001EF6                     __ptext88:
 11158                           	opt stack 0
 11159  001EF6                     _OpenTimer1:
 11160                           	opt stack 22
 11161                           
 11162                           ;incstack = 0
 11163                           ;OpenTimer1@config stored from wreg
 11164  001EF6  0100               	movlb	0	; () banked
 11165  001EF8  6FB7               	movwf	OpenTimer1@config& (0+255),b
 11166                           
 11167                           ; BSR set to: 0
 11168  001EFA  0100               	movlb	0	; () banked
 11169  001EFC  51B7               	movf	OpenTimer1@config& (0+255),w,b
 11170  001EFE  0B7E               	andlw	126
 11171  001F00  6ECD               	movwf	4045,c	;volatile
 11172                           
 11173                           ; BSR set to: 0
 11174  001F02  0100               	movlb	0	; () banked
 11175  001F04  ADB7               	btfss	OpenTimer1@config& (0+255),6,b
 11176  001F06  D002               	goto	l1157
 11177                           
 11178                           ; BSR set to: 0
 11179  001F08  8ECD               	bsf	4045,7,c	;volatile
 11180  001F0A  D002               	goto	l6039
 11181  001F0C                     l1157:
 11182                           
 11183                           ; BSR set to: 0
 11184  001F0C  9ECD               	bcf	4045,7,c	;volatile
 11185  001F0E  D000               	goto	l6039
 11186  001F10                     l6039:
 11187                           
 11188                           ; BSR set to: 0
 11189  001F10  0E00               	movlw	0
 11190  001F12  6ECF               	movwf	4047,c	;volatile
 11191  001F14  0E00               	movlw	0
 11192  001F16  6ECE               	movwf	4046,c	;volatile
 11193                           
 11194                           ; BSR set to: 0
 11195  001F18  909E               	bcf	3998,0,c	;volatile
 11196                           
 11197                           ; BSR set to: 0
 11198  001F1A  0100               	movlb	0	; () banked
 11199  001F1C  AFB7               	btfss	OpenTimer1@config& (0+255),7,b
 11200  001F1E  D002               	goto	l1159
 11201                           
 11202                           ; BSR set to: 0
 11203  001F20  809D               	bsf	3997,0,c	;volatile
 11204  001F22  D001               	goto	l1160
 11205  001F24                     l1159:
 11206                           
 11207                           ; BSR set to: 0
 11208  001F24  909D               	bcf	3997,0,c	;volatile
 11209  001F26                     l1160:
 11210                           
 11211                           ; BSR set to: 0
 11212  001F26  80CD               	bsf	4045,0,c	;volatile
 11213                           
 11214                           ; BSR set to: 0
 11215  001F28  0012               	return		;funcret
 11216  001F2A                     __end_of_OpenTimer1:
 11217                           	opt stack 0
 11218                           prodh	equ	0xFF4
 11219                           prodl	equ	0xFF3
 11220                           intcon	equ	0xFF2
 11221                           intcon2	equ	0xFF1
 11222                           intcon3	equ	0xFF0
 11223                           postinc0	equ	0xFEE
 11224                           wreg	equ	0xFE8
 11225                           postinc1	equ	0xFE6
 11226                           fsr1h	equ	0xFE2
 11227                           fsr1l	equ	0xFE1
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           postdec2	equ	0xFDD
 11231                           fsr2h	equ	0xFDA
 11232                           fsr2l	equ	0xFD9
 11233                           status	equ	0xFD8
 11234                           
 11235 ;; *************** function _ConfigureTimer0 *****************
 11236 ;; Defined at:
 11237 ;;		line 112 in file "FastBuggy17_Main_Code_TUNING.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;		None
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;		None
 11242 ;; Return value:  Size  Location     Type
 11243 ;;		None               void
 11244 ;; Registers used:
 11245 ;;		wreg, status,2, status,0, cstack
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;Total ram usage:        0 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:    8
 11258 ;; This function calls:
 11259 ;;		_OpenTimer0
 11260 ;;		_WriteTimer0
 11261 ;; This function is called by:
 11262 ;;		_main
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text89
 11267  0022A2                     __ptext89:
 11268                           	opt stack 0
 11269  0022A2                     _ConfigureTimer0:
 11270                           	opt stack 22
 11271                           
 11272                           ;FastBuggy17_Main_Code_TUNING.c: 114: OpenTimer0(0b11111111
 11273                           ;FastBuggy17_Main_Code_TUNING.c: 115: & 0b10111111
 11274                           ;FastBuggy17_Main_Code_TUNING.c: 116: & 0b11011111
 11275                           ;FastBuggy17_Main_Code_TUNING.c: 117: & 0b11111111);
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;incstack = 0
 11279  0022A2  0E9F               	movlw	159
 11280  0022A4  EC85  F010         	call	_OpenTimer0
 11281                           
 11282                           ;FastBuggy17_Main_Code_TUNING.c: 121: WriteTimer0(63036);
 11283  0022A8  0EF6               	movlw	246
 11284  0022AA  0100               	movlb	0	; () banked
 11285  0022AC  6FB8               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 11286  0022AE  0E3C               	movlw	60
 11287  0022B0  6FB7               	movwf	WriteTimer0@timer0& (0+255),b
 11288  0022B2  ECA2  F011         	call	_WriteTimer0	;wreg free
 11289  0022B6  0012               	return		;funcret
 11290  0022B8                     __end_of_ConfigureTimer0:
 11291                           	opt stack 0
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           intcon2	equ	0xFF1
 11296                           intcon3	equ	0xFF0
 11297                           postinc0	equ	0xFEE
 11298                           wreg	equ	0xFE8
 11299                           postinc1	equ	0xFE6
 11300                           fsr1h	equ	0xFE2
 11301                           fsr1l	equ	0xFE1
 11302                           indf2	equ	0xFDF
 11303                           postinc2	equ	0xFDE
 11304                           postdec2	equ	0xFDD
 11305                           fsr2h	equ	0xFDA
 11306                           fsr2l	equ	0xFD9
 11307                           status	equ	0xFD8
 11308                           
 11309 ;; *************** function _WriteTimer0 *****************
 11310 ;; Defined at:
 11311 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  timer0          2   16[BANK0 ] unsigned int 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  timer           2   18[BANK0 ] struct Timers
 11316 ;; Return value:  Size  Location     Type
 11317 ;;		None               void
 11318 ;; Registers used:
 11319 ;;		None
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;Total ram usage:        4 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    7
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_ConfigureTimer0
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text90
 11340  002344                     __ptext90:
 11341                           	opt stack 0
 11342  002344                     _WriteTimer0:
 11343                           	opt stack 22
 11344                           
 11345                           ;incstack = 0
 11346  002344  C0B7  F0B9         	movff	WriteTimer0@timer0,WriteTimer0@timer
 11347  002348  C0B8  F0BA         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 11348  00234C  C0BA  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 11349  002350  C0B9  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 11350  002354  0012               	return		;funcret
 11351  002356                     __end_of_WriteTimer0:
 11352                           	opt stack 0
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           intcon2	equ	0xFF1
 11357                           intcon3	equ	0xFF0
 11358                           postinc0	equ	0xFEE
 11359                           wreg	equ	0xFE8
 11360                           postinc1	equ	0xFE6
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           indf2	equ	0xFDF
 11364                           postinc2	equ	0xFDE
 11365                           postdec2	equ	0xFDD
 11366                           fsr2h	equ	0xFDA
 11367                           fsr2l	equ	0xFD9
 11368                           status	equ	0xFD8
 11369                           
 11370 ;; *************** function _OpenTimer0 *****************
 11371 ;; Defined at:
 11372 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  config          1    wreg     unsigned char 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  config          1   16[BANK0 ] unsigned char 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;		None               void
 11379 ;; Registers used:
 11380 ;;		wreg, status,2, status,0
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;Total ram usage:        1 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; Hardware stack levels required when called:    7
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_ConfigureTimer0
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text91
 11401  00210A                     __ptext91:
 11402                           	opt stack 0
 11403  00210A                     _OpenTimer0:
 11404                           	opt stack 22
 11405                           
 11406                           ;incstack = 0
 11407                           ;OpenTimer0@config stored from wreg
 11408  00210A  0100               	movlb	0	; () banked
 11409  00210C  6FB7               	movwf	OpenTimer0@config& (0+255),b
 11410                           
 11411                           ; BSR set to: 0
 11412  00210E  0100               	movlb	0	; () banked
 11413  002110  51B7               	movf	OpenTimer0@config& (0+255),w,b
 11414  002112  0B7F               	andlw	127
 11415  002114  6ED5               	movwf	4053,c	;volatile
 11416                           
 11417                           ; BSR set to: 0
 11418  002116  0E00               	movlw	0
 11419  002118  6ED7               	movwf	4055,c	;volatile
 11420                           
 11421                           ; BSR set to: 0
 11422  00211A  0E00               	movlw	0
 11423  00211C  6ED6               	movwf	4054,c	;volatile
 11424                           
 11425                           ; BSR set to: 0
 11426  00211E  94F2               	bcf	intcon,2,c	;volatile
 11427                           
 11428                           ; BSR set to: 0
 11429  002120  0100               	movlb	0	; () banked
 11430  002122  AFB7               	btfss	OpenTimer0@config& (0+255),7,b
 11431  002124  D002               	goto	l1133
 11432                           
 11433                           ; BSR set to: 0
 11434  002126  8AF2               	bsf	intcon,5,c	;volatile
 11435  002128  D001               	goto	l1134
 11436  00212A                     l1133:
 11437                           
 11438                           ; BSR set to: 0
 11439  00212A  9AF2               	bcf	intcon,5,c	;volatile
 11440  00212C                     l1134:
 11441                           
 11442                           ; BSR set to: 0
 11443  00212C  8ED5               	bsf	4053,7,c	;volatile
 11444                           
 11445                           ; BSR set to: 0
 11446  00212E  0012               	return		;funcret
 11447  002130                     __end_of_OpenTimer0:
 11448                           	opt stack 0
 11449                           prodh	equ	0xFF4
 11450                           prodl	equ	0xFF3
 11451                           intcon	equ	0xFF2
 11452                           intcon2	equ	0xFF1
 11453                           intcon3	equ	0xFF0
 11454                           postinc0	equ	0xFEE
 11455                           wreg	equ	0xFE8
 11456                           postinc1	equ	0xFE6
 11457                           fsr1h	equ	0xFE2
 11458                           fsr1l	equ	0xFE1
 11459                           indf2	equ	0xFDF
 11460                           postinc2	equ	0xFDE
 11461                           postdec2	equ	0xFDD
 11462                           fsr2h	equ	0xFDA
 11463                           fsr2l	equ	0xFD9
 11464                           status	equ	0xFD8
 11465                           
 11466 ;; *************** function _ConfigurePWM *****************
 11467 ;; Defined at:
 11468 ;;		line 162 in file "FastBuggy17_Main_Code_TUNING.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;		None
 11473 ;; Return value:  Size  Location     Type
 11474 ;;		None               void
 11475 ;; Registers used:
 11476 ;;		wreg, status,2, cstack
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11486 ;;Total ram usage:        0 bytes
 11487 ;; Hardware stack levels used:    1
 11488 ;; Hardware stack levels required when called:    8
 11489 ;; This function calls:
 11490 ;;		_OpenPWM4
 11491 ;;		_OpenPWM5
 11492 ;; This function is called by:
 11493 ;;		_main
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text92
 11498  002424                     __ptext92:
 11499                           	opt stack 0
 11500  002424                     _ConfigurePWM:
 11501                           	opt stack 22
 11502                           
 11503                           ;FastBuggy17_Main_Code_TUNING.c: 164: OpenPWM4(130);
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;incstack = 0
 11507  002424  0E82               	movlw	130
 11508  002426  ECAB  F010         	call	_OpenPWM4
 11509                           
 11510                           ;FastBuggy17_Main_Code_TUNING.c: 165: OpenPWM5(130);
 11511  00242A  0E82               	movlw	130
 11512  00242C  EC98  F010         	call	_OpenPWM5
 11513  002430  0012               	return		;funcret
 11514  002432                     __end_of_ConfigurePWM:
 11515                           	opt stack 0
 11516                           prodh	equ	0xFF4
 11517                           prodl	equ	0xFF3
 11518                           intcon	equ	0xFF2
 11519                           intcon2	equ	0xFF1
 11520                           intcon3	equ	0xFF0
 11521                           postinc0	equ	0xFEE
 11522                           wreg	equ	0xFE8
 11523                           postinc1	equ	0xFE6
 11524                           fsr1h	equ	0xFE2
 11525                           fsr1l	equ	0xFE1
 11526                           indf2	equ	0xFDF
 11527                           postinc2	equ	0xFDE
 11528                           postdec2	equ	0xFDD
 11529                           fsr2h	equ	0xFDA
 11530                           fsr2l	equ	0xFD9
 11531                           status	equ	0xFD8
 11532                           
 11533 ;; *************** function _OpenPWM5 *****************
 11534 ;; Defined at:
 11535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  period          1    wreg     unsigned char 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  period          1   16[BANK0 ] unsigned char 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;		None               void
 11542 ;; Registers used:
 11543 ;;		wreg, status,2
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;Total ram usage:        1 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    7
 11556 ;; This function calls:
 11557 ;;		Nothing
 11558 ;; This function is called by:
 11559 ;;		_ConfigurePWM
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           	psect	text93
 11564  002130                     __ptext93:
 11565                           	opt stack 0
 11566  002130                     _OpenPWM5:
 11567                           	opt stack 22
 11568                           
 11569                           ;incstack = 0
 11570                           ;OpenPWM5@period stored from wreg
 11571  002130  0100               	movlb	0	; () banked
 11572  002132  6FB7               	movwf	OpenPWM5@period& (0+255),b
 11573                           
 11574                           ; BSR set to: 0
 11575  002134  0E0C               	movlw	12
 11576  002136  6E70               	movwf	3952,c	;volatile
 11577                           
 11578                           ; BSR set to: 0
 11579  002138  ACB1               	btfss	4017,6,c	;volatile
 11580                           
 11581                           ; BSR set to: 0
 11582  00213A  B6B1               	btfsc	4017,3,c	;volatile
 11583  00213C  D005               	goto	l1111
 11584                           
 11585                           ; BSR set to: 0
 11586  00213E  94CA               	bcf	4042,2,c	;volatile
 11587                           
 11588                           ; BSR set to: 0
 11589  002140  C0B7  FFCB         	movff	OpenPWM5@period,4043	;volatile
 11590                           
 11591                           ; BSR set to: 0
 11592  002144  84CA               	bsf	4042,2,c	;volatile
 11593  002146  D005               	goto	l6091
 11594  002148                     l1111:
 11595                           
 11596                           ; BSR set to: 0
 11597  002148  9476               	bcf	3958,2,c	;volatile
 11598                           
 11599                           ; BSR set to: 0
 11600  00214A  C0B7  FF77         	movff	OpenPWM5@period,3959	;volatile
 11601                           
 11602                           ; BSR set to: 0
 11603  00214E  8476               	bsf	3958,2,c	;volatile
 11604  002150  D000               	goto	l6091
 11605  002152                     l6091:
 11606                           
 11607                           ; BSR set to: 0
 11608  002152  9898               	bcf	3992,4,c	;volatile
 11609                           
 11610                           ; BSR set to: 0
 11611  002154  0012               	return		;funcret
 11612  002156                     __end_of_OpenPWM5:
 11613                           	opt stack 0
 11614                           prodh	equ	0xFF4
 11615                           prodl	equ	0xFF3
 11616                           intcon	equ	0xFF2
 11617                           intcon2	equ	0xFF1
 11618                           intcon3	equ	0xFF0
 11619                           postinc0	equ	0xFEE
 11620                           wreg	equ	0xFE8
 11621                           postinc1	equ	0xFE6
 11622                           fsr1h	equ	0xFE2
 11623                           fsr1l	equ	0xFE1
 11624                           indf2	equ	0xFDF
 11625                           postinc2	equ	0xFDE
 11626                           postdec2	equ	0xFDD
 11627                           fsr2h	equ	0xFDA
 11628                           fsr2l	equ	0xFD9
 11629                           status	equ	0xFD8
 11630                           
 11631 ;; *************** function _OpenPWM4 *****************
 11632 ;; Defined at:
 11633 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  period          1    wreg     unsigned char 
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;  period          1   16[BANK0 ] unsigned char 
 11638 ;; Return value:  Size  Location     Type
 11639 ;;		None               void
 11640 ;; Registers used:
 11641 ;;		wreg, status,2
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;Total ram usage:        1 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    7
 11654 ;; This function calls:
 11655 ;;		Nothing
 11656 ;; This function is called by:
 11657 ;;		_ConfigurePWM
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text94
 11662  002156                     __ptext94:
 11663                           	opt stack 0
 11664  002156                     _OpenPWM4:
 11665                           	opt stack 22
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;incstack = 0
 11669                           ;OpenPWM4@period stored from wreg
 11670  002156  0100               	movlb	0	; () banked
 11671  002158  6FB7               	movwf	OpenPWM4@period& (0+255),b
 11672                           
 11673                           ; BSR set to: 0
 11674  00215A  0E0C               	movlw	12
 11675  00215C  6E73               	movwf	3955,c	;volatile
 11676                           
 11677                           ; BSR set to: 0
 11678  00215E  9698               	bcf	3992,3,c	;volatile
 11679                           
 11680                           ; BSR set to: 0
 11681  002160  ACB1               	btfss	4017,6,c	;volatile
 11682                           
 11683                           ; BSR set to: 0
 11684  002162  B6B1               	btfsc	4017,3,c	;volatile
 11685  002164  D005               	goto	l1085
 11686                           
 11687                           ; BSR set to: 0
 11688  002166  94CA               	bcf	4042,2,c	;volatile
 11689                           
 11690                           ; BSR set to: 0
 11691  002168  C0B7  FFCB         	movff	OpenPWM4@period,4043	;volatile
 11692                           
 11693                           ; BSR set to: 0
 11694  00216C  84CA               	bsf	4042,2,c	;volatile
 11695  00216E  D005               	goto	l1087
 11696  002170                     l1085:
 11697                           
 11698                           ; BSR set to: 0
 11699  002170  9476               	bcf	3958,2,c	;volatile
 11700                           
 11701                           ; BSR set to: 0
 11702  002172  C0B7  FF77         	movff	OpenPWM4@period,3959	;volatile
 11703                           
 11704                           ; BSR set to: 0
 11705  002176  8476               	bsf	3958,2,c	;volatile
 11706  002178  D000               	goto	l1087
 11707  00217A                     l1087:
 11708                           
 11709                           ; BSR set to: 0
 11710  00217A  0012               	return		;funcret
 11711  00217C                     __end_of_OpenPWM4:
 11712                           	opt stack 0
 11713                           prodh	equ	0xFF4
 11714                           prodl	equ	0xFF3
 11715                           intcon	equ	0xFF2
 11716                           intcon2	equ	0xFF1
 11717                           intcon3	equ	0xFF0
 11718                           postinc0	equ	0xFEE
 11719                           wreg	equ	0xFE8
 11720                           postinc1	equ	0xFE6
 11721                           fsr1h	equ	0xFE2
 11722                           fsr1l	equ	0xFE1
 11723                           indf2	equ	0xFDF
 11724                           postinc2	equ	0xFDE
 11725                           postdec2	equ	0xFDD
 11726                           fsr2h	equ	0xFDA
 11727                           fsr2l	equ	0xFD9
 11728                           status	equ	0xFD8
 11729                           
 11730 ;; *************** function _ConfigureInterrupts *****************
 11731 ;; Defined at:
 11732 ;;		line 55 in file "FastBuggy17_Main_Code_TUNING.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;		None               void
 11739 ;; Registers used:
 11740 ;;		None
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11750 ;;Total ram usage:        0 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:    7
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_main
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text95
 11761  0020BC                     __ptext95:
 11762                           	opt stack 0
 11763  0020BC                     _ConfigureInterrupts:
 11764                           	opt stack 23
 11765                           
 11766                           ;FastBuggy17_Main_Code_TUNING.c: 57: INTCONbits.GIE = 1;
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;incstack = 0
 11770  0020BC  8EF2               	bsf	intcon,7,c	;volatile
 11771                           
 11772                           ;FastBuggy17_Main_Code_TUNING.c: 58: INTCONbits.PEIE = 1;
 11773  0020BE  8CF2               	bsf	intcon,6,c	;volatile
 11774                           
 11775                           ;FastBuggy17_Main_Code_TUNING.c: 59: RCONbits.IPEN = 1;
 11776  0020C0  8ED0               	bsf	4048,7,c	;volatile
 11777                           
 11778                           ;FastBuggy17_Main_Code_TUNING.c: 81: INTCON3bits.INT3IE = 0;
 11779  0020C2  9AF0               	bcf	intcon3,5,c	;volatile
 11780                           
 11781                           ;FastBuggy17_Main_Code_TUNING.c: 82: INTCON3bits.INT3IF = 0;
 11782  0020C4  94F0               	bcf	intcon3,2,c	;volatile
 11783                           
 11784                           ;FastBuggy17_Main_Code_TUNING.c: 83: INTCON2bits.INTEDG3 = 1;
 11785  0020C6  86F1               	bsf	intcon2,3,c	;volatile
 11786                           
 11787                           ;FastBuggy17_Main_Code_TUNING.c: 84: INTCON2bits.INT3IP = 1;
 11788  0020C8  82F1               	bsf	intcon2,1,c	;volatile
 11789                           
 11790                           ;FastBuggy17_Main_Code_TUNING.c: 87: INTCONbits.TMR0IE = 1;
 11791  0020CA  8AF2               	bsf	intcon,5,c	;volatile
 11792                           
 11793                           ;FastBuggy17_Main_Code_TUNING.c: 88: INTCONbits.TMR0IF = 0;
 11794  0020CC  94F2               	bcf	intcon,2,c	;volatile
 11795                           
 11796                           ;FastBuggy17_Main_Code_TUNING.c: 89: INTCON2bits.TMR0IP = 1;
 11797  0020CE  84F1               	bsf	intcon2,2,c	;volatile
 11798                           
 11799                           ;FastBuggy17_Main_Code_TUNING.c: 98: PIE1bits.ADIE = 0;
 11800  0020D0  9C9D               	bcf	3997,6,c	;volatile
 11801                           
 11802                           ;FastBuggy17_Main_Code_TUNING.c: 99: PIR1bits.ADIF = 0;
 11803  0020D2  9C9E               	bcf	3998,6,c	;volatile
 11804                           
 11805                           ;FastBuggy17_Main_Code_TUNING.c: 100: IPR1bits.ADIP = 0;
 11806  0020D4  9C9F               	bcf	3999,6,c	;volatile
 11807                           
 11808                           ;FastBuggy17_Main_Code_TUNING.c: 103: PIE1bits.RC1IE = 0;
 11809  0020D6  9A9D               	bcf	3997,5,c	;volatile
 11810                           
 11811                           ;FastBuggy17_Main_Code_TUNING.c: 104: PIE1bits.TX1IE = 0;
 11812  0020D8  989D               	bcf	3997,4,c	;volatile
 11813                           
 11814                           ;FastBuggy17_Main_Code_TUNING.c: 105: PIR1bits.RC1IF = 0;
 11815  0020DA  9A9E               	bcf	3998,5,c	;volatile
 11816                           
 11817                           ;FastBuggy17_Main_Code_TUNING.c: 106: PIR1bits.TX1IF = 0;
 11818  0020DC  989E               	bcf	3998,4,c	;volatile
 11819                           
 11820                           ;FastBuggy17_Main_Code_TUNING.c: 107: IPR1bits.RC1IP = 0;
 11821  0020DE  9A9F               	bcf	3999,5,c	;volatile
 11822                           
 11823                           ;FastBuggy17_Main_Code_TUNING.c: 108: IPR1bits.TX1IP = 0;
 11824  0020E0  989F               	bcf	3999,4,c	;volatile
 11825  0020E2  0012               	return		;funcret
 11826  0020E4                     __end_of_ConfigureInterrupts:
 11827                           	opt stack 0
 11828                           prodh	equ	0xFF4
 11829                           prodl	equ	0xFF3
 11830                           intcon	equ	0xFF2
 11831                           intcon2	equ	0xFF1
 11832                           intcon3	equ	0xFF0
 11833                           postinc0	equ	0xFEE
 11834                           wreg	equ	0xFE8
 11835                           postinc1	equ	0xFE6
 11836                           fsr1h	equ	0xFE2
 11837                           fsr1l	equ	0xFE1
 11838                           indf2	equ	0xFDF
 11839                           postinc2	equ	0xFDE
 11840                           postdec2	equ	0xFDD
 11841                           fsr2h	equ	0xFDA
 11842                           fsr2l	equ	0xFD9
 11843                           status	equ	0xFD8
 11844                           
 11845 ;; *************** function _ConfigureBuggyIO *****************
 11846 ;; Defined at:
 11847 ;;		line 185 in file "FastBuggy17_Main_Code_TUNING.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;		None
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;		None
 11852 ;; Return value:  Size  Location     Type
 11853 ;;		None               void
 11854 ;; Registers used:
 11855 ;;		wreg, status,2
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;Total ram usage:        0 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:    7
 11868 ;; This function calls:
 11869 ;;		Nothing
 11870 ;; This function is called by:
 11871 ;;		_main
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text96
 11876  00225A                     __ptext96:
 11877                           	opt stack 0
 11878  00225A                     _ConfigureBuggyIO:
 11879                           	opt stack 23
 11880                           
 11881                           ;FastBuggy17_Main_Code_TUNING.c: 188: TRISA = 0xFF;
 11882                           
 11883                           ;incstack = 0
 11884  00225A  6892               	setf	3986,c	;volatile
 11885                           
 11886                           ;FastBuggy17_Main_Code_TUNING.c: 191: TRISB = 0xFF;
 11887  00225C  6893               	setf	3987,c	;volatile
 11888                           
 11889                           ;FastBuggy17_Main_Code_TUNING.c: 194: TRISC = 0x9F;
 11890  00225E  0E9F               	movlw	159
 11891  002260  6E94               	movwf	3988,c	;volatile
 11892                           
 11893                           ;FastBuggy17_Main_Code_TUNING.c: 197: TRISD = 0xE0;
 11894  002262  0EE0               	movlw	224
 11895  002264  6E95               	movwf	3989,c	;volatile
 11896                           
 11897                           ;FastBuggy17_Main_Code_TUNING.c: 200: TRISE = 0x00;
 11898  002266  0E00               	movlw	0
 11899  002268  6E96               	movwf	3990,c	;volatile
 11900                           
 11901                           ;FastBuggy17_Main_Code_TUNING.c: 203: TRISG = 0xE7;
 11902  00226A  0EE7               	movlw	231
 11903  00226C  6E98               	movwf	3992,c	;volatile
 11904                           
 11905                           ;FastBuggy17_Main_Code_TUNING.c: 206: TRISJ = 0x00;
 11906  00226E  0E00               	movlw	0
 11907  002270  6E9A               	movwf	3994,c	;volatile
 11908  002272  0012               	return		;funcret
 11909  002274                     __end_of_ConfigureBuggyIO:
 11910                           	opt stack 0
 11911                           prodh	equ	0xFF4
 11912                           prodl	equ	0xFF3
 11913                           intcon	equ	0xFF2
 11914                           intcon2	equ	0xFF1
 11915                           intcon3	equ	0xFF0
 11916                           postinc0	equ	0xFEE
 11917                           wreg	equ	0xFE8
 11918                           postinc1	equ	0xFE6
 11919                           fsr1h	equ	0xFE2
 11920                           fsr1l	equ	0xFE1
 11921                           indf2	equ	0xFDF
 11922                           postinc2	equ	0xFDE
 11923                           postdec2	equ	0xFDD
 11924                           fsr2h	equ	0xFDA
 11925                           fsr2l	equ	0xFD9
 11926                           status	equ	0xFD8
 11927                           
 11928 ;; *************** function _ConfigureADC *****************
 11929 ;; Defined at:
 11930 ;;		line 211 in file "FastBuggy17_Main_Code_TUNING.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;		None               void
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    8
 11951 ;; This function calls:
 11952 ;;		_OpenADC
 11953 ;; This function is called by:
 11954 ;;		_main
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text97
 11959  00230C                     __ptext97:
 11960                           	opt stack 0
 11961  00230C                     _ConfigureADC:
 11962                           	opt stack 22
 11963                           
 11964                           ;FastBuggy17_Main_Code_TUNING.c: 213: OpenADC(0b10011111
 11965                           ;FastBuggy17_Main_Code_TUNING.c: 214: & 0b11111111
 11966                           ;FastBuggy17_Main_Code_TUNING.c: 215: & 0b11110101,
 11967                           ;FastBuggy17_Main_Code_TUNING.c: 216: 0b10000111
 11968                           ;FastBuggy17_Main_Code_TUNING.c: 217: & 0b01111111
 11969                           ;FastBuggy17_Main_Code_TUNING.c: 218: & 0b11111110
 11970                           ;FastBuggy17_Main_Code_TUNING.c: 219: & 0b11111101,
 11971                           ;FastBuggy17_Main_Code_TUNING.c: 220: 9);
 11972                           
 11973                           ;incstack = 0
 11974  00230C  0E04               	movlw	4
 11975  00230E  0100               	movlb	0	; () banked
 11976  002310  6FB7               	movwf	OpenADC@config2& (0+255),b
 11977  002312  0E09               	movlw	9
 11978  002314  0100               	movlb	0	; () banked
 11979  002316  6FB8               	movwf	OpenADC@portconfig& (0+255),b
 11980  002318  0E95               	movlw	149
 11981  00231A  ECF9  F00A         	call	_OpenADC
 11982  00231E  0012               	return		;funcret
 11983  002320                     __end_of_ConfigureADC:
 11984                           	opt stack 0
 11985                           prodh	equ	0xFF4
 11986                           prodl	equ	0xFF3
 11987                           intcon	equ	0xFF2
 11988                           intcon2	equ	0xFF1
 11989                           intcon3	equ	0xFF0
 11990                           postinc0	equ	0xFEE
 11991                           wreg	equ	0xFE8
 11992                           postinc1	equ	0xFE6
 11993                           fsr1h	equ	0xFE2
 11994                           fsr1l	equ	0xFE1
 11995                           indf2	equ	0xFDF
 11996                           postinc2	equ	0xFDE
 11997                           postdec2	equ	0xFDD
 11998                           fsr2h	equ	0xFDA
 11999                           fsr2l	equ	0xFD9
 12000                           status	equ	0xFD8
 12001                           
 12002 ;; *************** function _OpenADC *****************
 12003 ;; Defined at:
 12004 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  config          1    wreg     unsigned char 
 12007 ;;  config2         1   16[BANK0 ] unsigned char 
 12008 ;;  portconfig      1   17[BANK0 ] unsigned char 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  config          1   20[BANK0 ] unsigned char 
 12011 ;; Return value:  Size  Location     Type
 12012 ;;		None               void
 12013 ;; Registers used:
 12014 ;;		wreg, status,2, status,0
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12023 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12024 ;;Total ram usage:        5 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    7
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_ConfigureADC
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text98
 12035  0015F2                     __ptext98:
 12036                           	opt stack 0
 12037  0015F2                     _OpenADC:
 12038                           	opt stack 22
 12039                           
 12040                           ;incstack = 0
 12041                           ;OpenADC@config stored from wreg
 12042  0015F2  0100               	movlb	0	; () banked
 12043  0015F4  6FBB               	movwf	OpenADC@config& (0+255),b
 12044                           
 12045                           ; BSR set to: 0
 12046  0015F6  0E00               	movlw	0
 12047  0015F8  6EC2               	movwf	4034,c	;volatile
 12048  0015FA  0E00               	movlw	0
 12049  0015FC  6EC0               	movwf	4032,c	;volatile
 12050                           
 12051                           ; BSR set to: 0
 12052  0015FE  0100               	movlb	0	; () banked
 12053  001600  90D8               	bcf	status,0,c
 12054  001602  31B7               	rrcf	OpenADC@config2& (0+255),w,b
 12055  001604  0B3C               	andlw	60
 12056  001606  6EC2               	movwf	4034,c	;volatile
 12057                           
 12058                           ; BSR set to: 0
 12059  001608  C0B7  F0B9         	movff	OpenADC@config2,??_OpenADC
 12060  00160C  0100               	movlb	0	; () banked
 12061  00160E  3BB9               	swapf	??_OpenADC& (0+255),f,b
 12062  001610  0EF0               	movlw	240
 12063  001612  17B9               	andwf	??_OpenADC& (0+255),f,b
 12064  001614  0E30               	movlw	48
 12065  001616  0100               	movlb	0	; () banked
 12066  001618  17B9               	andwf	??_OpenADC& (0+255),f,b
 12067  00161A  0100               	movlb	0	; () banked
 12068  00161C  51B8               	movf	OpenADC@portconfig& (0+255),w,b
 12069  00161E  0B0F               	andlw	15
 12070  001620  0100               	movlb	0	; () banked
 12071  001622  11B9               	iorwf	??_OpenADC& (0+255),w,b
 12072  001624  6EC1               	movwf	4033,c	;volatile
 12073                           
 12074                           ; BSR set to: 0
 12075  001626  C0BB  F0B9         	movff	OpenADC@config,??_OpenADC
 12076  00162A  0100               	movlb	0	; () banked
 12077  00162C  90D8               	bcf	status,0,c
 12078  00162E  37B9               	rlcf	??_OpenADC& (0+255),f,b
 12079  001630  0100               	movlb	0	; () banked
 12080  001632  90D8               	bcf	status,0,c
 12081  001634  37B9               	rlcf	??_OpenADC& (0+255),f,b
 12082  001636  0E38               	movlw	56
 12083  001638  0100               	movlb	0	; () banked
 12084  00163A  17B9               	andwf	??_OpenADC& (0+255),f,b
 12085  00163C  C0BB  F0BA         	movff	OpenADC@config,??_OpenADC+1
 12086  001640  0100               	movlb	0	; () banked
 12087  001642  3BBA               	swapf	(??_OpenADC+1)& (0+255),f,b
 12088  001644  0E0F               	movlw	15
 12089  001646  17BA               	andwf	(??_OpenADC+1)& (0+255),f,b
 12090  001648  0E07               	movlw	7
 12091  00164A  0100               	movlb	0	; () banked
 12092  00164C  17BA               	andwf	(??_OpenADC+1)& (0+255),f,b
 12093  00164E  0100               	movlb	0	; () banked
 12094  001650  51BB               	movf	OpenADC@config& (0+255),w,b
 12095  001652  0B80               	andlw	128
 12096  001654  0100               	movlb	0	; () banked
 12097  001656  11BA               	iorwf	(??_OpenADC+1)& (0+255),w,b
 12098  001658  0100               	movlb	0	; () banked
 12099  00165A  11B9               	iorwf	??_OpenADC& (0+255),w,b
 12100  00165C  6EC0               	movwf	4032,c	;volatile
 12101                           
 12102                           ; BSR set to: 0
 12103  00165E  0100               	movlb	0	; () banked
 12104  001660  AFB7               	btfss	OpenADC@config2& (0+255),7,b
 12105  001662  D003               	goto	l1055
 12106                           
 12107                           ; BSR set to: 0
 12108  001664  9C9E               	bcf	3998,6,c	;volatile
 12109  001666  8C9D               	bsf	3997,6,c	;volatile
 12110  001668  8CF2               	bsf	intcon,6,c	;volatile
 12111  00166A                     l1055:
 12112                           
 12113                           ; BSR set to: 0
 12114  00166A  80C2               	bsf	4034,0,c	;volatile
 12115                           
 12116                           ; BSR set to: 0
 12117  00166C  0012               	return		;funcret
 12118  00166E                     __end_of_OpenADC:
 12119                           	opt stack 0
 12120                           prodh	equ	0xFF4
 12121                           prodl	equ	0xFF3
 12122                           intcon	equ	0xFF2
 12123                           intcon2	equ	0xFF1
 12124                           intcon3	equ	0xFF0
 12125                           postinc0	equ	0xFEE
 12126                           wreg	equ	0xFE8
 12127                           postinc1	equ	0xFE6
 12128                           fsr1h	equ	0xFE2
 12129                           fsr1l	equ	0xFE1
 12130                           indf2	equ	0xFDF
 12131                           postinc2	equ	0xFDE
 12132                           postdec2	equ	0xFDD
 12133                           fsr2h	equ	0xFDA
 12134                           fsr2l	equ	0xFD9
 12135                           status	equ	0xFD8
 12136                           
 12137 ;; *************** function _CalculateSensorSumDiscrete *****************
 12138 ;; Defined at:
 12139 ;;		line 362 in file "FastBuggy17_Main_Code_TUNING.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
 12142 ;;		 -> sensor_statuses(5), 
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  index           1   19[BANK0 ] unsigned char 
 12145 ;;  sum             1   18[BANK0 ] unsigned char 
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      unsigned char 
 12148 ;; Registers used:
 12149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12158 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12159 ;;Total ram usage:        4 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:    7
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_main
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           	psect	text99
 12170  001CBA                     __ptext99:
 12171                           	opt stack 0
 12172  001CBA                     _CalculateSensorSumDiscrete:
 12173                           	opt stack 23
 12174                           
 12175                           ;FastBuggy17_Main_Code_TUNING.c: 363: unsigned char index, sum = 0;
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;incstack = 0
 12179  001CBA  0E00               	movlw	0
 12180  001CBC  0100               	movlb	0	; () banked
 12181  001CBE  6FB9               	movwf	CalculateSensorSumDiscrete@sum& (0+255),b
 12182                           
 12183                           ;FastBuggy17_Main_Code_TUNING.c: 365: for(index = 0; index < 5; index++) {
 12184  001CC0  0E00               	movlw	0
 12185  001CC2  0100               	movlb	0	; () banked
 12186  001CC4  6FBA               	movwf	CalculateSensorSumDiscrete@index& (0+255),b
 12187  001CC6                     l6429:
 12188                           
 12189                           ; BSR set to: 0
 12190  001CC6  0E04               	movlw	4
 12191  001CC8  0100               	movlb	0	; () banked
 12192  001CCA  65BA               	cpfsgt	CalculateSensorSumDiscrete@index& (0+255),b
 12193  001CCC  D001               	goto	l6433
 12194                           
 12195                           ; BSR set to: 0
 12196  001CCE  D011               	goto	l6439
 12197  001CD0                     l6433:
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;FastBuggy17_Main_Code_TUNING.c: 367: sum += *(sensor_statuses + index);
 12201  001CD0  0100               	movlb	0	; () banked
 12202  001CD2  51BA               	movf	CalculateSensorSumDiscrete@index& (0+255),w,b
 12203  001CD4  0D01               	mullw	1
 12204  001CD6  50F3               	movf	prodl,w,c
 12205  001CD8  0100               	movlb	0	; () banked
 12206  001CDA  25B7               	addwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),w,b
 12207  001CDC  6ED9               	movwf	fsr2l,c
 12208  001CDE  50F4               	movf	prodh,w,c
 12209  001CE0  0100               	movlb	0	; () banked
 12210  001CE2  21B8               	addwfc	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),w,b
 12211  001CE4  6EDA               	movwf	fsr2h,c
 12212  001CE6  50DF               	movf	indf2,w,c
 12213  001CE8  0100               	movlb	0	; () banked
 12214  001CEA  27B9               	addwf	CalculateSensorSumDiscrete@sum& (0+255),f,b
 12215                           
 12216                           ; BSR set to: 0
 12217  001CEC  0100               	movlb	0	; () banked
 12218  001CEE  2BBA               	incf	CalculateSensorSumDiscrete@index& (0+255),f,b
 12219  001CF0  D7EA               	goto	l6429
 12220  001CF2                     l6439:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;FastBuggy17_Main_Code_TUNING.c: 369: }
 12224                           ;FastBuggy17_Main_Code_TUNING.c: 371: return(sum);
 12225  001CF2  0100               	movlb	0	; () banked
 12226  001CF4  51B9               	movf	CalculateSensorSumDiscrete@sum& (0+255),w,b
 12227  001CF6  D000               	goto	l833
 12228  001CF8                     l833:
 12229                           
 12230                           ; BSR set to: 0
 12231  001CF8  0012               	return		;funcret
 12232  001CFA                     __end_of_CalculateSensorSumDiscrete:
 12233                           	opt stack 0
 12234                           prodh	equ	0xFF4
 12235                           prodl	equ	0xFF3
 12236                           intcon	equ	0xFF2
 12237                           intcon2	equ	0xFF1
 12238                           intcon3	equ	0xFF0
 12239                           postinc0	equ	0xFEE
 12240                           wreg	equ	0xFE8
 12241                           postinc1	equ	0xFE6
 12242                           fsr1h	equ	0xFE2
 12243                           fsr1l	equ	0xFE1
 12244                           indf2	equ	0xFDF
 12245                           postinc2	equ	0xFDE
 12246                           postdec2	equ	0xFDD
 12247                           fsr2h	equ	0xFDA
 12248                           fsr2l	equ	0xFD9
 12249                           status	equ	0xFD8
 12250                           
 12251 ;; *************** function _BusyDistanceAcq *****************
 12252 ;; Defined at:
 12253 ;;		line 61 in file "Ultrasound.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      unsigned char 
 12260 ;; Registers used:
 12261 ;;		wreg, status,2
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:    7
 12274 ;; This function calls:
 12275 ;;		Nothing
 12276 ;; This function is called by:
 12277 ;;		_main
 12278 ;; This function uses a non-reentrant model
 12279 ;;
 12280                           
 12281                           	psect	text100
 12282  0023CC                     __ptext100:
 12283                           	opt stack 0
 12284  0023CC                     _BusyDistanceAcq:
 12285                           	opt stack 23
 12286                           
 12287                           ;Ultrasound.c: 63: return (!echo_acq_done);
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;incstack = 0
 12291  0023CC  501C               	movf	_echo_acq_done,w,c
 12292  0023CE  A4D8               	btfss	status,2,c
 12293  0023D0  D002               	goto	u5290
 12294  0023D2  0E01               	movlw	1
 12295  0023D4  D002               	goto	l36
 12296  0023D6                     u5290:
 12297  0023D6  0E00               	movlw	0
 12298  0023D8  D000               	goto	l36
 12299  0023DA                     l36:
 12300  0023DA  0012               	return		;funcret
 12301  0023DC                     __end_of_BusyDistanceAcq:
 12302                           	opt stack 0
 12303                           prodh	equ	0xFF4
 12304                           prodl	equ	0xFF3
 12305                           intcon	equ	0xFF2
 12306                           intcon2	equ	0xFF1
 12307                           intcon3	equ	0xFF0
 12308                           postinc0	equ	0xFEE
 12309                           wreg	equ	0xFE8
 12310                           postinc1	equ	0xFE6
 12311                           fsr1h	equ	0xFE2
 12312                           fsr1l	equ	0xFE1
 12313                           indf2	equ	0xFDF
 12314                           postinc2	equ	0xFDE
 12315                           postdec2	equ	0xFDD
 12316                           fsr2h	equ	0xFDA
 12317                           fsr2l	equ	0xFD9
 12318                           status	equ	0xFD8
 12319                           
 12320 ;; *************** function _isrLP *****************
 12321 ;; Defined at:
 12322 ;;		line 658 in file "FastBuggy17_Main_Code_TUNING.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;		None
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;		None               void
 12329 ;; Registers used:
 12330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;Total ram usage:       17 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:    6
 12343 ;; This function calls:
 12344 ;;		_WirelessTx_ISR
 12345 ;;		i1_ConvertADC
 12346 ;;		i1_ReadADC
 12347 ;;		i1_SetADCChannel
 12348 ;; This function is called by:
 12349 ;;		Interrupt level 1
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	intcodelo
 12354  000018                     __pintcodelo:
 12355                           	opt stack 0
 12356  000018                     _isrLP:
 12357                           	opt stack 18
 12358                           
 12359                           ;incstack = 0
 12360  000018  CFD8 F033          	movff	status,??_isrLP
 12361  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 12362  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 12363  000024  CFFA F036          	movff	pclath,??_isrLP+3
 12364  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 12365  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 12366  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 12367  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 12368  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 12369  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 12370  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 12371  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 12372  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 12373  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 12374  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 12375  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 12376  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 12377                           
 12378                           ;FastBuggy17_Main_Code_TUNING.c: 661: if (PIR1bits.ADIF == 1) {
 12379  00005C  AC9E               	btfss	3998,6,c	;volatile
 12380  00005E  D01D               	goto	i1l955
 12381                           
 12382                           ;FastBuggy17_Main_Code_TUNING.c: 662: PIR1bits.ADIF = 0;
 12383  000060  9C9E               	bcf	3998,6,c	;volatile
 12384                           
 12385                           ;FastBuggy17_Main_Code_TUNING.c: 663: if (sensor_acq_index < 5) {
 12386  000062  0E05               	movlw	5
 12387  000064  6023               	cpfslt	_sensor_acq_index,c	;volatile
 12388  000066  D015               	goto	i1l5087
 12389                           
 12390                           ;FastBuggy17_Main_Code_TUNING.c: 664: *(sensor_readings_raw + sensor_acq_index) = ReadAD
      +                          C();
 12391  000068  ECEE  F011         	call	i1_ReadADC	;wreg free
 12392  00006C  5023               	movf	_sensor_acq_index,w,c	;volatile
 12393  00006E  0D02               	mullw	2
 12394  000070  0E95               	movlw	low _sensor_readings_raw
 12395  000072  24F3               	addwf	prodl,w,c
 12396  000074  6ED9               	movwf	fsr2l,c
 12397  000076  0E00               	movlw	high _sensor_readings_raw
 12398  000078  20F4               	addwfc	prodh,w,c
 12399  00007A  6EDA               	movwf	fsr2h,c
 12400  00007C  C02B  FFDE         	movff	?i1_ReadADC,postinc2
 12401  000080  C02C  FFDD         	movff	?i1_ReadADC+1,postdec2
 12402                           
 12403                           ;FastBuggy17_Main_Code_TUNING.c: 665: sensor_acq_index++;
 12404  000084  2A23               	incf	_sensor_acq_index,f,c	;volatile
 12405                           
 12406                           ;FastBuggy17_Main_Code_TUNING.c: 666: SetADCChannel(sensor_acq_index);
 12407  000086  5023               	movf	_sensor_acq_index,w,c	;volatile
 12408  000088  ECD6  F006         	call	i1_SetADCChannel
 12409                           
 12410                           ;FastBuggy17_Main_Code_TUNING.c: 667: ConvertADC();
 12411  00008C  EC60  F012         	call	i1_ConvertADC	;wreg free
 12412                           
 12413                           ;FastBuggy17_Main_Code_TUNING.c: 668: } else {
 12414  000090  D00A               	goto	i1l960
 12415  000092                     i1l5087:
 12416                           
 12417                           ;FastBuggy17_Main_Code_TUNING.c: 669: sensor_acq_done = 1;
 12418  000092  0E01               	movlw	1
 12419  000094  6E22               	movwf	_sensor_acq_done,c	;volatile
 12420                           
 12421                           ;FastBuggy17_Main_Code_TUNING.c: 670: PIE1bits.ADIE = 0;
 12422  000096  9C9D               	bcf	3997,6,c	;volatile
 12423                           
 12424                           ;FastBuggy17_Main_Code_TUNING.c: 671: }
 12425                           ;FastBuggy17_Main_Code_TUNING.c: 672: }
 12426  000098  D006               	goto	i1l960
 12427  00009A                     i1l955:
 12428                           
 12429                           ;FastBuggy17_Main_Code_TUNING.c: 674: else if(PIR1bits.TX1IF == 1) {
 12430  00009A  A89E               	btfss	3998,4,c	;volatile
 12431  00009C  D004               	goto	i1l960
 12432                           
 12433                           ;FastBuggy17_Main_Code_TUNING.c: 675: PIR1bits.TX1IF = 0;
 12434  00009E  989E               	bcf	3998,4,c	;volatile
 12435                           
 12436                           ;FastBuggy17_Main_Code_TUNING.c: 676: WirelessTx_ISR();
 12437  0000A0  ECBE  F010         	call	_WirelessTx_ISR	;wreg free
 12438  0000A4  D000               	goto	i1l960
 12439  0000A6                     i1l960:
 12440  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 12441  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 12442  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 12443  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 12444  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 12445  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 12446  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 12447  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 12448  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 12449  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 12450  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 12451  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 12452  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 12453  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 12454  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 12455  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 12456  0000E6  C033  FFD8         	movff	??_isrLP,status
 12457  0000EA  0010               	retfie	
 12458  0000EC                     __end_of_isrLP:
 12459                           	opt stack 0
 12460                           pclatu	equ	0xFFB
 12461                           pclath	equ	0xFFA
 12462                           tblptru	equ	0xFF8
 12463                           tblptrh	equ	0xFF7
 12464                           tblptrl	equ	0xFF6
 12465                           tablat	equ	0xFF5
 12466                           prodh	equ	0xFF4
 12467                           prodl	equ	0xFF3
 12468                           intcon	equ	0xFF2
 12469                           intcon2	equ	0xFF1
 12470                           intcon3	equ	0xFF0
 12471                           postinc0	equ	0xFEE
 12472                           fsr0h	equ	0xFEA
 12473                           fsr0l	equ	0xFE9
 12474                           wreg	equ	0xFE8
 12475                           postinc1	equ	0xFE6
 12476                           fsr1h	equ	0xFE2
 12477                           fsr1l	equ	0xFE1
 12478                           bsr	equ	0xFE0
 12479                           indf2	equ	0xFDF
 12480                           postinc2	equ	0xFDE
 12481                           postdec2	equ	0xFDD
 12482                           fsr2h	equ	0xFDA
 12483                           fsr2l	equ	0xFD9
 12484                           status	equ	0xFD8
 12485                           
 12486 ;; *************** function i1_SetADCChannel *****************
 12487 ;; Defined at:
 12488 ;;		line 238 in file "FastBuggy17_Main_Code_TUNING.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  channel         1    wreg     unsigned char 
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;  channel         1    2[COMRAM] unsigned char 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;		None               void
 12495 ;; Registers used:
 12496 ;;		wreg, status,2, status,0, cstack
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;Total ram usage:        1 bytes
 12507 ;; Hardware stack levels used:    1
 12508 ;; Hardware stack levels required when called:    4
 12509 ;; This function calls:
 12510 ;;		i1_SetChanADC
 12511 ;; This function is called by:
 12512 ;;		_isrLP
 12513 ;; This function uses a non-reentrant model
 12514 ;;
 12515                           
 12516                           	psect	text102
 12517  000DAC                     __ptext102:
 12518                           	opt stack 0
 12519  000DAC                     i1_SetADCChannel:
 12520                           	opt stack 19
 12521                           
 12522                           ;incstack = 0
 12523                           ;i1SetADCChannel@channel stored from wreg
 12524  000DAC  6E2D               	movwf	i1SetADCChannel@channel,c
 12525                           
 12526                           ;FastBuggy17_Main_Code_TUNING.c: 240: switch (channel) {
 12527  000DAE  D040               	goto	i1l4885
 12528  000DB0                     i1l4851:
 12529                           
 12530                           ;FastBuggy17_Main_Code_TUNING.c: 242: SetChanADC(0b10000111);
 12531  000DB0  0E87               	movlw	135
 12532  000DB2  EC5C  F011         	call	i1_SetChanADC
 12533                           
 12534                           ;FastBuggy17_Main_Code_TUNING.c: 243: break;
 12535  000DB6  D06E               	goto	i1l800
 12536  000DB8                     i1l4853:
 12537                           
 12538                           ;FastBuggy17_Main_Code_TUNING.c: 245: SetChanADC(0b10001111);
 12539  000DB8  0E8F               	movlw	143
 12540  000DBA  EC5C  F011         	call	i1_SetChanADC
 12541                           
 12542                           ;FastBuggy17_Main_Code_TUNING.c: 246: break;
 12543  000DBE  D06A               	goto	i1l800
 12544  000DC0                     i1l4855:
 12545                           
 12546                           ;FastBuggy17_Main_Code_TUNING.c: 248: SetChanADC(0b10010111);
 12547  000DC0  0E97               	movlw	151
 12548  000DC2  EC5C  F011         	call	i1_SetChanADC
 12549                           
 12550                           ;FastBuggy17_Main_Code_TUNING.c: 249: break;
 12551  000DC6  D066               	goto	i1l800
 12552  000DC8                     i1l4857:
 12553                           
 12554                           ;FastBuggy17_Main_Code_TUNING.c: 251: SetChanADC(0b10011111);
 12555  000DC8  0E9F               	movlw	159
 12556  000DCA  EC5C  F011         	call	i1_SetChanADC
 12557                           
 12558                           ;FastBuggy17_Main_Code_TUNING.c: 252: break;
 12559  000DCE  D062               	goto	i1l800
 12560  000DD0                     i1l4859:
 12561                           
 12562                           ;FastBuggy17_Main_Code_TUNING.c: 254: SetChanADC(0b10100111);
 12563  000DD0  0EA7               	movlw	167
 12564  000DD2  EC5C  F011         	call	i1_SetChanADC
 12565                           
 12566                           ;FastBuggy17_Main_Code_TUNING.c: 255: break;
 12567  000DD6  D05E               	goto	i1l800
 12568  000DD8                     i1l4861:
 12569                           
 12570                           ;FastBuggy17_Main_Code_TUNING.c: 257: SetChanADC(0b10101111);
 12571  000DD8  0EAF               	movlw	175
 12572  000DDA  EC5C  F011         	call	i1_SetChanADC
 12573                           
 12574                           ;FastBuggy17_Main_Code_TUNING.c: 258: break;
 12575  000DDE  D05A               	goto	i1l800
 12576  000DE0                     i1l4863:
 12577                           
 12578                           ;FastBuggy17_Main_Code_TUNING.c: 260: SetChanADC(0b10110111);
 12579  000DE0  0EB7               	movlw	183
 12580  000DE2  EC5C  F011         	call	i1_SetChanADC
 12581                           
 12582                           ;FastBuggy17_Main_Code_TUNING.c: 261: break;
 12583  000DE6  D056               	goto	i1l800
 12584  000DE8                     i1l4865:
 12585                           
 12586                           ;FastBuggy17_Main_Code_TUNING.c: 263: SetChanADC(0b10111111);
 12587  000DE8  0EBF               	movlw	191
 12588  000DEA  EC5C  F011         	call	i1_SetChanADC
 12589                           
 12590                           ;FastBuggy17_Main_Code_TUNING.c: 264: break;
 12591  000DEE  D052               	goto	i1l800
 12592  000DF0                     i1l4867:
 12593                           
 12594                           ;FastBuggy17_Main_Code_TUNING.c: 266: SetChanADC(0b11000111);
 12595  000DF0  0EC7               	movlw	199
 12596  000DF2  EC5C  F011         	call	i1_SetChanADC
 12597                           
 12598                           ;FastBuggy17_Main_Code_TUNING.c: 267: break;
 12599  000DF6  D04E               	goto	i1l800
 12600  000DF8                     i1l4869:
 12601                           
 12602                           ;FastBuggy17_Main_Code_TUNING.c: 269: SetChanADC(0b11001111);
 12603  000DF8  0ECF               	movlw	207
 12604  000DFA  EC5C  F011         	call	i1_SetChanADC
 12605                           
 12606                           ;FastBuggy17_Main_Code_TUNING.c: 270: break;
 12607  000DFE  D04A               	goto	i1l800
 12608  000E00                     i1l4871:
 12609                           
 12610                           ;FastBuggy17_Main_Code_TUNING.c: 272: SetChanADC(0b11010111);
 12611  000E00  0ED7               	movlw	215
 12612  000E02  EC5C  F011         	call	i1_SetChanADC
 12613                           
 12614                           ;FastBuggy17_Main_Code_TUNING.c: 273: break;
 12615  000E06  D046               	goto	i1l800
 12616  000E08                     i1l4873:
 12617                           
 12618                           ;FastBuggy17_Main_Code_TUNING.c: 275: SetChanADC(0b11011111);
 12619  000E08  0EDF               	movlw	223
 12620  000E0A  EC5C  F011         	call	i1_SetChanADC
 12621                           
 12622                           ;FastBuggy17_Main_Code_TUNING.c: 276: break;
 12623  000E0E  D042               	goto	i1l800
 12624  000E10                     i1l4875:
 12625                           
 12626                           ;FastBuggy17_Main_Code_TUNING.c: 278: SetChanADC(0b11100111);
 12627  000E10  0EE7               	movlw	231
 12628  000E12  EC5C  F011         	call	i1_SetChanADC
 12629                           
 12630                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
 12631  000E16  D03E               	goto	i1l800
 12632  000E18                     i1l4877:
 12633                           
 12634                           ;FastBuggy17_Main_Code_TUNING.c: 281: SetChanADC(0b11101111);
 12635  000E18  0EEF               	movlw	239
 12636  000E1A  EC5C  F011         	call	i1_SetChanADC
 12637                           
 12638                           ;FastBuggy17_Main_Code_TUNING.c: 282: break;
 12639  000E1E  D03A               	goto	i1l800
 12640  000E20                     i1l4879:
 12641                           
 12642                           ;FastBuggy17_Main_Code_TUNING.c: 284: SetChanADC(0b11110111);
 12643  000E20  0EF7               	movlw	247
 12644  000E22  EC5C  F011         	call	i1_SetChanADC
 12645                           
 12646                           ;FastBuggy17_Main_Code_TUNING.c: 285: break;
 12647  000E26  D036               	goto	i1l800
 12648  000E28                     i1l4881:
 12649                           
 12650                           ;FastBuggy17_Main_Code_TUNING.c: 287: SetChanADC(0b11111111);
 12651  000E28  0EFF               	movlw	255
 12652  000E2A  EC5C  F011         	call	i1_SetChanADC
 12653                           
 12654                           ;FastBuggy17_Main_Code_TUNING.c: 291: }
 12655                           
 12656                           ;FastBuggy17_Main_Code_TUNING.c: 290: break;
 12657                           
 12658                           ;FastBuggy17_Main_Code_TUNING.c: 289: default:
 12659                           
 12660                           ;FastBuggy17_Main_Code_TUNING.c: 288: break;
 12661  000E2E  D032               	goto	i1l800
 12662  000E30                     i1l4885:
 12663  000E30  502D               	movf	i1SetADCChannel@channel,w,c
 12664                           
 12665                           ; Switch size 1, requested type "space"
 12666                           ; Number of cases is 16, Range of values is 0 to 15
 12667                           ; switch strategies available:
 12668                           ; Name         Instructions Cycles
 12669                           ; simple_byte           49    25 (average)
 12670                           ;	Chosen strategy is simple_byte
 12671  000E32  0A00               	xorlw	0	; case 0
 12672  000E34  B4D8               	btfsc	status,2,c
 12673  000E36  D7BC               	goto	i1l4851
 12674  000E38  0A01               	xorlw	1	; case 1
 12675  000E3A  B4D8               	btfsc	status,2,c
 12676  000E3C  D7BD               	goto	i1l4853
 12677  000E3E  0A03               	xorlw	3	; case 2
 12678  000E40  B4D8               	btfsc	status,2,c
 12679  000E42  D7BE               	goto	i1l4855
 12680  000E44  0A01               	xorlw	1	; case 3
 12681  000E46  B4D8               	btfsc	status,2,c
 12682  000E48  D7BF               	goto	i1l4857
 12683  000E4A  0A07               	xorlw	7	; case 4
 12684  000E4C  B4D8               	btfsc	status,2,c
 12685  000E4E  D7C0               	goto	i1l4859
 12686  000E50  0A01               	xorlw	1	; case 5
 12687  000E52  B4D8               	btfsc	status,2,c
 12688  000E54  D7C1               	goto	i1l4861
 12689  000E56  0A03               	xorlw	3	; case 6
 12690  000E58  B4D8               	btfsc	status,2,c
 12691  000E5A  D7C2               	goto	i1l4863
 12692  000E5C  0A01               	xorlw	1	; case 7
 12693  000E5E  B4D8               	btfsc	status,2,c
 12694  000E60  D7C3               	goto	i1l4865
 12695  000E62  0A0F               	xorlw	15	; case 8
 12696  000E64  B4D8               	btfsc	status,2,c
 12697  000E66  D7C4               	goto	i1l4867
 12698  000E68  0A01               	xorlw	1	; case 9
 12699  000E6A  B4D8               	btfsc	status,2,c
 12700  000E6C  D7C5               	goto	i1l4869
 12701  000E6E  0A03               	xorlw	3	; case 10
 12702  000E70  B4D8               	btfsc	status,2,c
 12703  000E72  D7C6               	goto	i1l4871
 12704  000E74  0A01               	xorlw	1	; case 11
 12705  000E76  B4D8               	btfsc	status,2,c
 12706  000E78  D7C7               	goto	i1l4873
 12707  000E7A  0A07               	xorlw	7	; case 12
 12708  000E7C  B4D8               	btfsc	status,2,c
 12709  000E7E  D7C8               	goto	i1l4875
 12710  000E80  0A01               	xorlw	1	; case 13
 12711  000E82  B4D8               	btfsc	status,2,c
 12712  000E84  D7C9               	goto	i1l4877
 12713  000E86  0A03               	xorlw	3	; case 14
 12714  000E88  B4D8               	btfsc	status,2,c
 12715  000E8A  D7CA               	goto	i1l4879
 12716  000E8C  0A01               	xorlw	1	; case 15
 12717  000E8E  B4D8               	btfsc	status,2,c
 12718  000E90  D7CB               	goto	i1l4881
 12719  000E92  D000               	goto	i1l800
 12720  000E94                     i1l800:
 12721  000E94  0012               	return		;funcret
 12722  000E96                     __end_ofi1_SetADCChannel:
 12723                           	opt stack 0
 12724                           pclatu	equ	0xFFB
 12725                           pclath	equ	0xFFA
 12726                           tblptru	equ	0xFF8
 12727                           tblptrh	equ	0xFF7
 12728                           tblptrl	equ	0xFF6
 12729                           tablat	equ	0xFF5
 12730                           prodh	equ	0xFF4
 12731                           prodl	equ	0xFF3
 12732                           intcon	equ	0xFF2
 12733                           intcon2	equ	0xFF1
 12734                           intcon3	equ	0xFF0
 12735                           postinc0	equ	0xFEE
 12736                           fsr0h	equ	0xFEA
 12737                           fsr0l	equ	0xFE9
 12738                           wreg	equ	0xFE8
 12739                           postinc1	equ	0xFE6
 12740                           fsr1h	equ	0xFE2
 12741                           fsr1l	equ	0xFE1
 12742                           bsr	equ	0xFE0
 12743                           indf2	equ	0xFDF
 12744                           postinc2	equ	0xFDE
 12745                           postdec2	equ	0xFDD
 12746                           fsr2h	equ	0xFDA
 12747                           fsr2l	equ	0xFD9
 12748                           status	equ	0xFD8
 12749                           
 12750 ;; *************** function i1_SetChanADC *****************
 12751 ;; Defined at:
 12752 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  channel         1    wreg     unsigned char 
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  channel         1    1[COMRAM] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;		None               void
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;Total ram usage:        2 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:    3
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		i1_SetADCChannel
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text103
 12781  0022B8                     __ptext103:
 12782                           	opt stack 0
 12783  0022B8                     i1_SetChanADC:
 12784                           	opt stack 19
 12785                           
 12786                           ;incstack = 0
 12787                           ;i1SetChanADC@channel stored from wreg
 12788  0022B8  6E2C               	movwf	i1SetChanADC@channel,c
 12789  0022BA  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 12790  0022BE  0EC3               	movlw	195
 12791  0022C0  162B               	andwf	??i1_SetChanADC,f,c
 12792  0022C2  90D8               	bcf	status,0,c
 12793  0022C4  302C               	rrcf	i1SetChanADC@channel,w,c
 12794  0022C6  0B3C               	andlw	60
 12795  0022C8  102B               	iorwf	??i1_SetChanADC,w,c
 12796  0022CA  6EC2               	movwf	4034,c	;volatile
 12797  0022CC  0012               	return		;funcret
 12798  0022CE                     __end_ofi1_SetChanADC:
 12799                           	opt stack 0
 12800                           pclatu	equ	0xFFB
 12801                           pclath	equ	0xFFA
 12802                           tblptru	equ	0xFF8
 12803                           tblptrh	equ	0xFF7
 12804                           tblptrl	equ	0xFF6
 12805                           tablat	equ	0xFF5
 12806                           prodh	equ	0xFF4
 12807                           prodl	equ	0xFF3
 12808                           intcon	equ	0xFF2
 12809                           intcon2	equ	0xFF1
 12810                           intcon3	equ	0xFF0
 12811                           postinc0	equ	0xFEE
 12812                           fsr0h	equ	0xFEA
 12813                           fsr0l	equ	0xFE9
 12814                           wreg	equ	0xFE8
 12815                           postinc1	equ	0xFE6
 12816                           fsr1h	equ	0xFE2
 12817                           fsr1l	equ	0xFE1
 12818                           bsr	equ	0xFE0
 12819                           indf2	equ	0xFDF
 12820                           postinc2	equ	0xFDE
 12821                           postdec2	equ	0xFDD
 12822                           fsr2h	equ	0xFDA
 12823                           fsr2l	equ	0xFD9
 12824                           status	equ	0xFD8
 12825                           
 12826 ;; *************** function i1_ReadADC *****************
 12827 ;; Defined at:
 12828 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  2    0[COMRAM] int 
 12835 ;; Registers used:
 12836 ;;		wreg, status,2
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12846 ;;Total ram usage:        4 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    3
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		_isrLP
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           	psect	text104
 12857  0023DC                     __ptext104:
 12858                           	opt stack 0
 12859  0023DC                     i1_ReadADC:
 12860                           	opt stack 20
 12861                           
 12862                           ;incstack = 0
 12863  0023DC  50C4               	movf	4036,w,c	;volatile
 12864  0023DE  6E2D               	movwf	??i1_ReadADC& (0+255),c
 12865  0023E0  50C3               	movf	4035,w,c	;volatile
 12866  0023E2  6E2B               	movwf	?i1_ReadADC,c
 12867  0023E4  C02D  F02C         	movff	??i1_ReadADC,?i1_ReadADC+1
 12868  0023E8  D000               	goto	i1l1063
 12869  0023EA                     i1l1063:
 12870  0023EA  0012               	return		;funcret
 12871  0023EC                     __end_ofi1_ReadADC:
 12872                           	opt stack 0
 12873                           pclatu	equ	0xFFB
 12874                           pclath	equ	0xFFA
 12875                           tblptru	equ	0xFF8
 12876                           tblptrh	equ	0xFF7
 12877                           tblptrl	equ	0xFF6
 12878                           tablat	equ	0xFF5
 12879                           prodh	equ	0xFF4
 12880                           prodl	equ	0xFF3
 12881                           intcon	equ	0xFF2
 12882                           intcon2	equ	0xFF1
 12883                           intcon3	equ	0xFF0
 12884                           postinc0	equ	0xFEE
 12885                           fsr0h	equ	0xFEA
 12886                           fsr0l	equ	0xFE9
 12887                           wreg	equ	0xFE8
 12888                           postinc1	equ	0xFE6
 12889                           fsr1h	equ	0xFE2
 12890                           fsr1l	equ	0xFE1
 12891                           bsr	equ	0xFE0
 12892                           indf2	equ	0xFDF
 12893                           postinc2	equ	0xFDE
 12894                           postdec2	equ	0xFDD
 12895                           fsr2h	equ	0xFDA
 12896                           fsr2l	equ	0xFD9
 12897                           status	equ	0xFD8
 12898                           
 12899 ;; *************** function i1_ConvertADC *****************
 12900 ;; Defined at:
 12901 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;		None               void
 12908 ;; Registers used:
 12909 ;;		None
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;Total ram usage:        0 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    3
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_isrLP
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text105
 12930  0024C0                     __ptext105:
 12931                           	opt stack 0
 12932  0024C0                     i1_ConvertADC:
 12933                           	opt stack 20
 12934                           
 12935                           ;incstack = 0
 12936  0024C0  82C2               	bsf	4034,1,c	;volatile
 12937  0024C2  0012               	return		;funcret
 12938  0024C4                     __end_ofi1_ConvertADC:
 12939                           	opt stack 0
 12940                           pclatu	equ	0xFFB
 12941                           pclath	equ	0xFFA
 12942                           tblptru	equ	0xFF8
 12943                           tblptrh	equ	0xFF7
 12944                           tblptrl	equ	0xFF6
 12945                           tablat	equ	0xFF5
 12946                           prodh	equ	0xFF4
 12947                           prodl	equ	0xFF3
 12948                           intcon	equ	0xFF2
 12949                           intcon2	equ	0xFF1
 12950                           intcon3	equ	0xFF0
 12951                           postinc0	equ	0xFEE
 12952                           fsr0h	equ	0xFEA
 12953                           fsr0l	equ	0xFE9
 12954                           wreg	equ	0xFE8
 12955                           postinc1	equ	0xFE6
 12956                           fsr1h	equ	0xFE2
 12957                           fsr1l	equ	0xFE1
 12958                           bsr	equ	0xFE0
 12959                           indf2	equ	0xFDF
 12960                           postinc2	equ	0xFDE
 12961                           postdec2	equ	0xFDD
 12962                           fsr2h	equ	0xFDA
 12963                           fsr2l	equ	0xFD9
 12964                           status	equ	0xFD8
 12965                           
 12966 ;; *************** function _WirelessTx_ISR *****************
 12967 ;; Defined at:
 12968 ;;		line 61 in file "Wireless.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;		None               void
 12975 ;; Registers used:
 12976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;Total ram usage:        0 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; Hardware stack levels required when called:    5
 12989 ;; This function calls:
 12990 ;;		_GetCharTxBuf
 12991 ;;		_Write1USART
 12992 ;; This function is called by:
 12993 ;;		_isrLP
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           	psect	text106
 12998  00217C                     __ptext106:
 12999                           	opt stack 0
 13000  00217C                     _WirelessTx_ISR:
 13001                           	opt stack 18
 13002                           
 13003                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 13004                           
 13005                           ;incstack = 0
 13006  00217C  EC29  F00F         	call	_GetCharTxBuf	;wreg free
 13007  002180  6E19               	movwf	_TxCharacter,c	;volatile
 13008                           
 13009                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 13010  002182  0E0A               	movlw	10
 13011  002184  1819               	xorwf	_TxCharacter,w,c	;volatile
 13012  002186  A4D8               	btfss	status,2,c
 13013  002188  D007               	goto	i1l4567
 13014                           
 13015                           ;Wireless.c: 64: Write1USART(TxCharacter);
 13016  00218A  5019               	movf	_TxCharacter,w,c	;volatile
 13017  00218C  EC67  F011         	call	_Write1USART
 13018                           
 13019                           ;Wireless.c: 65: Tx_complete = 1;
 13020  002190  0E01               	movlw	1
 13021  002192  6E1A               	movwf	_Tx_complete,c
 13022                           
 13023                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 13024  002194  989D               	bcf	3997,4,c	;volatile
 13025                           
 13026                           ;Wireless.c: 67: }
 13027  002196  D004               	goto	i1l303
 13028  002198                     i1l4567:
 13029                           
 13030                           ;Wireless.c: 68: else {
 13031                           ;Wireless.c: 69: Write1USART(TxCharacter);
 13032  002198  5019               	movf	_TxCharacter,w,c	;volatile
 13033  00219A  EC67  F011         	call	_Write1USART
 13034  00219E  D000               	goto	i1l303
 13035  0021A0                     i1l303:
 13036  0021A0  0012               	return		;funcret
 13037  0021A2                     __end_of_WirelessTx_ISR:
 13038                           	opt stack 0
 13039                           pclatu	equ	0xFFB
 13040                           pclath	equ	0xFFA
 13041                           tblptru	equ	0xFF8
 13042                           tblptrh	equ	0xFF7
 13043                           tblptrl	equ	0xFF6
 13044                           tablat	equ	0xFF5
 13045                           prodh	equ	0xFF4
 13046                           prodl	equ	0xFF3
 13047                           intcon	equ	0xFF2
 13048                           intcon2	equ	0xFF1
 13049                           intcon3	equ	0xFF0
 13050                           postinc0	equ	0xFEE
 13051                           fsr0h	equ	0xFEA
 13052                           fsr0l	equ	0xFE9
 13053                           wreg	equ	0xFE8
 13054                           postinc1	equ	0xFE6
 13055                           fsr1h	equ	0xFE2
 13056                           fsr1l	equ	0xFE1
 13057                           bsr	equ	0xFE0
 13058                           indf2	equ	0xFDF
 13059                           postinc2	equ	0xFDE
 13060                           postdec2	equ	0xFDD
 13061                           fsr2h	equ	0xFDA
 13062                           fsr2l	equ	0xFD9
 13063                           status	equ	0xFD8
 13064                           
 13065 ;; *************** function _Write1USART *****************
 13066 ;; Defined at:
 13067 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  data            1    wreg     unsigned char 
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;  data            1    0[COMRAM] unsigned char 
 13072 ;; Return value:  Size  Location     Type
 13073 ;;		None               void
 13074 ;; Registers used:
 13075 ;;		wreg
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;Total ram usage:        1 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:    3
 13088 ;; This function calls:
 13089 ;;		Nothing
 13090 ;; This function is called by:
 13091 ;;		_WirelessTx_ISR
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095                           	psect	text107
 13096  0022CE                     __ptext107:
 13097                           	opt stack 0
 13098  0022CE                     _Write1USART:
 13099                           	opt stack 19
 13100                           
 13101                           ;incstack = 0
 13102                           ;Write1USART@data stored from wreg
 13103  0022CE  6E2B               	movwf	Write1USART@data,c
 13104  0022D0  ACAC               	btfss	4012,6,c	;volatile
 13105  0022D2  D005               	goto	i1l4183
 13106  0022D4  90AC               	bcf	4012,0,c	;volatile
 13107  0022D6  A21B               	btfss	_USART1_Status,1,c
 13108  0022D8  D002               	goto	i1l4183
 13109  0022DA  80AC               	bsf	4012,0,c	;volatile
 13110  0022DC  D000               	goto	i1l4183
 13111  0022DE                     i1l4183:
 13112  0022DE  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 13113  0022E2  0012               	return		;funcret
 13114  0022E4                     __end_of_Write1USART:
 13115                           	opt stack 0
 13116                           pclatu	equ	0xFFB
 13117                           pclath	equ	0xFFA
 13118                           tblptru	equ	0xFF8
 13119                           tblptrh	equ	0xFF7
 13120                           tblptrl	equ	0xFF6
 13121                           tablat	equ	0xFF5
 13122                           prodh	equ	0xFF4
 13123                           prodl	equ	0xFF3
 13124                           intcon	equ	0xFF2
 13125                           intcon2	equ	0xFF1
 13126                           intcon3	equ	0xFF0
 13127                           postinc0	equ	0xFEE
 13128                           fsr0h	equ	0xFEA
 13129                           fsr0l	equ	0xFE9
 13130                           wreg	equ	0xFE8
 13131                           postinc1	equ	0xFE6
 13132                           fsr1h	equ	0xFE2
 13133                           fsr1l	equ	0xFE1
 13134                           bsr	equ	0xFE0
 13135                           indf2	equ	0xFDF
 13136                           postinc2	equ	0xFDE
 13137                           postdec2	equ	0xFDD
 13138                           fsr2h	equ	0xFDA
 13139                           fsr2l	equ	0xFD9
 13140                           status	equ	0xFD8
 13141                           
 13142 ;; *************** function _GetCharTxBuf *****************
 13143 ;; Defined at:
 13144 ;;		line 15 in file "Wireless.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  ch              1    7[COMRAM] unsigned char 
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      unsigned char 
 13151 ;; Registers used:
 13152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;Total ram usage:        2 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    4
 13165 ;; This function calls:
 13166 ;;		i1___awmod
 13167 ;; This function is called by:
 13168 ;;		_WirelessTx_ISR
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           	psect	text108
 13173  001E52                     __ptext108:
 13174                           	opt stack 0
 13175  001E52                     _GetCharTxBuf:
 13176                           	opt stack 18
 13177                           
 13178                           ;Wireless.c: 16: unsigned char ch;
 13179                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 13180                           
 13181                           ;incstack = 0
 13182  001E52  501E               	movf	_get_Tx_index,w,c
 13183  001E54  0D01               	mullw	1
 13184  001E56  0E60               	movlw	low _Tx_buffer
 13185  001E58  24F3               	addwf	prodl,w,c
 13186  001E5A  6ED9               	movwf	fsr2l,c
 13187  001E5C  0E00               	movlw	high _Tx_buffer
 13188  001E5E  20F4               	addwfc	prodh,w,c
 13189  001E60  6EDA               	movwf	fsr2h,c
 13190  001E62  50DF               	movf	indf2,w,c
 13191  001E64  6E32               	movwf	GetCharTxBuf@ch,c
 13192                           
 13193                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 13194  001E66  C01E  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 13195  001E6A  0E01               	movlw	1
 13196  001E6C  2631               	addwf	??_GetCharTxBuf,f,c
 13197  001E6E  5031               	movf	??_GetCharTxBuf,w,c
 13198  001E70  6E2B               	movwf	i1___awmod@dividend,c
 13199  001E72  6A2C               	clrf	i1___awmod@dividend+1,c
 13200  001E74  0E00               	movlw	0
 13201  001E76  6E2E               	movwf	i1___awmod@divisor+1,c
 13202  001E78  0E19               	movlw	25
 13203  001E7A  6E2D               	movwf	i1___awmod@divisor,c
 13204  001E7C  EC39  F00A         	call	i1___awmod	;wreg free
 13205  001E80  502B               	movf	?i1___awmod,w,c
 13206  001E82  6E1E               	movwf	_get_Tx_index,c
 13207                           
 13208                           ;Wireless.c: 21: return(ch);
 13209  001E84  5032               	movf	GetCharTxBuf@ch,w,c
 13210  001E86  D000               	goto	i1l280
 13211  001E88                     i1l280:
 13212  001E88  0012               	return		;funcret
 13213  001E8A                     __end_of_GetCharTxBuf:
 13214                           	opt stack 0
 13215                           pclatu	equ	0xFFB
 13216                           pclath	equ	0xFFA
 13217                           tblptru	equ	0xFF8
 13218                           tblptrh	equ	0xFF7
 13219                           tblptrl	equ	0xFF6
 13220                           tablat	equ	0xFF5
 13221                           prodh	equ	0xFF4
 13222                           prodl	equ	0xFF3
 13223                           intcon	equ	0xFF2
 13224                           intcon2	equ	0xFF1
 13225                           intcon3	equ	0xFF0
 13226                           postinc0	equ	0xFEE
 13227                           fsr0h	equ	0xFEA
 13228                           fsr0l	equ	0xFE9
 13229                           wreg	equ	0xFE8
 13230                           postinc1	equ	0xFE6
 13231                           fsr1h	equ	0xFE2
 13232                           fsr1l	equ	0xFE1
 13233                           bsr	equ	0xFE0
 13234                           indf2	equ	0xFDF
 13235                           postinc2	equ	0xFDE
 13236                           postdec2	equ	0xFDD
 13237                           fsr2h	equ	0xFDA
 13238                           fsr2l	equ	0xFD9
 13239                           status	equ	0xFD8
 13240                           
 13241 ;; *************** function i1___awmod *****************
 13242 ;; Defined at:
 13243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 13244 ;; Parameters:    Size  Location     Type
 13245 ;;  dividend        2    0[COMRAM] int 
 13246 ;;  divisor         2    2[COMRAM] int 
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;  __awmod         1    5[COMRAM] unsigned char 
 13249 ;;  __awmod         1    4[COMRAM] unsigned char 
 13250 ;; Return value:  Size  Location     Type
 13251 ;;                  2    0[COMRAM] int 
 13252 ;; Registers used:
 13253 ;;		wreg, status,2, status,0
 13254 ;; Tracked objects:
 13255 ;;		On entry : 0/0
 13256 ;;		On exit  : 0/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;Total ram usage:        6 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    3
 13266 ;; This function calls:
 13267 ;;		Nothing
 13268 ;; This function is called by:
 13269 ;;		_GetCharTxBuf
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text109
 13274  001472                     __ptext109:
 13275                           	opt stack 0
 13276  001472                     i1___awmod:
 13277                           	opt stack 18
 13278                           
 13279                           ;incstack = 0
 13280  001472  0E00               	movlw	0
 13281  001474  6E30               	movwf	i1___awmod@sign,c
 13282  001476  AE2C               	btfss	i1___awmod@dividend+1,7,c
 13283  001478  D007               	goto	i1l4119
 13284  00147A  6C2B               	negf	i1___awmod@dividend,c
 13285  00147C  1E2C               	comf	i1___awmod@dividend+1,f,c
 13286  00147E  B0D8               	btfsc	status,0,c
 13287  001480  2A2C               	incf	i1___awmod@dividend+1,f,c
 13288  001482  0E01               	movlw	1
 13289  001484  6E30               	movwf	i1___awmod@sign,c
 13290  001486  D000               	goto	i1l4119
 13291  001488                     i1l4119:
 13292  001488  AE2E               	btfss	i1___awmod@divisor+1,7,c
 13293  00148A  D005               	goto	i1l4123
 13294  00148C  6C2D               	negf	i1___awmod@divisor,c
 13295  00148E  1E2E               	comf	i1___awmod@divisor+1,f,c
 13296  001490  B0D8               	btfsc	status,0,c
 13297  001492  2A2E               	incf	i1___awmod@divisor+1,f,c
 13298  001494  D000               	goto	i1l4123
 13299  001496                     i1l4123:
 13300  001496  502D               	movf	i1___awmod@divisor,w,c
 13301  001498  102E               	iorwf	i1___awmod@divisor+1,w,c
 13302  00149A  B4D8               	btfsc	status,2,c
 13303  00149C  D01D               	goto	i1l4139
 13304  00149E  0E01               	movlw	1
 13305  0014A0  6E2F               	movwf	i1___awmod@counter,c
 13306  0014A2  D005               	goto	i1l4129
 13307  0014A4                     i1l4127:
 13308  0014A4  90D8               	bcf	status,0,c
 13309  0014A6  362D               	rlcf	i1___awmod@divisor,f,c
 13310  0014A8  362E               	rlcf	i1___awmod@divisor+1,f,c
 13311  0014AA  2A2F               	incf	i1___awmod@counter,f,c
 13312  0014AC  D000               	goto	i1l4129
 13313  0014AE                     i1l4129:
 13314  0014AE  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 13315  0014B0  D002               	goto	i1l4131
 13316  0014B2  D7F8               	goto	i1l4127
 13317  0014B4  D000               	goto	i1l4131
 13318  0014B6                     i1l4131:
 13319  0014B6  502D               	movf	i1___awmod@divisor,w,c
 13320  0014B8  5C2B               	subwf	i1___awmod@dividend,w,c
 13321  0014BA  502E               	movf	i1___awmod@divisor+1,w,c
 13322  0014BC  582C               	subwfb	i1___awmod@dividend+1,w,c
 13323  0014BE  A0D8               	btfss	status,0,c
 13324  0014C0  D005               	goto	i1l4135
 13325  0014C2  502D               	movf	i1___awmod@divisor,w,c
 13326  0014C4  5E2B               	subwf	i1___awmod@dividend,f,c
 13327  0014C6  502E               	movf	i1___awmod@divisor+1,w,c
 13328  0014C8  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 13329  0014CA  D000               	goto	i1l4135
 13330  0014CC                     i1l4135:
 13331  0014CC  90D8               	bcf	status,0,c
 13332  0014CE  322E               	rrcf	i1___awmod@divisor+1,f,c
 13333  0014D0  322D               	rrcf	i1___awmod@divisor,f,c
 13334  0014D2  2E2F               	decfsz	i1___awmod@counter,f,c
 13335  0014D4  D7F0               	goto	i1l4131
 13336  0014D6  D000               	goto	i1l4139
 13337  0014D8                     i1l4139:
 13338  0014D8  5030               	movf	i1___awmod@sign,w,c
 13339  0014DA  B4D8               	btfsc	status,2,c
 13340  0014DC  D005               	goto	i1l4143
 13341  0014DE  6C2B               	negf	i1___awmod@dividend,c
 13342  0014E0  1E2C               	comf	i1___awmod@dividend+1,f,c
 13343  0014E2  B0D8               	btfsc	status,0,c
 13344  0014E4  2A2C               	incf	i1___awmod@dividend+1,f,c
 13345  0014E6  D000               	goto	i1l4143
 13346  0014E8                     i1l4143:
 13347  0014E8  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 13348  0014EC  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 13349  0014F0  D000               	goto	i1l1454
 13350  0014F2                     i1l1454:
 13351  0014F2  0012               	return		;funcret
 13352  0014F4                     __end_ofi1___awmod:
 13353                           	opt stack 0
 13354                           pclatu	equ	0xFFB
 13355                           pclath	equ	0xFFA
 13356                           tblptru	equ	0xFF8
 13357                           tblptrh	equ	0xFF7
 13358                           tblptrl	equ	0xFF6
 13359                           tablat	equ	0xFF5
 13360                           prodh	equ	0xFF4
 13361                           prodl	equ	0xFF3
 13362                           intcon	equ	0xFF2
 13363                           intcon2	equ	0xFF1
 13364                           intcon3	equ	0xFF0
 13365                           postinc0	equ	0xFEE
 13366                           fsr0h	equ	0xFEA
 13367                           fsr0l	equ	0xFE9
 13368                           wreg	equ	0xFE8
 13369                           postinc1	equ	0xFE6
 13370                           fsr1h	equ	0xFE2
 13371                           fsr1l	equ	0xFE1
 13372                           bsr	equ	0xFE0
 13373                           indf2	equ	0xFDF
 13374                           postinc2	equ	0xFDE
 13375                           postdec2	equ	0xFDD
 13376                           fsr2h	equ	0xFDA
 13377                           fsr2l	equ	0xFD9
 13378                           status	equ	0xFD8
 13379                           
 13380 ;; *************** function _isrHP *****************
 13381 ;; Defined at:
 13382 ;;		line 636 in file "FastBuggy17_Main_Code_TUNING.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;		None
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;		None
 13387 ;; Return value:  Size  Location     Type
 13388 ;;		None               void
 13389 ;; Registers used:
 13390 ;;		wreg, status,2, status,0, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;Total ram usage:       14 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:    2
 13403 ;; This function calls:
 13404 ;;		_MillisecondTimerISR
 13405 ;;		_UltrasoundISR
 13406 ;; This function is called by:
 13407 ;;		Interrupt level 2
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	intcode
 13412  000008                     __pintcode:
 13413                           	opt stack 0
 13414  000008                     _isrHP:
 13415                           	opt stack 18
 13416                           
 13417                           ;incstack = 0
 13418  000008  CFFA F0A9          	movff	pclath,??_isrHP
 13419  00000C  CFFB F0AA          	movff	pclatu,??_isrHP+1
 13420  000010  CFE9 F0AB          	movff	fsr0l,??_isrHP+2
 13421  000014  ED7A  F00A         	call	int_func,f	;refresh shadow registers
 13422                           pclatu	equ	0xFFB
 13423                           pclath	equ	0xFFA
 13424                           tblptru	equ	0xFF8
 13425                           tblptrh	equ	0xFF7
 13426                           tblptrl	equ	0xFF6
 13427                           tablat	equ	0xFF5
 13428                           prodh	equ	0xFF4
 13429                           prodl	equ	0xFF3
 13430                           intcon	equ	0xFF2
 13431                           intcon2	equ	0xFF1
 13432                           intcon3	equ	0xFF0
 13433                           postinc0	equ	0xFEE
 13434                           fsr0h	equ	0xFEA
 13435                           fsr0l	equ	0xFE9
 13436                           wreg	equ	0xFE8
 13437                           postinc1	equ	0xFE6
 13438                           fsr1h	equ	0xFE2
 13439                           fsr1l	equ	0xFE1
 13440                           bsr	equ	0xFE0
 13441                           indf2	equ	0xFDF
 13442                           postinc2	equ	0xFDE
 13443                           postdec2	equ	0xFDD
 13444                           fsr2h	equ	0xFDA
 13445                           fsr2l	equ	0xFD9
 13446                           status	equ	0xFD8
 13447                           
 13448                           	psect	intcode_body
 13449  0014F4                     __pintcode_body:
 13450                           	opt stack 18
 13451  0014F4                     int_func:
 13452                           	opt stack 18
 13453  0014F4  0006               	pop		; remove dummy address from shadow register refresh
 13454  0014F6  CFEA F0AC          	movff	fsr0h,??_isrHP+3
 13455  0014FA  CFE1 F0AD          	movff	fsr1l,??_isrHP+4
 13456  0014FE  CFE2 F0AE          	movff	fsr1h,??_isrHP+5
 13457  001502  CFD9 F0AF          	movff	fsr2l,??_isrHP+6
 13458  001506  CFDA F0B0          	movff	fsr2h,??_isrHP+7
 13459  00150A  CFF3 F0B1          	movff	prodl,??_isrHP+8
 13460  00150E  CFF4 F0B2          	movff	prodh,??_isrHP+9
 13461  001512  CFF6 F0B3          	movff	tblptrl,??_isrHP+10
 13462  001516  CFF7 F0B4          	movff	tblptrh,??_isrHP+11
 13463  00151A  CFF8 F0B5          	movff	tblptru,??_isrHP+12
 13464  00151E  CFF5 F0B6          	movff	tablat,??_isrHP+13
 13465                           
 13466                           ;FastBuggy17_Main_Code_TUNING.c: 639: if (INTCONbits.TMR0IF == 1) {
 13467  001522  A4F2               	btfss	intcon,2,c	;volatile
 13468  001524  D004               	goto	i2l949
 13469                           
 13470                           ;FastBuggy17_Main_Code_TUNING.c: 640: INTCONbits.TMR0IF = 0;
 13471  001526  94F2               	bcf	intcon,2,c	;volatile
 13472                           
 13473                           ;FastBuggy17_Main_Code_TUNING.c: 642: MillisecondTimerISR();
 13474  001528  EC1E  F011         	call	_MillisecondTimerISR	;wreg free
 13475                           
 13476                           ;FastBuggy17_Main_Code_TUNING.c: 646: }
 13477  00152C  D006               	goto	i2l952
 13478  00152E                     i2l949:
 13479                           
 13480                           ;FastBuggy17_Main_Code_TUNING.c: 649: else if (INTCON3bits.INT3IF == 1) {
 13481  00152E  A4F0               	btfss	intcon3,2,c	;volatile
 13482  001530  D004               	goto	i2l952
 13483                           
 13484                           ;FastBuggy17_Main_Code_TUNING.c: 650: INTCON3bits.INT3IF = 0;
 13485  001532  94F0               	bcf	intcon3,2,c	;volatile
 13486                           
 13487                           ;FastBuggy17_Main_Code_TUNING.c: 652: UltrasoundISR();
 13488  001534  ECAE  F00F         	call	_UltrasoundISR	;wreg free
 13489  001538  D000               	goto	i2l952
 13490  00153A                     i2l952:
 13491  00153A  C0B6  FFF5         	movff	??_isrHP+13,tablat
 13492  00153E  C0B5  FFF8         	movff	??_isrHP+12,tblptru
 13493  001542  C0B4  FFF7         	movff	??_isrHP+11,tblptrh
 13494  001546  C0B3  FFF6         	movff	??_isrHP+10,tblptrl
 13495  00154A  C0B2  FFF4         	movff	??_isrHP+9,prodh
 13496  00154E  C0B1  FFF3         	movff	??_isrHP+8,prodl
 13497  001552  C0B0  FFDA         	movff	??_isrHP+7,fsr2h
 13498  001556  C0AF  FFD9         	movff	??_isrHP+6,fsr2l
 13499  00155A  C0AE  FFE2         	movff	??_isrHP+5,fsr1h
 13500  00155E  C0AD  FFE1         	movff	??_isrHP+4,fsr1l
 13501  001562  C0AC  FFEA         	movff	??_isrHP+3,fsr0h
 13502  001566  C0AB  FFE9         	movff	??_isrHP+2,fsr0l
 13503  00156A  C0AA  FFFB         	movff	??_isrHP+1,pclatu
 13504  00156E  C0A9  FFFA         	movff	??_isrHP,pclath
 13505  001572  0011               	retfie		f
 13506  001574                     __end_of_isrHP:
 13507                           	opt stack 0
 13508                           pclatu	equ	0xFFB
 13509                           pclath	equ	0xFFA
 13510                           tblptru	equ	0xFF8
 13511                           tblptrh	equ	0xFF7
 13512                           tblptrl	equ	0xFF6
 13513                           tablat	equ	0xFF5
 13514                           prodh	equ	0xFF4
 13515                           prodl	equ	0xFF3
 13516                           intcon	equ	0xFF2
 13517                           intcon2	equ	0xFF1
 13518                           intcon3	equ	0xFF0
 13519                           postinc0	equ	0xFEE
 13520                           fsr0h	equ	0xFEA
 13521                           fsr0l	equ	0xFE9
 13522                           wreg	equ	0xFE8
 13523                           postinc1	equ	0xFE6
 13524                           fsr1h	equ	0xFE2
 13525                           fsr1l	equ	0xFE1
 13526                           bsr	equ	0xFE0
 13527                           indf2	equ	0xFDF
 13528                           postinc2	equ	0xFDE
 13529                           postdec2	equ	0xFDD
 13530                           fsr2h	equ	0xFDA
 13531                           fsr2l	equ	0xFD9
 13532                           status	equ	0xFD8
 13533                           
 13534 ;; *************** function _UltrasoundISR *****************
 13535 ;; Defined at:
 13536 ;;		line 17 in file "Ultrasound.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;		None
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;		None
 13541 ;; Return value:  Size  Location     Type
 13542 ;;		None               void
 13543 ;; Registers used:
 13544 ;;		wreg, status,2, cstack
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13554 ;;Total ram usage:        0 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:    1
 13557 ;; This function calls:
 13558 ;;		_ReadTimer1
 13559 ;;		i2_WriteTimer1
 13560 ;; This function is called by:
 13561 ;;		_isrHP
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text111
 13566  001F5C                     __ptext111:
 13567                           	opt stack 0
 13568  001F5C                     _UltrasoundISR:
 13569                           	opt stack 18
 13570                           
 13571                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 13572                           
 13573                           ;incstack = 0
 13574  001F5C  9AF0               	bcf	intcon3,5,c	;volatile
 13575                           
 13576                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 13577  001F5E  B0CD               	btfsc	4045,0,c	;volatile
 13578  001F60  D009               	goto	i2l28
 13579                           
 13580                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 13581  001F62  80CD               	bsf	4045,0,c	;volatile
 13582                           
 13583                           ;Ultrasound.c: 35: WriteTimer1(0);
 13584  001F64  0E00               	movlw	0
 13585  001F66  6E45               	movwf	i2WriteTimer1@timer1+1,c
 13586  001F68  0E00               	movlw	0
 13587  001F6A  6E44               	movwf	i2WriteTimer1@timer1,c
 13588  001F6C  ECAB  F011         	call	i2_WriteTimer1	;wreg free
 13589                           
 13590                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 13591  001F70  96F1               	bcf	intcon2,3,c	;volatile
 13592                           
 13593                           ;Ultrasound.c: 37: }
 13594  001F72  D00A               	goto	i2l6219
 13595  001F74                     i2l28:
 13596                           
 13597                           ;Ultrasound.c: 38: else {
 13598                           ;Ultrasound.c: 39: T1CONbits.TMR1ON = 0;
 13599  001F74  90CD               	bcf	4045,0,c	;volatile
 13600                           
 13601                           ;Ultrasound.c: 40: echo_time = ReadTimer1();
 13602  001F76  ECB4  F011         	call	_ReadTimer1	;wreg free
 13603  001F7A  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 13604  001F7E  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 13605                           
 13606                           ;Ultrasound.c: 41: echo_acq_done = 1;
 13607  001F82  0E01               	movlw	1
 13608  001F84  6E1C               	movwf	_echo_acq_done,c
 13609  001F86  D000               	goto	i2l6219
 13610  001F88                     i2l6219:
 13611                           
 13612                           ;Ultrasound.c: 42: }
 13613                           ;Ultrasound.c: 43: INTCON3bits.INT3IF = 0;
 13614  001F88  94F0               	bcf	intcon3,2,c	;volatile
 13615                           
 13616                           ;Ultrasound.c: 44: INTCON3bits.INT3IE = 1;
 13617  001F8A  8AF0               	bsf	intcon3,5,c	;volatile
 13618  001F8C  0012               	return		;funcret
 13619  001F8E                     __end_of_UltrasoundISR:
 13620                           	opt stack 0
 13621                           pclatu	equ	0xFFB
 13622                           pclath	equ	0xFFA
 13623                           tblptru	equ	0xFF8
 13624                           tblptrh	equ	0xFF7
 13625                           tblptrl	equ	0xFF6
 13626                           tablat	equ	0xFF5
 13627                           prodh	equ	0xFF4
 13628                           prodl	equ	0xFF3
 13629                           intcon	equ	0xFF2
 13630                           intcon2	equ	0xFF1
 13631                           intcon3	equ	0xFF0
 13632                           postinc0	equ	0xFEE
 13633                           fsr0h	equ	0xFEA
 13634                           fsr0l	equ	0xFE9
 13635                           wreg	equ	0xFE8
 13636                           postinc1	equ	0xFE6
 13637                           fsr1h	equ	0xFE2
 13638                           fsr1l	equ	0xFE1
 13639                           bsr	equ	0xFE0
 13640                           indf2	equ	0xFDF
 13641                           postinc2	equ	0xFDE
 13642                           postdec2	equ	0xFDD
 13643                           fsr2h	equ	0xFDA
 13644                           fsr2l	equ	0xFD9
 13645                           status	equ	0xFD8
 13646                           
 13647 ;; *************** function i2_WriteTimer1 *****************
 13648 ;; Defined at:
 13649 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;  timer1          2   25[COMRAM] unsigned int 
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 13654 ;; Return value:  Size  Location     Type
 13655 ;;		None               void
 13656 ;; Registers used:
 13657 ;;		None
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;Total ram usage:        4 bytes
 13668 ;; Hardware stack levels used:    1
 13669 ;; This function calls:
 13670 ;;		Nothing
 13671 ;; This function is called by:
 13672 ;;		_UltrasoundISR
 13673 ;; This function uses a non-reentrant model
 13674 ;;
 13675                           
 13676                           	psect	text112
 13677  002356                     __ptext112:
 13678                           	opt stack 0
 13679  002356                     i2_WriteTimer1:
 13680                           	opt stack 18
 13681                           
 13682                           ;incstack = 0
 13683  002356  C044  F0A7         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 13684  00235A  C045  F0A8         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 13685  00235E  C0A8  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 13686  002362  C0A7  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 13687  002366  0012               	return		;funcret
 13688  002368                     __end_ofi2_WriteTimer1:
 13689                           	opt stack 0
 13690                           pclatu	equ	0xFFB
 13691                           pclath	equ	0xFFA
 13692                           tblptru	equ	0xFF8
 13693                           tblptrh	equ	0xFF7
 13694                           tblptrl	equ	0xFF6
 13695                           tablat	equ	0xFF5
 13696                           prodh	equ	0xFF4
 13697                           prodl	equ	0xFF3
 13698                           intcon	equ	0xFF2
 13699                           intcon2	equ	0xFF1
 13700                           intcon3	equ	0xFF0
 13701                           postinc0	equ	0xFEE
 13702                           fsr0h	equ	0xFEA
 13703                           fsr0l	equ	0xFE9
 13704                           wreg	equ	0xFE8
 13705                           postinc1	equ	0xFE6
 13706                           fsr1h	equ	0xFE2
 13707                           fsr1l	equ	0xFE1
 13708                           bsr	equ	0xFE0
 13709                           indf2	equ	0xFDF
 13710                           postinc2	equ	0xFDE
 13711                           postdec2	equ	0xFDD
 13712                           fsr2h	equ	0xFDA
 13713                           fsr2l	equ	0xFD9
 13714                           status	equ	0xFD8
 13715                           
 13716 ;; *************** function _ReadTimer1 *****************
 13717 ;; Defined at:
 13718 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 13719 ;; Parameters:    Size  Location     Type
 13720 ;;		None
 13721 ;; Auto vars:     Size  Location     Type
 13722 ;;  timer           2    0[BANK0 ] struct Timers
 13723 ;; Return value:  Size  Location     Type
 13724 ;;                  2   25[COMRAM] unsigned int 
 13725 ;; Registers used:
 13726 ;;		None
 13727 ;; Tracked objects:
 13728 ;;		On entry : 0/0
 13729 ;;		On exit  : 0/0
 13730 ;;		Unchanged: 0/0
 13731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13733 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13735 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;Total ram usage:        4 bytes
 13737 ;; Hardware stack levels used:    1
 13738 ;; This function calls:
 13739 ;;		Nothing
 13740 ;; This function is called by:
 13741 ;;		_UltrasoundISR
 13742 ;; This function uses a non-reentrant model
 13743 ;;
 13744                           
 13745                           	psect	text113
 13746  002368                     __ptext113:
 13747                           	opt stack 0
 13748  002368                     _ReadTimer1:
 13749                           	opt stack 18
 13750                           
 13751                           ;incstack = 0
 13752  002368  CFCE F0A7          	movff	4046,ReadTimer1@timer	;volatile
 13753  00236C  CFCF F0A8          	movff	4047,ReadTimer1@timer+1	;volatile
 13754  002370  C0A7  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 13755  002374  C0A8  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 13756  002378  0012               	return		;funcret
 13757  00237A                     __end_of_ReadTimer1:
 13758                           	opt stack 0
 13759                           pclatu	equ	0xFFB
 13760                           pclath	equ	0xFFA
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           intcon2	equ	0xFF1
 13769                           intcon3	equ	0xFF0
 13770                           postinc0	equ	0xFEE
 13771                           fsr0h	equ	0xFEA
 13772                           fsr0l	equ	0xFE9
 13773                           wreg	equ	0xFE8
 13774                           postinc1	equ	0xFE6
 13775                           fsr1h	equ	0xFE2
 13776                           fsr1l	equ	0xFE1
 13777                           bsr	equ	0xFE0
 13778                           indf2	equ	0xFDF
 13779                           postinc2	equ	0xFDE
 13780                           postdec2	equ	0xFDD
 13781                           fsr2h	equ	0xFDA
 13782                           fsr2l	equ	0xFD9
 13783                           status	equ	0xFD8
 13784                           
 13785 ;; *************** function _MillisecondTimerISR *****************
 13786 ;; Defined at:
 13787 ;;		line 55 in file "MillisecondTimer.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;		None
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;		None
 13792 ;; Return value:  Size  Location     Type
 13793 ;;		None               void
 13794 ;; Registers used:
 13795 ;;		wreg, status,2, status,0, cstack
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13805 ;;Total ram usage:        0 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; Hardware stack levels required when called:    1
 13808 ;; This function calls:
 13809 ;;		i2_WriteTimer0
 13810 ;; This function is called by:
 13811 ;;		_isrHP
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815                           	psect	text114
 13816  00223C                     __ptext114:
 13817                           	opt stack 0
 13818  00223C                     _MillisecondTimerISR:
 13819                           	opt stack 18
 13820                           
 13821                           ;MillisecondTimer.c: 57: WriteTimer0(63036);
 13822                           
 13823                           ;incstack = 0
 13824  00223C  0EF6               	movlw	246
 13825  00223E  6E45               	movwf	i2WriteTimer0@timer0+1,c
 13826  002240  0E3C               	movlw	60
 13827  002242  6E44               	movwf	i2WriteTimer0@timer0,c
 13828  002244  ECBD  F011         	call	i2_WriteTimer0	;wreg free
 13829                           
 13830                           ;MillisecondTimer.c: 58: millisecond_COUNT0++;
 13831  002248  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 13832  00224A  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 13833                           
 13834                           ;MillisecondTimer.c: 59: millisecond_COUNT1++;
 13835  00224C  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 13836  00224E  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 13837                           
 13838                           ;MillisecondTimer.c: 60: millisecond_COUNT2++;
 13839  002250  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 13840  002252  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 13841                           
 13842                           ;MillisecondTimer.c: 61: millisecond_COUNT3++;
 13843  002254  4A13               	infsnz	_millisecond_COUNT3,f,c	;volatile
 13844  002256  2A14               	incf	_millisecond_COUNT3+1,f,c	;volatile
 13845  002258  0012               	return		;funcret
 13846  00225A                     __end_of_MillisecondTimerISR:
 13847                           	opt stack 0
 13848                           pclatu	equ	0xFFB
 13849                           pclath	equ	0xFFA
 13850                           tblptru	equ	0xFF8
 13851                           tblptrh	equ	0xFF7
 13852                           tblptrl	equ	0xFF6
 13853                           tablat	equ	0xFF5
 13854                           prodh	equ	0xFF4
 13855                           prodl	equ	0xFF3
 13856                           intcon	equ	0xFF2
 13857                           intcon2	equ	0xFF1
 13858                           intcon3	equ	0xFF0
 13859                           postinc0	equ	0xFEE
 13860                           fsr0h	equ	0xFEA
 13861                           fsr0l	equ	0xFE9
 13862                           wreg	equ	0xFE8
 13863                           postinc1	equ	0xFE6
 13864                           fsr1h	equ	0xFE2
 13865                           fsr1l	equ	0xFE1
 13866                           bsr	equ	0xFE0
 13867                           indf2	equ	0xFDF
 13868                           postinc2	equ	0xFDE
 13869                           postdec2	equ	0xFDD
 13870                           fsr2h	equ	0xFDA
 13871                           fsr2l	equ	0xFD9
 13872                           status	equ	0xFD8
 13873                           
 13874 ;; *************** function i2_WriteTimer0 *****************
 13875 ;; Defined at:
 13876 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;  timer0          2   25[COMRAM] unsigned int 
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 13881 ;; Return value:  Size  Location     Type
 13882 ;;		None               void
 13883 ;; Registers used:
 13884 ;;		None
 13885 ;; Tracked objects:
 13886 ;;		On entry : 0/0
 13887 ;;		On exit  : 0/0
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13893 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13894 ;;Total ram usage:        4 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		_MillisecondTimerISR
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text115
 13904  00237A                     __ptext115:
 13905                           	opt stack 0
 13906  00237A                     i2_WriteTimer0:
 13907                           	opt stack 18
 13908                           
 13909                           ;incstack = 0
 13910  00237A  C044  F0A7         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 13911  00237E  C045  F0A8         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 13912  002382  C0A8  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 13913  002386  C0A7  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 13914  00238A  0012               	return		;funcret
 13915  00238C                     __end_ofi2_WriteTimer0:
 13916                           	opt stack 0
 13917  0000                     pclatu	equ	0xFFB
 13918                           pclath	equ	0xFFA
 13919                           tblptru	equ	0xFF8
 13920                           tblptrh	equ	0xFF7
 13921                           tblptrl	equ	0xFF6
 13922                           tablat	equ	0xFF5
 13923                           prodh	equ	0xFF4
 13924                           prodl	equ	0xFF3
 13925                           intcon	equ	0xFF2
 13926                           intcon2	equ	0xFF1
 13927                           intcon3	equ	0xFF0
 13928                           postinc0	equ	0xFEE
 13929                           fsr0h	equ	0xFEA
 13930                           fsr0l	equ	0xFE9
 13931                           wreg	equ	0xFE8
 13932                           postinc1	equ	0xFE6
 13933                           fsr1h	equ	0xFE2
 13934                           fsr1l	equ	0xFE1
 13935                           bsr	equ	0xFE0
 13936                           indf2	equ	0xFDF
 13937                           postinc2	equ	0xFDE
 13938                           postdec2	equ	0xFDD
 13939                           fsr2h	equ	0xFDA
 13940                           fsr2l	equ	0xFD9
 13941                           status	equ	0xFD8
 13942                           pclatu	equ	0xFFB
 13943                           pclath	equ	0xFFA
 13944                           tblptru	equ	0xFF8
 13945                           tblptrh	equ	0xFF7
 13946                           tblptrl	equ	0xFF6
 13947                           tablat	equ	0xFF5
 13948                           prodh	equ	0xFF4
 13949                           prodl	equ	0xFF3
 13950                           intcon	equ	0xFF2
 13951                           intcon2	equ	0xFF1
 13952                           intcon3	equ	0xFF0
 13953                           postinc0	equ	0xFEE
 13954                           fsr0h	equ	0xFEA
 13955                           fsr0l	equ	0xFE9
 13956                           wreg	equ	0xFE8
 13957                           postinc1	equ	0xFE6
 13958                           fsr1h	equ	0xFE2
 13959                           fsr1l	equ	0xFE1
 13960                           bsr	equ	0xFE0
 13961                           indf2	equ	0xFDF
 13962                           postinc2	equ	0xFDE
 13963                           postdec2	equ	0xFDD
 13964                           fsr2h	equ	0xFDA
 13965                           fsr2l	equ	0xFD9
 13966                           status	equ	0xFD8
 13967                           
 13968                           	psect	rparam
 13969  0000                     pclatu	equ	0xFFB
 13970                           pclath	equ	0xFFA
 13971                           tblptru	equ	0xFF8
 13972                           tblptrh	equ	0xFF7
 13973                           tblptrl	equ	0xFF6
 13974                           tablat	equ	0xFF5
 13975                           prodh	equ	0xFF4
 13976                           prodl	equ	0xFF3
 13977                           intcon	equ	0xFF2
 13978                           intcon2	equ	0xFF1
 13979                           intcon3	equ	0xFF0
 13980                           postinc0	equ	0xFEE
 13981                           fsr0h	equ	0xFEA
 13982                           fsr0l	equ	0xFE9
 13983                           wreg	equ	0xFE8
 13984                           postinc1	equ	0xFE6
 13985                           fsr1h	equ	0xFE2
 13986                           fsr1l	equ	0xFE1
 13987                           bsr	equ	0xFE0
 13988                           indf2	equ	0xFDF
 13989                           postinc2	equ	0xFDE
 13990                           postdec2	equ	0xFDD
 13991                           fsr2h	equ	0xFDA
 13992                           fsr2l	equ	0xFD9
 13993                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         138
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160     40     117
    BANK1           256     45      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@off_line_sum_ptr	PTR int  size(2) Largest target is 2
		 -> off_line_sum(BANK0[2]), 

    main@PID_set_point_ptr	PTR int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    main@PID_error_ptr	PTR int  size(2) Largest target is 2
		 -> PID_error(BANK0[2]), 

    main@sensor_sum_ptr	PTR int  size(2) Largest target is 2
		 -> main@sensor_sum(BANK1[2]), 

    main@sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    CalibrateThreshold@sensor_threshold_temp_ptr	PTR int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), 

    DisplaySensorStatuses@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSumDiscrete@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSum@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    CalculateSensorStatuses@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), sensor_threshold(BANK0[2]), 

    CalculateSensorStatuses@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    NormaliseSensorReadings@sensor_offsets	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    NormaliseSensorReadings@sensor_readings_raw	PTR  int  size(2) Largest target is 10
		 -> sensor_readings_raw(BANK0[10]), 

    SendPIDSetPointOffLine@set_point	PTR const int  size(2) Largest target is 2
		 -> off_line_sum(BANK0[2]), 

    SendPIDSetPointOnLine@set_point	PTR const int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_LoadCalibration
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendStoredPIDValues->_PutCharTxBuf
    _SendPIDSetPointOnLine->_PutCharTxBuf
    _SendPIDSetPointOffLine->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_CalibrateThreshold
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_CalculateSensorStatuses
    _CalibrateOnLine->_CalculateSensorSum
    _CalculateSensorSum->___wmul
    _CalibrateOffsets->_SendStatus
    _SendStatus->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0   66334
                                             36 BANK0      4     4      0
                                              0 BANK1     45    45      0
                    _BusyDistanceAcq
                      _BusySensorAcq
            _CalculateSensorStatuses
                 _CalculateSensorSum
         _CalculateSensorSumDiscrete
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadMillis2
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
                       _ResetMillis3
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                        _SendOffsets
             _SendPIDSetPointOffLine
              _SendPIDSetPointOnLine
                         _SendStatus
                _SendStoredPIDValues
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     575
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1170
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1390
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOnLine                                4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOffLine                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1270
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11352
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5850
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   12682
                                             33 BANK0      3     3      0
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1167
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     449
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0   10936
                                             30 BANK0      3     3      0
                   _CalibrateOffsets
                    _CalibrateOnLine
                 _CalibrateThreshold
                          _FlashLEDS
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3     966
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   4     4      0    3502
                                             26 BANK0      4     4      0
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                            _ReadADC
                         _SendStatus
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                             10     6      4     966
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOnLine                                      0     0      0    3229
                      _BusySensorAcq
                 _CalculateSensorSum
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              9     5      4     873
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorSum                                   6     4      2    1216
                                             22 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0    1270
                                             25 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     638
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     440
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSumDiscrete                           4     2      2     362
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorStatuses
   _CalculateSensorSum
     ___wmul
   _CalculateSensorSumDiscrete
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateOnLine
       _BusySensorAcq
       _CalculateSensorSum
         ___wmul
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _ReadADC
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SetADCChannel
         _SetChanADC
     _FlashLEDS
       _Delay10KTCYx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateOnLine
         _BusySensorAcq
         _CalculateSensorSum
           ___wmul
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _ReadADC
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
         _SetADCChannel
           _SetChanADC
       _FlashLEDS
         _Delay10KTCYx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadMillis2
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _ResetMillis3
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOffLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOnLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___awdiv
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2D      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      75       5       73.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100      32        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 26 12:59:23 2017

                             __size_of_WriteEEPROM 0040                                __end_of_OWWriteByte 2016  
                             __end_of_GetCharRxBuf 1B6E                               __end_of_GetCharTxBuf 1E8A  
                                               l36 23DA                                       ___awdiv@sign 00BC  
                              WriteCharEEPROM@data 00BC                                                 bsr 000FE0  
                              ___wmul@multiplicand 00B9                                        __CFG_BORV$0 000000  
                       __end_of_CalculateSensorSum 0BC8                                  main@line_end_flag 0108  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                      __CFG_OSC$HS 000000                                       __CFG_CP4$OFF 000000  
                                     __CFG_CP5$OFF 000000                                __end_of_GetDistance 230C  
                                     __CFG_CP6$OFF 000000                                       __CFG_CP7$OFF 000000  
                             LoadCalibration@index 00CA                                                l213 1C88  
                                              l214 1CB8                                                l223 2024  
                                              l216 1CAC                                                l224 2040  
                                              l240 239A                                                l128 1170  
                                              l226 2038                                                l324 23AA  
                                              l237 1A74                                                l461 2490  
                                              l286 1B6C                                                l800 0DAA  
                                              l552 1D58                                                l458 2422  
                                              l554 1D6E                                                l562 2014  
                                              l811 15F0                                                l475 18EC  
                                              l557 1FBC                                                l549 1DE0  
                                              l806 23BA                                                l567 1E0C  
                                              l487 1FE8                                                l568 1E18  
                                              l833 1CF8                                                l825 0ACE  
                                              l921 1218                                                l850 1A96  
                                              l852 1AD2                                                l828 0BC6  
                                              l838 1B26                                                l870 19E4  
                                              l926 08A4                                                l855 1AA0  
                                              l865 19DA                                                l946 0CBC  
                                              l867 1A16                                                l888 13EA  
                                     __CFG_CPB$OFF 000000                                                _PR2 000FCB  
                                              _PR4 000F77                                       __CFG_CPD$OFF 000000  
                    __size_of_SendCurrentPIDValues 006A                             __size_of_SetDCMotorPID 00A8  
                             __size_of_WriteTimer0 0012                               __size_of_WriteTimer1 0012  
                            CalibrateOffsets@index 00C2                                         _OWReadByte 1DE2  
                                    _SetADCChannel 0CBE                                       ___awmod@sign 00BC  
                                              prod 000FF3                               ?_SendStoredPIDValues 00BF  
                                              wreg 000FE8                                         _TXSTA1bits 000FAC  
                                     __CFG_MODE$MC 000000                          ??_CalculateSensorStatuses 00BB  
                                      ?_PB1pressed 002B                                    ReadTimer1@timer 00A7  
                                    main@Kd_stored 0126                                  main@line_mode_ptr 0111  
                                      ?_PB2pressed 002B                                       __CFG_LVP$OFF 000000  
                                       _Delay1TCYx 23BC                                       __CFG_WDT$OFF 000000  
                                             l1111 2148                                               l1033 2414  
                                             l1212 1422                                               l1133 212A  
                                             l1221 1470                                               l1134 212C  
                                             l1230 20F6                                               l1055 166A  
                                             l1063 22F6                                               l1160 1F26  
                                             l1216 1444                                               l1218 1452  
                                             l1234 2108                                               l1219 1454  
                                             l1085 2170                                               l1157 1F0C  
                                             l1087 217A                                               l1159 1F24  
                                             l1248 1E50                                               l1441 0F64  
                                             l1188 21BE                                               l1189 21C0  
                                             l1454 1018                                               l1480 23CA  
                                             l1473 21FE                                               l1478 23C0  
                                             l6005 1DEE                                               l6017 1E12  
                                             l6009 1DF8                                               l6039 1F10  
                                             l5503 1E9A                                               l6151 102E  
                                             l6135 1A0C                                               l6127 19EE  
                                             l6311 12E0                                               l6129 1A06  
                                             l6321 1342                                               l6305 12C0  
                                             l6091 2152                                               l5531 0CDC  
                                             l6147 1024                                               l6139 1A12  
                                             l6323 1350                                               l6315 12EA  
                                             l5509 1EB6                                               l5541 0D04  
                                             l5533 0CE4                                               l5525 0CC4  
                                             l5461 0F96                                               l6157 1078  
                                             l6333 180A                                               l6245 110A  
                                             l6501 0ECC                                               l5551 0D2C  
                                             l5543 0D0C                                               l5535 0CEC  
                                             l5527 0CCC                                               l5623 1584  
                                             l6175 0898                                               l6343 17A0  
                                             l6511 0F02                                               l6433 1CD0  
                                             l5553 0D34                                               l5545 0D14  
                                             l5537 0CF4                                               l5529 0CD4  
                                             l5721 1AC2                                               l5481 100E  
                                             l5473 0FE8                                               l5465 0FAA  
                                             l5457 0F84                                               l5641 0A2C  
                                             l5633 09D6                                               l6185 08B8  
                                             l6353 1874                                               l6329 17B2  
                                             l6249 1146                                               l5555 0D3C  
                                             l5547 0D1C                                               l5539 0CFC  
                                             l5731 1ACE                                               l5467 0FB8  
                                             l5619 157A                                               l5651 0A58  
                                             l5643 0A44                                               l6451 1192  
                                             l6187 08C6                                               l6363 1946  
                                             l6339 1748                                               l6507 0EEA  
                                             l6523 0F44                                               l6429 1CC6  
                                             l5549 0D24                                               l5469 0FC2  
                                             l5477 0FF8                                               l5661 0AC6  
                                             l5637 09E0                                               l6461 11EA  
                                             l6349 181C                                               l6373 16CA  
                                             l6509 0EF8                                               l6439 1CF2  
                                             l5559 0D44                                               l5727 1AC8  
                                             l5719 1AAA                                               l5655 0A62  
                                             l5647 0A4C                                               l6455 119C  
                                             l6359 18F0                                               l6383 1736  
                                             l6527 0F5A                                               l6519 0F34  
                                             l5841 137C                                               l6449 118C  
                                             l6465 0BD0                                               l6393 18C6  
                                             l6297 1CFC                                               l6369 1670  
                                             l6801 0332                                               l5499 1E90  
                                             l5931 1418                                               l5923 1402  
                                             l5659 0AAE                                               l5683 1ADE  
                                             l6379 16DC                                               l6803 0350  
                                             l6731 01D8                                               l5845 138C  
                                             l5837 136C                                               l5693 21E6  
                                             l6485 0C76                                               l6813 036E  
                                             l6741 01FA                                               l5943 143A  
                                             l5935 1426                                               l5927 140E  
                                             l5599 1D76                                               l5863 1972  
                                             l5687 1AE8                                               l6479 0C52  
                                             l6495 0EB4                                               l6751 021A  
                                             l5793 1ED0                                               l5849 1396  
                                             l6905 0622                                               l6809 0360  
                                             l6737 01E8                                               l5947 1448  
                                             l5939 1430                                               l5859 1962  
                                             l5875 1232                                               l6931 06E6  
                                             l6907 063A                                               l6819 0388  
                                             l5789 1EC6                                               l5885 125A  
                                             l5893 12AA                                               l6933 06FE  
                                             l6909 0640                                               l6925 06D0  
                                             l6845 0406                                               l6765 0246  
                                             l5799 1EEC                                               l5879 123E  
                                             l5983 1DD2                                               l5991 1FF4  
                                             l6935 0704                                               l6919 06A4  
                                             l6927 06D6                                               l6783 02FE  
                                             l6759 0230                                               l6961 07C6  
                                             l6849 0410                                               l6793 0318  
                                             l5995 1FFE                                               l6963 07CE  
                                             l6955 078C                                               l6947 0768  
                                             l6959 079A                                               l6967 07DE  
                                             l6969 07F6                                               _LATE 000F8D  
                                             _LATJ 000F91                                               u6100 05A4  
                                             u4520 23B6                                               u5320 111E  
                                             u4460 23A6                                               u6220 07A8  
                                             u4710 1ABE                                               u5190 1A02  
                                             u6230 07BC                                               u6222 07AA  
                                             u4480 241E                                               u6232 07BE  
                                             u5290 23D6                                               u4730 2410  
                                             u6307 1D66                                               u6260 07F4  
                                             u6317 1DB6                                               u5525 18D4  
                                             u4654 1B14                                               u4655 1B0E  
                                             u6327 1DC0                                               u6337 1DD4  
                                             u4745 1BBC                                               u6347 1F94  
                                             u4755 1B78                                               i2l28 1F74  
                                             u6357 1F9C                                               u6277 1D4A  
                                             u6367 1FAE                                               u6287 1D52  
                                             u6377 21EE                                               u6297 1D5E  
                                  _BusyDistanceAcq 23CC                                               _TMR2 000FCC  
                                    main@Ki_stored 0128                          __size_of_ConfigureBuggyIO 001A  
                                   Read1USART@data 00B7                                               _main 00F0  
                         __end_of_EnableSensorLEDS 24AC                            _NormaliseSensorReadings 1574  
                           __end_of_WirelessTx_ISR 21A2                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               fsr0l 000FE9  
                                             fsr2h 000FDA                                               fsr1l 000FE1  
                                             indf2 000FDF                                               fsr2l 000FD9  
                           __size_ofi2_WriteTimer0 0012                             __size_ofi2_WriteTimer1 0012  
                                             pclat 000FFA                            ??_SendPIDSetPointOnLine 00C1  
             DisplaySensorStatuses@sensor_statuses 00B7                                               prodh 000FF4  
                                             prodl 000FF3                                     _ReadCharEEPROM 238C  
                                             start 00EC                                    __end_of_OWReset 1DE2  
                                       _OWWriteBit 1D36                                      __CFG_IESO$OFF 000000  
                              _ConfigureInterrupts 20BC                                      main@Kp_stored 0124  
                                    _BusySensorAcq 23AC                                      _ReadIntEEPROM 1A18  
                             __end_of_EnableMotors 24BC                                      __CFG_MCLRE$ON 000000  
                                       _GetCommand 248A                                       ___param_bank 000010  
                                  __end_of_BusyADC 2416                                    __end_of_ReadADC 22F8  
                                    ??_ReadMillis0 00B9                                      ??_ReadMillis1 00B9  
                                    ??_ReadMillis2 00B9                                    __end_of_OpenADC 166E  
                                    ??_SetDCMotorL 00BF                                      ??_SetDCMotorR 00BF  
                            _DisplaySensorStatuses 1AD4                                      __CFG_WAIT$OFF 000000  
                                  __end_of_StartTx 248A                                      ??_ReadVoltage 00BC  
                                   _ReadEchoLength 2464                                              ?_main 002B  
                                  __end_of___awdiv 0F66                                              _EEADR 000FA9  
                                  __end_of___awmod 101A                                     PutCharRxBuf@ch 00BE  
                                            _T0CON 000FD5                                    ___awdiv@divisor 00B9  
                                            _T1CON 000FCD                                              _T2CON 000FCA  
                                            i1l303 21A0                                              i1l280 1E88  
                                            i1l800 0E94                                     ?_SetADCChannel 002B  
                                            i1l960 00A6                   __size_of_ResetAccumulatedCurrent 002C  
                                            i1l955 009A                                    _CalibrateOnLine 1956  
                                            i2l952 153A                                    ___awdiv@counter 00BB  
                                            i2l949 152E                                      _UltrasoundISR 1F5C  
                                            _TMR0H 000FD7                                              _TMR1H 000FCF  
                                            _TMR0L 000FD6                                              _TMR1L 000FCE  
                                   PutCharTxBuf@ch 00BE                              ??_SendStoredPIDValues 00C5  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                              CalculateSensorSum@sum 00C1  
                                            _TRISG 000F98                                              _TRISJ 000F9A  
                             ?_ConfigureInterrupts 002B                              __size_of_Delay10KTCYx 001E  
                                    __CFG_PWRT$OFF 000000                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                                    __CFG_WRT3$OFF 000000                                      __CFG_WRT4$OFF 000000  
                                    __CFG_WRT5$OFF 000000                                      __CFG_WRT6$OFF 000000  
                                    __CFG_WRT7$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                   __CFG_EBTR4$OFF 000000                                     __CFG_EBTR5$OFF 000000  
                                   __CFG_EBTR6$OFF 000000                                     __CFG_EBTR7$OFF 000000  
                           WriteCharEEPROM@address 00BA                                      __CFG_WRTB$OFF 000000  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                   i1___awmod@sign 0030            CalculateSensorStatuses@sensor_threshold 00B9  
                                   __CFG_EBTRB$OFF 000000                                 __size_ofi1_ReadADC 0010  
                                            _isrHP 0008                                              _isrLP 0018  
                                       _Read1USART 20E4                                         _ConvertADC 24B4  
                                  ??_LoadPIDValues 00C4                                     __CFG_BOREN$OFF 000000  
                                            tablat 000FF5                           ??_SendPIDSetPointOffLine 00C1  
                                       _ReadEEPROM 2016                             __end_of_ReadCharEEPROM 239C  
                                            status 000FD8                              SendStoredPIDValues@Kd 00C1  
                            SendStoredPIDValues@Ki 00C3                              SendStoredPIDValues@Kp 00BF  
                                  ?_WirelessTx_ISR 002B                                 __size_ofi1___awmod 0082  
                                      _OWWriteByte 1FEA                                      _SetDCMotorPID 10CA  
                                   ?_BusySensorAcq 002B                                     ?_ReadIntEEPROM 00B9  
                                    ?_SetPIDValues 002B                                         _FlushRxBuf 1EC0  
                                  _ConfigureTimer0 22A2                                    _ConfigureTimer1 2274  
                                  _ConfigureTimer2 2492                                         _FlushTxBuf 1E8A  
                               __size_of_OWReadBit 0030                                    __initialization 2042  
                                 ?_LoadCalibration 002B                                        _GetDistance 22F8  
                               main@sensor_sum_ptr 0100                                       __end_of_main 0888  
                                       _ReadTimer1 2368                                __size_of_PB1pressed 005E  
                              __size_of_PB2pressed 005E                                       _Delay10KTCYx 21E2  
                                    ??_SendOffsets 00C1                             __end_of_ReadEchoLength 246E  
                          __size_of_WriteIntEEPROM 0032                                   _CommandAvailable 2416  
                                       _Open1USART 13EC                                   __end_of_OpenPWM4 217C  
                                 __end_of_OpenPWM5 2156                                             ??_main 00CB  
                             __end_of_ConfigureADC 2320                                     ?_UltrasoundISR 002B  
                                    i2_WriteTimer0 237A                               __end_of_ConfigurePWM 2432  
                                    i2_WriteTimer1 2356                                      __activetblptr 000003  
                                ReadVoltage@result 00BF                                __end_of_ReadMillis0 2464  
                              __end_of_ReadMillis1 245A                                __end_of_ReadMillis2 2482  
                            ??_ConfigureInterrupts 00B7                                 __size_of_FlashLEDS 0028  
                                       _SetChanADC 2200                                _ConfigureUltrasound 2094  
                                      ?_OWReadByte 002B                        __size_of_CalibrateThreshold 00A4  
                          __end_of_BusyDistanceAcq 23DC                                __end_of_SetDCMotorL 2408  
                              __end_of_SetDCMotorR 23FA                                __end_of_ReadVoltage 18EE  
                            __end_of_DisableMotors 24C0                                             _ADCON0 000FC2  
                                           _ADCON1 000FC1                                             _ADCON2 000FC0  
                                ReadEEPROM@address 00B7                                             ?_isrHP 002B  
                                           ?_isrLP 002B                                             _ADRESH 000FC4  
                                           _EEADRH 000FAA                                             _ADRESL 000FC3  
                                           _EEDATA 000FA8                                        ?_Delay1TCYx 002B  
                                    ??_SetUnipolar 00B7                                             _CCPR4L 000F74  
                                           _CCPR5L 000F71                                             _EECON2 000FA7  
                                 ___awdiv@dividend 00B7                                    i1_SetADCChannel 0DAC  
                        ??_NormaliseSensorReadings 00BB                                         _SendStatus 1D70  
                                           i1l1063 23EA                                             i1l1454 14F2  
                                           i1l4131 14B6                                             i1l4123 1496  
                                           i1l4143 14E8                                             i1l4135 14CC  
                                           i1l4127 14A4                                             i1l4119 1488  
                                           i1l4129 14AE                                             i1l4139 14D8  
                                        ??_OWReset 00B7                                             i1l4183 22DE  
                                  __CFG_BBSIZ$BB2K 000000                                             i1l5087 0092  
                                           i1l4567 2198                                         _OpenTimer0 210A  
                                       _OpenTimer1 1EF6                                             i1l4851 0DB0  
                                       _OpenTimer2 21A2                                             i1l4861 0DD8  
                                           i1l4853 0DB8                                             i1l4871 0E00  
                                           i1l4863 0DE0                                             i1l4855 0DC0  
                                           i1l4881 0E28                                             i1l4873 0E08  
                                           i1l4865 0DE8                                             i1l4857 0DC8  
                                           i1l4875 0E10                                             i1l4867 0DF0  
                                           i1l4859 0DD0                                             i1l4877 0E18  
                                           i1l4869 0DF8                                             i1l4885 0E30  
                                           i1l4879 0E20                                             i2l6219 1F88  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _PID_Kd 0079                                             _PID_Ki 007B  
                                           _PID_Kp 007D                           GenerateCalibration@index 00C7  
                                           _SPBRG1 000FAF                                    ?_ReadCharEEPROM 00B9  
                               __size_of_SetDCPWM4 0044                                 __size_of_SetDCPWM5 0044  
                                 _CalibrateOffsets 1360                                     ?_SetDCMotorPID 00BF  
                                        ??_BusyADC 00B7                                             _TXREG1 000FAD  
                                        ??_ReadADC 00B9                                             _TXSTA1 000FAC  
                             ?_ConfigureUltrasound 00BB                                _SetDirectionForward 24A0  
                                   ??_SetPIDValues 00C0                                        ?_OWWriteBit 002B  
                            __size_of_GetCharRxBuf 0046                                          ??_OpenADC 00B9  
                            __size_of_GetCharTxBuf 0038                         _sensor_readings_normalised 008B  
                                           _BusyTx 239C                                     __CFG_XINST$OFF 000000  
                                      ?_GetCommand 002B                                  ?_SetReverseMotorL 002B  
                                        ??_StartTx 00B7                                  __end_ofi1_ReadADC 23EC  
                                           ___wmul 1E1A                                _sensor_readings_raw 0095  
                                        ??___awdiv 00BB                             ?_DisplaySensorStatuses 00B7  
                                        ??___awmod 00BB                            __end_of_CalibrateOnLine 19BA  
                                 OpenTimer0@config 00B7                                 ??_SetReverseMotorL 00B7  
                                 OpenTimer1@config 00B7                                    ?_ReadEchoLength 00B7  
                           SendCurrentPIDValues@Kd 00C1                             SendCurrentPIDValues@Ki 00C3  
                           SendCurrentPIDValues@Kp 00BF                                   OpenTimer2@config 00B7  
                                           clear_0 2048                                             clear_1 2054  
                                           clear_2 2060                                   ___awdiv@quotient 00BD  
                                  ___awmod@divisor 00B9                                    ??_SetADCChannel 00B9  
                                   ?i2_WriteTimer0 0044                                     ?i2_WriteTimer1 0044  
                                  ___awmod@counter 00BB                              ReadCharEEPROM@address 00B9  
                                    ?_SendLineMode 00BF                           __size_of_WriteCharEEPROM 0012  
                                __end_ofi1___awmod 14F4                               ?_SetDirectionForward 002B  
                              __end_of_SendOffsets 1360                       ??_CalculateSensorSumDiscrete 00B9  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                  __end_of_OWReadBit 1FBE  
                            WriteIntEEPROM@address 00BA                                 main@find_line_flag 010A  
                                      ?_Read1USART 002B                                       _GetCharRxBuf 1B28  
                                      ?_ConvertADC 002B                                       _GetCharTxBuf 1E52  
                          __end_of_ConfigureTimer0 22B8                            __end_of_ConfigureTimer1 228C  
                          __end_of_ConfigureTimer2 249A                                      main@stop_flag 0120  
                                 _ConfigureBuggyIO 225A                                        ?_ReadEEPROM 00B7  
                  __size_of_SendPIDSetPointOffLine 006C                                         __accesstop 0060  
                          __end_of__initialization 2066                              __size_of_EnableMotors 0004  
                                  ??_BusySensorAcq 00B7                                 _millisecond_COUNT0 000D  
                               _millisecond_COUNT1 000F                                 _millisecond_COUNT2 0011  
                               _millisecond_COUNT3 0013                                    ??_ReadIntEEPROM 00BB  
                                       _StopMotors 21C4                              ??_ConfigureUltrasound 00C1  
                         ??_SendBattVoltageInitial 00C1                      ConfigureUltrasound@echo_to_cm 00BB  
                    ConfigureUltrasound@echo_to_in 00BE                                      ___rparam_used 000001  
                              __end_of_SetUnipolar 24A0                                  __end_of_FlashLEDS 2094  
                     __end_of_SendDefaultPIDValues 181A                                        ?_FlushRxBuf 002B  
                                      ?_FlushTxBuf 002B                                __size_of_OWReadByte 0038  
                                   __pcstackCOMRAM 002B                                        ?_ReadTimer1 0044  
                                      _ReadMillis0 245A                                        _ReadMillis1 2450  
                                      _ReadMillis2 2478                                      __end_of_isrHP 1574  
                                    __end_of_isrLP 00EC                                __size_of_Delay1TCYx 0010  
                                  ??_UltrasoundISR 0046                                        _SetDCMotorL 23FA  
                                      _SetDCMotorR 23EC                                     ??_SendLineMode 00C1  
                                      ?_Open1USART 00B7                            _ResetAccumulatedCurrent 1FBE  
                                __end_of_SetDCPWM4 1BB2                                  __end_of_SetDCPWM5 1BF6  
                                      _ReadVoltage 1884                              ??_SetDirectionForward 00B7  
                                    ?_ResetMillis0 002B                                      ?_ResetMillis1 002B  
                                    ?_ResetMillis2 002B                                      ?_ResetMillis3 002B  
                              i1SetChanADC@channel 002C                                        ?_SetChanADC 002B  
                          __end_ofi1_SetADCChannel 0E96  CalculateSensorStatuses@sensor_readings_normalised 00B7  
                                  _sensor_acq_done 0022                        __end_of_MillisecondTimerISR 225A  
                             ReadIntEEPROM@address 00B9                       CalculateSensorStatuses@index 00C0  
                                 ?_BusyDistanceAcq 002B                                __size_of_OWWriteBit 003A  
                                     _EnableMotors 24B8                                       ??_PB1pressed 00B9  
                                     ??_PB2pressed 00B9                                __size_of_GetCommand 0008  
                                          ??_isrHP 00A9                                            ??_isrLP 0033  
                      __end_of_GenerateCalibration 10CA                                 _CalculateSensorSum 0AD0  
                  CalculateSensorSumDiscrete@index 00BA                                        ?_SendStatus 002B  
                                       __pbssBANK0 0060                                         __pbssBANK1 012D  
                                  ??_SetDCMotorPID 00C1                                        ?_OpenTimer0 002B  
                                      ?_OpenTimer1 002B                                        ?_OpenTimer2 002B  
                                    ??_Write1USART 002B                       __end_of_SendCurrentPIDValues 1884  
                          main@battery_current_acc 010B                                  ?_EnableSensorLEDS 002B  
                          main@battery_current_ptr 0104                                      ??_WriteEEPROM 00BA  
                                        ?_OpenPWM4 002B                                          ?_OpenPWM5 002B  
                              ?_CalculateSensorSum 00BD                      CalculateSensorSumDiscrete@sum 00B9  
                                          ?_BusyTx 002B                     __size_of_SendPIDSetPointOnLine 006C  
                               ??_EnableSensorLEDS 00B7                      __end_of_SendPIDSetPointOnLine 16DA  
                            __size_of_ConfigureADC 0014                                            ?___wmul 00B7  
                                      _RxCharacter 0015                              __size_of_ConfigurePWM 000E  
                                 ?_CalibrateOnLine 002B                                    ??i2_WriteTimer0 0046  
                                  ??i2_WriteTimer1 0046                                 __end_of_PB1pressed 1AD4  
                                   _WriteIntEEPROM 1F2A                                  main@PID_error_ptr 0102  
                                          _CCP4CON 000F73                                            _CCP5CON 000F70  
                                 WriteTimer0@timer 00B9                                 __end_of_PB2pressed 1A18  
                                      _SendOffsets 12BE                                   WriteTimer1@timer 00B9  
                                    ??_WriteTimer0 00B9                                      ??_WriteTimer1 00B9  
                           _SendPIDSetPointOffLine 16DA                                __size_of_Read1USART 0026  
                              __size_of_ConvertADC 0004                                    _sensor_statuses 0025  
                                    ?_PutCharRxBuf 002B                                   SendOffsets@index 00C3  
                                    ?_PutCharTxBuf 002B                                     ??_ResetMillis0 00B7  
                                   ??_ResetMillis1 00B7                                     ??_ResetMillis2 00B7  
                                   ??_ResetMillis3 00B7                                __size_of_ReadEEPROM 002C  
                             ??_CalculateSensorSum 00BF                                   Open1USART@config 00B9  
                           SetPIDValues@char_index 00C3                               __end_of_SetPIDValues 09CA  
                              __size_of_FlushRxBuf 0036                                            _SPBRGH1 000F7F  
                              __size_of_FlushTxBuf 0036                            main@sensor_sum_discrete 012C  
                                ??_WriteCharEEPROM 00BD                                        _TxCharacter 0019  
                                 ??_WirelessTx_ISR 0033                                        _SetUnipolar 249A  
                              __size_of_ReadTimer1 0012                                            _OWReset 1DAA  
                         __end_of_CommandAvailable 2424                             SetDCMotorPID@PIDoutput 00BF  
                                 ?_ConfigureTimer0 002B                                   ?_ConfigureTimer1 002B  
                                 ?_ConfigureTimer2 002B                                         _convert_cm 00CF  
                                       _convert_in 00D2                                        ?_StopMotors 002B  
                              __size_of_Open1USART 0086                                       ?_OWWriteByte 002B  
                                     _ConfigureADC 230C                                            _BusyADC 2408  
                                          _ReadADC 22E4                                       _ConfigurePWM 2424  
                              i2WriteTimer0@timer0 0044                                         ??_OpenPWM4 00B7  
                                       ??_OpenPWM5 00B7                    __size_of_SendBattVoltageInitial 0068  
                              i2WriteTimer1@timer1 0044                                            _OpenADC 15F2  
                                          __Hparam 0000                                __size_of_SetChanADC 001E  
                                  __size_of_BusyTx 0010                                            __Lparam 0000  
                              __end_of_Write1USART 22E4                                       ?_GetDistance 002B  
                           __end_of_WriteIntEEPROM 1F5C                                            _StartTx 2482  
                                          ___awdiv 0E96                                            ___awmod 0F66  
                                  __size_of___wmul 0038                          ??_ResetAccumulatedCurrent 00BA  
                              __end_of_WriteEEPROM 1CBA                                      ?i1_ConvertADC 002B  
        CalculateSensorSumDiscrete@sensor_statuses 00B7                                  ReadIntEEPROM@data 00BE  
                      __end_of_SendStoredPIDValues 17B0                                     ??_PutCharRxBuf 00BD  
                                  __CFG_STVREN$OFF 000000                                     ??_PutCharTxBuf 00BD  
                                          __pcinit 2042                                 WriteEEPROM@address 00B7  
                                          __ramtop 1000                                __size_of_SendStatus 003A  
                              __size_of_OpenTimer0 0026                                __size_of_OpenTimer1 0034  
                              __size_of_OpenTimer2 0022                                            __ptext0 00F0  
                                          __ptext1 0E96                                            __ptext2 21C4  
                                          __ptext3 249A                                            __ptext4 24AC  
                                          __ptext5 24B0                                            __ptext6 24A0  
                                          __ptext7 10CA                                            __ptext8 23EC  
                                          __ptext9 1B6E                                       _get_Rx_index 001D  
                         __end_of_CalibrateOffsets 13EC                                          _T0CONbits 000FD5  
                         ?_CalculateSensorStatuses 00B7                                          _T1CONbits 000FCD  
                                     _get_Tx_index 001E         NormaliseSensorReadings@sensor_readings_raw 00B7  
               __end_of_CalculateSensorSumDiscrete 1CFA                         _CalculateSensorSumDiscrete 1CBA  
                                     ??_OWReadByte 00B8                                          _T2CONbits 000FCA  
                                 ?i1_SetADCChannel 002B                                          _T3CONbits 000FB1  
                                 ___awmod@dividend 00B7                                          _T4CONbits 000F76  
                             _SendDefaultPIDValues 17B0                                __end_of_WriteTimer0 2356  
                              __end_of_WriteTimer1 2344                                   ??_ReadCharEEPROM 00BB  
                                     ??_Delay1TCYx 00B7                                     OpenADC@config2 00B7  
                                   __pintcode_body 14F4                                  _GetSensorReadings 228C  
                             end_of_initialization 2066                                     main@sensor_sum 0121  
                  SendPIDSetPointOffLine@set_point 00BF                                    FlushRxBuf@index 00B7  
                               ?_GetSensorReadings 002B                              __end_of_LoadPIDValues 0CBE  
                             __end_of_SendLineMode 1D36                                            int_func 14F4  
                              main@battery_current 010F                                      ?i1_SetChanADC 002B  
                                     ??_OWWriteBit 00B7       CalculateSensorSum@sensor_readings_normalised 00BD  
                          ??_DisplaySensorStatuses 00B9                                   ??_ReadEchoLength 00B9  
                                      _Rx_complete 0017                                       ??_GetCommand 00B8  
                              ??_GetSensorReadings 00BA                                 __end_of_OWReadByte 1E1A  
                                  ?_WriteIntEEPROM 00BA                                            postdec2 000FDD  
                              main@battery_voltage 011A                                            postinc0 000FEE  
                                          postinc1 000FE6                                            postinc2 000FDE  
                                   ??i1_ConvertADC 002B                                          _PID_error 009F  
                      __end_of_ConfigureInterrupts 20E4                                 __end_of_Delay1TCYx 23CC  
                                  FlushTxBuf@index 00B7                           __end_of_ConfigureBuggyIO 2274  
                       __end_of_CalibrateThreshold 12BE                                     GetCharRxBuf@ch 00BE  
                                        i1_ReadADC 23DC                                          _PORTBbits 000F81  
                                        _PORTHbits 000F87                           __size_of_LoadCalibration 00A8  
                                   GetCharTxBuf@ch 0032                             _SendBattVoltageInitial 18EE  
                                _SetForwardsMotorR 24B0                               _SendCurrentPIDValues 181A  
                              __size_of_StopMotors 001E                              ?_SendDefaultPIDValues 00BF  
                                      _Tx_complete 001A                                          _TRISCbits 000F94  
                               ?_SetForwardsMotorR 002B                          __size_of_SetReverseMotorL 0004  
                                        _TRISGbits 000F98                                          _TRISHbits 000F99  
                                       main@D_temp 011C                                 __end_of_OWWriteBit 1D70  
                        __end_of_GetSensorReadings 22A2                                          i1___awmod 1472  
                                       main@I_temp 011E                             main@wall_detected_flag 0119  
                                     ??_Read1USART 00B7                                 __end_of_GetCommand 2492  
                                     ??_ConvertADC 00B7                                          _OWReadBit 1F8E  
                              ??_SetForwardsMotorR 00B7                                       ??_ReadEEPROM 00B9  
                                      _Write1USART 22CE                                     ??i1_SetChanADC 002B  
                             __end_of_ResetMillis0 2450                               __end_of_ResetMillis1 2446  
                             __end_of_ResetMillis2 2478                               __end_of_ResetMillis3 243C  
                           i1SetADCChannel@channel 002D                                        _WriteEEPROM 1C7A  
                                     ??_FlushRxBuf 00B7                                       ??_FlushTxBuf 00B7  
            NormaliseSensorReadings@sensor_offsets 00B9                              SetDCMotorL@duty_cycle 00BD  
                                   __end_of_BusyTx 23AC                                  _ConfigureWireless 221E  
                                     ??_ReadTimer1 0046                                          _FlashLEDS 206C  
                                     ?_ReadMillis0 00B7                                       ?_ReadMillis1 00B7  
                                     ?_ReadMillis2 00B7                               _second_rollover_flag 0021  
                           __size_of_DisableMotors 0004                    __end_of_CalculateSensorStatuses 0AD0  
                               ?_ConfigureWireless 002B                                     __end_of___wmul 1E52  
                                     ?_SetDCMotorL 00BD                                       ?_SetDCMotorR 00BD  
                                     ??_Open1USART 00B9                              __size_of_SetPIDValues 0142  
                                      _WriteTimer0 2344                                        _WriteTimer1 2332  
                        __end_of_SetForwardsMotorR 24B4                                 __end_of_Read1USART 210A  
                                       ?i1_ReadADC 002B                                 __end_of_ConvertADC 24B8  
                                     ?_ReadVoltage 00BA                              ?_SendCurrentPIDValues 00BF  
                            __end_of_SetADCChannel 0DAC                                       ??_SetChanADC 00B7  
                               __end_of_ReadEEPROM 2042                            main@battery_voltage_ptr 0117  
                              ??_ConfigureWireless 00BA                                start_initialization 2042  
                         ?_NormaliseSensorReadings 00B7                           main@sensor_threshold_ptr 012A  
                                        _SetDCPWM4 1B6E                                          _SetDCPWM5 1BB2  
                                       ?i1___awmod 002B                                 __end_of_FlushRxBuf 1EF6  
                               __end_of_FlushTxBuf 1EC0                                    SetDCPWM4@DCycle 00BB  
                      __end_of_ConfigureUltrasound 20BC                                    SetDCPWM5@DCycle 00BB  
                                     ??_SendStatus 00BF                                       ??_OpenTimer0 00B7  
                                     ??_OpenTimer1 00B7                                       ??_OpenTimer2 00B7  
                                       ?_OWReadBit 002B                                      _echo_acq_done 001C  
                               __end_of_ReadTimer1 237A                                   OWReadByte@result 00B8  
                             __end_of_PutCharRxBuf 1C38                               __end_of_PutCharTxBuf 1C7A  
                                      _SystemClock 0001                                   _sensor_acq_index 0023  
                               __end_of_Open1USART 1472                              __end_of_BusySensorAcq 23BC  
                             SetADCChannel@channel 00B9                              __end_of_ReadIntEEPROM 1A76  
                        __end_of_ConfigureWireless 223C                                           ??_BusyTx 00B7  
                             __size_of_OWWriteByte 002C                                       _SetPIDValues 0888  
                               __end_of_SetChanADC 221E                                  __size_of_OpenPWM4 0026  
                                __size_of_OpenPWM5 0026                            ?_SendPIDSetPointOffLine 00BF  
                                         ??___wmul 00BB                                         ?_FlashLEDS 002B  
                      __end_of_SetDirectionForward 24A6                                 i1___awmod@dividend 002B  
                                 __CFG_LPT1OSC$OFF 000000                               __size_of_GetDistance 0014  
                                     ?_SendOffsets 00BF                                          _Rx_buffer 012D  
                                  _WriteCharEEPROM 2320                          __size_of_EnableSensorLEDS 0006  
                               __end_of_SendStatus 1DAA                              __end_of_UltrasoundISR 1F8E  
                               __end_of_OpenTimer0 2130                                 __end_of_OpenTimer1 1F2A  
                               __end_of_OpenTimer2 21C4                                       OWWriteByte@i 00B9  
                           ??_SendDefaultPIDValues 00C5                                          _Tx_buffer 0060  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00A7  
                                    __pcstackBANK1 0100                                         ?_SetDCPWM4 00B7  
                                       ?_SetDCPWM5 00B7                                       _off_line_sum 00A3  
                       __size_of_GetSensorReadings 0016                              __size_of_SendLineMode 003C  
                                ??_LoadCalibration 00C8                                      _PID_set_point 00A1  
                                    _DisableMotors 24BC                                       ?_SetUnipolar 002B  
                             __end_ofi1_ConvertADC 24C4                       __size_of_MillisecondTimerISR 001E  
                                         ?_OWReset 002B                                  ?_CommandAvailable 002B  
                         __size_of_BusyDistanceAcq 0010                              __end_of_SetDCMotorPID 1172  
                                     ??_StopMotors 00BF                                 WriteIntEEPROM@data 00BC  
                                         ?_BusyADC 002B                                           ?_ReadADC 00B7  
                                        __pnvBANK0 00CF                       __size_of_GenerateCalibration 00B0  
                               ??_CommandAvailable 00B7                                  OpenADC@portconfig 00B8  
                                         ?_OpenADC 00B7                     __end_of_SendPIDSetPointOffLine 1746  
                                   _sensor_offsets 0081                                          _echo_time 000B  
                                __CFG_CCP2MX$PORTC 000000                                          __pintcode 0008  
                                  main@command_msg 0123                                           ?_StartTx 002B  
                                         ?___awdiv 00B7                                          __ptext100 23CC  
                                        __ptext102 0DAC                                          __ptext111 1F5C  
                                        __ptext103 22B8                                          __ptext112 2356  
                                        __ptext104 23DC                                          __ptext113 2368  
                                        __ptext105 24C0                                          __ptext114 223C  
                                        __ptext106 217C                                          __ptext115 237A  
                                        __ptext107 22CE                                          __ptext108 1E52  
                                        __ptext109 1472                                           ?___awmod 00B7  
                                      OWReadByte@i 00B9                              _SendPIDSetPointOnLine 166E  
                                    ?_Delay10KTCYx 002B                        main@battery_current_acc_ptr 0106  
                                      __pintcodelo 0018                                    Open1USART@spbrg 00B7  
                       __size_of_SetForwardsMotorR 0004                             ??_SendCurrentPIDValues 00C5  
                            __end_ofi2_WriteTimer0 238C                              __end_ofi2_WriteTimer1 2368  
                  __end_of_NormaliseSensorReadings 15F2                                        ??i1_ReadADC 002D  
                                 _sensor_threshold 00A5                                       _SendLineMode 1CFA  
                                ?_CalibrateOffsets 002B                              SendLineMode@line_mode 00BF  
                                WriteTimer0@timer0 00B7                               __end_ofi1_SetChanADC 22CE  
                      __size_of_CalculateSensorSum 00F8                                  WriteTimer1@timer1 00B7  
                      ?_CalculateSensorSumDiscrete 00B7                                 i2WriteTimer0@timer 00A7  
                               __end_of_StopMotors 21E2                           __size_of_CalibrateOnLine 0064  
                               i2WriteTimer1@timer 00A7                                 ??_CalibrateOffsets 00C0  
                                 _SetReverseMotorL 24AC        CalibrateThreshold@sensor_threshold_temp_ptr 00C1  
                                      ??i1___awmod 002F                                     ?_DisableMotors 002B  
                                        _line_mode 002A                                     __size_of_isrHP 156C  
                                   __size_of_isrLP 00D4                                    Write1USART@data 002B  
                            __size_of_ResetMillis0 000A                              __size_of_ResetMillis1 000A  
                            __size_of_ResetMillis2 000A                              __size_of_ResetMillis3 000A  
                                  OWReadBit@result 00B7                                        ??_OWReadBit 00B7  
                 __size_of_CalculateSensorStatuses 0106                                     ___wmul@product 00BB  
                                    OpenADC@config 00BB                                           _LATDbits 000F8C  
                                         _LATEbits 000F8D                                           _LATHbits 000F90  
                                 ??_WriteIntEEPROM 00BE                                           _IPR1bits 000F9F  
                                         _PIE1bits 000F9D                         __size_of_ConfigureWireless 001E  
                       DisplaySensorStatuses@index 00BB                        main@send_battery_stats_flag 0109  
                           SendDefaultPIDValues@Kd 00C1                             SendDefaultPIDValues@Ki 00C3  
                           SendDefaultPIDValues@Kp 00BF                                           _PIR1bits 000F9E  
                                         _DCmotorL 0007                                           _DCmotorR 0009  
                            __CFG_DATABW$DATA16BIT 000000                            __end_of_WriteCharEEPROM 2332  
                   __size_of_DisplaySensorStatuses 0054                                           _RCONbits 000FD0  
                         __size_of_ConfigureTimer0 0016                           __size_of_ConfigureTimer1 0018  
                         __size_of_ConfigureTimer2 0008                      __end_of_DisplaySensorStatuses 1B28  
                                 __CFG_WDTPS$32768 000000                                     ??_Delay10KTCYx 00B7  
                            SetDCMotorR@duty_cycle 00BD                                        ??_FlashLEDS 00B9  
                          ?_SendBattVoltageInitial 00BF                               __size_of_ReadMillis0 000A  
                             __size_of_ReadMillis1 000A                               __size_of_ReadMillis2 000A  
                                __CFG_ECCPMX$PORTH 000000                                         _ADCON0bits 000FC2  
                                ?_ConfigureBuggyIO 002B                                  ___wmul@multiplier 00B7  
                             __size_of_SetDCMotorL 000E                               __size_of_SetDCMotorR 000E  
                                     _ResetMillis0 2446                                       _ResetMillis1 243C  
                                     _ResetMillis2 246E                                       _ResetMillis3 2432  
                               ??_ConfigureBuggyIO 00B7                               __size_of_ReadVoltage 006A  
                     __size_of_SendStoredPIDValues 006A                                        ??_SetDCPWM4 00B9  
                                      ??_SetDCPWM5 00B9                                   Delay10KTCYx@unit 00B8  
                            __size_of_PutCharRxBuf 0042                              __size_of_PutCharTxBuf 0042  
                                      _INTCON2bits 000FF1                                      ?_GetCharRxBuf 002B  
                                      _INTCON3bits 000FF0                                      ?_GetCharTxBuf 002B  
                               _CalibrateThreshold 121A                           __size_ofi1_SetADCChannel 00EA  
                                 __size_of_OWReset 0038                                       ?_Write1USART 002B  
                                       _EECON1bits 000FA6                                           _OpenPWM4 2156  
                                         _OpenPWM5 2130                                       ?_WriteEEPROM 00B7  
                              ?_CalibrateThreshold 002B                                   __size_of_BusyADC 000E  
                                 __size_of_ReadADC 0014                                           __Hrparam 0000  
                         ?_ResetAccumulatedCurrent 002B                            __size_of_WirelessTx_ISR 0026  
                                 __size_of_OpenADC 007C                                           __Lrparam 0000  
                                ??_BusyDistanceAcq 00B7                             ?_SendPIDSetPointOnLine 00BF  
                   __end_of_SendBattVoltageInitial 1956                                  i1___awmod@divisor 002D  
                                      OWWriteBit@b 00B7                                  i1___awmod@counter 002F  
                                 __size_of_StartTx 0008                                   __size_of___awdiv 00D0  
                                 __size_of___awmod 00B4                                       ?_WriteTimer0 00B7  
                                     ?_WriteTimer1 00B7                                   _EnableSensorLEDS 24A6  
                                     _PutCharRxBuf 1BF6                                       _PutCharTxBuf 1C38  
                             __size_of_SendOffsets 00A2                             __size_of_LoadPIDValues 00F6  
                              _system_clock_enable 0024                               ??_CalibrateThreshold 00C1  
                     __size_of_ConfigureInterrupts 0028                              __size_ofi1_ConvertADC 0004  
                                  ??_DisableMotors 00B7                                      ?_EnableMotors 002B  
                               SetDCPWM4@dutycycle 00B7                                     OpenPWM4@period 00B7  
                                         __ptext10 23FA                                           __ptext11 1BB2  
                                         __ptext20 2432                                           __ptext12 1746  
                                         __ptext21 243C                                           __ptext13 166E  
                                         __ptext30 2450                                           __ptext22 2446  
                                         __ptext14 16DA                                           __ptext31 245A  
                                         __ptext23 1FBE                                           __ptext15 12BE  
                                         __ptext40 238C                                           __ptext32 2464  
                                         __ptext24 1884                                           __ptext16 1CFA  
                                         __ptext41 2016                                           __ptext33 0BC8  
                                         __ptext25 1FEA                                           __ptext17 17B0  
                                         __ptext50 1AD4                                           __ptext42 101A  
                                         __ptext34 0888                                           __ptext26 1D36  
                                         __ptext18 181A                                           __ptext51 09CA  
                                         __ptext43 1F2A                                           __ptext35 1BF6  
                                         __ptext27 1DAA                                           __ptext19 18EE  
                                         __ptext60 1C38                                           __ptext52 2408  
                                         __ptext44 2320                                           __ptext36 1B28  
                                         __ptext28 1DE2                                           __ptext61 0F66  
                                         __ptext53 1956                                           __ptext45 1C7A  
                                         __ptext37 19BA                                           __ptext29 1F8E  
                                         __ptext70 0CBE                                           __ptext62 239C  
                                         __ptext54 1574                                           __ptext46 206C  
                                         __ptext38 1172                                           __ptext71 2200  
                                         __ptext63 1A76                                           __ptext55 0AD0  
                                         __ptext47 21E2                                           __ptext39 1A18  
                                         __ptext80 13EC                                           __ptext72 24B4  
                                         __ptext64 246E                                           __ptext56 1E1A  
                                         __ptext48 121A                                           __ptext81 1E8A  
                                         __ptext73 23AC                                           __ptext65 2478  
                                         __ptext57 1360                                           __ptext49 22E4  
                                         __ptext90 2344                                           __ptext82 1EC0  
                                         __ptext74 22F8                                           __ptext66 248A  
                                         __ptext58 1D70                                           __ptext91 210A  
                                         __ptext83 2094                                           __ptext75 23BC  
                                         __ptext67 20E4                                           __ptext59 2482  
                                         __ptext92 2424                                           __ptext84 2492  
                                         __ptext76 24A6                                           __ptext68 2416  
                                         __ptext93 2130                                           __ptext85 21A2  
                                         __ptext77 24B8                                           __ptext69 228C  
                                         __ptext94 2156                                           __ptext86 2274  
                                         __ptext78 24BC                                           __ptext95 20BC  
                                         __ptext87 2332                                           __ptext79 221E  
                                         __ptext96 225A                                           __ptext88 1EF6  
                                         __ptext97 230C                                           __ptext89 22A2  
                                   OpenPWM5@period 00B7                                           __ptext98 15F2  
                                         __ptext99 1CBA                                     ??_GetCharRxBuf 00BD  
                                   ??_GetCharTxBuf 0031                                  ??_CalibrateOnLine 00C3  
                               SetDCPWM5@dutycycle 00B7                               __size_of_SetUnipolar 0006  
                                    __size_of_main 0798                                     Delay1TCYx@unit 00B7  
                 __size_of_NormaliseSensorReadings 007E                            __size_of_ReadCharEEPROM 0010  
              __size_of_CalculateSensorSumDiscrete 0040                                   ?_WriteCharEEPROM 00BA  
          CalibrateThreshold@sensor_threshold_temp 00C3                              __size_ofi1_SetChanADC 0016  
                                     i1_ConvertADC 24C0                                _MillisecondTimerISR 223C  
                                  _LoadCalibration 1172                                      _USART1_Status 001B  
                                ??_ConfigureTimer0 00BB                                  ??_ConfigureTimer1 00BB  
                                ??_ConfigureTimer2 00B8                            __size_of_ReadEchoLength 000A  
                            __CFG_ADDRBW$ADDR20BIT 000000                       NormaliseSensorReadings@index 00BF  
                              _GenerateCalibration 101A                                         _INTCONbits 000FF2  
                                   ??_EnableMotors 00B7                                  _Rx_chars_received 0016  
                                       _PB1pressed 1A76                                         _PB2pressed 19BA  
                                    OWReset@result 00B7                               __end_of_Delay10KTCYx 2200  
                             ?_MillisecondTimerISR 002B                                           intlevel1 0000  
                                         intlevel2 0000                            _CalculateSensorStatuses 09CA  
                  __end_of_ResetAccumulatedCurrent 1FEA                                      ??_OWWriteByte 00B8  
                                    ?_ConfigureADC 002B                                      ?_ConfigurePWM 002B  
                                    _LoadPIDValues 0BC8                               ?_GenerateCalibration 002B  
                                SetChanADC@channel 00B8                                         _RCSTA1bits 000FAB  
                     __size_of_ConfigureUltrasound 0028                                    WriteEEPROM@data 00B9  
                                     i1_SetChanADC 22B8                                      _Rx_msg_length 0018  
                           __size_of_SetADCChannel 00EE                              SendStatus@status_code 00BF  
                                ??i1_SetADCChannel 002D                           __end_of_SetReverseMotorL 24B0  
                                    ??_GetDistance 00B8                     SendPIDSetPointOnLine@set_point 00BF  
                            main@PID_set_point_ptr 0113                          __size_of_CommandAvailable 000E  
                    SendBattVoltageInitial@reading 00BF                                         _PID_output 007F  
                     __size_of_SetDirectionForward 0006                           SendOffsets@offsets_array 00BF  
                           __size_of_BusySensorAcq 0010                      __size_of_SendDefaultPIDValues 006A  
                           __size_of_ReadIntEEPROM 005E                              ??_MillisecondTimerISR 0046  
                                   ??_ConfigureADC 00BC                                     ??_ConfigurePWM 00B8  
                                   ?_LoadPIDValues 002B                                    OWWriteByte@byte 00B8  
                        __size_of_CalibrateOffsets 008C                              ??_GenerateCalibration 00C5  
                           __size_of_UltrasoundISR 0032                               __size_of_Write1USART 0016  
                                     _put_Rx_index 001F                                     _WirelessTx_ISR 217C  
                              _SendStoredPIDValues 1746                            __end_of_LoadCalibration 121A  
                                     _put_Tx_index 0020                               main@off_line_sum_ptr 0115  
