

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Apr 25 11:31:19 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	text108,global,reloc=2,class=CODE,delta=1
   124                           	psect	text109,global,reloc=2,class=CODE,delta=1
   125                           	psect	text110,global,reloc=2,class=CODE,delta=1
   126                           	psect	text111,global,reloc=2,class=CODE,delta=1
   127                           	psect	text112,global,reloc=2,class=CODE,delta=1
   128                           	psect	text113,global,reloc=2,class=CODE,delta=1
   129                           	psect	text114,global,reloc=2,class=CODE,delta=1
   130                           	psect	text115,global,reloc=2,class=CODE,delta=1
   131                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   132                           	psect	text117,global,reloc=2,class=CODE,delta=1
   133                           	psect	text118,global,reloc=2,class=CODE,delta=1
   134                           	psect	text119,global,reloc=2,class=CODE,delta=1
   135                           	psect	text120,global,reloc=2,class=CODE,delta=1
   136                           	psect	text121,global,reloc=2,class=CODE,delta=1
   137                           	psect	text122,global,reloc=2,class=CODE,delta=1
   138                           	psect	text123,global,reloc=2,class=CODE,delta=1
   139                           	psect	text124,global,reloc=2,class=CODE,delta=1
   140                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   141                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   142                           	psect	text126,global,reloc=2,class=CODE,delta=1
   143                           	psect	text127,global,reloc=2,class=CODE,delta=1
   144                           	psect	text128,global,reloc=2,class=CODE,delta=1
   145                           	psect	text129,global,reloc=2,class=CODE,delta=1
   146                           	psect	text130,global,reloc=2,class=CODE,delta=1
   147                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   148                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   149  0000                     
   150                           	psect	smallconst
   151  001000                     __psmallconst:
   152                           	opt stack 0
   153  001000  00                 	db	0
   154  001001                     exp@coeff:
   155                           	opt stack 0
   156  001001  00                 	db	0
   157  001002  80                 	db	128
   158  001003  3F                 	db	63
   159  001004  72                 	db	114
   160  001005  31                 	db	49
   161  001006  3F                 	db	63
   162  001007  FE                 	db	254
   163  001008  75                 	db	117
   164  001009  3E                 	db	62
   165  00100A  58                 	db	88
   166  00100B  63                 	db	99
   167  00100C  3D                 	db	61
   168  00100D  95                 	db	149
   169  00100E  1D                 	db	29
   170  00100F  3C                 	db	60
   171  001010  C5                 	db	197
   172  001011  AE                 	db	174
   173  001012  3A                 	db	58
   174  001013  79                 	db	121
   175  001014  21                 	db	33
   176  001015  39                 	db	57
   177  001016  94                 	db	148
   178  001017  80                 	db	128
   179  001018  37                 	db	55
   180  001019  93                 	db	147
   181  00101A  A7                 	db	167
   182  00101B  35                 	db	53
   183  00101C  56                 	db	86
   184  00101D  15                 	db	21
   185  00101E  34                 	db	52
   186  00101F                     __end_ofexp@coeff:
   187                           	opt stack 0
   188  00101F                     log@coeff:
   189                           	opt stack 0
   190  00101F  00                 	db	0
   191  001020  00                 	db	0
   192  001021  00                 	db	0
   193  001022  00                 	db	0
   194  001023  80                 	db	128
   195  001024  3F                 	db	63
   196  001025  F0                 	db	240
   197  001026  FF                 	db	255
   198  001027  BE                 	db	190
   199  001028  E2                 	db	226
   200  001029  A9                 	db	169
   201  00102A  3E                 	db	62
   202  00102B  83                 	db	131
   203  00102C  76                 	db	118
   204  00102D  BE                 	db	190
   205  00102E  AE                 	db	174
   206  00102F  2B                 	db	43
   207  001030  3E                 	db	62
   208  001031  3C                 	db	60
   209  001032  C3                 	db	195
   210  001033  BD                 	db	189
   211  001034  D2                 	db	210
   212  001035  13                 	db	19
   213  001036  3D                 	db	61
   214  001037  78                 	db	120
   215  001038  D3                 	db	211
   216  001039  BB                 	db	187
   217  00103A                     __end_oflog@coeff:
   218                           	opt stack 0
   219  00103A  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           	psect	nvBANK0
   222  0000EB                     __pnvBANK0:
   223                           	opt stack 0
   224  0000EB                     _sensor_threshold_ptr:
   225                           	opt stack 0
   226  0000EB                     	ds	2
   227                           
   228                           	psect	nvBANK1
   229  000168                     __pnvBANK1:
   230                           	opt stack 0
   231  000168                     _convert_cm:
   232                           	opt stack 0
   233  000168                     	ds	3
   234  00016B                     _convert_in:
   235                           	opt stack 0
   236  00016B                     	ds	3
   237  0000                     _ADCON0	set	4034
   238  0000                     _ADCON0bits	set	4034
   239  0000                     _ADCON1	set	4033
   240  0000                     _ADCON2	set	4032
   241  0000                     _ADRESH	set	4036
   242  0000                     _ADRESL	set	4035
   243  0000                     _CCP4CON	set	3955
   244  0000                     _CCP5CON	set	3952
   245  0000                     _CCPR4L	set	3956
   246  0000                     _CCPR5L	set	3953
   247  0000                     _EEADR	set	4009
   248  0000                     _EEADRH	set	4010
   249  0000                     _EECON1bits	set	4006
   250  0000                     _EECON2	set	4007
   251  0000                     _EEDATA	set	4008
   252  0000                     _INTCON2bits	set	4081
   253  0000                     _INTCON3bits	set	4080
   254  0000                     _INTCONbits	set	4082
   255  0000                     _IPR1bits	set	3999
   256  0000                     _LATDbits	set	3980
   257  0000                     _LATE	set	3981
   258  0000                     _LATEbits	set	3981
   259  0000                     _LATHbits	set	3984
   260  0000                     _LATJ	set	3985
   261  0000                     _PIE1bits	set	3997
   262  0000                     _PIR1bits	set	3998
   263  0000                     _PORTBbits	set	3969
   264  0000                     _PORTHbits	set	3975
   265  0000                     _PR2	set	4043
   266  0000                     _PR4	set	3959
   267  0000                     _RCONbits	set	4048
   268  0000                     _RCREG1	set	4014
   269  0000                     _RCSTA1	set	4011
   270  0000                     _RCSTA1bits	set	4011
   271  0000                     _SPBRG1	set	4015
   272  0000                     _SPBRGH1	set	3967
   273  0000                     _T0CON	set	4053
   274  0000                     _T0CONbits	set	4053
   275  0000                     _T1CON	set	4045
   276  0000                     _T1CONbits	set	4045
   277  0000                     _T2CON	set	4042
   278  0000                     _T2CONbits	set	4042
   279  0000                     _T3CONbits	set	4017
   280  0000                     _T4CONbits	set	3958
   281  0000                     _TMR0H	set	4055
   282  0000                     _TMR0L	set	4054
   283  0000                     _TMR1H	set	4047
   284  0000                     _TMR1L	set	4046
   285  0000                     _TMR2	set	4044
   286  0000                     _TRISA	set	3986
   287  0000                     _TRISB	set	3987
   288  0000                     _TRISC	set	3988
   289  0000                     _TRISCbits	set	3988
   290  0000                     _TRISD	set	3989
   291  0000                     _TRISE	set	3990
   292  0000                     _TRISG	set	3992
   293  0000                     _TRISGbits	set	3992
   294  0000                     _TRISHbits	set	3993
   295  0000                     _TRISJ	set	3994
   296  0000                     _TXREG1	set	4013
   297  0000                     _TXSTA1	set	4012
   298  0000                     _TXSTA1bits	set	4012
   299                           
   300                           ; #config settings
   301  0000                     
   302                           	psect	cinit
   303  0041AE                     __pcinit:
   304                           	opt stack 0
   305  0041AE                     start_initialization:
   306                           	opt stack 0
   307  0041AE                     __initialization:
   308                           	opt stack 0
   309                           
   310                           ; Clear objects allocated to BANK1 (60 bytes)
   311  0041AE  EE01  F000         	lfsr	0,__pbssBANK1
   312  0041B2  0E3C               	movlw	60
   313  0041B4                     clear_0:
   314  0041B4  6AEE               	clrf	postinc0,c
   315  0041B6  06E8               	decf	wreg,f,c
   316  0041B8  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BANK0 (32 bytes)
   319  0041BA  EE00  F0CB         	lfsr	0,__pbssBANK0
   320  0041BE  0E20               	movlw	32
   321  0041C0                     clear_1:
   322  0041C0  6AEE               	clrf	postinc0,c
   323  0041C2  06E8               	decf	wreg,f,c
   324  0041C4  E1FD               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to COMRAM (42 bytes)
   327  0041C6  EE00  F001         	lfsr	0,__pbssCOMRAM
   328  0041CA  0E2A               	movlw	42
   329  0041CC                     clear_2:
   330  0041CC  6AEE               	clrf	postinc0,c
   331  0041CE  06E8               	decf	wreg,f,c
   332  0041D0  E1FD               	bnz	clear_2
   333  0041D2                     end_of_initialization:
   334                           	opt stack 0
   335  0041D2                     __end_of__initialization:
   336                           	opt stack 0
   337  0041D2  0100               	movlb	0
   338  0041D4  EF1E  F008         	goto	_main	;jump to C main() function
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	bssCOMRAM
   343  000001                     __pbssCOMRAM:
   344                           	opt stack 0
   345  000001                     _SystemClock:
   346                           	opt stack 0
   347  000001                     	ds	6
   348  000007                     _DCmotorL:
   349                           	opt stack 0
   350  000007                     	ds	2
   351  000009                     _DCmotorR:
   352                           	opt stack 0
   353  000009                     	ds	2
   354  00000B                     _echo_time:
   355                           	opt stack 0
   356  00000B                     	ds	2
   357  00000D                     _millisecond_COUNT0:
   358                           	opt stack 0
   359  00000D                     	ds	2
   360  00000F                     _millisecond_COUNT1:
   361                           	opt stack 0
   362  00000F                     	ds	2
   363  000011                     _millisecond_COUNT2:
   364                           	opt stack 0
   365  000011                     	ds	2
   366  000013                     _RxCharacter:
   367                           	opt stack 0
   368  000013                     	ds	1
   369  000014                     _Rx_chars_received:
   370                           	opt stack 0
   371  000014                     	ds	1
   372  000015                     _Rx_complete:
   373                           	opt stack 0
   374  000015                     	ds	1
   375  000016                     _Rx_msg_length:
   376                           	opt stack 0
   377  000016                     	ds	1
   378  000017                     _TxCharacter:
   379                           	opt stack 0
   380  000017                     	ds	1
   381  000018                     _Tx_complete:
   382                           	opt stack 0
   383  000018                     	ds	1
   384  000019                     _USART1_Status:
   385                           	opt stack 0
   386  000019                     	ds	1
   387  00001A                     _echo_acq_done:
   388                           	opt stack 0
   389  00001A                     	ds	1
   390  00001B                     _get_Rx_index:
   391                           	opt stack 0
   392  00001B                     	ds	1
   393  00001C                     _get_Tx_index:
   394                           	opt stack 0
   395  00001C                     	ds	1
   396  00001D                     _put_Rx_index:
   397                           	opt stack 0
   398  00001D                     	ds	1
   399  00001E                     _put_Tx_index:
   400                           	opt stack 0
   401  00001E                     	ds	1
   402  00001F                     _second_rollover_flag:
   403                           	opt stack 0
   404  00001F                     	ds	1
   405  000020                     _sensor_acq_done:
   406                           	opt stack 0
   407  000020                     	ds	1
   408  000021                     _sensor_acq_index:
   409                           	opt stack 0
   410  000021                     	ds	1
   411  000022                     _system_clock_enable:
   412                           	opt stack 0
   413  000022                     	ds	1
   414  000023                     _sensor_status:
   415                           	opt stack 0
   416  000023                     	ds	5
   417  000028                     _sensor_threshold:
   418                           	opt stack 0
   419  000028                     	ds	2
   420  00002A                     _line_mode:
   421                           	opt stack 0
   422  00002A                     	ds	1
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           
   426                           	psect	bssBANK0
   427  0000CB                     __pbssBANK0:
   428                           	opt stack 0
   429  0000CB                     _sensor_readings_raw:
   430                           	opt stack 0
   431  0000CB                     	ds	10
   432  0000D5                     _PID_Kd:
   433                           	opt stack 0
   434  0000D5                     	ds	2
   435  0000D7                     _PID_Ki:
   436                           	opt stack 0
   437  0000D7                     	ds	2
   438  0000D9                     _PID_error:
   439                           	opt stack 0
   440  0000D9                     	ds	2
   441  0000DB                     _PID_output:
   442                           	opt stack 0
   443  0000DB                     	ds	2
   444  0000DD                     _errno:
   445                           	opt stack 0
   446  0000DD                     	ds	2
   447  0000DF                     _sensor_offsets:
   448                           	opt stack 0
   449  0000DF                     	ds	10
   450  0000E9                     _PID_Kp:
   451                           	opt stack 0
   452  0000E9                     	ds	2
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           
   456                           	psect	bssBANK1
   457  000100                     __pbssBANK1:
   458                           	opt stack 0
   459  000100                     _Rx_buffer:
   460                           	opt stack 0
   461  000100                     	ds	25
   462  000119                     _Tx_buffer:
   463                           	opt stack 0
   464  000119                     	ds	25
   465  000132                     _sensor_readings_normalised:
   466                           	opt stack 0
   467  000132                     	ds	10
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           
   471                           	psect	cstackBANK1
   472  00013C                     __pcstackBANK1:
   473                           	opt stack 0
   474  00013C                     ??_main:
   475                           
   476                           ; 0 bytes @ 0x0
   477  00013C                     	ds	4
   478  000140                     main@battery_current_ptr:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x4
   482  000140                     	ds	2
   483  000142                     main@battery_current_acc_ptr:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x6
   487  000142                     	ds	2
   488  000144                     main@loop_count:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x8
   492  000144                     	ds	1
   493  000145                     main@send_battery_stats_flag:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x9
   497  000145                     	ds	1
   498  000146                     main@find_line_flag:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0xA
   502  000146                     	ds	1
   503  000147                     main@battery_current_acc:
   504                           	opt stack 0
   505                           
   506                           ; 4 bytes @ 0xB
   507  000147                     	ds	4
   508  00014B                     main@battery_current:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0xF
   512  00014B                     	ds	2
   513  00014D                     main@sensor_sum_ptr:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x11
   517  00014D                     	ds	2
   518  00014F                     main@line_mode_ptr:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x13
   522  00014F                     	ds	2
   523  000151                     main@battery_voltage_ptr:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x15
   527  000151                     	ds	2
   528  000153                     main@line_end_flag:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x17
   532  000153                     	ds	1
   533  000154                     main@wall_detected_flag:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x18
   537  000154                     	ds	1
   538  000155                     main@battery_voltage:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x19
   542  000155                     	ds	2
   543  000157                     main@D_temp:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x1B
   547  000157                     	ds	2
   548  000159                     main@stop_flag:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x1D
   552  000159                     	ds	1
   553  00015A                     main@I_max:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x1E
   557  00015A                     	ds	2
   558  00015C                     main@I_min:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x20
   562  00015C                     	ds	2
   563  00015E                     main@command_msg:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x22
   567  00015E                     	ds	1
   568  00015F                     main@Kp_stored:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x23
   572  00015F                     	ds	2
   573  000161                     main@Kd_stored:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x25
   577  000161                     	ds	2
   578  000163                     main@Ki_stored:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x27
   582  000163                     	ds	2
   583  000165                     main@I_temp:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x29
   587  000165                     	ds	2
   588  000167                     main@sensor_sum:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x2B
   592  000167                     	ds	1
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           
   596                           	psect	cstackBANK0
   597  000060                     __pcstackBANK0:
   598                           	opt stack 0
   599  000060                     ReadTimer1@timer:
   600                           	opt stack 0
   601  000060                     i2WriteTimer0@timer:
   602                           	opt stack 0
   603  000060                     i2WriteTimer1@timer:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x0
   607  000060                     	ds	2
   608  000062                     ??_isrHP:
   609                           
   610                           ; 0 bytes @ 0x2
   611  000062                     	ds	14
   612  000070                     ??_SetChanADC:
   613  000070                     ??_Delay10KTCYx:
   614  000070                     ??_NormaliseSensorReadings:
   615  000070                     ??_CalculateSensorStatuses:
   616  000070                     ?_ReadADC:
   617                           	opt stack 0
   618  000070                     ?_ReadEchoLength:
   619                           	opt stack 0
   620  000070                     ?_ReadMillis0:
   621                           	opt stack 0
   622  000070                     ?_ReadMillis1:
   623                           	opt stack 0
   624  000070                     ?_ReadMillis2:
   625                           	opt stack 0
   626  000070                     ?_CalculateSensorError:
   627                           	opt stack 0
   628  000070                     ?___wmul:
   629                           	opt stack 0
   630  000070                     ?___awmod:
   631                           	opt stack 0
   632  000070                     ?___ftpack:
   633                           	opt stack 0
   634  000070                     ?_frexp:
   635                           	opt stack 0
   636  000070                     ?___ftneg:
   637                           	opt stack 0
   638  000070                     FlushTxBuf@index:
   639                           	opt stack 0
   640  000070                     FlushRxBuf@index:
   641                           	opt stack 0
   642  000070                     OWReset@result:
   643                           	opt stack 0
   644  000070                     OWWriteBit@b:
   645                           	opt stack 0
   646  000070                     OWReadBit@result:
   647                           	opt stack 0
   648  000070                     OpenADC@config2:
   649                           	opt stack 0
   650  000070                     OpenPWM4@period:
   651                           	opt stack 0
   652  000070                     OpenPWM5@period:
   653                           	opt stack 0
   654  000070                     OpenTimer0@config:
   655                           	opt stack 0
   656  000070                     OpenTimer1@config:
   657                           	opt stack 0
   658  000070                     OpenTimer2@config:
   659                           	opt stack 0
   660  000070                     Read1USART@data:
   661                           	opt stack 0
   662  000070                     Delay1TCYx@unit:
   663                           	opt stack 0
   664  000070                     WriteEEPROM@address:
   665                           	opt stack 0
   666  000070                     ReadEEPROM@address:
   667                           	opt stack 0
   668  000070                     CalculateSensorError@sum:
   669                           	opt stack 0
   670  000070                     DisplaySensorStatuses@status_array:
   671                           	opt stack 0
   672  000070                     SetDCPWM4@dutycycle:
   673                           	opt stack 0
   674  000070                     SetDCPWM5@dutycycle:
   675                           	opt stack 0
   676  000070                     WriteTimer0@timer0:
   677                           	opt stack 0
   678  000070                     WriteTimer1@timer1:
   679                           	opt stack 0
   680  000070                     Open1USART@spbrg:
   681                           	opt stack 0
   682  000070                     ___wmul@multiplier:
   683                           	opt stack 0
   684  000070                     ___awmod@dividend:
   685                           	opt stack 0
   686  000070                     ___ftpack@arg:
   687                           	opt stack 0
   688  000070                     ___ftge@ff1:
   689                           	opt stack 0
   690  000070                     ___ftneg@f1:
   691                           	opt stack 0
   692  000070                     frexp@value:
   693                           	opt stack 0
   694                           
   695                           ; 3 bytes @ 0x10
   696  000070                     	ds	1
   697  000071                     OWWriteByte@byte:
   698                           	opt stack 0
   699  000071                     OWReadByte@result:
   700                           	opt stack 0
   701  000071                     OpenADC@portconfig:
   702                           	opt stack 0
   703  000071                     SetChanADC@channel:
   704                           	opt stack 0
   705  000071                     Delay10KTCYx@unit:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x11
   709  000071                     	ds	1
   710  000072                     ??_SetDCPWM5:
   711  000072                     ??_SetDCPWM4:
   712  000072                     ??_OpenADC:
   713  000072                     ??_ReadADC:
   714  000072                     ??_DisplaySensorStatuses:
   715  000072                     ?_ReadIntEEPROM:
   716                           	opt stack 0
   717  000072                     WriteEEPROM@data:
   718                           	opt stack 0
   719  000072                     OWWriteByte@i:
   720                           	opt stack 0
   721  000072                     OWReadByte@i:
   722                           	opt stack 0
   723  000072                     SetADCChannel@channel:
   724                           	opt stack 0
   725  000072                     Open1USART@config:
   726                           	opt stack 0
   727  000072                     ReadIntEEPROM@address:
   728                           	opt stack 0
   729  000072                     ReadCharEEPROM@address:
   730                           	opt stack 0
   731  000072                     WriteTimer0@timer:
   732                           	opt stack 0
   733  000072                     WriteTimer1@timer:
   734                           	opt stack 0
   735  000072                     ___wmul@multiplicand:
   736                           	opt stack 0
   737  000072                     ___awmod@divisor:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x12
   741  000072                     	ds	1
   742  000073                     ??_CalibrateOffsets:
   743  000073                     ?_ReadVoltage:
   744                           	opt stack 0
   745  000073                     CalculateSensorStatuses@index:
   746                           	opt stack 0
   747  000073                     ___ftpack@exp:
   748                           	opt stack 0
   749  000073                     WriteIntEEPROM@address:
   750                           	opt stack 0
   751  000073                     WriteCharEEPROM@address:
   752                           	opt stack 0
   753  000073                     frexp@eptr:
   754                           	opt stack 0
   755  000073                     ___ftge@ff2:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x13
   759  000073                     	ds	1
   760  000074                     ??_ReadIntEEPROM:
   761  000074                     NormaliseSensorReadings@index:
   762                           	opt stack 0
   763  000074                     DisplaySensorStatuses@index:
   764                           	opt stack 0
   765  000074                     OpenADC@config:
   766                           	opt stack 0
   767  000074                     ___awmod@counter:
   768                           	opt stack 0
   769  000074                     ___ftpack@sign:
   770                           	opt stack 0
   771  000074                     SetDCPWM4@DCycle:
   772                           	opt stack 0
   773  000074                     SetDCPWM5@DCycle:
   774                           	opt stack 0
   775  000074                     ___wmul@product:
   776                           	opt stack 0
   777  000074                     ConfigureUltrasound@echo_to_cm:
   778                           	opt stack 0
   779                           
   780                           ; 3 bytes @ 0x14
   781  000074                     	ds	1
   782  000075                     ??___ftpack:
   783  000075                     ??_frexp:
   784  000075                     ??_ReadVoltage:
   785  000075                     WriteCharEEPROM@data:
   786                           	opt stack 0
   787  000075                     CalibrateOffsets@index:
   788                           	opt stack 0
   789  000075                     ___awmod@sign:
   790                           	opt stack 0
   791  000075                     WriteIntEEPROM@data:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x15
   795  000075                     	ds	1
   796  000076                     ??_PutCharTxBuf:
   797  000076                     ??_PutCharRxBuf:
   798  000076                     ??_GetCharRxBuf:
   799  000076                     ??___ftge:
   800  000076                     SetDCMotorL@duty_cycle:
   801                           	opt stack 0
   802  000076                     SetDCMotorR@duty_cycle:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x16
   806  000076                     	ds	1
   807  000077                     PutCharTxBuf@ch:
   808                           	opt stack 0
   809  000077                     PutCharRxBuf@ch:
   810                           	opt stack 0
   811  000077                     GetCharRxBuf@ch:
   812                           	opt stack 0
   813  000077                     ReadIntEEPROM@data:
   814                           	opt stack 0
   815  000077                     ConfigureUltrasound@echo_to_in:
   816                           	opt stack 0
   817                           
   818                           ; 3 bytes @ 0x17
   819  000077                     	ds	1
   820  000078                     ?___ftdiv:
   821                           	opt stack 0
   822  000078                     ?___awtoft:
   823                           	opt stack 0
   824  000078                     ?___lbtoft:
   825                           	opt stack 0
   826  000078                     ?___lltoft:
   827                           	opt stack 0
   828  000078                     SendStatus@status_code:
   829                           	opt stack 0
   830  000078                     SetDCMotorPID@PIDoutput:
   831                           	opt stack 0
   832  000078                     SendLineMode@line_mode:
   833                           	opt stack 0
   834  000078                     SendOffsets@offsets_array:
   835                           	opt stack 0
   836  000078                     SendThreshold@sensor_threshold:
   837                           	opt stack 0
   838  000078                     SendDefaultPIDValues@Kp:
   839                           	opt stack 0
   840  000078                     SendStoredPIDValues@Kp:
   841                           	opt stack 0
   842  000078                     SendCurrentPIDValues@Kp:
   843                           	opt stack 0
   844  000078                     SendBattVoltageInitial@reading:
   845                           	opt stack 0
   846  000078                     ReadVoltage@result:
   847                           	opt stack 0
   848  000078                     ___awtoft@c:
   849                           	opt stack 0
   850  000078                     ___ftdiv@f1:
   851                           	opt stack 0
   852  000078                     ___lltoft@c:
   853                           	opt stack 0
   854                           
   855                           ; 4 bytes @ 0x18
   856  000078                     	ds	1
   857  000079                     ??_SetPIDValues:
   858                           
   859                           ; 0 bytes @ 0x19
   860  000079                     	ds	1
   861  00007A                     ??_SetDCMotorPID:
   862  00007A                     ??_SendOffsets:
   863  00007A                     ??_SendThreshold:
   864  00007A                     ??_SendBattVoltageInitial:
   865  00007A                     SendDefaultPIDValues@Kd:
   866                           	opt stack 0
   867  00007A                     SendStoredPIDValues@Kd:
   868                           	opt stack 0
   869  00007A                     SendCurrentPIDValues@Kd:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x1A
   873  00007A                     	ds	1
   874  00007B                     ___awtoft@sign:
   875                           	opt stack 0
   876  00007B                     ___lbtoft@c:
   877                           	opt stack 0
   878  00007B                     ___ftdiv@f2:
   879                           	opt stack 0
   880                           
   881                           ; 3 bytes @ 0x1B
   882  00007B                     	ds	1
   883  00007C                     ??___lltoft:
   884  00007C                     ?___ftmul:
   885                           	opt stack 0
   886  00007C                     SendOffsets@index:
   887                           	opt stack 0
   888  00007C                     SetPIDValues@char_index:
   889                           	opt stack 0
   890  00007C                     SendDefaultPIDValues@Ki:
   891                           	opt stack 0
   892  00007C                     SendStoredPIDValues@Ki:
   893                           	opt stack 0
   894  00007C                     SendCurrentPIDValues@Ki:
   895                           	opt stack 0
   896  00007C                     ___ftmul@f1:
   897                           	opt stack 0
   898                           
   899                           ; 3 bytes @ 0x1C
   900  00007C                     	ds	1
   901  00007D                     ??_GenerateCalibration:
   902  00007D                     
   903                           ; 0 bytes @ 0x1D
   904  00007D                     	ds	1
   905  00007E                     ??___ftdiv:
   906  00007E                     
   907                           ; 0 bytes @ 0x1E
   908  00007E                     	ds	1
   909  00007F                     GenerateCalibration@index:
   910                           	opt stack 0
   911  00007F                     ___ftmul@f2:
   912                           	opt stack 0
   913                           
   914                           ; 3 bytes @ 0x1F
   915  00007F                     	ds	1
   916  000080                     ??_LoadCalibration:
   917  000080                     ___lltoft@exp:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x20
   921  000080                     	ds	1
   922  000081                     ___ftdiv@cntr:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x21
   926  000081                     	ds	1
   927  000082                     ??___ftmul:
   928  000082                     LoadCalibration@index:
   929                           	opt stack 0
   930  000082                     ___ftdiv@f3:
   931                           	opt stack 0
   932                           
   933                           ; 3 bytes @ 0x22
   934  000082                     	ds	3
   935  000085                     ___ftdiv@exp:
   936                           	opt stack 0
   937  000085                     ___ftmul@exp:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x25
   941  000085                     	ds	1
   942  000086                     ___ftdiv@sign:
   943                           	opt stack 0
   944  000086                     ___ftmul@f3_as_product:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0x26
   948  000086                     	ds	3
   949  000089                     ___ftmul@cntr:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x29
   953  000089                     	ds	1
   954  00008A                     ___ftmul@sign:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x2A
   958  00008A                     	ds	1
   959  00008B                     ?___ftadd:
   960                           	opt stack 0
   961  00008B                     ?___fttol:
   962                           	opt stack 0
   963  00008B                     ___ftadd@f1:
   964                           	opt stack 0
   965  00008B                     ___fttol@f1:
   966                           	opt stack 0
   967                           
   968                           ; 3 bytes @ 0x2B
   969  00008B                     	ds	3
   970  00008E                     ___ftadd@f2:
   971                           	opt stack 0
   972                           
   973                           ; 3 bytes @ 0x2E
   974  00008E                     	ds	1
   975  00008F                     ??___fttol:
   976                           
   977                           ; 0 bytes @ 0x2F
   978  00008F                     	ds	2
   979  000091                     ??___ftadd:
   980                           
   981                           ; 0 bytes @ 0x31
   982  000091                     	ds	3
   983  000094                     ___ftadd@sign:
   984                           	opt stack 0
   985  000094                     ___fttol@sign1:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x34
   989  000094                     	ds	1
   990  000095                     ___ftadd@exp2:
   991                           	opt stack 0
   992  000095                     ___fttol@lval:
   993                           	opt stack 0
   994                           
   995                           ; 4 bytes @ 0x35
   996  000095                     	ds	1
   997  000096                     ___ftadd@exp1:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x36
  1001  000096                     	ds	1
  1002  000097                     ?___ftsub:
  1003                           	opt stack 0
  1004  000097                     ?_eval_poly:
  1005                           	opt stack 0
  1006  000097                     ___ftsub@f1:
  1007                           	opt stack 0
  1008  000097                     eval_poly@x:
  1009                           	opt stack 0
  1010                           
  1011                           ; 3 bytes @ 0x37
  1012  000097                     	ds	2
  1013  000099                     ___fttol@exp1:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x39
  1017  000099                     	ds	1
  1018  00009A                     ?___altoft:
  1019                           	opt stack 0
  1020  00009A                     eval_poly@d:
  1021                           	opt stack 0
  1022  00009A                     ___ftsub@f2:
  1023                           	opt stack 0
  1024  00009A                     ___altoft@c:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x3A
  1028  00009A                     	ds	2
  1029  00009C                     eval_poly@n:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x3C
  1033  00009C                     	ds	1
  1034  00009D                     
  1035                           ; 0 bytes @ 0x3D
  1036  00009D                     	ds	1
  1037  00009E                     ??_eval_poly:
  1038  00009E                     ??___altoft:
  1039                           
  1040                           ; 0 bytes @ 0x3E
  1041  00009E                     	ds	2
  1042  0000A0                     eval_poly@res:
  1043                           	opt stack 0
  1044                           
  1045                           ; 3 bytes @ 0x40
  1046  0000A0                     	ds	2
  1047  0000A2                     ___altoft@exp:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x42
  1051  0000A2                     	ds	1
  1052  0000A3                     ?_log:
  1053                           	opt stack 0
  1054  0000A3                     ?_ldexp:
  1055                           	opt stack 0
  1056  0000A3                     ___altoft@sign:
  1057                           	opt stack 0
  1058  0000A3                     ldexp@value:
  1059                           	opt stack 0
  1060  0000A3                     log@x:
  1061                           	opt stack 0
  1062                           
  1063                           ; 3 bytes @ 0x43
  1064  0000A3                     	ds	1
  1065  0000A4                     ?_floor:
  1066                           	opt stack 0
  1067  0000A4                     floor@x:
  1068                           	opt stack 0
  1069                           
  1070                           ; 3 bytes @ 0x44
  1071  0000A4                     	ds	2
  1072  0000A6                     ldexp@newexp:
  1073                           	opt stack 0
  1074  0000A6                     log@exponent:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x46
  1078  0000A6                     	ds	1
  1079  0000A7                     floor@i:
  1080                           	opt stack 0
  1081                           
  1082                           ; 3 bytes @ 0x47
  1083  0000A7                     	ds	1
  1084  0000A8                     ??_ldexp:
  1085                           
  1086                           ; 0 bytes @ 0x48
  1087  0000A8                     	ds	2
  1088  0000AA                     floor@expon:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x4A
  1092  0000AA                     	ds	2
  1093  0000AC                     ?_exp:
  1094                           	opt stack 0
  1095  0000AC                     exp@x:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x4C
  1099  0000AC                     	ds	3
  1100  0000AF                     _exp$3772:
  1101                           	opt stack 0
  1102                           
  1103                           ; 3 bytes @ 0x4F
  1104  0000AF                     	ds	3
  1105  0000B2                     exp@exponent:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x52
  1109  0000B2                     	ds	2
  1110  0000B4                     exp@sign:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x54
  1114  0000B4                     	ds	1
  1115  0000B5                     ?_pow:
  1116                           	opt stack 0
  1117  0000B5                     pow@x:
  1118                           	opt stack 0
  1119                           
  1120                           ; 3 bytes @ 0x55
  1121  0000B5                     	ds	3
  1122  0000B8                     pow@y:
  1123                           	opt stack 0
  1124                           
  1125                           ; 3 bytes @ 0x58
  1126  0000B8                     	ds	3
  1127  0000BB                     _pow$3770:
  1128                           	opt stack 0
  1129                           
  1130                           ; 3 bytes @ 0x5B
  1131  0000BB                     	ds	3
  1132  0000BE                     _pow$3771:
  1133                           	opt stack 0
  1134                           
  1135                           ; 3 bytes @ 0x5E
  1136  0000BE                     	ds	3
  1137  0000C1                     pow@sign:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x61
  1141  0000C1                     	ds	1
  1142  0000C2                     pow@yi:
  1143                           	opt stack 0
  1144                           
  1145                           ; 4 bytes @ 0x62
  1146  0000C2                     	ds	4
  1147  0000C6                     _CalculateSensorSums$3769:
  1148                           	opt stack 0
  1149                           
  1150                           ; 3 bytes @ 0x66
  1151  0000C6                     	ds	3
  1152  0000C9                     CalculateSensorSums@sum:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x69
  1156  0000C9                     	ds	1
  1157  0000CA                     CalculateSensorSums@index:
  1158                           	opt stack 0
  1159                           
  1160                           ; 1 bytes @ 0x6A
  1161  0000CA                     	ds	1
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           
  1165                           	psect	cstackCOMRAM
  1166  00002B                     __pcstackCOMRAM:
  1167                           	opt stack 0
  1168  00002B                     ??i1_SetChanADC:
  1169  00002B                     ?i1_ReadADC:
  1170                           	opt stack 0
  1171  00002B                     ?i1___awmod:
  1172                           	opt stack 0
  1173  00002B                     Write1USART@data:
  1174                           	opt stack 0
  1175  00002B                     i1___awmod@dividend:
  1176                           	opt stack 0
  1177                           
  1178                           ; 2 bytes @ 0x0
  1179  00002B                     	ds	1
  1180  00002C                     i1SetChanADC@channel:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x1
  1184  00002C                     	ds	1
  1185  00002D                     ??i1_ReadADC:
  1186  00002D                     i1SetADCChannel@channel:
  1187                           	opt stack 0
  1188  00002D                     i1___awmod@divisor:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x2
  1192  00002D                     	ds	2
  1193  00002F                     i1___awmod@counter:
  1194                           	opt stack 0
  1195                           
  1196                           ; 1 bytes @ 0x4
  1197  00002F                     	ds	1
  1198  000030                     i1___awmod@sign:
  1199                           	opt stack 0
  1200                           
  1201                           ; 1 bytes @ 0x5
  1202  000030                     	ds	1
  1203  000031                     ??_GetCharTxBuf:
  1204                           
  1205                           ; 0 bytes @ 0x6
  1206  000031                     	ds	1
  1207  000032                     GetCharTxBuf@ch:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x7
  1211  000032                     	ds	1
  1212  000033                     ??_isrLP:
  1213                           
  1214                           ; 0 bytes @ 0x8
  1215  000033                     	ds	17
  1216  000044                     ?_ReadTimer1:
  1217                           	opt stack 0
  1218  000044                     i2WriteTimer0@timer0:
  1219                           	opt stack 0
  1220  000044                     i2WriteTimer1@timer1:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x19
  1224  000044                     	ds	2
  1225  000046                     postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           
  1228                           ; 0 bytes @ 0x1B
  1229 ;;
  1230 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1231 ;;
  1232 ;; *************** function _main *****************
  1233 ;; Defined at:
  1234 ;;		line 789 in file "FastBuggy17_Main_Code_TUNING.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  battery_curr    4   11[BANK1 ] unsigned long 
  1239 ;;  I_temp          2   41[BANK1 ] int 
  1240 ;;  Ki_stored       2   39[BANK1 ] int 
  1241 ;;  Kd_stored       2   37[BANK1 ] int 
  1242 ;;  Kp_stored       2   35[BANK1 ] int 
  1243 ;;  I_min           2   32[BANK1 ] int 
  1244 ;;  I_max           2   30[BANK1 ] int 
  1245 ;;  D_temp          2   27[BANK1 ] int 
  1246 ;;  battery_volt    2   25[BANK1 ] unsigned int 
  1247 ;;  battery_volt    2   21[BANK1 ] PTR unsigned int 
  1248 ;;		 -> main@battery_voltage(2), 
  1249 ;;  line_mode_pt    2   19[BANK1 ] PTR unsigned char 
  1250 ;;		 -> line_mode(1), 
  1251 ;;  sensor_sum_p    2   17[BANK1 ] PTR unsigned char 
  1252 ;;		 -> main@sensor_sum(1), 
  1253 ;;  battery_curr    2   15[BANK1 ] unsigned int 
  1254 ;;  battery_curr    2    6[BANK1 ] PTR unsigned long 
  1255 ;;		 -> main@battery_current_acc(4), 
  1256 ;;  battery_curr    2    4[BANK1 ] PTR unsigned int 
  1257 ;;		 -> main@battery_current(2), 
  1258 ;;  echo_length     2    0        unsigned int 
  1259 ;;  sensor_sum      1   43[BANK1 ] unsigned char 
  1260 ;;  command_msg     1   34[BANK1 ] unsigned char 
  1261 ;;  stop_flag       1   29[BANK1 ] unsigned char 
  1262 ;;  wall_detecte    1   24[BANK1 ] unsigned char 
  1263 ;;  line_end_fla    1   23[BANK1 ] unsigned char 
  1264 ;;  find_line_fl    1   10[BANK1 ] unsigned char 
  1265 ;;  send_battery    1    9[BANK1 ] unsigned char 
  1266 ;;  loop_count      1    8[BANK1 ] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;		None               void
  1269 ;; Registers used:
  1270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Locals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;Total ram usage:       44 bytes
  1281 ;; Hardware stack levels required when called:   13
  1282 ;; This function calls:
  1283 ;;		_BusyDistanceAcq
  1284 ;;		_BusySensorAcq
  1285 ;;		_CalculateSensorError
  1286 ;;		_CalculateSensorStatuses
  1287 ;;		_CalculateSensorSums
  1288 ;;		_CommandAvailable
  1289 ;;		_ConfigureADC
  1290 ;;		_ConfigureBuggyIO
  1291 ;;		_ConfigureInterrupts
  1292 ;;		_ConfigurePWM
  1293 ;;		_ConfigureTimer0
  1294 ;;		_ConfigureTimer1
  1295 ;;		_ConfigureTimer2
  1296 ;;		_ConfigureUltrasound
  1297 ;;		_ConfigureWireless
  1298 ;;		_Delay10KTCYx
  1299 ;;		_DisableMotors
  1300 ;;		_DisplaySensorStatuses
  1301 ;;		_EnableMotors
  1302 ;;		_EnableSensorLEDS
  1303 ;;		_FlashLEDS
  1304 ;;		_GenerateCalibration
  1305 ;;		_GetCommand
  1306 ;;		_GetDistance
  1307 ;;		_GetSensorReadings
  1308 ;;		_LoadCalibration
  1309 ;;		_LoadPIDValues
  1310 ;;		_NormaliseSensorReadings
  1311 ;;		_PB1pressed
  1312 ;;		_PB2pressed
  1313 ;;		_ReadEchoLength
  1314 ;;		_ReadIntEEPROM
  1315 ;;		_ReadMillis0
  1316 ;;		_ReadMillis1
  1317 ;;		_ReadMillis2
  1318 ;;		_ReadVoltage
  1319 ;;		_ResetAccumulatedCurrent
  1320 ;;		_ResetMillis0
  1321 ;;		_ResetMillis1
  1322 ;;		_ResetMillis2
  1323 ;;		_SendBattVoltageInitial
  1324 ;;		_SendCurrentPIDValues
  1325 ;;		_SendDefaultPIDValues
  1326 ;;		_SendLineMode
  1327 ;;		_SendStatus
  1328 ;;		_SendStoredPIDValues
  1329 ;;		_SetDCMotorL
  1330 ;;		_SetDCMotorPID
  1331 ;;		_SetDCMotorR
  1332 ;;		_SetDirectionForward
  1333 ;;		_SetForwardsMotorR
  1334 ;;		_SetPIDValues
  1335 ;;		_SetReverseMotorL
  1336 ;;		_SetUnipolar
  1337 ;;		_StopMotors
  1338 ;;		___wmul
  1339 ;; This function is called by:
  1340 ;;		Startup code after reset
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text0
  1345  00103C                     __ptext0:
  1346                           	opt stack 0
  1347  00103C                     _main:
  1348                           	opt stack 18
  1349                           
  1350                           ;FastBuggy17_Main_Code_TUNING.c: 792: unsigned char sensor_sum, loop_count = 0, stop_fla
      +                          g, find_line_flag, line_end_flag, wall_detected_flag, send_battery_stats_flag, command_m
      +                          sg;
  1351                           
  1352                           ;incstack = 0
  1353  00103C  0E00               	movlw	0
  1354  00103E  0101               	movlb	1	; () banked
  1355  001040  6F44               	movwf	main@loop_count& (0+255),b
  1356                           
  1357                           ; BSR set to: 1
  1358                           ;FastBuggy17_Main_Code_TUNING.c: 793: unsigned int echo_length, battery_voltage, battery
      +                          _current;
  1359                           ;FastBuggy17_Main_Code_TUNING.c: 794: unsigned long int battery_current_acc;
  1360                           ;FastBuggy17_Main_Code_TUNING.c: 795: int D_temp, I_temp, I_max, I_min, Kp_stored, Kd_st
      +                          ored, Ki_stored;
  1361                           ;FastBuggy17_Main_Code_TUNING.c: 798: unsigned char *sensor_sum_ptr, *line_mode_ptr;
  1362                           ;FastBuggy17_Main_Code_TUNING.c: 799: sensor_sum_ptr = &sensor_sum;
  1363  001042  0E67               	movlw	low main@sensor_sum
  1364  001044  0101               	movlb	1	; () banked
  1365  001046  6F4D               	movwf	main@sensor_sum_ptr& (0+255),b
  1366  001048  0E01               	movlw	high main@sensor_sum
  1367  00104A  0101               	movlb	1	; () banked
  1368  00104C  6F4E               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1369                           
  1370                           ; BSR set to: 1
  1371                           ;FastBuggy17_Main_Code_TUNING.c: 800: line_mode_ptr = &line_mode;
  1372  00104E  0E2A               	movlw	low _line_mode
  1373  001050  0101               	movlb	1	; () banked
  1374  001052  6F4F               	movwf	main@line_mode_ptr& (0+255),b
  1375  001054  0E00               	movlw	high _line_mode
  1376  001056  0101               	movlb	1	; () banked
  1377  001058  6F50               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1378                           
  1379                           ; BSR set to: 1
  1380                           ;FastBuggy17_Main_Code_TUNING.c: 802: unsigned int *battery_voltage_ptr, *battery_curren
      +                          t_ptr;
  1381                           ;FastBuggy17_Main_Code_TUNING.c: 803: unsigned long int *battery_current_acc_ptr;
  1382                           ;FastBuggy17_Main_Code_TUNING.c: 805: battery_voltage_ptr = &battery_voltage;
  1383  00105A  0E55               	movlw	low main@battery_voltage
  1384  00105C  0101               	movlb	1	; () banked
  1385  00105E  6F51               	movwf	main@battery_voltage_ptr& (0+255),b
  1386  001060  0E01               	movlw	high main@battery_voltage
  1387  001062  0101               	movlb	1	; () banked
  1388  001064  6F52               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1389                           
  1390                           ; BSR set to: 1
  1391                           ;FastBuggy17_Main_Code_TUNING.c: 806: battery_current_ptr = &battery_current;
  1392  001066  0E4B               	movlw	low main@battery_current
  1393  001068  0101               	movlb	1	; () banked
  1394  00106A  6F40               	movwf	main@battery_current_ptr& (0+255),b
  1395  00106C  0E01               	movlw	high main@battery_current
  1396  00106E  0101               	movlb	1	; () banked
  1397  001070  6F41               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1398                           
  1399                           ; BSR set to: 1
  1400                           ;FastBuggy17_Main_Code_TUNING.c: 807: battery_current_acc_ptr = &battery_current_acc;
  1401  001072  0E47               	movlw	low main@battery_current_acc
  1402  001074  0101               	movlb	1	; () banked
  1403  001076  6F42               	movwf	main@battery_current_acc_ptr& (0+255),b
  1404  001078  0E01               	movlw	high main@battery_current_acc
  1405  00107A  0101               	movlb	1	; () banked
  1406  00107C  6F43               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;FastBuggy17_Main_Code_TUNING.c: 809: sensor_threshold_ptr = &sensor_threshold;
  1410  00107E  0E28               	movlw	low _sensor_threshold
  1411  001080  0100               	movlb	0	; () banked
  1412  001082  6FEB               	movwf	_sensor_threshold_ptr& (0+255),b
  1413  001084  0E00               	movlw	high _sensor_threshold
  1414  001086  0100               	movlb	0	; () banked
  1415  001088  6FEC               	movwf	(_sensor_threshold_ptr+1)& (0+255),b
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;FastBuggy17_Main_Code_TUNING.c: 811: ConfigureUltrasound(0.0137, 0.054);
  1419  00108A  0E76               	movlw	118
  1420  00108C  0100               	movlb	0	; () banked
  1421  00108E  6F74               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1422  001090  0E60               	movlw	96
  1423  001092  0100               	movlb	0	; () banked
  1424  001094  6F75               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1425  001096  0E3C               	movlw	60
  1426  001098  0100               	movlb	0	; () banked
  1427  00109A  6F76               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1428  00109C  0E2F               	movlw	47
  1429  00109E  0100               	movlb	0	; () banked
  1430  0010A0  6F77               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1431  0010A2  0E5D               	movlw	93
  1432  0010A4  0100               	movlb	0	; () banked
  1433  0010A6  6F78               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1434  0010A8  0E3D               	movlw	61
  1435  0010AA  0100               	movlb	0	; () banked
  1436  0010AC  6F79               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1437  0010AE  EC00  F021         	call	_ConfigureUltrasound	;wreg free
  1438                           
  1439                           ;FastBuggy17_Main_Code_TUNING.c: 812: ConfigureBuggyIO();
  1440  0010B2  ECD4  F021         	call	_ConfigureBuggyIO	;wreg free
  1441                           
  1442                           ;FastBuggy17_Main_Code_TUNING.c: 813: ConfigureInterrupts();
  1443  0010B6  EC14  F021         	call	_ConfigureInterrupts	;wreg free
  1444                           
  1445                           ;FastBuggy17_Main_Code_TUNING.c: 814: ConfigureTimer0();
  1446  0010BA  EC05  F022         	call	_ConfigureTimer0	;wreg free
  1447                           
  1448                           ;FastBuggy17_Main_Code_TUNING.c: 815: ConfigureTimer1();
  1449  0010BE  ECEE  F021         	call	_ConfigureTimer1	;wreg free
  1450                           
  1451                           ;FastBuggy17_Main_Code_TUNING.c: 816: ConfigureTimer2();
  1452  0010C2  ECF8  F022         	call	_ConfigureTimer2	;wreg free
  1453                           
  1454                           ;FastBuggy17_Main_Code_TUNING.c: 817: ConfigurePWM();
  1455  0010C6  ECC6  F022         	call	_ConfigurePWM	;wreg free
  1456                           
  1457                           ;FastBuggy17_Main_Code_TUNING.c: 818: ConfigureADC();
  1458  0010CA  EC3A  F022         	call	_ConfigureADC	;wreg free
  1459                           
  1460                           ;FastBuggy17_Main_Code_TUNING.c: 819: ConfigureWireless();
  1461  0010CE  ECC5  F021         	call	_ConfigureWireless	;wreg free
  1462                           
  1463                           ;FastBuggy17_Main_Code_TUNING.c: 821: DisableMotors();
  1464  0010D2  EC0D  F023         	call	_DisableMotors	;wreg free
  1465                           
  1466                           ;FastBuggy17_Main_Code_TUNING.c: 823: Delay10KTCYx(100);
  1467  0010D6  0E64               	movlw	100
  1468  0010D8  ECA7  F021         	call	_Delay10KTCYx
  1469                           
  1470                           ;FastBuggy17_Main_Code_TUNING.c: 825: battery_voltage = ReadVoltage();
  1471  0010DC  ECA8  F01C         	call	_ReadVoltage	;wreg free
  1472  0010E0  C073  F155         	movff	?_ReadVoltage,main@battery_voltage
  1473  0010E4  C074  F156         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1474                           
  1475                           ;FastBuggy17_Main_Code_TUNING.c: 827: SendStatus(0x00);
  1476  0010E8  0E00               	movlw	0
  1477  0010EA  EC3E  F01F         	call	_SendStatus
  1478                           
  1479                           ;FastBuggy17_Main_Code_TUNING.c: 829: SendBattVoltageInitial(battery_voltage_ptr);
  1480  0010EE  C151  F078         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1481  0010F2  C152  F079         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1482  0010F6  ECDD  F01C         	call	_SendBattVoltageInitial	;wreg free
  1483                           
  1484                           ;FastBuggy17_Main_Code_TUNING.c: 832: LATJ = 0x1F;
  1485  0010FA  0E1F               	movlw	31
  1486  0010FC  6E91               	movwf	3985,c	;volatile
  1487                           
  1488                           ;FastBuggy17_Main_Code_TUNING.c: 833: SendStatus(0x01);
  1489  0010FE  0E01               	movlw	1
  1490  001100  EC3E  F01F         	call	_SendStatus
  1491  001104  D000               	goto	l8251
  1492  001106                     l8251:
  1493                           
  1494                           ;FastBuggy17_Main_Code_TUNING.c: 836: if(PB1pressed() == 1) {
  1495  001106  EC6F  F01D         	call	_PB1pressed	;wreg free
  1496  00110A  06E8               	decf	wreg,f,c
  1497  00110C  A4D8               	btfss	status,2,c
  1498  00110E  D003               	goto	l8257
  1499                           
  1500                           ;FastBuggy17_Main_Code_TUNING.c: 837: line_mode = 0;
  1501  001110  0E00               	movlw	0
  1502  001112  D007               	goto	L1
  1503                           
  1504                           ;FastBuggy17_Main_Code_TUNING.c: 839: }
  1505                           
  1506                           ;FastBuggy17_Main_Code_TUNING.c: 838: break;
  1507  001114  D7F8               	goto	l8251
  1508  001116                     l8257:
  1509                           
  1510                           ;FastBuggy17_Main_Code_TUNING.c: 840: else if(PB2pressed() == 1) {
  1511  001116  EC11  F01D         	call	_PB2pressed	;wreg free
  1512  00111A  06E8               	decf	wreg,f,c
  1513  00111C  A4D8               	btfss	status,2,c
  1514  00111E  D7F3               	goto	l8251
  1515                           
  1516                           ;FastBuggy17_Main_Code_TUNING.c: 841: line_mode = 1;
  1517  001120  0E01               	movlw	1
  1518  001122                     L1:
  1519  001122  6E2A               	movwf	_line_mode,c
  1520                           
  1521                           ;FastBuggy17_Main_Code_TUNING.c: 842: break;
  1522  001124  D001               	goto	l8261
  1523  001126  D7EF               	goto	l8251
  1524  001128                     l8261:
  1525                           
  1526                           ;FastBuggy17_Main_Code_TUNING.c: 843: }
  1527                           ;FastBuggy17_Main_Code_TUNING.c: 844: }
  1528                           ;FastBuggy17_Main_Code_TUNING.c: 846: SendLineMode(line_mode_ptr);
  1529  001128  C14F  F078         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1530  00112C  C150  F079         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1531  001130  EC03  F01F         	call	_SendLineMode	;wreg free
  1532                           
  1533                           ;FastBuggy17_Main_Code_TUNING.c: 847: FlashLEDS();
  1534  001134  ECEC  F020         	call	_FlashLEDS	;wreg free
  1535                           
  1536                           ;FastBuggy17_Main_Code_TUNING.c: 849: EnableSensorLEDS();
  1537  001138  EC02  F023         	call	_EnableSensorLEDS	;wreg free
  1538                           
  1539                           ;FastBuggy17_Main_Code_TUNING.c: 852: LATJ = 0x0F;
  1540  00113C  0E0F               	movlw	15
  1541  00113E  6E91               	movwf	3985,c	;volatile
  1542                           
  1543                           ;FastBuggy17_Main_Code_TUNING.c: 853: SendStatus(0x02);
  1544  001140  0E02               	movlw	2
  1545  001142  EC3E  F01F         	call	_SendStatus
  1546  001146  D000               	goto	l8271
  1547  001148                     l8271:
  1548                           
  1549                           ;FastBuggy17_Main_Code_TUNING.c: 856: if(PB1pressed() == 1) {
  1550  001148  EC6F  F01D         	call	_PB1pressed	;wreg free
  1551  00114C  06E8               	decf	wreg,f,c
  1552  00114E  A4D8               	btfss	status,2,c
  1553  001150  D006               	goto	l8279
  1554                           
  1555                           ;FastBuggy17_Main_Code_TUNING.c: 857: FlashLEDS();
  1556  001152  ECEC  F020         	call	_FlashLEDS	;wreg free
  1557                           
  1558                           ;FastBuggy17_Main_Code_TUNING.c: 858: GenerateCalibration();
  1559  001156  ECD5  F012         	call	_GenerateCalibration	;wreg free
  1560                           
  1561                           ;FastBuggy17_Main_Code_TUNING.c: 859: break;
  1562  00115A  D00C               	goto	l8285
  1563                           
  1564                           ;FastBuggy17_Main_Code_TUNING.c: 860: }
  1565  00115C  D7F5               	goto	l8271
  1566  00115E                     l8279:
  1567                           
  1568                           ;FastBuggy17_Main_Code_TUNING.c: 861: else if(PB2pressed() == 1) {
  1569  00115E  EC11  F01D         	call	_PB2pressed	;wreg free
  1570  001162  06E8               	decf	wreg,f,c
  1571  001164  A4D8               	btfss	status,2,c
  1572  001166  D7F0               	goto	l8271
  1573                           
  1574                           ;FastBuggy17_Main_Code_TUNING.c: 862: FlashLEDS();
  1575  001168  ECEC  F020         	call	_FlashLEDS	;wreg free
  1576                           
  1577                           ;FastBuggy17_Main_Code_TUNING.c: 863: LoadCalibration();
  1578  00116C  ECE9  F00E         	call	_LoadCalibration	;wreg free
  1579                           
  1580                           ;FastBuggy17_Main_Code_TUNING.c: 864: break;
  1581  001170  D001               	goto	l8285
  1582  001172  D7EA               	goto	l8271
  1583  001174                     l8285:
  1584                           
  1585                           ;FastBuggy17_Main_Code_TUNING.c: 865: }
  1586                           ;FastBuggy17_Main_Code_TUNING.c: 867: }
  1587                           ;FastBuggy17_Main_Code_TUNING.c: 869: FlashLEDS();
  1588  001174  ECEC  F020         	call	_FlashLEDS	;wreg free
  1589                           
  1590                           ;FastBuggy17_Main_Code_TUNING.c: 872: LATJ = 0x03;
  1591  001178  0E03               	movlw	3
  1592  00117A  6E91               	movwf	3985,c	;volatile
  1593                           
  1594                           ;FastBuggy17_Main_Code_TUNING.c: 873: SendStatus(0x05);
  1595  00117C  0E05               	movlw	5
  1596  00117E  EC3E  F01F         	call	_SendStatus
  1597                           
  1598                           ;FastBuggy17_Main_Code_TUNING.c: 875: SendDefaultPIDValues(20, 0, 0);
  1599  001182  0E00               	movlw	0
  1600  001184  0100               	movlb	0	; () banked
  1601  001186  6F79               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1602  001188  0E14               	movlw	20
  1603  00118A  6F78               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1604  00118C  0E00               	movlw	0
  1605  00118E  0100               	movlb	0	; () banked
  1606  001190  6F7B               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1607  001192  0E00               	movlw	0
  1608  001194  6F7A               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1609  001196  0E00               	movlw	0
  1610  001198  0100               	movlb	0	; () banked
  1611  00119A  6F7D               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1612  00119C  0E00               	movlw	0
  1613  00119E  6F7C               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1614  0011A0  EC3E  F01C         	call	_SendDefaultPIDValues	;wreg free
  1615                           
  1616                           ;FastBuggy17_Main_Code_TUNING.c: 877: Kp_stored = ReadIntEEPROM(0x0011);
  1617  0011A4  0E00               	movlw	0
  1618  0011A6  0100               	movlb	0	; () banked
  1619  0011A8  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1620  0011AA  0E11               	movlw	17
  1621  0011AC  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  1622  0011AE  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  1623  0011B2  C072  F15F         	movff	?_ReadIntEEPROM,main@Kp_stored
  1624  0011B6  C073  F160         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1625                           
  1626                           ;FastBuggy17_Main_Code_TUNING.c: 878: Kd_stored = ReadIntEEPROM(0x0013);
  1627  0011BA  0E00               	movlw	0
  1628  0011BC  0100               	movlb	0	; () banked
  1629  0011BE  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1630  0011C0  0E13               	movlw	19
  1631  0011C2  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  1632  0011C4  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  1633  0011C8  C072  F161         	movff	?_ReadIntEEPROM,main@Kd_stored
  1634  0011CC  C073  F162         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1635                           
  1636                           ;FastBuggy17_Main_Code_TUNING.c: 879: Ki_stored = ReadIntEEPROM(0x0015);
  1637  0011D0  0E00               	movlw	0
  1638  0011D2  0100               	movlb	0	; () banked
  1639  0011D4  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1640  0011D6  0E15               	movlw	21
  1641  0011D8  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  1642  0011DA  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  1643  0011DE  C072  F163         	movff	?_ReadIntEEPROM,main@Ki_stored
  1644  0011E2  C073  F164         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1645                           
  1646                           ;FastBuggy17_Main_Code_TUNING.c: 881: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  1647  0011E6  C15F  F078         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1648  0011EA  C160  F079         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1649  0011EE  C161  F07A         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1650  0011F2  C162  F07B         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1651  0011F6  C163  F07C         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1652  0011FA  C164  F07D         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1653  0011FE  EC09  F01C         	call	_SendStoredPIDValues	;wreg free
  1654  001202  D000               	goto	l8301
  1655  001204                     l8301:
  1656                           
  1657                           ;FastBuggy17_Main_Code_TUNING.c: 884: if(PB1pressed() == 1) {
  1658  001204  EC6F  F01D         	call	_PB1pressed	;wreg free
  1659  001208  06E8               	decf	wreg,f,c
  1660  00120A  A4D8               	btfss	status,2,c
  1661  00120C  D008               	goto	l8311
  1662                           
  1663                           ;FastBuggy17_Main_Code_TUNING.c: 885: FlashLEDS();
  1664  00120E  ECEC  F020         	call	_FlashLEDS	;wreg free
  1665                           
  1666                           ;FastBuggy17_Main_Code_TUNING.c: 886: LATJ = 0x03;
  1667  001212  0E03               	movlw	3
  1668  001214  6E91               	movwf	3985,c	;volatile
  1669                           
  1670                           ;FastBuggy17_Main_Code_TUNING.c: 887: SetPIDValues();
  1671  001216  EC5A  F010         	call	_SetPIDValues	;wreg free
  1672                           
  1673                           ;FastBuggy17_Main_Code_TUNING.c: 888: break;
  1674  00121A  D00E               	goto	l8319
  1675                           
  1676                           ;FastBuggy17_Main_Code_TUNING.c: 889: }
  1677  00121C  D7F3               	goto	l8301
  1678  00121E                     l8311:
  1679                           
  1680                           ;FastBuggy17_Main_Code_TUNING.c: 890: else if(PB2pressed() == 1) {
  1681  00121E  EC11  F01D         	call	_PB2pressed	;wreg free
  1682  001222  06E8               	decf	wreg,f,c
  1683  001224  A4D8               	btfss	status,2,c
  1684  001226  D7EE               	goto	l8301
  1685                           
  1686                           ;FastBuggy17_Main_Code_TUNING.c: 891: FlashLEDS();
  1687  001228  ECEC  F020         	call	_FlashLEDS	;wreg free
  1688                           
  1689                           ;FastBuggy17_Main_Code_TUNING.c: 892: LATJ = 0x03;
  1690  00122C  0E03               	movlw	3
  1691  00122E  6E91               	movwf	3985,c	;volatile
  1692                           
  1693                           ;FastBuggy17_Main_Code_TUNING.c: 893: LoadPIDValues();
  1694  001230  ECFE  F014         	call	_LoadPIDValues	;wreg free
  1695                           
  1696                           ;FastBuggy17_Main_Code_TUNING.c: 894: break;
  1697  001234  D001               	goto	l8319
  1698  001236  D7E6               	goto	l8301
  1699  001238                     l8319:
  1700                           
  1701                           ;FastBuggy17_Main_Code_TUNING.c: 895: }
  1702                           ;FastBuggy17_Main_Code_TUNING.c: 896: }
  1703                           ;FastBuggy17_Main_Code_TUNING.c: 898: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  1704  001238  C0E9  F078         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1705  00123C  C0EA  F079         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1706  001240  C0D5  F07A         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1707  001244  C0D6  F07B         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1708  001248  C0D7  F07C         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1709  00124C  C0D8  F07D         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1710  001250  EC73  F01C         	call	_SendCurrentPIDValues	;wreg free
  1711  001254  D000               	goto	l8321
  1712  001256                     l8321:
  1713                           
  1714                           ;FastBuggy17_Main_Code_TUNING.c: 904: FlashLEDS();
  1715  001256  ECEC  F020         	call	_FlashLEDS	;wreg free
  1716                           
  1717                           ;FastBuggy17_Main_Code_TUNING.c: 906: LATJ = 0x01;
  1718  00125A  0E01               	movlw	1
  1719  00125C  6E91               	movwf	3985,c	;volatile
  1720                           
  1721                           ;FastBuggy17_Main_Code_TUNING.c: 907: SendStatus(0x08);
  1722  00125E  0E08               	movlw	8
  1723  001260  EC3E  F01F         	call	_SendStatus
  1724  001264  D000               	goto	l8327
  1725  001266                     l8327:
  1726                           
  1727                           ;FastBuggy17_Main_Code_TUNING.c: 910: if(PB1pressed() == 1) {
  1728  001266  EC6F  F01D         	call	_PB1pressed	;wreg free
  1729  00126A  06E8               	decf	wreg,f,c
  1730  00126C  B4D8               	btfsc	status,2,c
  1731  00126E  D00F               	goto	l8337
  1732  001270  D001               	goto	l8331
  1733                           
  1734                           ;FastBuggy17_Main_Code_TUNING.c: 911: break;
  1735  001272  D00D               	goto	l8337
  1736  001274                     l8331:
  1737                           
  1738                           ;FastBuggy17_Main_Code_TUNING.c: 912: }
  1739                           ;FastBuggy17_Main_Code_TUNING.c: 913: if(CommandAvailable() == 1 && GetCommand() == 0x02
      +                          ) {
  1740  001274  ECB8  F022         	call	_CommandAvailable	;wreg free
  1741  001278  06E8               	decf	wreg,f,c
  1742  00127A  A4D8               	btfss	status,2,c
  1743  00127C  D7F4               	goto	l8327
  1744  00127E  ECF4  F022         	call	_GetCommand	;wreg free
  1745  001282  0A02               	xorlw	2
  1746  001284  B4D8               	btfsc	status,2,c
  1747  001286  D003               	goto	l8337
  1748  001288  D7EE               	goto	l8327
  1749                           
  1750                           ;FastBuggy17_Main_Code_TUNING.c: 914: break;
  1751  00128A  D001               	goto	l8337
  1752  00128C  D7EC               	goto	l8327
  1753  00128E                     l8337:
  1754                           
  1755                           ;FastBuggy17_Main_Code_TUNING.c: 915: }
  1756                           ;FastBuggy17_Main_Code_TUNING.c: 916: }
  1757                           ;FastBuggy17_Main_Code_TUNING.c: 919: PID_error = 0;
  1758  00128E  0E00               	movlw	0
  1759  001290  0100               	movlb	0	; () banked
  1760  001292  6FDA               	movwf	(_PID_error+1)& (0+255),b
  1761  001294  0E00               	movlw	0
  1762  001296  6FD9               	movwf	_PID_error& (0+255),b
  1763                           
  1764                           ;FastBuggy17_Main_Code_TUNING.c: 920: PID_output = 0;
  1765  001298  0E00               	movlw	0
  1766  00129A  0100               	movlb	0	; () banked
  1767  00129C  6FDC               	movwf	(_PID_output+1)& (0+255),b
  1768  00129E  0E00               	movlw	0
  1769  0012A0  6FDB               	movwf	_PID_output& (0+255),b
  1770                           
  1771                           ;FastBuggy17_Main_Code_TUNING.c: 921: D_temp = 0;
  1772  0012A2  0E00               	movlw	0
  1773  0012A4  0101               	movlb	1	; () banked
  1774  0012A6  6F58               	movwf	(main@D_temp+1)& (0+255),b
  1775  0012A8  0E00               	movlw	0
  1776  0012AA  6F57               	movwf	main@D_temp& (0+255),b
  1777                           
  1778                           ;FastBuggy17_Main_Code_TUNING.c: 922: I_temp = 0;
  1779  0012AC  0E00               	movlw	0
  1780  0012AE  0101               	movlb	1	; () banked
  1781  0012B0  6F66               	movwf	(main@I_temp+1)& (0+255),b
  1782  0012B2  0E00               	movlw	0
  1783  0012B4  6F65               	movwf	main@I_temp& (0+255),b
  1784                           
  1785                           ; BSR set to: 1
  1786                           ;FastBuggy17_Main_Code_TUNING.c: 924: I_max = PID_Kp * 8;
  1787  0012B6  C0E9  F13C         	movff	_PID_Kp,??_main
  1788  0012BA  C0EA  F13D         	movff	_PID_Kp+1,??_main+1
  1789  0012BE  0101               	movlb	1	; () banked
  1790  0012C0  90D8               	bcf	status,0,c
  1791  0012C2  373C               	rlcf	??_main& (0+255),f,b
  1792  0012C4  373D               	rlcf	(??_main+1)& (0+255),f,b
  1793  0012C6  0101               	movlb	1	; () banked
  1794  0012C8  90D8               	bcf	status,0,c
  1795  0012CA  373C               	rlcf	??_main& (0+255),f,b
  1796  0012CC  373D               	rlcf	(??_main+1)& (0+255),f,b
  1797  0012CE  0101               	movlb	1	; () banked
  1798  0012D0  90D8               	bcf	status,0,c
  1799  0012D2  373C               	rlcf	??_main& (0+255),f,b
  1800  0012D4  373D               	rlcf	(??_main+1)& (0+255),f,b
  1801  0012D6  C13C  F15A         	movff	??_main,main@I_max
  1802  0012DA  C13D  F15B         	movff	??_main+1,main@I_max+1
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;FastBuggy17_Main_Code_TUNING.c: 925: I_min = PID_Kp * -8;
  1806  0012DE  C0E9  F13C         	movff	_PID_Kp,??_main
  1807  0012E2  C0EA  F13D         	movff	_PID_Kp+1,??_main+1
  1808  0012E6  0101               	movlb	1	; () banked
  1809  0012E8  90D8               	bcf	status,0,c
  1810  0012EA  373C               	rlcf	??_main& (0+255),f,b
  1811  0012EC  373D               	rlcf	(??_main+1)& (0+255),f,b
  1812  0012EE  0101               	movlb	1	; () banked
  1813  0012F0  90D8               	bcf	status,0,c
  1814  0012F2  373C               	rlcf	??_main& (0+255),f,b
  1815  0012F4  373D               	rlcf	(??_main+1)& (0+255),f,b
  1816  0012F6  0101               	movlb	1	; () banked
  1817  0012F8  90D8               	bcf	status,0,c
  1818  0012FA  373C               	rlcf	??_main& (0+255),f,b
  1819  0012FC  373D               	rlcf	(??_main+1)& (0+255),f,b
  1820  0012FE  0101               	movlb	1	; () banked
  1821  001300  1F3C               	comf	??_main& (0+255),f,b
  1822  001302  1F3D               	comf	(??_main+1)& (0+255),f,b
  1823  001304  4B3C               	infsnz	??_main& (0+255),f,b
  1824  001306  2B3D               	incf	(??_main+1)& (0+255),f,b
  1825  001308  C13C  F15C         	movff	??_main,main@I_min
  1826  00130C  C13D  F15D         	movff	??_main+1,main@I_min+1
  1827                           
  1828                           ;FastBuggy17_Main_Code_TUNING.c: 927: stop_flag = 0;
  1829  001310  0E00               	movlw	0
  1830  001312  0101               	movlb	1	; () banked
  1831  001314  6F59               	movwf	main@stop_flag& (0+255),b
  1832                           
  1833                           ;FastBuggy17_Main_Code_TUNING.c: 928: find_line_flag = 0;
  1834  001316  0E00               	movlw	0
  1835  001318  0101               	movlb	1	; () banked
  1836  00131A  6F46               	movwf	main@find_line_flag& (0+255),b
  1837                           
  1838                           ;FastBuggy17_Main_Code_TUNING.c: 929: line_end_flag = 0;
  1839  00131C  0E00               	movlw	0
  1840  00131E  0101               	movlb	1	; () banked
  1841  001320  6F53               	movwf	main@line_end_flag& (0+255),b
  1842                           
  1843                           ;FastBuggy17_Main_Code_TUNING.c: 930: wall_detected_flag = 0;
  1844  001322  0E00               	movlw	0
  1845  001324  0101               	movlb	1	; () banked
  1846  001326  6F54               	movwf	main@wall_detected_flag& (0+255),b
  1847                           
  1848                           ;FastBuggy17_Main_Code_TUNING.c: 931: send_battery_stats_flag = 0;
  1849  001328  0E00               	movlw	0
  1850  00132A  0101               	movlb	1	; () banked
  1851  00132C  6F45               	movwf	main@send_battery_stats_flag& (0+255),b
  1852                           
  1853                           ; BSR set to: 1
  1854                           ;FastBuggy17_Main_Code_TUNING.c: 933: GetDistance();
  1855  00132E  EC30  F022         	call	_GetDistance	;wreg free
  1856                           
  1857                           ;FastBuggy17_Main_Code_TUNING.c: 935: LATJ = 0x00;
  1858  001332  0E00               	movlw	0
  1859  001334  6E91               	movwf	3985,c	;volatile
  1860                           
  1861                           ;FastBuggy17_Main_Code_TUNING.c: 937: FlashLEDS();
  1862  001336  ECEC  F020         	call	_FlashLEDS	;wreg free
  1863                           
  1864                           ;FastBuggy17_Main_Code_TUNING.c: 938: SendStatus(0x09);
  1865  00133A  0E09               	movlw	9
  1866  00133C  EC3E  F01F         	call	_SendStatus
  1867                           
  1868                           ;FastBuggy17_Main_Code_TUNING.c: 940: ResetAccumulatedCurrent();
  1869  001340  EC95  F020         	call	_ResetAccumulatedCurrent	;wreg free
  1870                           
  1871                           ;FastBuggy17_Main_Code_TUNING.c: 942: ResetMillis0();
  1872  001344  ECD2  F022         	call	_ResetMillis0	;wreg free
  1873                           
  1874                           ;FastBuggy17_Main_Code_TUNING.c: 943: ResetMillis1();
  1875  001348  ECCD  F022         	call	_ResetMillis1	;wreg free
  1876                           
  1877                           ;FastBuggy17_Main_Code_TUNING.c: 945: SetUnipolar();
  1878  00134C  ECFC  F022         	call	_SetUnipolar	;wreg free
  1879                           
  1880                           ;FastBuggy17_Main_Code_TUNING.c: 946: StopMotors();
  1881  001350  EC98  F021         	call	_StopMotors	;wreg free
  1882                           
  1883                           ;FastBuggy17_Main_Code_TUNING.c: 947: SetDirectionForward();
  1884  001354  ECFF  F022         	call	_SetDirectionForward	;wreg free
  1885                           
  1886                           ;FastBuggy17_Main_Code_TUNING.c: 948: EnableMotors();
  1887  001358  EC0B  F023         	call	_EnableMotors	;wreg free
  1888  00135C  D000               	goto	l8363
  1889  00135E                     l8363:
  1890                           
  1891                           ;FastBuggy17_Main_Code_TUNING.c: 955: ResetMillis1();
  1892  00135E  ECCD  F022         	call	_ResetMillis1	;wreg free
  1893                           
  1894                           ;FastBuggy17_Main_Code_TUNING.c: 958: GetSensorReadings();
  1895  001362  ECFA  F021         	call	_GetSensorReadings	;wreg free
  1896                           
  1897                           ;FastBuggy17_Main_Code_TUNING.c: 960: while(BusySensorAcq());
  1898  001366  D000               	goto	l8367
  1899  001368                     l8367:
  1900  001368  EC8A  F022         	call	_BusySensorAcq	;wreg free
  1901  00136C  0900               	iorlw	0
  1902  00136E  A4D8               	btfss	status,2,c
  1903  001370  D7FB               	goto	l8367
  1904                           
  1905                           ;FastBuggy17_Main_Code_TUNING.c: 962: NormaliseSensorReadings();
  1906  001372  EC5D  F01B         	call	_NormaliseSensorReadings	;wreg free
  1907                           
  1908                           ;FastBuggy17_Main_Code_TUNING.c: 964: CalculateSensorStatuses();
  1909  001376  ECF4  F015         	call	_CalculateSensorStatuses	;wreg free
  1910                           
  1911                           ;FastBuggy17_Main_Code_TUNING.c: 965: sensor_sum = CalculateSensorSums();
  1912  00137A  EC26  F019         	call	_CalculateSensorSums	;wreg free
  1913  00137E  0101               	movlb	1	; () banked
  1914  001380  6F67               	movwf	main@sensor_sum& (0+255),b
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;FastBuggy17_Main_Code_TUNING.c: 968: PID_error = CalculateSensorError(sensor_sum_ptr);
  1918  001382  C14D  F070         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1919  001386  C14E  F071         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1920  00138A  ECBE  F017         	call	_CalculateSensorError	;wreg free
  1921  00138E  C070  F0D9         	movff	?_CalculateSensorError,_PID_error
  1922  001392  C071  F0DA         	movff	?_CalculateSensorError+1,_PID_error+1
  1923                           
  1924                           ;FastBuggy17_Main_Code_TUNING.c: 969: PID_output = PID_Kp * PID_error + PID_Kd * (D_temp
      +                           - PID_error) + PID_Ki * I_temp;
  1925  001396  C0E9  F070         	movff	_PID_Kp,___wmul@multiplier
  1926  00139A  C0EA  F071         	movff	_PID_Kp+1,___wmul@multiplier+1
  1927  00139E  C0D9  F072         	movff	_PID_error,___wmul@multiplicand
  1928  0013A2  C0DA  F073         	movff	_PID_error+1,___wmul@multiplicand+1
  1929  0013A6  EC93  F01F         	call	___wmul	;wreg free
  1930  0013AA  C070  F13C         	movff	?___wmul,??_main
  1931  0013AE  C071  F13D         	movff	?___wmul+1,??_main+1
  1932  0013B2  C0D9  F13E         	movff	_PID_error,??_main+2
  1933  0013B6  C0DA  F13F         	movff	_PID_error+1,??_main+3
  1934  0013BA  0101               	movlb	1	; () banked
  1935  0013BC  1F3E               	comf	(??_main+2)& (0+255),f,b
  1936  0013BE  1F3F               	comf	(??_main+3)& (0+255),f,b
  1937  0013C0  4B3E               	infsnz	(??_main+2)& (0+255),f,b
  1938  0013C2  2B3F               	incf	(??_main+3)& (0+255),f,b
  1939  0013C4  0101               	movlb	1	; () banked
  1940  0013C6  5157               	movf	main@D_temp& (0+255),w,b
  1941  0013C8  0101               	movlb	1	; () banked
  1942  0013CA  253E               	addwf	(??_main+2)& (0+255),w,b
  1943  0013CC  0100               	movlb	0	; () banked
  1944  0013CE  6F70               	movwf	___wmul@multiplier& (0+255),b
  1945  0013D0  0101               	movlb	1	; () banked
  1946  0013D2  5158               	movf	(main@D_temp+1)& (0+255),w,b
  1947  0013D4  0101               	movlb	1	; () banked
  1948  0013D6  213F               	addwfc	(??_main+3)& (0+255),w,b
  1949  0013D8  0100               	movlb	0	; () banked
  1950  0013DA  6F71               	movwf	(___wmul@multiplier+1)& (0+255),b
  1951  0013DC  C0D5  F072         	movff	_PID_Kd,___wmul@multiplicand
  1952  0013E0  C0D6  F073         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1953  0013E4  EC93  F01F         	call	___wmul	;wreg free
  1954  0013E8  0100               	movlb	0	; () banked
  1955  0013EA  5170               	movf	?___wmul& (0+255),w,b
  1956  0013EC  0101               	movlb	1	; () banked
  1957  0013EE  273C               	addwf	??_main& (0+255),f,b
  1958  0013F0  0100               	movlb	0	; () banked
  1959  0013F2  5171               	movf	(?___wmul+1)& (0+255),w,b
  1960  0013F4  0101               	movlb	1	; () banked
  1961  0013F6  233D               	addwfc	(??_main+1)& (0+255),f,b
  1962  0013F8  C0D7  F070         	movff	_PID_Ki,___wmul@multiplier
  1963  0013FC  C0D8  F071         	movff	_PID_Ki+1,___wmul@multiplier+1
  1964  001400  C165  F072         	movff	main@I_temp,___wmul@multiplicand
  1965  001404  C166  F073         	movff	main@I_temp+1,___wmul@multiplicand+1
  1966  001408  EC93  F01F         	call	___wmul	;wreg free
  1967  00140C  0100               	movlb	0	; () banked
  1968  00140E  5170               	movf	?___wmul& (0+255),w,b
  1969  001410  0101               	movlb	1	; () banked
  1970  001412  253C               	addwf	??_main& (0+255),w,b
  1971  001414  0100               	movlb	0	; () banked
  1972  001416  6FDB               	movwf	_PID_output& (0+255),b
  1973  001418  0100               	movlb	0	; () banked
  1974  00141A  5171               	movf	(?___wmul+1)& (0+255),w,b
  1975  00141C  0101               	movlb	1	; () banked
  1976  00141E  213D               	addwfc	(??_main+1)& (0+255),w,b
  1977  001420  0100               	movlb	0	; () banked
  1978  001422  6FDC               	movwf	(_PID_output+1)& (0+255),b
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;FastBuggy17_Main_Code_TUNING.c: 970: D_temp = PID_error;
  1982  001424  C0D9  F157         	movff	_PID_error,main@D_temp
  1983  001428  C0DA  F158         	movff	_PID_error+1,main@D_temp+1
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;FastBuggy17_Main_Code_TUNING.c: 971: I_temp += PID_error;
  1987  00142C  0100               	movlb	0	; () banked
  1988  00142E  51D9               	movf	_PID_error& (0+255),w,b
  1989  001430  0101               	movlb	1	; () banked
  1990  001432  2765               	addwf	main@I_temp& (0+255),f,b
  1991  001434  0100               	movlb	0	; () banked
  1992  001436  51DA               	movf	(_PID_error+1)& (0+255),w,b
  1993  001438  0101               	movlb	1	; () banked
  1994  00143A  2366               	addwfc	(main@I_temp+1)& (0+255),f,b
  1995                           
  1996                           ; BSR set to: 1
  1997                           ;FastBuggy17_Main_Code_TUNING.c: 974: if(I_temp >= I_max) {
  1998  00143C  0101               	movlb	1	; () banked
  1999  00143E  515A               	movf	main@I_max& (0+255),w,b
  2000  001440  0101               	movlb	1	; () banked
  2001  001442  5D65               	subwf	main@I_temp& (0+255),w,b
  2002  001444  0101               	movlb	1	; () banked
  2003  001446  5166               	movf	(main@I_temp+1)& (0+255),w,b
  2004  001448  0A80               	xorlw	128
  2005  00144A  0101               	movlb	1	; () banked
  2006  00144C  6F3C               	movwf	??_main& (0+255),b
  2007  00144E  0101               	movlb	1	; () banked
  2008  001450  515B               	movf	(main@I_max+1)& (0+255),w,b
  2009  001452  0A80               	xorlw	128
  2010  001454  0101               	movlb	1	; () banked
  2011  001456  593C               	subwfb	??_main& (0+255),w,b
  2012  001458  A0D8               	btfss	status,0,c
  2013  00145A  D009               	goto	l8385
  2014                           
  2015                           ; BSR set to: 1
  2016                           ;FastBuggy17_Main_Code_TUNING.c: 975: I_temp = I_max - 20;
  2017  00145C  0EEC               	movlw	236
  2018  00145E  0101               	movlb	1	; () banked
  2019  001460  255A               	addwf	main@I_max& (0+255),w,b
  2020  001462  0101               	movlb	1	; () banked
  2021  001464  6F65               	movwf	main@I_temp& (0+255),b
  2022  001466  0EFF               	movlw	255
  2023  001468  0101               	movlb	1	; () banked
  2024  00146A  215B               	addwfc	(main@I_max+1)& (0+255),w,b
  2025  00146C  D018               	goto	L2
  2026  00146E                     l8385:
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;FastBuggy17_Main_Code_TUNING.c: 977: else if(I_temp <= I_min) {
  2030  00146E  0101               	movlb	1	; () banked
  2031  001470  5165               	movf	main@I_temp& (0+255),w,b
  2032  001472  0101               	movlb	1	; () banked
  2033  001474  5D5C               	subwf	main@I_min& (0+255),w,b
  2034  001476  0101               	movlb	1	; () banked
  2035  001478  515D               	movf	(main@I_min+1)& (0+255),w,b
  2036  00147A  0A80               	xorlw	128
  2037  00147C  0101               	movlb	1	; () banked
  2038  00147E  6F3C               	movwf	??_main& (0+255),b
  2039  001480  0101               	movlb	1	; () banked
  2040  001482  5166               	movf	(main@I_temp+1)& (0+255),w,b
  2041  001484  0A80               	xorlw	128
  2042  001486  0101               	movlb	1	; () banked
  2043  001488  593C               	subwfb	??_main& (0+255),w,b
  2044  00148A  A0D8               	btfss	status,0,c
  2045  00148C  D00B               	goto	l8389
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;FastBuggy17_Main_Code_TUNING.c: 978: I_temp = I_min + 20;
  2049  00148E  0E14               	movlw	20
  2050  001490  0101               	movlb	1	; () banked
  2051  001492  255C               	addwf	main@I_min& (0+255),w,b
  2052  001494  0101               	movlb	1	; () banked
  2053  001496  6F65               	movwf	main@I_temp& (0+255),b
  2054  001498  0E00               	movlw	0
  2055  00149A  0101               	movlb	1	; () banked
  2056  00149C  215D               	addwfc	(main@I_min+1)& (0+255),w,b
  2057  00149E                     L2:
  2058  00149E  0101               	movlb	1	; () banked
  2059  0014A0  6F66               	movwf	(main@I_temp+1)& (0+255),b
  2060                           
  2061                           ; BSR set to: 1
  2062  0014A2  D000               	goto	l8389
  2063  0014A4                     l8389:
  2064                           
  2065                           ; BSR set to: 1
  2066                           ;FastBuggy17_Main_Code_TUNING.c: 979: }
  2067                           ;FastBuggy17_Main_Code_TUNING.c: 981: SetDCMotorPID(PID_output);
  2068  0014A4  C0DB  F078         	movff	_PID_output,SetDCMotorPID@PIDoutput
  2069  0014A8  C0DC  F079         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  2070  0014AC  EC1A  F018         	call	_SetDCMotorPID	;wreg free
  2071                           
  2072                           ;FastBuggy17_Main_Code_TUNING.c: 984: DisplaySensorStatuses(sensor_status);
  2073  0014B0  0E23               	movlw	low _sensor_status
  2074  0014B2  0100               	movlb	0	; () banked
  2075  0014B4  6F70               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  2076  0014B6  0E00               	movlw	high _sensor_status
  2077  0014B8  0100               	movlb	0	; () banked
  2078  0014BA  6F71               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  2079  0014BC  ECC6  F01D         	call	_DisplaySensorStatuses	;wreg free
  2080                           
  2081                           ;FastBuggy17_Main_Code_TUNING.c: 987: if(BusyDistanceAcq() == 0 && wall_detected_flag ==
      +                           0 && ReadMillis0() >= 60) {
  2082  0014C0  EC9A  F022         	call	_BusyDistanceAcq	;wreg free
  2083  0014C4  0900               	iorlw	0
  2084  0014C6  A4D8               	btfss	status,2,c
  2085  0014C8  D08C               	goto	l8447
  2086  0014CA  0101               	movlb	1	; () banked
  2087  0014CC  5154               	movf	main@wall_detected_flag& (0+255),w,b
  2088  0014CE  0101               	movlb	1	; () banked
  2089  0014D0  A4D8               	btfss	status,2,c
  2090  0014D2  D087               	goto	l8447
  2091                           
  2092                           ; BSR set to: 1
  2093  0014D4  ECDC  F022         	call	_ReadMillis0	;wreg free
  2094  0014D8  0100               	movlb	0	; () banked
  2095  0014DA  5171               	movf	(?_ReadMillis0+1)& (0+255),w,b
  2096  0014DC  E105               	bnz	u8500
  2097  0014DE  0E3C               	movlw	60
  2098  0014E0  0100               	movlb	0	; () banked
  2099  0014E2  5D70               	subwf	?_ReadMillis0& (0+255),w,b
  2100  0014E4  A0D8               	btfss	status,0,c
  2101  0014E6  D07D               	goto	l8447
  2102  0014E8                     u8500:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;FastBuggy17_Main_Code_TUNING.c: 989: ResetMillis0();
  2106  0014E8  ECD2  F022         	call	_ResetMillis0	;wreg free
  2107                           
  2108                           ;FastBuggy17_Main_Code_TUNING.c: 991: if(ReadEchoLength() < 1232) {
  2109  0014EC  ECE1  F022         	call	_ReadEchoLength	;wreg free
  2110  0014F0  0ED0               	movlw	208
  2111  0014F2  0100               	movlb	0	; () banked
  2112  0014F4  5D70               	subwf	?_ReadEchoLength& (0+255),w,b
  2113  0014F6  0E04               	movlw	4
  2114  0014F8  0100               	movlb	0	; () banked
  2115  0014FA  5971               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  2116  0014FC  B0D8               	btfsc	status,0,c
  2117  0014FE  D06E               	goto	l8445
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;FastBuggy17_Main_Code_TUNING.c: 992: wall_detected_flag = 1;
  2121  001500  0E01               	movlw	1
  2122  001502  0101               	movlb	1	; () banked
  2123  001504  6F54               	movwf	main@wall_detected_flag& (0+255),b
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;FastBuggy17_Main_Code_TUNING.c: 995: DisableMotors();
  2127  001506  EC0D  F023         	call	_DisableMotors	;wreg free
  2128                           
  2129                           ;FastBuggy17_Main_Code_TUNING.c: 997: PID_error = 0;
  2130  00150A  0E00               	movlw	0
  2131  00150C  0100               	movlb	0	; () banked
  2132  00150E  6FDA               	movwf	(_PID_error+1)& (0+255),b
  2133  001510  0E00               	movlw	0
  2134  001512  6FD9               	movwf	_PID_error& (0+255),b
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;FastBuggy17_Main_Code_TUNING.c: 998: PID_output = 0;
  2138  001514  0E00               	movlw	0
  2139  001516  0100               	movlb	0	; () banked
  2140  001518  6FDC               	movwf	(_PID_output+1)& (0+255),b
  2141  00151A  0E00               	movlw	0
  2142  00151C  6FDB               	movwf	_PID_output& (0+255),b
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;FastBuggy17_Main_Code_TUNING.c: 999: D_temp = 0;
  2146  00151E  0E00               	movlw	0
  2147  001520  0101               	movlb	1	; () banked
  2148  001522  6F58               	movwf	(main@D_temp+1)& (0+255),b
  2149  001524  0E00               	movlw	0
  2150  001526  6F57               	movwf	main@D_temp& (0+255),b
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;FastBuggy17_Main_Code_TUNING.c: 1000: I_temp = 0;
  2154  001528  0E00               	movlw	0
  2155  00152A  0101               	movlb	1	; () banked
  2156  00152C  6F66               	movwf	(main@I_temp+1)& (0+255),b
  2157  00152E  0E00               	movlw	0
  2158  001530  6F65               	movwf	main@I_temp& (0+255),b
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;FastBuggy17_Main_Code_TUNING.c: 1002: SetForwardsMotorR();
  2162  001532  EC07  F023         	call	_SetForwardsMotorR	;wreg free
  2163                           
  2164                           ;FastBuggy17_Main_Code_TUNING.c: 1003: SetReverseMotorL();
  2165  001536  EC05  F023         	call	_SetReverseMotorL	;wreg free
  2166                           
  2167                           ;FastBuggy17_Main_Code_TUNING.c: 1005: SetDCMotorL(250);
  2168  00153A  0E00               	movlw	0
  2169  00153C  0100               	movlb	0	; () banked
  2170  00153E  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2171  001540  0EFA               	movlw	250
  2172  001542  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2173  001544  ECB1  F022         	call	_SetDCMotorL	;wreg free
  2174                           
  2175                           ;FastBuggy17_Main_Code_TUNING.c: 1006: SetDCMotorR(340);
  2176  001548  0E01               	movlw	1
  2177  00154A  0100               	movlb	0	; () banked
  2178  00154C  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2179  00154E  0E54               	movlw	84
  2180  001550  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2181  001552  ECAA  F022         	call	_SetDCMotorR	;wreg free
  2182                           
  2183                           ;FastBuggy17_Main_Code_TUNING.c: 1008: EnableMotors();
  2184  001556  EC0B  F023         	call	_EnableMotors	;wreg free
  2185                           
  2186                           ;FastBuggy17_Main_Code_TUNING.c: 1010: sensor_sum = 0;
  2187  00155A  0E00               	movlw	0
  2188  00155C  0101               	movlb	1	; () banked
  2189  00155E  6F67               	movwf	main@sensor_sum& (0+255),b
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;FastBuggy17_Main_Code_TUNING.c: 1012: ResetMillis0();
  2193  001560  ECD2  F022         	call	_ResetMillis0	;wreg free
  2194                           
  2195                           ;FastBuggy17_Main_Code_TUNING.c: 1013: while(ReadMillis0() < 300);
  2196  001564  D000               	goto	l8427
  2197  001566                     l8427:
  2198  001566  ECDC  F022         	call	_ReadMillis0	;wreg free
  2199  00156A  0E2C               	movlw	44
  2200  00156C  0100               	movlb	0	; () banked
  2201  00156E  5D70               	subwf	?_ReadMillis0& (0+255),w,b
  2202  001570  0E01               	movlw	1
  2203  001572  0100               	movlb	0	; () banked
  2204  001574  5971               	subwfb	(?_ReadMillis0+1)& (0+255),w,b
  2205  001576  B0D8               	btfsc	status,0,c
  2206  001578  D01B               	goto	l8439
  2207  00157A  D7F5               	goto	l8427
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;FastBuggy17_Main_Code_TUNING.c: 1015: while(sensor_sum == 0) {
  2211  00157C  D019               	goto	l8439
  2212  00157E                     l8429:
  2213                           
  2214                           ;FastBuggy17_Main_Code_TUNING.c: 1016: GetSensorReadings();
  2215  00157E  ECFA  F021         	call	_GetSensorReadings	;wreg free
  2216                           
  2217                           ;FastBuggy17_Main_Code_TUNING.c: 1017: while(BusySensorAcq());
  2218  001582  D000               	goto	l8431
  2219  001584                     l8431:
  2220  001584  EC8A  F022         	call	_BusySensorAcq	;wreg free
  2221  001588  0900               	iorlw	0
  2222  00158A  A4D8               	btfss	status,2,c
  2223  00158C  D7FB               	goto	l8431
  2224                           
  2225                           ;FastBuggy17_Main_Code_TUNING.c: 1018: NormaliseSensorReadings();
  2226  00158E  EC5D  F01B         	call	_NormaliseSensorReadings	;wreg free
  2227                           
  2228                           ;FastBuggy17_Main_Code_TUNING.c: 1019: CalculateSensorStatuses();
  2229  001592  ECF4  F015         	call	_CalculateSensorStatuses	;wreg free
  2230                           
  2231                           ;FastBuggy17_Main_Code_TUNING.c: 1020: sensor_sum = CalculateSensorSums();
  2232  001596  EC26  F019         	call	_CalculateSensorSums	;wreg free
  2233  00159A  0101               	movlb	1	; () banked
  2234  00159C  6F67               	movwf	main@sensor_sum& (0+255),b
  2235                           
  2236                           ; BSR set to: 1
  2237                           ;FastBuggy17_Main_Code_TUNING.c: 1021: DisplaySensorStatuses(sensor_status);
  2238  00159E  0E23               	movlw	low _sensor_status
  2239  0015A0  0100               	movlb	0	; () banked
  2240  0015A2  6F70               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  2241  0015A4  0E00               	movlw	high _sensor_status
  2242  0015A6  0100               	movlb	0	; () banked
  2243  0015A8  6F71               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  2244  0015AA  ECC6  F01D         	call	_DisplaySensorStatuses	;wreg free
  2245  0015AE  D000               	goto	l8439
  2246  0015B0                     l8439:
  2247  0015B0  0101               	movlb	1	; () banked
  2248  0015B2  5167               	movf	main@sensor_sum& (0+255),w,b
  2249  0015B4  0101               	movlb	1	; () banked
  2250  0015B6  B4D8               	btfsc	status,2,c
  2251  0015B8  D7E2               	goto	l8429
  2252                           
  2253                           ; BSR set to: 1
  2254                           ;FastBuggy17_Main_Code_TUNING.c: 1023: }
  2255                           ;FastBuggy17_Main_Code_TUNING.c: 1025: SetDCMotorL(526);
  2256                           
  2257                           ; BSR set to: 1
  2258  0015BA  0E02               	movlw	2
  2259  0015BC  0100               	movlb	0	; () banked
  2260  0015BE  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2261  0015C0  0E0E               	movlw	14
  2262  0015C2  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2263  0015C4  ECB1  F022         	call	_SetDCMotorL	;wreg free
  2264                           
  2265                           ;FastBuggy17_Main_Code_TUNING.c: 1026: SetDCMotorR(526);
  2266  0015C8  0E02               	movlw	2
  2267  0015CA  0100               	movlb	0	; () banked
  2268  0015CC  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2269  0015CE  0E0E               	movlw	14
  2270  0015D0  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2271  0015D2  ECAA  F022         	call	_SetDCMotorR	;wreg free
  2272                           
  2273                           ;FastBuggy17_Main_Code_TUNING.c: 1027: SetDirectionForward();
  2274  0015D6  ECFF  F022         	call	_SetDirectionForward	;wreg free
  2275                           
  2276                           ;FastBuggy17_Main_Code_TUNING.c: 1029: }
  2277  0015DA  D070               	goto	l8487
  2278  0015DC                     l8445:
  2279                           
  2280                           ;FastBuggy17_Main_Code_TUNING.c: 1030: else {
  2281                           ;FastBuggy17_Main_Code_TUNING.c: 1031: GetDistance();
  2282  0015DC  EC30  F022         	call	_GetDistance	;wreg free
  2283                           
  2284                           ;FastBuggy17_Main_Code_TUNING.c: 1032: }
  2285                           ;FastBuggy17_Main_Code_TUNING.c: 1033: }
  2286  0015E0  D06D               	goto	l8487
  2287  0015E2                     l8447:
  2288                           
  2289                           ;FastBuggy17_Main_Code_TUNING.c: 1036: else if(sensor_sum == 0 && line_end_flag == 0) {
  2290  0015E2  0101               	movlb	1	; () banked
  2291  0015E4  5167               	movf	main@sensor_sum& (0+255),w,b
  2292  0015E6  0101               	movlb	1	; () banked
  2293  0015E8  A4D8               	btfss	status,2,c
  2294  0015EA  D02D               	goto	l8467
  2295                           
  2296                           ; BSR set to: 1
  2297  0015EC  0101               	movlb	1	; () banked
  2298  0015EE  5153               	movf	main@line_end_flag& (0+255),w,b
  2299  0015F0  0101               	movlb	1	; () banked
  2300  0015F2  A4D8               	btfss	status,2,c
  2301  0015F4  D028               	goto	l8467
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;FastBuggy17_Main_Code_TUNING.c: 1037: ResetMillis2();
  2305  0015F6  ECE6  F022         	call	_ResetMillis2	;wreg free
  2306                           
  2307                           ;FastBuggy17_Main_Code_TUNING.c: 1038: while(ReadMillis2() <= 100);
  2308  0015FA  D000               	goto	l8453
  2309  0015FC                     l8453:
  2310  0015FC  ECEB  F022         	call	_ReadMillis2	;wreg free
  2311  001600  0100               	movlb	0	; () banked
  2312  001602  5171               	movf	(?_ReadMillis2+1)& (0+255),w,b
  2313  001604  E107               	bnz	l8455
  2314  001606  0E65               	movlw	101
  2315  001608  0100               	movlb	0	; () banked
  2316  00160A  5D70               	subwf	?_ReadMillis2& (0+255),w,b
  2317  00160C  B0D8               	btfsc	status,0,c
  2318  00160E  D002               	goto	l8455
  2319  001610  D7F5               	goto	l8453
  2320  001612  D000               	goto	l8455
  2321  001614                     l8455:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;FastBuggy17_Main_Code_TUNING.c: 1039: GetSensorReadings();
  2325  001614  ECFA  F021         	call	_GetSensorReadings	;wreg free
  2326                           
  2327                           ;FastBuggy17_Main_Code_TUNING.c: 1040: while(BusySensorAcq());
  2328  001618  D000               	goto	l8457
  2329  00161A                     l8457:
  2330  00161A  EC8A  F022         	call	_BusySensorAcq	;wreg free
  2331  00161E  0900               	iorlw	0
  2332  001620  A4D8               	btfss	status,2,c
  2333  001622  D7FB               	goto	l8457
  2334                           
  2335                           ;FastBuggy17_Main_Code_TUNING.c: 1041: NormaliseSensorReadings();
  2336  001624  EC5D  F01B         	call	_NormaliseSensorReadings	;wreg free
  2337                           
  2338                           ;FastBuggy17_Main_Code_TUNING.c: 1042: CalculateSensorStatuses();
  2339  001628  ECF4  F015         	call	_CalculateSensorStatuses	;wreg free
  2340                           
  2341                           ;FastBuggy17_Main_Code_TUNING.c: 1043: sensor_sum = CalculateSensorSums();
  2342  00162C  EC26  F019         	call	_CalculateSensorSums	;wreg free
  2343  001630  0101               	movlb	1	; () banked
  2344  001632  6F67               	movwf	main@sensor_sum& (0+255),b
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;FastBuggy17_Main_Code_TUNING.c: 1044: if(sensor_sum == 0) {
  2348  001634  0101               	movlb	1	; () banked
  2349  001636  5167               	movf	main@sensor_sum& (0+255),w,b
  2350  001638  0101               	movlb	1	; () banked
  2351  00163A  A4D8               	btfss	status,2,c
  2352  00163C  D03F               	goto	l8487
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;FastBuggy17_Main_Code_TUNING.c: 1045: StopMotors();
  2356  00163E  EC98  F021         	call	_StopMotors	;wreg free
  2357                           
  2358                           ;FastBuggy17_Main_Code_TUNING.c: 1046: break;
  2359  001642  D04B               	goto	l8491
  2360                           
  2361                           ;FastBuggy17_Main_Code_TUNING.c: 1047: }
  2362                           ;FastBuggy17_Main_Code_TUNING.c: 1049: }
  2363  001644  D03B               	goto	l8487
  2364  001646                     l8467:
  2365                           
  2366                           ;FastBuggy17_Main_Code_TUNING.c: 1060: else if(CommandAvailable() == 1) {
  2367  001646  ECB8  F022         	call	_CommandAvailable	;wreg free
  2368  00164A  06E8               	decf	wreg,f,c
  2369  00164C  A4D8               	btfss	status,2,c
  2370  00164E  D014               	goto	l8479
  2371                           
  2372                           ;FastBuggy17_Main_Code_TUNING.c: 1061: command_msg = GetCommand();
  2373  001650  ECF4  F022         	call	_GetCommand	;wreg free
  2374  001654  0101               	movlb	1	; () banked
  2375  001656  6F5E               	movwf	main@command_msg& (0+255),b
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;FastBuggy17_Main_Code_TUNING.c: 1062: if(command_msg == 0x03) {
  2379  001658  0E03               	movlw	3
  2380  00165A  0101               	movlb	1	; () banked
  2381  00165C  195E               	xorwf	main@command_msg& (0+255),w,b
  2382  00165E  A4D8               	btfss	status,2,c
  2383  001660  D004               	goto	l8475
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;FastBuggy17_Main_Code_TUNING.c: 1063: find_line_flag = 1;
  2387  001662  0E01               	movlw	1
  2388  001664  0101               	movlb	1	; () banked
  2389  001666  6F46               	movwf	main@find_line_flag& (0+255),b
  2390                           
  2391                           ;FastBuggy17_Main_Code_TUNING.c: 1064: }
  2392  001668  D029               	goto	l8487
  2393  00166A                     l8475:
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;FastBuggy17_Main_Code_TUNING.c: 1065: else if(command_msg == 0x04) {
  2397  00166A  0E04               	movlw	4
  2398  00166C  0101               	movlb	1	; () banked
  2399  00166E  195E               	xorwf	main@command_msg& (0+255),w,b
  2400  001670  A4D8               	btfss	status,2,c
  2401  001672  D024               	goto	l8487
  2402  001674  D017               	goto	l8481
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;FastBuggy17_Main_Code_TUNING.c: 1067: }
  2406                           ;FastBuggy17_Main_Code_TUNING.c: 1069: }
  2407                           
  2408                           ; BSR set to: 1
  2409                           
  2410                           ; BSR set to: 1
  2411                           ;FastBuggy17_Main_Code_TUNING.c: 1066: stop_flag = 1;
  2412  001676  D022               	goto	l8487
  2413  001678                     l8479:
  2414                           
  2415                           ;FastBuggy17_Main_Code_TUNING.c: 1072: else if(PB1pressed() == 1 | PB2pressed() == 1) {
  2416  001678  EC11  F01D         	call	_PB2pressed	;wreg free
  2417  00167C  06E8               	decf	wreg,f,c
  2418  00167E  A4D8               	btfss	status,2,c
  2419  001680  D002               	goto	u8630
  2420  001682  0E01               	movlw	1
  2421  001684  D001               	goto	u8632
  2422  001686                     u8630:
  2423  001686  0E00               	movlw	0
  2424  001688                     u8632:
  2425  001688  0101               	movlb	1	; () banked
  2426  00168A  6F3C               	movwf	??_main& (0+255),b
  2427  00168C  EC6F  F01D         	call	_PB1pressed	;wreg free
  2428  001690  06E8               	decf	wreg,f,c
  2429  001692  A4D8               	btfss	status,2,c
  2430  001694  D002               	goto	u8640
  2431  001696  0E01               	movlw	1
  2432  001698  D001               	goto	u8642
  2433  00169A                     u8640:
  2434  00169A  0E00               	movlw	0
  2435  00169C                     u8642:
  2436  00169C  0101               	movlb	1	; () banked
  2437  00169E  113C               	iorwf	??_main& (0+255),w,b
  2438  0016A0  A0E8               	btfss	wreg,0,c
  2439  0016A2  D004               	goto	l8483
  2440  0016A4                     l8481:
  2441                           
  2442                           ; BSR set to: 1
  2443                           ;FastBuggy17_Main_Code_TUNING.c: 1073: stop_flag = 1;
  2444  0016A4  0E01               	movlw	1
  2445  0016A6  0101               	movlb	1	; () banked
  2446  0016A8  6F59               	movwf	main@stop_flag& (0+255),b
  2447                           
  2448                           ;FastBuggy17_Main_Code_TUNING.c: 1074: }
  2449  0016AA  D008               	goto	l8487
  2450  0016AC                     l8483:
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;FastBuggy17_Main_Code_TUNING.c: 1105: else if(stop_flag == 1) {
  2454  0016AC  0101               	movlb	1	; () banked
  2455  0016AE  0559               	decf	main@stop_flag& (0+255),w,b
  2456  0016B0  A4D8               	btfss	status,2,c
  2457  0016B2  D004               	goto	l8487
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;FastBuggy17_Main_Code_TUNING.c: 1106: StopMotors();
  2461  0016B4  EC98  F021         	call	_StopMotors	;wreg free
  2462                           
  2463                           ;FastBuggy17_Main_Code_TUNING.c: 1107: break;
  2464  0016B8  D010               	goto	l8491
  2465                           
  2466                           ;FastBuggy17_Main_Code_TUNING.c: 1108: }
  2467                           ;FastBuggy17_Main_Code_TUNING.c: 1111: while(ReadMillis1() < 25);
  2468  0016BA  D000               	goto	l8487
  2469  0016BC                     l8487:
  2470  0016BC  ECD7  F022         	call	_ReadMillis1	;wreg free
  2471  0016C0  0100               	movlb	0	; () banked
  2472  0016C2  5171               	movf	(?_ReadMillis1+1)& (0+255),w,b
  2473  0016C4  E107               	bnz	l8489
  2474  0016C6  0E19               	movlw	25
  2475  0016C8  0100               	movlb	0	; () banked
  2476  0016CA  5D70               	subwf	?_ReadMillis1& (0+255),w,b
  2477  0016CC  B0D8               	btfsc	status,0,c
  2478  0016CE  D002               	goto	l8489
  2479  0016D0  D7F5               	goto	l8487
  2480  0016D2  D000               	goto	l8489
  2481  0016D4                     l8489:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;FastBuggy17_Main_Code_TUNING.c: 1112: LATJ = 0x00;
  2485  0016D4  0E00               	movlw	0
  2486  0016D6  6E91               	movwf	3985,c	;volatile
  2487                           
  2488                           ; BSR set to: 0
  2489  0016D8  D642               	goto	l8363
  2490  0016DA                     l8491:
  2491                           
  2492                           ;FastBuggy17_Main_Code_TUNING.c: 1114: }
  2493                           ;FastBuggy17_Main_Code_TUNING.c: 1117: LATJ = 0x03;
  2494  0016DA  0E03               	movlw	3
  2495  0016DC  6E91               	movwf	3985,c	;volatile
  2496                           
  2497                           ;FastBuggy17_Main_Code_TUNING.c: 1118: SendStatus(0x05);
  2498  0016DE  0E05               	movlw	5
  2499  0016E0  EC3E  F01F         	call	_SendStatus
  2500                           
  2501                           ;FastBuggy17_Main_Code_TUNING.c: 1120: SendDefaultPIDValues(20, 0, 0);
  2502  0016E4  0E00               	movlw	0
  2503  0016E6  0100               	movlb	0	; () banked
  2504  0016E8  6F79               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  2505  0016EA  0E14               	movlw	20
  2506  0016EC  6F78               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  2507  0016EE  0E00               	movlw	0
  2508  0016F0  0100               	movlb	0	; () banked
  2509  0016F2  6F7B               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  2510  0016F4  0E00               	movlw	0
  2511  0016F6  6F7A               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  2512  0016F8  0E00               	movlw	0
  2513  0016FA  0100               	movlb	0	; () banked
  2514  0016FC  6F7D               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  2515  0016FE  0E00               	movlw	0
  2516  001700  6F7C               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  2517  001702  EC3E  F01C         	call	_SendDefaultPIDValues	;wreg free
  2518                           
  2519                           ;FastBuggy17_Main_Code_TUNING.c: 1122: Kp_stored = ReadIntEEPROM(0x0011);
  2520  001706  0E00               	movlw	0
  2521  001708  0100               	movlb	0	; () banked
  2522  00170A  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2523  00170C  0E11               	movlw	17
  2524  00170E  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  2525  001710  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  2526  001714  C072  F15F         	movff	?_ReadIntEEPROM,main@Kp_stored
  2527  001718  C073  F160         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  2528                           
  2529                           ;FastBuggy17_Main_Code_TUNING.c: 1123: Kd_stored = ReadIntEEPROM(0x0013);
  2530  00171C  0E00               	movlw	0
  2531  00171E  0100               	movlb	0	; () banked
  2532  001720  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2533  001722  0E13               	movlw	19
  2534  001724  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  2535  001726  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  2536  00172A  C072  F161         	movff	?_ReadIntEEPROM,main@Kd_stored
  2537  00172E  C073  F162         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  2538                           
  2539                           ;FastBuggy17_Main_Code_TUNING.c: 1124: Ki_stored = ReadIntEEPROM(0x0015);
  2540  001732  0E00               	movlw	0
  2541  001734  0100               	movlb	0	; () banked
  2542  001736  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2543  001738  0E15               	movlw	21
  2544  00173A  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  2545  00173C  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  2546  001740  C072  F163         	movff	?_ReadIntEEPROM,main@Ki_stored
  2547  001744  C073  F164         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  2548                           
  2549                           ;FastBuggy17_Main_Code_TUNING.c: 1126: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_stor
      +                          ed);
  2550  001748  C15F  F078         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  2551  00174C  C160  F079         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  2552  001750  C161  F07A         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  2553  001754  C162  F07B         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  2554  001758  C163  F07C         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  2555  00175C  C164  F07D         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  2556  001760  EC09  F01C         	call	_SendStoredPIDValues	;wreg free
  2557                           
  2558                           ;FastBuggy17_Main_Code_TUNING.c: 1128: FlashLEDS();
  2559  001764  ECEC  F020         	call	_FlashLEDS	;wreg free
  2560                           
  2561                           ;FastBuggy17_Main_Code_TUNING.c: 1129: LATJ = 0x03;
  2562  001768  0E03               	movlw	3
  2563  00176A  6E91               	movwf	3985,c	;volatile
  2564                           
  2565                           ;FastBuggy17_Main_Code_TUNING.c: 1130: SetPIDValues();
  2566  00176C  EC5A  F010         	call	_SetPIDValues	;wreg free
  2567                           
  2568                           ;FastBuggy17_Main_Code_TUNING.c: 1147: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  2569  001770  C0E9  F078         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  2570  001774  C0EA  F079         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  2571  001778  C0D5  F07A         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  2572  00177C  C0D6  F07B         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  2573  001780  C0D7  F07C         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  2574  001784  C0D8  F07D         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  2575  001788  EC73  F01C         	call	_SendCurrentPIDValues	;wreg free
  2576  00178C  D564               	goto	l8321
  2577  00178E  EF76  F000         	goto	start
  2578  001792                     __end_of_main:
  2579                           	opt stack 0
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           status	equ	0xFD8
  2583                           
  2584 ;; *************** function _StopMotors *****************
  2585 ;; Defined at:
  2586 ;;		line 128 in file "Motors.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;		None               void
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    9
  2607 ;; This function calls:
  2608 ;;		_SetDCMotorL
  2609 ;;		_SetDCMotorR
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text1
  2616  004330                     __ptext1:
  2617                           	opt stack 0
  2618  004330                     _StopMotors:
  2619                           	opt stack 21
  2620                           
  2621                           ;Motors.c: 130: SetDCMotorR(526);
  2622                           
  2623                           ;incstack = 0
  2624  004330  0E02               	movlw	2
  2625  004332  0100               	movlb	0	; () banked
  2626  004334  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2627  004336  0E0E               	movlw	14
  2628  004338  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2629  00433A  ECAA  F022         	call	_SetDCMotorR	;wreg free
  2630                           
  2631                           ;Motors.c: 131: SetDCMotorL(526);
  2632  00433E  0E02               	movlw	2
  2633  004340  0100               	movlb	0	; () banked
  2634  004342  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2635  004344  0E0E               	movlw	14
  2636  004346  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2637  004348  ECB1  F022         	call	_SetDCMotorL	;wreg free
  2638  00434C  0012               	return		;funcret
  2639  00434E                     __end_of_StopMotors:
  2640                           	opt stack 0
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _SetUnipolar *****************
  2646 ;; Defined at:
  2647 ;;		line 121 in file "Motors.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;		None               void
  2654 ;; Registers used:
  2655 ;;		None
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    7
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text2
  2676  0045F8                     __ptext2:
  2677                           	opt stack 0
  2678  0045F8                     _SetUnipolar:
  2679                           	opt stack 23
  2680                           
  2681                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2682                           
  2683                           ;incstack = 0
  2684  0045F8  908C               	bcf	3980,0,c	;volatile
  2685                           
  2686                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2687  0045FA  948C               	bcf	3980,2,c	;volatile
  2688  0045FC  0012               	return		;funcret
  2689  0045FE                     __end_of_SetUnipolar:
  2690                           	opt stack 0
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           status	equ	0xFD8
  2694                           
  2695 ;; *************** function _SetReverseMotorL *****************
  2696 ;; Defined at:
  2697 ;;		line 96 in file "Motors.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;		None               void
  2704 ;; Registers used:
  2705 ;;		None
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    7
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text3
  2726  00460A                     __ptext3:
  2727                           	opt stack 0
  2728  00460A                     _SetReverseMotorL:
  2729                           	opt stack 23
  2730                           
  2731                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2732                           
  2733                           ;incstack = 0
  2734  00460A  968C               	bcf	3980,3,c	;volatile
  2735  00460C  0012               	return		;funcret
  2736  00460E                     __end_of_SetReverseMotorL:
  2737                           	opt stack 0
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _SetForwardsMotorR *****************
  2743 ;; Defined at:
  2744 ;;		line 78 in file "Motors.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;		None               void
  2751 ;; Registers used:
  2752 ;;		None
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    7
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text4
  2773  00460E                     __ptext4:
  2774                           	opt stack 0
  2775  00460E                     _SetForwardsMotorR:
  2776                           	opt stack 23
  2777                           
  2778                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2779                           
  2780                           ;incstack = 0
  2781  00460E  828C               	bsf	3980,1,c	;volatile
  2782  004610  0012               	return		;funcret
  2783  004612                     __end_of_SetForwardsMotorR:
  2784                           	opt stack 0
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function _SetDirectionForward *****************
  2790 ;; Defined at:
  2791 ;;		line 64 in file "Motors.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;		None               void
  2798 ;; Registers used:
  2799 ;;		None
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    7
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text5
  2820  0045FE                     __ptext5:
  2821                           	opt stack 0
  2822  0045FE                     _SetDirectionForward:
  2823                           	opt stack 23
  2824                           
  2825                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2826                           
  2827                           ;incstack = 0
  2828  0045FE  868C               	bsf	3980,3,c	;volatile
  2829                           
  2830                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2831  004600  828C               	bsf	3980,1,c	;volatile
  2832  004602  0012               	return		;funcret
  2833  004604                     __end_of_SetDirectionForward:
  2834                           	opt stack 0
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           status	equ	0xFD8
  2838                           
  2839 ;; *************** function _SetDCMotorPID *****************
  2840 ;; Defined at:
  2841 ;;		line 47 in file "Motors.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  PIDoutput       2   24[BANK0 ] int 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;Total ram usage:        4 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    9
  2862 ;; This function calls:
  2863 ;;		_SetDCMotorL
  2864 ;;		_SetDCMotorR
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text6
  2871  003034                     __ptext6:
  2872                           	opt stack 0
  2873  003034                     _SetDCMotorPID:
  2874                           	opt stack 21
  2875                           
  2876                           ;Motors.c: 49: if(PIDoutput <= 0) {
  2877                           
  2878                           ;incstack = 0
  2879  003034  0100               	movlb	0	; () banked
  2880  003036  BF79               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2881  003038  D007               	goto	l7767
  2882  00303A  0100               	movlb	0	; () banked
  2883  00303C  5179               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2884  00303E  E121               	bnz	l7769
  2885  003040  0100               	movlb	0	; () banked
  2886  003042  0578               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2887  003044  B0D8               	btfsc	status,0,c
  2888  003046  D01D               	goto	l7769
  2889  003048                     l7767:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;Motors.c: 50: SetDCMotorL(240 - PIDoutput);
  2893  003048  C078  F07A         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2894  00304C  C079  F07B         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2895  003050  0100               	movlb	0	; () banked
  2896  003052  1F7A               	comf	??_SetDCMotorPID& (0+255),f,b
  2897  003054  1F7B               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2898  003056  4B7A               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2899  003058  2B7B               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2900  00305A  0EF0               	movlw	240
  2901  00305C  0100               	movlb	0	; () banked
  2902  00305E  257A               	addwf	??_SetDCMotorPID& (0+255),w,b
  2903  003060  0100               	movlb	0	; () banked
  2904  003062  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2905  003064  0E00               	movlw	0
  2906  003066  0100               	movlb	0	; () banked
  2907  003068  217B               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2908  00306A  0100               	movlb	0	; () banked
  2909  00306C  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2910  00306E  ECB1  F022         	call	_SetDCMotorL	;wreg free
  2911                           
  2912                           ;Motors.c: 51: SetDCMotorR(240);
  2913  003072  0E00               	movlw	0
  2914  003074  0100               	movlb	0	; () banked
  2915  003076  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2916  003078  0EF0               	movlw	240
  2917  00307A  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2918  00307C  ECAA  F022         	call	_SetDCMotorR	;wreg free
  2919                           
  2920                           ;Motors.c: 52: }
  2921  003080  D033               	goto	l128
  2922  003082                     l7769:
  2923                           
  2924                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2925  003082  0100               	movlb	0	; () banked
  2926  003084  BF79               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2927  003086  D01B               	goto	l7773
  2928  003088  0100               	movlb	0	; () banked
  2929  00308A  5179               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2930  00308C  E104               	bnz	u7790
  2931  00308E  0100               	movlb	0	; () banked
  2932  003090  0578               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2933  003092  A0D8               	btfss	status,0,c
  2934  003094  D014               	goto	l7773
  2935  003096                     u7790:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;Motors.c: 54: SetDCMotorL(240);
  2939  003096  0E00               	movlw	0
  2940  003098  0100               	movlb	0	; () banked
  2941  00309A  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2942  00309C  0EF0               	movlw	240
  2943  00309E  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2944  0030A0  ECB1  F022         	call	_SetDCMotorL	;wreg free
  2945                           
  2946                           ;Motors.c: 55: SetDCMotorR(240 + PIDoutput);
  2947  0030A4  0EF0               	movlw	240
  2948  0030A6  0100               	movlb	0	; () banked
  2949  0030A8  2578               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2950  0030AA  0100               	movlb	0	; () banked
  2951  0030AC  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2952  0030AE  0E00               	movlw	0
  2953  0030B0  0100               	movlb	0	; () banked
  2954  0030B2  2179               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2955  0030B4  0100               	movlb	0	; () banked
  2956  0030B6  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2957  0030B8  ECAA  F022         	call	_SetDCMotorR	;wreg free
  2958                           
  2959                           ;Motors.c: 56: }
  2960  0030BC  D015               	goto	l128
  2961  0030BE                     l7773:
  2962                           
  2963                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2964  0030BE  0100               	movlb	0	; () banked
  2965  0030C0  5178               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2966  0030C2  0100               	movlb	0	; () banked
  2967  0030C4  1179               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2968  0030C6  A4D8               	btfss	status,2,c
  2969  0030C8  D00F               	goto	l128
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;Motors.c: 58: SetDCMotorL(240);
  2973  0030CA  0E00               	movlw	0
  2974  0030CC  0100               	movlb	0	; () banked
  2975  0030CE  6F77               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2976  0030D0  0EF0               	movlw	240
  2977  0030D2  6F76               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2978  0030D4  ECB1  F022         	call	_SetDCMotorL	;wreg free
  2979                           
  2980                           ;Motors.c: 59: SetDCMotorR(240);
  2981  0030D8  0E00               	movlw	0
  2982  0030DA  0100               	movlb	0	; () banked
  2983  0030DC  6F77               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2984  0030DE  0EF0               	movlw	240
  2985  0030E0  6F76               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2986  0030E2  ECAA  F022         	call	_SetDCMotorR	;wreg free
  2987  0030E6  D000               	goto	l128
  2988  0030E8                     l128:
  2989  0030E8  0012               	return		;funcret
  2990  0030EA                     __end_of_SetDCMotorPID:
  2991                           	opt stack 0
  2992                           postinc0	equ	0xFEE
  2993                           wreg	equ	0xFE8
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _SetDCMotorR *****************
  2997 ;; Defined at:
  2998 ;;		line 19 in file "Motors.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;Total ram usage:        2 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    8
  3019 ;; This function calls:
  3020 ;;		_SetDCPWM4
  3021 ;; This function is called by:
  3022 ;;		_SetDCMotorPID
  3023 ;;		_StopMotors
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text7
  3029  004554                     __ptext7:
  3030                           	opt stack 0
  3031  004554                     _SetDCMotorR:
  3032                           	opt stack 21
  3033                           
  3034                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  3035                           
  3036                           ;incstack = 0
  3037  004554  C076  F070         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  3038  004558  C077  F071         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  3039  00455C  EC5D  F01E         	call	_SetDCPWM4	;wreg free
  3040  004560  0012               	return		;funcret
  3041  004562                     __end_of_SetDCMotorR:
  3042                           	opt stack 0
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _SetDCPWM4 *****************
  3048 ;; Defined at:
  3049 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;Total ram usage:        6 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    7
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_SetDCMotorR
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text8
  3078  003CBA                     __ptext8:
  3079                           	opt stack 0
  3080  003CBA                     _SetDCPWM4:
  3081                           	opt stack 21
  3082                           
  3083                           ;incstack = 0
  3084  003CBA  C070  F072         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  3085  003CBE  C071  F073         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  3086  003CC2  0E06               	movlw	6
  3087  003CC4                     u6925:
  3088  003CC4  90D8               	bcf	status,0,c
  3089  003CC6  0100               	movlb	0	; () banked
  3090  003CC8  3772               	rlcf	??_SetDCPWM4& (0+255),f,b
  3091  003CCA  3773               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  3092  003CCC  2EE8               	decfsz	wreg,f,c
  3093  003CCE  D7FA               	goto	u6925
  3094  003CD0  C072  F074         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  3095  003CD4  C073  F075         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  3096                           
  3097                           ; BSR set to: 0
  3098  003CD8  C075  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  3099  003CDC  C074  F072         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  3100  003CE0  0100               	movlb	0	; () banked
  3101  003CE2  90D8               	bcf	status,0,c
  3102  003CE4  3372               	rrcf	??_SetDCPWM4& (0+255),f,b
  3103  003CE6  0100               	movlb	0	; () banked
  3104  003CE8  90D8               	bcf	status,0,c
  3105  003CEA  3372               	rrcf	??_SetDCPWM4& (0+255),f,b
  3106  003CEC  0E30               	movlw	48
  3107  003CEE  0100               	movlb	0	; () banked
  3108  003CF0  1772               	andwf	??_SetDCPWM4& (0+255),f,b
  3109  003CF2  5073               	movf	3955,w,c	;volatile
  3110  003CF4  0BCF               	andlw	207
  3111  003CF6  0100               	movlb	0	; () banked
  3112  003CF8  1172               	iorwf	??_SetDCPWM4& (0+255),w,b
  3113  003CFA  6E73               	movwf	3955,c	;volatile
  3114                           
  3115                           ; BSR set to: 0
  3116  003CFC  0012               	return		;funcret
  3117  003CFE                     __end_of_SetDCPWM4:
  3118                           	opt stack 0
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           status	equ	0xFD8
  3122                           
  3123 ;; *************** function _SetDCMotorL *****************
  3124 ;; Defined at:
  3125 ;;		line 6 in file "Motors.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:        2 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    8
  3146 ;; This function calls:
  3147 ;;		_SetDCPWM5
  3148 ;; This function is called by:
  3149 ;;		_SetDCMotorPID
  3150 ;;		_StopMotors
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text9
  3156  004562                     __ptext9:
  3157                           	opt stack 0
  3158  004562                     _SetDCMotorL:
  3159                           	opt stack 21
  3160                           
  3161                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;incstack = 0
  3165  004562  C076  F070         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  3166  004566  C077  F071         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  3167  00456A  EC7F  F01E         	call	_SetDCPWM5	;wreg free
  3168  00456E  0012               	return		;funcret
  3169  004570                     __end_of_SetDCMotorL:
  3170                           	opt stack 0
  3171                           postinc0	equ	0xFEE
  3172                           wreg	equ	0xFE8
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _SetDCPWM5 *****************
  3176 ;; Defined at:
  3177 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3182 ;; Return value:  Size  Location     Type
  3183 ;;		None               void
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        6 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    7
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_SetDCMotorL
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text10
  3206  003CFE                     __ptext10:
  3207                           	opt stack 0
  3208  003CFE                     _SetDCPWM5:
  3209                           	opt stack 21
  3210                           
  3211                           ;incstack = 0
  3212  003CFE  C070  F072         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  3213  003D02  C071  F073         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  3214  003D06  0E06               	movlw	6
  3215  003D08                     u6915:
  3216  003D08  90D8               	bcf	status,0,c
  3217  003D0A  0100               	movlb	0	; () banked
  3218  003D0C  3772               	rlcf	??_SetDCPWM5& (0+255),f,b
  3219  003D0E  3773               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  3220  003D10  2EE8               	decfsz	wreg,f,c
  3221  003D12  D7FA               	goto	u6915
  3222  003D14  C072  F074         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  3223  003D18  C073  F075         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  3224                           
  3225                           ; BSR set to: 0
  3226  003D1C  C075  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  3227  003D20  C074  F072         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  3228  003D24  0100               	movlb	0	; () banked
  3229  003D26  90D8               	bcf	status,0,c
  3230  003D28  3372               	rrcf	??_SetDCPWM5& (0+255),f,b
  3231  003D2A  0100               	movlb	0	; () banked
  3232  003D2C  90D8               	bcf	status,0,c
  3233  003D2E  3372               	rrcf	??_SetDCPWM5& (0+255),f,b
  3234  003D30  0E30               	movlw	48
  3235  003D32  0100               	movlb	0	; () banked
  3236  003D34  1772               	andwf	??_SetDCPWM5& (0+255),f,b
  3237  003D36  5070               	movf	3952,w,c	;volatile
  3238  003D38  0BCF               	andlw	207
  3239  003D3A  0100               	movlb	0	; () banked
  3240  003D3C  1172               	iorwf	??_SetDCPWM5& (0+255),w,b
  3241  003D3E  6E70               	movwf	3952,c	;volatile
  3242                           
  3243                           ; BSR set to: 0
  3244  003D40  0012               	return		;funcret
  3245  003D42                     __end_of_SetDCPWM5:
  3246                           	opt stack 0
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _SendStoredPIDValues *****************
  3252 ;; Defined at:
  3253 ;;		line 223 in file "Wireless.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  Kp              2   24[BANK0 ] int 
  3256 ;;  Kd              2   26[BANK0 ] int 
  3257 ;;  Ki              2   28[BANK0 ] int 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;		None               void
  3262 ;; Registers used:
  3263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        6 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    9
  3276 ;; This function calls:
  3277 ;;		_BusyTx
  3278 ;;		_FlushTxBuf
  3279 ;;		_PutCharTxBuf
  3280 ;;		_StartTx
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text11
  3287  003812                     __ptext11:
  3288                           	opt stack 0
  3289  003812                     _SendStoredPIDValues:
  3290                           	opt stack 21
  3291                           
  3292                           ;Wireless.c: 224: while(BusyTx());
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;incstack = 0
  3296  003812  D000               	goto	l7835
  3297  003814                     l7835:
  3298  003814  EC82  F022         	call	_BusyTx	;wreg free
  3299  003818  0900               	iorlw	0
  3300  00381A  A4D8               	btfss	status,2,c
  3301  00381C  D7FB               	goto	l7835
  3302                           
  3303                           ;Wireless.c: 225: FlushTxBuf();
  3304  00381E  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  3305                           
  3306                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3307  003822  0EAA               	movlw	170
  3308  003824  ECC2  F01E         	call	_PutCharTxBuf
  3309                           
  3310                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3311  003828  0E42               	movlw	66
  3312  00382A  ECC2  F01E         	call	_PutCharTxBuf
  3313                           
  3314                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3315  00382E  0100               	movlb	0	; () banked
  3316  003830  5179               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3317  003832  ECC2  F01E         	call	_PutCharTxBuf
  3318                           
  3319                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3320  003836  0100               	movlb	0	; () banked
  3321  003838  5178               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3322  00383A  ECC2  F01E         	call	_PutCharTxBuf
  3323                           
  3324                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3325  00383E  0100               	movlb	0	; () banked
  3326  003840  517B               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3327  003842  ECC2  F01E         	call	_PutCharTxBuf
  3328                           
  3329                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3330  003846  0100               	movlb	0	; () banked
  3331  003848  517A               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3332  00384A  ECC2  F01E         	call	_PutCharTxBuf
  3333                           
  3334                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3335  00384E  0100               	movlb	0	; () banked
  3336  003850  517D               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3337  003852  ECC2  F01E         	call	_PutCharTxBuf
  3338                           
  3339                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3340  003856  0100               	movlb	0	; () banked
  3341  003858  517C               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3342  00385A  ECC2  F01E         	call	_PutCharTxBuf
  3343                           
  3344                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3345  00385E  0E0D               	movlw	13
  3346  003860  ECC2  F01E         	call	_PutCharTxBuf
  3347                           
  3348                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3349  003864  0E0A               	movlw	10
  3350  003866  ECC2  F01E         	call	_PutCharTxBuf
  3351                           
  3352                           ;Wireless.c: 239: while (BusyTx());
  3353  00386A  D000               	goto	l7839
  3354  00386C                     l7839:
  3355  00386C  EC82  F022         	call	_BusyTx	;wreg free
  3356  003870  0900               	iorlw	0
  3357  003872  A4D8               	btfss	status,2,c
  3358  003874  D7FB               	goto	l7839
  3359                           
  3360                           ;Wireless.c: 240: StartTx();
  3361  003876  ECF0  F022         	call	_StartTx	;wreg free
  3362  00387A  0012               	return		;funcret
  3363  00387C                     __end_of_SendStoredPIDValues:
  3364                           	opt stack 0
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _SendLineMode *****************
  3370 ;; Defined at:
  3371 ;;		line 152 in file "Wireless.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3374 ;;		 -> line_mode(1), 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    9
  3393 ;; This function calls:
  3394 ;;		_BusyTx
  3395 ;;		_FlushTxBuf
  3396 ;;		_PutCharTxBuf
  3397 ;;		_StartTx
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text12
  3404  003E06                     __ptext12:
  3405                           	opt stack 0
  3406  003E06                     _SendLineMode:
  3407                           	opt stack 21
  3408                           
  3409                           ;Wireless.c: 153: while(BusyTx());
  3410                           
  3411                           ;incstack = 0
  3412  003E06  D000               	goto	l7817
  3413  003E08                     l7817:
  3414  003E08  EC82  F022         	call	_BusyTx	;wreg free
  3415  003E0C  0900               	iorlw	0
  3416  003E0E  A4D8               	btfss	status,2,c
  3417  003E10  D7FB               	goto	l7817
  3418                           
  3419                           ;Wireless.c: 154: FlushTxBuf();
  3420  003E12  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  3421                           
  3422                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3423  003E16  0EAA               	movlw	170
  3424  003E18  ECC2  F01E         	call	_PutCharTxBuf
  3425                           
  3426                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3427  003E1C  0E11               	movlw	17
  3428  003E1E  ECC2  F01E         	call	_PutCharTxBuf
  3429                           
  3430                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3431  003E22  C078  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3432  003E26  C079  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3433  003E2A  50DF               	movf	indf2,w,c
  3434  003E2C  ECC2  F01E         	call	_PutCharTxBuf
  3435                           
  3436                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3437  003E30  0E0D               	movlw	13
  3438  003E32  ECC2  F01E         	call	_PutCharTxBuf
  3439                           
  3440                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3441  003E36  0E0A               	movlw	10
  3442  003E38  ECC2  F01E         	call	_PutCharTxBuf
  3443                           
  3444                           ;Wireless.c: 162: StartTx();
  3445  003E3C  ECF0  F022         	call	_StartTx	;wreg free
  3446  003E40  0012               	return		;funcret
  3447  003E42                     __end_of_SendLineMode:
  3448                           	opt stack 0
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           indf2	equ	0xFDF
  3452                           fsr2h	equ	0xFDA
  3453                           fsr2l	equ	0xFD9
  3454                           status	equ	0xFD8
  3455                           
  3456 ;; *************** function _SendDefaultPIDValues *****************
  3457 ;; Defined at:
  3458 ;;		line 203 in file "Wireless.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  Kp              2   24[BANK0 ] int 
  3461 ;;  Kd              2   26[BANK0 ] int 
  3462 ;;  Ki              2   28[BANK0 ] int 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;		None               void
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3474 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;Total ram usage:        6 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    9
  3481 ;; This function calls:
  3482 ;;		_BusyTx
  3483 ;;		_FlushTxBuf
  3484 ;;		_PutCharTxBuf
  3485 ;;		_StartTx
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text13
  3492  00387C                     __ptext13:
  3493                           	opt stack 0
  3494  00387C                     _SendDefaultPIDValues:
  3495                           	opt stack 21
  3496                           
  3497                           ;Wireless.c: 204: while(BusyTx());
  3498                           
  3499                           ;incstack = 0
  3500  00387C  D000               	goto	l7825
  3501  00387E                     l7825:
  3502  00387E  EC82  F022         	call	_BusyTx	;wreg free
  3503  003882  0900               	iorlw	0
  3504  003884  A4D8               	btfss	status,2,c
  3505  003886  D7FB               	goto	l7825
  3506                           
  3507                           ;Wireless.c: 205: FlushTxBuf();
  3508  003888  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  3509                           
  3510                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3511  00388C  0EAA               	movlw	170
  3512  00388E  ECC2  F01E         	call	_PutCharTxBuf
  3513                           
  3514                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3515  003892  0E41               	movlw	65
  3516  003894  ECC2  F01E         	call	_PutCharTxBuf
  3517                           
  3518                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3519  003898  0100               	movlb	0	; () banked
  3520  00389A  5179               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3521  00389C  ECC2  F01E         	call	_PutCharTxBuf
  3522                           
  3523                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3524  0038A0  0100               	movlb	0	; () banked
  3525  0038A2  5178               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3526  0038A4  ECC2  F01E         	call	_PutCharTxBuf
  3527                           
  3528                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3529  0038A8  0100               	movlb	0	; () banked
  3530  0038AA  517B               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3531  0038AC  ECC2  F01E         	call	_PutCharTxBuf
  3532                           
  3533                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3534  0038B0  0100               	movlb	0	; () banked
  3535  0038B2  517A               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3536  0038B4  ECC2  F01E         	call	_PutCharTxBuf
  3537                           
  3538                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3539  0038B8  0100               	movlb	0	; () banked
  3540  0038BA  517D               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3541  0038BC  ECC2  F01E         	call	_PutCharTxBuf
  3542                           
  3543                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3544  0038C0  0100               	movlb	0	; () banked
  3545  0038C2  517C               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3546  0038C4  ECC2  F01E         	call	_PutCharTxBuf
  3547                           
  3548                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3549  0038C8  0E0D               	movlw	13
  3550  0038CA  ECC2  F01E         	call	_PutCharTxBuf
  3551                           
  3552                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3553  0038CE  0E0A               	movlw	10
  3554  0038D0  ECC2  F01E         	call	_PutCharTxBuf
  3555                           
  3556                           ;Wireless.c: 219: while (BusyTx());
  3557  0038D4  D000               	goto	l7829
  3558  0038D6                     l7829:
  3559  0038D6  EC82  F022         	call	_BusyTx	;wreg free
  3560  0038DA  0900               	iorlw	0
  3561  0038DC  A4D8               	btfss	status,2,c
  3562  0038DE  D7FB               	goto	l7829
  3563                           
  3564                           ;Wireless.c: 220: StartTx();
  3565  0038E0  ECF0  F022         	call	_StartTx	;wreg free
  3566  0038E4  0012               	return		;funcret
  3567  0038E6                     __end_of_SendDefaultPIDValues:
  3568                           	opt stack 0
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf2	equ	0xFDF
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _SendCurrentPIDValues *****************
  3577 ;; Defined at:
  3578 ;;		line 243 in file "Wireless.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  Kp              2   24[BANK0 ] int 
  3581 ;;  Kd              2   26[BANK0 ] int 
  3582 ;;  Ki              2   28[BANK0 ] int 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        6 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    9
  3601 ;; This function calls:
  3602 ;;		_BusyTx
  3603 ;;		_FlushTxBuf
  3604 ;;		_PutCharTxBuf
  3605 ;;		_StartTx
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text14
  3612  0038E6                     __ptext14:
  3613                           	opt stack 0
  3614  0038E6                     _SendCurrentPIDValues:
  3615                           	opt stack 21
  3616                           
  3617                           ;Wireless.c: 244: while(BusyTx());
  3618                           
  3619                           ;incstack = 0
  3620  0038E6  D000               	goto	l7845
  3621  0038E8                     l7845:
  3622  0038E8  EC82  F022         	call	_BusyTx	;wreg free
  3623  0038EC  0900               	iorlw	0
  3624  0038EE  A4D8               	btfss	status,2,c
  3625  0038F0  D7FB               	goto	l7845
  3626                           
  3627                           ;Wireless.c: 245: FlushTxBuf();
  3628  0038F2  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  3629                           
  3630                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3631  0038F6  0EAA               	movlw	170
  3632  0038F8  ECC2  F01E         	call	_PutCharTxBuf
  3633                           
  3634                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3635  0038FC  0E43               	movlw	67
  3636  0038FE  ECC2  F01E         	call	_PutCharTxBuf
  3637                           
  3638                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3639  003902  0100               	movlb	0	; () banked
  3640  003904  5179               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3641  003906  ECC2  F01E         	call	_PutCharTxBuf
  3642                           
  3643                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3644  00390A  0100               	movlb	0	; () banked
  3645  00390C  5178               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3646  00390E  ECC2  F01E         	call	_PutCharTxBuf
  3647                           
  3648                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3649  003912  0100               	movlb	0	; () banked
  3650  003914  517B               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3651  003916  ECC2  F01E         	call	_PutCharTxBuf
  3652                           
  3653                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3654  00391A  0100               	movlb	0	; () banked
  3655  00391C  517A               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3656  00391E  ECC2  F01E         	call	_PutCharTxBuf
  3657                           
  3658                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3659  003922  0100               	movlb	0	; () banked
  3660  003924  517D               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3661  003926  ECC2  F01E         	call	_PutCharTxBuf
  3662                           
  3663                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3664  00392A  0100               	movlb	0	; () banked
  3665  00392C  517C               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3666  00392E  ECC2  F01E         	call	_PutCharTxBuf
  3667                           
  3668                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3669  003932  0E0D               	movlw	13
  3670  003934  ECC2  F01E         	call	_PutCharTxBuf
  3671                           
  3672                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3673  003938  0E0A               	movlw	10
  3674  00393A  ECC2  F01E         	call	_PutCharTxBuf
  3675                           
  3676                           ;Wireless.c: 259: while (BusyTx());
  3677  00393E  D000               	goto	l7849
  3678  003940                     l7849:
  3679  003940  EC82  F022         	call	_BusyTx	;wreg free
  3680  003944  0900               	iorlw	0
  3681  003946  A4D8               	btfss	status,2,c
  3682  003948  D7FB               	goto	l7849
  3683                           
  3684                           ;Wireless.c: 260: StartTx();
  3685  00394A  ECF0  F022         	call	_StartTx	;wreg free
  3686  00394E  0012               	return		;funcret
  3687  003950                     __end_of_SendCurrentPIDValues:
  3688                           	opt stack 0
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           indf2	equ	0xFDF
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _SendBattVoltageInitial *****************
  3697 ;; Defined at:
  3698 ;;		line 265 in file "Wireless.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3701 ;;		 -> main@battery_voltage(2), 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;		None               void
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;Total ram usage:        4 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    9
  3720 ;; This function calls:
  3721 ;;		_BusyTx
  3722 ;;		_FlushTxBuf
  3723 ;;		_PutCharTxBuf
  3724 ;;		_StartTx
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text15
  3731  0039BA                     __ptext15:
  3732                           	opt stack 0
  3733  0039BA                     _SendBattVoltageInitial:
  3734                           	opt stack 21
  3735                           
  3736                           ;Wireless.c: 266: while(BusyTx());
  3737                           
  3738                           ;incstack = 0
  3739  0039BA  D000               	goto	l7855
  3740  0039BC                     l7855:
  3741  0039BC  EC82  F022         	call	_BusyTx	;wreg free
  3742  0039C0  0900               	iorlw	0
  3743  0039C2  A4D8               	btfss	status,2,c
  3744  0039C4  D7FB               	goto	l7855
  3745                           
  3746                           ;Wireless.c: 267: FlushTxBuf();
  3747  0039C6  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  3748                           
  3749                           ;Wireless.c: 269: PutCharTxBuf(0xAA);
  3750  0039CA  0EAA               	movlw	170
  3751  0039CC  ECC2  F01E         	call	_PutCharTxBuf
  3752                           
  3753                           ;Wireless.c: 270: PutCharTxBuf(0x06);
  3754  0039D0  0E06               	movlw	6
  3755  0039D2  ECC2  F01E         	call	_PutCharTxBuf
  3756                           
  3757                           ;Wireless.c: 272: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  3758  0039D6  C078  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3759  0039DA  C079  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3760  0039DE  CFDE F07A          	movff	postinc2,??_SendBattVoltageInitial
  3761  0039E2  CFDD F07B          	movff	postdec2,??_SendBattVoltageInitial+1
  3762  0039E6  C07B  F07A         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  3763  0039EA  0100               	movlb	0	; () banked
  3764  0039EC  6B7B               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  3765  0039EE  0100               	movlb	0	; () banked
  3766  0039F0  517A               	movf	??_SendBattVoltageInitial& (0+255),w,b
  3767  0039F2  ECC2  F01E         	call	_PutCharTxBuf
  3768                           
  3769                           ;Wireless.c: 273: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  3770  0039F6  C078  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3771  0039FA  C079  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3772  0039FE  50DF               	movf	indf2,w,c
  3773  003A00  ECC2  F01E         	call	_PutCharTxBuf
  3774                           
  3775                           ;Wireless.c: 275: PutCharTxBuf('\r');
  3776  003A04  0E0D               	movlw	13
  3777  003A06  ECC2  F01E         	call	_PutCharTxBuf
  3778                           
  3779                           ;Wireless.c: 276: PutCharTxBuf('\n');
  3780  003A0A  0E0A               	movlw	10
  3781  003A0C  ECC2  F01E         	call	_PutCharTxBuf
  3782                           
  3783                           ;Wireless.c: 277: while (BusyTx());
  3784  003A10  D000               	goto	l7859
  3785  003A12                     l7859:
  3786  003A12  EC82  F022         	call	_BusyTx	;wreg free
  3787  003A16  0900               	iorlw	0
  3788  003A18  A4D8               	btfss	status,2,c
  3789  003A1A  D7FB               	goto	l7859
  3790                           
  3791                           ;Wireless.c: 278: StartTx();
  3792  003A1C  ECF0  F022         	call	_StartTx	;wreg free
  3793  003A20  0012               	return		;funcret
  3794  003A22                     __end_of_SendBattVoltageInitial:
  3795                           	opt stack 0
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _ResetMillis1 *****************
  3806 ;; Defined at:
  3807 ;;		line 33 in file "MillisecondTimer.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;		None               void
  3814 ;; Registers used:
  3815 ;;		wreg, status,2
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    7
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text16
  3836  00459A                     __ptext16:
  3837                           	opt stack 0
  3838  00459A                     _ResetMillis1:
  3839                           	opt stack 23
  3840                           
  3841                           ;MillisecondTimer.c: 35: millisecond_COUNT1 = 0;
  3842                           
  3843                           ;incstack = 0
  3844  00459A  0E00               	movlw	0
  3845  00459C  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  3846  00459E  0E00               	movlw	0
  3847  0045A0  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  3848  0045A2  0012               	return		;funcret
  3849  0045A4                     __end_of_ResetMillis1:
  3850                           	opt stack 0
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           indf2	equ	0xFDF
  3854                           postinc2	equ	0xFDE
  3855                           postdec2	equ	0xFDD
  3856                           fsr2h	equ	0xFDA
  3857                           fsr2l	equ	0xFD9
  3858                           status	equ	0xFD8
  3859                           
  3860 ;; *************** function _ResetMillis0 *****************
  3861 ;; Defined at:
  3862 ;;		line 27 in file "MillisecondTimer.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;		None               void
  3869 ;; Registers used:
  3870 ;;		wreg, status,2
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    7
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text17
  3891  0045A4                     __ptext17:
  3892                           	opt stack 0
  3893  0045A4                     _ResetMillis0:
  3894                           	opt stack 23
  3895                           
  3896                           ;MillisecondTimer.c: 29: millisecond_COUNT0 = 0;
  3897                           
  3898                           ;incstack = 0
  3899  0045A4  0E00               	movlw	0
  3900  0045A6  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  3901  0045A8  0E00               	movlw	0
  3902  0045AA  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  3903  0045AC  0012               	return		;funcret
  3904  0045AE                     __end_of_ResetMillis0:
  3905                           	opt stack 0
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _ResetAccumulatedCurrent *****************
  3916 ;; Defined at:
  3917 ;;		line 103 in file "BatteryLib/ds2781.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    9
  3938 ;; This function calls:
  3939 ;;		_OWReset
  3940 ;;		_OWWriteByte
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text18
  3947  00412A                     __ptext18:
  3948                           	opt stack 0
  3949  00412A                     _ResetAccumulatedCurrent:
  3950                           	opt stack 21
  3951                           
  3952                           ;ds2781.c: 105: if( OWReset() == TRUE)
  3953                           
  3954                           ;incstack = 0
  3955  00412A  EC5B  F01F         	call	_OWReset	;wreg free
  3956  00412E  06E8               	decf	wreg,f,c
  3957  004130  A4D8               	btfss	status,2,c
  3958  004132  D010               	goto	l452
  3959                           
  3960                           ;ds2781.c: 106: {
  3961                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  3962  004134  0ECC               	movlw	204
  3963  004136  ECAB  F020         	call	_OWWriteByte
  3964                           
  3965                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  3966  00413A  0E6C               	movlw	108
  3967  00413C  ECAB  F020         	call	_OWWriteByte
  3968                           
  3969                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  3970  004140  0E10               	movlw	16
  3971  004142  ECAB  F020         	call	_OWWriteByte
  3972                           
  3973                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  3974  004146  0E00               	movlw	0
  3975  004148  ECAB  F020         	call	_OWWriteByte
  3976                           
  3977                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  3978  00414C  0E00               	movlw	0
  3979  00414E  ECAB  F020         	call	_OWWriteByte
  3980  004152  D000               	goto	l452
  3981  004154                     l452:
  3982  004154  0012               	return		;funcret
  3983  004156                     __end_of_ResetAccumulatedCurrent:
  3984                           	opt stack 0
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           indf2	equ	0xFDF
  3988                           postinc2	equ	0xFDE
  3989                           postdec2	equ	0xFDD
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _ReadVoltage *****************
  3995 ;; Defined at:
  3996 ;;		line 33 in file "BatteryLib/ds2781.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  result          2   24[BANK0 ] unsigned short 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2   19[BANK0 ] unsigned short 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        7 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    9
  4017 ;; This function calls:
  4018 ;;		_OWReadByte
  4019 ;;		_OWReset
  4020 ;;		_OWWriteByte
  4021 ;; This function is called by:
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text19
  4027  003950                     __ptext19:
  4028                           	opt stack 0
  4029  003950                     _ReadVoltage:
  4030                           	opt stack 21
  4031                           
  4032                           ;ds2781.c: 35: WORD result = 0;
  4033                           
  4034                           ;incstack = 0
  4035  003950  0E00               	movlw	0
  4036  003952  0100               	movlb	0	; () banked
  4037  003954  6F79               	movwf	(ReadVoltage@result+1)& (0+255),b
  4038  003956  0E00               	movlw	0
  4039  003958  6F78               	movwf	ReadVoltage@result& (0+255),b
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4043  00395A  EC5B  F01F         	call	_OWReset	;wreg free
  4044  00395E  06E8               	decf	wreg,f,c
  4045  003960  A4D8               	btfss	status,2,c
  4046  003962  D017               	goto	l7869
  4047                           
  4048                           ;ds2781.c: 37: {
  4049                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4050  003964  0ECC               	movlw	204
  4051  003966  ECAB  F020         	call	_OWWriteByte
  4052                           
  4053                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4054  00396A  0E69               	movlw	105
  4055  00396C  ECAB  F020         	call	_OWWriteByte
  4056                           
  4057                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4058  003970  0E0C               	movlw	12
  4059  003972  ECAB  F020         	call	_OWWriteByte
  4060                           
  4061                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4062  003976  EC77  F01F         	call	_OWReadByte	;wreg free
  4063  00397A  0100               	movlb	0	; () banked
  4064  00397C  6F79               	movwf	(ReadVoltage@result+1)& (0+255),b
  4065  00397E  6B78               	clrf	ReadVoltage@result& (0+255),b
  4066                           
  4067                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4068  003980  EC77  F01F         	call	_OWReadByte	;wreg free
  4069  003984  0100               	movlb	0	; () banked
  4070  003986  6F75               	movwf	??_ReadVoltage& (0+255),b
  4071  003988  0100               	movlb	0	; () banked
  4072  00398A  5175               	movf	??_ReadVoltage& (0+255),w,b
  4073  00398C  0100               	movlb	0	; () banked
  4074  00398E  1378               	iorwf	ReadVoltage@result& (0+255),f,b
  4075  003990  D000               	goto	l7869
  4076  003992                     l7869:
  4077                           
  4078                           ;ds2781.c: 43: }
  4079                           ;ds2781.c: 44: return (result >> 5);
  4080  003992  C078  F075         	movff	ReadVoltage@result,??_ReadVoltage
  4081  003996  C079  F076         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4082  00399A  0E05               	movlw	5
  4083  00399C  0100               	movlb	0	; () banked
  4084  00399E  6F77               	movwf	(??_ReadVoltage+2)& (0+255),b
  4085  0039A0                     u7915:
  4086  0039A0  0100               	movlb	0	; () banked
  4087  0039A2  90D8               	bcf	status,0,c
  4088  0039A4  3376               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4089  0039A6  3375               	rrcf	??_ReadVoltage& (0+255),f,b
  4090  0039A8  0100               	movlb	0	; () banked
  4091  0039AA  2F77               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4092  0039AC  D7F9               	goto	u7915
  4093  0039AE  C075  F073         	movff	??_ReadVoltage,?_ReadVoltage
  4094  0039B2  C076  F074         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4095  0039B6  D000               	goto	l440
  4096  0039B8                     l440:
  4097                           
  4098                           ; BSR set to: 0
  4099  0039B8  0012               	return		;funcret
  4100  0039BA                     __end_of_ReadVoltage:
  4101                           	opt stack 0
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _OWWriteByte *****************
  4112 ;; Defined at:
  4113 ;;		line 143 in file "BatteryLib/OneWire.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  byte            1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  byte            1   17[BANK0 ] unsigned char 
  4118 ;;  i               1   18[BANK0 ] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;		None               void
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    8
  4135 ;; This function calls:
  4136 ;;		_OWWriteBit
  4137 ;; This function is called by:
  4138 ;;		_ReadVoltage
  4139 ;;		_ResetAccumulatedCurrent
  4140 ;;		_ReadCurrent
  4141 ;;		_ReadAccumulatedCurrent
  4142 ;;		_ReadNetAddress
  4143 ;;		_ReadTemperature
  4144 ;;		_ReadCurrentOffset
  4145 ;;		_WriteCurrentOffset
  4146 ;;		_AdjustCurrentOffset
  4147 ;;		_UpdateControlRegister
  4148 ;;		_ReadRAM
  4149 ;;		_WriteRAM
  4150 ;;		_CopyEEPROM
  4151 ;;		_RecallEEPROM
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text20
  4156  004156                     __ptext20:
  4157                           	opt stack 0
  4158  004156                     _OWWriteByte:
  4159                           	opt stack 21
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;incstack = 0
  4163                           ;OWWriteByte@byte stored from wreg
  4164  004156  0100               	movlb	0	; () banked
  4165  004158  6F71               	movwf	OWWriteByte@byte& (0+255),b
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;OneWire.c: 145: BYTE i;
  4169                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4170  00415A  0E00               	movlw	0
  4171  00415C  0100               	movlb	0	; () banked
  4172  00415E  6F72               	movwf	OWWriteByte@i& (0+255),b
  4173  004160                     l7455:
  4174                           
  4175                           ; BSR set to: 0
  4176  004160  0E07               	movlw	7
  4177  004162  0100               	movlb	0	; () banked
  4178  004164  6572               	cpfsgt	OWWriteByte@i& (0+255),b
  4179  004166  D001               	goto	l7459
  4180                           
  4181                           ; BSR set to: 0
  4182  004168  D00B               	goto	l527
  4183  00416A                     l7459:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;OneWire.c: 148: {
  4187                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4188  00416A  0100               	movlb	0	; () banked
  4189  00416C  5171               	movf	OWWriteByte@byte& (0+255),w,b
  4190  00416E  0B01               	andlw	1
  4191  004170  EC21  F01F         	call	_OWWriteBit
  4192                           
  4193                           ;OneWire.c: 150: byte >>= 1;
  4194  004174  0100               	movlb	0	; () banked
  4195  004176  90D8               	bcf	status,0,c
  4196  004178  3371               	rrcf	OWWriteByte@byte& (0+255),f,b
  4197                           
  4198                           ; BSR set to: 0
  4199  00417A  0100               	movlb	0	; () banked
  4200  00417C  2B72               	incf	OWWriteByte@i& (0+255),f,b
  4201  00417E  D7F0               	goto	l7455
  4202  004180                     l527:
  4203                           
  4204                           ; BSR set to: 0
  4205  004180  0012               	return		;funcret
  4206  004182                     __end_of_OWWriteByte:
  4207                           	opt stack 0
  4208                           postinc0	equ	0xFEE
  4209                           wreg	equ	0xFE8
  4210                           indf2	equ	0xFDF
  4211                           postinc2	equ	0xFDE
  4212                           postdec2	equ	0xFDD
  4213                           fsr2h	equ	0xFDA
  4214                           fsr2l	equ	0xFD9
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function _OWWriteBit *****************
  4218 ;; Defined at:
  4219 ;;		line 72 in file "BatteryLib/OneWire.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  b               1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  b               1   16[BANK0 ] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;		None               void
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    7
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_OWWriteByte
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text21
  4248  003E42                     __ptext21:
  4249                           	opt stack 0
  4250  003E42                     _OWWriteBit:
  4251                           	opt stack 21
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;incstack = 0
  4255                           ;OWWriteBit@b stored from wreg
  4256  003E42  0100               	movlb	0	; () banked
  4257  003E44  6F70               	movwf	OWWriteBit@b& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;OneWire.c: 74: if (b)
  4261  003E46  0100               	movlb	0	; () banked
  4262  003E48  5170               	movf	OWWriteBit@b& (0+255),w,b
  4263  003E4A  0100               	movlb	0	; () banked
  4264  003E4C  B4D8               	btfsc	status,2,c
  4265  003E4E  D00A               	goto	l517
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;OneWire.c: 75: {
  4269                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4270  003E50  9690               	bcf	3984,3,c	;volatile
  4271                           
  4272                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4273  003E52  9699               	bcf	3993,3,c	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4277  003E54  0E04               	movlw	4
  4278  003E56                     u8687:
  4279  003E56  2EE8               	decfsz	wreg,f,c
  4280  003E58  D7FE               	goto	u8687
  4281                           
  4282                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4283  003E5A  8699               	bsf	3993,3,c	;volatile
  4284                           
  4285                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4286  003E5C  0E35               	movlw	53
  4287  003E5E                     u8697:
  4288  003E5E  2EE8               	decfsz	wreg,f,c
  4289  003E60  D7FE               	goto	u8697
  4290  003E62  D009               	goto	L3
  4291  003E64                     l517:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;OneWire.c: 87: else
  4295                           ;OneWire.c: 88: {
  4296                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4297  003E64  9690               	bcf	3984,3,c	;volatile
  4298                           
  4299                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4300  003E66  9699               	bcf	3993,3,c	;volatile
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4304  003E68  0E32               	movlw	50
  4305  003E6A                     u8707:
  4306  003E6A  2EE8               	decfsz	wreg,f,c
  4307  003E6C  D7FE               	goto	u8707
  4308                           
  4309                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4310  003E6E  8699               	bsf	3993,3,c	;volatile
  4311                           
  4312                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4313  003E70  0E08               	movlw	8
  4314  003E72                     u8717:
  4315  003E72  2EE8               	decfsz	wreg,f,c
  4316  003E74  D7FE               	goto	u8717
  4317  003E76                     L3:
  4318  003E76  F000               	nop	
  4319  003E78  D000               	goto	l519
  4320  003E7A                     l519:
  4321  003E7A  0012               	return		;funcret
  4322  003E7C                     __end_of_OWWriteBit:
  4323                           	opt stack 0
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           indf2	equ	0xFDF
  4327                           postinc2	equ	0xFDE
  4328                           postdec2	equ	0xFDD
  4329                           fsr2h	equ	0xFDA
  4330                           fsr2l	equ	0xFD9
  4331                           status	equ	0xFD8
  4332                           
  4333 ;; *************** function _OWReset *****************
  4334 ;; Defined at:
  4335 ;;		line 41 in file "BatteryLib/OneWire.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  result          1   16[BANK0 ] enum E6350
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      enum E6350
  4342 ;; Registers used:
  4343 ;;		wreg, status,2
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;Total ram usage:        1 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    7
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_ReadVoltage
  4360 ;;		_ResetAccumulatedCurrent
  4361 ;;		_ReadCurrent
  4362 ;;		_ReadAccumulatedCurrent
  4363 ;;		_ReadNetAddress
  4364 ;;		_ReadTemperature
  4365 ;;		_ReadCurrentOffset
  4366 ;;		_WriteCurrentOffset
  4367 ;;		_AdjustCurrentOffset
  4368 ;;		_UpdateControlRegister
  4369 ;;		_ReadRAM
  4370 ;;		_WriteRAM
  4371 ;;		_CopyEEPROM
  4372 ;;		_RecallEEPROM
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text22
  4377  003EB6                     __ptext22:
  4378                           	opt stack 0
  4379  003EB6                     _OWReset:
  4380                           	opt stack 22
  4381                           
  4382                           ;OneWire.c: 43: BOOL result = FALSE;
  4383                           
  4384                           ;incstack = 0
  4385  003EB6  0E00               	movlw	0
  4386  003EB8  0100               	movlb	0	; () banked
  4387  003EBA  6F70               	movwf	OWReset@result& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  4391  003EBC  9690               	bcf	3984,3,c	;volatile
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  4395  003EBE  9699               	bcf	3993,3,c	;volatile
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  4399  003EC0  0EF0               	movlw	240
  4400  003EC2                     u8727:
  4401  003EC2  D000               	nop2	
  4402  003EC4  2EE8               	decfsz	wreg,f,c
  4403  003EC6  D7FD               	goto	u8727
  4404                           
  4405                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  4406  003EC8  8699               	bsf	3993,3,c	;volatile
  4407                           
  4408                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  4409  003ECA  0E38               	movlw	56
  4410  003ECC                     u8737:
  4411  003ECC  2EE8               	decfsz	wreg,f,c
  4412  003ECE  D7FE               	goto	u8737
  4413  003ED0  D000               	nop2		;nop
  4414                           
  4415                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  4416  003ED2  B690               	btfsc	3984,3,c	;volatile
  4417  003ED4  D004               	goto	l7447
  4418                           
  4419                           ;OneWire.c: 54: {
  4420                           ;OneWire.c: 55: result = TRUE;
  4421  003ED6  0E01               	movlw	1
  4422  003ED8  0100               	movlb	0	; () banked
  4423  003EDA  6F70               	movwf	OWReset@result& (0+255),b
  4424  003EDC  D000               	goto	l7447
  4425  003EDE                     l7447:
  4426                           
  4427                           ;OneWire.c: 56: }
  4428                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  4429  003EDE  0EFD               	movlw	253
  4430  003EE0                     u8747:
  4431  003EE0  F000               	nop	
  4432  003EE2  2EE8               	decfsz	wreg,f,c
  4433  003EE4  D7FD               	goto	u8747
  4434                           
  4435                           ;OneWire.c: 59: return result;
  4436  003EE6  0100               	movlb	0	; () banked
  4437  003EE8  5170               	movf	OWReset@result& (0+255),w,b
  4438  003EEA  D000               	goto	l514
  4439  003EEC                     l514:
  4440                           
  4441                           ; BSR set to: 0
  4442  003EEC  0012               	return		;funcret
  4443  003EEE                     __end_of_OWReset:
  4444                           	opt stack 0
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           indf2	equ	0xFDF
  4448                           postinc2	equ	0xFDE
  4449                           postdec2	equ	0xFDD
  4450                           fsr2h	equ	0xFDA
  4451                           fsr2l	equ	0xFD9
  4452                           status	equ	0xFD8
  4453                           
  4454 ;; *************** function _OWReadByte *****************
  4455 ;; Defined at:
  4456 ;;		line 163 in file "BatteryLib/OneWire.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  i               1   18[BANK0 ] unsigned char 
  4461 ;;  result          1   17[BANK0 ] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      unsigned char 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;Total ram usage:        2 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    8
  4478 ;; This function calls:
  4479 ;;		_OWReadBit
  4480 ;; This function is called by:
  4481 ;;		_ReadVoltage
  4482 ;;		_ReadCurrent
  4483 ;;		_ReadAccumulatedCurrent
  4484 ;;		_ReadTemperature
  4485 ;;		_ReadCurrentOffset
  4486 ;;		_AdjustCurrentOffset
  4487 ;;		_ReadRAM
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text23
  4492  003EEE                     __ptext23:
  4493                           	opt stack 0
  4494  003EEE                     _OWReadByte:
  4495                           	opt stack 21
  4496                           
  4497                           ;OneWire.c: 165: BYTE i, result=0;
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;incstack = 0
  4501  003EEE  0E00               	movlw	0
  4502  003EF0  0100               	movlb	0	; () banked
  4503  003EF2  6F71               	movwf	OWReadByte@result& (0+255),b
  4504                           
  4505                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  4506  003EF4  0E00               	movlw	0
  4507  003EF6  0100               	movlb	0	; () banked
  4508  003EF8  6F72               	movwf	OWReadByte@i& (0+255),b
  4509  003EFA                     l7469:
  4510                           
  4511                           ; BSR set to: 0
  4512  003EFA  0E07               	movlw	7
  4513  003EFC  0100               	movlb	0	; () banked
  4514  003EFE  6572               	cpfsgt	OWReadByte@i& (0+255),b
  4515  003F00  D001               	goto	l7473
  4516                           
  4517                           ; BSR set to: 0
  4518  003F02  D00D               	goto	l7481
  4519  003F04                     l7473:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;OneWire.c: 168: {
  4523                           ;OneWire.c: 169: result >>= 1;
  4524  003F04  0100               	movlb	0	; () banked
  4525  003F06  90D8               	bcf	status,0,c
  4526  003F08  3371               	rrcf	OWReadByte@result& (0+255),f,b
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;OneWire.c: 171: if (OWReadBit())
  4530  003F0A  EC4D  F020         	call	_OWReadBit	;wreg free
  4531  003F0E  0900               	iorlw	0
  4532  003F10  B4D8               	btfsc	status,2,c
  4533  003F12  D002               	goto	l532
  4534                           
  4535                           ;OneWire.c: 172: result |= 0x80;
  4536  003F14  0100               	movlb	0	; () banked
  4537  003F16  8F71               	bsf	OWReadByte@result& (0+255),7,b
  4538  003F18                     l532:
  4539  003F18  0100               	movlb	0	; () banked
  4540  003F1A  2B72               	incf	OWReadByte@i& (0+255),f,b
  4541  003F1C  D7EE               	goto	l7469
  4542  003F1E                     l7481:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;OneWire.c: 173: }
  4546                           ;OneWire.c: 174: return result;
  4547  003F1E  0100               	movlb	0	; () banked
  4548  003F20  5171               	movf	OWReadByte@result& (0+255),w,b
  4549  003F22  D000               	goto	l533
  4550  003F24                     l533:
  4551                           
  4552                           ; BSR set to: 0
  4553  003F24  0012               	return		;funcret
  4554  003F26                     __end_of_OWReadByte:
  4555                           	opt stack 0
  4556                           postinc0	equ	0xFEE
  4557                           wreg	equ	0xFE8
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           fsr2h	equ	0xFDA
  4562                           fsr2l	equ	0xFD9
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _OWReadBit *****************
  4566 ;; Defined at:
  4567 ;;		line 112 in file "BatteryLib/OneWire.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  result          1   16[BANK0 ] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        1 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    7
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_OWReadByte
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text24
  4596  00409A                     __ptext24:
  4597                           	opt stack 0
  4598  00409A                     _OWReadBit:
  4599                           	opt stack 21
  4600                           
  4601                           ;OneWire.c: 114: BYTE result;
  4602                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;incstack = 0
  4606  00409A  9690               	bcf	3984,3,c	;volatile
  4607                           
  4608                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  4609  00409C  9699               	bcf	3993,3,c	;volatile
  4610                           
  4611                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4612  00409E  0E04               	movlw	4
  4613  0040A0                     u8757:
  4614  0040A0  2EE8               	decfsz	wreg,f,c
  4615  0040A2  D7FE               	goto	u8757
  4616                           
  4617                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  4618  0040A4  8699               	bsf	3993,3,c	;volatile
  4619                           
  4620                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4621  0040A6  0E08               	movlw	8
  4622  0040A8                     u8767:
  4623  0040A8  2EE8               	decfsz	wreg,f,c
  4624  0040AA  D7FE               	goto	u8767
  4625  0040AC  F000               	nop	
  4626                           
  4627                           ;OneWire.c: 127: result = PORTHbits.RH3;
  4628  0040AE  0E00               	movlw	0
  4629  0040B0  B687               	btfsc	3975,3,c	;volatile
  4630  0040B2  0E01               	movlw	1
  4631  0040B4  0100               	movlb	0	; () banked
  4632  0040B6  6F70               	movwf	OWReadBit@result& (0+255),b
  4633                           
  4634                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  4635  0040B8  0E2D               	movlw	45
  4636  0040BA                     u8777:
  4637  0040BA  2EE8               	decfsz	wreg,f,c
  4638  0040BC  D7FE               	goto	u8777
  4639  0040BE  D000               	nop2		;nop
  4640                           
  4641                           ;OneWire.c: 131: return result & 0x01;
  4642  0040C0  0100               	movlb	0	; () banked
  4643  0040C2  5170               	movf	OWReadBit@result& (0+255),w,b
  4644  0040C4  0B01               	andlw	1
  4645  0040C6  D000               	goto	l522
  4646  0040C8                     l522:
  4647                           
  4648                           ; BSR set to: 0
  4649  0040C8  0012               	return		;funcret
  4650  0040CA                     __end_of_OWReadBit:
  4651                           	opt stack 0
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           indf2	equ	0xFDF
  4655                           postinc2	equ	0xFDE
  4656                           postdec2	equ	0xFDD
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function _ReadMillis1 *****************
  4662 ;; Defined at:
  4663 ;;		line 13 in file "MillisecondTimer.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  2   16[BANK0 ] unsigned int 
  4670 ;; Registers used:
  4671 ;;		None
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:        2 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    7
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text25
  4692  0045AE                     __ptext25:
  4693                           	opt stack 0
  4694  0045AE                     _ReadMillis1:
  4695                           	opt stack 23
  4696                           
  4697                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;incstack = 0
  4701  0045AE  C00F  F070         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  4702  0045B2  C010  F071         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  4703  0045B6  0012               	return		;funcret
  4704  0045B8                     __end_of_ReadMillis1:
  4705                           	opt stack 0
  4706                           postinc0	equ	0xFEE
  4707                           wreg	equ	0xFE8
  4708                           indf2	equ	0xFDF
  4709                           postinc2	equ	0xFDE
  4710                           postdec2	equ	0xFDD
  4711                           fsr2h	equ	0xFDA
  4712                           fsr2l	equ	0xFD9
  4713                           status	equ	0xFD8
  4714                           
  4715 ;; *************** function _ReadMillis0 *****************
  4716 ;; Defined at:
  4717 ;;		line 7 in file "MillisecondTimer.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;		None
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  2   16[BANK0 ] unsigned int 
  4724 ;; Registers used:
  4725 ;;		None
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;Total ram usage:        2 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    7
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text26
  4746  0045B8                     __ptext26:
  4747                           	opt stack 0
  4748  0045B8                     _ReadMillis0:
  4749                           	opt stack 23
  4750                           
  4751                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  4752                           
  4753                           ;incstack = 0
  4754  0045B8  C00D  F070         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  4755  0045BC  C00E  F071         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  4756  0045C0  0012               	return		;funcret
  4757  0045C2                     __end_of_ReadMillis0:
  4758                           	opt stack 0
  4759                           postinc0	equ	0xFEE
  4760                           wreg	equ	0xFE8
  4761                           indf2	equ	0xFDF
  4762                           postinc2	equ	0xFDE
  4763                           postdec2	equ	0xFDD
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function _ReadEchoLength *****************
  4769 ;; Defined at:
  4770 ;;		line 68 in file "Ultrasound.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  2   16[BANK0 ] unsigned int 
  4777 ;; Registers used:
  4778 ;;		None
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;Total ram usage:        2 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    7
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text27
  4799  0045C2                     __ptext27:
  4800                           	opt stack 0
  4801  0045C2                     _ReadEchoLength:
  4802                           	opt stack 23
  4803                           
  4804                           ;Ultrasound.c: 70: return (echo_time);
  4805                           
  4806                           ;incstack = 0
  4807  0045C2  C00B  F070         	movff	_echo_time,?_ReadEchoLength	;volatile
  4808  0045C6  C00C  F071         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  4809  0045CA  0012               	return		;funcret
  4810  0045CC                     __end_of_ReadEchoLength:
  4811                           	opt stack 0
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           indf2	equ	0xFDF
  4815                           postinc2	equ	0xFDE
  4816                           postdec2	equ	0xFDD
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _LoadPIDValues *****************
  4822 ;; Defined at:
  4823 ;;		line 695 in file "FastBuggy17_Main_Code_TUNING.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;		None               void
  4830 ;; Registers used:
  4831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   11
  4844 ;; This function calls:
  4845 ;;		_PB1pressed
  4846 ;;		_PB2pressed
  4847 ;;		_ReadCharEEPROM
  4848 ;;		_ReadIntEEPROM
  4849 ;;		_SendStatus
  4850 ;;		_SetPIDValues
  4851 ;;		_WriteCharEEPROM
  4852 ;;		_WriteIntEEPROM
  4853 ;; This function is called by:
  4854 ;;		_main
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text28
  4859  0029FC                     __ptext28:
  4860                           	opt stack 0
  4861  0029FC                     _LoadPIDValues:
  4862                           	opt stack 19
  4863                           
  4864                           ;FastBuggy17_Main_Code_TUNING.c: 696: SendStatus(0x06);
  4865                           
  4866                           ;incstack = 0
  4867  0029FC  0E06               	movlw	6
  4868  0029FE  EC3E  F01F         	call	_SendStatus
  4869  002A02  D000               	goto	l8025
  4870  002A04                     l8025:
  4871                           
  4872                           ;FastBuggy17_Main_Code_TUNING.c: 699: if(PB1pressed() == 1) {
  4873  002A04  EC6F  F01D         	call	_PB1pressed	;wreg free
  4874  002A08  06E8               	decf	wreg,f,c
  4875  002A0A  A4D8               	btfss	status,2,c
  4876  002A0C  D03C               	goto	l8039
  4877                           
  4878                           ;FastBuggy17_Main_Code_TUNING.c: 700: PID_Kp = 20;
  4879  002A0E  0E00               	movlw	0
  4880  002A10  0100               	movlb	0	; () banked
  4881  002A12  6FEA               	movwf	(_PID_Kp+1)& (0+255),b
  4882  002A14  0E14               	movlw	20
  4883  002A16  6FE9               	movwf	_PID_Kp& (0+255),b
  4884                           
  4885                           ;FastBuggy17_Main_Code_TUNING.c: 701: PID_Kd = 0;
  4886  002A18  0E00               	movlw	0
  4887  002A1A  0100               	movlb	0	; () banked
  4888  002A1C  6FD6               	movwf	(_PID_Kd+1)& (0+255),b
  4889  002A1E  0E00               	movlw	0
  4890  002A20  6FD5               	movwf	_PID_Kd& (0+255),b
  4891                           
  4892                           ;FastBuggy17_Main_Code_TUNING.c: 702: PID_Ki = 0;
  4893  002A22  0E00               	movlw	0
  4894  002A24  0100               	movlb	0	; () banked
  4895  002A26  6FD8               	movwf	(_PID_Ki+1)& (0+255),b
  4896  002A28  0E00               	movlw	0
  4897  002A2A  6FD7               	movwf	_PID_Ki& (0+255),b
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;FastBuggy17_Main_Code_TUNING.c: 703: WriteIntEEPROM(0x0011, PID_Kp);
  4901  002A2C  0E00               	movlw	0
  4902  002A2E  0100               	movlb	0	; () banked
  4903  002A30  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  4904  002A32  0E11               	movlw	17
  4905  002A34  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  4906  002A36  C0E9  F075         	movff	_PID_Kp,WriteIntEEPROM@data
  4907  002A3A  C0EA  F076         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  4908  002A3E  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  4909                           
  4910                           ;FastBuggy17_Main_Code_TUNING.c: 704: WriteIntEEPROM(0x0013, PID_Kd);
  4911  002A42  0E00               	movlw	0
  4912  002A44  0100               	movlb	0	; () banked
  4913  002A46  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  4914  002A48  0E13               	movlw	19
  4915  002A4A  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  4916  002A4C  C0D5  F075         	movff	_PID_Kd,WriteIntEEPROM@data
  4917  002A50  C0D6  F076         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  4918  002A54  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  4919                           
  4920                           ;FastBuggy17_Main_Code_TUNING.c: 705: WriteIntEEPROM(0x0015, PID_Ki);
  4921  002A58  0E00               	movlw	0
  4922  002A5A  0100               	movlb	0	; () banked
  4923  002A5C  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  4924  002A5E  0E15               	movlw	21
  4925  002A60  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  4926  002A62  C0D7  F075         	movff	_PID_Ki,WriteIntEEPROM@data
  4927  002A66  C0D8  F076         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  4928  002A6A  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  4929                           
  4930                           ;FastBuggy17_Main_Code_TUNING.c: 707: WriteCharEEPROM(0x10, 1);
  4931  002A6E  0E00               	movlw	0
  4932  002A70  0100               	movlb	0	; () banked
  4933  002A72  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  4934  002A74  0E10               	movlw	16
  4935  002A76  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  4936  002A78  0E01               	movlw	1
  4937  002A7A  0100               	movlb	0	; () banked
  4938  002A7C  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  4939  002A7E  EC44  F022         	call	_WriteCharEEPROM	;wreg free
  4940                           
  4941                           ;FastBuggy17_Main_Code_TUNING.c: 708: break;
  4942  002A82  D036               	goto	l920
  4943                           
  4944                           ;FastBuggy17_Main_Code_TUNING.c: 709: }
  4945  002A84  D7BF               	goto	l8025
  4946  002A86                     l8039:
  4947                           
  4948                           ;FastBuggy17_Main_Code_TUNING.c: 710: else if(PB2pressed() == 1) {
  4949  002A86  EC11  F01D         	call	_PB2pressed	;wreg free
  4950  002A8A  06E8               	decf	wreg,f,c
  4951  002A8C  A4D8               	btfss	status,2,c
  4952  002A8E  D7BA               	goto	l8025
  4953                           
  4954                           ;FastBuggy17_Main_Code_TUNING.c: 711: if(ReadCharEEPROM(0x10) == 0xFF) {
  4955  002A90  0E00               	movlw	0
  4956  002A92  0100               	movlb	0	; () banked
  4957  002A94  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  4958  002A96  0E10               	movlw	16
  4959  002A98  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  4960  002A9A  EC7A  F022         	call	_ReadCharEEPROM	;wreg free
  4961  002A9E  0AFF               	xorlw	255
  4962  002AA0  A4D8               	btfss	status,2,c
  4963  002AA2  D003               	goto	l8045
  4964                           
  4965                           ;FastBuggy17_Main_Code_TUNING.c: 712: SetPIDValues();
  4966  002AA4  EC5A  F010         	call	_SetPIDValues	;wreg free
  4967                           
  4968                           ;FastBuggy17_Main_Code_TUNING.c: 713: }
  4969  002AA8  D023               	goto	l920
  4970  002AAA                     l8045:
  4971                           
  4972                           ;FastBuggy17_Main_Code_TUNING.c: 714: else {
  4973                           ;FastBuggy17_Main_Code_TUNING.c: 715: PID_Kp = ReadIntEEPROM(0x0011);
  4974  002AAA  0E00               	movlw	0
  4975  002AAC  0100               	movlb	0	; () banked
  4976  002AAE  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  4977  002AB0  0E11               	movlw	17
  4978  002AB2  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  4979  002AB4  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  4980  002AB8  C072  F0E9         	movff	?_ReadIntEEPROM,_PID_Kp
  4981  002ABC  C073  F0EA         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  4982                           
  4983                           ;FastBuggy17_Main_Code_TUNING.c: 716: PID_Kd = ReadIntEEPROM(0x0013);
  4984  002AC0  0E00               	movlw	0
  4985  002AC2  0100               	movlb	0	; () banked
  4986  002AC4  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  4987  002AC6  0E13               	movlw	19
  4988  002AC8  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  4989  002ACA  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  4990  002ACE  C072  F0D5         	movff	?_ReadIntEEPROM,_PID_Kd
  4991  002AD2  C073  F0D6         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  4992                           
  4993                           ;FastBuggy17_Main_Code_TUNING.c: 717: PID_Ki = ReadIntEEPROM(0x0015);
  4994  002AD6  0E00               	movlw	0
  4995  002AD8  0100               	movlb	0	; () banked
  4996  002ADA  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  4997  002ADC  0E15               	movlw	21
  4998  002ADE  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  4999  002AE0  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  5000  002AE4  C072  F0D7         	movff	?_ReadIntEEPROM,_PID_Ki
  5001  002AE8  C073  F0D8         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5002                           
  5003                           ;FastBuggy17_Main_Code_TUNING.c: 718: }
  5004                           ;FastBuggy17_Main_Code_TUNING.c: 719: break;
  5005  002AEC  D001               	goto	l920
  5006  002AEE  D78A               	goto	l8025
  5007  002AF0                     l920:
  5008  002AF0  0012               	return		;funcret
  5009  002AF2                     __end_of_LoadPIDValues:
  5010                           	opt stack 0
  5011                           postinc0	equ	0xFEE
  5012                           wreg	equ	0xFE8
  5013                           indf2	equ	0xFDF
  5014                           postinc2	equ	0xFDE
  5015                           postdec2	equ	0xFDD
  5016                           fsr2h	equ	0xFDA
  5017                           fsr2l	equ	0xFD9
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _SetPIDValues *****************
  5021 ;; Defined at:
  5022 ;;		line 663 in file "FastBuggy17_Main_Code_TUNING.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  char_index      1   28[BANK0 ] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;		None               void
  5029 ;; Registers used:
  5030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;Total ram usage:        4 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:   10
  5043 ;; This function calls:
  5044 ;;		_FlushRxBuf
  5045 ;;		_GetCharRxBuf
  5046 ;;		_PutCharRxBuf
  5047 ;;		_Read1USART
  5048 ;;		_SendStatus
  5049 ;;		_WriteCharEEPROM
  5050 ;;		_WriteIntEEPROM
  5051 ;; This function is called by:
  5052 ;;		_LoadPIDValues
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text29
  5058  0020B4                     __ptext29:
  5059                           	opt stack 0
  5060  0020B4                     _SetPIDValues:
  5061                           	opt stack 20
  5062                           
  5063                           ;FastBuggy17_Main_Code_TUNING.c: 664: SendStatus(0x07);
  5064                           
  5065                           ;incstack = 0
  5066  0020B4  0E07               	movlw	7
  5067  0020B6  EC3E  F01F         	call	_SendStatus
  5068                           
  5069                           ;FastBuggy17_Main_Code_TUNING.c: 666: unsigned char char_index;
  5070                           ;FastBuggy17_Main_Code_TUNING.c: 668: FlushRxBuf();
  5071  0020BA  ECE6  F01F         	call	_FlushRxBuf	;wreg free
  5072                           
  5073                           ;FastBuggy17_Main_Code_TUNING.c: 670: for(char_index = 0; char_index <= 8; char_index++)
      +                           {
  5074  0020BE  0E00               	movlw	0
  5075  0020C0  0100               	movlb	0	; () banked
  5076  0020C2  6F7C               	movwf	SetPIDValues@char_index& (0+255),b
  5077  0020C4                     l7695:
  5078                           
  5079                           ; BSR set to: 0
  5080  0020C4  0E08               	movlw	8
  5081  0020C6  0100               	movlb	0	; () banked
  5082  0020C8  657C               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5083  0020CA  D002               	goto	l900
  5084                           
  5085                           ; BSR set to: 0
  5086  0020CC  D00B               	goto	l7705
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;FastBuggy17_Main_Code_TUNING.c: 671: while(!(PIR1bits.RCIF));
  5090  0020CE  D000               	goto	l900
  5091  0020D0                     l900:
  5092  0020D0  AA9E               	btfss	3998,5,c	;volatile
  5093  0020D2  D7FE               	goto	l900
  5094                           
  5095                           ;FastBuggy17_Main_Code_TUNING.c: 673: PutCharRxBuf(Read1USART());
  5096  0020D4  EC28  F021         	call	_Read1USART	;wreg free
  5097  0020D8  ECA1  F01E         	call	_PutCharRxBuf
  5098  0020DC  0100               	movlb	0	; () banked
  5099  0020DE  2B7C               	incf	SetPIDValues@char_index& (0+255),f,b
  5100  0020E0  D7F1               	goto	l7695
  5101                           
  5102                           ; BSR set to: 0
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;FastBuggy17_Main_Code_TUNING.c: 674: }
  5106                           ;FastBuggy17_Main_Code_TUNING.c: 676: while(GetCharRxBuf() != 0xAA);
  5107                           
  5108                           ; BSR set to: 0
  5109  0020E2  D000               	goto	l7705
  5110  0020E4                     l7705:
  5111  0020E4  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5112  0020E8  0AAA               	xorlw	170
  5113  0020EA  B4D8               	btfsc	status,2,c
  5114  0020EC  D002               	goto	l7707
  5115  0020EE  D7FA               	goto	l7705
  5116                           
  5117                           ;FastBuggy17_Main_Code_TUNING.c: 677: while(GetCharRxBuf() != 0x01);
  5118  0020F0  D000               	goto	l7707
  5119  0020F2                     l7707:
  5120  0020F2  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5121  0020F6  06E8               	decf	wreg,f,c
  5122  0020F8  A4D8               	btfss	status,2,c
  5123  0020FA  D7FB               	goto	l7707
  5124                           
  5125                           ;FastBuggy17_Main_Code_TUNING.c: 679: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5126  0020FC  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5127  002100  0100               	movlb	0	; () banked
  5128  002102  6F79               	movwf	??_SetPIDValues& (0+255),b
  5129  002104  0100               	movlb	0	; () banked
  5130  002106  5179               	movf	??_SetPIDValues& (0+255),w,b
  5131  002108  0100               	movlb	0	; () banked
  5132  00210A  6F7B               	movwf	(??_SetPIDValues+2)& (0+255),b
  5133  00210C  6B7A               	clrf	(??_SetPIDValues+1)& (0+255),b
  5134  00210E  0E00               	movlw	0
  5135  002110  0100               	movlb	0	; () banked
  5136  002112  157A               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5137  002114  0100               	movlb	0	; () banked
  5138  002116  6FE9               	movwf	_PID_Kp& (0+255),b
  5139  002118  0EFF               	movlw	255
  5140  00211A  0100               	movlb	0	; () banked
  5141  00211C  157B               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5142  00211E  0100               	movlb	0	; () banked
  5143  002120  6FEA               	movwf	(_PID_Kp+1)& (0+255),b
  5144                           
  5145                           ;FastBuggy17_Main_Code_TUNING.c: 680: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5146  002122  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5147  002126  0100               	movlb	0	; () banked
  5148  002128  6F79               	movwf	??_SetPIDValues& (0+255),b
  5149  00212A  0100               	movlb	0	; () banked
  5150  00212C  5179               	movf	??_SetPIDValues& (0+255),w,b
  5151  00212E  0100               	movlb	0	; () banked
  5152  002130  13E9               	iorwf	_PID_Kp& (0+255),f,b
  5153                           
  5154                           ;FastBuggy17_Main_Code_TUNING.c: 682: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5155  002132  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5156  002136  0100               	movlb	0	; () banked
  5157  002138  6F79               	movwf	??_SetPIDValues& (0+255),b
  5158  00213A  0100               	movlb	0	; () banked
  5159  00213C  5179               	movf	??_SetPIDValues& (0+255),w,b
  5160  00213E  0100               	movlb	0	; () banked
  5161  002140  6F7B               	movwf	(??_SetPIDValues+2)& (0+255),b
  5162  002142  6B7A               	clrf	(??_SetPIDValues+1)& (0+255),b
  5163  002144  0E00               	movlw	0
  5164  002146  0100               	movlb	0	; () banked
  5165  002148  157A               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5166  00214A  0100               	movlb	0	; () banked
  5167  00214C  6FD5               	movwf	_PID_Kd& (0+255),b
  5168  00214E  0EFF               	movlw	255
  5169  002150  0100               	movlb	0	; () banked
  5170  002152  157B               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5171  002154  0100               	movlb	0	; () banked
  5172  002156  6FD6               	movwf	(_PID_Kd+1)& (0+255),b
  5173                           
  5174                           ;FastBuggy17_Main_Code_TUNING.c: 683: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5175  002158  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5176  00215C  0100               	movlb	0	; () banked
  5177  00215E  6F79               	movwf	??_SetPIDValues& (0+255),b
  5178  002160  0100               	movlb	0	; () banked
  5179  002162  5179               	movf	??_SetPIDValues& (0+255),w,b
  5180  002164  0100               	movlb	0	; () banked
  5181  002166  13D5               	iorwf	_PID_Kd& (0+255),f,b
  5182                           
  5183                           ;FastBuggy17_Main_Code_TUNING.c: 685: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5184  002168  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5185  00216C  0100               	movlb	0	; () banked
  5186  00216E  6F79               	movwf	??_SetPIDValues& (0+255),b
  5187  002170  0100               	movlb	0	; () banked
  5188  002172  5179               	movf	??_SetPIDValues& (0+255),w,b
  5189  002174  0100               	movlb	0	; () banked
  5190  002176  6F7B               	movwf	(??_SetPIDValues+2)& (0+255),b
  5191  002178  6B7A               	clrf	(??_SetPIDValues+1)& (0+255),b
  5192  00217A  0E00               	movlw	0
  5193  00217C  0100               	movlb	0	; () banked
  5194  00217E  157A               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5195  002180  0100               	movlb	0	; () banked
  5196  002182  6FD7               	movwf	_PID_Ki& (0+255),b
  5197  002184  0EFF               	movlw	255
  5198  002186  0100               	movlb	0	; () banked
  5199  002188  157B               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5200  00218A  0100               	movlb	0	; () banked
  5201  00218C  6FD8               	movwf	(_PID_Ki+1)& (0+255),b
  5202                           
  5203                           ;FastBuggy17_Main_Code_TUNING.c: 686: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5204  00218E  EC3A  F01E         	call	_GetCharRxBuf	;wreg free
  5205  002192  0100               	movlb	0	; () banked
  5206  002194  6F79               	movwf	??_SetPIDValues& (0+255),b
  5207  002196  0100               	movlb	0	; () banked
  5208  002198  5179               	movf	??_SetPIDValues& (0+255),w,b
  5209  00219A  0100               	movlb	0	; () banked
  5210  00219C  13D7               	iorwf	_PID_Ki& (0+255),f,b
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;FastBuggy17_Main_Code_TUNING.c: 688: WriteIntEEPROM(0x0011, PID_Kp);
  5214  00219E  0E00               	movlw	0
  5215  0021A0  0100               	movlb	0	; () banked
  5216  0021A2  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5217  0021A4  0E11               	movlw	17
  5218  0021A6  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5219  0021A8  C0E9  F075         	movff	_PID_Kp,WriteIntEEPROM@data
  5220  0021AC  C0EA  F076         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5221  0021B0  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  5222                           
  5223                           ;FastBuggy17_Main_Code_TUNING.c: 689: WriteIntEEPROM(0x0013, PID_Kd);
  5224  0021B4  0E00               	movlw	0
  5225  0021B6  0100               	movlb	0	; () banked
  5226  0021B8  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5227  0021BA  0E13               	movlw	19
  5228  0021BC  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5229  0021BE  C0D5  F075         	movff	_PID_Kd,WriteIntEEPROM@data
  5230  0021C2  C0D6  F076         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5231  0021C6  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  5232                           
  5233                           ;FastBuggy17_Main_Code_TUNING.c: 690: WriteIntEEPROM(0x0015, PID_Ki);
  5234  0021CA  0E00               	movlw	0
  5235  0021CC  0100               	movlb	0	; () banked
  5236  0021CE  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5237  0021D0  0E15               	movlw	21
  5238  0021D2  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  5239  0021D4  C0D7  F075         	movff	_PID_Ki,WriteIntEEPROM@data
  5240  0021D8  C0D8  F076         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5241  0021DC  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  5242                           
  5243                           ;FastBuggy17_Main_Code_TUNING.c: 692: WriteCharEEPROM(0x0010, 1);
  5244  0021E0  0E00               	movlw	0
  5245  0021E2  0100               	movlb	0	; () banked
  5246  0021E4  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5247  0021E6  0E10               	movlw	16
  5248  0021E8  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  5249  0021EA  0E01               	movlw	1
  5250  0021EC  0100               	movlb	0	; () banked
  5251  0021EE  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  5252  0021F0  EC44  F022         	call	_WriteCharEEPROM	;wreg free
  5253  0021F4  0012               	return		;funcret
  5254  0021F6                     __end_of_SetPIDValues:
  5255                           	opt stack 0
  5256                           postinc0	equ	0xFEE
  5257                           wreg	equ	0xFE8
  5258                           indf2	equ	0xFDF
  5259                           postinc2	equ	0xFDE
  5260                           postdec2	equ	0xFDD
  5261                           fsr2h	equ	0xFDA
  5262                           fsr2l	equ	0xFD9
  5263                           status	equ	0xFD8
  5264                           
  5265 ;; *************** function _PutCharRxBuf *****************
  5266 ;; Defined at:
  5267 ;;		line 25 in file "Wireless.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  ch              1    wreg     unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  ch              1   23[BANK0 ] unsigned char 
  5272 ;; Return value:  Size  Location     Type
  5273 ;;		None               void
  5274 ;; Registers used:
  5275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;Total ram usage:        2 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    8
  5288 ;; This function calls:
  5289 ;;		___awmod
  5290 ;; This function is called by:
  5291 ;;		_SetPIDValues
  5292 ;;		_WirelessRx_ISR
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text30
  5297  003D42                     __ptext30:
  5298                           	opt stack 0
  5299  003D42                     _PutCharRxBuf:
  5300                           	opt stack 21
  5301                           
  5302                           ;incstack = 0
  5303                           ;PutCharRxBuf@ch stored from wreg
  5304  003D42  0100               	movlb	0	; () banked
  5305  003D44  6F77               	movwf	PutCharRxBuf@ch& (0+255),b
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5309  003D46  501D               	movf	_put_Rx_index,w,c
  5310  003D48  0D01               	mullw	1
  5311  003D4A  0E00               	movlw	low _Rx_buffer
  5312  003D4C  24F3               	addwf	prodl,w,c
  5313  003D4E  6ED9               	movwf	fsr2l,c
  5314  003D50  0E01               	movlw	high _Rx_buffer
  5315  003D52  20F4               	addwfc	prodh,w,c
  5316  003D54  6EDA               	movwf	fsr2h,c
  5317  003D56  C077  FFDF         	movff	PutCharRxBuf@ch,indf2
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5321  003D5A  C01D  F076         	movff	_put_Rx_index,??_PutCharRxBuf
  5322  003D5E  0E01               	movlw	1
  5323  003D60  0100               	movlb	0	; () banked
  5324  003D62  2776               	addwf	??_PutCharRxBuf& (0+255),f,b
  5325  003D64  0100               	movlb	0	; () banked
  5326  003D66  5176               	movf	??_PutCharRxBuf& (0+255),w,b
  5327  003D68  0100               	movlb	0	; () banked
  5328  003D6A  6F70               	movwf	___awmod@dividend& (0+255),b
  5329  003D6C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  5330  003D6E  0E00               	movlw	0
  5331  003D70  0100               	movlb	0	; () banked
  5332  003D72  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  5333  003D74  0E19               	movlw	25
  5334  003D76  6F72               	movwf	___awmod@divisor& (0+255),b
  5335  003D78  EC75  F018         	call	___awmod	;wreg free
  5336  003D7C  0100               	movlb	0	; () banked
  5337  003D7E  5170               	movf	?___awmod& (0+255),w,b
  5338  003D80  6E1D               	movwf	_put_Rx_index,c
  5339                           
  5340                           ; BSR set to: 0
  5341  003D82  0012               	return		;funcret
  5342  003D84                     __end_of_PutCharRxBuf:
  5343                           	opt stack 0
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           postinc0	equ	0xFEE
  5347                           wreg	equ	0xFE8
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _GetCharRxBuf *****************
  5356 ;; Defined at:
  5357 ;;		line 31 in file "Wireless.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  ch              1   23[BANK0 ] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;Total ram usage:        2 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    8
  5378 ;; This function calls:
  5379 ;;		___awmod
  5380 ;; This function is called by:
  5381 ;;		_SetPIDValues
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text31
  5386  003C74                     __ptext31:
  5387                           	opt stack 0
  5388  003C74                     _GetCharRxBuf:
  5389                           	opt stack 21
  5390                           
  5391                           ;Wireless.c: 32: unsigned char ch;
  5392                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;incstack = 0
  5396  003C74  501B               	movf	_get_Rx_index,w,c
  5397  003C76  0D01               	mullw	1
  5398  003C78  0E00               	movlw	low _Rx_buffer
  5399  003C7A  24F3               	addwf	prodl,w,c
  5400  003C7C  6ED9               	movwf	fsr2l,c
  5401  003C7E  0E01               	movlw	high _Rx_buffer
  5402  003C80  20F4               	addwfc	prodh,w,c
  5403  003C82  6EDA               	movwf	fsr2h,c
  5404  003C84  50DF               	movf	indf2,w,c
  5405  003C86  0100               	movlb	0	; () banked
  5406  003C88  6F77               	movwf	GetCharRxBuf@ch& (0+255),b
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5410  003C8A  C01B  F076         	movff	_get_Rx_index,??_GetCharRxBuf
  5411  003C8E  0E01               	movlw	1
  5412  003C90  0100               	movlb	0	; () banked
  5413  003C92  2776               	addwf	??_GetCharRxBuf& (0+255),f,b
  5414  003C94  0100               	movlb	0	; () banked
  5415  003C96  5176               	movf	??_GetCharRxBuf& (0+255),w,b
  5416  003C98  0100               	movlb	0	; () banked
  5417  003C9A  6F70               	movwf	___awmod@dividend& (0+255),b
  5418  003C9C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  5419  003C9E  0E00               	movlw	0
  5420  003CA0  0100               	movlb	0	; () banked
  5421  003CA2  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  5422  003CA4  0E19               	movlw	25
  5423  003CA6  6F72               	movwf	___awmod@divisor& (0+255),b
  5424  003CA8  EC75  F018         	call	___awmod	;wreg free
  5425  003CAC  0100               	movlb	0	; () banked
  5426  003CAE  5170               	movf	?___awmod& (0+255),w,b
  5427  003CB0  6E1B               	movwf	_get_Rx_index,c
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;Wireless.c: 37: return(ch);
  5431  003CB2  0100               	movlb	0	; () banked
  5432  003CB4  5177               	movf	GetCharRxBuf@ch& (0+255),w,b
  5433  003CB6  D000               	goto	l278
  5434  003CB8                     l278:
  5435                           
  5436                           ; BSR set to: 0
  5437  003CB8  0012               	return		;funcret
  5438  003CBA                     __end_of_GetCharRxBuf:
  5439                           	opt stack 0
  5440                           prodh	equ	0xFF4
  5441                           prodl	equ	0xFF3
  5442                           postinc0	equ	0xFEE
  5443                           wreg	equ	0xFE8
  5444                           indf2	equ	0xFDF
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _PB2pressed *****************
  5452 ;; Defined at:
  5453 ;;		line 498 in file "FastBuggy17_Main_Code_TUNING.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      unsigned char 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    9
  5474 ;; This function calls:
  5475 ;;		_CommandAvailable
  5476 ;;		_GetCommand
  5477 ;;		_ReadMillis2
  5478 ;;		_ResetMillis2
  5479 ;; This function is called by:
  5480 ;;		_LoadPIDValues
  5481 ;;		_main
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text32
  5486  003A22                     __ptext32:
  5487                           	opt stack 0
  5488  003A22                     _PB2pressed:
  5489                           	opt stack 21
  5490                           
  5491                           ;FastBuggy17_Main_Code_TUNING.c: 499: if(CommandAvailable() == 1) {
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;incstack = 0
  5495  003A22  ECB8  F022         	call	_CommandAvailable	;wreg free
  5496  003A26  06E8               	decf	wreg,f,c
  5497  003A28  A4D8               	btfss	status,2,c
  5498  003A2A  D00B               	goto	l838
  5499                           
  5500                           ;FastBuggy17_Main_Code_TUNING.c: 500: if(GetCommand() == 0x06) {
  5501  003A2C  ECF4  F022         	call	_GetCommand	;wreg free
  5502  003A30  0A06               	xorlw	6
  5503  003A32  A4D8               	btfss	status,2,c
  5504  003A34  D01F               	goto	l7639
  5505  003A36  D01B               	goto	l7633
  5506                           
  5507                           ;FastBuggy17_Main_Code_TUNING.c: 501: return(1);
  5508  003A38  D022               	goto	l840
  5509                           
  5510                           ;FastBuggy17_Main_Code_TUNING.c: 502: }
  5511  003A3A  D01F               	goto	l7643
  5512  003A3C  D01B               	goto	l7639
  5513                           
  5514                           ;FastBuggy17_Main_Code_TUNING.c: 503: else {
  5515                           ;FastBuggy17_Main_Code_TUNING.c: 504: return(0);
  5516  003A3E  D01F               	goto	l840
  5517                           
  5518                           ;FastBuggy17_Main_Code_TUNING.c: 505: }
  5519                           ;FastBuggy17_Main_Code_TUNING.c: 506: }
  5520  003A40  D01C               	goto	l7643
  5521  003A42                     l838:
  5522                           
  5523                           ;FastBuggy17_Main_Code_TUNING.c: 507: else if(PORTBbits.RB2 == 0) {
  5524  003A42  B481               	btfsc	3969,2,c	;volatile
  5525  003A44  D003               	goto	l843
  5526  003A46  D016               	goto	l7639
  5527                           
  5528                           ;FastBuggy17_Main_Code_TUNING.c: 508: return(0);
  5529  003A48  D01A               	goto	l840
  5530                           
  5531                           ;FastBuggy17_Main_Code_TUNING.c: 509: }
  5532  003A4A  D017               	goto	l7643
  5533  003A4C                     l843:
  5534                           
  5535                           ;FastBuggy17_Main_Code_TUNING.c: 510: else if(PORTBbits.RB2 == 1) {
  5536  003A4C  A481               	btfss	3969,2,c	;volatile
  5537  003A4E  D015               	goto	l7643
  5538                           
  5539                           ;FastBuggy17_Main_Code_TUNING.c: 511: ResetMillis2();
  5540  003A50  ECE6  F022         	call	_ResetMillis2	;wreg free
  5541                           
  5542                           ;FastBuggy17_Main_Code_TUNING.c: 512: while(ReadMillis2() < 10);
  5543  003A54  D000               	goto	l7631
  5544  003A56                     l7631:
  5545  003A56  ECEB  F022         	call	_ReadMillis2	;wreg free
  5546  003A5A  0100               	movlb	0	; () banked
  5547  003A5C  5171               	movf	(?_ReadMillis2+1)& (0+255),w,b
  5548  003A5E  E105               	bnz	u7620
  5549  003A60  0E0A               	movlw	10
  5550  003A62  0100               	movlb	0	; () banked
  5551  003A64  5D70               	subwf	?_ReadMillis2& (0+255),w,b
  5552  003A66  A0D8               	btfss	status,0,c
  5553  003A68  D7F6               	goto	l7631
  5554  003A6A                     u7620:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;FastBuggy17_Main_Code_TUNING.c: 513: if(PORTBbits.RB2 == 1) {
  5558  003A6A  A481               	btfss	3969,2,c	;volatile
  5559  003A6C  D003               	goto	l7639
  5560  003A6E                     l7633:
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;FastBuggy17_Main_Code_TUNING.c: 514: return(1);
  5564  003A6E  0E01               	movlw	1
  5565                           
  5566                           ; BSR set to: 0
  5567  003A70  D006               	goto	l840
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;FastBuggy17_Main_Code_TUNING.c: 515: }
  5571  003A72  D003               	goto	l7643
  5572  003A74                     l7639:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;FastBuggy17_Main_Code_TUNING.c: 516: else {
  5576                           ;FastBuggy17_Main_Code_TUNING.c: 517: return(0);
  5577  003A74  0E00               	movlw	0
  5578                           
  5579                           ; BSR set to: 0
  5580  003A76  D003               	goto	l840
  5581                           
  5582                           ; BSR set to: 0
  5583                           
  5584                           ; BSR set to: 0
  5585                           
  5586                           ; BSR set to: 0
  5587  003A78  D000               	goto	l7643
  5588  003A7A                     l7643:
  5589                           
  5590                           ;FastBuggy17_Main_Code_TUNING.c: 518: }
  5591                           ;FastBuggy17_Main_Code_TUNING.c: 519: }
  5592                           ;FastBuggy17_Main_Code_TUNING.c: 521: return(0);
  5593  003A7A  0E00               	movlw	0
  5594  003A7C  D000               	goto	l840
  5595  003A7E                     l840:
  5596  003A7E  0012               	return		;funcret
  5597  003A80                     __end_of_PB2pressed:
  5598                           	opt stack 0
  5599                           prodh	equ	0xFF4
  5600                           prodl	equ	0xFF3
  5601                           postinc0	equ	0xFEE
  5602                           wreg	equ	0xFE8
  5603                           indf2	equ	0xFDF
  5604                           postinc2	equ	0xFDE
  5605                           postdec2	equ	0xFDD
  5606                           fsr2h	equ	0xFDA
  5607                           fsr2l	equ	0xFD9
  5608                           status	equ	0xFD8
  5609                           
  5610 ;; *************** function _LoadCalibration *****************
  5611 ;; Defined at:
  5612 ;;		line 633 in file "FastBuggy17_Main_Code_TUNING.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  index           1   34[BANK0 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;		None               void
  5619 ;; Registers used:
  5620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;Total ram usage:        3 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:   12
  5633 ;; This function calls:
  5634 ;;		_FlashLEDS
  5635 ;;		_GenerateCalibration
  5636 ;;		_ReadCharEEPROM
  5637 ;;		_ReadIntEEPROM
  5638 ;;		_SendOffsets
  5639 ;;		_SendThreshold
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text33
  5646  001DD2                     __ptext33:
  5647                           	opt stack 0
  5648  001DD2                     _LoadCalibration:
  5649                           	opt stack 18
  5650                           
  5651                           ;FastBuggy17_Main_Code_TUNING.c: 634: unsigned char index;
  5652                           ;FastBuggy17_Main_Code_TUNING.c: 636: if(line_mode == 0 && ReadCharEEPROM(0x0000) == 0xF
      +                          F) {
  5653                           
  5654                           ;incstack = 0
  5655  001DD2  502A               	movf	_line_mode,w,c
  5656  001DD4  A4D8               	btfss	status,2,c
  5657  001DD6  D00F               	goto	l7977
  5658  001DD8  0E00               	movlw	0
  5659  001DDA  0100               	movlb	0	; () banked
  5660  001DDC  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5661  001DDE  0E00               	movlw	0
  5662  001DE0  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  5663  001DE2  EC7A  F022         	call	_ReadCharEEPROM	;wreg free
  5664  001DE6  0AFF               	xorlw	255
  5665  001DE8  A4D8               	btfss	status,2,c
  5666  001DEA  D005               	goto	l7977
  5667                           
  5668                           ;FastBuggy17_Main_Code_TUNING.c: 637: FlashLEDS();
  5669  001DEC  ECEC  F020         	call	_FlashLEDS	;wreg free
  5670                           
  5671                           ;FastBuggy17_Main_Code_TUNING.c: 638: GenerateCalibration();
  5672  001DF0  ECD5  F012         	call	_GenerateCalibration	;wreg free
  5673                           
  5674                           ;FastBuggy17_Main_Code_TUNING.c: 639: }
  5675  001DF4  D0A2               	goto	l8021
  5676  001DF6                     l7977:
  5677                           
  5678                           ;FastBuggy17_Main_Code_TUNING.c: 640: else if(line_mode == 0 && ReadCharEEPROM(0x0000) =
      +                          = 0x01) {
  5679  001DF6  502A               	movf	_line_mode,w,c
  5680  001DF8  A4D8               	btfss	status,2,c
  5681  001DFA  D045               	goto	l7995
  5682  001DFC  0E00               	movlw	0
  5683  001DFE  0100               	movlb	0	; () banked
  5684  001E00  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5685  001E02  0E00               	movlw	0
  5686  001E04  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  5687  001E06  EC7A  F022         	call	_ReadCharEEPROM	;wreg free
  5688  001E0A  06E8               	decf	wreg,f,c
  5689  001E0C  A4D8               	btfss	status,2,c
  5690  001E0E  D03B               	goto	l7995
  5691                           
  5692                           ;FastBuggy17_Main_Code_TUNING.c: 641: sensor_threshold = ReadIntEEPROM(0x0002);
  5693  001E10  0E00               	movlw	0
  5694  001E12  0100               	movlb	0	; () banked
  5695  001E14  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5696  001E16  0E02               	movlw	2
  5697  001E18  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5698  001E1A  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  5699  001E1E  C072  F028         	movff	?_ReadIntEEPROM,_sensor_threshold
  5700  001E22  C073  F029         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  5701                           
  5702                           ;FastBuggy17_Main_Code_TUNING.c: 642: for(index = 0; index < 5; index++) {
  5703  001E26  0E00               	movlw	0
  5704  001E28  0100               	movlb	0	; () banked
  5705  001E2A  6F82               	movwf	LoadCalibration@index& (0+255),b
  5706  001E2C                     l7985:
  5707                           
  5708                           ; BSR set to: 0
  5709  001E2C  0E04               	movlw	4
  5710  001E2E  0100               	movlb	0	; () banked
  5711  001E30  6582               	cpfsgt	LoadCalibration@index& (0+255),b
  5712  001E32  D001               	goto	l7989
  5713                           
  5714                           ; BSR set to: 0
  5715  001E34  D082               	goto	l8021
  5716  001E36                     l7989:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;FastBuggy17_Main_Code_TUNING.c: 643: sensor_offsets[index] = ReadIntEEPROM(0x0006 + (2 
      +                          * index));
  5720  001E36  0100               	movlb	0	; () banked
  5721  001E38  5182               	movf	LoadCalibration@index& (0+255),w,b
  5722  001E3A  0100               	movlb	0	; () banked
  5723  001E3C  6F80               	movwf	??_LoadCalibration& (0+255),b
  5724  001E3E  6B81               	clrf	(??_LoadCalibration+1)& (0+255),b
  5725  001E40  90D8               	bcf	status,0,c
  5726  001E42  0100               	movlb	0	; () banked
  5727  001E44  3780               	rlcf	??_LoadCalibration& (0+255),f,b
  5728  001E46  3781               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  5729  001E48  0E06               	movlw	6
  5730  001E4A  0100               	movlb	0	; () banked
  5731  001E4C  2580               	addwf	??_LoadCalibration& (0+255),w,b
  5732  001E4E  0100               	movlb	0	; () banked
  5733  001E50  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5734  001E52  0E00               	movlw	0
  5735  001E54  0100               	movlb	0	; () banked
  5736  001E56  2181               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  5737  001E58  0100               	movlb	0	; () banked
  5738  001E5A  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5739  001E5C  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  5740  001E60  0100               	movlb	0	; () banked
  5741  001E62  5182               	movf	LoadCalibration@index& (0+255),w,b
  5742  001E64  0D02               	mullw	2
  5743  001E66  0EDF               	movlw	low _sensor_offsets
  5744  001E68  24F3               	addwf	prodl,w,c
  5745  001E6A  6ED9               	movwf	fsr2l,c
  5746  001E6C  0E00               	movlw	high _sensor_offsets
  5747  001E6E  20F4               	addwfc	prodh,w,c
  5748  001E70  6EDA               	movwf	fsr2h,c
  5749  001E72  0100               	movlb	0	; () banked
  5750  001E74  C072  FFDE         	movff	?_ReadIntEEPROM,postinc2
  5751  001E78  0100               	movlb	0	; () banked
  5752  001E7A  C073  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  5753                           
  5754                           ; BSR set to: 0
  5755  001E7E  0100               	movlb	0	; () banked
  5756  001E80  2B82               	incf	LoadCalibration@index& (0+255),f,b
  5757  001E82  D7D4               	goto	l7985
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;FastBuggy17_Main_Code_TUNING.c: 644: }
  5761                           ;FastBuggy17_Main_Code_TUNING.c: 645: }
  5762                           
  5763                           ; BSR set to: 0
  5764  001E84  D05A               	goto	l8021
  5765  001E86                     l7995:
  5766                           
  5767                           ;FastBuggy17_Main_Code_TUNING.c: 647: else if(line_mode == 1 && ReadCharEEPROM(0x0001) =
      +                          = 0xFF) {
  5768  001E86  042A               	decf	_line_mode,w,c
  5769  001E88  A4D8               	btfss	status,2,c
  5770  001E8A  D00F               	goto	l8003
  5771  001E8C  0E00               	movlw	0
  5772  001E8E  0100               	movlb	0	; () banked
  5773  001E90  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5774  001E92  0E01               	movlw	1
  5775  001E94  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  5776  001E96  EC7A  F022         	call	_ReadCharEEPROM	;wreg free
  5777  001E9A  0AFF               	xorlw	255
  5778  001E9C  A4D8               	btfss	status,2,c
  5779  001E9E  D005               	goto	l8003
  5780                           
  5781                           ;FastBuggy17_Main_Code_TUNING.c: 648: FlashLEDS();
  5782  001EA0  ECEC  F020         	call	_FlashLEDS	;wreg free
  5783                           
  5784                           ;FastBuggy17_Main_Code_TUNING.c: 649: GenerateCalibration();
  5785  001EA4  ECD5  F012         	call	_GenerateCalibration	;wreg free
  5786                           
  5787                           ;FastBuggy17_Main_Code_TUNING.c: 650: }
  5788  001EA8  D048               	goto	l8021
  5789  001EAA                     l8003:
  5790                           
  5791                           ;FastBuggy17_Main_Code_TUNING.c: 651: else if(line_mode == 1 && ReadCharEEPROM(0x0001) =
      +                          = 0x01) {
  5792  001EAA  042A               	decf	_line_mode,w,c
  5793  001EAC  A4D8               	btfss	status,2,c
  5794  001EAE  D045               	goto	l8021
  5795  001EB0  0E00               	movlw	0
  5796  001EB2  0100               	movlb	0	; () banked
  5797  001EB4  6F73               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5798  001EB6  0E01               	movlw	1
  5799  001EB8  6F72               	movwf	ReadCharEEPROM@address& (0+255),b
  5800  001EBA  EC7A  F022         	call	_ReadCharEEPROM	;wreg free
  5801  001EBE  06E8               	decf	wreg,f,c
  5802  001EC0  A4D8               	btfss	status,2,c
  5803  001EC2  D03B               	goto	l8021
  5804                           
  5805                           ;FastBuggy17_Main_Code_TUNING.c: 652: sensor_threshold = ReadIntEEPROM(0x0004);
  5806  001EC4  0E00               	movlw	0
  5807  001EC6  0100               	movlb	0	; () banked
  5808  001EC8  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5809  001ECA  0E04               	movlw	4
  5810  001ECC  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5811  001ECE  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  5812  001ED2  C072  F028         	movff	?_ReadIntEEPROM,_sensor_threshold
  5813  001ED6  C073  F029         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  5814                           
  5815                           ;FastBuggy17_Main_Code_TUNING.c: 653: for(index = 0; index < 5; index++) {
  5816  001EDA  0E00               	movlw	0
  5817  001EDC  0100               	movlb	0	; () banked
  5818  001EDE  6F82               	movwf	LoadCalibration@index& (0+255),b
  5819  001EE0                     l8011:
  5820                           
  5821                           ; BSR set to: 0
  5822  001EE0  0E04               	movlw	4
  5823  001EE2  0100               	movlb	0	; () banked
  5824  001EE4  6582               	cpfsgt	LoadCalibration@index& (0+255),b
  5825  001EE6  D001               	goto	l8015
  5826                           
  5827                           ; BSR set to: 0
  5828  001EE8  D028               	goto	l8021
  5829  001EEA                     l8015:
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;FastBuggy17_Main_Code_TUNING.c: 654: sensor_offsets[index] = ReadIntEEPROM(0x0006 + (2 
      +                          * index));
  5833  001EEA  0100               	movlb	0	; () banked
  5834  001EEC  5182               	movf	LoadCalibration@index& (0+255),w,b
  5835  001EEE  0100               	movlb	0	; () banked
  5836  001EF0  6F80               	movwf	??_LoadCalibration& (0+255),b
  5837  001EF2  6B81               	clrf	(??_LoadCalibration+1)& (0+255),b
  5838  001EF4  90D8               	bcf	status,0,c
  5839  001EF6  0100               	movlb	0	; () banked
  5840  001EF8  3780               	rlcf	??_LoadCalibration& (0+255),f,b
  5841  001EFA  3781               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  5842  001EFC  0E06               	movlw	6
  5843  001EFE  0100               	movlb	0	; () banked
  5844  001F00  2580               	addwf	??_LoadCalibration& (0+255),w,b
  5845  001F02  0100               	movlb	0	; () banked
  5846  001F04  6F72               	movwf	ReadIntEEPROM@address& (0+255),b
  5847  001F06  0E00               	movlw	0
  5848  001F08  0100               	movlb	0	; () banked
  5849  001F0A  2181               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  5850  001F0C  0100               	movlb	0	; () banked
  5851  001F0E  6F73               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5852  001F10  EC40  F01D         	call	_ReadIntEEPROM	;wreg free
  5853  001F14  0100               	movlb	0	; () banked
  5854  001F16  5182               	movf	LoadCalibration@index& (0+255),w,b
  5855  001F18  0D02               	mullw	2
  5856  001F1A  0EDF               	movlw	low _sensor_offsets
  5857  001F1C  24F3               	addwf	prodl,w,c
  5858  001F1E  6ED9               	movwf	fsr2l,c
  5859  001F20  0E00               	movlw	high _sensor_offsets
  5860  001F22  20F4               	addwfc	prodh,w,c
  5861  001F24  6EDA               	movwf	fsr2h,c
  5862  001F26  0100               	movlb	0	; () banked
  5863  001F28  C072  FFDE         	movff	?_ReadIntEEPROM,postinc2
  5864  001F2C  0100               	movlb	0	; () banked
  5865  001F2E  C073  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  5866                           
  5867                           ; BSR set to: 0
  5868  001F32  0100               	movlb	0	; () banked
  5869  001F34  2B82               	incf	LoadCalibration@index& (0+255),f,b
  5870  001F36  D7D4               	goto	l8011
  5871                           
  5872                           ; BSR set to: 0
  5873                           
  5874                           ; BSR set to: 0
  5875                           
  5876                           ; BSR set to: 0
  5877                           
  5878                           ; BSR set to: 0
  5879                           
  5880                           ; BSR set to: 0
  5881  001F38  D000               	goto	l8021
  5882  001F3A                     l8021:
  5883                           
  5884                           ;FastBuggy17_Main_Code_TUNING.c: 655: }
  5885                           ;FastBuggy17_Main_Code_TUNING.c: 656: }
  5886                           ;FastBuggy17_Main_Code_TUNING.c: 658: SendOffsets(sensor_offsets);
  5887  001F3A  0EDF               	movlw	low _sensor_offsets
  5888  001F3C  0100               	movlb	0	; () banked
  5889  001F3E  6F78               	movwf	SendOffsets@offsets_array& (0+255),b
  5890  001F40  0E00               	movlw	high _sensor_offsets
  5891  001F42  0100               	movlb	0	; () banked
  5892  001F44  6F79               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  5893  001F46  EC79  F019         	call	_SendOffsets	;wreg free
  5894                           
  5895                           ;FastBuggy17_Main_Code_TUNING.c: 659: SendThreshold(sensor_threshold_ptr);
  5896  001F4A  C0EB  F078         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  5897  001F4E  C0EC  F079         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  5898  001F52  ECD3  F01B         	call	_SendThreshold	;wreg free
  5899  001F56  0012               	return		;funcret
  5900  001F58                     __end_of_LoadCalibration:
  5901                           	opt stack 0
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           postinc0	equ	0xFEE
  5905                           wreg	equ	0xFE8
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function _ReadIntEEPROM *****************
  5914 ;; Defined at:
  5915 ;;		line 66 in file "eeprom.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  address         2   18[BANK0 ] unsigned int 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  data            2   23[BANK0 ] unsigned int 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  2   18[BANK0 ] unsigned int 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;Total ram usage:        7 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    8
  5936 ;; This function calls:
  5937 ;;		_ReadEEPROM
  5938 ;; This function is called by:
  5939 ;;		_LoadCalibration
  5940 ;;		_LoadPIDValues
  5941 ;;		_main
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text34
  5946  003A80                     __ptext34:
  5947                           	opt stack 0
  5948  003A80                     _ReadIntEEPROM:
  5949                           	opt stack 22
  5950                           
  5951                           ;eeprom.c: 67: unsigned int data;
  5952                           ;eeprom.c: 69: data = (ReadEEPROM(address) << 8) & 0xFF00;
  5953                           
  5954                           ;incstack = 0
  5955  003A80  C072  F070         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  5956  003A84  C073  F071         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  5957  003A88  ECC1  F020         	call	_ReadEEPROM	;wreg free
  5958  003A8C  0100               	movlb	0	; () banked
  5959  003A8E  6F74               	movwf	??_ReadIntEEPROM& (0+255),b
  5960  003A90  0100               	movlb	0	; () banked
  5961  003A92  5174               	movf	??_ReadIntEEPROM& (0+255),w,b
  5962  003A94  0100               	movlb	0	; () banked
  5963  003A96  6F76               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  5964  003A98  6B75               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  5965  003A9A  0E00               	movlw	0
  5966  003A9C  0100               	movlb	0	; () banked
  5967  003A9E  1575               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  5968  003AA0  0100               	movlb	0	; () banked
  5969  003AA2  6F77               	movwf	ReadIntEEPROM@data& (0+255),b
  5970  003AA4  0EFF               	movlw	255
  5971  003AA6  0100               	movlb	0	; () banked
  5972  003AA8  1576               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  5973  003AAA  0100               	movlb	0	; () banked
  5974  003AAC  6F78               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  5975                           
  5976                           ;eeprom.c: 70: data |= ReadEEPROM(address + 1) & 0x00FF;
  5977  003AAE  0E01               	movlw	1
  5978  003AB0  0100               	movlb	0	; () banked
  5979  003AB2  2572               	addwf	ReadIntEEPROM@address& (0+255),w,b
  5980  003AB4  0100               	movlb	0	; () banked
  5981  003AB6  6F70               	movwf	ReadEEPROM@address& (0+255),b
  5982  003AB8  0E00               	movlw	0
  5983  003ABA  0100               	movlb	0	; () banked
  5984  003ABC  2173               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  5985  003ABE  0100               	movlb	0	; () banked
  5986  003AC0  6F71               	movwf	(ReadEEPROM@address+1)& (0+255),b
  5987  003AC2  ECC1  F020         	call	_ReadEEPROM	;wreg free
  5988  003AC6  0100               	movlb	0	; () banked
  5989  003AC8  6F74               	movwf	??_ReadIntEEPROM& (0+255),b
  5990  003ACA  0100               	movlb	0	; () banked
  5991  003ACC  5174               	movf	??_ReadIntEEPROM& (0+255),w,b
  5992  003ACE  0100               	movlb	0	; () banked
  5993  003AD0  1377               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;eeprom.c: 72: return(data);
  5997  003AD2  C077  F072         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  5998  003AD6  C078  F073         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  5999  003ADA  D000               	goto	l229
  6000  003ADC                     l229:
  6001                           
  6002                           ; BSR set to: 0
  6003  003ADC  0012               	return		;funcret
  6004  003ADE                     __end_of_ReadIntEEPROM:
  6005                           	opt stack 0
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           indf2	equ	0xFDF
  6011                           postinc2	equ	0xFDE
  6012                           postdec2	equ	0xFDD
  6013                           fsr2h	equ	0xFDA
  6014                           fsr2l	equ	0xFD9
  6015                           status	equ	0xFD8
  6016                           
  6017 ;; *************** function _ReadCharEEPROM *****************
  6018 ;; Defined at:
  6019 ;;		line 76 in file "eeprom.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  address         2   18[BANK0 ] unsigned int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      unsigned char 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;Total ram usage:        2 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    8
  6040 ;; This function calls:
  6041 ;;		_ReadEEPROM
  6042 ;; This function is called by:
  6043 ;;		_LoadCalibration
  6044 ;;		_LoadPIDValues
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text35
  6049  0044F4                     __ptext35:
  6050                           	opt stack 0
  6051  0044F4                     _ReadCharEEPROM:
  6052                           	opt stack 21
  6053                           
  6054                           ;eeprom.c: 77: return(ReadEEPROM(address));
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;incstack = 0
  6058  0044F4  C072  F070         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6059  0044F8  C073  F071         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6060  0044FC  ECC1  F020         	call	_ReadEEPROM	;wreg free
  6061  004500  D000               	goto	l232
  6062  004502                     l232:
  6063  004502  0012               	return		;funcret
  6064  004504                     __end_of_ReadCharEEPROM:
  6065                           	opt stack 0
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           indf2	equ	0xFDF
  6071                           postinc2	equ	0xFDE
  6072                           postdec2	equ	0xFDD
  6073                           fsr2h	equ	0xFDA
  6074                           fsr2l	equ	0xFD9
  6075                           status	equ	0xFD8
  6076                           
  6077 ;; *************** function _ReadEEPROM *****************
  6078 ;; Defined at:
  6079 ;;		line 37 in file "eeprom.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  address         2   16[BANK0 ] unsigned int 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      unsigned char 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6093 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;Total ram usage:        2 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    7
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_ReadIntEEPROM
  6104 ;;		_ReadCharEEPROM
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text36
  6109  004182                     __ptext36:
  6110                           	opt stack 0
  6111  004182                     _ReadEEPROM:
  6112                           	opt stack 22
  6113                           
  6114                           ;eeprom.c: 38: if(address > 0x03FF) {
  6115                           
  6116                           ;incstack = 0
  6117  004182  0E04               	movlw	4
  6118  004184  0100               	movlb	0	; () banked
  6119  004186  5D71               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6120  004188  A0D8               	btfss	status,0,c
  6121  00418A  D002               	goto	l215
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;eeprom.c: 39: return(0);
  6125  00418C  0E00               	movlw	0
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;eeprom.c: 40: }
  6129                           
  6130                           ; BSR set to: 0
  6131  00418E  D00E               	goto	l216
  6132  004190                     l215:
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;eeprom.c: 41: else {
  6136                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6137  004190  C070  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6141  004194  0100               	movlb	0	; () banked
  6142  004196  5171               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6143  004198  0B03               	andlw	3
  6144  00419A  6EAA               	movwf	4010,c	;volatile
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6148  00419C  9EA6               	bcf	4006,7,c	;volatile
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6152  00419E  9CA6               	bcf	4006,6,c	;volatile
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6156  0041A0  80A6               	bsf	4006,0,c	;volatile
  6157                           
  6158                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6159  0041A2  D000               	goto	l218
  6160  0041A4                     l218:
  6161  0041A4  B0A6               	btfsc	4006,0,c	;volatile
  6162  0041A6  D7FE               	goto	l218
  6163                           
  6164                           ;eeprom.c: 50: return(EEDATA);
  6165  0041A8  50A8               	movf	4008,w,c	;volatile
  6166  0041AA  D000               	goto	l216
  6167  0041AC                     l216:
  6168  0041AC  0012               	return		;funcret
  6169  0041AE                     __end_of_ReadEEPROM:
  6170                           	opt stack 0
  6171                           prodh	equ	0xFF4
  6172                           prodl	equ	0xFF3
  6173                           postinc0	equ	0xFEE
  6174                           wreg	equ	0xFE8
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _GenerateCalibration *****************
  6183 ;; Defined at:
  6184 ;;		line 587 in file "FastBuggy17_Main_Code_TUNING.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  index           1   31[BANK0 ] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;		None               void
  6191 ;; Registers used:
  6192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;Total ram usage:        3 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:   11
  6205 ;; This function calls:
  6206 ;;		_CalibrateOffsets
  6207 ;;		_CalibrateThreshold
  6208 ;;		_Delay10KTCYx
  6209 ;;		_FlashLEDS
  6210 ;;		_PB1pressed
  6211 ;;		_SendOffsets
  6212 ;;		_SendStatus
  6213 ;;		_SendThreshold
  6214 ;;		_WriteCharEEPROM
  6215 ;;		_WriteIntEEPROM
  6216 ;; This function is called by:
  6217 ;;		_LoadCalibration
  6218 ;;		_main
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text37
  6223  0025AA                     __ptext37:
  6224                           	opt stack 0
  6225  0025AA                     _GenerateCalibration:
  6226                           	opt stack 18
  6227                           
  6228                           ;FastBuggy17_Main_Code_TUNING.c: 588: unsigned char index;
  6229                           ;FastBuggy17_Main_Code_TUNING.c: 591: SendStatus(0x03);
  6230                           
  6231                           ;incstack = 0
  6232  0025AA  0E03               	movlw	3
  6233  0025AC  EC3E  F01F         	call	_SendStatus
  6234                           
  6235                           ;FastBuggy17_Main_Code_TUNING.c: 592: LATJ = 0x07;
  6236  0025B0  0E07               	movlw	7
  6237  0025B2  6E91               	movwf	3985,c	;volatile
  6238                           
  6239                           ;FastBuggy17_Main_Code_TUNING.c: 594: while(PB1pressed() == 0) {
  6240  0025B4  D006               	goto	l7655
  6241  0025B6                     l7651:
  6242                           
  6243                           ;FastBuggy17_Main_Code_TUNING.c: 596: CalibrateOffsets();
  6244  0025B6  EC98  F01B         	call	_CalibrateOffsets	;wreg free
  6245                           
  6246                           ;FastBuggy17_Main_Code_TUNING.c: 597: Delay10KTCYx(10);
  6247  0025BA  0E0A               	movlw	10
  6248  0025BC  ECA7  F021         	call	_Delay10KTCYx
  6249  0025C0  D000               	goto	l7655
  6250  0025C2                     l7655:
  6251  0025C2  EC6F  F01D         	call	_PB1pressed	;wreg free
  6252  0025C6  0900               	iorlw	0
  6253  0025C8  B4D8               	btfsc	status,2,c
  6254  0025CA  D7F5               	goto	l7651
  6255                           
  6256                           ;FastBuggy17_Main_Code_TUNING.c: 599: }
  6257                           ;FastBuggy17_Main_Code_TUNING.c: 601: for(index = 0; index < 5; index++) {
  6258  0025CC  0E00               	movlw	0
  6259  0025CE  0100               	movlb	0	; () banked
  6260  0025D0  6F7F               	movwf	GenerateCalibration@index& (0+255),b
  6261  0025D2                     l7659:
  6262                           
  6263                           ; BSR set to: 0
  6264  0025D2  0E04               	movlw	4
  6265  0025D4  0100               	movlb	0	; () banked
  6266  0025D6  657F               	cpfsgt	GenerateCalibration@index& (0+255),b
  6267  0025D8  D001               	goto	l7663
  6268                           
  6269                           ; BSR set to: 0
  6270  0025DA  D025               	goto	l7669
  6271  0025DC                     l7663:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;FastBuggy17_Main_Code_TUNING.c: 602: WriteIntEEPROM(0x0006 + (2 * index), sensor_offset
      +                          s[index]);
  6275  0025DC  0100               	movlb	0	; () banked
  6276  0025DE  517F               	movf	GenerateCalibration@index& (0+255),w,b
  6277  0025E0  0100               	movlb	0	; () banked
  6278  0025E2  6F7D               	movwf	??_GenerateCalibration& (0+255),b
  6279  0025E4  6B7E               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6280  0025E6  90D8               	bcf	status,0,c
  6281  0025E8  0100               	movlb	0	; () banked
  6282  0025EA  377D               	rlcf	??_GenerateCalibration& (0+255),f,b
  6283  0025EC  377E               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6284  0025EE  0E06               	movlw	6
  6285  0025F0  0100               	movlb	0	; () banked
  6286  0025F2  257D               	addwf	??_GenerateCalibration& (0+255),w,b
  6287  0025F4  0100               	movlb	0	; () banked
  6288  0025F6  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  6289  0025F8  0E00               	movlw	0
  6290  0025FA  0100               	movlb	0	; () banked
  6291  0025FC  217E               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6292  0025FE  0100               	movlb	0	; () banked
  6293  002600  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6294  002602  0100               	movlb	0	; () banked
  6295  002604  517F               	movf	GenerateCalibration@index& (0+255),w,b
  6296  002606  0D02               	mullw	2
  6297  002608  0EDF               	movlw	low _sensor_offsets
  6298  00260A  24F3               	addwf	prodl,w,c
  6299  00260C  6ED9               	movwf	fsr2l,c
  6300  00260E  0E00               	movlw	high _sensor_offsets
  6301  002610  20F4               	addwfc	prodh,w,c
  6302  002612  6EDA               	movwf	fsr2h,c
  6303  002614  CFDE F075          	movff	postinc2,WriteIntEEPROM@data
  6304  002618  CFDD F076          	movff	postdec2,WriteIntEEPROM@data+1
  6305  00261C  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  6306  002620  0100               	movlb	0	; () banked
  6307  002622  2B7F               	incf	GenerateCalibration@index& (0+255),f,b
  6308  002624  D7D6               	goto	l7659
  6309  002626                     l7669:
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;FastBuggy17_Main_Code_TUNING.c: 603: }
  6313                           ;FastBuggy17_Main_Code_TUNING.c: 605: SendOffsets(sensor_offsets);
  6314  002626  0EDF               	movlw	low _sensor_offsets
  6315  002628  0100               	movlb	0	; () banked
  6316  00262A  6F78               	movwf	SendOffsets@offsets_array& (0+255),b
  6317  00262C  0E00               	movlw	high _sensor_offsets
  6318  00262E  0100               	movlb	0	; () banked
  6319  002630  6F79               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  6320  002632  EC79  F019         	call	_SendOffsets	;wreg free
  6321                           
  6322                           ;FastBuggy17_Main_Code_TUNING.c: 607: FlashLEDS();
  6323  002636  ECEC  F020         	call	_FlashLEDS	;wreg free
  6324                           
  6325                           ;FastBuggy17_Main_Code_TUNING.c: 610: SendStatus(0x04);
  6326  00263A  0E04               	movlw	4
  6327  00263C  EC3E  F01F         	call	_SendStatus
  6328                           
  6329                           ;FastBuggy17_Main_Code_TUNING.c: 612: while(PB1pressed() == 0) {
  6330  002640  D006               	goto	l7679
  6331  002642                     l7675:
  6332                           
  6333                           ;FastBuggy17_Main_Code_TUNING.c: 614: CalibrateThreshold();
  6334  002642  EC9E  F01D         	call	_CalibrateThreshold	;wreg free
  6335                           
  6336                           ;FastBuggy17_Main_Code_TUNING.c: 615: Delay10KTCYx(10);
  6337  002646  0E0A               	movlw	10
  6338  002648  ECA7  F021         	call	_Delay10KTCYx
  6339  00264C  D000               	goto	l7679
  6340  00264E                     l7679:
  6341  00264E  EC6F  F01D         	call	_PB1pressed	;wreg free
  6342  002652  0900               	iorlw	0
  6343  002654  B4D8               	btfsc	status,2,c
  6344  002656  D7F5               	goto	l7675
  6345                           
  6346                           ;FastBuggy17_Main_Code_TUNING.c: 617: }
  6347                           ;FastBuggy17_Main_Code_TUNING.c: 619: if(line_mode == 0) {
  6348  002658  502A               	movf	_line_mode,w,c
  6349  00265A  A4D8               	btfss	status,2,c
  6350  00265C  D016               	goto	l7685
  6351                           
  6352                           ;FastBuggy17_Main_Code_TUNING.c: 620: WriteIntEEPROM(0x0002, sensor_threshold);
  6353  00265E  0E00               	movlw	0
  6354  002660  0100               	movlb	0	; () banked
  6355  002662  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6356  002664  0E02               	movlw	2
  6357  002666  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  6358  002668  C028  F075         	movff	_sensor_threshold,WriteIntEEPROM@data
  6359  00266C  C029  F076         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6360  002670  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  6361                           
  6362                           ;FastBuggy17_Main_Code_TUNING.c: 621: WriteCharEEPROM(0x0000, 1);
  6363  002674  0E00               	movlw	0
  6364  002676  0100               	movlb	0	; () banked
  6365  002678  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6366  00267A  0E00               	movlw	0
  6367  00267C  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  6368  00267E  0E01               	movlw	1
  6369  002680  0100               	movlb	0	; () banked
  6370  002682  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  6371  002684  EC44  F022         	call	_WriteCharEEPROM	;wreg free
  6372                           
  6373                           ;FastBuggy17_Main_Code_TUNING.c: 622: }
  6374  002688  D019               	goto	l7689
  6375  00268A                     l7685:
  6376                           
  6377                           ;FastBuggy17_Main_Code_TUNING.c: 623: else if(line_mode == 1) {
  6378  00268A  042A               	decf	_line_mode,w,c
  6379  00268C  A4D8               	btfss	status,2,c
  6380  00268E  D016               	goto	l7689
  6381                           
  6382                           ;FastBuggy17_Main_Code_TUNING.c: 624: WriteIntEEPROM(0x0004, sensor_threshold);
  6383  002690  0E00               	movlw	0
  6384  002692  0100               	movlb	0	; () banked
  6385  002694  6F74               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6386  002696  0E04               	movlw	4
  6387  002698  6F73               	movwf	WriteIntEEPROM@address& (0+255),b
  6388  00269A  C028  F075         	movff	_sensor_threshold,WriteIntEEPROM@data
  6389  00269E  C029  F076         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6390  0026A2  EC1B  F020         	call	_WriteIntEEPROM	;wreg free
  6391                           
  6392                           ;FastBuggy17_Main_Code_TUNING.c: 625: WriteCharEEPROM(0x0001, 1);
  6393  0026A6  0E00               	movlw	0
  6394  0026A8  0100               	movlb	0	; () banked
  6395  0026AA  6F74               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6396  0026AC  0E01               	movlw	1
  6397  0026AE  6F73               	movwf	WriteCharEEPROM@address& (0+255),b
  6398  0026B0  0E01               	movlw	1
  6399  0026B2  0100               	movlb	0	; () banked
  6400  0026B4  6F75               	movwf	WriteCharEEPROM@data& (0+255),b
  6401  0026B6  EC44  F022         	call	_WriteCharEEPROM	;wreg free
  6402  0026BA  D000               	goto	l7689
  6403  0026BC                     l7689:
  6404                           
  6405                           ;FastBuggy17_Main_Code_TUNING.c: 626: }
  6406                           ;FastBuggy17_Main_Code_TUNING.c: 628: SendThreshold(sensor_threshold_ptr);
  6407  0026BC  C0EB  F078         	movff	_sensor_threshold_ptr,SendThreshold@sensor_threshold
  6408  0026C0  C0EC  F079         	movff	_sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  6409  0026C4  ECD3  F01B         	call	_SendThreshold	;wreg free
  6410  0026C8  0012               	return		;funcret
  6411  0026CA                     __end_of_GenerateCalibration:
  6412                           	opt stack 0
  6413                           prodh	equ	0xFF4
  6414                           prodl	equ	0xFF3
  6415                           postinc0	equ	0xFEE
  6416                           wreg	equ	0xFE8
  6417                           indf2	equ	0xFDF
  6418                           postinc2	equ	0xFDE
  6419                           postdec2	equ	0xFDD
  6420                           fsr2h	equ	0xFDA
  6421                           fsr2l	equ	0xFD9
  6422                           status	equ	0xFD8
  6423                           
  6424 ;; *************** function _WriteIntEEPROM *****************
  6425 ;; Defined at:
  6426 ;;		line 56 in file "eeprom.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  address         2   19[BANK0 ] unsigned int 
  6429 ;;  data            2   21[BANK0 ] unsigned int 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6441 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;Total ram usage:        4 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    8
  6448 ;; This function calls:
  6449 ;;		_WriteEEPROM
  6450 ;; This function is called by:
  6451 ;;		_GenerateCalibration
  6452 ;;		_SetPIDValues
  6453 ;;		_LoadPIDValues
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text38
  6458  004036                     __ptext38:
  6459                           	opt stack 0
  6460  004036                     _WriteIntEEPROM:
  6461                           	opt stack 21
  6462                           
  6463                           ;eeprom.c: 57: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6464                           
  6465                           ;incstack = 0
  6466  004036  C073  F070         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6467  00403A  C074  F071         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6468  00403E  0100               	movlb	0	; () banked
  6469  004040  5176               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6470  004042  0100               	movlb	0	; () banked
  6471  004044  6F72               	movwf	WriteEEPROM@data& (0+255),b
  6472  004046  ECE3  F01E         	call	_WriteEEPROM	;wreg free
  6473                           
  6474                           ;eeprom.c: 58: WriteEEPROM(address + 1, (data & 0x00FF));
  6475  00404A  0E01               	movlw	1
  6476  00404C  0100               	movlb	0	; () banked
  6477  00404E  2573               	addwf	WriteIntEEPROM@address& (0+255),w,b
  6478  004050  0100               	movlb	0	; () banked
  6479  004052  6F70               	movwf	WriteEEPROM@address& (0+255),b
  6480  004054  0E00               	movlw	0
  6481  004056  0100               	movlb	0	; () banked
  6482  004058  2174               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  6483  00405A  0100               	movlb	0	; () banked
  6484  00405C  6F71               	movwf	(WriteEEPROM@address+1)& (0+255),b
  6485  00405E  C075  F072         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  6486  004062  ECE3  F01E         	call	_WriteEEPROM	;wreg free
  6487  004066  0012               	return		;funcret
  6488  004068                     __end_of_WriteIntEEPROM:
  6489                           	opt stack 0
  6490                           prodh	equ	0xFF4
  6491                           prodl	equ	0xFF3
  6492                           postinc0	equ	0xFEE
  6493                           wreg	equ	0xFE8
  6494                           indf2	equ	0xFDF
  6495                           postinc2	equ	0xFDE
  6496                           postdec2	equ	0xFDD
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function _WriteCharEEPROM *****************
  6502 ;; Defined at:
  6503 ;;		line 62 in file "eeprom.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  address         2   19[BANK0 ] unsigned int 
  6506 ;;  data            1   21[BANK0 ] unsigned char 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;		None               void
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6518 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;Total ram usage:        3 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    8
  6525 ;; This function calls:
  6526 ;;		_WriteEEPROM
  6527 ;; This function is called by:
  6528 ;;		_GenerateCalibration
  6529 ;;		_SetPIDValues
  6530 ;;		_LoadPIDValues
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text39
  6535  004488                     __ptext39:
  6536                           	opt stack 0
  6537  004488                     _WriteCharEEPROM:
  6538                           	opt stack 21
  6539                           
  6540                           ;eeprom.c: 63: WriteEEPROM(address, data);
  6541                           
  6542                           ;incstack = 0
  6543  004488  C073  F070         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  6544  00448C  C074  F071         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  6545  004490  C075  F072         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  6546  004494  ECE3  F01E         	call	_WriteEEPROM	;wreg free
  6547  004498  0012               	return		;funcret
  6548  00449A                     __end_of_WriteCharEEPROM:
  6549                           	opt stack 0
  6550                           prodh	equ	0xFF4
  6551                           prodl	equ	0xFF3
  6552                           postinc0	equ	0xFEE
  6553                           wreg	equ	0xFE8
  6554                           indf2	equ	0xFDF
  6555                           postinc2	equ	0xFDE
  6556                           postdec2	equ	0xFDD
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           
  6561 ;; *************** function _WriteEEPROM *****************
  6562 ;; Defined at:
  6563 ;;		line 3 in file "eeprom.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  address         2   16[BANK0 ] unsigned int 
  6566 ;;  data            1   18[BANK0 ] unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      unsigned char 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;Total ram usage:        3 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    7
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_WriteIntEEPROM
  6589 ;;		_WriteCharEEPROM
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text40
  6594  003DC6                     __ptext40:
  6595                           	opt stack 0
  6596  003DC6                     _WriteEEPROM:
  6597                           	opt stack 21
  6598                           
  6599                           ;eeprom.c: 4: if(address > 0x03FF) {
  6600                           
  6601                           ;incstack = 0
  6602  003DC6  0E04               	movlw	4
  6603  003DC8  0100               	movlb	0	; () banked
  6604  003DCA  5D71               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  6605  003DCC  B0D8               	btfsc	status,0,c
  6606  003DCE  D01A               	goto	l206
  6607  003DD0  D001               	goto	l205
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;eeprom.c: 6: }
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;eeprom.c: 5: return(1);
  6614                           ;	Return value of _WriteEEPROM is never used
  6615  003DD2  D018               	goto	l206
  6616  003DD4                     l205:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;eeprom.c: 7: else {
  6620                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  6621  003DD4  C070  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  6625  003DD8  0100               	movlb	0	; () banked
  6626  003DDA  5171               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  6627  003DDC  0B03               	andlw	3
  6628  003DDE  6EAA               	movwf	4010,c	;volatile
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;eeprom.c: 10: EEDATA = data;
  6632  003DE0  C072  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  6636  003DE4  9EA6               	bcf	4006,7,c	;volatile
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  6640  003DE6  9CA6               	bcf	4006,6,c	;volatile
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  6644  003DE8  84A6               	bsf	4006,2,c	;volatile
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  6648  003DEA  9EF2               	bcf	intcon,7,c	;volatile
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;eeprom.c: 17: EECON2 = 0x55;
  6652  003DEC  0E55               	movlw	85
  6653  003DEE  6EA7               	movwf	4007,c	;volatile
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;eeprom.c: 18: EECON2 = 0x0AA;
  6657  003DF0  0EAA               	movlw	170
  6658  003DF2  6EA7               	movwf	4007,c	;volatile
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;eeprom.c: 19: EECON1bits.WR = 1;
  6662  003DF4  82A6               	bsf	4006,1,c	;volatile
  6663                           
  6664                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  6665  003DF6  D000               	goto	l208
  6666  003DF8                     l208:
  6667  003DF8  B2A6               	btfsc	4006,1,c	;volatile
  6668  003DFA  D7FE               	goto	l208
  6669                           
  6670                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  6671  003DFC  94A6               	bcf	4006,2,c	;volatile
  6672                           
  6673                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  6674  003DFE  8EF2               	bsf	intcon,7,c	;volatile
  6675                           
  6676                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  6677  003E00  50A6               	movf	4006,w,c	;volatile
  6678                           
  6679                           ;eeprom.c: 29: else {
  6680                           ;eeprom.c: 30: return(1);
  6681                           ;	Return value of _WriteEEPROM is never used
  6682                           
  6683                           ;eeprom.c: 28: }
  6684                           
  6685                           ;eeprom.c: 27: return(0);
  6686                           ;	Return value of _WriteEEPROM is never used
  6687  003E02  D000               	goto	l206
  6688  003E04                     l206:
  6689  003E04  0012               	return		;funcret
  6690  003E06                     __end_of_WriteEEPROM:
  6691                           	opt stack 0
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           indf2	equ	0xFDF
  6698                           postinc2	equ	0xFDE
  6699                           postdec2	equ	0xFDD
  6700                           fsr2h	equ	0xFDA
  6701                           fsr2l	equ	0xFD9
  6702                           status	equ	0xFD8
  6703                           
  6704 ;; *************** function _SendThreshold *****************
  6705 ;; Defined at:
  6706 ;;		line 186 in file "Wireless.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  sensor_thres    2   24[BANK0 ] PTR const int 
  6709 ;;		 -> NULL(0), sensor_threshold(2), 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;		None               void
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;Total ram usage:        4 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    9
  6728 ;; This function calls:
  6729 ;;		_BusyTx
  6730 ;;		_FlushTxBuf
  6731 ;;		_PutCharTxBuf
  6732 ;;		_StartTx
  6733 ;; This function is called by:
  6734 ;;		_GenerateCalibration
  6735 ;;		_LoadCalibration
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text41
  6740  0037A6                     __ptext41:
  6741                           	opt stack 0
  6742  0037A6                     _SendThreshold:
  6743                           	opt stack 20
  6744                           
  6745                           ;Wireless.c: 187: while(BusyTx());
  6746                           
  6747                           ;incstack = 0
  6748  0037A6  D000               	goto	l7173
  6749  0037A8                     l7173:
  6750  0037A8  EC82  F022         	call	_BusyTx	;wreg free
  6751  0037AC  0900               	iorlw	0
  6752  0037AE  A4D8               	btfss	status,2,c
  6753  0037B0  D7FB               	goto	l7173
  6754                           
  6755                           ;Wireless.c: 188: FlushTxBuf();
  6756  0037B2  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  6757                           
  6758                           ;Wireless.c: 190: PutCharTxBuf(0xAA);
  6759  0037B6  0EAA               	movlw	170
  6760  0037B8  ECC2  F01E         	call	_PutCharTxBuf
  6761                           
  6762                           ;Wireless.c: 191: PutCharTxBuf(0x31);
  6763  0037BC  0E31               	movlw	49
  6764  0037BE  ECC2  F01E         	call	_PutCharTxBuf
  6765                           
  6766                           ;Wireless.c: 193: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  6767  0037C2  C078  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  6768  0037C6  C079  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  6769  0037CA  CFDE F07A          	movff	postinc2,??_SendThreshold
  6770  0037CE  CFDD F07B          	movff	postdec2,??_SendThreshold+1
  6771  0037D2  C07B  F07A         	movff	??_SendThreshold+1,??_SendThreshold
  6772  0037D6  0100               	movlb	0	; () banked
  6773  0037D8  6B7B               	clrf	(??_SendThreshold+1)& (0+255),b
  6774  0037DA  BF7A               	btfsc	??_SendThreshold& (0+255),7,b
  6775  0037DC  697B               	setf	(??_SendThreshold+1)& (0+255),b
  6776  0037DE  0100               	movlb	0	; () banked
  6777  0037E0  517A               	movf	??_SendThreshold& (0+255),w,b
  6778  0037E2  ECC2  F01E         	call	_PutCharTxBuf
  6779                           
  6780                           ;Wireless.c: 194: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  6781  0037E6  C078  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  6782  0037EA  C079  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  6783  0037EE  50DF               	movf	indf2,w,c
  6784  0037F0  ECC2  F01E         	call	_PutCharTxBuf
  6785                           
  6786                           ;Wireless.c: 196: PutCharTxBuf('\r');
  6787  0037F4  0E0D               	movlw	13
  6788  0037F6  ECC2  F01E         	call	_PutCharTxBuf
  6789                           
  6790                           ;Wireless.c: 197: PutCharTxBuf('\n');
  6791  0037FA  0E0A               	movlw	10
  6792  0037FC  ECC2  F01E         	call	_PutCharTxBuf
  6793                           
  6794                           ;Wireless.c: 198: while (BusyTx());
  6795  003800  D000               	goto	l7177
  6796  003802                     l7177:
  6797  003802  EC82  F022         	call	_BusyTx	;wreg free
  6798  003806  0900               	iorlw	0
  6799  003808  A4D8               	btfss	status,2,c
  6800  00380A  D7FB               	goto	l7177
  6801                           
  6802                           ;Wireless.c: 199: StartTx();
  6803  00380C  ECF0  F022         	call	_StartTx	;wreg free
  6804  003810  0012               	return		;funcret
  6805  003812                     __end_of_SendThreshold:
  6806                           	opt stack 0
  6807                           prodh	equ	0xFF4
  6808                           prodl	equ	0xFF3
  6809                           intcon	equ	0xFF2
  6810                           postinc0	equ	0xFEE
  6811                           wreg	equ	0xFE8
  6812                           indf2	equ	0xFDF
  6813                           postinc2	equ	0xFDE
  6814                           postdec2	equ	0xFDD
  6815                           fsr2h	equ	0xFDA
  6816                           fsr2l	equ	0xFD9
  6817                           status	equ	0xFD8
  6818                           
  6819 ;; *************** function _SendStatus *****************
  6820 ;; Defined at:
  6821 ;;		line 139 in file "Wireless.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  status_code     1    wreg     const unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  status_code     1   24[BANK0 ] const unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;		None               void
  6828 ;; Registers used:
  6829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;Total ram usage:        1 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:    9
  6842 ;; This function calls:
  6843 ;;		_BusyTx
  6844 ;;		_FlushTxBuf
  6845 ;;		_PutCharTxBuf
  6846 ;;		_StartTx
  6847 ;; This function is called by:
  6848 ;;		_GenerateCalibration
  6849 ;;		_SetPIDValues
  6850 ;;		_LoadPIDValues
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text42
  6856  003E7C                     __ptext42:
  6857                           	opt stack 0
  6858  003E7C                     _SendStatus:
  6859                           	opt stack 20
  6860                           
  6861                           ;incstack = 0
  6862                           ;SendStatus@status_code stored from wreg
  6863  003E7C  0100               	movlb	0	; () banked
  6864  003E7E  6F78               	movwf	SendStatus@status_code& (0+255),b
  6865                           
  6866                           ; BSR set to: 0
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;Wireless.c: 140: while(BusyTx());
  6870  003E80  D000               	goto	l7141
  6871  003E82                     l7141:
  6872  003E82  EC82  F022         	call	_BusyTx	;wreg free
  6873  003E86  0900               	iorlw	0
  6874  003E88  A4D8               	btfss	status,2,c
  6875  003E8A  D7FB               	goto	l7141
  6876                           
  6877                           ;Wireless.c: 141: FlushTxBuf();
  6878  003E8C  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  6879                           
  6880                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  6881  003E90  0EAA               	movlw	170
  6882  003E92  ECC2  F01E         	call	_PutCharTxBuf
  6883                           
  6884                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  6885  003E96  0E01               	movlw	1
  6886  003E98  ECC2  F01E         	call	_PutCharTxBuf
  6887                           
  6888                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  6889  003E9C  0100               	movlb	0	; () banked
  6890  003E9E  5178               	movf	SendStatus@status_code& (0+255),w,b
  6891  003EA0  ECC2  F01E         	call	_PutCharTxBuf
  6892                           
  6893                           ;Wireless.c: 146: PutCharTxBuf('\r');
  6894  003EA4  0E0D               	movlw	13
  6895  003EA6  ECC2  F01E         	call	_PutCharTxBuf
  6896                           
  6897                           ;Wireless.c: 147: PutCharTxBuf('\n');
  6898  003EAA  0E0A               	movlw	10
  6899  003EAC  ECC2  F01E         	call	_PutCharTxBuf
  6900                           
  6901                           ;Wireless.c: 149: StartTx();
  6902  003EB0  ECF0  F022         	call	_StartTx	;wreg free
  6903  003EB4  0012               	return		;funcret
  6904  003EB6                     __end_of_SendStatus:
  6905                           	opt stack 0
  6906                           prodh	equ	0xFF4
  6907                           prodl	equ	0xFF3
  6908                           intcon	equ	0xFF2
  6909                           postinc0	equ	0xFEE
  6910                           wreg	equ	0xFE8
  6911                           indf2	equ	0xFDF
  6912                           postinc2	equ	0xFDE
  6913                           postdec2	equ	0xFDD
  6914                           fsr2h	equ	0xFDA
  6915                           fsr2l	equ	0xFD9
  6916                           status	equ	0xFD8
  6917                           
  6918 ;; *************** function _SendOffsets *****************
  6919 ;; Defined at:
  6920 ;;		line 165 in file "Wireless.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  6923 ;;		 -> sensor_offsets(10), 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  index           1   28[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;		None               void
  6928 ;; Registers used:
  6929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        5 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    9
  6942 ;; This function calls:
  6943 ;;		_BusyTx
  6944 ;;		_FlushTxBuf
  6945 ;;		_PutCharTxBuf
  6946 ;;		_StartTx
  6947 ;; This function is called by:
  6948 ;;		_GenerateCalibration
  6949 ;;		_LoadCalibration
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text43
  6954  0032F2                     __ptext43:
  6955                           	opt stack 0
  6956  0032F2                     _SendOffsets:
  6957                           	opt stack 20
  6958                           
  6959                           ;Wireless.c: 166: unsigned char index;
  6960                           ;Wireless.c: 168: while(BusyTx());
  6961                           
  6962                           ;incstack = 0
  6963  0032F2  D000               	goto	l7149
  6964  0032F4                     l7149:
  6965  0032F4  EC82  F022         	call	_BusyTx	;wreg free
  6966  0032F8  0900               	iorlw	0
  6967  0032FA  A4D8               	btfss	status,2,c
  6968  0032FC  D7FB               	goto	l7149
  6969                           
  6970                           ;Wireless.c: 169: FlushTxBuf();
  6971  0032FE  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  6972                           
  6973                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  6974  003302  0EAA               	movlw	170
  6975  003304  ECC2  F01E         	call	_PutCharTxBuf
  6976                           
  6977                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  6978  003308  0E21               	movlw	33
  6979  00330A  ECC2  F01E         	call	_PutCharTxBuf
  6980                           
  6981                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  6982  00330E  0E00               	movlw	0
  6983  003310  0100               	movlb	0	; () banked
  6984  003312  6F7C               	movwf	SendOffsets@index& (0+255),b
  6985  003314                     l7155:
  6986                           
  6987                           ; BSR set to: 0
  6988  003314  0E04               	movlw	4
  6989  003316  0100               	movlb	0	; () banked
  6990  003318  657C               	cpfsgt	SendOffsets@index& (0+255),b
  6991  00331A  D001               	goto	l7159
  6992                           
  6993                           ; BSR set to: 0
  6994  00331C  D02C               	goto	l7165
  6995  00331E                     l7159:
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  6999  00331E  0100               	movlb	0	; () banked
  7000  003320  517C               	movf	SendOffsets@index& (0+255),w,b
  7001  003322  0D02               	mullw	2
  7002  003324  50F3               	movf	prodl,w,c
  7003  003326  0100               	movlb	0	; () banked
  7004  003328  2578               	addwf	SendOffsets@offsets_array& (0+255),w,b
  7005  00332A  6ED9               	movwf	fsr2l,c
  7006  00332C  50F4               	movf	prodh,w,c
  7007  00332E  0100               	movlb	0	; () banked
  7008  003330  2179               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  7009  003332  6EDA               	movwf	fsr2h,c
  7010  003334  CFDE F07A          	movff	postinc2,??_SendOffsets
  7011  003338  CFDD F07B          	movff	postdec2,??_SendOffsets+1
  7012  00333C  C07B  F07A         	movff	??_SendOffsets+1,??_SendOffsets
  7013  003340  0100               	movlb	0	; () banked
  7014  003342  6B7B               	clrf	(??_SendOffsets+1)& (0+255),b
  7015  003344  BF7A               	btfsc	??_SendOffsets& (0+255),7,b
  7016  003346  697B               	setf	(??_SendOffsets+1)& (0+255),b
  7017  003348  0100               	movlb	0	; () banked
  7018  00334A  517A               	movf	??_SendOffsets& (0+255),w,b
  7019  00334C  ECC2  F01E         	call	_PutCharTxBuf
  7020                           
  7021                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  7022  003350  0100               	movlb	0	; () banked
  7023  003352  517C               	movf	SendOffsets@index& (0+255),w,b
  7024  003354  0D02               	mullw	2
  7025  003356  50F3               	movf	prodl,w,c
  7026  003358  0100               	movlb	0	; () banked
  7027  00335A  2578               	addwf	SendOffsets@offsets_array& (0+255),w,b
  7028  00335C  6ED9               	movwf	fsr2l,c
  7029  00335E  50F4               	movf	prodh,w,c
  7030  003360  0100               	movlb	0	; () banked
  7031  003362  2179               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  7032  003364  6EDA               	movwf	fsr2h,c
  7033  003366  50DF               	movf	indf2,w,c
  7034  003368  0DFF               	mullw	255
  7035  00336A  50F3               	movf	prodl,w,c
  7036  00336C  ECC2  F01E         	call	_PutCharTxBuf
  7037  003370  0100               	movlb	0	; () banked
  7038  003372  2B7C               	incf	SendOffsets@index& (0+255),f,b
  7039  003374  D7CF               	goto	l7155
  7040  003376                     l7165:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;Wireless.c: 177: }
  7044                           ;Wireless.c: 179: PutCharTxBuf('\r');
  7045  003376  0E0D               	movlw	13
  7046  003378  ECC2  F01E         	call	_PutCharTxBuf
  7047                           
  7048                           ;Wireless.c: 180: PutCharTxBuf('\n');
  7049  00337C  0E0A               	movlw	10
  7050  00337E  ECC2  F01E         	call	_PutCharTxBuf
  7051                           
  7052                           ;Wireless.c: 181: while(BusyTx());
  7053  003382  D000               	goto	l7167
  7054  003384                     l7167:
  7055  003384  EC82  F022         	call	_BusyTx	;wreg free
  7056  003388  0900               	iorlw	0
  7057  00338A  A4D8               	btfss	status,2,c
  7058  00338C  D7FB               	goto	l7167
  7059                           
  7060                           ;Wireless.c: 182: StartTx();
  7061  00338E  ECF0  F022         	call	_StartTx	;wreg free
  7062  003392  0012               	return		;funcret
  7063  003394                     __end_of_SendOffsets:
  7064                           	opt stack 0
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           postinc0	equ	0xFEE
  7069                           wreg	equ	0xFE8
  7070                           indf2	equ	0xFDF
  7071                           postinc2	equ	0xFDE
  7072                           postdec2	equ	0xFDD
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8
  7076                           
  7077 ;; *************** function _StartTx *****************
  7078 ;; Defined at:
  7079 ;;		line 41 in file "Wireless.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;		None
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;		None               void
  7086 ;; Registers used:
  7087 ;;		wreg, status,2
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;Total ram usage:        0 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    7
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_SendStatus
  7104 ;;		_SendLineMode
  7105 ;;		_SendOffsets
  7106 ;;		_SendThreshold
  7107 ;;		_SendDefaultPIDValues
  7108 ;;		_SendStoredPIDValues
  7109 ;;		_SendCurrentPIDValues
  7110 ;;		_SendBattVoltageInitial
  7111 ;;		_SendBattVoltage
  7112 ;;		_SendBattCurrent
  7113 ;;		_SendBattCurrentAcc
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text44
  7118  0045E0                     __ptext44:
  7119                           	opt stack 0
  7120  0045E0                     _StartTx:
  7121                           	opt stack 21
  7122                           
  7123                           ;Wireless.c: 42: Tx_complete = 0;
  7124                           
  7125                           ;incstack = 0
  7126  0045E0  0E00               	movlw	0
  7127  0045E2  6E18               	movwf	_Tx_complete,c
  7128                           
  7129                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  7130  0045E4  889D               	bsf	3997,4,c	;volatile
  7131  0045E6  0012               	return		;funcret
  7132  0045E8                     __end_of_StartTx:
  7133                           	opt stack 0
  7134                           prodh	equ	0xFF4
  7135                           prodl	equ	0xFF3
  7136                           intcon	equ	0xFF2
  7137                           postinc0	equ	0xFEE
  7138                           wreg	equ	0xFE8
  7139                           indf2	equ	0xFDF
  7140                           postinc2	equ	0xFDE
  7141                           postdec2	equ	0xFDD
  7142                           fsr2h	equ	0xFDA
  7143                           fsr2l	equ	0xFD9
  7144                           status	equ	0xFD8
  7145                           
  7146 ;; *************** function _PutCharTxBuf *****************
  7147 ;; Defined at:
  7148 ;;		line 9 in file "Wireless.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  ch              1    wreg     unsigned char 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  ch              1   23[BANK0 ] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;		None               void
  7155 ;; Registers used:
  7156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;Total ram usage:        2 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    8
  7169 ;; This function calls:
  7170 ;;		___awmod
  7171 ;; This function is called by:
  7172 ;;		_SendStatus
  7173 ;;		_SendLineMode
  7174 ;;		_SendOffsets
  7175 ;;		_SendThreshold
  7176 ;;		_SendDefaultPIDValues
  7177 ;;		_SendStoredPIDValues
  7178 ;;		_SendCurrentPIDValues
  7179 ;;		_SendBattVoltageInitial
  7180 ;;		_SendBattVoltage
  7181 ;;		_SendBattCurrent
  7182 ;;		_SendBattCurrentAcc
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text45
  7187  003D84                     __ptext45:
  7188                           	opt stack 0
  7189  003D84                     _PutCharTxBuf:
  7190                           	opt stack 20
  7191                           
  7192                           ;incstack = 0
  7193                           ;PutCharTxBuf@ch stored from wreg
  7194  003D84  0100               	movlb	0	; () banked
  7195  003D86  6F77               	movwf	PutCharTxBuf@ch& (0+255),b
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  7199  003D88  501E               	movf	_put_Tx_index,w,c
  7200  003D8A  0D01               	mullw	1
  7201  003D8C  0E19               	movlw	low _Tx_buffer
  7202  003D8E  24F3               	addwf	prodl,w,c
  7203  003D90  6ED9               	movwf	fsr2l,c
  7204  003D92  0E01               	movlw	high _Tx_buffer
  7205  003D94  20F4               	addwfc	prodh,w,c
  7206  003D96  6EDA               	movwf	fsr2h,c
  7207  003D98  C077  FFDF         	movff	PutCharTxBuf@ch,indf2
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  7211  003D9C  C01E  F076         	movff	_put_Tx_index,??_PutCharTxBuf
  7212  003DA0  0E01               	movlw	1
  7213  003DA2  0100               	movlb	0	; () banked
  7214  003DA4  2776               	addwf	??_PutCharTxBuf& (0+255),f,b
  7215  003DA6  0100               	movlb	0	; () banked
  7216  003DA8  5176               	movf	??_PutCharTxBuf& (0+255),w,b
  7217  003DAA  0100               	movlb	0	; () banked
  7218  003DAC  6F70               	movwf	___awmod@dividend& (0+255),b
  7219  003DAE  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  7220  003DB0  0E00               	movlw	0
  7221  003DB2  0100               	movlb	0	; () banked
  7222  003DB4  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  7223  003DB6  0E19               	movlw	25
  7224  003DB8  6F72               	movwf	___awmod@divisor& (0+255),b
  7225  003DBA  EC75  F018         	call	___awmod	;wreg free
  7226  003DBE  0100               	movlb	0	; () banked
  7227  003DC0  5170               	movf	?___awmod& (0+255),w,b
  7228  003DC2  6E1E               	movwf	_put_Tx_index,c
  7229                           
  7230                           ; BSR set to: 0
  7231  003DC4  0012               	return		;funcret
  7232  003DC6                     __end_of_PutCharTxBuf:
  7233                           	opt stack 0
  7234                           prodh	equ	0xFF4
  7235                           prodl	equ	0xFF3
  7236                           intcon	equ	0xFF2
  7237                           postinc0	equ	0xFEE
  7238                           wreg	equ	0xFE8
  7239                           indf2	equ	0xFDF
  7240                           postinc2	equ	0xFDE
  7241                           postdec2	equ	0xFDD
  7242                           fsr2h	equ	0xFDA
  7243                           fsr2l	equ	0xFD9
  7244                           status	equ	0xFD8
  7245                           
  7246 ;; *************** function ___awmod *****************
  7247 ;; Defined at:
  7248 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  dividend        2   16[BANK0 ] int 
  7251 ;;  divisor         2   18[BANK0 ] int 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  sign            1   21[BANK0 ] unsigned char 
  7254 ;;  counter         1   20[BANK0 ] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  2   16[BANK0 ] int 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;Total ram usage:        6 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    7
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_PutCharTxBuf
  7275 ;;		_PutCharRxBuf
  7276 ;;		_GetCharRxBuf
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text46
  7281  0030EA                     __ptext46:
  7282                           	opt stack 0
  7283  0030EA                     ___awmod:
  7284                           	opt stack 20
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;incstack = 0
  7288  0030EA  0E00               	movlw	0
  7289  0030EC  0100               	movlb	0	; () banked
  7290  0030EE  6F75               	movwf	___awmod@sign& (0+255),b
  7291                           
  7292                           ; BSR set to: 0
  7293  0030F0  0100               	movlb	0	; () banked
  7294  0030F2  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7295  0030F4  D009               	goto	l6683
  7296                           
  7297                           ; BSR set to: 0
  7298  0030F6  0100               	movlb	0	; () banked
  7299  0030F8  6D70               	negf	___awmod@dividend& (0+255),b
  7300  0030FA  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  7301  0030FC  B0D8               	btfsc	status,0,c
  7302  0030FE  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  7303                           
  7304                           ; BSR set to: 0
  7305  003100  0E01               	movlw	1
  7306  003102  0100               	movlb	0	; () banked
  7307  003104  6F75               	movwf	___awmod@sign& (0+255),b
  7308  003106  D000               	goto	l6683
  7309  003108                     l6683:
  7310                           
  7311                           ; BSR set to: 0
  7312  003108  0100               	movlb	0	; () banked
  7313  00310A  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7314  00310C  D006               	goto	l6687
  7315                           
  7316                           ; BSR set to: 0
  7317  00310E  0100               	movlb	0	; () banked
  7318  003110  6D72               	negf	___awmod@divisor& (0+255),b
  7319  003112  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
  7320  003114  B0D8               	btfsc	status,0,c
  7321  003116  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
  7322  003118  D000               	goto	l6687
  7323  00311A                     l6687:
  7324                           
  7325                           ; BSR set to: 0
  7326  00311A  0100               	movlb	0	; () banked
  7327  00311C  5172               	movf	___awmod@divisor& (0+255),w,b
  7328  00311E  0100               	movlb	0	; () banked
  7329  003120  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7330  003122  B4D8               	btfsc	status,2,c
  7331  003124  D02B               	goto	l6703
  7332                           
  7333                           ; BSR set to: 0
  7334  003126  0E01               	movlw	1
  7335  003128  0100               	movlb	0	; () banked
  7336  00312A  6F74               	movwf	___awmod@counter& (0+255),b
  7337  00312C  D007               	goto	l6693
  7338  00312E                     l6691:
  7339                           
  7340                           ; BSR set to: 0
  7341  00312E  0100               	movlb	0	; () banked
  7342  003130  90D8               	bcf	status,0,c
  7343  003132  3772               	rlcf	___awmod@divisor& (0+255),f,b
  7344  003134  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7345  003136  0100               	movlb	0	; () banked
  7346  003138  2B74               	incf	___awmod@counter& (0+255),f,b
  7347  00313A  D000               	goto	l6693
  7348  00313C                     l6693:
  7349                           
  7350                           ; BSR set to: 0
  7351  00313C  0100               	movlb	0	; () banked
  7352  00313E  BF73               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7353  003140  D002               	goto	l6695
  7354  003142  D7F5               	goto	l6691
  7355                           
  7356                           ; BSR set to: 0
  7357  003144  D000               	goto	l6695
  7358  003146                     l6695:
  7359                           
  7360                           ; BSR set to: 0
  7361  003146  0100               	movlb	0	; () banked
  7362  003148  5172               	movf	___awmod@divisor& (0+255),w,b
  7363  00314A  0100               	movlb	0	; () banked
  7364  00314C  5D70               	subwf	___awmod@dividend& (0+255),w,b
  7365  00314E  0100               	movlb	0	; () banked
  7366  003150  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  7367  003152  0100               	movlb	0	; () banked
  7368  003154  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7369  003156  A0D8               	btfss	status,0,c
  7370  003158  D009               	goto	l6699
  7371                           
  7372                           ; BSR set to: 0
  7373  00315A  0100               	movlb	0	; () banked
  7374  00315C  5172               	movf	___awmod@divisor& (0+255),w,b
  7375  00315E  0100               	movlb	0	; () banked
  7376  003160  5F70               	subwf	___awmod@dividend& (0+255),f,b
  7377  003162  0100               	movlb	0	; () banked
  7378  003164  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  7379  003166  0100               	movlb	0	; () banked
  7380  003168  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7381  00316A  D000               	goto	l6699
  7382  00316C                     l6699:
  7383                           
  7384                           ; BSR set to: 0
  7385  00316C  0100               	movlb	0	; () banked
  7386  00316E  90D8               	bcf	status,0,c
  7387  003170  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7388  003172  3372               	rrcf	___awmod@divisor& (0+255),f,b
  7389                           
  7390                           ; BSR set to: 0
  7391  003174  0100               	movlb	0	; () banked
  7392  003176  2F74               	decfsz	___awmod@counter& (0+255),f,b
  7393  003178  D7E6               	goto	l6695
  7394                           
  7395                           ; BSR set to: 0
  7396  00317A  D000               	goto	l6703
  7397  00317C                     l6703:
  7398                           
  7399                           ; BSR set to: 0
  7400  00317C  0100               	movlb	0	; () banked
  7401  00317E  5175               	movf	___awmod@sign& (0+255),w,b
  7402  003180  0100               	movlb	0	; () banked
  7403  003182  B4D8               	btfsc	status,2,c
  7404  003184  D006               	goto	l6707
  7405                           
  7406                           ; BSR set to: 0
  7407  003186  0100               	movlb	0	; () banked
  7408  003188  6D70               	negf	___awmod@dividend& (0+255),b
  7409  00318A  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  7410  00318C  B0D8               	btfsc	status,0,c
  7411  00318E  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  7412  003190  D000               	goto	l6707
  7413  003192                     l6707:
  7414                           
  7415                           ; BSR set to: 0
  7416  003192  C070  F070         	movff	___awmod@dividend,?___awmod
  7417  003196  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
  7418  00319A  D000               	goto	l1431
  7419  00319C                     l1431:
  7420                           
  7421                           ; BSR set to: 0
  7422  00319C  0012               	return		;funcret
  7423  00319E                     __end_of___awmod:
  7424                           	opt stack 0
  7425                           prodh	equ	0xFF4
  7426                           prodl	equ	0xFF3
  7427                           intcon	equ	0xFF2
  7428                           postinc0	equ	0xFEE
  7429                           wreg	equ	0xFE8
  7430                           indf2	equ	0xFDF
  7431                           postinc2	equ	0xFDE
  7432                           postdec2	equ	0xFDD
  7433                           fsr2h	equ	0xFDA
  7434                           fsr2l	equ	0xFD9
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function _BusyTx *****************
  7438 ;; Defined at:
  7439 ;;		line 131 in file "Wireless.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      unsigned char 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;Total ram usage:        0 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:    7
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_SendStatus
  7464 ;;		_SendLineMode
  7465 ;;		_SendOffsets
  7466 ;;		_SendThreshold
  7467 ;;		_SendDefaultPIDValues
  7468 ;;		_SendStoredPIDValues
  7469 ;;		_SendCurrentPIDValues
  7470 ;;		_SendBattVoltageInitial
  7471 ;;		_SendBattVoltage
  7472 ;;		_SendBattCurrent
  7473 ;;		_SendBattCurrentAcc
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text47
  7478  004504                     __ptext47:
  7479                           	opt stack 0
  7480  004504                     _BusyTx:
  7481                           	opt stack 21
  7482                           
  7483                           ;Wireless.c: 132: return(!Tx_complete);
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;incstack = 0
  7487  004504  5018               	movf	_Tx_complete,w,c
  7488  004506  A4D8               	btfss	status,2,c
  7489  004508  D002               	goto	u6540
  7490  00450A  0E01               	movlw	1
  7491  00450C  D002               	goto	l316
  7492  00450E                     u6540:
  7493  00450E  0E00               	movlw	0
  7494  004510  D000               	goto	l316
  7495  004512                     l316:
  7496  004512  0012               	return		;funcret
  7497  004514                     __end_of_BusyTx:
  7498                           	opt stack 0
  7499                           prodh	equ	0xFF4
  7500                           prodl	equ	0xFF3
  7501                           intcon	equ	0xFF2
  7502                           postinc0	equ	0xFEE
  7503                           wreg	equ	0xFE8
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           fsr2h	equ	0xFDA
  7508                           fsr2l	equ	0xFD9
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function _PB1pressed *****************
  7512 ;; Defined at:
  7513 ;;		line 470 in file "FastBuggy17_Main_Code_TUNING.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      unsigned char 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    9
  7534 ;; This function calls:
  7535 ;;		_CommandAvailable
  7536 ;;		_GetCommand
  7537 ;;		_ReadMillis2
  7538 ;;		_ResetMillis2
  7539 ;; This function is called by:
  7540 ;;		_GenerateCalibration
  7541 ;;		_LoadPIDValues
  7542 ;;		_main
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text48
  7547  003ADE                     __ptext48:
  7548                           	opt stack 0
  7549  003ADE                     _PB1pressed:
  7550                           	opt stack 21
  7551                           
  7552                           ;FastBuggy17_Main_Code_TUNING.c: 471: if(CommandAvailable() == 1) {
  7553                           
  7554                           ;incstack = 0
  7555  003ADE  ECB8  F022         	call	_CommandAvailable	;wreg free
  7556  003AE2  06E8               	decf	wreg,f,c
  7557  003AE4  A4D8               	btfss	status,2,c
  7558  003AE6  D00B               	goto	l823
  7559                           
  7560                           ;FastBuggy17_Main_Code_TUNING.c: 472: if(GetCommand() == 0x05) {
  7561  003AE8  ECF4  F022         	call	_GetCommand	;wreg free
  7562  003AEC  0A05               	xorlw	5
  7563  003AEE  A4D8               	btfss	status,2,c
  7564  003AF0  D01F               	goto	l7243
  7565  003AF2  D01B               	goto	l7237
  7566                           
  7567                           ;FastBuggy17_Main_Code_TUNING.c: 473: return(1);
  7568  003AF4  D022               	goto	l825
  7569                           
  7570                           ;FastBuggy17_Main_Code_TUNING.c: 474: }
  7571  003AF6  D01F               	goto	l7247
  7572  003AF8  D01B               	goto	l7243
  7573                           
  7574                           ;FastBuggy17_Main_Code_TUNING.c: 475: else {
  7575                           ;FastBuggy17_Main_Code_TUNING.c: 476: return(0);
  7576  003AFA  D01F               	goto	l825
  7577                           
  7578                           ;FastBuggy17_Main_Code_TUNING.c: 477: }
  7579                           ;FastBuggy17_Main_Code_TUNING.c: 478: }
  7580  003AFC  D01C               	goto	l7247
  7581  003AFE                     l823:
  7582                           
  7583                           ;FastBuggy17_Main_Code_TUNING.c: 479: else if(PORTBbits.RB1 == 0) {
  7584  003AFE  B281               	btfsc	3969,1,c	;volatile
  7585  003B00  D003               	goto	l828
  7586  003B02  D016               	goto	l7243
  7587                           
  7588                           ;FastBuggy17_Main_Code_TUNING.c: 480: return(0);
  7589  003B04  D01A               	goto	l825
  7590                           
  7591                           ;FastBuggy17_Main_Code_TUNING.c: 481: }
  7592  003B06  D017               	goto	l7247
  7593  003B08                     l828:
  7594                           
  7595                           ;FastBuggy17_Main_Code_TUNING.c: 482: else if(PORTBbits.RB1 == 1) {
  7596  003B08  A281               	btfss	3969,1,c	;volatile
  7597  003B0A  D015               	goto	l7247
  7598                           
  7599                           ;FastBuggy17_Main_Code_TUNING.c: 483: ResetMillis2();
  7600  003B0C  ECE6  F022         	call	_ResetMillis2	;wreg free
  7601                           
  7602                           ;FastBuggy17_Main_Code_TUNING.c: 484: while(ReadMillis2() < 10);
  7603  003B10  D000               	goto	l7235
  7604  003B12                     l7235:
  7605  003B12  ECEB  F022         	call	_ReadMillis2	;wreg free
  7606  003B16  0100               	movlb	0	; () banked
  7607  003B18  5171               	movf	(?_ReadMillis2+1)& (0+255),w,b
  7608  003B1A  E105               	bnz	u7090
  7609  003B1C  0E0A               	movlw	10
  7610  003B1E  0100               	movlb	0	; () banked
  7611  003B20  5D70               	subwf	?_ReadMillis2& (0+255),w,b
  7612  003B22  A0D8               	btfss	status,0,c
  7613  003B24  D7F6               	goto	l7235
  7614  003B26                     u7090:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;FastBuggy17_Main_Code_TUNING.c: 485: if(PORTBbits.RB1 == 1) {
  7618  003B26  A281               	btfss	3969,1,c	;volatile
  7619  003B28  D003               	goto	l7243
  7620  003B2A                     l7237:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;FastBuggy17_Main_Code_TUNING.c: 486: return(1);
  7624  003B2A  0E01               	movlw	1
  7625                           
  7626                           ; BSR set to: 0
  7627  003B2C  D006               	goto	l825
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;FastBuggy17_Main_Code_TUNING.c: 487: }
  7631  003B2E  D003               	goto	l7247
  7632  003B30                     l7243:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;FastBuggy17_Main_Code_TUNING.c: 488: else {
  7636                           ;FastBuggy17_Main_Code_TUNING.c: 489: return(0);
  7637  003B30  0E00               	movlw	0
  7638                           
  7639                           ; BSR set to: 0
  7640  003B32  D003               	goto	l825
  7641                           
  7642                           ; BSR set to: 0
  7643                           
  7644                           ; BSR set to: 0
  7645                           
  7646                           ; BSR set to: 0
  7647  003B34  D000               	goto	l7247
  7648  003B36                     l7247:
  7649                           
  7650                           ;FastBuggy17_Main_Code_TUNING.c: 490: }
  7651                           ;FastBuggy17_Main_Code_TUNING.c: 491: }
  7652                           ;FastBuggy17_Main_Code_TUNING.c: 493: return(0);
  7653  003B36  0E00               	movlw	0
  7654  003B38  D000               	goto	l825
  7655  003B3A                     l825:
  7656  003B3A  0012               	return		;funcret
  7657  003B3C                     __end_of_PB1pressed:
  7658                           	opt stack 0
  7659                           prodh	equ	0xFF4
  7660                           prodl	equ	0xFF3
  7661                           intcon	equ	0xFF2
  7662                           postinc0	equ	0xFEE
  7663                           wreg	equ	0xFE8
  7664                           indf2	equ	0xFDF
  7665                           postinc2	equ	0xFDE
  7666                           postdec2	equ	0xFDD
  7667                           fsr2h	equ	0xFDA
  7668                           fsr2l	equ	0xFD9
  7669                           status	equ	0xFD8
  7670                           
  7671 ;; *************** function _ResetMillis2 *****************
  7672 ;; Defined at:
  7673 ;;		line 39 in file "MillisecondTimer.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;		None
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;		None               void
  7680 ;; Registers used:
  7681 ;;		wreg, status,2
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;Total ram usage:        0 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    7
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_PB1pressed
  7698 ;;		_PB2pressed
  7699 ;;		_main
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text49
  7704  0045CC                     __ptext49:
  7705                           	opt stack 0
  7706  0045CC                     _ResetMillis2:
  7707                           	opt stack 23
  7708                           
  7709                           ;MillisecondTimer.c: 41: millisecond_COUNT2 = 0;
  7710                           
  7711                           ;incstack = 0
  7712  0045CC  0E00               	movlw	0
  7713  0045CE  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  7714  0045D0  0E00               	movlw	0
  7715  0045D2  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  7716  0045D4  0012               	return		;funcret
  7717  0045D6                     __end_of_ResetMillis2:
  7718                           	opt stack 0
  7719                           prodh	equ	0xFF4
  7720                           prodl	equ	0xFF3
  7721                           intcon	equ	0xFF2
  7722                           postinc0	equ	0xFEE
  7723                           wreg	equ	0xFE8
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           postdec2	equ	0xFDD
  7727                           fsr2h	equ	0xFDA
  7728                           fsr2l	equ	0xFD9
  7729                           status	equ	0xFD8
  7730                           
  7731 ;; *************** function _ReadMillis2 *****************
  7732 ;; Defined at:
  7733 ;;		line 19 in file "MillisecondTimer.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;		None
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  2   16[BANK0 ] unsigned int 
  7740 ;; Registers used:
  7741 ;;		None
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;Total ram usage:        2 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    7
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_PB1pressed
  7758 ;;		_PB2pressed
  7759 ;;		_main
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text50
  7764  0045D6                     __ptext50:
  7765                           	opt stack 0
  7766  0045D6                     _ReadMillis2:
  7767                           	opt stack 23
  7768                           
  7769                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  7770                           
  7771                           ;incstack = 0
  7772  0045D6  C011  F070         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  7773  0045DA  C012  F071         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  7774  0045DE  0012               	return		;funcret
  7775  0045E0                     __end_of_ReadMillis2:
  7776                           	opt stack 0
  7777                           prodh	equ	0xFF4
  7778                           prodl	equ	0xFF3
  7779                           intcon	equ	0xFF2
  7780                           postinc0	equ	0xFEE
  7781                           wreg	equ	0xFE8
  7782                           indf2	equ	0xFDF
  7783                           postinc2	equ	0xFDE
  7784                           postdec2	equ	0xFDD
  7785                           fsr2h	equ	0xFDA
  7786                           fsr2l	equ	0xFD9
  7787                           status	equ	0xFD8
  7788                           
  7789 ;; *************** function _GetCommand *****************
  7790 ;; Defined at:
  7791 ;;		line 355 in file "Wireless.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      unsigned char 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;Total ram usage:        0 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    8
  7812 ;; This function calls:
  7813 ;;		_Read1USART
  7814 ;; This function is called by:
  7815 ;;		_PB1pressed
  7816 ;;		_PB2pressed
  7817 ;;		_main
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text51
  7822  0045E8                     __ptext51:
  7823                           	opt stack 0
  7824  0045E8                     _GetCommand:
  7825                           	opt stack 21
  7826                           
  7827                           ;Wireless.c: 357: return(Read1USART());
  7828                           
  7829                           ;incstack = 0
  7830  0045E8  EC28  F021         	call	_Read1USART	;wreg free
  7831  0045EC  D000               	goto	l426
  7832  0045EE                     l426:
  7833  0045EE  0012               	return		;funcret
  7834  0045F0                     __end_of_GetCommand:
  7835                           	opt stack 0
  7836                           prodh	equ	0xFF4
  7837                           prodl	equ	0xFF3
  7838                           intcon	equ	0xFF2
  7839                           postinc0	equ	0xFEE
  7840                           wreg	equ	0xFE8
  7841                           indf2	equ	0xFDF
  7842                           postinc2	equ	0xFDE
  7843                           postdec2	equ	0xFDD
  7844                           fsr2h	equ	0xFDA
  7845                           fsr2l	equ	0xFD9
  7846                           status	equ	0xFD8
  7847                           
  7848 ;; *************** function _Read1USART *****************
  7849 ;; Defined at:
  7850 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  data            1   16[BANK0 ] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      unsigned char 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;Total ram usage:        1 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    7
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_GetCommand
  7875 ;;		_SetPIDValues
  7876 ;;		_WirelessRx_ISR
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text52
  7881  004250                     __ptext52:
  7882                           	opt stack 0
  7883  004250                     _Read1USART:
  7884                           	opt stack 22
  7885                           
  7886                           ;incstack = 0
  7887  004250  0EF2               	movlw	242
  7888  004252  1619               	andwf	_USART1_Status,f,c
  7889  004254  ACAB               	btfss	4011,6,c	;volatile
  7890  004256  D005               	goto	l1207
  7891  004258  9019               	bcf	_USART1_Status,0,c
  7892  00425A  A0AB               	btfss	4011,0,c	;volatile
  7893  00425C  D002               	goto	l1207
  7894  00425E  8019               	bsf	_USART1_Status,0,c
  7895  004260  D000               	goto	l1207
  7896  004262                     l1207:
  7897  004262  B4AB               	btfsc	4011,2,c	;volatile
  7898  004264  8419               	bsf	_USART1_Status,2,c
  7899  004266  B2AB               	btfsc	4011,1,c	;volatile
  7900  004268  8619               	bsf	_USART1_Status,3,c
  7901  00426A  CFAE F070          	movff	4014,Read1USART@data	;volatile
  7902  00426E  0100               	movlb	0	; () banked
  7903  004270  5170               	movf	Read1USART@data& (0+255),w,b
  7904  004272  D000               	goto	l1211
  7905  004274                     l1211:
  7906                           
  7907                           ; BSR set to: 0
  7908  004274  0012               	return		;funcret
  7909  004276                     __end_of_Read1USART:
  7910                           	opt stack 0
  7911                           prodh	equ	0xFF4
  7912                           prodl	equ	0xFF3
  7913                           intcon	equ	0xFF2
  7914                           postinc0	equ	0xFEE
  7915                           wreg	equ	0xFE8
  7916                           indf2	equ	0xFDF
  7917                           postinc2	equ	0xFDE
  7918                           postdec2	equ	0xFDD
  7919                           fsr2h	equ	0xFDA
  7920                           fsr2l	equ	0xFD9
  7921                           status	equ	0xFD8
  7922                           
  7923 ;; *************** function _CommandAvailable *****************
  7924 ;; Defined at:
  7925 ;;		line 351 in file "Wireless.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;		None
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1    wreg      unsigned char 
  7932 ;; Registers used:
  7933 ;;		wreg
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:    7
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_PB1pressed
  7950 ;;		_PB2pressed
  7951 ;;		_main
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text53
  7956  004570                     __ptext53:
  7957                           	opt stack 0
  7958  004570                     _CommandAvailable:
  7959                           	opt stack 22
  7960                           
  7961                           ;Wireless.c: 352: return((PIR1bits.RCIF));
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;incstack = 0
  7965  004570  AA9E               	btfss	3998,5,c	;volatile
  7966  004572  D002               	goto	u6560
  7967  004574  0E01               	movlw	1
  7968  004576  D002               	goto	l423
  7969  004578                     u6560:
  7970  004578  0E00               	movlw	0
  7971  00457A  D000               	goto	l423
  7972  00457C                     l423:
  7973  00457C  0012               	return		;funcret
  7974  00457E                     __end_of_CommandAvailable:
  7975                           	opt stack 0
  7976                           prodh	equ	0xFF4
  7977                           prodl	equ	0xFF3
  7978                           intcon	equ	0xFF2
  7979                           postinc0	equ	0xFEE
  7980                           wreg	equ	0xFE8
  7981                           indf2	equ	0xFDF
  7982                           postinc2	equ	0xFDE
  7983                           postdec2	equ	0xFDD
  7984                           fsr2h	equ	0xFDA
  7985                           fsr2l	equ	0xFD9
  7986                           status	equ	0xFD8
  7987                           
  7988 ;; *************** function _FlashLEDS *****************
  7989 ;; Defined at:
  7990 ;;		line 458 in file "FastBuggy17_Main_Code_TUNING.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;		None               void
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    8
  8011 ;; This function calls:
  8012 ;;		_Delay10KTCYx
  8013 ;; This function is called by:
  8014 ;;		_GenerateCalibration
  8015 ;;		_LoadCalibration
  8016 ;;		_main
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text54
  8021  0041D8                     __ptext54:
  8022                           	opt stack 0
  8023  0041D8                     _FlashLEDS:
  8024                           	opt stack 20
  8025                           
  8026                           ;FastBuggy17_Main_Code_TUNING.c: 459: LATJ = 0x00;
  8027                           
  8028                           ;incstack = 0
  8029  0041D8  0E00               	movlw	0
  8030  0041DA  6E91               	movwf	3985,c	;volatile
  8031                           
  8032                           ;FastBuggy17_Main_Code_TUNING.c: 460: LATJ = 0x1F;
  8033  0041DC  0E1F               	movlw	31
  8034  0041DE  6E91               	movwf	3985,c	;volatile
  8035                           
  8036                           ;FastBuggy17_Main_Code_TUNING.c: 461: Delay10KTCYx(75);
  8037  0041E0  0E4B               	movlw	75
  8038  0041E2  ECA7  F021         	call	_Delay10KTCYx
  8039                           
  8040                           ;FastBuggy17_Main_Code_TUNING.c: 462: LATJ = 0x00;
  8041  0041E6  0E00               	movlw	0
  8042  0041E8  6E91               	movwf	3985,c	;volatile
  8043                           
  8044                           ;FastBuggy17_Main_Code_TUNING.c: 463: Delay10KTCYx(75);
  8045  0041EA  0E4B               	movlw	75
  8046  0041EC  ECA7  F021         	call	_Delay10KTCYx
  8047                           
  8048                           ;FastBuggy17_Main_Code_TUNING.c: 464: LATJ = 0x1F;
  8049  0041F0  0E1F               	movlw	31
  8050  0041F2  6E91               	movwf	3985,c	;volatile
  8051                           
  8052                           ;FastBuggy17_Main_Code_TUNING.c: 465: Delay10KTCYx(75);
  8053  0041F4  0E4B               	movlw	75
  8054  0041F6  ECA7  F021         	call	_Delay10KTCYx
  8055                           
  8056                           ;FastBuggy17_Main_Code_TUNING.c: 466: LATJ = 0x00;
  8057  0041FA  0E00               	movlw	0
  8058  0041FC  6E91               	movwf	3985,c	;volatile
  8059  0041FE  0012               	return		;funcret
  8060  004200                     __end_of_FlashLEDS:
  8061                           	opt stack 0
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           wreg	equ	0xFE8
  8067                           indf2	equ	0xFDF
  8068                           postinc2	equ	0xFDE
  8069                           postdec2	equ	0xFDD
  8070                           fsr2h	equ	0xFDA
  8071                           fsr2l	equ	0xFD9
  8072                           status	equ	0xFD8
  8073                           
  8074 ;; *************** function _Delay10KTCYx *****************
  8075 ;; Defined at:
  8076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  unit            1    wreg     unsigned char 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  unit            1   17[BANK0 ] unsigned char 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;		None               void
  8083 ;; Registers used:
  8084 ;;		wreg
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8094 ;;Total ram usage:        2 bytes
  8095 ;; Hardware stack levels used:    1
  8096 ;; Hardware stack levels required when called:    7
  8097 ;; This function calls:
  8098 ;;		Nothing
  8099 ;; This function is called by:
  8100 ;;		_FlashLEDS
  8101 ;;		_GenerateCalibration
  8102 ;;		_main
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text55
  8107  00434E                     __ptext55:
  8108                           	opt stack 0
  8109  00434E                     _Delay10KTCYx:
  8110                           	opt stack 20
  8111                           
  8112                           ;incstack = 0
  8113                           ;Delay10KTCYx@unit stored from wreg
  8114  00434E  0100               	movlb	0	; () banked
  8115  004350  6F71               	movwf	Delay10KTCYx@unit& (0+255),b
  8116  004352                     
  8117                           ; BSR set to: 0
  8118  004352  0E0D               	movlw	13
  8119  004354  0100               	movlb	0	; () banked
  8120  004356  6F70               	movwf	??_Delay10KTCYx& (0+255),b
  8121  004358  0EFC               	movlw	252
  8122  00435A                     u8787:
  8123  00435A  2EE8               	decfsz	wreg,f,c
  8124  00435C  D7FE               	goto	u8787
  8125  00435E  2F70               	decfsz	??_Delay10KTCYx& (0+255),f,b
  8126  004360  D7FC               	goto	u8787
  8127  004362  0100               	movlb	0	; () banked
  8128  004364  2F71               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  8129  004366  D7F5               	goto	l6933
  8130  004368  D000               	goto	l1450
  8131  00436A                     l1450:
  8132                           
  8133                           ; BSR set to: 0
  8134  00436A  0012               	return		;funcret
  8135  00436C                     __end_of_Delay10KTCYx:
  8136                           	opt stack 0
  8137                           prodh	equ	0xFF4
  8138                           prodl	equ	0xFF3
  8139                           intcon	equ	0xFF2
  8140                           postinc0	equ	0xFEE
  8141                           wreg	equ	0xFE8
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           fsr2h	equ	0xFDA
  8146                           fsr2l	equ	0xFD9
  8147                           status	equ	0xFD8
  8148                           
  8149 ;; *************** function _CalibrateThreshold *****************
  8150 ;; Defined at:
  8151 ;;		line 541 in file "FastBuggy17_Main_Code_TUNING.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  sum             1    0        unsigned char 
  8156 ;;  index           1    0        unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;		None               void
  8159 ;; Registers used:
  8160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;Total ram usage:        0 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:   10
  8173 ;; This function calls:
  8174 ;;		_BusyADC
  8175 ;;		_BusySensorAcq
  8176 ;;		_CalculateSensorStatuses
  8177 ;;		_ConvertADC
  8178 ;;		_DisplaySensorStatuses
  8179 ;;		_GetSensorReadings
  8180 ;;		_NormaliseSensorReadings
  8181 ;;		_ReadADC
  8182 ;;		_SetADCChannel
  8183 ;; This function is called by:
  8184 ;;		_GenerateCalibration
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text56
  8189  003B3C                     __ptext56:
  8190                           	opt stack 0
  8191  003B3C                     _CalibrateThreshold:
  8192                           	opt stack 18
  8193                           
  8194                           ;FastBuggy17_Main_Code_TUNING.c: 542: unsigned char index, sum;
  8195                           ;FastBuggy17_Main_Code_TUNING.c: 544: LATJ = 0x00;
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;incstack = 0
  8199  003B3C  0E00               	movlw	0
  8200  003B3E  6E91               	movwf	3985,c	;volatile
  8201                           
  8202                           ;FastBuggy17_Main_Code_TUNING.c: 547: SetADCChannel(5);
  8203  003B40  0E05               	movlw	5
  8204  003B42  EC6B  F016         	call	_SetADCChannel
  8205                           
  8206                           ;FastBuggy17_Main_Code_TUNING.c: 548: ConvertADC();
  8207  003B46  EC09  F023         	call	_ConvertADC	;wreg free
  8208                           
  8209                           ;FastBuggy17_Main_Code_TUNING.c: 549: while(BusyADC());
  8210  003B4A  D000               	goto	l7273
  8211  003B4C                     l7273:
  8212  003B4C  ECBF  F022         	call	_BusyADC	;wreg free
  8213  003B50  0900               	iorlw	0
  8214  003B52  A4D8               	btfss	status,2,c
  8215  003B54  D7FB               	goto	l7273
  8216                           
  8217                           ;FastBuggy17_Main_Code_TUNING.c: 550: sensor_threshold = ReadADC();
  8218  003B56  EC26  F022         	call	_ReadADC	;wreg free
  8219  003B5A  C070  F028         	movff	?_ReadADC,_sensor_threshold
  8220  003B5E  C071  F029         	movff	?_ReadADC+1,_sensor_threshold+1
  8221                           
  8222                           ;FastBuggy17_Main_Code_TUNING.c: 553: GetSensorReadings();
  8223  003B62  ECFA  F021         	call	_GetSensorReadings	;wreg free
  8224                           
  8225                           ;FastBuggy17_Main_Code_TUNING.c: 555: while(BusySensorAcq());
  8226  003B66  D000               	goto	l7279
  8227  003B68                     l7279:
  8228  003B68  EC8A  F022         	call	_BusySensorAcq	;wreg free
  8229  003B6C  0900               	iorlw	0
  8230  003B6E  A4D8               	btfss	status,2,c
  8231  003B70  D7FB               	goto	l7279
  8232                           
  8233                           ;FastBuggy17_Main_Code_TUNING.c: 557: NormaliseSensorReadings();
  8234  003B72  EC5D  F01B         	call	_NormaliseSensorReadings	;wreg free
  8235                           
  8236                           ;FastBuggy17_Main_Code_TUNING.c: 559: CalculateSensorStatuses();
  8237  003B76  ECF4  F015         	call	_CalculateSensorStatuses	;wreg free
  8238                           
  8239                           ;FastBuggy17_Main_Code_TUNING.c: 561: DisplaySensorStatuses(sensor_status);
  8240  003B7A  0E23               	movlw	low _sensor_status
  8241  003B7C  0100               	movlb	0	; () banked
  8242  003B7E  6F70               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  8243  003B80  0E00               	movlw	high _sensor_status
  8244  003B82  0100               	movlb	0	; () banked
  8245  003B84  6F71               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  8246  003B86  ECC6  F01D         	call	_DisplaySensorStatuses	;wreg free
  8247  003B8A  0012               	return		;funcret
  8248  003B8C                     __end_of_CalibrateThreshold:
  8249                           	opt stack 0
  8250                           prodh	equ	0xFF4
  8251                           prodl	equ	0xFF3
  8252                           intcon	equ	0xFF2
  8253                           postinc0	equ	0xFEE
  8254                           wreg	equ	0xFE8
  8255                           indf2	equ	0xFDF
  8256                           postinc2	equ	0xFDE
  8257                           postdec2	equ	0xFDD
  8258                           fsr2h	equ	0xFDA
  8259                           fsr2l	equ	0xFD9
  8260                           status	equ	0xFD8
  8261                           
  8262 ;; *************** function _ReadADC *****************
  8263 ;; Defined at:
  8264 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  2   16[BANK0 ] int 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;Total ram usage:        4 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    7
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_CalibrateThreshold
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text57
  8293  00444C                     __ptext57:
  8294                           	opt stack 0
  8295  00444C                     _ReadADC:
  8296                           	opt stack 20
  8297                           
  8298                           ;incstack = 0
  8299  00444C  50C4               	movf	4036,w,c	;volatile
  8300  00444E  0100               	movlb	0	; () banked
  8301  004450  6F72               	movwf	??_ReadADC& (0+255),b
  8302  004452  50C3               	movf	4035,w,c	;volatile
  8303  004454  0100               	movlb	0	; () banked
  8304  004456  6F70               	movwf	?_ReadADC& (0+255),b
  8305  004458  C072  F071         	movff	??_ReadADC,?_ReadADC+1
  8306  00445C  D000               	goto	l1040
  8307  00445E                     l1040:
  8308                           
  8309                           ; BSR set to: 0
  8310  00445E  0012               	return		;funcret
  8311  004460                     __end_of_ReadADC:
  8312                           	opt stack 0
  8313                           prodh	equ	0xFF4
  8314                           prodl	equ	0xFF3
  8315                           intcon	equ	0xFF2
  8316                           postinc0	equ	0xFEE
  8317                           wreg	equ	0xFE8
  8318                           indf2	equ	0xFDF
  8319                           postinc2	equ	0xFDE
  8320                           postdec2	equ	0xFDD
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8
  8324                           
  8325 ;; *************** function _NormaliseSensorReadings *****************
  8326 ;; Defined at:
  8327 ;;		line 344 in file "FastBuggy17_Main_Code_TUNING.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  index           1   20[BANK0 ] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;		None               void
  8334 ;; Registers used:
  8335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;Total ram usage:        5 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    7
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_CalibrateThreshold
  8352 ;;		_main
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text58
  8357  0036BA                     __ptext58:
  8358                           	opt stack 0
  8359  0036BA                     _NormaliseSensorReadings:
  8360                           	opt stack 23
  8361                           
  8362                           ;FastBuggy17_Main_Code_TUNING.c: 345: unsigned char index;
  8363                           ;FastBuggy17_Main_Code_TUNING.c: 347: for(index = 0; index < 5; index++) {
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;incstack = 0
  8367  0036BA  0E00               	movlw	0
  8368  0036BC  0100               	movlb	0	; () banked
  8369  0036BE  6F74               	movwf	NormaliseSensorReadings@index& (0+255),b
  8370  0036C0                     l6875:
  8371                           
  8372                           ; BSR set to: 0
  8373  0036C0  0E04               	movlw	4
  8374  0036C2  0100               	movlb	0	; () banked
  8375  0036C4  6574               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  8376  0036C6  D001               	goto	l6879
  8377                           
  8378                           ; BSR set to: 0
  8379  0036C8  D032               	goto	l772
  8380  0036CA                     l6879:
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;FastBuggy17_Main_Code_TUNING.c: 349: sensor_readings_normalised[index] = sensor_reading
      +                          s_raw[index] + sensor_offsets[index];
  8384  0036CA  0100               	movlb	0	; () banked
  8385  0036CC  5174               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8386  0036CE  0D02               	mullw	2
  8387  0036D0  0EDF               	movlw	low _sensor_offsets
  8388  0036D2  24F3               	addwf	prodl,w,c
  8389  0036D4  6ED9               	movwf	fsr2l,c
  8390  0036D6  0E00               	movlw	high _sensor_offsets
  8391  0036D8  20F4               	addwfc	prodh,w,c
  8392  0036DA  6EDA               	movwf	fsr2h,c
  8393  0036DC  CFDE F070          	movff	postinc2,??_NormaliseSensorReadings
  8394  0036E0  CFDD F071          	movff	postdec2,??_NormaliseSensorReadings+1
  8395  0036E4  0100               	movlb	0	; () banked
  8396  0036E6  5174               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8397  0036E8  0D02               	mullw	2
  8398  0036EA  0ECB               	movlw	low _sensor_readings_raw
  8399  0036EC  24F3               	addwf	prodl,w,c
  8400  0036EE  6ED9               	movwf	fsr2l,c
  8401  0036F0  0E00               	movlw	high _sensor_readings_raw
  8402  0036F2  20F4               	addwfc	prodh,w,c
  8403  0036F4  6EDA               	movwf	fsr2h,c
  8404  0036F6  CFDE F072          	movff	postinc2,??_NormaliseSensorReadings+2
  8405  0036FA  CFDD F073          	movff	postdec2,??_NormaliseSensorReadings+3
  8406  0036FE  0100               	movlb	0	; () banked
  8407  003700  5170               	movf	??_NormaliseSensorReadings& (0+255),w,b
  8408  003702  0100               	movlb	0	; () banked
  8409  003704  2772               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  8410  003706  0100               	movlb	0	; () banked
  8411  003708  5171               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  8412  00370A  0100               	movlb	0	; () banked
  8413  00370C  2373               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  8414  00370E  0100               	movlb	0	; () banked
  8415  003710  5174               	movf	NormaliseSensorReadings@index& (0+255),w,b
  8416  003712  0D02               	mullw	2
  8417  003714  0E32               	movlw	low _sensor_readings_normalised
  8418  003716  24F3               	addwf	prodl,w,c
  8419  003718  6ED9               	movwf	fsr2l,c
  8420  00371A  0E01               	movlw	high _sensor_readings_normalised
  8421  00371C  20F4               	addwfc	prodh,w,c
  8422  00371E  6EDA               	movwf	fsr2h,c
  8423  003720  C072  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  8424  003724  C073  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  8425                           
  8426                           ; BSR set to: 0
  8427  003728  0100               	movlb	0	; () banked
  8428  00372A  2B74               	incf	NormaliseSensorReadings@index& (0+255),f,b
  8429  00372C  D7C9               	goto	l6875
  8430  00372E                     l772:
  8431                           
  8432                           ; BSR set to: 0
  8433  00372E  0012               	return		;funcret
  8434  003730                     __end_of_NormaliseSensorReadings:
  8435                           	opt stack 0
  8436                           prodh	equ	0xFF4
  8437                           prodl	equ	0xFF3
  8438                           intcon	equ	0xFF2
  8439                           postinc0	equ	0xFEE
  8440                           wreg	equ	0xFE8
  8441                           indf2	equ	0xFDF
  8442                           postinc2	equ	0xFDE
  8443                           postdec2	equ	0xFDD
  8444                           fsr2h	equ	0xFDA
  8445                           fsr2l	equ	0xFD9
  8446                           status	equ	0xFD8
  8447                           
  8448 ;; *************** function _DisplaySensorStatuses *****************
  8449 ;; Defined at:
  8450 ;;		line 434 in file "FastBuggy17_Main_Code_TUNING.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  status_array    2   16[BANK0 ] PTR const unsigned char 
  8453 ;;		 -> sensor_status(5), 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  index           1   20[BANK0 ] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;		None               void
  8458 ;; Registers used:
  8459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;Total ram usage:        5 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    7
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_CalibrateThreshold
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text59
  8481  003B8C                     __ptext59:
  8482                           	opt stack 0
  8483  003B8C                     _DisplaySensorStatuses:
  8484                           	opt stack 20
  8485                           
  8486                           ;FastBuggy17_Main_Code_TUNING.c: 435: unsigned char index;
  8487                           ;FastBuggy17_Main_Code_TUNING.c: 437: for (index = 0; index < 5; index++) {
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;incstack = 0
  8491  003B8C  0E00               	movlw	0
  8492  003B8E  0100               	movlb	0	; () banked
  8493  003B90  6F74               	movwf	DisplaySensorStatuses@index& (0+255),b
  8494  003B92                     l6923:
  8495                           
  8496                           ; BSR set to: 0
  8497  003B92  0E04               	movlw	4
  8498  003B94  0100               	movlb	0	; () banked
  8499  003B96  6574               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  8500  003B98  D001               	goto	l6927
  8501                           
  8502                           ; BSR set to: 0
  8503  003B9A  D01F               	goto	l811
  8504  003B9C                     l6927:
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;FastBuggy17_Main_Code_TUNING.c: 438: LATJ ^= *(status_array + index) << index;
  8508  003B9C  C074  F072         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  8509  003BA0  0100               	movlb	0	; () banked
  8510  003BA2  5174               	movf	DisplaySensorStatuses@index& (0+255),w,b
  8511  003BA4  0D01               	mullw	1
  8512  003BA6  50F3               	movf	prodl,w,c
  8513  003BA8  0100               	movlb	0	; () banked
  8514  003BAA  2570               	addwf	DisplaySensorStatuses@status_array& (0+255),w,b
  8515  003BAC  6ED9               	movwf	fsr2l,c
  8516  003BAE  50F4               	movf	prodh,w,c
  8517  003BB0  0100               	movlb	0	; () banked
  8518  003BB2  2171               	addwfc	(DisplaySensorStatuses@status_array+1)& (0+255),w,b
  8519  003BB4  6EDA               	movwf	fsr2h,c
  8520  003BB6  50DF               	movf	indf2,w,c
  8521  003BB8  0100               	movlb	0	; () banked
  8522  003BBA  6F73               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  8523  003BBC  0100               	movlb	0	; () banked
  8524  003BBE  2B72               	incf	??_DisplaySensorStatuses& (0+255),f,b
  8525  003BC0  D003               	goto	u6704
  8526  003BC2                     u6705:
  8527  003BC2  0100               	movlb	0	; () banked
  8528  003BC4  90D8               	bcf	status,0,c
  8529  003BC6  3773               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  8530  003BC8                     u6704:
  8531  003BC8  0100               	movlb	0	; () banked
  8532  003BCA  2F72               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  8533  003BCC  D7FA               	goto	u6705
  8534  003BCE  0100               	movlb	0	; () banked
  8535  003BD0  5173               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  8536  003BD2  1A91               	xorwf	3985,f,c	;volatile
  8537                           
  8538                           ; BSR set to: 0
  8539  003BD4  0100               	movlb	0	; () banked
  8540  003BD6  2B74               	incf	DisplaySensorStatuses@index& (0+255),f,b
  8541  003BD8  D7DC               	goto	l6923
  8542  003BDA                     l811:
  8543                           
  8544                           ; BSR set to: 0
  8545  003BDA  0012               	return		;funcret
  8546  003BDC                     __end_of_DisplaySensorStatuses:
  8547                           	opt stack 0
  8548                           prodh	equ	0xFF4
  8549                           prodl	equ	0xFF3
  8550                           intcon	equ	0xFF2
  8551                           postinc0	equ	0xFEE
  8552                           wreg	equ	0xFE8
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           fsr2h	equ	0xFDA
  8557                           fsr2l	equ	0xFD9
  8558                           status	equ	0xFD8
  8559                           
  8560 ;; *************** function _CalculateSensorStatuses *****************
  8561 ;; Defined at:
  8562 ;;		line 356 in file "FastBuggy17_Main_Code_TUNING.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;		None
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  index           1   19[BANK0 ] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;		None               void
  8569 ;; Registers used:
  8570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;Total ram usage:        4 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:    7
  8583 ;; This function calls:
  8584 ;;		Nothing
  8585 ;; This function is called by:
  8586 ;;		_CalibrateThreshold
  8587 ;;		_main
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text60
  8592  002BE8                     __ptext60:
  8593                           	opt stack 0
  8594  002BE8                     _CalculateSensorStatuses:
  8595                           	opt stack 20
  8596                           
  8597                           ;FastBuggy17_Main_Code_TUNING.c: 357: unsigned char index;
  8598                           ;FastBuggy17_Main_Code_TUNING.c: 360: if(line_mode == 1) {
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;incstack = 0
  8602  002BE8  042A               	decf	_line_mode,w,c
  8603  002BEA  A4D8               	btfss	status,2,c
  8604  002BEC  D038               	goto	l6903
  8605                           
  8606                           ;FastBuggy17_Main_Code_TUNING.c: 361: for(index = 0; index < 5; index++) {
  8607  002BEE  0E00               	movlw	0
  8608  002BF0  0100               	movlb	0	; () banked
  8609  002BF2  6F73               	movwf	CalculateSensorStatuses@index& (0+255),b
  8610  002BF4                     l6889:
  8611                           
  8612                           ; BSR set to: 0
  8613  002BF4  0E04               	movlw	4
  8614  002BF6  0100               	movlb	0	; () banked
  8615  002BF8  6573               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  8616  002BFA  D001               	goto	l6893
  8617                           
  8618                           ; BSR set to: 0
  8619  002BFC  D06B               	goto	l786
  8620  002BFE                     l6893:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;FastBuggy17_Main_Code_TUNING.c: 363: if(sensor_readings_normalised[index] > sensor_thre
      +                          shold) {
  8624  002BFE  0100               	movlb	0	; () banked
  8625  002C00  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8626  002C02  0D02               	mullw	2
  8627  002C04  0E32               	movlw	low _sensor_readings_normalised
  8628  002C06  24F3               	addwf	prodl,w,c
  8629  002C08  6ED9               	movwf	fsr2l,c
  8630  002C0A  0E01               	movlw	high _sensor_readings_normalised
  8631  002C0C  20F4               	addwfc	prodh,w,c
  8632  002C0E  6EDA               	movwf	fsr2h,c
  8633  002C10  50DE               	movf	postinc2,w,c
  8634  002C12  5C28               	subwf	_sensor_threshold,w,c
  8635  002C14  5029               	movf	_sensor_threshold+1,w,c
  8636  002C16  0A80               	xorlw	128
  8637  002C18  0100               	movlb	0	; () banked
  8638  002C1A  6F72               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  8639  002C1C  50DE               	movf	postinc2,w,c
  8640  002C1E  0A80               	xorlw	128
  8641  002C20  0100               	movlb	0	; () banked
  8642  002C22  5972               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  8643  002C24  B0D8               	btfsc	status,0,c
  8644  002C26  D00B               	goto	l6897
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;FastBuggy17_Main_Code_TUNING.c: 364: sensor_status[index] = 1;
  8648  002C28  0100               	movlb	0	; () banked
  8649  002C2A  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8650  002C2C  0D01               	mullw	1
  8651  002C2E  0E23               	movlw	low _sensor_status
  8652  002C30  24F3               	addwf	prodl,w,c
  8653  002C32  6ED9               	movwf	fsr2l,c
  8654  002C34  0E00               	movlw	high _sensor_status
  8655  002C36  20F4               	addwfc	prodh,w,c
  8656  002C38  6EDA               	movwf	fsr2h,c
  8657  002C3A  0E01               	movlw	1
  8658  002C3C  D00A               	goto	L4
  8659  002C3E                     l6897:
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;FastBuggy17_Main_Code_TUNING.c: 366: else {
  8663                           ;FastBuggy17_Main_Code_TUNING.c: 367: sensor_status[index] = 0;
  8664  002C3E  0100               	movlb	0	; () banked
  8665  002C40  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8666  002C42  0D01               	mullw	1
  8667  002C44  0E23               	movlw	low _sensor_status
  8668  002C46  24F3               	addwf	prodl,w,c
  8669  002C48  6ED9               	movwf	fsr2l,c
  8670  002C4A  0E00               	movlw	high _sensor_status
  8671  002C4C  20F4               	addwfc	prodh,w,c
  8672  002C4E  6EDA               	movwf	fsr2h,c
  8673  002C50  0E00               	movlw	0
  8674  002C52                     L4:
  8675  002C52  6EDF               	movwf	indf2,c
  8676  002C54  D000               	goto	l6899
  8677  002C56                     l6899:
  8678                           
  8679                           ; BSR set to: 0
  8680  002C56  0100               	movlb	0	; () banked
  8681  002C58  2B73               	incf	CalculateSensorStatuses@index& (0+255),f,b
  8682  002C5A  D7CC               	goto	l6889
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;FastBuggy17_Main_Code_TUNING.c: 368: }
  8686                           ;FastBuggy17_Main_Code_TUNING.c: 369: }
  8687                           ;FastBuggy17_Main_Code_TUNING.c: 370: }
  8688                           
  8689                           ; BSR set to: 0
  8690  002C5C  D03B               	goto	l786
  8691  002C5E                     l6903:
  8692                           
  8693                           ;FastBuggy17_Main_Code_TUNING.c: 372: else if(line_mode == 0) {
  8694  002C5E  502A               	movf	_line_mode,w,c
  8695  002C60  A4D8               	btfss	status,2,c
  8696  002C62  D038               	goto	l786
  8697                           
  8698                           ;FastBuggy17_Main_Code_TUNING.c: 374: for(index = 0; index < 5; index++) {
  8699  002C64  0E00               	movlw	0
  8700  002C66  0100               	movlb	0	; () banked
  8701  002C68  6F73               	movwf	CalculateSensorStatuses@index& (0+255),b
  8702  002C6A                     l6907:
  8703                           
  8704                           ; BSR set to: 0
  8705  002C6A  0E04               	movlw	4
  8706  002C6C  0100               	movlb	0	; () banked
  8707  002C6E  6573               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  8708  002C70  D001               	goto	l6911
  8709                           
  8710                           ; BSR set to: 0
  8711  002C72  D030               	goto	l786
  8712  002C74                     l6911:
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;FastBuggy17_Main_Code_TUNING.c: 376: if(sensor_readings_normalised[index] < sensor_thre
      +                          shold) {
  8716  002C74  0100               	movlb	0	; () banked
  8717  002C76  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8718  002C78  0D02               	mullw	2
  8719  002C7A  0E32               	movlw	low _sensor_readings_normalised
  8720  002C7C  24F3               	addwf	prodl,w,c
  8721  002C7E  6ED9               	movwf	fsr2l,c
  8722  002C80  0E01               	movlw	high _sensor_readings_normalised
  8723  002C82  20F4               	addwfc	prodh,w,c
  8724  002C84  6EDA               	movwf	fsr2h,c
  8725  002C86  5028               	movf	_sensor_threshold,w,c
  8726  002C88  5CDE               	subwf	postinc2,w,c
  8727  002C8A  50DE               	movf	postinc2,w,c
  8728  002C8C  0A80               	xorlw	128
  8729  002C8E  0100               	movlb	0	; () banked
  8730  002C90  6F72               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  8731  002C92  5029               	movf	_sensor_threshold+1,w,c
  8732  002C94  0A80               	xorlw	128
  8733  002C96  0100               	movlb	0	; () banked
  8734  002C98  5972               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  8735  002C9A  B0D8               	btfsc	status,0,c
  8736  002C9C  D00B               	goto	l6915
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;FastBuggy17_Main_Code_TUNING.c: 377: sensor_status[index] = 1;
  8740  002C9E  0100               	movlb	0	; () banked
  8741  002CA0  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8742  002CA2  0D01               	mullw	1
  8743  002CA4  0E23               	movlw	low _sensor_status
  8744  002CA6  24F3               	addwf	prodl,w,c
  8745  002CA8  6ED9               	movwf	fsr2l,c
  8746  002CAA  0E00               	movlw	high _sensor_status
  8747  002CAC  20F4               	addwfc	prodh,w,c
  8748  002CAE  6EDA               	movwf	fsr2h,c
  8749  002CB0  0E01               	movlw	1
  8750  002CB2  D00A               	goto	L5
  8751  002CB4                     l6915:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;FastBuggy17_Main_Code_TUNING.c: 379: else {
  8755                           ;FastBuggy17_Main_Code_TUNING.c: 380: sensor_status[index] = 0;
  8756  002CB4  0100               	movlb	0	; () banked
  8757  002CB6  5173               	movf	CalculateSensorStatuses@index& (0+255),w,b
  8758  002CB8  0D01               	mullw	1
  8759  002CBA  0E23               	movlw	low _sensor_status
  8760  002CBC  24F3               	addwf	prodl,w,c
  8761  002CBE  6ED9               	movwf	fsr2l,c
  8762  002CC0  0E00               	movlw	high _sensor_status
  8763  002CC2  20F4               	addwfc	prodh,w,c
  8764  002CC4  6EDA               	movwf	fsr2h,c
  8765  002CC6  0E00               	movlw	0
  8766  002CC8                     L5:
  8767  002CC8  6EDF               	movwf	indf2,c
  8768  002CCA  D000               	goto	l6917
  8769  002CCC                     l6917:
  8770                           
  8771                           ; BSR set to: 0
  8772  002CCC  0100               	movlb	0	; () banked
  8773  002CCE  2B73               	incf	CalculateSensorStatuses@index& (0+255),f,b
  8774  002CD0  D7CC               	goto	l6907
  8775                           
  8776                           ; BSR set to: 0
  8777                           
  8778                           ; BSR set to: 0
  8779                           
  8780                           ; BSR set to: 0
  8781  002CD2  D000               	goto	l786
  8782  002CD4                     l786:
  8783  002CD4  0012               	return		;funcret
  8784  002CD6                     __end_of_CalculateSensorStatuses:
  8785                           	opt stack 0
  8786                           prodh	equ	0xFF4
  8787                           prodl	equ	0xFF3
  8788                           intcon	equ	0xFF2
  8789                           postinc0	equ	0xFEE
  8790                           wreg	equ	0xFE8
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           postdec2	equ	0xFDD
  8794                           fsr2h	equ	0xFDA
  8795                           fsr2l	equ	0xFD9
  8796                           status	equ	0xFD8
  8797                           
  8798 ;; *************** function _BusyADC *****************
  8799 ;; Defined at:
  8800 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;		None
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;		None
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      unsigned char 
  8807 ;; Registers used:
  8808 ;;		wreg
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;Total ram usage:        0 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    7
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_CalibrateThreshold
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text61
  8829  00457E                     __ptext61:
  8830                           	opt stack 0
  8831  00457E                     _BusyADC:
  8832                           	opt stack 20
  8833                           
  8834                           ;incstack = 0
  8835  00457E  A2C2               	btfss	4034,1,c	;volatile
  8836  004580  D002               	goto	u6720
  8837  004582  0E01               	movlw	1
  8838  004584  D002               	goto	l1010
  8839  004586                     u6720:
  8840  004586  0E00               	movlw	0
  8841  004588  D000               	goto	l1010
  8842  00458A                     l1010:
  8843  00458A  0012               	return		;funcret
  8844  00458C                     __end_of_BusyADC:
  8845                           	opt stack 0
  8846                           prodh	equ	0xFF4
  8847                           prodl	equ	0xFF3
  8848                           intcon	equ	0xFF2
  8849                           postinc0	equ	0xFEE
  8850                           wreg	equ	0xFE8
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function _CalibrateOffsets *****************
  8859 ;; Defined at:
  8860 ;;		line 525 in file "FastBuggy17_Main_Code_TUNING.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;  index           1   21[BANK0 ] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;		None               void
  8867 ;; Registers used:
  8868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;Total ram usage:        3 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:   10
  8881 ;; This function calls:
  8882 ;;		_BusySensorAcq
  8883 ;;		_GetSensorReadings
  8884 ;; This function is called by:
  8885 ;;		_GenerateCalibration
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text62
  8890  003730                     __ptext62:
  8891                           	opt stack 0
  8892  003730                     _CalibrateOffsets:
  8893                           	opt stack 18
  8894                           
  8895                           ;FastBuggy17_Main_Code_TUNING.c: 526: unsigned char index;
  8896                           ;FastBuggy17_Main_Code_TUNING.c: 528: GetSensorReadings();
  8897                           
  8898                           ;incstack = 0
  8899  003730  ECFA  F021         	call	_GetSensorReadings	;wreg free
  8900                           
  8901                           ;FastBuggy17_Main_Code_TUNING.c: 530: while(BusySensorAcq());
  8902  003734  D000               	goto	l7253
  8903  003736                     l7253:
  8904  003736  EC8A  F022         	call	_BusySensorAcq	;wreg free
  8905  00373A  0900               	iorlw	0
  8906  00373C  A4D8               	btfss	status,2,c
  8907  00373E  D7FB               	goto	l7253
  8908                           
  8909                           ;FastBuggy17_Main_Code_TUNING.c: 532: for(index = 0; index < 5; index++) {
  8910  003740  0E00               	movlw	0
  8911  003742  0100               	movlb	0	; () banked
  8912  003744  6F75               	movwf	CalibrateOffsets@index& (0+255),b
  8913  003746                     l7257:
  8914                           
  8915                           ; BSR set to: 0
  8916  003746  0E04               	movlw	4
  8917  003748  0100               	movlb	0	; () banked
  8918  00374A  6575               	cpfsgt	CalibrateOffsets@index& (0+255),b
  8919  00374C  D001               	goto	l7261
  8920                           
  8921                           ; BSR set to: 0
  8922  00374E  D02A               	goto	l858
  8923  003750                     l7261:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;FastBuggy17_Main_Code_TUNING.c: 534: sensor_offsets[index] = sensor_readings_raw[2] - s
      +                          ensor_readings_raw[index];
  8927  003750  0100               	movlb	0	; () banked
  8928  003752  5175               	movf	CalibrateOffsets@index& (0+255),w,b
  8929  003754  0D02               	mullw	2
  8930  003756  0ECB               	movlw	low _sensor_readings_raw
  8931  003758  24F3               	addwf	prodl,w,c
  8932  00375A  6ED9               	movwf	fsr2l,c
  8933  00375C  0E00               	movlw	high _sensor_readings_raw
  8934  00375E  20F4               	addwfc	prodh,w,c
  8935  003760  6EDA               	movwf	fsr2h,c
  8936  003762  CFDE F073          	movff	postinc2,??_CalibrateOffsets
  8937  003766  CFDD F074          	movff	postdec2,??_CalibrateOffsets+1
  8938  00376A  0100               	movlb	0	; () banked
  8939  00376C  1F73               	comf	??_CalibrateOffsets& (0+255),f,b
  8940  00376E  1F74               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  8941  003770  4B73               	infsnz	??_CalibrateOffsets& (0+255),f,b
  8942  003772  2B74               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  8943  003774  0100               	movlb	0	; () banked
  8944  003776  51CF               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  8945  003778  0100               	movlb	0	; () banked
  8946  00377A  2773               	addwf	??_CalibrateOffsets& (0+255),f,b
  8947  00377C  0100               	movlb	0	; () banked
  8948  00377E  51D0               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  8949  003780  0100               	movlb	0	; () banked
  8950  003782  2374               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  8951  003784  0100               	movlb	0	; () banked
  8952  003786  5175               	movf	CalibrateOffsets@index& (0+255),w,b
  8953  003788  0D02               	mullw	2
  8954  00378A  0EDF               	movlw	low _sensor_offsets
  8955  00378C  24F3               	addwf	prodl,w,c
  8956  00378E  6ED9               	movwf	fsr2l,c
  8957  003790  0E00               	movlw	high _sensor_offsets
  8958  003792  20F4               	addwfc	prodh,w,c
  8959  003794  6EDA               	movwf	fsr2h,c
  8960  003796  C073  FFDE         	movff	??_CalibrateOffsets,postinc2
  8961  00379A  C074  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  8962                           
  8963                           ; BSR set to: 0
  8964  00379E  0100               	movlb	0	; () banked
  8965  0037A0  2B75               	incf	CalibrateOffsets@index& (0+255),f,b
  8966  0037A2  D7D1               	goto	l7257
  8967  0037A4                     l858:
  8968                           
  8969                           ; BSR set to: 0
  8970  0037A4  0012               	return		;funcret
  8971  0037A6                     __end_of_CalibrateOffsets:
  8972                           	opt stack 0
  8973                           prodh	equ	0xFF4
  8974                           prodl	equ	0xFF3
  8975                           intcon	equ	0xFF2
  8976                           postinc0	equ	0xFEE
  8977                           wreg	equ	0xFE8
  8978                           indf2	equ	0xFDF
  8979                           postinc2	equ	0xFDE
  8980                           postdec2	equ	0xFDD
  8981                           fsr2h	equ	0xFDA
  8982                           fsr2l	equ	0xFD9
  8983                           status	equ	0xFD8
  8984                           
  8985 ;; *************** function _GetSensorReadings *****************
  8986 ;; Defined at:
  8987 ;;		line 326 in file "FastBuggy17_Main_Code_TUNING.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;		None
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;		None               void
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0, cstack
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    9
  9008 ;; This function calls:
  9009 ;;		_ConvertADC
  9010 ;;		_SetADCChannel
  9011 ;; This function is called by:
  9012 ;;		_CalibrateOffsets
  9013 ;;		_CalibrateThreshold
  9014 ;;		_main
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           	psect	text63
  9019  0043F4                     __ptext63:
  9020                           	opt stack 0
  9021  0043F4                     _GetSensorReadings:
  9022                           	opt stack 18
  9023                           
  9024                           ;FastBuggy17_Main_Code_TUNING.c: 328: sensor_acq_index = 0;
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;incstack = 0
  9028  0043F4  0E00               	movlw	0
  9029  0043F6  6E21               	movwf	_sensor_acq_index,c	;volatile
  9030                           
  9031                           ;FastBuggy17_Main_Code_TUNING.c: 329: sensor_acq_done = 0;
  9032  0043F8  0E00               	movlw	0
  9033  0043FA  6E20               	movwf	_sensor_acq_done,c	;volatile
  9034                           
  9035                           ;FastBuggy17_Main_Code_TUNING.c: 330: SetADCChannel(sensor_acq_index);
  9036  0043FC  5021               	movf	_sensor_acq_index,w,c	;volatile
  9037  0043FE  EC6B  F016         	call	_SetADCChannel
  9038                           
  9039                           ;FastBuggy17_Main_Code_TUNING.c: 331: ConvertADC();
  9040  004402  EC09  F023         	call	_ConvertADC	;wreg free
  9041                           
  9042                           ;FastBuggy17_Main_Code_TUNING.c: 332: PIE1bits.ADIE = 1;
  9043  004406  8C9D               	bsf	3997,6,c	;volatile
  9044  004408  0012               	return		;funcret
  9045  00440A                     __end_of_GetSensorReadings:
  9046                           	opt stack 0
  9047                           prodh	equ	0xFF4
  9048                           prodl	equ	0xFF3
  9049                           intcon	equ	0xFF2
  9050                           postinc0	equ	0xFEE
  9051                           wreg	equ	0xFE8
  9052                           indf2	equ	0xFDF
  9053                           postinc2	equ	0xFDE
  9054                           postdec2	equ	0xFDD
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           
  9059 ;; *************** function _SetADCChannel *****************
  9060 ;; Defined at:
  9061 ;;		line 268 in file "FastBuggy17_Main_Code_TUNING.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  channel         1    wreg     unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  channel         1   18[BANK0 ] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;		None               void
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0, cstack
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;Total ram usage:        1 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    8
  9082 ;; This function calls:
  9083 ;;		_SetChanADC
  9084 ;; This function is called by:
  9085 ;;		_GetSensorReadings
  9086 ;;		_CalibrateThreshold
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text64
  9091  002CD6                     __ptext64:
  9092                           	opt stack 0
  9093  002CD6                     _SetADCChannel:
  9094                           	opt stack 19
  9095                           
  9096                           ;incstack = 0
  9097                           ;SetADCChannel@channel stored from wreg
  9098  002CD6  0100               	movlb	0	; () banked
  9099  002CD8  6F72               	movwf	SetADCChannel@channel& (0+255),b
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;FastBuggy17_Main_Code_TUNING.c: 270: switch (channel) {
  9103  002CDA  D040               	goto	l6531
  9104  002CDC                     l6497:
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;FastBuggy17_Main_Code_TUNING.c: 272: SetChanADC(0b10000111);
  9108  002CDC  0E87               	movlw	135
  9109  002CDE  ECB6  F021         	call	_SetChanADC
  9110                           
  9111                           ;FastBuggy17_Main_Code_TUNING.c: 273: break;
  9112  002CE2  D06F               	goto	l761
  9113  002CE4                     l6499:
  9114                           
  9115                           ;FastBuggy17_Main_Code_TUNING.c: 275: SetChanADC(0b10001111);
  9116  002CE4  0E8F               	movlw	143
  9117  002CE6  ECB6  F021         	call	_SetChanADC
  9118                           
  9119                           ;FastBuggy17_Main_Code_TUNING.c: 276: break;
  9120  002CEA  D06B               	goto	l761
  9121  002CEC                     l6501:
  9122                           
  9123                           ;FastBuggy17_Main_Code_TUNING.c: 278: SetChanADC(0b10010111);
  9124  002CEC  0E97               	movlw	151
  9125  002CEE  ECB6  F021         	call	_SetChanADC
  9126                           
  9127                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
  9128  002CF2  D067               	goto	l761
  9129  002CF4                     l6503:
  9130                           
  9131                           ;FastBuggy17_Main_Code_TUNING.c: 281: SetChanADC(0b10011111);
  9132  002CF4  0E9F               	movlw	159
  9133  002CF6  ECB6  F021         	call	_SetChanADC
  9134                           
  9135                           ;FastBuggy17_Main_Code_TUNING.c: 282: break;
  9136  002CFA  D063               	goto	l761
  9137  002CFC                     l6505:
  9138                           
  9139                           ;FastBuggy17_Main_Code_TUNING.c: 284: SetChanADC(0b10100111);
  9140  002CFC  0EA7               	movlw	167
  9141  002CFE  ECB6  F021         	call	_SetChanADC
  9142                           
  9143                           ;FastBuggy17_Main_Code_TUNING.c: 285: break;
  9144  002D02  D05F               	goto	l761
  9145  002D04                     l6507:
  9146                           
  9147                           ;FastBuggy17_Main_Code_TUNING.c: 287: SetChanADC(0b10101111);
  9148  002D04  0EAF               	movlw	175
  9149  002D06  ECB6  F021         	call	_SetChanADC
  9150                           
  9151                           ;FastBuggy17_Main_Code_TUNING.c: 288: break;
  9152  002D0A  D05B               	goto	l761
  9153  002D0C                     l6509:
  9154                           
  9155                           ;FastBuggy17_Main_Code_TUNING.c: 290: SetChanADC(0b10110111);
  9156  002D0C  0EB7               	movlw	183
  9157  002D0E  ECB6  F021         	call	_SetChanADC
  9158                           
  9159                           ;FastBuggy17_Main_Code_TUNING.c: 291: break;
  9160  002D12  D057               	goto	l761
  9161  002D14                     l6511:
  9162                           
  9163                           ;FastBuggy17_Main_Code_TUNING.c: 293: SetChanADC(0b10111111);
  9164  002D14  0EBF               	movlw	191
  9165  002D16  ECB6  F021         	call	_SetChanADC
  9166                           
  9167                           ;FastBuggy17_Main_Code_TUNING.c: 294: break;
  9168  002D1A  D053               	goto	l761
  9169  002D1C                     l6513:
  9170                           
  9171                           ;FastBuggy17_Main_Code_TUNING.c: 296: SetChanADC(0b11000111);
  9172  002D1C  0EC7               	movlw	199
  9173  002D1E  ECB6  F021         	call	_SetChanADC
  9174                           
  9175                           ;FastBuggy17_Main_Code_TUNING.c: 297: break;
  9176  002D22  D04F               	goto	l761
  9177  002D24                     l6515:
  9178                           
  9179                           ;FastBuggy17_Main_Code_TUNING.c: 299: SetChanADC(0b11001111);
  9180  002D24  0ECF               	movlw	207
  9181  002D26  ECB6  F021         	call	_SetChanADC
  9182                           
  9183                           ;FastBuggy17_Main_Code_TUNING.c: 300: break;
  9184  002D2A  D04B               	goto	l761
  9185  002D2C                     l6517:
  9186                           
  9187                           ;FastBuggy17_Main_Code_TUNING.c: 302: SetChanADC(0b11010111);
  9188  002D2C  0ED7               	movlw	215
  9189  002D2E  ECB6  F021         	call	_SetChanADC
  9190                           
  9191                           ;FastBuggy17_Main_Code_TUNING.c: 303: break;
  9192  002D32  D047               	goto	l761
  9193  002D34                     l6519:
  9194                           
  9195                           ;FastBuggy17_Main_Code_TUNING.c: 305: SetChanADC(0b11011111);
  9196  002D34  0EDF               	movlw	223
  9197  002D36  ECB6  F021         	call	_SetChanADC
  9198                           
  9199                           ;FastBuggy17_Main_Code_TUNING.c: 306: break;
  9200  002D3A  D043               	goto	l761
  9201  002D3C                     l6521:
  9202                           
  9203                           ;FastBuggy17_Main_Code_TUNING.c: 308: SetChanADC(0b11100111);
  9204  002D3C  0EE7               	movlw	231
  9205  002D3E  ECB6  F021         	call	_SetChanADC
  9206                           
  9207                           ;FastBuggy17_Main_Code_TUNING.c: 309: break;
  9208  002D42  D03F               	goto	l761
  9209  002D44                     l6523:
  9210                           
  9211                           ;FastBuggy17_Main_Code_TUNING.c: 311: SetChanADC(0b11101111);
  9212  002D44  0EEF               	movlw	239
  9213  002D46  ECB6  F021         	call	_SetChanADC
  9214                           
  9215                           ;FastBuggy17_Main_Code_TUNING.c: 312: break;
  9216  002D4A  D03B               	goto	l761
  9217  002D4C                     l6525:
  9218                           
  9219                           ;FastBuggy17_Main_Code_TUNING.c: 314: SetChanADC(0b11110111);
  9220  002D4C  0EF7               	movlw	247
  9221  002D4E  ECB6  F021         	call	_SetChanADC
  9222                           
  9223                           ;FastBuggy17_Main_Code_TUNING.c: 315: break;
  9224  002D52  D037               	goto	l761
  9225  002D54                     l6527:
  9226                           
  9227                           ;FastBuggy17_Main_Code_TUNING.c: 317: SetChanADC(0b11111111);
  9228  002D54  0EFF               	movlw	255
  9229  002D56  ECB6  F021         	call	_SetChanADC
  9230                           
  9231                           ;FastBuggy17_Main_Code_TUNING.c: 321: }
  9232                           
  9233                           ;FastBuggy17_Main_Code_TUNING.c: 320: break;
  9234                           
  9235                           ;FastBuggy17_Main_Code_TUNING.c: 319: default:
  9236                           
  9237                           ;FastBuggy17_Main_Code_TUNING.c: 318: break;
  9238  002D5A  D033               	goto	l761
  9239  002D5C                     l6531:
  9240  002D5C  0100               	movlb	0	; () banked
  9241  002D5E  5172               	movf	SetADCChannel@channel& (0+255),w,b
  9242                           
  9243                           ; Switch size 1, requested type "space"
  9244                           ; Number of cases is 16, Range of values is 0 to 15
  9245                           ; switch strategies available:
  9246                           ; Name         Instructions Cycles
  9247                           ; simple_byte           49    25 (average)
  9248                           ;	Chosen strategy is simple_byte
  9249  002D60  0A00               	xorlw	0	; case 0
  9250  002D62  B4D8               	btfsc	status,2,c
  9251  002D64  D7BB               	goto	l6497
  9252  002D66  0A01               	xorlw	1	; case 1
  9253  002D68  B4D8               	btfsc	status,2,c
  9254  002D6A  D7BC               	goto	l6499
  9255  002D6C  0A03               	xorlw	3	; case 2
  9256  002D6E  B4D8               	btfsc	status,2,c
  9257  002D70  D7BD               	goto	l6501
  9258  002D72  0A01               	xorlw	1	; case 3
  9259  002D74  B4D8               	btfsc	status,2,c
  9260  002D76  D7BE               	goto	l6503
  9261  002D78  0A07               	xorlw	7	; case 4
  9262  002D7A  B4D8               	btfsc	status,2,c
  9263  002D7C  D7BF               	goto	l6505
  9264  002D7E  0A01               	xorlw	1	; case 5
  9265  002D80  B4D8               	btfsc	status,2,c
  9266  002D82  D7C0               	goto	l6507
  9267  002D84  0A03               	xorlw	3	; case 6
  9268  002D86  B4D8               	btfsc	status,2,c
  9269  002D88  D7C1               	goto	l6509
  9270  002D8A  0A01               	xorlw	1	; case 7
  9271  002D8C  B4D8               	btfsc	status,2,c
  9272  002D8E  D7C2               	goto	l6511
  9273  002D90  0A0F               	xorlw	15	; case 8
  9274  002D92  B4D8               	btfsc	status,2,c
  9275  002D94  D7C3               	goto	l6513
  9276  002D96  0A01               	xorlw	1	; case 9
  9277  002D98  B4D8               	btfsc	status,2,c
  9278  002D9A  D7C4               	goto	l6515
  9279  002D9C  0A03               	xorlw	3	; case 10
  9280  002D9E  B4D8               	btfsc	status,2,c
  9281  002DA0  D7C5               	goto	l6517
  9282  002DA2  0A01               	xorlw	1	; case 11
  9283  002DA4  B4D8               	btfsc	status,2,c
  9284  002DA6  D7C6               	goto	l6519
  9285  002DA8  0A07               	xorlw	7	; case 12
  9286  002DAA  B4D8               	btfsc	status,2,c
  9287  002DAC  D7C7               	goto	l6521
  9288  002DAE  0A01               	xorlw	1	; case 13
  9289  002DB0  B4D8               	btfsc	status,2,c
  9290  002DB2  D7C8               	goto	l6523
  9291  002DB4  0A03               	xorlw	3	; case 14
  9292  002DB6  B4D8               	btfsc	status,2,c
  9293  002DB8  D7C9               	goto	l6525
  9294  002DBA  0A01               	xorlw	1	; case 15
  9295  002DBC  B4D8               	btfsc	status,2,c
  9296  002DBE  D7CA               	goto	l6527
  9297  002DC0  D000               	goto	l761
  9298  002DC2                     l761:
  9299  002DC2  0012               	return		;funcret
  9300  002DC4                     __end_of_SetADCChannel:
  9301                           	opt stack 0
  9302                           prodh	equ	0xFF4
  9303                           prodl	equ	0xFF3
  9304                           intcon	equ	0xFF2
  9305                           postinc0	equ	0xFEE
  9306                           wreg	equ	0xFE8
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           fsr2h	equ	0xFDA
  9311                           fsr2l	equ	0xFD9
  9312                           status	equ	0xFD8
  9313                           
  9314 ;; *************** function _SetChanADC *****************
  9315 ;; Defined at:
  9316 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  channel         1    wreg     unsigned char 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;  channel         1   17[BANK0 ] unsigned char 
  9321 ;; Return value:  Size  Location     Type
  9322 ;;		None               void
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, status,0
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;Total ram usage:        2 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    7
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_SetADCChannel
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text65
  9345  00436C                     __ptext65:
  9346                           	opt stack 0
  9347  00436C                     _SetChanADC:
  9348                           	opt stack 19
  9349                           
  9350                           ;incstack = 0
  9351                           ;SetChanADC@channel stored from wreg
  9352  00436C  0100               	movlb	0	; () banked
  9353  00436E  6F71               	movwf	SetChanADC@channel& (0+255),b
  9354                           
  9355                           ; BSR set to: 0
  9356  004370  CFC2 F070          	movff	4034,??_SetChanADC	;volatile
  9357  004374  0EC3               	movlw	195
  9358  004376  0100               	movlb	0	; () banked
  9359  004378  1770               	andwf	??_SetChanADC& (0+255),f,b
  9360  00437A  0100               	movlb	0	; () banked
  9361  00437C  90D8               	bcf	status,0,c
  9362  00437E  3171               	rrcf	SetChanADC@channel& (0+255),w,b
  9363  004380  0B3C               	andlw	60
  9364  004382  0100               	movlb	0	; () banked
  9365  004384  1170               	iorwf	??_SetChanADC& (0+255),w,b
  9366  004386  6EC2               	movwf	4034,c	;volatile
  9367                           
  9368                           ; BSR set to: 0
  9369  004388  0012               	return		;funcret
  9370  00438A                     __end_of_SetChanADC:
  9371                           	opt stack 0
  9372                           prodh	equ	0xFF4
  9373                           prodl	equ	0xFF3
  9374                           intcon	equ	0xFF2
  9375                           postinc0	equ	0xFEE
  9376                           wreg	equ	0xFE8
  9377                           indf2	equ	0xFDF
  9378                           postinc2	equ	0xFDE
  9379                           postdec2	equ	0xFDD
  9380                           fsr2h	equ	0xFDA
  9381                           fsr2l	equ	0xFD9
  9382                           status	equ	0xFD8
  9383                           
  9384 ;; *************** function _ConvertADC *****************
  9385 ;; Defined at:
  9386 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;		None               void
  9393 ;; Registers used:
  9394 ;;		None
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;Total ram usage:        0 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    7
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_GetSensorReadings
  9411 ;;		_CalibrateThreshold
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text66
  9416  004612                     __ptext66:
  9417                           	opt stack 0
  9418  004612                     _ConvertADC:
  9419                           	opt stack 19
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;incstack = 0
  9423  004612  82C2               	bsf	4034,1,c	;volatile
  9424  004614  0012               	return		;funcret
  9425  004616                     __end_of_ConvertADC:
  9426                           	opt stack 0
  9427                           prodh	equ	0xFF4
  9428                           prodl	equ	0xFF3
  9429                           intcon	equ	0xFF2
  9430                           postinc0	equ	0xFEE
  9431                           wreg	equ	0xFE8
  9432                           indf2	equ	0xFDF
  9433                           postinc2	equ	0xFDE
  9434                           postdec2	equ	0xFDD
  9435                           fsr2h	equ	0xFDA
  9436                           fsr2l	equ	0xFD9
  9437                           status	equ	0xFD8
  9438                           
  9439 ;; *************** function _BusySensorAcq *****************
  9440 ;; Defined at:
  9441 ;;		line 337 in file "FastBuggy17_Main_Code_TUNING.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      unsigned char 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9459 ;;Total ram usage:        0 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    7
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_CalibrateOffsets
  9466 ;;		_CalibrateThreshold
  9467 ;;		_main
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text67
  9472  004514                     __ptext67:
  9473                           	opt stack 0
  9474  004514                     _BusySensorAcq:
  9475                           	opt stack 20
  9476                           
  9477                           ;FastBuggy17_Main_Code_TUNING.c: 339: return (!sensor_acq_done);
  9478                           
  9479                           ;incstack = 0
  9480  004514  5020               	movf	_sensor_acq_done,w,c	;volatile
  9481  004516  A4D8               	btfss	status,2,c
  9482  004518  D002               	goto	u6570
  9483  00451A  0E01               	movlw	1
  9484  00451C  D002               	goto	l767
  9485  00451E                     u6570:
  9486  00451E  0E00               	movlw	0
  9487  004520  D000               	goto	l767
  9488  004522                     l767:
  9489  004522  0012               	return		;funcret
  9490  004524                     __end_of_BusySensorAcq:
  9491                           	opt stack 0
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           intcon	equ	0xFF2
  9495                           postinc0	equ	0xFEE
  9496                           wreg	equ	0xFE8
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8
  9503                           
  9504 ;; *************** function _GetDistance *****************
  9505 ;; Defined at:
  9506 ;;		line 48 in file "Ultrasound.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;		None               void
  9513 ;; Registers used:
  9514 ;;		wreg, status,2, cstack
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    8
  9527 ;; This function calls:
  9528 ;;		_Delay1TCYx
  9529 ;; This function is called by:
  9530 ;;		_main
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text68
  9535  004460                     __ptext68:
  9536                           	opt stack 0
  9537  004460                     _GetDistance:
  9538                           	opt stack 22
  9539                           
  9540                           ;Ultrasound.c: 50: LATEbits.LATE5 = 1;
  9541                           
  9542                           ;incstack = 0
  9543  004460  8A8D               	bsf	3981,5,c	;volatile
  9544                           
  9545                           ;Ultrasound.c: 51: Delay1TCYx(25);
  9546  004462  0E19               	movlw	25
  9547  004464  EC92  F022         	call	_Delay1TCYx
  9548                           
  9549                           ;Ultrasound.c: 52: LATEbits.LATE5 = 0;
  9550  004468  9A8D               	bcf	3981,5,c	;volatile
  9551                           
  9552                           ;Ultrasound.c: 53: INTCON2bits.INTEDG3 = 1;
  9553  00446A  86F1               	bsf	intcon2,3,c	;volatile
  9554                           
  9555                           ;Ultrasound.c: 54: INTCON3bits.INT3IE = 1;
  9556  00446C  8AF0               	bsf	intcon3,5,c	;volatile
  9557                           
  9558                           ;Ultrasound.c: 56: echo_acq_done = 0;
  9559  00446E  0E00               	movlw	0
  9560  004470  6E1A               	movwf	_echo_acq_done,c
  9561  004472  0012               	return		;funcret
  9562  004474                     __end_of_GetDistance:
  9563                           	opt stack 0
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           intcon	equ	0xFF2
  9567                           intcon2	equ	0xFF1
  9568                           intcon3	equ	0xFF0
  9569                           postinc0	equ	0xFEE
  9570                           wreg	equ	0xFE8
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           postdec2	equ	0xFDD
  9574                           fsr2h	equ	0xFDA
  9575                           fsr2l	equ	0xFD9
  9576                           status	equ	0xFD8
  9577                           
  9578 ;; *************** function _Delay1TCYx *****************
  9579 ;; Defined at:
  9580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  unit            1    wreg     unsigned char 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;  unit            1   16[BANK0 ] unsigned char 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;		None               void
  9587 ;; Registers used:
  9588 ;;		wreg
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;Total ram usage:        1 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    7
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_GetDistance
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text69
  9609  004524                     __ptext69:
  9610                           	opt stack 0
  9611  004524                     _Delay1TCYx:
  9612                           	opt stack 22
  9613                           
  9614                           ;incstack = 0
  9615                           ;Delay1TCYx@unit stored from wreg
  9616  004524  0100               	movlb	0	; () banked
  9617  004526  6F70               	movwf	Delay1TCYx@unit& (0+255),b
  9618  004528                     l1455:
  9619                           
  9620                           ; BSR set to: 0
  9621  004528  F000               	nop	
  9622  00452A  0100               	movlb	0	; () banked
  9623  00452C  2F70               	decfsz	Delay1TCYx@unit& (0+255),f,b
  9624  00452E  D7FC               	goto	l1455
  9625  004530  D000               	goto	l1457
  9626  004532                     l1457:
  9627                           
  9628                           ; BSR set to: 0
  9629  004532  0012               	return		;funcret
  9630  004534                     __end_of_Delay1TCYx:
  9631                           	opt stack 0
  9632                           prodh	equ	0xFF4
  9633                           prodl	equ	0xFF3
  9634                           intcon	equ	0xFF2
  9635                           intcon2	equ	0xFF1
  9636                           intcon3	equ	0xFF0
  9637                           postinc0	equ	0xFEE
  9638                           wreg	equ	0xFE8
  9639                           indf2	equ	0xFDF
  9640                           postinc2	equ	0xFDE
  9641                           postdec2	equ	0xFDD
  9642                           fsr2h	equ	0xFDA
  9643                           fsr2l	equ	0xFD9
  9644                           status	equ	0xFD8
  9645                           
  9646 ;; *************** function _EnableSensorLEDS *****************
  9647 ;; Defined at:
  9648 ;;		line 444 in file "FastBuggy17_Main_Code_TUNING.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;		None
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;		None               void
  9655 ;; Registers used:
  9656 ;;		wreg, status,2
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;Total ram usage:        0 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    7
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_main
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text70
  9677  004604                     __ptext70:
  9678                           	opt stack 0
  9679  004604                     _EnableSensorLEDS:
  9680                           	opt stack 23
  9681                           
  9682                           ;FastBuggy17_Main_Code_TUNING.c: 446: LATE = 0x1F;
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;incstack = 0
  9686  004604  0E1F               	movlw	31
  9687  004606  6E8D               	movwf	3981,c	;volatile
  9688  004608  0012               	return		;funcret
  9689  00460A                     __end_of_EnableSensorLEDS:
  9690                           	opt stack 0
  9691                           prodh	equ	0xFF4
  9692                           prodl	equ	0xFF3
  9693                           intcon	equ	0xFF2
  9694                           intcon2	equ	0xFF1
  9695                           intcon3	equ	0xFF0
  9696                           postinc0	equ	0xFEE
  9697                           wreg	equ	0xFE8
  9698                           indf2	equ	0xFDF
  9699                           postinc2	equ	0xFDE
  9700                           postdec2	equ	0xFDD
  9701                           fsr2h	equ	0xFDA
  9702                           fsr2l	equ	0xFD9
  9703                           status	equ	0xFD8
  9704                           
  9705 ;; *************** function _EnableMotors *****************
  9706 ;; Defined at:
  9707 ;;		line 102 in file "Motors.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;		None
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;		None               void
  9714 ;; Registers used:
  9715 ;;		None
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;Total ram usage:        0 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    7
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_main
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text71
  9736  004616                     __ptext71:
  9737                           	opt stack 0
  9738  004616                     _EnableMotors:
  9739                           	opt stack 23
  9740                           
  9741                           ;Motors.c: 104: LATDbits.LATD4 = 1;
  9742                           
  9743                           ;incstack = 0
  9744  004616  888C               	bsf	3980,4,c	;volatile
  9745  004618  0012               	return		;funcret
  9746  00461A                     __end_of_EnableMotors:
  9747                           	opt stack 0
  9748                           prodh	equ	0xFF4
  9749                           prodl	equ	0xFF3
  9750                           intcon	equ	0xFF2
  9751                           intcon2	equ	0xFF1
  9752                           intcon3	equ	0xFF0
  9753                           postinc0	equ	0xFEE
  9754                           wreg	equ	0xFE8
  9755                           indf2	equ	0xFDF
  9756                           postinc2	equ	0xFDE
  9757                           postdec2	equ	0xFDD
  9758                           fsr2h	equ	0xFDA
  9759                           fsr2l	equ	0xFD9
  9760                           status	equ	0xFD8
  9761                           
  9762 ;; *************** function _DisableMotors *****************
  9763 ;; Defined at:
  9764 ;;		line 108 in file "Motors.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;		None               void
  9771 ;; Registers used:
  9772 ;;		None
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:    7
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_main
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text72
  9793  00461A                     __ptext72:
  9794                           	opt stack 0
  9795  00461A                     _DisableMotors:
  9796                           	opt stack 23
  9797                           
  9798                           ;Motors.c: 110: LATDbits.LATD4 = 0;
  9799                           
  9800                           ;incstack = 0
  9801  00461A  988C               	bcf	3980,4,c	;volatile
  9802  00461C  0012               	return		;funcret
  9803  00461E                     __end_of_DisableMotors:
  9804                           	opt stack 0
  9805                           prodh	equ	0xFF4
  9806                           prodl	equ	0xFF3
  9807                           intcon	equ	0xFF2
  9808                           intcon2	equ	0xFF1
  9809                           intcon3	equ	0xFF0
  9810                           postinc0	equ	0xFEE
  9811                           wreg	equ	0xFE8
  9812                           indf2	equ	0xFDF
  9813                           postinc2	equ	0xFDE
  9814                           postdec2	equ	0xFDD
  9815                           fsr2h	equ	0xFDA
  9816                           fsr2l	equ	0xFD9
  9817                           status	equ	0xFD8
  9818                           
  9819 ;; *************** function _ConfigureWireless *****************
  9820 ;; Defined at:
  9821 ;;		line 114 in file "Wireless.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;		None               void
  9828 ;; Registers used:
  9829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    8
  9842 ;; This function calls:
  9843 ;;		_FlushRxBuf
  9844 ;;		_FlushTxBuf
  9845 ;;		_Open1USART
  9846 ;; This function is called by:
  9847 ;;		_main
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text73
  9852  00438A                     __ptext73:
  9853                           	opt stack 0
  9854  00438A                     _ConfigureWireless:
  9855                           	opt stack 22
  9856                           
  9857                           ;Wireless.c: 116: Open1USART(0b01111111
  9858                           ;Wireless.c: 117: & 0b10111111
  9859                           ;Wireless.c: 118: & 0b11111110
  9860                           ;Wireless.c: 119: & 0b11111101
  9861                           ;Wireless.c: 120: & 0b11111111
  9862                           ;Wireless.c: 121: & 0b11111111,
  9863                           ;Wireless.c: 122: 64);
  9864                           
  9865                           ;incstack = 0
  9866  00438A  0E00               	movlw	0
  9867  00438C  0100               	movlb	0	; () banked
  9868  00438E  6F71               	movwf	(Open1USART@spbrg+1)& (0+255),b
  9869  004390  0E40               	movlw	64
  9870  004392  6F70               	movwf	Open1USART@spbrg& (0+255),b
  9871  004394  0E3C               	movlw	60
  9872  004396  EC1B  F01A         	call	_Open1USART
  9873                           
  9874                           ;Wireless.c: 124: FlushTxBuf();
  9875  00439A  ECCB  F01F         	call	_FlushTxBuf	;wreg free
  9876                           
  9877                           ;Wireless.c: 125: FlushRxBuf();
  9878  00439E  ECE6  F01F         	call	_FlushRxBuf	;wreg free
  9879                           
  9880                           ;Wireless.c: 127: Tx_complete = 1;
  9881  0043A2  0E01               	movlw	1
  9882  0043A4  6E18               	movwf	_Tx_complete,c
  9883  0043A6  0012               	return		;funcret
  9884  0043A8                     __end_of_ConfigureWireless:
  9885                           	opt stack 0
  9886                           prodh	equ	0xFF4
  9887                           prodl	equ	0xFF3
  9888                           intcon	equ	0xFF2
  9889                           intcon2	equ	0xFF1
  9890                           intcon3	equ	0xFF0
  9891                           postinc0	equ	0xFEE
  9892                           wreg	equ	0xFE8
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function _Open1USART *****************
  9901 ;; Defined at:
  9902 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  config          1    wreg     unsigned char 
  9905 ;;  spbrg           2   16[BANK0 ] unsigned int 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  config          1   18[BANK0 ] unsigned char 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;		None               void
  9910 ;; Registers used:
  9911 ;;		wreg, status,2
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;Total ram usage:        3 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    7
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_ConfigureWireless
  9928 ;;		_ConfigureSerial
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           	psect	text74
  9933  003436                     __ptext74:
  9934                           	opt stack 0
  9935  003436                     _Open1USART:
  9936                           	opt stack 22
  9937                           
  9938                           ;incstack = 0
  9939                           ;Open1USART@config stored from wreg
  9940  003436  0100               	movlb	0	; () banked
  9941  003438  6F72               	movwf	Open1USART@config& (0+255),b
  9942                           
  9943                           ; BSR set to: 0
  9944  00343A  0E00               	movlw	0
  9945  00343C  6EAC               	movwf	4012,c	;volatile
  9946  00343E  0E00               	movlw	0
  9947  003440  6EAB               	movwf	4011,c	;volatile
  9948                           
  9949                           ; BSR set to: 0
  9950  003442  0100               	movlb	0	; () banked
  9951  003444  A172               	btfss	Open1USART@config& (0+255),0,b
  9952  003446  D002               	goto	l7387
  9953                           
  9954                           ; BSR set to: 0
  9955  003448  88AC               	bsf	4012,4,c	;volatile
  9956  00344A  D000               	goto	l7387
  9957  00344C                     l7387:
  9958                           
  9959                           ; BSR set to: 0
  9960  00344C  0100               	movlb	0	; () banked
  9961  00344E  A372               	btfss	Open1USART@config& (0+255),1,b
  9962  003450  D003               	goto	l7391
  9963                           
  9964                           ; BSR set to: 0
  9965  003452  8CAC               	bsf	4012,6,c	;volatile
  9966  003454  8CAB               	bsf	4011,6,c	;volatile
  9967  003456  D000               	goto	l7391
  9968  003458                     l7391:
  9969                           
  9970                           ; BSR set to: 0
  9971  003458  0100               	movlb	0	; () banked
  9972  00345A  A572               	btfss	Open1USART@config& (0+255),2,b
  9973  00345C  D002               	goto	l7395
  9974                           
  9975                           ; BSR set to: 0
  9976  00345E  8EAC               	bsf	4012,7,c	;volatile
  9977  003460  D000               	goto	l7395
  9978  003462                     l7395:
  9979                           
  9980                           ; BSR set to: 0
  9981  003462  0100               	movlb	0	; () banked
  9982  003464  A772               	btfss	Open1USART@config& (0+255),3,b
  9983  003466  D002               	goto	l1189
  9984                           
  9985                           ; BSR set to: 0
  9986  003468  88AB               	bsf	4011,4,c	;volatile
  9987  00346A  D002               	goto	l7399
  9988  00346C                     l1189:
  9989                           
  9990                           ; BSR set to: 0
  9991  00346C  8AAB               	bsf	4011,5,c	;volatile
  9992  00346E  D000               	goto	l7399
  9993  003470                     l7399:
  9994                           
  9995                           ; BSR set to: 0
  9996  003470  0100               	movlb	0	; () banked
  9997  003472  A972               	btfss	Open1USART@config& (0+255),4,b
  9998  003474  D002               	goto	l7403
  9999                           
 10000                           ; BSR set to: 0
 10001  003476  84AC               	bsf	4012,2,c	;volatile
 10002  003478  D000               	goto	l7403
 10003  00347A                     l7403:
 10004                           
 10005                           ; BSR set to: 0
 10006  00347A  0100               	movlb	0	; () banked
 10007  00347C  AB72               	btfss	Open1USART@config& (0+255),5,b
 10008  00347E  D002               	goto	l7407
 10009                           
 10010                           ; BSR set to: 0
 10011  003480  86AB               	bsf	4011,3,c	;volatile
 10012  003482  D000               	goto	l7407
 10013  003484                     l7407:
 10014                           
 10015                           ; BSR set to: 0
 10016  003484  0100               	movlb	0	; () banked
 10017  003486  AD72               	btfss	Open1USART@config& (0+255),6,b
 10018  003488  D002               	goto	l1193
 10019                           
 10020                           ; BSR set to: 0
 10021  00348A  8A9D               	bsf	3997,5,c	;volatile
 10022  00348C  D002               	goto	l7411
 10023  00348E                     l1193:
 10024                           
 10025                           ; BSR set to: 0
 10026  00348E  9A9D               	bcf	3997,5,c	;volatile
 10027  003490  D000               	goto	l7411
 10028  003492                     l7411:
 10029                           
 10030                           ; BSR set to: 0
 10031  003492  0100               	movlb	0	; () banked
 10032  003494  AF72               	btfss	Open1USART@config& (0+255),7,b
 10033  003496  D002               	goto	l1195
 10034                           
 10035                           ; BSR set to: 0
 10036  003498  889D               	bsf	3997,4,c	;volatile
 10037  00349A  D001               	goto	l1196
 10038  00349C                     l1195:
 10039                           
 10040                           ; BSR set to: 0
 10041  00349C  989D               	bcf	3997,4,c	;volatile
 10042  00349E                     l1196:
 10043                           
 10044                           ; BSR set to: 0
 10045  00349E  C070  FFAF         	movff	Open1USART@spbrg,4015	;volatile
 10046                           
 10047                           ; BSR set to: 0
 10048  0034A2  0100               	movlb	0	; () banked
 10049  0034A4  5171               	movf	(Open1USART@spbrg+1)& (0+255),w,b
 10050  0034A6  6E7F               	movwf	3967,c	;volatile
 10051                           
 10052                           ; BSR set to: 0
 10053  0034A8  8AAC               	bsf	4012,5,c	;volatile
 10054                           
 10055                           ; BSR set to: 0
 10056  0034AA  8EAB               	bsf	4011,7,c	;volatile
 10057                           
 10058                           ; BSR set to: 0
 10059  0034AC  9C94               	bcf	3988,6,c	;volatile
 10060                           
 10061                           ; BSR set to: 0
 10062  0034AE  8E94               	bsf	3988,7,c	;volatile
 10063                           
 10064                           ; BSR set to: 0
 10065  0034B0  B8AC               	btfsc	4012,4,c	;volatile
 10066                           
 10067                           ; BSR set to: 0
 10068  0034B2  BEAC               	btfsc	4012,7,c	;volatile
 10069  0034B4  D002               	goto	l1198
 10070                           
 10071                           ; BSR set to: 0
 10072  0034B6  8C94               	bsf	3988,6,c	;volatile
 10073  0034B8  D000               	goto	l1198
 10074  0034BA                     l1198:
 10075                           
 10076                           ; BSR set to: 0
 10077  0034BA  0012               	return		;funcret
 10078  0034BC                     __end_of_Open1USART:
 10079                           	opt stack 0
 10080                           prodh	equ	0xFF4
 10081                           prodl	equ	0xFF3
 10082                           intcon	equ	0xFF2
 10083                           intcon2	equ	0xFF1
 10084                           intcon3	equ	0xFF0
 10085                           postinc0	equ	0xFEE
 10086                           wreg	equ	0xFE8
 10087                           indf2	equ	0xFDF
 10088                           postinc2	equ	0xFDE
 10089                           postdec2	equ	0xFDD
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _FlushTxBuf *****************
 10095 ;; Defined at:
 10096 ;;		line 90 in file "Wireless.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  index           1   16[BANK0 ] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;		None               void
 10103 ;; Registers used:
 10104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;Total ram usage:        1 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    7
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_ConfigureWireless
 10121 ;;		_SendStatus
 10122 ;;		_SendLineMode
 10123 ;;		_SendOffsets
 10124 ;;		_SendThreshold
 10125 ;;		_SendDefaultPIDValues
 10126 ;;		_SendStoredPIDValues
 10127 ;;		_SendCurrentPIDValues
 10128 ;;		_SendBattVoltageInitial
 10129 ;;		_SendBattVoltage
 10130 ;;		_SendBattCurrent
 10131 ;;		_SendBattCurrentAcc
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text75
 10136  003F96                     __ptext75:
 10137                           	opt stack 0
 10138  003F96                     _FlushTxBuf:
 10139                           	opt stack 21
 10140                           
 10141                           ;Wireless.c: 91: unsigned char index;
 10142                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;incstack = 0
 10146  003F96  0E00               	movlw	0
 10147  003F98  0100               	movlb	0	; () banked
 10148  003F9A  6F70               	movwf	FlushTxBuf@index& (0+255),b
 10149  003F9C                     l6837:
 10150                           
 10151                           ; BSR set to: 0
 10152  003F9C  0E18               	movlw	24
 10153  003F9E  0100               	movlb	0	; () banked
 10154  003FA0  6570               	cpfsgt	FlushTxBuf@index& (0+255),b
 10155  003FA2  D001               	goto	l6841
 10156                           
 10157                           ; BSR set to: 0
 10158  003FA4  D00E               	goto	l6847
 10159  003FA6                     l6841:
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;Wireless.c: 94: Tx_buffer[index] = 0;
 10163  003FA6  0100               	movlb	0	; () banked
 10164  003FA8  5170               	movf	FlushTxBuf@index& (0+255),w,b
 10165  003FAA  0D01               	mullw	1
 10166  003FAC  0E19               	movlw	low _Tx_buffer
 10167  003FAE  24F3               	addwf	prodl,w,c
 10168  003FB0  6ED9               	movwf	fsr2l,c
 10169  003FB2  0E01               	movlw	high _Tx_buffer
 10170  003FB4  20F4               	addwfc	prodh,w,c
 10171  003FB6  6EDA               	movwf	fsr2h,c
 10172  003FB8  0E00               	movlw	0
 10173  003FBA  6EDF               	movwf	indf2,c
 10174                           
 10175                           ; BSR set to: 0
 10176  003FBC  0100               	movlb	0	; () banked
 10177  003FBE  2B70               	incf	FlushTxBuf@index& (0+255),f,b
 10178  003FC0  D7ED               	goto	l6837
 10179  003FC2                     l6847:
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;Wireless.c: 95: }
 10183                           ;Wireless.c: 97: put_Tx_index = 0;
 10184  003FC2  0E00               	movlw	0
 10185  003FC4  6E1E               	movwf	_put_Tx_index,c
 10186                           
 10187                           ;Wireless.c: 98: get_Tx_index = 0;
 10188  003FC6  0E00               	movlw	0
 10189  003FC8  6E1C               	movwf	_get_Tx_index,c
 10190                           
 10191                           ; BSR set to: 0
 10192  003FCA  0012               	return		;funcret
 10193  003FCC                     __end_of_FlushTxBuf:
 10194                           	opt stack 0
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           intcon	equ	0xFF2
 10198                           intcon2	equ	0xFF1
 10199                           intcon3	equ	0xFF0
 10200                           postinc0	equ	0xFEE
 10201                           wreg	equ	0xFE8
 10202                           indf2	equ	0xFDF
 10203                           postinc2	equ	0xFDE
 10204                           postdec2	equ	0xFDD
 10205                           fsr2h	equ	0xFDA
 10206                           fsr2l	equ	0xFD9
 10207                           status	equ	0xFD8
 10208                           
 10209 ;; *************** function _FlushRxBuf *****************
 10210 ;; Defined at:
 10211 ;;		line 102 in file "Wireless.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;		None
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  index           1   16[BANK0 ] unsigned char 
 10216 ;; Return value:  Size  Location     Type
 10217 ;;		None               void
 10218 ;; Registers used:
 10219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10229 ;;Total ram usage:        1 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:    7
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_ConfigureWireless
 10236 ;;		_SetPIDValues
 10237 ;;		_ReceiveCommandsEnable
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text76
 10242  003FCC                     __ptext76:
 10243                           	opt stack 0
 10244  003FCC                     _FlushRxBuf:
 10245                           	opt stack 22
 10246                           
 10247                           ;Wireless.c: 103: unsigned char index;
 10248                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;incstack = 0
 10252  003FCC  0E00               	movlw	0
 10253  003FCE  0100               	movlb	0	; () banked
 10254  003FD0  6F70               	movwf	FlushRxBuf@index& (0+255),b
 10255  003FD2                     l7127:
 10256                           
 10257                           ; BSR set to: 0
 10258  003FD2  0E18               	movlw	24
 10259  003FD4  0100               	movlb	0	; () banked
 10260  003FD6  6570               	cpfsgt	FlushRxBuf@index& (0+255),b
 10261  003FD8  D001               	goto	l7131
 10262                           
 10263                           ; BSR set to: 0
 10264  003FDA  D00E               	goto	l7137
 10265  003FDC                     l7131:
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10269  003FDC  0100               	movlb	0	; () banked
 10270  003FDE  5170               	movf	FlushRxBuf@index& (0+255),w,b
 10271  003FE0  0D01               	mullw	1
 10272  003FE2  0E00               	movlw	low _Rx_buffer
 10273  003FE4  24F3               	addwf	prodl,w,c
 10274  003FE6  6ED9               	movwf	fsr2l,c
 10275  003FE8  0E01               	movlw	high _Rx_buffer
 10276  003FEA  20F4               	addwfc	prodh,w,c
 10277  003FEC  6EDA               	movwf	fsr2h,c
 10278  003FEE  0E00               	movlw	0
 10279  003FF0  6EDF               	movwf	indf2,c
 10280                           
 10281                           ; BSR set to: 0
 10282  003FF2  0100               	movlb	0	; () banked
 10283  003FF4  2B70               	incf	FlushRxBuf@index& (0+255),f,b
 10284  003FF6  D7ED               	goto	l7127
 10285  003FF8                     l7137:
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;Wireless.c: 107: }
 10289                           ;Wireless.c: 109: put_Rx_index = 0;
 10290  003FF8  0E00               	movlw	0
 10291  003FFA  6E1D               	movwf	_put_Rx_index,c
 10292                           
 10293                           ;Wireless.c: 110: get_Rx_index = 0;
 10294  003FFC  0E00               	movlw	0
 10295  003FFE  6E1B               	movwf	_get_Rx_index,c
 10296                           
 10297                           ; BSR set to: 0
 10298  004000  0012               	return		;funcret
 10299  004002                     __end_of_FlushRxBuf:
 10300                           	opt stack 0
 10301                           prodh	equ	0xFF4
 10302                           prodl	equ	0xFF3
 10303                           intcon	equ	0xFF2
 10304                           intcon2	equ	0xFF1
 10305                           intcon3	equ	0xFF0
 10306                           postinc0	equ	0xFEE
 10307                           wreg	equ	0xFE8
 10308                           indf2	equ	0xFDF
 10309                           postinc2	equ	0xFDE
 10310                           postdec2	equ	0xFDD
 10311                           fsr2h	equ	0xFDA
 10312                           fsr2l	equ	0xFD9
 10313                           status	equ	0xFD8
 10314                           
 10315 ;; *************** function _ConfigureUltrasound *****************
 10316 ;; Defined at:
 10317 ;;		line 9 in file "Ultrasound.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  echo_to_cm      3   20[BANK0 ] float 
 10320 ;;  echo_to_in      3   23[BANK0 ] float 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;		None
 10323 ;; Return value:  Size  Location     Type
 10324 ;;		None               void
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;Total ram usage:        6 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    8
 10339 ;; This function calls:
 10340 ;;		_WriteTimer1
 10341 ;; This function is called by:
 10342 ;;		_main
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text77
 10347  004200                     __ptext77:
 10348                           	opt stack 0
 10349  004200                     _ConfigureUltrasound:
 10350                           	opt stack 22
 10351                           
 10352                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;incstack = 0
 10356  004200  C074  F168         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10357  004204  C075  F169         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10358  004208  C076  F16A         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10359                           
 10360                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10361  00420C  C077  F16B         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10362  004210  C078  F16C         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10363  004214  C079  F16D         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10364                           
 10365                           ;Ultrasound.c: 12: WriteTimer1(0);
 10366  004218  0E00               	movlw	0
 10367  00421A  0100               	movlb	0	; () banked
 10368  00421C  6F71               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10369  00421E  0E00               	movlw	0
 10370  004220  6F70               	movwf	WriteTimer1@timer1& (0+255),b
 10371  004222  EC4D  F022         	call	_WriteTimer1	;wreg free
 10372  004226  0012               	return		;funcret
 10373  004228                     __end_of_ConfigureUltrasound:
 10374                           	opt stack 0
 10375                           prodh	equ	0xFF4
 10376                           prodl	equ	0xFF3
 10377                           intcon	equ	0xFF2
 10378                           intcon2	equ	0xFF1
 10379                           intcon3	equ	0xFF0
 10380                           postinc0	equ	0xFEE
 10381                           wreg	equ	0xFE8
 10382                           indf2	equ	0xFDF
 10383                           postinc2	equ	0xFDE
 10384                           postdec2	equ	0xFDD
 10385                           fsr2h	equ	0xFDA
 10386                           fsr2l	equ	0xFD9
 10387                           status	equ	0xFD8
 10388                           
 10389 ;; *************** function _ConfigureTimer2 *****************
 10390 ;; Defined at:
 10391 ;;		line 174 in file "FastBuggy17_Main_Code_TUNING.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;		None
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;		None               void
 10398 ;; Registers used:
 10399 ;;		wreg, status,2, status,0, cstack
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    8
 10412 ;; This function calls:
 10413 ;;		_OpenTimer2
 10414 ;; This function is called by:
 10415 ;;		_main
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text78
 10420  0045F0                     __ptext78:
 10421                           	opt stack 0
 10422  0045F0                     _ConfigureTimer2:
 10423                           	opt stack 22
 10424                           
 10425                           ;FastBuggy17_Main_Code_TUNING.c: 176: OpenTimer2(0b01111111
 10426                           ;FastBuggy17_Main_Code_TUNING.c: 177: & 0b11111100
 10427                           ;FastBuggy17_Main_Code_TUNING.c: 178: & 0b10000111
 10428                           ;FastBuggy17_Main_Code_TUNING.c: 179: & 0b10110111);
 10429                           
 10430                           ;incstack = 0
 10431  0045F0  0E04               	movlw	4
 10432  0045F2  EC87  F021         	call	_OpenTimer2
 10433  0045F6  0012               	return		;funcret
 10434  0045F8                     __end_of_ConfigureTimer2:
 10435                           	opt stack 0
 10436                           prodh	equ	0xFF4
 10437                           prodl	equ	0xFF3
 10438                           intcon	equ	0xFF2
 10439                           intcon2	equ	0xFF1
 10440                           intcon3	equ	0xFF0
 10441                           postinc0	equ	0xFEE
 10442                           wreg	equ	0xFE8
 10443                           indf2	equ	0xFDF
 10444                           postinc2	equ	0xFDE
 10445                           postdec2	equ	0xFDD
 10446                           fsr2h	equ	0xFDA
 10447                           fsr2l	equ	0xFD9
 10448                           status	equ	0xFD8
 10449                           
 10450 ;; *************** function _OpenTimer2 *****************
 10451 ;; Defined at:
 10452 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  config          1    wreg     unsigned char 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;  config          1   16[BANK0 ] unsigned char 
 10457 ;; Return value:  Size  Location     Type
 10458 ;;		None               void
 10459 ;; Registers used:
 10460 ;;		wreg, status,2, status,0
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;Total ram usage:        1 bytes
 10471 ;; Hardware stack levels used:    1
 10472 ;; Hardware stack levels required when called:    7
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_ConfigureTimer2
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text79
 10481  00430E                     __ptext79:
 10482                           	opt stack 0
 10483  00430E                     _OpenTimer2:
 10484                           	opt stack 22
 10485                           
 10486                           ;incstack = 0
 10487                           ;OpenTimer2@config stored from wreg
 10488  00430E  0100               	movlb	0	; () banked
 10489  004310  6F70               	movwf	OpenTimer2@config& (0+255),b
 10490                           
 10491                           ; BSR set to: 0
 10492  004312  0100               	movlb	0	; () banked
 10493  004314  5170               	movf	OpenTimer2@config& (0+255),w,b
 10494  004316  0BFB               	andlw	251
 10495  004318  6ECA               	movwf	4042,c	;volatile
 10496                           
 10497                           ; BSR set to: 0
 10498  00431A  0E00               	movlw	0
 10499  00431C  6ECC               	movwf	4044,c	;volatile
 10500                           
 10501                           ; BSR set to: 0
 10502  00431E  929E               	bcf	3998,1,c	;volatile
 10503                           
 10504                           ; BSR set to: 0
 10505  004320  0100               	movlb	0	; () banked
 10506  004322  AF70               	btfss	OpenTimer2@config& (0+255),7,b
 10507  004324  D002               	goto	l1165
 10508                           
 10509                           ; BSR set to: 0
 10510  004326  829D               	bsf	3997,1,c	;volatile
 10511  004328  D001               	goto	l1166
 10512  00432A                     l1165:
 10513                           
 10514                           ; BSR set to: 0
 10515  00432A  929D               	bcf	3997,1,c	;volatile
 10516  00432C                     l1166:
 10517                           
 10518                           ; BSR set to: 0
 10519  00432C  84CA               	bsf	4042,2,c	;volatile
 10520                           
 10521                           ; BSR set to: 0
 10522  00432E  0012               	return		;funcret
 10523  004330                     __end_of_OpenTimer2:
 10524                           	opt stack 0
 10525                           prodh	equ	0xFF4
 10526                           prodl	equ	0xFF3
 10527                           intcon	equ	0xFF2
 10528                           intcon2	equ	0xFF1
 10529                           intcon3	equ	0xFF0
 10530                           postinc0	equ	0xFEE
 10531                           wreg	equ	0xFE8
 10532                           indf2	equ	0xFDF
 10533                           postinc2	equ	0xFDE
 10534                           postdec2	equ	0xFDD
 10535                           fsr2h	equ	0xFDA
 10536                           fsr2l	equ	0xFD9
 10537                           status	equ	0xFD8
 10538                           
 10539 ;; *************** function _ConfigureTimer1 *****************
 10540 ;; Defined at:
 10541 ;;		line 156 in file "FastBuggy17_Main_Code_TUNING.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;		None
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;		None               void
 10548 ;; Registers used:
 10549 ;;		wreg, status,2, status,0, cstack
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;Total ram usage:        0 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:    8
 10562 ;; This function calls:
 10563 ;;		_OpenTimer1
 10564 ;;		_WriteTimer1
 10565 ;; This function is called by:
 10566 ;;		_main
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text80
 10571  0043DC                     __ptext80:
 10572                           	opt stack 0
 10573  0043DC                     _ConfigureTimer1:
 10574                           	opt stack 22
 10575                           
 10576                           ;FastBuggy17_Main_Code_TUNING.c: 158: OpenTimer1(0b01111111
 10577                           ;FastBuggy17_Main_Code_TUNING.c: 159: & 0b11111111
 10578                           ;FastBuggy17_Main_Code_TUNING.c: 160: & 0b11111101
 10579                           ;FastBuggy17_Main_Code_TUNING.c: 161: & 0b11011111
 10580                           ;FastBuggy17_Main_Code_TUNING.c: 162: & 0b11110111
 10581                           ;FastBuggy17_Main_Code_TUNING.c: 163: & 0b11111111);
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;incstack = 0
 10585  0043DC  0E55               	movlw	85
 10586  0043DE  EC01  F020         	call	_OpenTimer1
 10587                           
 10588                           ;FastBuggy17_Main_Code_TUNING.c: 167: T1CONbits.TMR1ON = 0;
 10589  0043E2  90CD               	bcf	4045,0,c	;volatile
 10590                           
 10591                           ;FastBuggy17_Main_Code_TUNING.c: 169: WriteTimer1(0);
 10592  0043E4  0E00               	movlw	0
 10593  0043E6  0100               	movlb	0	; () banked
 10594  0043E8  6F71               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10595  0043EA  0E00               	movlw	0
 10596  0043EC  6F70               	movwf	WriteTimer1@timer1& (0+255),b
 10597  0043EE  EC4D  F022         	call	_WriteTimer1	;wreg free
 10598  0043F2  0012               	return		;funcret
 10599  0043F4                     __end_of_ConfigureTimer1:
 10600                           	opt stack 0
 10601                           prodh	equ	0xFF4
 10602                           prodl	equ	0xFF3
 10603                           intcon	equ	0xFF2
 10604                           intcon2	equ	0xFF1
 10605                           intcon3	equ	0xFF0
 10606                           postinc0	equ	0xFEE
 10607                           wreg	equ	0xFE8
 10608                           indf2	equ	0xFDF
 10609                           postinc2	equ	0xFDE
 10610                           postdec2	equ	0xFDD
 10611                           fsr2h	equ	0xFDA
 10612                           fsr2l	equ	0xFD9
 10613                           status	equ	0xFD8
 10614                           
 10615 ;; *************** function _WriteTimer1 *****************
 10616 ;; Defined at:
 10617 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;  timer1          2   16[BANK0 ] unsigned int 
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;  timer           2   18[BANK0 ] struct Timers
 10622 ;; Return value:  Size  Location     Type
 10623 ;;		None               void
 10624 ;; Registers used:
 10625 ;;		None
 10626 ;; Tracked objects:
 10627 ;;		On entry : 0/0
 10628 ;;		On exit  : 0/0
 10629 ;;		Unchanged: 0/0
 10630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10631 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;Total ram usage:        4 bytes
 10636 ;; Hardware stack levels used:    1
 10637 ;; Hardware stack levels required when called:    7
 10638 ;; This function calls:
 10639 ;;		Nothing
 10640 ;; This function is called by:
 10641 ;;		_ConfigureUltrasound
 10642 ;;		_ConfigureTimer1
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text81
 10647  00449A                     __ptext81:
 10648                           	opt stack 0
 10649  00449A                     _WriteTimer1:
 10650                           	opt stack 22
 10651                           
 10652                           ;incstack = 0
 10653  00449A  C070  F072         	movff	WriteTimer1@timer1,WriteTimer1@timer
 10654  00449E  C071  F073         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 10655  0044A2  C073  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 10656  0044A6  C072  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 10657  0044AA  0012               	return		;funcret
 10658  0044AC                     __end_of_WriteTimer1:
 10659                           	opt stack 0
 10660                           prodh	equ	0xFF4
 10661                           prodl	equ	0xFF3
 10662                           intcon	equ	0xFF2
 10663                           intcon2	equ	0xFF1
 10664                           intcon3	equ	0xFF0
 10665                           postinc0	equ	0xFEE
 10666                           wreg	equ	0xFE8
 10667                           indf2	equ	0xFDF
 10668                           postinc2	equ	0xFDE
 10669                           postdec2	equ	0xFDD
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           
 10674 ;; *************** function _OpenTimer1 *****************
 10675 ;; Defined at:
 10676 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  config          1    wreg     unsigned char 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  config          1   16[BANK0 ] unsigned char 
 10681 ;; Return value:  Size  Location     Type
 10682 ;;		None               void
 10683 ;; Registers used:
 10684 ;;		wreg, status,2, status,0
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10694 ;;Total ram usage:        1 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:    7
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_ConfigureTimer1
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text82
 10705  004002                     __ptext82:
 10706                           	opt stack 0
 10707  004002                     _OpenTimer1:
 10708                           	opt stack 22
 10709                           
 10710                           ;incstack = 0
 10711                           ;OpenTimer1@config stored from wreg
 10712  004002  0100               	movlb	0	; () banked
 10713  004004  6F70               	movwf	OpenTimer1@config& (0+255),b
 10714                           
 10715                           ; BSR set to: 0
 10716  004006  0100               	movlb	0	; () banked
 10717  004008  5170               	movf	OpenTimer1@config& (0+255),w,b
 10718  00400A  0B7E               	andlw	126
 10719  00400C  6ECD               	movwf	4045,c	;volatile
 10720                           
 10721                           ; BSR set to: 0
 10722  00400E  0100               	movlb	0	; () banked
 10723  004010  AD70               	btfss	OpenTimer1@config& (0+255),6,b
 10724  004012  D002               	goto	l1134
 10725                           
 10726                           ; BSR set to: 0
 10727  004014  8ECD               	bsf	4045,7,c	;volatile
 10728  004016  D002               	goto	l7503
 10729  004018                     l1134:
 10730                           
 10731                           ; BSR set to: 0
 10732  004018  9ECD               	bcf	4045,7,c	;volatile
 10733  00401A  D000               	goto	l7503
 10734  00401C                     l7503:
 10735                           
 10736                           ; BSR set to: 0
 10737  00401C  0E00               	movlw	0
 10738  00401E  6ECF               	movwf	4047,c	;volatile
 10739  004020  0E00               	movlw	0
 10740  004022  6ECE               	movwf	4046,c	;volatile
 10741                           
 10742                           ; BSR set to: 0
 10743  004024  909E               	bcf	3998,0,c	;volatile
 10744                           
 10745                           ; BSR set to: 0
 10746  004026  0100               	movlb	0	; () banked
 10747  004028  AF70               	btfss	OpenTimer1@config& (0+255),7,b
 10748  00402A  D002               	goto	l1136
 10749                           
 10750                           ; BSR set to: 0
 10751  00402C  809D               	bsf	3997,0,c	;volatile
 10752  00402E  D001               	goto	l1137
 10753  004030                     l1136:
 10754                           
 10755                           ; BSR set to: 0
 10756  004030  909D               	bcf	3997,0,c	;volatile
 10757  004032                     l1137:
 10758                           
 10759                           ; BSR set to: 0
 10760  004032  80CD               	bsf	4045,0,c	;volatile
 10761                           
 10762                           ; BSR set to: 0
 10763  004034  0012               	return		;funcret
 10764  004036                     __end_of_OpenTimer1:
 10765                           	opt stack 0
 10766                           prodh	equ	0xFF4
 10767                           prodl	equ	0xFF3
 10768                           intcon	equ	0xFF2
 10769                           intcon2	equ	0xFF1
 10770                           intcon3	equ	0xFF0
 10771                           postinc0	equ	0xFEE
 10772                           wreg	equ	0xFE8
 10773                           indf2	equ	0xFDF
 10774                           postinc2	equ	0xFDE
 10775                           postdec2	equ	0xFDD
 10776                           fsr2h	equ	0xFDA
 10777                           fsr2l	equ	0xFD9
 10778                           status	equ	0xFD8
 10779                           
 10780 ;; *************** function _ConfigureTimer0 *****************
 10781 ;; Defined at:
 10782 ;;		line 142 in file "FastBuggy17_Main_Code_TUNING.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;		None               void
 10789 ;; Registers used:
 10790 ;;		wreg, status,2, status,0, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10800 ;;Total ram usage:        0 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    8
 10803 ;; This function calls:
 10804 ;;		_OpenTimer0
 10805 ;;		_WriteTimer0
 10806 ;; This function is called by:
 10807 ;;		_main
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text83
 10812  00440A                     __ptext83:
 10813                           	opt stack 0
 10814  00440A                     _ConfigureTimer0:
 10815                           	opt stack 22
 10816                           
 10817                           ;FastBuggy17_Main_Code_TUNING.c: 144: OpenTimer0(0b11111111
 10818                           ;FastBuggy17_Main_Code_TUNING.c: 145: & 0b10111111
 10819                           ;FastBuggy17_Main_Code_TUNING.c: 146: & 0b11011111
 10820                           ;FastBuggy17_Main_Code_TUNING.c: 147: & 0b11111111);
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;incstack = 0
 10824  00440A  0E9F               	movlw	159
 10825  00440C  EC3B  F021         	call	_OpenTimer0
 10826                           
 10827                           ;FastBuggy17_Main_Code_TUNING.c: 151: WriteTimer0(63036);
 10828  004410  0EF6               	movlw	246
 10829  004412  0100               	movlb	0	; () banked
 10830  004414  6F71               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 10831  004416  0E3C               	movlw	60
 10832  004418  6F70               	movwf	WriteTimer0@timer0& (0+255),b
 10833  00441A  EC56  F022         	call	_WriteTimer0	;wreg free
 10834  00441E  0012               	return		;funcret
 10835  004420                     __end_of_ConfigureTimer0:
 10836                           	opt stack 0
 10837                           prodh	equ	0xFF4
 10838                           prodl	equ	0xFF3
 10839                           intcon	equ	0xFF2
 10840                           intcon2	equ	0xFF1
 10841                           intcon3	equ	0xFF0
 10842                           postinc0	equ	0xFEE
 10843                           wreg	equ	0xFE8
 10844                           indf2	equ	0xFDF
 10845                           postinc2	equ	0xFDE
 10846                           postdec2	equ	0xFDD
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function _WriteTimer0 *****************
 10852 ;; Defined at:
 10853 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;  timer0          2   16[BANK0 ] unsigned int 
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;  timer           2   18[BANK0 ] struct Timers
 10858 ;; Return value:  Size  Location     Type
 10859 ;;		None               void
 10860 ;; Registers used:
 10861 ;;		None
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10871 ;;Total ram usage:        4 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    7
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_ConfigureTimer0
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text84
 10882  0044AC                     __ptext84:
 10883                           	opt stack 0
 10884  0044AC                     _WriteTimer0:
 10885                           	opt stack 22
 10886                           
 10887                           ;incstack = 0
 10888  0044AC  C070  F072         	movff	WriteTimer0@timer0,WriteTimer0@timer
 10889  0044B0  C071  F073         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 10890  0044B4  C073  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 10891  0044B8  C072  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 10892  0044BC  0012               	return		;funcret
 10893  0044BE                     __end_of_WriteTimer0:
 10894                           	opt stack 0
 10895                           prodh	equ	0xFF4
 10896                           prodl	equ	0xFF3
 10897                           intcon	equ	0xFF2
 10898                           intcon2	equ	0xFF1
 10899                           intcon3	equ	0xFF0
 10900                           postinc0	equ	0xFEE
 10901                           wreg	equ	0xFE8
 10902                           indf2	equ	0xFDF
 10903                           postinc2	equ	0xFDE
 10904                           postdec2	equ	0xFDD
 10905                           fsr2h	equ	0xFDA
 10906                           fsr2l	equ	0xFD9
 10907                           status	equ	0xFD8
 10908                           
 10909 ;; *************** function _OpenTimer0 *****************
 10910 ;; Defined at:
 10911 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  config          1    wreg     unsigned char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;  config          1   16[BANK0 ] unsigned char 
 10916 ;; Return value:  Size  Location     Type
 10917 ;;		None               void
 10918 ;; Registers used:
 10919 ;;		wreg, status,2, status,0
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;Total ram usage:        1 bytes
 10930 ;; Hardware stack levels used:    1
 10931 ;; Hardware stack levels required when called:    7
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_ConfigureTimer0
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text85
 10940  004276                     __ptext85:
 10941                           	opt stack 0
 10942  004276                     _OpenTimer0:
 10943                           	opt stack 22
 10944                           
 10945                           ;incstack = 0
 10946                           ;OpenTimer0@config stored from wreg
 10947  004276  0100               	movlb	0	; () banked
 10948  004278  6F70               	movwf	OpenTimer0@config& (0+255),b
 10949                           
 10950                           ; BSR set to: 0
 10951  00427A  0100               	movlb	0	; () banked
 10952  00427C  5170               	movf	OpenTimer0@config& (0+255),w,b
 10953  00427E  0B7F               	andlw	127
 10954  004280  6ED5               	movwf	4053,c	;volatile
 10955                           
 10956                           ; BSR set to: 0
 10957  004282  0E00               	movlw	0
 10958  004284  6ED7               	movwf	4055,c	;volatile
 10959                           
 10960                           ; BSR set to: 0
 10961  004286  0E00               	movlw	0
 10962  004288  6ED6               	movwf	4054,c	;volatile
 10963                           
 10964                           ; BSR set to: 0
 10965  00428A  94F2               	bcf	intcon,2,c	;volatile
 10966                           
 10967                           ; BSR set to: 0
 10968  00428C  0100               	movlb	0	; () banked
 10969  00428E  AF70               	btfss	OpenTimer0@config& (0+255),7,b
 10970  004290  D002               	goto	l1110
 10971                           
 10972                           ; BSR set to: 0
 10973  004292  8AF2               	bsf	intcon,5,c	;volatile
 10974  004294  D001               	goto	l1111
 10975  004296                     l1110:
 10976                           
 10977                           ; BSR set to: 0
 10978  004296  9AF2               	bcf	intcon,5,c	;volatile
 10979  004298                     l1111:
 10980                           
 10981                           ; BSR set to: 0
 10982  004298  8ED5               	bsf	4053,7,c	;volatile
 10983                           
 10984                           ; BSR set to: 0
 10985  00429A  0012               	return		;funcret
 10986  00429C                     __end_of_OpenTimer0:
 10987                           	opt stack 0
 10988                           prodh	equ	0xFF4
 10989                           prodl	equ	0xFF3
 10990                           intcon	equ	0xFF2
 10991                           intcon2	equ	0xFF1
 10992                           intcon3	equ	0xFF0
 10993                           postinc0	equ	0xFEE
 10994                           wreg	equ	0xFE8
 10995                           indf2	equ	0xFDF
 10996                           postinc2	equ	0xFDE
 10997                           postdec2	equ	0xFDD
 10998                           fsr2h	equ	0xFDA
 10999                           fsr2l	equ	0xFD9
 11000                           status	equ	0xFD8
 11001                           
 11002 ;; *************** function _ConfigurePWM *****************
 11003 ;; Defined at:
 11004 ;;		line 192 in file "FastBuggy17_Main_Code_TUNING.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;		None
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;		None               void
 11011 ;; Registers used:
 11012 ;;		wreg, status,2, cstack
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;Total ram usage:        0 bytes
 11023 ;; Hardware stack levels used:    1
 11024 ;; Hardware stack levels required when called:    8
 11025 ;; This function calls:
 11026 ;;		_OpenPWM4
 11027 ;;		_OpenPWM5
 11028 ;; This function is called by:
 11029 ;;		_main
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text86
 11034  00458C                     __ptext86:
 11035                           	opt stack 0
 11036  00458C                     _ConfigurePWM:
 11037                           	opt stack 22
 11038                           
 11039                           ;FastBuggy17_Main_Code_TUNING.c: 194: OpenPWM4(130);
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;incstack = 0
 11043  00458C  0E82               	movlw	130
 11044  00458E  EC61  F021         	call	_OpenPWM4
 11045                           
 11046                           ;FastBuggy17_Main_Code_TUNING.c: 195: OpenPWM5(130);
 11047  004592  0E82               	movlw	130
 11048  004594  EC4E  F021         	call	_OpenPWM5
 11049  004598  0012               	return		;funcret
 11050  00459A                     __end_of_ConfigurePWM:
 11051                           	opt stack 0
 11052                           prodh	equ	0xFF4
 11053                           prodl	equ	0xFF3
 11054                           intcon	equ	0xFF2
 11055                           intcon2	equ	0xFF1
 11056                           intcon3	equ	0xFF0
 11057                           postinc0	equ	0xFEE
 11058                           wreg	equ	0xFE8
 11059                           indf2	equ	0xFDF
 11060                           postinc2	equ	0xFDE
 11061                           postdec2	equ	0xFDD
 11062                           fsr2h	equ	0xFDA
 11063                           fsr2l	equ	0xFD9
 11064                           status	equ	0xFD8
 11065                           
 11066 ;; *************** function _OpenPWM5 *****************
 11067 ;; Defined at:
 11068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  period          1    wreg     unsigned char 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  period          1   16[BANK0 ] unsigned char 
 11073 ;; Return value:  Size  Location     Type
 11074 ;;		None               void
 11075 ;; Registers used:
 11076 ;;		wreg, status,2
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11085 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11086 ;;Total ram usage:        1 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:    7
 11089 ;; This function calls:
 11090 ;;		Nothing
 11091 ;; This function is called by:
 11092 ;;		_ConfigurePWM
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           	psect	text87
 11097  00429C                     __ptext87:
 11098                           	opt stack 0
 11099  00429C                     _OpenPWM5:
 11100                           	opt stack 22
 11101                           
 11102                           ;incstack = 0
 11103                           ;OpenPWM5@period stored from wreg
 11104  00429C  0100               	movlb	0	; () banked
 11105  00429E  6F70               	movwf	OpenPWM5@period& (0+255),b
 11106                           
 11107                           ; BSR set to: 0
 11108  0042A0  0E0C               	movlw	12
 11109  0042A2  6E70               	movwf	3952,c	;volatile
 11110                           
 11111                           ; BSR set to: 0
 11112  0042A4  ACB1               	btfss	4017,6,c	;volatile
 11113                           
 11114                           ; BSR set to: 0
 11115  0042A6  B6B1               	btfsc	4017,3,c	;volatile
 11116  0042A8  D005               	goto	l1088
 11117                           
 11118                           ; BSR set to: 0
 11119  0042AA  94CA               	bcf	4042,2,c	;volatile
 11120                           
 11121                           ; BSR set to: 0
 11122  0042AC  C070  FFCB         	movff	OpenPWM5@period,4043	;volatile
 11123                           
 11124                           ; BSR set to: 0
 11125  0042B0  84CA               	bsf	4042,2,c	;volatile
 11126  0042B2  D005               	goto	l7555
 11127  0042B4                     l1088:
 11128                           
 11129                           ; BSR set to: 0
 11130  0042B4  9476               	bcf	3958,2,c	;volatile
 11131                           
 11132                           ; BSR set to: 0
 11133  0042B6  C070  FF77         	movff	OpenPWM5@period,3959	;volatile
 11134                           
 11135                           ; BSR set to: 0
 11136  0042BA  8476               	bsf	3958,2,c	;volatile
 11137  0042BC  D000               	goto	l7555
 11138  0042BE                     l7555:
 11139                           
 11140                           ; BSR set to: 0
 11141  0042BE  9898               	bcf	3992,4,c	;volatile
 11142                           
 11143                           ; BSR set to: 0
 11144  0042C0  0012               	return		;funcret
 11145  0042C2                     __end_of_OpenPWM5:
 11146                           	opt stack 0
 11147                           prodh	equ	0xFF4
 11148                           prodl	equ	0xFF3
 11149                           intcon	equ	0xFF2
 11150                           intcon2	equ	0xFF1
 11151                           intcon3	equ	0xFF0
 11152                           postinc0	equ	0xFEE
 11153                           wreg	equ	0xFE8
 11154                           indf2	equ	0xFDF
 11155                           postinc2	equ	0xFDE
 11156                           postdec2	equ	0xFDD
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           
 11161 ;; *************** function _OpenPWM4 *****************
 11162 ;; Defined at:
 11163 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  period          1    wreg     unsigned char 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  period          1   16[BANK0 ] unsigned char 
 11168 ;; Return value:  Size  Location     Type
 11169 ;;		None               void
 11170 ;; Registers used:
 11171 ;;		wreg, status,2
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11181 ;;Total ram usage:        1 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    7
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_ConfigurePWM
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text88
 11192  0042C2                     __ptext88:
 11193                           	opt stack 0
 11194  0042C2                     _OpenPWM4:
 11195                           	opt stack 22
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;incstack = 0
 11199                           ;OpenPWM4@period stored from wreg
 11200  0042C2  0100               	movlb	0	; () banked
 11201  0042C4  6F70               	movwf	OpenPWM4@period& (0+255),b
 11202                           
 11203                           ; BSR set to: 0
 11204  0042C6  0E0C               	movlw	12
 11205  0042C8  6E73               	movwf	3955,c	;volatile
 11206                           
 11207                           ; BSR set to: 0
 11208  0042CA  9698               	bcf	3992,3,c	;volatile
 11209                           
 11210                           ; BSR set to: 0
 11211  0042CC  ACB1               	btfss	4017,6,c	;volatile
 11212                           
 11213                           ; BSR set to: 0
 11214  0042CE  B6B1               	btfsc	4017,3,c	;volatile
 11215  0042D0  D005               	goto	l1062
 11216                           
 11217                           ; BSR set to: 0
 11218  0042D2  94CA               	bcf	4042,2,c	;volatile
 11219                           
 11220                           ; BSR set to: 0
 11221  0042D4  C070  FFCB         	movff	OpenPWM4@period,4043	;volatile
 11222                           
 11223                           ; BSR set to: 0
 11224  0042D8  84CA               	bsf	4042,2,c	;volatile
 11225  0042DA  D005               	goto	l1064
 11226  0042DC                     l1062:
 11227                           
 11228                           ; BSR set to: 0
 11229  0042DC  9476               	bcf	3958,2,c	;volatile
 11230                           
 11231                           ; BSR set to: 0
 11232  0042DE  C070  FF77         	movff	OpenPWM4@period,3959	;volatile
 11233                           
 11234                           ; BSR set to: 0
 11235  0042E2  8476               	bsf	3958,2,c	;volatile
 11236  0042E4  D000               	goto	l1064
 11237  0042E6                     l1064:
 11238                           
 11239                           ; BSR set to: 0
 11240  0042E6  0012               	return		;funcret
 11241  0042E8                     __end_of_OpenPWM4:
 11242                           	opt stack 0
 11243                           prodh	equ	0xFF4
 11244                           prodl	equ	0xFF3
 11245                           intcon	equ	0xFF2
 11246                           intcon2	equ	0xFF1
 11247                           intcon3	equ	0xFF0
 11248                           postinc0	equ	0xFEE
 11249                           wreg	equ	0xFE8
 11250                           indf2	equ	0xFDF
 11251                           postinc2	equ	0xFDE
 11252                           postdec2	equ	0xFDD
 11253                           fsr2h	equ	0xFDA
 11254                           fsr2l	equ	0xFD9
 11255                           status	equ	0xFD8
 11256                           
 11257 ;; *************** function _ConfigureInterrupts *****************
 11258 ;; Defined at:
 11259 ;;		line 85 in file "FastBuggy17_Main_Code_TUNING.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;		None
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;		None               void
 11266 ;; Registers used:
 11267 ;;		None
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    7
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_main
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text89
 11288  004228                     __ptext89:
 11289                           	opt stack 0
 11290  004228                     _ConfigureInterrupts:
 11291                           	opt stack 23
 11292                           
 11293                           ;FastBuggy17_Main_Code_TUNING.c: 87: INTCONbits.GIE = 1;
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;incstack = 0
 11297  004228  8EF2               	bsf	intcon,7,c	;volatile
 11298                           
 11299                           ;FastBuggy17_Main_Code_TUNING.c: 88: INTCONbits.PEIE = 1;
 11300  00422A  8CF2               	bsf	intcon,6,c	;volatile
 11301                           
 11302                           ;FastBuggy17_Main_Code_TUNING.c: 89: RCONbits.IPEN = 1;
 11303  00422C  8ED0               	bsf	4048,7,c	;volatile
 11304                           
 11305                           ;FastBuggy17_Main_Code_TUNING.c: 111: INTCON3bits.INT3IE = 0;
 11306  00422E  9AF0               	bcf	intcon3,5,c	;volatile
 11307                           
 11308                           ;FastBuggy17_Main_Code_TUNING.c: 112: INTCON3bits.INT3IF = 0;
 11309  004230  94F0               	bcf	intcon3,2,c	;volatile
 11310                           
 11311                           ;FastBuggy17_Main_Code_TUNING.c: 113: INTCON2bits.INTEDG3 = 1;
 11312  004232  86F1               	bsf	intcon2,3,c	;volatile
 11313                           
 11314                           ;FastBuggy17_Main_Code_TUNING.c: 114: INTCON2bits.INT3IP = 1;
 11315  004234  82F1               	bsf	intcon2,1,c	;volatile
 11316                           
 11317                           ;FastBuggy17_Main_Code_TUNING.c: 117: INTCONbits.TMR0IE = 1;
 11318  004236  8AF2               	bsf	intcon,5,c	;volatile
 11319                           
 11320                           ;FastBuggy17_Main_Code_TUNING.c: 118: INTCONbits.TMR0IF = 0;
 11321  004238  94F2               	bcf	intcon,2,c	;volatile
 11322                           
 11323                           ;FastBuggy17_Main_Code_TUNING.c: 119: INTCON2bits.TMR0IP = 1;
 11324  00423A  84F1               	bsf	intcon2,2,c	;volatile
 11325                           
 11326                           ;FastBuggy17_Main_Code_TUNING.c: 128: PIE1bits.ADIE = 0;
 11327  00423C  9C9D               	bcf	3997,6,c	;volatile
 11328                           
 11329                           ;FastBuggy17_Main_Code_TUNING.c: 129: PIR1bits.ADIF = 0;
 11330  00423E  9C9E               	bcf	3998,6,c	;volatile
 11331                           
 11332                           ;FastBuggy17_Main_Code_TUNING.c: 130: IPR1bits.ADIP = 0;
 11333  004240  9C9F               	bcf	3999,6,c	;volatile
 11334                           
 11335                           ;FastBuggy17_Main_Code_TUNING.c: 133: PIE1bits.RC1IE = 0;
 11336  004242  9A9D               	bcf	3997,5,c	;volatile
 11337                           
 11338                           ;FastBuggy17_Main_Code_TUNING.c: 134: PIE1bits.TX1IE = 0;
 11339  004244  989D               	bcf	3997,4,c	;volatile
 11340                           
 11341                           ;FastBuggy17_Main_Code_TUNING.c: 135: PIR1bits.RC1IF = 0;
 11342  004246  9A9E               	bcf	3998,5,c	;volatile
 11343                           
 11344                           ;FastBuggy17_Main_Code_TUNING.c: 136: PIR1bits.TX1IF = 0;
 11345  004248  989E               	bcf	3998,4,c	;volatile
 11346                           
 11347                           ;FastBuggy17_Main_Code_TUNING.c: 137: IPR1bits.RC1IP = 0;
 11348  00424A  9A9F               	bcf	3999,5,c	;volatile
 11349                           
 11350                           ;FastBuggy17_Main_Code_TUNING.c: 138: IPR1bits.TX1IP = 0;
 11351  00424C  989F               	bcf	3999,4,c	;volatile
 11352  00424E  0012               	return		;funcret
 11353  004250                     __end_of_ConfigureInterrupts:
 11354                           	opt stack 0
 11355                           prodh	equ	0xFF4
 11356                           prodl	equ	0xFF3
 11357                           intcon	equ	0xFF2
 11358                           intcon2	equ	0xFF1
 11359                           intcon3	equ	0xFF0
 11360                           postinc0	equ	0xFEE
 11361                           wreg	equ	0xFE8
 11362                           indf2	equ	0xFDF
 11363                           postinc2	equ	0xFDE
 11364                           postdec2	equ	0xFDD
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _ConfigureBuggyIO *****************
 11370 ;; Defined at:
 11371 ;;		line 215 in file "FastBuggy17_Main_Code_TUNING.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;		None               void
 11378 ;; Registers used:
 11379 ;;		wreg, status,2
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    7
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_main
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text90
 11400  0043A8                     __ptext90:
 11401                           	opt stack 0
 11402  0043A8                     _ConfigureBuggyIO:
 11403                           	opt stack 23
 11404                           
 11405                           ;FastBuggy17_Main_Code_TUNING.c: 218: TRISA = 0xFF;
 11406                           
 11407                           ;incstack = 0
 11408  0043A8  6892               	setf	3986,c	;volatile
 11409                           
 11410                           ;FastBuggy17_Main_Code_TUNING.c: 221: TRISB = 0xFF;
 11411  0043AA  6893               	setf	3987,c	;volatile
 11412                           
 11413                           ;FastBuggy17_Main_Code_TUNING.c: 224: TRISC = 0x9F;
 11414  0043AC  0E9F               	movlw	159
 11415  0043AE  6E94               	movwf	3988,c	;volatile
 11416                           
 11417                           ;FastBuggy17_Main_Code_TUNING.c: 227: TRISD = 0xE0;
 11418  0043B0  0EE0               	movlw	224
 11419  0043B2  6E95               	movwf	3989,c	;volatile
 11420                           
 11421                           ;FastBuggy17_Main_Code_TUNING.c: 230: TRISE = 0x00;
 11422  0043B4  0E00               	movlw	0
 11423  0043B6  6E96               	movwf	3990,c	;volatile
 11424                           
 11425                           ;FastBuggy17_Main_Code_TUNING.c: 233: TRISG = 0xE7;
 11426  0043B8  0EE7               	movlw	231
 11427  0043BA  6E98               	movwf	3992,c	;volatile
 11428                           
 11429                           ;FastBuggy17_Main_Code_TUNING.c: 236: TRISJ = 0x00;
 11430  0043BC  0E00               	movlw	0
 11431  0043BE  6E9A               	movwf	3994,c	;volatile
 11432  0043C0  0012               	return		;funcret
 11433  0043C2                     __end_of_ConfigureBuggyIO:
 11434                           	opt stack 0
 11435                           prodh	equ	0xFF4
 11436                           prodl	equ	0xFF3
 11437                           intcon	equ	0xFF2
 11438                           intcon2	equ	0xFF1
 11439                           intcon3	equ	0xFF0
 11440                           postinc0	equ	0xFEE
 11441                           wreg	equ	0xFE8
 11442                           indf2	equ	0xFDF
 11443                           postinc2	equ	0xFDE
 11444                           postdec2	equ	0xFDD
 11445                           fsr2h	equ	0xFDA
 11446                           fsr2l	equ	0xFD9
 11447                           status	equ	0xFD8
 11448                           
 11449 ;; *************** function _ConfigureADC *****************
 11450 ;; Defined at:
 11451 ;;		line 241 in file "FastBuggy17_Main_Code_TUNING.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;		None
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;		None
 11456 ;; Return value:  Size  Location     Type
 11457 ;;		None               void
 11458 ;; Registers used:
 11459 ;;		wreg, status,2, status,0, cstack
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;Total ram usage:        0 bytes
 11470 ;; Hardware stack levels used:    1
 11471 ;; Hardware stack levels required when called:    8
 11472 ;; This function calls:
 11473 ;;		_OpenADC
 11474 ;; This function is called by:
 11475 ;;		_main
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           	psect	text91
 11480  004474                     __ptext91:
 11481                           	opt stack 0
 11482  004474                     _ConfigureADC:
 11483                           	opt stack 22
 11484                           
 11485                           ;FastBuggy17_Main_Code_TUNING.c: 243: OpenADC(0b10011111
 11486                           ;FastBuggy17_Main_Code_TUNING.c: 244: & 0b11111111
 11487                           ;FastBuggy17_Main_Code_TUNING.c: 245: & 0b11110101,
 11488                           ;FastBuggy17_Main_Code_TUNING.c: 246: 0b10000111
 11489                           ;FastBuggy17_Main_Code_TUNING.c: 247: & 0b01111111
 11490                           ;FastBuggy17_Main_Code_TUNING.c: 248: & 0b11111110
 11491                           ;FastBuggy17_Main_Code_TUNING.c: 249: & 0b11111101,
 11492                           ;FastBuggy17_Main_Code_TUNING.c: 250: 9);
 11493                           
 11494                           ;incstack = 0
 11495  004474  0E04               	movlw	4
 11496  004476  0100               	movlb	0	; () banked
 11497  004478  6F70               	movwf	OpenADC@config2& (0+255),b
 11498  00447A  0E09               	movlw	9
 11499  00447C  0100               	movlb	0	; () banked
 11500  00447E  6F71               	movwf	OpenADC@portconfig& (0+255),b
 11501  004480  0E95               	movlw	149
 11502  004482  EC1F  F01B         	call	_OpenADC
 11503  004486  0012               	return		;funcret
 11504  004488                     __end_of_ConfigureADC:
 11505                           	opt stack 0
 11506                           prodh	equ	0xFF4
 11507                           prodl	equ	0xFF3
 11508                           intcon	equ	0xFF2
 11509                           intcon2	equ	0xFF1
 11510                           intcon3	equ	0xFF0
 11511                           postinc0	equ	0xFEE
 11512                           wreg	equ	0xFE8
 11513                           indf2	equ	0xFDF
 11514                           postinc2	equ	0xFDE
 11515                           postdec2	equ	0xFDD
 11516                           fsr2h	equ	0xFDA
 11517                           fsr2l	equ	0xFD9
 11518                           status	equ	0xFD8
 11519                           
 11520 ;; *************** function _OpenADC *****************
 11521 ;; Defined at:
 11522 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;  config          1    wreg     unsigned char 
 11525 ;;  config2         1   16[BANK0 ] unsigned char 
 11526 ;;  portconfig      1   17[BANK0 ] unsigned char 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  config          1   20[BANK0 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;		None               void
 11531 ;; Registers used:
 11532 ;;		wreg, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;Total ram usage:        5 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    7
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_ConfigureADC
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           	psect	text92
 11553  00363E                     __ptext92:
 11554                           	opt stack 0
 11555  00363E                     _OpenADC:
 11556                           	opt stack 22
 11557                           
 11558                           ;incstack = 0
 11559                           ;OpenADC@config stored from wreg
 11560  00363E  0100               	movlb	0	; () banked
 11561  003640  6F74               	movwf	OpenADC@config& (0+255),b
 11562                           
 11563                           ; BSR set to: 0
 11564  003642  0E00               	movlw	0
 11565  003644  6EC2               	movwf	4034,c	;volatile
 11566  003646  0E00               	movlw	0
 11567  003648  6EC0               	movwf	4032,c	;volatile
 11568                           
 11569                           ; BSR set to: 0
 11570  00364A  0100               	movlb	0	; () banked
 11571  00364C  90D8               	bcf	status,0,c
 11572  00364E  3170               	rrcf	OpenADC@config2& (0+255),w,b
 11573  003650  0B3C               	andlw	60
 11574  003652  6EC2               	movwf	4034,c	;volatile
 11575                           
 11576                           ; BSR set to: 0
 11577  003654  C070  F072         	movff	OpenADC@config2,??_OpenADC
 11578  003658  0100               	movlb	0	; () banked
 11579  00365A  3B72               	swapf	??_OpenADC& (0+255),f,b
 11580  00365C  0EF0               	movlw	240
 11581  00365E  1772               	andwf	??_OpenADC& (0+255),f,b
 11582  003660  0E30               	movlw	48
 11583  003662  0100               	movlb	0	; () banked
 11584  003664  1772               	andwf	??_OpenADC& (0+255),f,b
 11585  003666  0100               	movlb	0	; () banked
 11586  003668  5171               	movf	OpenADC@portconfig& (0+255),w,b
 11587  00366A  0B0F               	andlw	15
 11588  00366C  0100               	movlb	0	; () banked
 11589  00366E  1172               	iorwf	??_OpenADC& (0+255),w,b
 11590  003670  6EC1               	movwf	4033,c	;volatile
 11591                           
 11592                           ; BSR set to: 0
 11593  003672  C074  F072         	movff	OpenADC@config,??_OpenADC
 11594  003676  0100               	movlb	0	; () banked
 11595  003678  90D8               	bcf	status,0,c
 11596  00367A  3772               	rlcf	??_OpenADC& (0+255),f,b
 11597  00367C  0100               	movlb	0	; () banked
 11598  00367E  90D8               	bcf	status,0,c
 11599  003680  3772               	rlcf	??_OpenADC& (0+255),f,b
 11600  003682  0E38               	movlw	56
 11601  003684  0100               	movlb	0	; () banked
 11602  003686  1772               	andwf	??_OpenADC& (0+255),f,b
 11603  003688  C074  F073         	movff	OpenADC@config,??_OpenADC+1
 11604  00368C  0100               	movlb	0	; () banked
 11605  00368E  3B73               	swapf	(??_OpenADC+1)& (0+255),f,b
 11606  003690  0E0F               	movlw	15
 11607  003692  1773               	andwf	(??_OpenADC+1)& (0+255),f,b
 11608  003694  0E07               	movlw	7
 11609  003696  0100               	movlb	0	; () banked
 11610  003698  1773               	andwf	(??_OpenADC+1)& (0+255),f,b
 11611  00369A  0100               	movlb	0	; () banked
 11612  00369C  5174               	movf	OpenADC@config& (0+255),w,b
 11613  00369E  0B80               	andlw	128
 11614  0036A0  0100               	movlb	0	; () banked
 11615  0036A2  1173               	iorwf	(??_OpenADC+1)& (0+255),w,b
 11616  0036A4  0100               	movlb	0	; () banked
 11617  0036A6  1172               	iorwf	??_OpenADC& (0+255),w,b
 11618  0036A8  6EC0               	movwf	4032,c	;volatile
 11619                           
 11620                           ; BSR set to: 0
 11621  0036AA  0100               	movlb	0	; () banked
 11622  0036AC  AF70               	btfss	OpenADC@config2& (0+255),7,b
 11623  0036AE  D003               	goto	l1032
 11624                           
 11625                           ; BSR set to: 0
 11626  0036B0  9C9E               	bcf	3998,6,c	;volatile
 11627  0036B2  8C9D               	bsf	3997,6,c	;volatile
 11628  0036B4  8CF2               	bsf	intcon,6,c	;volatile
 11629  0036B6                     l1032:
 11630                           
 11631                           ; BSR set to: 0
 11632  0036B6  80C2               	bsf	4034,0,c	;volatile
 11633                           
 11634                           ; BSR set to: 0
 11635  0036B8  0012               	return		;funcret
 11636  0036BA                     __end_of_OpenADC:
 11637                           	opt stack 0
 11638                           prodh	equ	0xFF4
 11639                           prodl	equ	0xFF3
 11640                           intcon	equ	0xFF2
 11641                           intcon2	equ	0xFF1
 11642                           intcon3	equ	0xFF0
 11643                           postinc0	equ	0xFEE
 11644                           wreg	equ	0xFE8
 11645                           indf2	equ	0xFDF
 11646                           postinc2	equ	0xFDE
 11647                           postdec2	equ	0xFDD
 11648                           fsr2h	equ	0xFDA
 11649                           fsr2l	equ	0xFD9
 11650                           status	equ	0xFD8
 11651                           
 11652 ;; *************** function _CalculateSensorSums *****************
 11653 ;; Defined at:
 11654 ;;		line 390 in file "FastBuggy17_Main_Code_TUNING.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;		None
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  index           1  106[BANK0 ] unsigned char 
 11659 ;;  sum             1  105[BANK0 ] unsigned char 
 11660 ;; Return value:  Size  Location     Type
 11661 ;;                  1    wreg      unsigned char 
 11662 ;; Registers used:
 11663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11664 ;; Tracked objects:
 11665 ;;		On entry : 0/0
 11666 ;;		On exit  : 0/0
 11667 ;;		Unchanged: 0/0
 11668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11670 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11672 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11673 ;;Total ram usage:        5 bytes
 11674 ;; Hardware stack levels used:    1
 11675 ;; Hardware stack levels required when called:   12
 11676 ;; This function calls:
 11677 ;;		___ftmul
 11678 ;;		___fttol
 11679 ;;		___lbtoft
 11680 ;;		_pow
 11681 ;; This function is called by:
 11682 ;;		_main
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686                           	psect	text93
 11687  00324C                     __ptext93:
 11688                           	opt stack 0
 11689  00324C                     _CalculateSensorSums:
 11690                           	opt stack 18
 11691                           
 11692                           ;FastBuggy17_Main_Code_TUNING.c: 391: unsigned char index, sum = 0;
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;incstack = 0
 11696  00324C  0E00               	movlw	0
 11697  00324E  0100               	movlb	0	; () banked
 11698  003250  6FC9               	movwf	CalculateSensorSums@sum& (0+255),b
 11699                           
 11700                           ;FastBuggy17_Main_Code_TUNING.c: 393: for(index = 0; index < 5; index++) {
 11701  003252  0E00               	movlw	0
 11702  003254  0100               	movlb	0	; () banked
 11703  003256  6FCA               	movwf	CalculateSensorSums@index& (0+255),b
 11704  003258                     l7905:
 11705                           
 11706                           ; BSR set to: 0
 11707  003258  0E04               	movlw	4
 11708  00325A  0100               	movlb	0	; () banked
 11709  00325C  65CA               	cpfsgt	CalculateSensorSums@index& (0+255),b
 11710  00325E  D001               	goto	l7909
 11711                           
 11712                           ; BSR set to: 0
 11713  003260  D044               	goto	l7917
 11714  003262                     l7909:
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;FastBuggy17_Main_Code_TUNING.c: 395: sum += (unsigned char) (sensor_status[index] * pow
      +                          (2, index));
 11718  003262  0100               	movlb	0	; () banked
 11719  003264  51CA               	movf	CalculateSensorSums@index& (0+255),w,b
 11720  003266  EC7D  F020         	call	___lbtoft
 11721  00326A  C078  F0B8         	movff	?___lbtoft,pow@y
 11722  00326E  C079  F0B9         	movff	?___lbtoft+1,pow@y+1
 11723  003272  C07A  F0BA         	movff	?___lbtoft+2,pow@y+2
 11724  003276  0E00               	movlw	0
 11725  003278  0100               	movlb	0	; () banked
 11726  00327A  6FB5               	movwf	pow@x& (0+255),b
 11727  00327C  0E00               	movlw	0
 11728  00327E  0100               	movlb	0	; () banked
 11729  003280  6FB6               	movwf	(pow@x+1)& (0+255),b
 11730  003282  0E40               	movlw	64
 11731  003284  0100               	movlb	0	; () banked
 11732  003286  6FB7               	movwf	(pow@x+2)& (0+255),b
 11733  003288  EC1C  F00E         	call	_pow	;wreg free
 11734  00328C  C0B5  F0C6         	movff	?_pow,_CalculateSensorSums$3769
 11735  003290  C0B6  F0C7         	movff	?_pow+1,_CalculateSensorSums$3769+1
 11736  003294  C0B7  F0C8         	movff	?_pow+2,_CalculateSensorSums$3769+2
 11737                           
 11738                           ;FastBuggy17_Main_Code_TUNING.c: 395: sum += (unsigned char) (sensor_status[index] * pow
      +                          (2, index));
 11739  003298  C0C6  F07F         	movff	_CalculateSensorSums$3769,___ftmul@f2
 11740  00329C  C0C7  F080         	movff	_CalculateSensorSums$3769+1,___ftmul@f2+1
 11741  0032A0  C0C8  F081         	movff	_CalculateSensorSums$3769+2,___ftmul@f2+2
 11742  0032A4  0100               	movlb	0	; () banked
 11743  0032A6  51CA               	movf	CalculateSensorSums@index& (0+255),w,b
 11744  0032A8  0D01               	mullw	1
 11745  0032AA  0E23               	movlw	low _sensor_status
 11746  0032AC  24F3               	addwf	prodl,w,c
 11747  0032AE  6ED9               	movwf	fsr2l,c
 11748  0032B0  0E00               	movlw	high _sensor_status
 11749  0032B2  20F4               	addwfc	prodh,w,c
 11750  0032B4  6EDA               	movwf	fsr2h,c
 11751  0032B6  50DF               	movf	indf2,w,c
 11752  0032B8  EC7D  F020         	call	___lbtoft
 11753  0032BC  C078  F07C         	movff	?___lbtoft,___ftmul@f1
 11754  0032C0  C079  F07D         	movff	?___lbtoft+1,___ftmul@f1+1
 11755  0032C4  C07A  F07E         	movff	?___lbtoft+2,___ftmul@f1+2
 11756  0032C8  ECAC  F00F         	call	___ftmul	;wreg free
 11757  0032CC  C07C  F08B         	movff	?___ftmul,___fttol@f1
 11758  0032D0  C07D  F08C         	movff	?___ftmul+1,___fttol@f1+1
 11759  0032D4  C07E  F08D         	movff	?___ftmul+2,___fttol@f1+2
 11760  0032D8  EC3C  F012         	call	___fttol	;wreg free
 11761  0032DC  0100               	movlb	0	; () banked
 11762  0032DE  518B               	movf	?___fttol& (0+255),w,b
 11763  0032E0  0100               	movlb	0	; () banked
 11764  0032E2  27C9               	addwf	CalculateSensorSums@sum& (0+255),f,b
 11765                           
 11766                           ; BSR set to: 0
 11767  0032E4  0100               	movlb	0	; () banked
 11768  0032E6  2BCA               	incf	CalculateSensorSums@index& (0+255),f,b
 11769  0032E8  D7B7               	goto	l7905
 11770  0032EA                     l7917:
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;FastBuggy17_Main_Code_TUNING.c: 397: }
 11774                           ;FastBuggy17_Main_Code_TUNING.c: 399: return(sum);
 11775  0032EA  0100               	movlb	0	; () banked
 11776  0032EC  51C9               	movf	CalculateSensorSums@sum& (0+255),w,b
 11777  0032EE  D000               	goto	l791
 11778  0032F0                     l791:
 11779                           
 11780                           ; BSR set to: 0
 11781  0032F0  0012               	return		;funcret
 11782  0032F2                     __end_of_CalculateSensorSums:
 11783                           	opt stack 0
 11784                           prodh	equ	0xFF4
 11785                           prodl	equ	0xFF3
 11786                           intcon	equ	0xFF2
 11787                           intcon2	equ	0xFF1
 11788                           intcon3	equ	0xFF0
 11789                           postinc0	equ	0xFEE
 11790                           wreg	equ	0xFE8
 11791                           indf2	equ	0xFDF
 11792                           postinc2	equ	0xFDE
 11793                           postdec2	equ	0xFDD
 11794                           fsr2h	equ	0xFDA
 11795                           fsr2l	equ	0xFD9
 11796                           status	equ	0xFD8
 11797                           
 11798 ;; *************** function _pow *****************
 11799 ;; Defined at:
 11800 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
 11801 ;; Parameters:    Size  Location     Type
 11802 ;;  x               3   85[BANK0 ] unsigned char 
 11803 ;;  y               3   88[BANK0 ] unsigned char 
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;  yi              4   98[BANK0 ] unsigned long 
 11806 ;;  sign            1   97[BANK0 ] unsigned char 
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  3   85[BANK0 ] unsigned char 
 11809 ;; Registers used:
 11810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11819 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11820 ;;Total ram usage:       17 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; Hardware stack levels required when called:   11
 11823 ;; This function calls:
 11824 ;;		___ftge
 11825 ;;		___ftmul
 11826 ;;		___ftneg
 11827 ;;		___fttol
 11828 ;;		___lltoft
 11829 ;;		_exp
 11830 ;;		_log
 11831 ;; This function is called by:
 11832 ;;		_CalculateSensorSums
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836                           	psect	text94
 11837  001C38                     __ptext94:
 11838                           	opt stack 0
 11839  001C38                     _pow:
 11840                           	opt stack 18
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;incstack = 0
 11844  001C38  0E00               	movlw	0
 11845  001C3A  0100               	movlb	0	; () banked
 11846  001C3C  6FC1               	movwf	pow@sign& (0+255),b
 11847                           
 11848                           ; BSR set to: 0
 11849  001C3E  0100               	movlb	0	; () banked
 11850  001C40  51B5               	movf	pow@x& (0+255),w,b
 11851  001C42  0100               	movlb	0	; () banked
 11852  001C44  11B6               	iorwf	(pow@x+1)& (0+255),w,b
 11853  001C46  0100               	movlb	0	; () banked
 11854  001C48  11B7               	iorwf	(pow@x+2)& (0+255),w,b
 11855  001C4A  A4D8               	btfss	status,2,c
 11856  001C4C  D016               	goto	l7579
 11857                           
 11858                           ; BSR set to: 0
 11859  001C4E  0E00               	movlw	0
 11860  001C50  0100               	movlb	0	; () banked
 11861  001C52  6F70               	movwf	___ftge@ff1& (0+255),b
 11862  001C54  0E00               	movlw	0
 11863  001C56  0100               	movlb	0	; () banked
 11864  001C58  6F71               	movwf	(___ftge@ff1+1)& (0+255),b
 11865  001C5A  0E00               	movlw	0
 11866  001C5C  0100               	movlb	0	; () banked
 11867  001C5E  6F72               	movwf	(___ftge@ff1+2)& (0+255),b
 11868  001C60  C0B8  F073         	movff	pow@y,___ftge@ff2
 11869  001C64  C0B9  F074         	movff	pow@y+1,___ftge@ff2+1
 11870  001C68  C0BA  F075         	movff	pow@y+2,___ftge@ff2+2
 11871  001C6C  EC57  F017         	call	___ftge	;wreg free
 11872  001C70  0100               	movlb	0	; () banked
 11873  001C72  A0D8               	btfss	status,0,c
 11874  001C74  D045               	goto	L8
 11875  001C76  D03F               	goto	u7560
 11876                           
 11877                           ; BSR set to: 0
 11878                           
 11879                           ; BSR set to: 0
 11880                           
 11881                           ; BSR set to: 0
 11882  001C78  D0AB               	goto	l1795
 11883  001C7A                     l7579:
 11884                           
 11885                           ; BSR set to: 0
 11886  001C7A  0100               	movlb	0	; () banked
 11887  001C7C  51B8               	movf	pow@y& (0+255),w,b
 11888  001C7E  0100               	movlb	0	; () banked
 11889  001C80  11B9               	iorwf	(pow@y+1)& (0+255),w,b
 11890  001C82  0100               	movlb	0	; () banked
 11891  001C84  11BA               	iorwf	(pow@y+2)& (0+255),w,b
 11892  001C86  A4D8               	btfss	status,2,c
 11893  001C88  D009               	goto	l7585
 11894                           
 11895                           ; BSR set to: 0
 11896  001C8A  0E00               	movlw	0
 11897  001C8C  0100               	movlb	0	; () banked
 11898  001C8E  6FB5               	movwf	?_pow& (0+255),b
 11899  001C90  0E80               	movlw	128
 11900  001C92  0100               	movlb	0	; () banked
 11901  001C94  6FB6               	movwf	(?_pow+1)& (0+255),b
 11902  001C96  0E3F               	movlw	63
 11903  001C98  D03A               	goto	L7
 11904                           
 11905                           ; BSR set to: 0
 11906  001C9A  D09A               	goto	l1795
 11907  001C9C                     l7585:
 11908                           
 11909                           ; BSR set to: 0
 11910  001C9C  0100               	movlb	0	; () banked
 11911  001C9E  AFB7               	btfss	(pow@x+2)& (0+255),7,b
 11912  001CA0  D04D               	goto	l7597
 11913                           
 11914                           ; BSR set to: 0
 11915  001CA2  C0B8  F08B         	movff	pow@y,___fttol@f1
 11916  001CA6  C0B9  F08C         	movff	pow@y+1,___fttol@f1+1
 11917  001CAA  C0BA  F08D         	movff	pow@y+2,___fttol@f1+2
 11918  001CAE  EC3C  F012         	call	___fttol	;wreg free
 11919  001CB2  C08B  F0C2         	movff	?___fttol,pow@yi
 11920  001CB6  C08C  F0C3         	movff	?___fttol+1,pow@yi+1
 11921  001CBA  C08D  F0C4         	movff	?___fttol+2,pow@yi+2
 11922  001CBE  C08E  F0C5         	movff	?___fttol+3,pow@yi+3
 11923  001CC2  C0C2  F078         	movff	pow@yi,___lltoft@c
 11924  001CC6  C0C3  F079         	movff	pow@yi+1,___lltoft@c+1
 11925  001CCA  C0C4  F07A         	movff	pow@yi+2,___lltoft@c+2
 11926  001CCE  C0C5  F07B         	movff	pow@yi+3,___lltoft@c+3
 11927  001CD2  EC9F  F01A         	call	___lltoft	;wreg free
 11928  001CD6  0100               	movlb	0	; () banked
 11929  001CD8  51B8               	movf	pow@y& (0+255),w,b
 11930  001CDA  0100               	movlb	0	; () banked
 11931  001CDC  1978               	xorwf	?___lltoft& (0+255),w,b
 11932  001CDE  E10B               	bnz	u7560
 11933  001CE0  0100               	movlb	0	; () banked
 11934  001CE2  51B9               	movf	(pow@y+1)& (0+255),w,b
 11935  001CE4  0100               	movlb	0	; () banked
 11936  001CE6  1979               	xorwf	(?___lltoft+1)& (0+255),w,b
 11937  001CE8  E106               	bnz	u7560
 11938  001CEA  0100               	movlb	0	; () banked
 11939  001CEC  51BA               	movf	(pow@y+2)& (0+255),w,b
 11940  001CEE  0100               	movlb	0	; () banked
 11941  001CF0  197A               	xorwf	(?___lltoft+2)& (0+255),w,b
 11942  001CF2  B4D8               	btfsc	status,2,c
 11943  001CF4  D00F               	goto	l7593
 11944  001CF6                     u7560:
 11945                           
 11946                           ; BSR set to: 0
 11947  001CF6  0E00               	movlw	0
 11948  001CF8  0100               	movlb	0	; () banked
 11949  001CFA  6FDE               	movwf	(_errno+1)& (0+255),b
 11950  001CFC  0E21               	movlw	33
 11951  001CFE  6FDD               	movwf	_errno& (0+255),b
 11952  001D00                     L8:
 11953  001D00  0E00               	movlw	0
 11954  001D02  0100               	movlb	0	; () banked
 11955  001D04  6FB5               	movwf	?_pow& (0+255),b
 11956  001D06  0E00               	movlw	0
 11957  001D08  0100               	movlb	0	; () banked
 11958  001D0A  6FB6               	movwf	(?_pow+1)& (0+255),b
 11959  001D0C  0E00               	movlw	0
 11960  001D0E                     L7:
 11961  001D0E  0100               	movlb	0	; () banked
 11962  001D10  6FB7               	movwf	(?_pow+2)& (0+255),b
 11963                           
 11964                           ; BSR set to: 0
 11965  001D12  D05E               	goto	l1795
 11966  001D14                     l7593:
 11967                           
 11968                           ; BSR set to: 0
 11969  001D14  0100               	movlb	0	; () banked
 11970  001D16  51C2               	movf	pow@yi& (0+255),w,b
 11971  001D18  0B01               	andlw	1
 11972  001D1A  0100               	movlb	0	; () banked
 11973  001D1C  6FC1               	movwf	pow@sign& (0+255),b
 11974                           
 11975                           ; BSR set to: 0
 11976  001D1E  C0B5  F070         	movff	pow@x,___ftneg@f1
 11977  001D22  C0B6  F071         	movff	pow@x+1,___ftneg@f1+1
 11978  001D26  C0B7  F072         	movff	pow@x+2,___ftneg@f1+2
 11979  001D2A  EC65  F020         	call	___ftneg	;wreg free
 11980  001D2E  C070  F0B5         	movff	?___ftneg,pow@x
 11981  001D32  C071  F0B6         	movff	?___ftneg+1,pow@x+1
 11982  001D36  C072  F0B7         	movff	?___ftneg+2,pow@x+2
 11983  001D3A  D000               	goto	l7597
 11984  001D3C                     l7597:
 11985  001D3C  C0B5  F0A3         	movff	pow@x,log@x
 11986  001D40  C0B6  F0A4         	movff	pow@x+1,log@x+1
 11987  001D44  C0B7  F0A5         	movff	pow@x+2,log@x+2
 11988  001D48  EC9C  F011         	call	_log	;wreg free
 11989  001D4C  C0A3  F0BB         	movff	?_log,_pow$3770
 11990  001D50  C0A4  F0BC         	movff	?_log+1,_pow$3770+1
 11991  001D54  C0A5  F0BD         	movff	?_log+2,_pow$3770+2
 11992  001D58  C0BB  F07C         	movff	_pow$3770,___ftmul@f1
 11993  001D5C  C0BC  F07D         	movff	_pow$3770+1,___ftmul@f1+1
 11994  001D60  C0BD  F07E         	movff	_pow$3770+2,___ftmul@f1+2
 11995  001D64  C0B8  F07F         	movff	pow@y,___ftmul@f2
 11996  001D68  C0B9  F080         	movff	pow@y+1,___ftmul@f2+1
 11997  001D6C  C0BA  F081         	movff	pow@y+2,___ftmul@f2+2
 11998  001D70  ECAC  F00F         	call	___ftmul	;wreg free
 11999  001D74  C07C  F0BE         	movff	?___ftmul,_pow$3771
 12000  001D78  C07D  F0BF         	movff	?___ftmul+1,_pow$3771+1
 12001  001D7C  C07E  F0C0         	movff	?___ftmul+2,_pow$3771+2
 12002  001D80  C0BE  F0AC         	movff	_pow$3771,exp@x
 12003  001D84  C0BF  F0AD         	movff	_pow$3771+1,exp@x+1
 12004  001D88  C0C0  F0AE         	movff	_pow$3771+2,exp@x+2
 12005  001D8C  EC08  F00D         	call	_exp	;wreg free
 12006  001D90  C0AC  F0B5         	movff	?_exp,pow@x
 12007  001D94  C0AD  F0B6         	movff	?_exp+1,pow@x+1
 12008  001D98  C0AE  F0B7         	movff	?_exp+2,pow@x+2
 12009  001D9C  0100               	movlb	0	; () banked
 12010  001D9E  51C1               	movf	pow@sign& (0+255),w,b
 12011  001DA0  0100               	movlb	0	; () banked
 12012  001DA2  B4D8               	btfsc	status,2,c
 12013  001DA4  D00F               	goto	l1799
 12014                           
 12015                           ; BSR set to: 0
 12016  001DA6  C0B5  F070         	movff	pow@x,___ftneg@f1
 12017  001DAA  C0B6  F071         	movff	pow@x+1,___ftneg@f1+1
 12018  001DAE  C0B7  F072         	movff	pow@x+2,___ftneg@f1+2
 12019  001DB2  EC65  F020         	call	___ftneg	;wreg free
 12020  001DB6  C070  F0B5         	movff	?___ftneg,?_pow
 12021  001DBA  C071  F0B6         	movff	?___ftneg+1,?_pow+1
 12022  001DBE  C072  F0B7         	movff	?___ftneg+2,?_pow+2
 12023  001DC2  D006               	goto	l1795
 12024  001DC4                     l1799:
 12025                           
 12026                           ; BSR set to: 0
 12027  001DC4  C0B5  F0B5         	movff	pow@x,?_pow
 12028  001DC8  C0B6  F0B6         	movff	pow@x+1,?_pow+1
 12029  001DCC  C0B7  F0B7         	movff	pow@x+2,?_pow+2
 12030  001DD0                     l1795:
 12031  001DD0  0012               	return		;funcret
 12032  001DD2                     __end_of_pow:
 12033                           	opt stack 0
 12034                           prodh	equ	0xFF4
 12035                           prodl	equ	0xFF3
 12036                           intcon	equ	0xFF2
 12037                           intcon2	equ	0xFF1
 12038                           intcon3	equ	0xFF0
 12039                           postinc0	equ	0xFEE
 12040                           wreg	equ	0xFE8
 12041                           indf2	equ	0xFDF
 12042                           postinc2	equ	0xFDE
 12043                           postdec2	equ	0xFDD
 12044                           fsr2h	equ	0xFDA
 12045                           fsr2l	equ	0xFD9
 12046                           status	equ	0xFD8
 12047                           
 12048 ;; *************** function _log *****************
 12049 ;; Defined at:
 12050 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;  x               3   67[BANK0 ] unsigned char 
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;  exponent        2   70[BANK0 ] int 
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  3   67[BANK0 ] int 
 12057 ;; Registers used:
 12058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12064 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;Total ram usage:        5 bytes
 12069 ;; Hardware stack levels used:    1
 12070 ;; Hardware stack levels required when called:   10
 12071 ;; This function calls:
 12072 ;;		___awtoft
 12073 ;;		___ftadd
 12074 ;;		___ftmul
 12075 ;;		_eval_poly
 12076 ;;		_frexp
 12077 ;; This function is called by:
 12078 ;;		_pow
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text95
 12083  002338                     __ptext95:
 12084                           	opt stack 0
 12085  002338                     _log:
 12086                           	opt stack 18
 12087                           
 12088                           ;incstack = 0
 12089  002338  0100               	movlb	0	; () banked
 12090  00233A  AFA5               	btfss	(log@x+2)& (0+255),7,b
 12091  00233C  D006               	goto	l7299
 12092                           
 12093                           ; BSR set to: 0
 12094  00233E  0E00               	movlw	0
 12095  002340  0100               	movlb	0	; () banked
 12096  002342  6FDE               	movwf	(_errno+1)& (0+255),b
 12097  002344  0E21               	movlw	33
 12098  002346  D00D               	goto	L9
 12099                           
 12100                           ; BSR set to: 0
 12101  002348  D096               	goto	l1859
 12102  00234A                     l7299:
 12103                           
 12104                           ; BSR set to: 0
 12105  00234A  0100               	movlb	0	; () banked
 12106  00234C  51A3               	movf	log@x& (0+255),w,b
 12107  00234E  0100               	movlb	0	; () banked
 12108  002350  11A4               	iorwf	(log@x+1)& (0+255),w,b
 12109  002352  0100               	movlb	0	; () banked
 12110  002354  11A5               	iorwf	(log@x+2)& (0+255),w,b
 12111  002356  A4D8               	btfss	status,2,c
 12112  002358  D00F               	goto	l7305
 12113                           
 12114                           ; BSR set to: 0
 12115  00235A  0E00               	movlw	0
 12116  00235C  0100               	movlb	0	; () banked
 12117  00235E  6FDE               	movwf	(_errno+1)& (0+255),b
 12118  002360  0E22               	movlw	34
 12119  002362                     L9:
 12120  002362  6FDD               	movwf	_errno& (0+255),b
 12121  002364  0E00               	movlw	0
 12122  002366  0100               	movlb	0	; () banked
 12123  002368  6FA3               	movwf	?_log& (0+255),b
 12124  00236A  0E00               	movlw	0
 12125  00236C  0100               	movlb	0	; () banked
 12126  00236E  6FA4               	movwf	(?_log+1)& (0+255),b
 12127  002370  0E00               	movlw	0
 12128  002372  0100               	movlb	0	; () banked
 12129  002374  6FA5               	movwf	(?_log+2)& (0+255),b
 12130                           
 12131                           ; BSR set to: 0
 12132  002376  D07F               	goto	l1859
 12133  002378                     l7305:
 12134                           
 12135                           ; BSR set to: 0
 12136  002378  0E00               	movlw	0
 12137  00237A  0100               	movlb	0	; () banked
 12138  00237C  6F7F               	movwf	___ftmul@f2& (0+255),b
 12139  00237E  0E00               	movlw	0
 12140  002380  0100               	movlb	0	; () banked
 12141  002382  6F80               	movwf	(___ftmul@f2+1)& (0+255),b
 12142  002384  0E40               	movlw	64
 12143  002386  0100               	movlb	0	; () banked
 12144  002388  6F81               	movwf	(___ftmul@f2+2)& (0+255),b
 12145  00238A  0EA6               	movlw	low log@exponent
 12146  00238C  0100               	movlb	0	; () banked
 12147  00238E  6F73               	movwf	frexp@eptr& (0+255),b
 12148  002390  0E00               	movlw	high log@exponent
 12149  002392  0100               	movlb	0	; () banked
 12150  002394  6F74               	movwf	(frexp@eptr+1)& (0+255),b
 12151  002396  C0A3  F070         	movff	log@x,frexp@value
 12152  00239A  C0A4  F071         	movff	log@x+1,frexp@value+1
 12153  00239E  C0A5  F072         	movff	log@x+2,frexp@value+2
 12154  0023A2  ECCF  F018         	call	_frexp	;wreg free
 12155  0023A6  C070  F07C         	movff	?_frexp,___ftmul@f1
 12156  0023AA  C071  F07D         	movff	?_frexp+1,___ftmul@f1+1
 12157  0023AE  C072  F07E         	movff	?_frexp+2,___ftmul@f1+2
 12158  0023B2  ECAC  F00F         	call	___ftmul	;wreg free
 12159  0023B6  C07C  F08B         	movff	?___ftmul,___ftadd@f1
 12160  0023BA  C07D  F08C         	movff	?___ftmul+1,___ftadd@f1+1
 12161  0023BE  C07E  F08D         	movff	?___ftmul+2,___ftadd@f1+2
 12162  0023C2  0E00               	movlw	0
 12163  0023C4  0100               	movlb	0	; () banked
 12164  0023C6  6F8E               	movwf	___ftadd@f2& (0+255),b
 12165  0023C8  0E80               	movlw	128
 12166  0023CA  0100               	movlb	0	; () banked
 12167  0023CC  6F8F               	movwf	(___ftadd@f2+1)& (0+255),b
 12168  0023CE  0EBF               	movlw	191
 12169  0023D0  0100               	movlb	0	; () banked
 12170  0023D2  6F90               	movwf	(___ftadd@f2+2)& (0+255),b
 12171  0023D4  ECC9  F00B         	call	___ftadd	;wreg free
 12172  0023D8  C08B  F0A3         	movff	?___ftadd,log@x
 12173  0023DC  C08C  F0A4         	movff	?___ftadd+1,log@x+1
 12174  0023E0  C08D  F0A5         	movff	?___ftadd+2,log@x+2
 12175  0023E4  0100               	movlb	0	; () banked
 12176  0023E6  07A6               	decf	log@exponent& (0+255),f,b
 12177  0023E8  A0D8               	btfss	status,0,c
 12178  0023EA  07A7               	decf	(log@exponent+1)& (0+255),f,b
 12179                           
 12180                           ; BSR set to: 0
 12181  0023EC  C0A3  F097         	movff	log@x,eval_poly@x
 12182  0023F0  C0A4  F098         	movff	log@x+1,eval_poly@x+1
 12183  0023F4  C0A5  F099         	movff	log@x+2,eval_poly@x+2
 12184  0023F8  0E1F               	movlw	low log@coeff
 12185  0023FA  0100               	movlb	0	; () banked
 12186  0023FC  6F9A               	movwf	eval_poly@d& (0+255),b
 12187  0023FE  0E10               	movlw	high log@coeff
 12188  002400  0100               	movlb	0	; () banked
 12189  002402  6F9B               	movwf	(eval_poly@d+1)& (0+255),b
 12190  002404  0E00               	movlw	0
 12191  002406  0100               	movlb	0	; () banked
 12192  002408  6F9D               	movwf	(eval_poly@n+1)& (0+255),b
 12193  00240A  0E08               	movlw	8
 12194  00240C  6F9C               	movwf	eval_poly@n& (0+255),b
 12195  00240E  EC79  F015         	call	_eval_poly	;wreg free
 12196  002412  C097  F0A3         	movff	?_eval_poly,log@x
 12197  002416  C098  F0A4         	movff	?_eval_poly+1,log@x+1
 12198  00241A  C099  F0A5         	movff	?_eval_poly+2,log@x+2
 12199  00241E  0E72               	movlw	114
 12200  002420  0100               	movlb	0	; () banked
 12201  002422  6F7F               	movwf	___ftmul@f2& (0+255),b
 12202  002424  0E31               	movlw	49
 12203  002426  0100               	movlb	0	; () banked
 12204  002428  6F80               	movwf	(___ftmul@f2+1)& (0+255),b
 12205  00242A  0E3F               	movlw	63
 12206  00242C  0100               	movlb	0	; () banked
 12207  00242E  6F81               	movwf	(___ftmul@f2+2)& (0+255),b
 12208  002430  C0A6  F078         	movff	log@exponent,___awtoft@c
 12209  002434  C0A7  F079         	movff	log@exponent+1,___awtoft@c+1
 12210  002438  EC16  F01E         	call	___awtoft	;wreg free
 12211  00243C  C078  F07C         	movff	?___awtoft,___ftmul@f1
 12212  002440  C079  F07D         	movff	?___awtoft+1,___ftmul@f1+1
 12213  002444  C07A  F07E         	movff	?___awtoft+2,___ftmul@f1+2
 12214  002448  ECAC  F00F         	call	___ftmul	;wreg free
 12215  00244C  C07C  F08B         	movff	?___ftmul,___ftadd@f1
 12216  002450  C07D  F08C         	movff	?___ftmul+1,___ftadd@f1+1
 12217  002454  C07E  F08D         	movff	?___ftmul+2,___ftadd@f1+2
 12218  002458  C0A3  F08E         	movff	log@x,___ftadd@f2
 12219  00245C  C0A4  F08F         	movff	log@x+1,___ftadd@f2+1
 12220  002460  C0A5  F090         	movff	log@x+2,___ftadd@f2+2
 12221  002464  ECC9  F00B         	call	___ftadd	;wreg free
 12222  002468  C08B  F0A3         	movff	?___ftadd,?_log
 12223  00246C  C08C  F0A4         	movff	?___ftadd+1,?_log+1
 12224  002470  C08D  F0A5         	movff	?___ftadd+2,?_log+2
 12225  002474  D000               	goto	l1859
 12226  002476                     l1859:
 12227  002476  0012               	return		;funcret
 12228  002478                     __end_of_log:
 12229                           	opt stack 0
 12230                           prodh	equ	0xFF4
 12231                           prodl	equ	0xFF3
 12232                           intcon	equ	0xFF2
 12233                           intcon2	equ	0xFF1
 12234                           intcon3	equ	0xFF0
 12235                           postinc0	equ	0xFEE
 12236                           wreg	equ	0xFE8
 12237                           indf2	equ	0xFDF
 12238                           postinc2	equ	0xFDE
 12239                           postdec2	equ	0xFDD
 12240                           fsr2h	equ	0xFDA
 12241                           fsr2l	equ	0xFD9
 12242                           status	equ	0xFD8
 12243                           
 12244 ;; *************** function _exp *****************
 12245 ;; Defined at:
 12246 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  x               3   76[BANK0 ] int 
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;  exponent        2   82[BANK0 ] int 
 12251 ;;  sign            1   84[BANK0 ] unsigned char 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  3   76[BANK0 ] unsigned char 
 12254 ;; Registers used:
 12255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12261 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12264 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12265 ;;Total ram usage:        9 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:   10
 12268 ;; This function calls:
 12269 ;;		___awtoft
 12270 ;;		___ftdiv
 12271 ;;		___ftge
 12272 ;;		___ftmul
 12273 ;;		___ftneg
 12274 ;;		___ftsub
 12275 ;;		___fttol
 12276 ;;		_eval_poly
 12277 ;;		_floor
 12278 ;;		_ldexp
 12279 ;; This function is called by:
 12280 ;;		_pow
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text96
 12285  001A10                     __ptext96:
 12286                           	opt stack 0
 12287  001A10                     _exp:
 12288                           	opt stack 18
 12289                           
 12290                           ;incstack = 0
 12291  001A10  0100               	movlb	0	; () banked
 12292  001A12  51AC               	movf	exp@x& (0+255),w,b
 12293  001A14  0100               	movlb	0	; () banked
 12294  001A16  11AD               	iorwf	(exp@x+1)& (0+255),w,b
 12295  001A18  0100               	movlb	0	; () banked
 12296  001A1A  11AE               	iorwf	(exp@x+2)& (0+255),w,b
 12297  001A1C  A4D8               	btfss	status,2,c
 12298  001A1E  D009               	goto	l7321
 12299                           
 12300                           ; BSR set to: 0
 12301  001A20  0E00               	movlw	0
 12302  001A22  0100               	movlb	0	; () banked
 12303  001A24  6FAC               	movwf	?_exp& (0+255),b
 12304  001A26  0E80               	movlw	128
 12305  001A28  0100               	movlb	0	; () banked
 12306  001A2A  6FAD               	movwf	(?_exp+1)& (0+255),b
 12307  001A2C  0E3F               	movlw	63
 12308  001A2E  D03D               	goto	L11
 12309                           
 12310                           ; BSR set to: 0
 12311  001A30  D102               	goto	l1817
 12312  001A32                     l7321:
 12313                           
 12314                           ; BSR set to: 0
 12315  001A32  0E72               	movlw	114
 12316  001A34  0100               	movlb	0	; () banked
 12317  001A36  6F70               	movwf	___ftge@ff1& (0+255),b
 12318  001A38  0E31               	movlw	49
 12319  001A3A  0100               	movlb	0	; () banked
 12320  001A3C  6F71               	movwf	(___ftge@ff1+1)& (0+255),b
 12321  001A3E  0E44               	movlw	68
 12322  001A40  0100               	movlb	0	; () banked
 12323  001A42  6F72               	movwf	(___ftge@ff1+2)& (0+255),b
 12324  001A44  C0AC  F073         	movff	exp@x,___ftge@ff2
 12325  001A48  C0AD  F074         	movff	exp@x+1,___ftge@ff2+1
 12326  001A4C  C0AE  F075         	movff	exp@x+2,___ftge@ff2+2
 12327  001A50  EC57  F017         	call	___ftge	;wreg free
 12328  001A54  0100               	movlb	0	; () banked
 12329  001A56  B0D8               	btfsc	status,0,c
 12330  001A58  D00E               	goto	l7327
 12331                           
 12332                           ; BSR set to: 0
 12333  001A5A  0E00               	movlw	0
 12334  001A5C  0100               	movlb	0	; () banked
 12335  001A5E  6FDE               	movwf	(_errno+1)& (0+255),b
 12336  001A60  0E22               	movlw	34
 12337  001A62  6FDD               	movwf	_errno& (0+255),b
 12338  001A64  0EFF               	movlw	255
 12339  001A66  0100               	movlb	0	; () banked
 12340  001A68  6FAC               	movwf	?_exp& (0+255),b
 12341  001A6A  0E7F               	movlw	127
 12342  001A6C  0100               	movlb	0	; () banked
 12343  001A6E  6FAD               	movwf	(?_exp+1)& (0+255),b
 12344  001A70  0E7F               	movlw	127
 12345  001A72  D01B               	goto	L11
 12346                           
 12347                           ; BSR set to: 0
 12348  001A74  D0E0               	goto	l1817
 12349  001A76                     l7327:
 12350                           
 12351                           ; BSR set to: 0
 12352  001A76  C0AC  F070         	movff	exp@x,___ftge@ff1
 12353  001A7A  C0AD  F071         	movff	exp@x+1,___ftge@ff1+1
 12354  001A7E  C0AE  F072         	movff	exp@x+2,___ftge@ff1+2
 12355  001A82  0E49               	movlw	73
 12356  001A84  0100               	movlb	0	; () banked
 12357  001A86  6F73               	movwf	___ftge@ff2& (0+255),b
 12358  001A88  0E3A               	movlw	58
 12359  001A8A  0100               	movlb	0	; () banked
 12360  001A8C  6F74               	movwf	(___ftge@ff2+1)& (0+255),b
 12361  001A8E  0EC4               	movlw	196
 12362  001A90  0100               	movlb	0	; () banked
 12363  001A92  6F75               	movwf	(___ftge@ff2+2)& (0+255),b
 12364  001A94  EC57  F017         	call	___ftge	;wreg free
 12365  001A98  0100               	movlb	0	; () banked
 12366  001A9A  B0D8               	btfsc	status,0,c
 12367  001A9C  D009               	goto	l7333
 12368                           
 12369                           ; BSR set to: 0
 12370  001A9E  0E00               	movlw	0
 12371  001AA0  0100               	movlb	0	; () banked
 12372  001AA2  6FDE               	movwf	(_errno+1)& (0+255),b
 12373  001AA4  0E22               	movlw	34
 12374  001AA6  6FDD               	movwf	_errno& (0+255),b
 12375  001AA8  D09F               	goto	l7351
 12376  001AAA                     L11:
 12377  001AAA  0100               	movlb	0	; () banked
 12378  001AAC  6FAE               	movwf	(?_exp+2)& (0+255),b
 12379                           
 12380                           ; BSR set to: 0
 12381  001AAE  D0C3               	goto	l1817
 12382  001AB0                     l7333:
 12383                           
 12384                           ; BSR set to: 0
 12385  001AB0  0100               	movlb	0	; () banked
 12386  001AB2  AFAE               	btfss	(exp@x+2)& (0+255),7,b
 12387  001AB4  D002               	goto	u7220
 12388  001AB6  0E01               	movlw	1
 12389  001AB8  D001               	goto	u7230
 12390  001ABA                     u7220:
 12391  001ABA  0E00               	movlw	0
 12392  001ABC                     u7230:
 12393  001ABC  0100               	movlb	0	; () banked
 12394  001ABE  6FB4               	movwf	exp@sign& (0+255),b
 12395                           
 12396                           ; BSR set to: 0
 12397  001AC0  0100               	movlb	0	; () banked
 12398  001AC2  51B4               	movf	exp@sign& (0+255),w,b
 12399  001AC4  0100               	movlb	0	; () banked
 12400  001AC6  B4D8               	btfsc	status,2,c
 12401  001AC8  D00E               	goto	l1820
 12402                           
 12403                           ; BSR set to: 0
 12404  001ACA  C0AC  F070         	movff	exp@x,___ftneg@f1
 12405  001ACE  C0AD  F071         	movff	exp@x+1,___ftneg@f1+1
 12406  001AD2  C0AE  F072         	movff	exp@x+2,___ftneg@f1+2
 12407  001AD6  EC65  F020         	call	___ftneg	;wreg free
 12408  001ADA  C070  F0AC         	movff	?___ftneg,exp@x
 12409  001ADE  C071  F0AD         	movff	?___ftneg+1,exp@x+1
 12410  001AE2  C072  F0AE         	movff	?___ftneg+2,exp@x+2
 12411  001AE6                     l1820:
 12412  001AE6  C0AC  F07C         	movff	exp@x,___ftmul@f1
 12413  001AEA  C0AD  F07D         	movff	exp@x+1,___ftmul@f1+1
 12414  001AEE  C0AE  F07E         	movff	exp@x+2,___ftmul@f1+2
 12415  001AF2  0EAA               	movlw	170
 12416  001AF4  0100               	movlb	0	; () banked
 12417  001AF6  6F7F               	movwf	___ftmul@f2& (0+255),b
 12418  001AF8  0EB8               	movlw	184
 12419  001AFA  0100               	movlb	0	; () banked
 12420  001AFC  6F80               	movwf	(___ftmul@f2+1)& (0+255),b
 12421  001AFE  0E3F               	movlw	63
 12422  001B00  0100               	movlb	0	; () banked
 12423  001B02  6F81               	movwf	(___ftmul@f2+2)& (0+255),b
 12424  001B04  ECAC  F00F         	call	___ftmul	;wreg free
 12425  001B08  C07C  F0AC         	movff	?___ftmul,exp@x
 12426  001B0C  C07D  F0AD         	movff	?___ftmul+1,exp@x+1
 12427  001B10  C07E  F0AE         	movff	?___ftmul+2,exp@x+2
 12428  001B14  C0AC  F0A4         	movff	exp@x,floor@x
 12429  001B18  C0AD  F0A5         	movff	exp@x+1,floor@x+1
 12430  001B1C  C0AE  F0A6         	movff	exp@x+2,floor@x+2
 12431  001B20  EC80  F014         	call	_floor	;wreg free
 12432  001B24  C0A4  F0AF         	movff	?_floor,_exp$3772
 12433  001B28  C0A5  F0B0         	movff	?_floor+1,_exp$3772+1
 12434  001B2C  C0A6  F0B1         	movff	?_floor+2,_exp$3772+2
 12435  001B30  C0AF  F08B         	movff	_exp$3772,___fttol@f1
 12436  001B34  C0B0  F08C         	movff	_exp$3772+1,___fttol@f1+1
 12437  001B38  C0B1  F08D         	movff	_exp$3772+2,___fttol@f1+2
 12438  001B3C  EC3C  F012         	call	___fttol	;wreg free
 12439  001B40  C08B  F0B2         	movff	?___fttol,exp@exponent
 12440  001B44  C08C  F0B3         	movff	?___fttol+1,exp@exponent+1
 12441  001B48  C0AC  F097         	movff	exp@x,___ftsub@f1
 12442  001B4C  C0AD  F098         	movff	exp@x+1,___ftsub@f1+1
 12443  001B50  C0AE  F099         	movff	exp@x+2,___ftsub@f1+2
 12444  001B54  C0B2  F078         	movff	exp@exponent,___awtoft@c
 12445  001B58  C0B3  F079         	movff	exp@exponent+1,___awtoft@c+1
 12446  001B5C  EC16  F01E         	call	___awtoft	;wreg free
 12447  001B60  C078  F09A         	movff	?___awtoft,___ftsub@f2
 12448  001B64  C079  F09B         	movff	?___awtoft+1,___ftsub@f2+1
 12449  001B68  C07A  F09C         	movff	?___awtoft+2,___ftsub@f2+2
 12450  001B6C  ECEE  F01D         	call	___ftsub	;wreg free
 12451  001B70  C097  F0AC         	movff	?___ftsub,exp@x
 12452  001B74  C098  F0AD         	movff	?___ftsub+1,exp@x+1
 12453  001B78  C099  F0AE         	movff	?___ftsub+2,exp@x+2
 12454  001B7C  C0AC  F097         	movff	exp@x,eval_poly@x
 12455  001B80  C0AD  F098         	movff	exp@x+1,eval_poly@x+1
 12456  001B84  C0AE  F099         	movff	exp@x+2,eval_poly@x+2
 12457  001B88  0E01               	movlw	low exp@coeff
 12458  001B8A  0100               	movlb	0	; () banked
 12459  001B8C  6F9A               	movwf	eval_poly@d& (0+255),b
 12460  001B8E  0E10               	movlw	high exp@coeff
 12461  001B90  0100               	movlb	0	; () banked
 12462  001B92  6F9B               	movwf	(eval_poly@d+1)& (0+255),b
 12463  001B94  0E00               	movlw	0
 12464  001B96  0100               	movlb	0	; () banked
 12465  001B98  6F9D               	movwf	(eval_poly@n+1)& (0+255),b
 12466  001B9A  0E09               	movlw	9
 12467  001B9C  6F9C               	movwf	eval_poly@n& (0+255),b
 12468  001B9E  EC79  F015         	call	_eval_poly	;wreg free
 12469  001BA2  C097  F0A3         	movff	?_eval_poly,ldexp@value
 12470  001BA6  C098  F0A4         	movff	?_eval_poly+1,ldexp@value+1
 12471  001BAA  C099  F0A5         	movff	?_eval_poly+2,ldexp@value+2
 12472  001BAE  C0B2  F0A6         	movff	exp@exponent,ldexp@newexp
 12473  001BB2  C0B3  F0A7         	movff	exp@exponent+1,ldexp@newexp+1
 12474  001BB6  ECF5  F013         	call	_ldexp	;wreg free
 12475  001BBA  C0A3  F0AC         	movff	?_ldexp,exp@x
 12476  001BBE  C0A4  F0AD         	movff	?_ldexp+1,exp@x+1
 12477  001BC2  C0A5  F0AE         	movff	?_ldexp+2,exp@x+2
 12478  001BC6  0100               	movlb	0	; () banked
 12479  001BC8  51B4               	movf	exp@sign& (0+255),w,b
 12480  001BCA  0100               	movlb	0	; () banked
 12481  001BCC  B4D8               	btfsc	status,2,c
 12482  001BCE  D02D               	goto	l1821
 12483                           
 12484                           ; BSR set to: 0
 12485  001BD0  0100               	movlb	0	; () banked
 12486  001BD2  29AC               	incf	exp@x& (0+255),w,b
 12487  001BD4  E112               	bnz	l7355
 12488  001BD6  0E7F               	movlw	127
 12489  001BD8  0100               	movlb	0	; () banked
 12490  001BDA  19AD               	xorwf	(exp@x+1)& (0+255),w,b
 12491  001BDC  E10E               	bnz	l7355
 12492  001BDE  0E7F               	movlw	127
 12493  001BE0  0100               	movlb	0	; () banked
 12494  001BE2  19AE               	xorwf	(exp@x+2)& (0+255),w,b
 12495  001BE4  A4D8               	btfss	status,2,c
 12496  001BE6  D009               	goto	l7355
 12497  001BE8                     l7351:
 12498                           
 12499                           ; BSR set to: 0
 12500  001BE8  0E00               	movlw	0
 12501  001BEA  0100               	movlb	0	; () banked
 12502  001BEC  6FAC               	movwf	?_exp& (0+255),b
 12503  001BEE  0E00               	movlw	0
 12504  001BF0  0100               	movlb	0	; () banked
 12505  001BF2  6FAD               	movwf	(?_exp+1)& (0+255),b
 12506  001BF4  0E00               	movlw	0
 12507  001BF6  D759               	goto	L11
 12508                           
 12509                           ; BSR set to: 0
 12510  001BF8  D01E               	goto	l1817
 12511  001BFA                     l7355:
 12512                           
 12513                           ; BSR set to: 0
 12514  001BFA  0E00               	movlw	0
 12515  001BFC  0100               	movlb	0	; () banked
 12516  001BFE  6F78               	movwf	___ftdiv@f1& (0+255),b
 12517  001C00  0E80               	movlw	128
 12518  001C02  0100               	movlb	0	; () banked
 12519  001C04  6F79               	movwf	(___ftdiv@f1+1)& (0+255),b
 12520  001C06  0E3F               	movlw	63
 12521  001C08  0100               	movlb	0	; () banked
 12522  001C0A  6F7A               	movwf	(___ftdiv@f1+2)& (0+255),b
 12523  001C0C  C0AC  F07B         	movff	exp@x,___ftdiv@f2
 12524  001C10  C0AD  F07C         	movff	exp@x+1,___ftdiv@f2+1
 12525  001C14  C0AE  F07D         	movff	exp@x+2,___ftdiv@f2+2
 12526  001C18  ECFB  F010         	call	___ftdiv	;wreg free
 12527  001C1C  C078  F0AC         	movff	?___ftdiv,?_exp
 12528  001C20  C079  F0AD         	movff	?___ftdiv+1,?_exp+1
 12529  001C24  C07A  F0AE         	movff	?___ftdiv+2,?_exp+2
 12530  001C28  D006               	goto	l1817
 12531  001C2A                     l1821:
 12532                           
 12533                           ; BSR set to: 0
 12534  001C2A  C0AC  F0AC         	movff	exp@x,?_exp
 12535  001C2E  C0AD  F0AD         	movff	exp@x+1,?_exp+1
 12536  001C32  C0AE  F0AE         	movff	exp@x+2,?_exp+2
 12537  001C36                     l1817:
 12538  001C36  0012               	return		;funcret
 12539  001C38                     __end_of_exp:
 12540                           	opt stack 0
 12541                           prodh	equ	0xFF4
 12542                           prodl	equ	0xFF3
 12543                           intcon	equ	0xFF2
 12544                           intcon2	equ	0xFF1
 12545                           intcon3	equ	0xFF0
 12546                           postinc0	equ	0xFEE
 12547                           wreg	equ	0xFE8
 12548                           indf2	equ	0xFDF
 12549                           postinc2	equ	0xFDE
 12550                           postdec2	equ	0xFDD
 12551                           fsr2h	equ	0xFDA
 12552                           fsr2l	equ	0xFD9
 12553                           status	equ	0xFD8
 12554                           
 12555 ;; *************** function _ldexp *****************
 12556 ;; Defined at:
 12557 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  value           3   67[BANK0 ] unsigned char 
 12560 ;;  newexp          2   70[BANK0 ] int 
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;		None
 12563 ;; Return value:  Size  Location     Type
 12564 ;;                  3   67[BANK0 ] int 
 12565 ;; Registers used:
 12566 ;;		wreg, status,2, status,0
 12567 ;; Tracked objects:
 12568 ;;		On entry : 0/0
 12569 ;;		On exit  : 0/0
 12570 ;;		Unchanged: 0/0
 12571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12572 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;Total ram usage:        7 bytes
 12577 ;; Hardware stack levels used:    1
 12578 ;; Hardware stack levels required when called:    7
 12579 ;; This function calls:
 12580 ;;		Nothing
 12581 ;; This function is called by:
 12582 ;;		_exp
 12583 ;; This function uses a non-reentrant model
 12584 ;;
 12585                           
 12586                           	psect	text97
 12587  0027EA                     __ptext97:
 12588                           	opt stack 0
 12589  0027EA                     _ldexp:
 12590                           	opt stack 20
 12591                           
 12592                           ;incstack = 0
 12593  0027EA  0100               	movlb	0	; () banked
 12594  0027EC  51A3               	movf	ldexp@value& (0+255),w,b
 12595  0027EE  0100               	movlb	0	; () banked
 12596  0027F0  11A4               	iorwf	(ldexp@value+1)& (0+255),w,b
 12597  0027F2  0100               	movlb	0	; () banked
 12598  0027F4  11A5               	iorwf	(ldexp@value+2)& (0+255),w,b
 12599  0027F6  A4D8               	btfss	status,2,c
 12600  0027F8  D002               	goto	l7051
 12601  0027FA  D02A               	goto	L12
 12602                           
 12603                           ; BSR set to: 0
 12604                           
 12605                           ; BSR set to: 0
 12606  0027FC  D080               	goto	l1841
 12607  0027FE                     l7051:
 12608                           
 12609                           ; BSR set to: 0
 12610  0027FE  0100               	movlb	0	; () banked
 12611  002800  51A5               	movf	(ldexp@value+2)& (0+255),w,b
 12612  002802  0B7F               	andlw	127
 12613  002804  0100               	movlb	0	; () banked
 12614  002806  6FA8               	movwf	??_ldexp& (0+255),b
 12615  002808  6BA9               	clrf	(??_ldexp+1)& (0+255),b
 12616  00280A  90D8               	bcf	status,0,c
 12617  00280C  0100               	movlb	0	; () banked
 12618  00280E  37A8               	rlcf	??_ldexp& (0+255),f,b
 12619  002810  37A9               	rlcf	(??_ldexp+1)& (0+255),f,b
 12620  002812  0100               	movlb	0	; () banked
 12621  002814  51A8               	movf	??_ldexp& (0+255),w,b
 12622  002816  0100               	movlb	0	; () banked
 12623  002818  27A6               	addwf	ldexp@newexp& (0+255),f,b
 12624  00281A  0100               	movlb	0	; () banked
 12625  00281C  51A9               	movf	(??_ldexp+1)& (0+255),w,b
 12626  00281E  0100               	movlb	0	; () banked
 12627  002820  23A7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 12628  002822  0100               	movlb	0	; () banked
 12629  002824  AFA4               	btfss	(ldexp@value+1)& (0+255),7,b
 12630  002826  D004               	goto	u6870
 12631  002828  0100               	movlb	0	; () banked
 12632  00282A  6BA8               	clrf	??_ldexp& (0+255),b
 12633  00282C  2BA8               	incf	??_ldexp& (0+255),f,b
 12634  00282E  D002               	goto	u6878
 12635  002830                     u6870:
 12636  002830  0100               	movlb	0	; () banked
 12637  002832  6BA8               	clrf	??_ldexp& (0+255),b
 12638  002834                     u6878:
 12639  002834  0100               	movlb	0	; () banked
 12640  002836  51A8               	movf	??_ldexp& (0+255),w,b
 12641  002838  0100               	movlb	0	; () banked
 12642  00283A  27A6               	addwf	ldexp@newexp& (0+255),f,b
 12643  00283C  0E00               	movlw	0
 12644  00283E  23A7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 12645  002840  0100               	movlb	0	; () banked
 12646  002842  AFA7               	btfss	(ldexp@newexp+1)& (0+255),7,b
 12647  002844  D00F               	goto	l7059
 12648                           
 12649                           ; BSR set to: 0
 12650  002846  0E00               	movlw	0
 12651  002848  0100               	movlb	0	; () banked
 12652  00284A  6FDE               	movwf	(_errno+1)& (0+255),b
 12653  00284C  0E22               	movlw	34
 12654  00284E  6FDD               	movwf	_errno& (0+255),b
 12655  002850                     L12:
 12656  002850  0E00               	movlw	0
 12657  002852  0100               	movlb	0	; () banked
 12658  002854  6FA3               	movwf	?_ldexp& (0+255),b
 12659  002856  0E00               	movlw	0
 12660  002858  0100               	movlb	0	; () banked
 12661  00285A  6FA4               	movwf	(?_ldexp+1)& (0+255),b
 12662  00285C  0E00               	movlw	0
 12663  00285E  D022               	goto	L14
 12664                           
 12665                           ; BSR set to: 0
 12666  002860  D04E               	goto	l1841
 12667                           
 12668                           ; BSR set to: 0
 12669  002862  D046               	goto	l7077
 12670  002864                     l7059:
 12671                           
 12672                           ; BSR set to: 0
 12673  002864  0100               	movlb	0	; () banked
 12674  002866  BFA7               	btfsc	(ldexp@newexp+1)& (0+255),7,b
 12675  002868  D021               	goto	l7075
 12676  00286A  0100               	movlb	0	; () banked
 12677  00286C  05A7               	decf	(ldexp@newexp+1)& (0+255),w,b
 12678  00286E  A0D8               	btfss	status,0,c
 12679  002870  D01D               	goto	l7075
 12680                           
 12681                           ; BSR set to: 0
 12682  002872  0E00               	movlw	0
 12683  002874  0100               	movlb	0	; () banked
 12684  002876  6FDE               	movwf	(_errno+1)& (0+255),b
 12685  002878  0E22               	movlw	34
 12686  00287A  6FDD               	movwf	_errno& (0+255),b
 12687                           
 12688                           ; BSR set to: 0
 12689  00287C  0100               	movlb	0	; () banked
 12690  00287E  AFA5               	btfss	(ldexp@value+2)& (0+255),7,b
 12691  002880  D00A               	goto	l7071
 12692                           
 12693                           ; BSR set to: 0
 12694  002882  0EFF               	movlw	255
 12695  002884  0100               	movlb	0	; () banked
 12696  002886  6FA3               	movwf	?_ldexp& (0+255),b
 12697  002888  0E7F               	movlw	127
 12698  00288A  0100               	movlb	0	; () banked
 12699  00288C  6FA4               	movwf	(?_ldexp+1)& (0+255),b
 12700  00288E  0EFF               	movlw	255
 12701  002890  D009               	goto	L14
 12702                           
 12703                           ; BSR set to: 0
 12704  002892  D035               	goto	l1841
 12705                           
 12706                           ; BSR set to: 0
 12707  002894  D02D               	goto	l7077
 12708  002896                     l7071:
 12709                           
 12710                           ; BSR set to: 0
 12711  002896  0EFF               	movlw	255
 12712  002898  0100               	movlb	0	; () banked
 12713  00289A  6FA3               	movwf	?_ldexp& (0+255),b
 12714  00289C  0E7F               	movlw	127
 12715  00289E  0100               	movlb	0	; () banked
 12716  0028A0  6FA4               	movwf	(?_ldexp+1)& (0+255),b
 12717  0028A2  0E7F               	movlw	127
 12718  0028A4                     L14:
 12719  0028A4  0100               	movlb	0	; () banked
 12720  0028A6  6FA5               	movwf	(?_ldexp+2)& (0+255),b
 12721                           
 12722                           ; BSR set to: 0
 12723  0028A8  D02A               	goto	l1841
 12724                           
 12725                           ; BSR set to: 0
 12726  0028AA  D022               	goto	l7077
 12727  0028AC                     l7075:
 12728                           
 12729                           ; BSR set to: 0
 12730  0028AC  0100               	movlb	0	; () banked
 12731  0028AE  35A7               	rlcf	(ldexp@newexp+1)& (0+255),w,b
 12732  0028B0  31A7               	rrcf	(ldexp@newexp+1)& (0+255),w,b
 12733  0028B2  0100               	movlb	0	; () banked
 12734  0028B4  6FA9               	movwf	(??_ldexp+1)& (0+255),b
 12735  0028B6  0100               	movlb	0	; () banked
 12736  0028B8  31A6               	rrcf	ldexp@newexp& (0+255),w,b
 12737  0028BA  0100               	movlb	0	; () banked
 12738  0028BC  6FA8               	movwf	??_ldexp& (0+255),b
 12739  0028BE  0100               	movlb	0	; () banked
 12740  0028C0  51A5               	movf	(ldexp@value+2)& (0+255),w,b
 12741  0028C2  0100               	movlb	0	; () banked
 12742  0028C4  19A8               	xorwf	??_ldexp& (0+255),w,b
 12743  0028C6  0B80               	andlw	-128
 12744  0028C8  19A8               	xorwf	??_ldexp& (0+255),w,b
 12745  0028CA  0100               	movlb	0	; () banked
 12746  0028CC  6FA5               	movwf	(ldexp@value+2)& (0+255),b
 12747  0028CE  C0A6  F0A8         	movff	ldexp@newexp,??_ldexp
 12748  0028D2  0E01               	movlw	1
 12749  0028D4  0100               	movlb	0	; () banked
 12750  0028D6  17A8               	andwf	??_ldexp& (0+255),f,b
 12751  0028D8  0100               	movlb	0	; () banked
 12752  0028DA  33A8               	rrcf	??_ldexp& (0+255),f,b
 12753  0028DC  33A8               	rrcf	??_ldexp& (0+255),f,b
 12754  0028DE  0100               	movlb	0	; () banked
 12755  0028E0  51A4               	movf	(ldexp@value+1)& (0+255),w,b
 12756  0028E2  0100               	movlb	0	; () banked
 12757  0028E4  19A8               	xorwf	??_ldexp& (0+255),w,b
 12758  0028E6  0B7F               	andlw	-129
 12759  0028E8  19A8               	xorwf	??_ldexp& (0+255),w,b
 12760  0028EA  0100               	movlb	0	; () banked
 12761  0028EC  6FA4               	movwf	(ldexp@value+1)& (0+255),b
 12762                           
 12763                           ; BSR set to: 0
 12764  0028EE  D000               	goto	l7077
 12765  0028F0                     l7077:
 12766                           
 12767                           ; BSR set to: 0
 12768  0028F0  C0A3  F0A3         	movff	ldexp@value,?_ldexp
 12769  0028F4  C0A4  F0A4         	movff	ldexp@value+1,?_ldexp+1
 12770  0028F8  C0A5  F0A5         	movff	ldexp@value+2,?_ldexp+2
 12771  0028FC  D000               	goto	l1841
 12772  0028FE                     l1841:
 12773                           
 12774                           ; BSR set to: 0
 12775  0028FE  0012               	return		;funcret
 12776  002900                     __end_of_ldexp:
 12777                           	opt stack 0
 12778                           prodh	equ	0xFF4
 12779                           prodl	equ	0xFF3
 12780                           intcon	equ	0xFF2
 12781                           intcon2	equ	0xFF1
 12782                           intcon3	equ	0xFF0
 12783                           postinc0	equ	0xFEE
 12784                           wreg	equ	0xFE8
 12785                           indf2	equ	0xFDF
 12786                           postinc2	equ	0xFDE
 12787                           postdec2	equ	0xFDD
 12788                           fsr2h	equ	0xFDA
 12789                           fsr2l	equ	0xFD9
 12790                           status	equ	0xFD8
 12791                           
 12792 ;; *************** function _floor *****************
 12793 ;; Defined at:
 12794 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  x               3   68[BANK0 ] int 
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;  i               3   71[BANK0 ] int 
 12799 ;;  expon           2   74[BANK0 ] int 
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  3   68[BANK0 ] int 
 12802 ;; Registers used:
 12803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12809 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12810 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12812 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12813 ;;Total ram usage:        8 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    9
 12816 ;; This function calls:
 12817 ;;		___altoft
 12818 ;;		___ftadd
 12819 ;;		___ftge
 12820 ;;		___fttol
 12821 ;;		_frexp
 12822 ;; This function is called by:
 12823 ;;		_exp
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827                           	psect	text98
 12828  002900                     __ptext98:
 12829                           	opt stack 0
 12830  002900                     _floor:
 12831                           	opt stack 18
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;incstack = 0
 12835  002900  C0A4  F070         	movff	floor@x,frexp@value
 12836  002904  C0A5  F071         	movff	floor@x+1,frexp@value+1
 12837  002908  C0A6  F072         	movff	floor@x+2,frexp@value+2
 12838  00290C  0EAA               	movlw	low floor@expon
 12839  00290E  0100               	movlb	0	; () banked
 12840  002910  6F73               	movwf	frexp@eptr& (0+255),b
 12841  002912  0E00               	movlw	high floor@expon
 12842  002914  0100               	movlb	0	; () banked
 12843  002916  6F74               	movwf	(frexp@eptr+1)& (0+255),b
 12844  002918  ECCF  F018         	call	_frexp	;wreg free
 12845  00291C  0100               	movlb	0	; () banked
 12846  00291E  AFAB               	btfss	(floor@expon+1)& (0+255),7,b
 12847  002920  D016               	goto	l7029
 12848                           
 12849                           ; BSR set to: 0
 12850  002922  0100               	movlb	0	; () banked
 12851  002924  AFA6               	btfss	(floor@x+2)& (0+255),7,b
 12852  002926  D009               	goto	l7025
 12853                           
 12854                           ; BSR set to: 0
 12855  002928  0E00               	movlw	0
 12856  00292A  0100               	movlb	0	; () banked
 12857  00292C  6FA4               	movwf	?_floor& (0+255),b
 12858  00292E  0E80               	movlw	128
 12859  002930  0100               	movlb	0	; () banked
 12860  002932  6FA5               	movwf	(?_floor+1)& (0+255),b
 12861  002934  0EBF               	movlw	191
 12862  002936  D008               	goto	L15
 12863                           
 12864                           ; BSR set to: 0
 12865  002938  D060               	goto	l1829
 12866  00293A                     l7025:
 12867                           
 12868                           ; BSR set to: 0
 12869  00293A  0E00               	movlw	0
 12870  00293C  0100               	movlb	0	; () banked
 12871  00293E  6FA4               	movwf	?_floor& (0+255),b
 12872  002940  0E00               	movlw	0
 12873  002942  0100               	movlb	0	; () banked
 12874  002944  6FA5               	movwf	(?_floor+1)& (0+255),b
 12875  002946  0E00               	movlw	0
 12876  002948                     L15:
 12877  002948  0100               	movlb	0	; () banked
 12878  00294A  6FA6               	movwf	(?_floor+2)& (0+255),b
 12879                           
 12880                           ; BSR set to: 0
 12881  00294C  D056               	goto	l1829
 12882  00294E                     l7029:
 12883                           
 12884                           ; BSR set to: 0
 12885  00294E  0100               	movlb	0	; () banked
 12886  002950  51AB               	movf	(floor@expon+1)& (0+255),w,b
 12887  002952  E105               	bnz	u6830
 12888  002954  0E15               	movlw	21
 12889  002956  0100               	movlb	0	; () banked
 12890  002958  5DAA               	subwf	floor@expon& (0+255),w,b
 12891  00295A  A0D8               	btfss	status,0,c
 12892  00295C  D007               	goto	l7033
 12893  00295E                     u6830:
 12894                           
 12895                           ; BSR set to: 0
 12896  00295E  C0A4  F0A4         	movff	floor@x,?_floor
 12897  002962  C0A5  F0A5         	movff	floor@x+1,?_floor+1
 12898  002966  C0A6  F0A6         	movff	floor@x+2,?_floor+2
 12899  00296A  D047               	goto	l1829
 12900  00296C                     l7033:
 12901                           
 12902                           ; BSR set to: 0
 12903  00296C  C0A4  F08B         	movff	floor@x,___fttol@f1
 12904  002970  C0A5  F08C         	movff	floor@x+1,___fttol@f1+1
 12905  002974  C0A6  F08D         	movff	floor@x+2,___fttol@f1+2
 12906  002978  EC3C  F012         	call	___fttol	;wreg free
 12907  00297C  C08B  F09A         	movff	?___fttol,___altoft@c
 12908  002980  C08C  F09B         	movff	?___fttol+1,___altoft@c+1
 12909  002984  C08D  F09C         	movff	?___fttol+2,___altoft@c+2
 12910  002988  C08E  F09D         	movff	?___fttol+3,___altoft@c+3
 12911  00298C  ECCA  F019         	call	___altoft	;wreg free
 12912  002990  C09A  F0A7         	movff	?___altoft,floor@i
 12913  002994  C09B  F0A8         	movff	?___altoft+1,floor@i+1
 12914  002998  C09C  F0A9         	movff	?___altoft+2,floor@i+2
 12915  00299C  C0A4  F070         	movff	floor@x,___ftge@ff1
 12916  0029A0  C0A5  F071         	movff	floor@x+1,___ftge@ff1+1
 12917  0029A4  C0A6  F072         	movff	floor@x+2,___ftge@ff1+2
 12918  0029A8  C0A7  F073         	movff	floor@i,___ftge@ff2
 12919  0029AC  C0A8  F074         	movff	floor@i+1,___ftge@ff2+1
 12920  0029B0  C0A9  F075         	movff	floor@i+2,___ftge@ff2+2
 12921  0029B4  EC57  F017         	call	___ftge	;wreg free
 12922  0029B8  0100               	movlb	0	; () banked
 12923  0029BA  B0D8               	btfsc	status,0,c
 12924  0029BC  D018               	goto	l1831
 12925                           
 12926                           ; BSR set to: 0
 12927  0029BE  C0A7  F08B         	movff	floor@i,___ftadd@f1
 12928  0029C2  C0A8  F08C         	movff	floor@i+1,___ftadd@f1+1
 12929  0029C6  C0A9  F08D         	movff	floor@i+2,___ftadd@f1+2
 12930  0029CA  0E00               	movlw	0
 12931  0029CC  0100               	movlb	0	; () banked
 12932  0029CE  6F8E               	movwf	___ftadd@f2& (0+255),b
 12933  0029D0  0E80               	movlw	128
 12934  0029D2  0100               	movlb	0	; () banked
 12935  0029D4  6F8F               	movwf	(___ftadd@f2+1)& (0+255),b
 12936  0029D6  0EBF               	movlw	191
 12937  0029D8  0100               	movlb	0	; () banked
 12938  0029DA  6F90               	movwf	(___ftadd@f2+2)& (0+255),b
 12939  0029DC  ECC9  F00B         	call	___ftadd	;wreg free
 12940  0029E0  C08B  F0A4         	movff	?___ftadd,?_floor
 12941  0029E4  C08C  F0A5         	movff	?___ftadd+1,?_floor+1
 12942  0029E8  C08D  F0A6         	movff	?___ftadd+2,?_floor+2
 12943  0029EC  D006               	goto	l1829
 12944  0029EE                     l1831:
 12945                           
 12946                           ; BSR set to: 0
 12947  0029EE  C0A7  F0A4         	movff	floor@i,?_floor
 12948  0029F2  C0A8  F0A5         	movff	floor@i+1,?_floor+1
 12949  0029F6  C0A9  F0A6         	movff	floor@i+2,?_floor+2
 12950  0029FA                     l1829:
 12951  0029FA  0012               	return		;funcret
 12952  0029FC                     __end_of_floor:
 12953                           	opt stack 0
 12954                           prodh	equ	0xFF4
 12955                           prodl	equ	0xFF3
 12956                           intcon	equ	0xFF2
 12957                           intcon2	equ	0xFF1
 12958                           intcon3	equ	0xFF0
 12959                           postinc0	equ	0xFEE
 12960                           wreg	equ	0xFE8
 12961                           indf2	equ	0xFDF
 12962                           postinc2	equ	0xFDE
 12963                           postdec2	equ	0xFDD
 12964                           fsr2h	equ	0xFDA
 12965                           fsr2l	equ	0xFD9
 12966                           status	equ	0xFD8
 12967                           
 12968 ;; *************** function _frexp *****************
 12969 ;; Defined at:
 12970 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;  value           3   16[BANK0 ] int 
 12973 ;;  eptr            2   19[BANK0 ] PTR int 
 12974 ;;		 -> log@exponent(2), floor@expon(2), 
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;		None
 12977 ;; Return value:  Size  Location     Type
 12978 ;;                  3   16[BANK0 ] PTR int 
 12979 ;; Registers used:
 12980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/0
 12983 ;;		On exit  : 0/0
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12986 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12989 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;Total ram usage:        7 bytes
 12991 ;; Hardware stack levels used:    1
 12992 ;; Hardware stack levels required when called:    7
 12993 ;; This function calls:
 12994 ;;		Nothing
 12995 ;; This function is called by:
 12996 ;;		_floor
 12997 ;;		_log
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           	psect	text99
 13002  00319E                     __ptext99:
 13003                           	opt stack 0
 13004  00319E                     _frexp:
 13005                           	opt stack 20
 13006                           
 13007                           ;incstack = 0
 13008  00319E  0100               	movlb	0	; () banked
 13009  0031A0  5170               	movf	frexp@value& (0+255),w,b
 13010  0031A2  0100               	movlb	0	; () banked
 13011  0031A4  1171               	iorwf	(frexp@value+1)& (0+255),w,b
 13012  0031A6  0100               	movlb	0	; () banked
 13013  0031A8  1172               	iorwf	(frexp@value+2)& (0+255),w,b
 13014  0031AA  A4D8               	btfss	status,2,c
 13015  0031AC  D012               	goto	l6783
 13016                           
 13017                           ; BSR set to: 0
 13018  0031AE  C073  FFD9         	movff	frexp@eptr,fsr2l
 13019  0031B2  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13020  0031B6  0E00               	movlw	0
 13021  0031B8  6EDE               	movwf	postinc2,c
 13022  0031BA  0E00               	movlw	0
 13023  0031BC  6EDD               	movwf	postdec2,c
 13024                           
 13025                           ; BSR set to: 0
 13026  0031BE  0E00               	movlw	0
 13027  0031C0  0100               	movlb	0	; () banked
 13028  0031C2  6F70               	movwf	?_frexp& (0+255),b
 13029  0031C4  0E00               	movlw	0
 13030  0031C6  0100               	movlb	0	; () banked
 13031  0031C8  6F71               	movwf	(?_frexp+1)& (0+255),b
 13032  0031CA  0E00               	movlw	0
 13033  0031CC  0100               	movlb	0	; () banked
 13034  0031CE  6F72               	movwf	(?_frexp+2)& (0+255),b
 13035                           
 13036                           ; BSR set to: 0
 13037  0031D0  D03C               	goto	l1837
 13038  0031D2                     l6783:
 13039                           
 13040                           ; BSR set to: 0
 13041  0031D2  0100               	movlb	0	; () banked
 13042  0031D4  5172               	movf	(frexp@value+2)& (0+255),w,b
 13043  0031D6  0B7F               	andlw	127
 13044  0031D8  0100               	movlb	0	; () banked
 13045  0031DA  6F75               	movwf	??_frexp& (0+255),b
 13046  0031DC  6B76               	clrf	(??_frexp+1)& (0+255),b
 13047  0031DE  90D8               	bcf	status,0,c
 13048  0031E0  0100               	movlb	0	; () banked
 13049  0031E2  3775               	rlcf	??_frexp& (0+255),f,b
 13050  0031E4  3776               	rlcf	(??_frexp+1)& (0+255),f,b
 13051  0031E6  C073  FFD9         	movff	frexp@eptr,fsr2l
 13052  0031EA  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13053  0031EE  C075  FFDE         	movff	??_frexp,postinc2
 13054  0031F2  C076  FFDD         	movff	??_frexp+1,postdec2
 13055  0031F6  0100               	movlb	0	; () banked
 13056  0031F8  AF71               	btfss	(frexp@value+1)& (0+255),7,b
 13057  0031FA  D004               	goto	u6490
 13058  0031FC  0100               	movlb	0	; () banked
 13059  0031FE  6B75               	clrf	??_frexp& (0+255),b
 13060  003200  2B75               	incf	??_frexp& (0+255),f,b
 13061  003202  D002               	goto	u6498
 13062  003204                     u6490:
 13063  003204  0100               	movlb	0	; () banked
 13064  003206  6B75               	clrf	??_frexp& (0+255),b
 13065  003208                     u6498:
 13066  003208  0100               	movlb	0	; () banked
 13067  00320A  5175               	movf	??_frexp& (0+255),w,b
 13068  00320C  C073  FFD9         	movff	frexp@eptr,fsr2l
 13069  003210  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13070  003214  12DE               	iorwf	postinc2,f,c
 13071  003216  0E00               	movlw	0
 13072  003218  12DD               	iorwf	postdec2,f,c
 13073                           
 13074                           ; BSR set to: 0
 13075  00321A  C073  FFD9         	movff	frexp@eptr,fsr2l
 13076  00321E  C074  FFDA         	movff	frexp@eptr+1,fsr2h
 13077  003222  0E82               	movlw	130
 13078  003224  26DE               	addwf	postinc2,f,c
 13079  003226  0EFF               	movlw	255
 13080  003228  22DD               	addwfc	postdec2,f,c
 13081                           
 13082                           ; BSR set to: 0
 13083  00322A  8172               	bsf	(frexp@value+2)& (0+255),0,b
 13084  00322C  8372               	bsf	(frexp@value+2)& (0+255),1,b
 13085  00322E  8572               	bsf	(frexp@value+2)& (0+255),2,b
 13086  003230  8772               	bsf	(frexp@value+2)& (0+255),3,b
 13087  003232  8972               	bsf	(frexp@value+2)& (0+255),4,b
 13088  003234  8B72               	bsf	(frexp@value+2)& (0+255),5,b
 13089  003236  9D72               	bcf	(frexp@value+2)& (0+255),6,b
 13090                           
 13091                           ; BSR set to: 0
 13092  003238  0100               	movlb	0	; () banked
 13093  00323A  9F71               	bcf	(frexp@value+1)& (0+255),7,b
 13094                           
 13095                           ; BSR set to: 0
 13096  00323C  C070  F070         	movff	frexp@value,?_frexp
 13097  003240  C071  F071         	movff	frexp@value+1,?_frexp+1
 13098  003244  C072  F072         	movff	frexp@value+2,?_frexp+2
 13099  003248  D000               	goto	l1837
 13100  00324A                     l1837:
 13101                           
 13102                           ; BSR set to: 0
 13103  00324A  0012               	return		;funcret
 13104  00324C                     __end_of_frexp:
 13105                           	opt stack 0
 13106                           prodh	equ	0xFF4
 13107                           prodl	equ	0xFF3
 13108                           intcon	equ	0xFF2
 13109                           intcon2	equ	0xFF1
 13110                           intcon3	equ	0xFF0
 13111                           postinc0	equ	0xFEE
 13112                           wreg	equ	0xFE8
 13113                           indf2	equ	0xFDF
 13114                           postinc2	equ	0xFDE
 13115                           postdec2	equ	0xFDD
 13116                           fsr2h	equ	0xFDA
 13117                           fsr2l	equ	0xFD9
 13118                           status	equ	0xFD8
 13119                           
 13120 ;; *************** function ___fttol *****************
 13121 ;; Defined at:
 13122 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;  f1              3   43[BANK0 ] float 
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;  lval            4   53[BANK0 ] unsigned long 
 13127 ;;  exp1            1   57[BANK0 ] unsigned char 
 13128 ;;  sign1           1   52[BANK0 ] unsigned char 
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  4   43[BANK0 ] long 
 13131 ;; Registers used:
 13132 ;;		wreg, status,2, status,0
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13139 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13140 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13141 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13142 ;;Total ram usage:       15 bytes
 13143 ;; Hardware stack levels used:    1
 13144 ;; Hardware stack levels required when called:    7
 13145 ;; This function calls:
 13146 ;;		Nothing
 13147 ;; This function is called by:
 13148 ;;		_CalculateSensorSums
 13149 ;;		_pow
 13150 ;;		_exp
 13151 ;;		_floor
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           	psect	text100
 13156  002478                     __ptext100:
 13157                           	opt stack 0
 13158  002478                     ___fttol:
 13159                           	opt stack 19
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;incstack = 0
 13163  002478  C08D  F08F         	movff	___fttol@f1+2,??___fttol
 13164  00247C  0100               	movlb	0	; () banked
 13165  00247E  6B90               	clrf	(??___fttol+1)& (0+255),b
 13166  002480  6B91               	clrf	(??___fttol+2)& (0+255),b
 13167  002482  0100               	movlb	0	; () banked
 13168  002484  358C               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13169  002486  0100               	movlb	0	; () banked
 13170  002488  378F               	rlcf	??___fttol& (0+255),f,b
 13171  00248A  E301               	bnc	u6401
 13172  00248C  8190               	bsf	(??___fttol+1)& (0+255),0,b
 13173  00248E                     u6401:
 13174  00248E  0100               	movlb	0	; () banked
 13175  002490  518F               	movf	??___fttol& (0+255),w,b
 13176  002492  0100               	movlb	0	; () banked
 13177  002494  6F99               	movwf	___fttol@exp1& (0+255),b
 13178  002496  0100               	movlb	0	; () banked
 13179  002498  5199               	movf	___fttol@exp1& (0+255),w,b
 13180  00249A  A4D8               	btfss	status,2,c
 13181  00249C  D002               	goto	l6735
 13182  00249E  D051               	goto	l6759
 13183                           
 13184                           ; BSR set to: 0
 13185                           
 13186                           ; BSR set to: 0
 13187  0024A0  D083               	goto	l1655
 13188  0024A2                     l6735:
 13189                           
 13190                           ; BSR set to: 0
 13191  0024A2  0E17               	movlw	23
 13192  0024A4  0100               	movlb	0	; () banked
 13193  0024A6  6F8F               	movwf	??___fttol& (0+255),b
 13194  0024A8  C08B  F090         	movff	___fttol@f1,??___fttol+1
 13195  0024AC  C08C  F091         	movff	___fttol@f1+1,??___fttol+2
 13196  0024B0  C08D  F092         	movff	___fttol@f1+2,??___fttol+3
 13197  0024B4  0100               	movlb	0	; () banked
 13198  0024B6  298F               	incf	??___fttol& (0+255),w,b
 13199  0024B8  0100               	movlb	0	; () banked
 13200  0024BA  6F93               	movwf	(??___fttol+4)& (0+255),b
 13201  0024BC  D005               	goto	u6420
 13202  0024BE                     u6425:
 13203  0024BE  0100               	movlb	0	; () banked
 13204  0024C0  90D8               	bcf	status,0,c
 13205  0024C2  3392               	rrcf	(??___fttol+3)& (0+255),f,b
 13206  0024C4  3391               	rrcf	(??___fttol+2)& (0+255),f,b
 13207  0024C6  3390               	rrcf	(??___fttol+1)& (0+255),f,b
 13208  0024C8                     u6420:
 13209  0024C8  0100               	movlb	0	; () banked
 13210  0024CA  2F93               	decfsz	(??___fttol+4)& (0+255),f,b
 13211  0024CC  D7F8               	goto	u6425
 13212  0024CE  0100               	movlb	0	; () banked
 13213  0024D0  5190               	movf	(??___fttol+1)& (0+255),w,b
 13214  0024D2  0100               	movlb	0	; () banked
 13215  0024D4  6F94               	movwf	___fttol@sign1& (0+255),b
 13216                           
 13217                           ; BSR set to: 0
 13218  0024D6  0100               	movlb	0	; () banked
 13219  0024D8  8F8C               	bsf	(___fttol@f1+1)& (0+255),7,b
 13220                           
 13221                           ; BSR set to: 0
 13222  0024DA  0EFF               	movlw	255
 13223  0024DC  0100               	movlb	0	; () banked
 13224  0024DE  178B               	andwf	___fttol@f1& (0+255),f,b
 13225  0024E0  0EFF               	movlw	255
 13226  0024E2  0100               	movlb	0	; () banked
 13227  0024E4  178C               	andwf	(___fttol@f1+1)& (0+255),f,b
 13228  0024E6  0E00               	movlw	0
 13229  0024E8  0100               	movlb	0	; () banked
 13230  0024EA  178D               	andwf	(___fttol@f1+2)& (0+255),f,b
 13231                           
 13232                           ; BSR set to: 0
 13233  0024EC  0100               	movlb	0	; () banked
 13234  0024EE  518B               	movf	___fttol@f1& (0+255),w,b
 13235  0024F0  0100               	movlb	0	; () banked
 13236  0024F2  6F95               	movwf	___fttol@lval& (0+255),b
 13237  0024F4  0100               	movlb	0	; () banked
 13238  0024F6  518C               	movf	(___fttol@f1+1)& (0+255),w,b
 13239  0024F8  0100               	movlb	0	; () banked
 13240  0024FA  6F96               	movwf	(___fttol@lval+1)& (0+255),b
 13241  0024FC  0100               	movlb	0	; () banked
 13242  0024FE  518D               	movf	(___fttol@f1+2)& (0+255),w,b
 13243  002500  0100               	movlb	0	; () banked
 13244  002502  6F97               	movwf	(___fttol@lval+2)& (0+255),b
 13245  002504  0100               	movlb	0	; () banked
 13246  002506  6B98               	clrf	(___fttol@lval+3)& (0+255),b
 13247                           
 13248                           ; BSR set to: 0
 13249  002508  0E8E               	movlw	142
 13250  00250A  0100               	movlb	0	; () banked
 13251  00250C  5F99               	subwf	___fttol@exp1& (0+255),f,b
 13252                           
 13253                           ; BSR set to: 0
 13254  00250E  0100               	movlb	0	; () banked
 13255  002510  AF99               	btfss	___fttol@exp1& (0+255),7,b
 13256  002512  D013               	goto	l6757
 13257                           
 13258                           ; BSR set to: 0
 13259  002514  0100               	movlb	0	; () banked
 13260  002516  5199               	movf	___fttol@exp1& (0+255),w,b
 13261  002518  0A80               	xorlw	128
 13262  00251A  0F8F               	addlw	143
 13263  00251C  B0D8               	btfsc	status,0,c
 13264  00251E  D003               	goto	l6753
 13265  002520  D010               	goto	l6759
 13266                           
 13267                           ; BSR set to: 0
 13268                           
 13269                           ; BSR set to: 0
 13270  002522  D042               	goto	l1655
 13271                           
 13272                           ; BSR set to: 0
 13273  002524  D000               	goto	l6753
 13274  002526                     l6753:
 13275                           
 13276                           ; BSR set to: 0
 13277  002526  0100               	movlb	0	; () banked
 13278  002528  90D8               	bcf	status,0,c
 13279  00252A  3398               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13280  00252C  3397               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13281  00252E  3396               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13282  002530  3395               	rrcf	___fttol@lval& (0+255),f,b
 13283                           
 13284                           ; BSR set to: 0
 13285  002532  0100               	movlb	0	; () banked
 13286  002534  3F99               	incfsz	___fttol@exp1& (0+255),f,b
 13287  002536  D7F7               	goto	l6753
 13288                           
 13289                           ; BSR set to: 0
 13290  002538  D01F               	goto	l6767
 13291  00253A                     l6757:
 13292                           
 13293                           ; BSR set to: 0
 13294  00253A  0E17               	movlw	23
 13295  00253C  0100               	movlb	0	; () banked
 13296  00253E  6599               	cpfsgt	___fttol@exp1& (0+255),b
 13297  002540  D014               	goto	l6765
 13298  002542                     l6759:
 13299                           
 13300                           ; BSR set to: 0
 13301  002542  0E00               	movlw	0
 13302  002544  0100               	movlb	0	; () banked
 13303  002546  6F8B               	movwf	?___fttol& (0+255),b
 13304  002548  0E00               	movlw	0
 13305  00254A  6F8C               	movwf	(?___fttol+1)& (0+255),b
 13306  00254C  0E00               	movlw	0
 13307  00254E  6F8D               	movwf	(?___fttol+2)& (0+255),b
 13308  002550  0E00               	movlw	0
 13309  002552  6F8E               	movwf	(?___fttol+3)& (0+255),b
 13310                           
 13311                           ; BSR set to: 0
 13312  002554  D029               	goto	l1655
 13313                           
 13314                           ; BSR set to: 0
 13315  002556  D009               	goto	l6765
 13316  002558                     l6763:
 13317                           
 13318                           ; BSR set to: 0
 13319  002558  0100               	movlb	0	; () banked
 13320  00255A  90D8               	bcf	status,0,c
 13321  00255C  3795               	rlcf	___fttol@lval& (0+255),f,b
 13322  00255E  3796               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13323  002560  3797               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13324  002562  3798               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13325  002564  0100               	movlb	0	; () banked
 13326  002566  0799               	decf	___fttol@exp1& (0+255),f,b
 13327  002568  D000               	goto	l6765
 13328  00256A                     l6765:
 13329                           
 13330                           ; BSR set to: 0
 13331  00256A  0100               	movlb	0	; () banked
 13332  00256C  5199               	movf	___fttol@exp1& (0+255),w,b
 13333  00256E  0100               	movlb	0	; () banked
 13334  002570  B4D8               	btfsc	status,2,c
 13335  002572  D002               	goto	l6767
 13336  002574  D7F1               	goto	l6763
 13337                           
 13338                           ; BSR set to: 0
 13339  002576  D000               	goto	l6767
 13340  002578                     l6767:
 13341                           
 13342                           ; BSR set to: 0
 13343  002578  0100               	movlb	0	; () banked
 13344  00257A  5194               	movf	___fttol@sign1& (0+255),w,b
 13345  00257C  0100               	movlb	0	; () banked
 13346  00257E  B4D8               	btfsc	status,2,c
 13347  002580  D00A               	goto	l6771
 13348                           
 13349                           ; BSR set to: 0
 13350  002582  0100               	movlb	0	; () banked
 13351  002584  1F98               	comf	(___fttol@lval+3)& (0+255),f,b
 13352  002586  1F97               	comf	(___fttol@lval+2)& (0+255),f,b
 13353  002588  1F96               	comf	(___fttol@lval+1)& (0+255),f,b
 13354  00258A  6D95               	negf	___fttol@lval& (0+255),b
 13355  00258C  0E00               	movlw	0
 13356  00258E  2396               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13357  002590  2397               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13358  002592  2398               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13359  002594  D000               	goto	l6771
 13360  002596                     l6771:
 13361                           
 13362                           ; BSR set to: 0
 13363  002596  C095  F08B         	movff	___fttol@lval,?___fttol
 13364  00259A  C096  F08C         	movff	___fttol@lval+1,?___fttol+1
 13365  00259E  C097  F08D         	movff	___fttol@lval+2,?___fttol+2
 13366  0025A2  C098  F08E         	movff	___fttol@lval+3,?___fttol+3
 13367  0025A6  D000               	goto	l1655
 13368  0025A8                     l1655:
 13369                           
 13370                           ; BSR set to: 0
 13371  0025A8  0012               	return		;funcret
 13372  0025AA                     __end_of___fttol:
 13373                           	opt stack 0
 13374                           prodh	equ	0xFF4
 13375                           prodl	equ	0xFF3
 13376                           intcon	equ	0xFF2
 13377                           intcon2	equ	0xFF1
 13378                           intcon3	equ	0xFF0
 13379                           postinc0	equ	0xFEE
 13380                           wreg	equ	0xFE8
 13381                           indf2	equ	0xFDF
 13382                           postinc2	equ	0xFDE
 13383                           postdec2	equ	0xFDD
 13384                           fsr2h	equ	0xFDA
 13385                           fsr2l	equ	0xFD9
 13386                           status	equ	0xFD8
 13387                           
 13388 ;; *************** function ___ftge *****************
 13389 ;; Defined at:
 13390 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;  ff1             3   16[BANK0 ] float 
 13393 ;;  ff2             3   19[BANK0 ] float 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;		None               void
 13398 ;; Registers used:
 13399 ;;		wreg, status,2, status,0
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13405 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13408 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13409 ;;Total ram usage:        9 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:    7
 13412 ;; This function calls:
 13413 ;;		Nothing
 13414 ;; This function is called by:
 13415 ;;		_pow
 13416 ;;		_exp
 13417 ;;		_floor
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	text101
 13422  002EAE                     __ptext101:
 13423                           	opt stack 0
 13424  002EAE                     ___ftge:
 13425                           	opt stack 19
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;incstack = 0
 13429  002EAE  0100               	movlb	0	; () banked
 13430  002EB0  AF72               	btfss	(___ftge@ff1+2)& (0+255),7,b
 13431  002EB2  D01E               	goto	l6715
 13432                           
 13433                           ; BSR set to: 0
 13434  002EB4  C070  F076         	movff	___ftge@ff1,??___ftge
 13435  002EB8  C071  F077         	movff	___ftge@ff1+1,??___ftge+1
 13436  002EBC  C072  F078         	movff	___ftge@ff1+2,??___ftge+2
 13437  002EC0  0100               	movlb	0	; () banked
 13438  002EC2  1F76               	comf	??___ftge& (0+255),f,b
 13439  002EC4  1F77               	comf	(??___ftge+1)& (0+255),f,b
 13440  002EC6  1F78               	comf	(??___ftge+2)& (0+255),f,b
 13441  002EC8  2B76               	incf	??___ftge& (0+255),f,b
 13442  002ECA  0E00               	movlw	0
 13443  002ECC  2377               	addwfc	(??___ftge+1)& (0+255),f,b
 13444  002ECE  2378               	addwfc	(??___ftge+2)& (0+255),f,b
 13445  002ED0  0E00               	movlw	0
 13446  002ED2  0100               	movlb	0	; () banked
 13447  002ED4  2576               	addwf	??___ftge& (0+255),w,b
 13448  002ED6  0100               	movlb	0	; () banked
 13449  002ED8  6F70               	movwf	___ftge@ff1& (0+255),b
 13450  002EDA  0E00               	movlw	0
 13451  002EDC  0100               	movlb	0	; () banked
 13452  002EDE  2177               	addwfc	(??___ftge+1)& (0+255),w,b
 13453  002EE0  0100               	movlb	0	; () banked
 13454  002EE2  6F71               	movwf	(___ftge@ff1+1)& (0+255),b
 13455  002EE4  0E80               	movlw	128
 13456  002EE6  0100               	movlb	0	; () banked
 13457  002EE8  2178               	addwfc	(??___ftge+2)& (0+255),w,b
 13458  002EEA  0100               	movlb	0	; () banked
 13459  002EEC  6F72               	movwf	(___ftge@ff1+2)& (0+255),b
 13460  002EEE  D000               	goto	l6715
 13461  002EF0                     l6715:
 13462                           
 13463                           ; BSR set to: 0
 13464  002EF0  0100               	movlb	0	; () banked
 13465  002EF2  AF75               	btfss	(___ftge@ff2+2)& (0+255),7,b
 13466  002EF4  D01E               	goto	l6719
 13467                           
 13468                           ; BSR set to: 0
 13469  002EF6  C073  F076         	movff	___ftge@ff2,??___ftge
 13470  002EFA  C074  F077         	movff	___ftge@ff2+1,??___ftge+1
 13471  002EFE  C075  F078         	movff	___ftge@ff2+2,??___ftge+2
 13472  002F02  0100               	movlb	0	; () banked
 13473  002F04  1F76               	comf	??___ftge& (0+255),f,b
 13474  002F06  1F77               	comf	(??___ftge+1)& (0+255),f,b
 13475  002F08  1F78               	comf	(??___ftge+2)& (0+255),f,b
 13476  002F0A  2B76               	incf	??___ftge& (0+255),f,b
 13477  002F0C  0E00               	movlw	0
 13478  002F0E  2377               	addwfc	(??___ftge+1)& (0+255),f,b
 13479  002F10  2378               	addwfc	(??___ftge+2)& (0+255),f,b
 13480  002F12  0E00               	movlw	0
 13481  002F14  0100               	movlb	0	; () banked
 13482  002F16  2576               	addwf	??___ftge& (0+255),w,b
 13483  002F18  0100               	movlb	0	; () banked
 13484  002F1A  6F73               	movwf	___ftge@ff2& (0+255),b
 13485  002F1C  0E00               	movlw	0
 13486  002F1E  0100               	movlb	0	; () banked
 13487  002F20  2177               	addwfc	(??___ftge+1)& (0+255),w,b
 13488  002F22  0100               	movlb	0	; () banked
 13489  002F24  6F74               	movwf	(___ftge@ff2+1)& (0+255),b
 13490  002F26  0E80               	movlw	128
 13491  002F28  0100               	movlb	0	; () banked
 13492  002F2A  2178               	addwfc	(??___ftge+2)& (0+255),w,b
 13493  002F2C  0100               	movlb	0	; () banked
 13494  002F2E  6F75               	movwf	(___ftge@ff2+2)& (0+255),b
 13495  002F30  D000               	goto	l6719
 13496  002F32                     l6719:
 13497                           
 13498                           ; BSR set to: 0
 13499  002F32  0E00               	movlw	0
 13500  002F34  0100               	movlb	0	; () banked
 13501  002F36  1B70               	xorwf	___ftge@ff1& (0+255),f,b
 13502  002F38  0E00               	movlw	0
 13503  002F3A  0100               	movlb	0	; () banked
 13504  002F3C  1B71               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 13505  002F3E  0E80               	movlw	128
 13506  002F40  0100               	movlb	0	; () banked
 13507  002F42  1B72               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 13508                           
 13509                           ; BSR set to: 0
 13510  002F44  0E00               	movlw	0
 13511  002F46  0100               	movlb	0	; () banked
 13512  002F48  1B73               	xorwf	___ftge@ff2& (0+255),f,b
 13513  002F4A  0E00               	movlw	0
 13514  002F4C  0100               	movlb	0	; () banked
 13515  002F4E  1B74               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 13516  002F50  0E80               	movlw	128
 13517  002F52  0100               	movlb	0	; () banked
 13518  002F54  1B75               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 13519  002F56  0100               	movlb	0	; () banked
 13520  002F58  5173               	movf	___ftge@ff2& (0+255),w,b
 13521  002F5A  0100               	movlb	0	; () banked
 13522  002F5C  5D70               	subwf	___ftge@ff1& (0+255),w,b
 13523  002F5E  0100               	movlb	0	; () banked
 13524  002F60  5174               	movf	(___ftge@ff2+1)& (0+255),w,b
 13525  002F62  0100               	movlb	0	; () banked
 13526  002F64  5971               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 13527  002F66  0100               	movlb	0	; () banked
 13528  002F68  5175               	movf	(___ftge@ff2+2)& (0+255),w,b
 13529  002F6A  0100               	movlb	0	; () banked
 13530  002F6C  5972               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 13531  002F6E  B0D8               	btfsc	status,0,c
 13532  002F70  D002               	goto	l6725
 13533                           
 13534                           ; BSR set to: 0
 13535  002F72  90D8               	bcf	status,0,c
 13536  002F74  D002               	goto	l1628
 13537  002F76                     l6725:
 13538                           
 13539                           ; BSR set to: 0
 13540  002F76  80D8               	bsf	status,0,c
 13541                           
 13542                           ; BSR set to: 0
 13543  002F78  D000               	goto	l1628
 13544  002F7A                     l1628:
 13545                           
 13546                           ; BSR set to: 0
 13547  002F7A  0012               	return		;funcret
 13548  002F7C                     __end_of___ftge:
 13549                           	opt stack 0
 13550                           prodh	equ	0xFF4
 13551                           prodl	equ	0xFF3
 13552                           intcon	equ	0xFF2
 13553                           intcon2	equ	0xFF1
 13554                           intcon3	equ	0xFF0
 13555                           postinc0	equ	0xFEE
 13556                           wreg	equ	0xFE8
 13557                           indf2	equ	0xFDF
 13558                           postinc2	equ	0xFDE
 13559                           postdec2	equ	0xFDD
 13560                           fsr2h	equ	0xFDA
 13561                           fsr2l	equ	0xFD9
 13562                           status	equ	0xFD8
 13563                           
 13564 ;; *************** function ___altoft *****************
 13565 ;; Defined at:
 13566 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;  c               4   58[BANK0 ] long 
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;  sign            1   67[BANK0 ] unsigned char 
 13571 ;;  exp             1   66[BANK0 ] unsigned char 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  3   58[BANK0 ] float 
 13574 ;; Registers used:
 13575 ;;		wreg, status,2, status,0, cstack
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13584 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13585 ;;Total ram usage:       10 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:    8
 13588 ;; This function calls:
 13589 ;;		___ftpack
 13590 ;; This function is called by:
 13591 ;;		_floor
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text102
 13596  003394                     __ptext102:
 13597                           	opt stack 0
 13598  003394                     ___altoft:
 13599                           	opt stack 18
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;incstack = 0
 13603  003394  0E00               	movlw	0
 13604  003396  0100               	movlb	0	; () banked
 13605  003398  6FA3               	movwf	___altoft@sign& (0+255),b
 13606  00339A  0E8E               	movlw	142
 13607  00339C  0100               	movlb	0	; () banked
 13608  00339E  6FA2               	movwf	___altoft@exp& (0+255),b
 13609                           
 13610                           ; BSR set to: 0
 13611  0033A0  0100               	movlb	0	; () banked
 13612  0033A2  AF9D               	btfss	(___altoft@c+3)& (0+255),7,b
 13613  0033A4  D016               	goto	l6551
 13614                           
 13615                           ; BSR set to: 0
 13616  0033A6  0100               	movlb	0	; () banked
 13617  0033A8  1F9D               	comf	(___altoft@c+3)& (0+255),f,b
 13618  0033AA  1F9C               	comf	(___altoft@c+2)& (0+255),f,b
 13619  0033AC  1F9B               	comf	(___altoft@c+1)& (0+255),f,b
 13620  0033AE  6D9A               	negf	___altoft@c& (0+255),b
 13621  0033B0  0E00               	movlw	0
 13622  0033B2  239B               	addwfc	(___altoft@c+1)& (0+255),f,b
 13623  0033B4  239C               	addwfc	(___altoft@c+2)& (0+255),f,b
 13624  0033B6  239D               	addwfc	(___altoft@c+3)& (0+255),f,b
 13625                           
 13626                           ; BSR set to: 0
 13627  0033B8  0E01               	movlw	1
 13628  0033BA  0100               	movlb	0	; () banked
 13629  0033BC  6FA3               	movwf	___altoft@sign& (0+255),b
 13630                           
 13631                           ; BSR set to: 0
 13632  0033BE  D009               	goto	l6551
 13633  0033C0                     l6549:
 13634                           
 13635                           ; BSR set to: 0
 13636  0033C0  0100               	movlb	0	; () banked
 13637  0033C2  90D8               	bcf	status,0,c
 13638  0033C4  339D               	rrcf	(___altoft@c+3)& (0+255),f,b
 13639  0033C6  339C               	rrcf	(___altoft@c+2)& (0+255),f,b
 13640  0033C8  339B               	rrcf	(___altoft@c+1)& (0+255),f,b
 13641  0033CA  339A               	rrcf	___altoft@c& (0+255),f,b
 13642  0033CC  0100               	movlb	0	; () banked
 13643  0033CE  2BA2               	incf	___altoft@exp& (0+255),f,b
 13644  0033D0  D000               	goto	l6551
 13645  0033D2                     l6551:
 13646                           
 13647                           ; BSR set to: 0
 13648  0033D2  0E00               	movlw	0
 13649  0033D4  0100               	movlb	0	; () banked
 13650  0033D6  159A               	andwf	___altoft@c& (0+255),w,b
 13651  0033D8  0100               	movlb	0	; () banked
 13652  0033DA  6F9E               	movwf	??___altoft& (0+255),b
 13653  0033DC  0E00               	movlw	0
 13654  0033DE  0100               	movlb	0	; () banked
 13655  0033E0  159B               	andwf	(___altoft@c+1)& (0+255),w,b
 13656  0033E2  0100               	movlb	0	; () banked
 13657  0033E4  6F9F               	movwf	(??___altoft+1)& (0+255),b
 13658  0033E6  0E00               	movlw	0
 13659  0033E8  0100               	movlb	0	; () banked
 13660  0033EA  159C               	andwf	(___altoft@c+2)& (0+255),w,b
 13661  0033EC  0100               	movlb	0	; () banked
 13662  0033EE  6FA0               	movwf	(??___altoft+2)& (0+255),b
 13663  0033F0  0EFF               	movlw	255
 13664  0033F2  0100               	movlb	0	; () banked
 13665  0033F4  159D               	andwf	(___altoft@c+3)& (0+255),w,b
 13666  0033F6  0100               	movlb	0	; () banked
 13667  0033F8  6FA1               	movwf	(??___altoft+3)& (0+255),b
 13668  0033FA  0100               	movlb	0	; () banked
 13669  0033FC  519E               	movf	??___altoft& (0+255),w,b
 13670  0033FE  0100               	movlb	0	; () banked
 13671  003400  119F               	iorwf	(??___altoft+1)& (0+255),w,b
 13672  003402  0100               	movlb	0	; () banked
 13673  003404  11A0               	iorwf	(??___altoft+2)& (0+255),w,b
 13674  003406  0100               	movlb	0	; () banked
 13675  003408  11A1               	iorwf	(??___altoft+3)& (0+255),w,b
 13676  00340A  A4D8               	btfss	status,2,c
 13677  00340C  D7D9               	goto	l6549
 13678                           
 13679                           ; BSR set to: 0
 13680                           
 13681                           ; BSR set to: 0
 13682  00340E  C09A  F070         	movff	___altoft@c,___ftpack@arg
 13683  003412  C09B  F071         	movff	___altoft@c+1,___ftpack@arg+1
 13684  003416  C09C  F072         	movff	___altoft@c+2,___ftpack@arg+2
 13685  00341A  C0A2  F073         	movff	___altoft@exp,___ftpack@exp
 13686  00341E  C0A3  F074         	movff	___altoft@sign,___ftpack@sign
 13687  003422  EC65  F013         	call	___ftpack	;wreg free
 13688  003426  C070  F09A         	movff	?___ftpack,?___altoft
 13689  00342A  C071  F09B         	movff	?___ftpack+1,?___altoft+1
 13690  00342E  C072  F09C         	movff	?___ftpack+2,?___altoft+2
 13691  003432  D000               	goto	l1322
 13692  003434                     l1322:
 13693  003434  0012               	return		;funcret
 13694  003436                     __end_of___altoft:
 13695                           	opt stack 0
 13696                           prodh	equ	0xFF4
 13697                           prodl	equ	0xFF3
 13698                           intcon	equ	0xFF2
 13699                           intcon2	equ	0xFF1
 13700                           intcon3	equ	0xFF0
 13701                           postinc0	equ	0xFEE
 13702                           wreg	equ	0xFE8
 13703                           indf2	equ	0xFDF
 13704                           postinc2	equ	0xFDE
 13705                           postdec2	equ	0xFDD
 13706                           fsr2h	equ	0xFDA
 13707                           fsr2l	equ	0xFD9
 13708                           status	equ	0xFD8
 13709                           
 13710 ;; *************** function _eval_poly *****************
 13711 ;; Defined at:
 13712 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  x               3   55[BANK0 ] float 
 13715 ;;  d               2   58[BANK0 ] PTR const 
 13716 ;;		 -> log@coeff(27), exp@coeff(30), 
 13717 ;;  n               2   60[BANK0 ] int 
 13718 ;; Auto vars:     Size  Location     Type
 13719 ;;  res             3   64[BANK0 ] int 
 13720 ;; Return value:  Size  Location     Type
 13721 ;;                  3   55[BANK0 ] int 
 13722 ;; Registers used:
 13723 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13724 ;; Tracked objects:
 13725 ;;		On entry : 0/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13729 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13730 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13731 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13732 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13733 ;;Total ram usage:       12 bytes
 13734 ;; Hardware stack levels used:    1
 13735 ;; Hardware stack levels required when called:    9
 13736 ;; This function calls:
 13737 ;;		___ftadd
 13738 ;;		___ftmul
 13739 ;;		___wmul
 13740 ;; This function is called by:
 13741 ;;		_exp
 13742 ;;		_log
 13743 ;; This function uses a non-reentrant model
 13744 ;;
 13745                           
 13746                           	psect	text103
 13747  002AF2                     __ptext103:
 13748                           	opt stack 0
 13749  002AF2                     _eval_poly:
 13750                           	opt stack 18
 13751                           
 13752                           ;incstack = 0
 13753  002AF2  C09C  F070         	movff	eval_poly@n,___wmul@multiplier
 13754  002AF6  C09D  F071         	movff	eval_poly@n+1,___wmul@multiplier+1
 13755  002AFA  0E00               	movlw	0
 13756  002AFC  0100               	movlb	0	; () banked
 13757  002AFE  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13758  002B00  0E03               	movlw	3
 13759  002B02  6F72               	movwf	___wmul@multiplicand& (0+255),b
 13760  002B04  EC93  F01F         	call	___wmul	;wreg free
 13761  002B08  C09A  F09E         	movff	eval_poly@d,??_eval_poly
 13762  002B0C  C09B  F09F         	movff	eval_poly@d+1,??_eval_poly+1
 13763  002B10  0100               	movlb	0	; () banked
 13764  002B12  5170               	movf	?___wmul& (0+255),w,b
 13765  002B14  0100               	movlb	0	; () banked
 13766  002B16  279E               	addwf	??_eval_poly& (0+255),f,b
 13767  002B18  0100               	movlb	0	; () banked
 13768  002B1A  5171               	movf	(?___wmul+1)& (0+255),w,b
 13769  002B1C  0100               	movlb	0	; () banked
 13770  002B1E  239F               	addwfc	(??_eval_poly+1)& (0+255),f,b
 13771  002B20  C09E  FFF6         	movff	??_eval_poly,tblptrl
 13772  002B24  C09F  FFF7         	movff	??_eval_poly+1,tblptrh
 13773  002B28                     	if	0	;tblptru may be non-zero
 13774  002B28                     	endif
 13775  002B28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13776  002B28  0E00               	movlw	low (__mediumconst shr (0+16))
 13777  002B2A  6EF8               	movwf	tblptru,c
 13778  002B2C                     	endif
 13779  002B2C  0009               	tblrd		*+
 13780  002B2E  CFF5 F0A0          	movff	tablat,eval_poly@res
 13781  002B32  0009               	tblrd		*+
 13782  002B34  CFF5 F0A1          	movff	tablat,eval_poly@res+1
 13783  002B38  000A               	tblrd		*-
 13784  002B3A  CFF5 F0A2          	movff	tablat,eval_poly@res+2
 13785  002B3E  D047               	goto	l7043
 13786  002B40                     l7041:
 13787                           
 13788                           ; BSR set to: 0
 13789  002B40  C0A0  F07F         	movff	eval_poly@res,___ftmul@f2
 13790  002B44  C0A1  F080         	movff	eval_poly@res+1,___ftmul@f2+1
 13791  002B48  C0A2  F081         	movff	eval_poly@res+2,___ftmul@f2+2
 13792  002B4C  C097  F07C         	movff	eval_poly@x,___ftmul@f1
 13793  002B50  C098  F07D         	movff	eval_poly@x+1,___ftmul@f1+1
 13794  002B54  C099  F07E         	movff	eval_poly@x+2,___ftmul@f1+2
 13795  002B58  ECAC  F00F         	call	___ftmul	;wreg free
 13796  002B5C  C07C  F08B         	movff	?___ftmul,___ftadd@f1
 13797  002B60  C07D  F08C         	movff	?___ftmul+1,___ftadd@f1+1
 13798  002B64  C07E  F08D         	movff	?___ftmul+2,___ftadd@f1+2
 13799  002B68  0E00               	movlw	0
 13800  002B6A  0100               	movlb	0	; () banked
 13801  002B6C  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13802  002B6E  0E03               	movlw	3
 13803  002B70  6F72               	movwf	___wmul@multiplicand& (0+255),b
 13804  002B72  0100               	movlb	0	; () banked
 13805  002B74  079C               	decf	eval_poly@n& (0+255),f,b
 13806  002B76  A0D8               	btfss	status,0,c
 13807  002B78  079D               	decf	(eval_poly@n+1)& (0+255),f,b
 13808  002B7A  C09C  F070         	movff	eval_poly@n,___wmul@multiplier
 13809  002B7E  C09D  F071         	movff	eval_poly@n+1,___wmul@multiplier+1
 13810  002B82  EC93  F01F         	call	___wmul	;wreg free
 13811  002B86  C09A  F09E         	movff	eval_poly@d,??_eval_poly
 13812  002B8A  C09B  F09F         	movff	eval_poly@d+1,??_eval_poly+1
 13813  002B8E  0100               	movlb	0	; () banked
 13814  002B90  5170               	movf	?___wmul& (0+255),w,b
 13815  002B92  0100               	movlb	0	; () banked
 13816  002B94  279E               	addwf	??_eval_poly& (0+255),f,b
 13817  002B96  0100               	movlb	0	; () banked
 13818  002B98  5171               	movf	(?___wmul+1)& (0+255),w,b
 13819  002B9A  0100               	movlb	0	; () banked
 13820  002B9C  239F               	addwfc	(??_eval_poly+1)& (0+255),f,b
 13821  002B9E  C09E  FFF6         	movff	??_eval_poly,tblptrl
 13822  002BA2  C09F  FFF7         	movff	??_eval_poly+1,tblptrh
 13823  002BA6                     	if	0	;tblptru may be non-zero
 13824  002BA6                     	endif
 13825  002BA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13826  002BA6  0E00               	movlw	low (__mediumconst shr (0+16))
 13827  002BA8  6EF8               	movwf	tblptru,c
 13828  002BAA                     	endif
 13829  002BAA  0009               	tblrd		*+
 13830  002BAC  CFF5 F08E          	movff	tablat,___ftadd@f2
 13831  002BB0  0009               	tblrd		*+
 13832  002BB2  CFF5 F08F          	movff	tablat,___ftadd@f2+1
 13833  002BB6  000A               	tblrd		*-
 13834  002BB8  CFF5 F090          	movff	tablat,___ftadd@f2+2
 13835  002BBC  ECC9  F00B         	call	___ftadd	;wreg free
 13836  002BC0  C08B  F0A0         	movff	?___ftadd,eval_poly@res
 13837  002BC4  C08C  F0A1         	movff	?___ftadd+1,eval_poly@res+1
 13838  002BC8  C08D  F0A2         	movff	?___ftadd+2,eval_poly@res+2
 13839  002BCC  D000               	goto	l7043
 13840  002BCE                     l7043:
 13841  002BCE  0100               	movlb	0	; () banked
 13842  002BD0  519C               	movf	eval_poly@n& (0+255),w,b
 13843  002BD2  0100               	movlb	0	; () banked
 13844  002BD4  119D               	iorwf	(eval_poly@n+1)& (0+255),w,b
 13845  002BD6  A4D8               	btfss	status,2,c
 13846  002BD8  D7B3               	goto	l7041
 13847                           
 13848                           ; BSR set to: 0
 13849  002BDA  C0A0  F097         	movff	eval_poly@res,?_eval_poly
 13850  002BDE  C0A1  F098         	movff	eval_poly@res+1,?_eval_poly+1
 13851  002BE2  C0A2  F099         	movff	eval_poly@res+2,?_eval_poly+2
 13852                           
 13853                           ; BSR set to: 0
 13854  002BE6  0012               	return		;funcret
 13855  002BE8                     __end_of_eval_poly:
 13856                           	opt stack 0
 13857                           tblptru	equ	0xFF8
 13858                           tblptrh	equ	0xFF7
 13859                           tblptrl	equ	0xFF6
 13860                           tablat	equ	0xFF5
 13861                           prodh	equ	0xFF4
 13862                           prodl	equ	0xFF3
 13863                           intcon	equ	0xFF2
 13864                           intcon2	equ	0xFF1
 13865                           intcon3	equ	0xFF0
 13866                           postinc0	equ	0xFEE
 13867                           wreg	equ	0xFE8
 13868                           indf2	equ	0xFDF
 13869                           postinc2	equ	0xFDE
 13870                           postdec2	equ	0xFDD
 13871                           fsr2h	equ	0xFDA
 13872                           fsr2l	equ	0xFD9
 13873                           status	equ	0xFD8
 13874                           
 13875 ;; *************** function ___wmul *****************
 13876 ;; Defined at:
 13877 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 13878 ;; Parameters:    Size  Location     Type
 13879 ;;  multiplier      2   16[BANK0 ] unsigned int 
 13880 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;  product         2   20[BANK0 ] unsigned int 
 13883 ;; Return value:  Size  Location     Type
 13884 ;;                  2   16[BANK0 ] unsigned int 
 13885 ;; Registers used:
 13886 ;;		wreg, status,2, status,0, prodl, prodh
 13887 ;; Tracked objects:
 13888 ;;		On entry : 0/0
 13889 ;;		On exit  : 0/0
 13890 ;;		Unchanged: 0/0
 13891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13892 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13895 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13896 ;;Total ram usage:        6 bytes
 13897 ;; Hardware stack levels used:    1
 13898 ;; Hardware stack levels required when called:    7
 13899 ;; This function calls:
 13900 ;;		Nothing
 13901 ;; This function is called by:
 13902 ;;		_main
 13903 ;;		_eval_poly
 13904 ;; This function uses a non-reentrant model
 13905 ;;
 13906                           
 13907                           	psect	text104
 13908  003F26                     __ptext104:
 13909                           	opt stack 0
 13910  003F26                     ___wmul:
 13911                           	opt stack 23
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;incstack = 0
 13915  003F26  0100               	movlb	0	; () banked
 13916  003F28  5170               	movf	___wmul@multiplier& (0+255),w,b
 13917  003F2A  0100               	movlb	0	; () banked
 13918  003F2C  0372               	mulwf	___wmul@multiplicand& (0+255),b
 13919  003F2E  CFF3 F074          	movff	prodl,___wmul@product
 13920  003F32  CFF4 F075          	movff	prodh,___wmul@product+1
 13921  003F36  0100               	movlb	0	; () banked
 13922  003F38  5170               	movf	___wmul@multiplier& (0+255),w,b
 13923  003F3A  0100               	movlb	0	; () banked
 13924  003F3C  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13925  003F3E  50F3               	movf	prodl,w,c
 13926  003F40  0100               	movlb	0	; () banked
 13927  003F42  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 13928  003F44  0100               	movlb	0	; () banked
 13929  003F46  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13930  003F48  0100               	movlb	0	; () banked
 13931  003F4A  0372               	mulwf	___wmul@multiplicand& (0+255),b
 13932  003F4C  50F3               	movf	prodl,w,c
 13933  003F4E  0100               	movlb	0	; () banked
 13934  003F50  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 13935                           
 13936                           ; BSR set to: 0
 13937  003F52  C074  F070         	movff	___wmul@product,?___wmul
 13938  003F56  C075  F071         	movff	___wmul@product+1,?___wmul+1
 13939  003F5A  D000               	goto	l1225
 13940  003F5C                     l1225:
 13941                           
 13942                           ; BSR set to: 0
 13943  003F5C  0012               	return		;funcret
 13944  003F5E                     __end_of___wmul:
 13945                           	opt stack 0
 13946                           tblptru	equ	0xFF8
 13947                           tblptrh	equ	0xFF7
 13948                           tblptrl	equ	0xFF6
 13949                           tablat	equ	0xFF5
 13950                           prodh	equ	0xFF4
 13951                           prodl	equ	0xFF3
 13952                           intcon	equ	0xFF2
 13953                           intcon2	equ	0xFF1
 13954                           intcon3	equ	0xFF0
 13955                           postinc0	equ	0xFEE
 13956                           wreg	equ	0xFE8
 13957                           indf2	equ	0xFDF
 13958                           postinc2	equ	0xFDE
 13959                           postdec2	equ	0xFDD
 13960                           fsr2h	equ	0xFDA
 13961                           fsr2l	equ	0xFD9
 13962                           status	equ	0xFD8
 13963                           
 13964 ;; *************** function ___ftmul *****************
 13965 ;; Defined at:
 13966 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 13967 ;; Parameters:    Size  Location     Type
 13968 ;;  f1              3   28[BANK0 ] float 
 13969 ;;  f2              3   31[BANK0 ] float 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
 13972 ;;  sign            1   42[BANK0 ] unsigned char 
 13973 ;;  cntr            1   41[BANK0 ] unsigned char 
 13974 ;;  exp             1   37[BANK0 ] unsigned char 
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  3   28[BANK0 ] float 
 13977 ;; Registers used:
 13978 ;;		wreg, status,2, status,0, cstack
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13984 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;Total ram usage:       15 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    8
 13991 ;; This function calls:
 13992 ;;		___ftpack
 13993 ;; This function is called by:
 13994 ;;		_CalculateSensorSums
 13995 ;;		_pow
 13996 ;;		_exp
 13997 ;;		_log
 13998 ;;		_eval_poly
 13999 ;;		_ConvertDistanceCM
 14000 ;;		_ConvertDistanceIN
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text105
 14005  001F58                     __ptext105:
 14006                           	opt stack 0
 14007  001F58                     ___ftmul:
 14008                           	opt stack 18
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;incstack = 0
 14012  001F58  C07E  F082         	movff	___ftmul@f1+2,??___ftmul
 14013  001F5C  0100               	movlb	0	; () banked
 14014  001F5E  6B83               	clrf	(??___ftmul+1)& (0+255),b
 14015  001F60  6B84               	clrf	(??___ftmul+2)& (0+255),b
 14016  001F62  0100               	movlb	0	; () banked
 14017  001F64  357D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 14018  001F66  0100               	movlb	0	; () banked
 14019  001F68  3782               	rlcf	??___ftmul& (0+255),f,b
 14020  001F6A  E301               	bnc	u6251
 14021  001F6C  8183               	bsf	(??___ftmul+1)& (0+255),0,b
 14022  001F6E                     u6251:
 14023  001F6E  0100               	movlb	0	; () banked
 14024  001F70  5182               	movf	??___ftmul& (0+255),w,b
 14025  001F72  0100               	movlb	0	; () banked
 14026  001F74  6F85               	movwf	___ftmul@exp& (0+255),b
 14027  001F76  0100               	movlb	0	; () banked
 14028  001F78  5185               	movf	___ftmul@exp& (0+255),w,b
 14029  001F7A  A4D8               	btfss	status,2,c
 14030  001F7C  D002               	goto	l6633
 14031  001F7E  D014               	goto	l6635
 14032                           
 14033                           ; BSR set to: 0
 14034                           
 14035                           ; BSR set to: 0
 14036  001F80  D098               	goto	l1634
 14037  001F82                     l6633:
 14038                           
 14039                           ; BSR set to: 0
 14040  001F82  C081  F082         	movff	___ftmul@f2+2,??___ftmul
 14041  001F86  0100               	movlb	0	; () banked
 14042  001F88  6B83               	clrf	(??___ftmul+1)& (0+255),b
 14043  001F8A  6B84               	clrf	(??___ftmul+2)& (0+255),b
 14044  001F8C  0100               	movlb	0	; () banked
 14045  001F8E  3580               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 14046  001F90  0100               	movlb	0	; () banked
 14047  001F92  3782               	rlcf	??___ftmul& (0+255),f,b
 14048  001F94  E301               	bnc	u6271
 14049  001F96  8183               	bsf	(??___ftmul+1)& (0+255),0,b
 14050  001F98                     u6271:
 14051  001F98  0100               	movlb	0	; () banked
 14052  001F9A  5182               	movf	??___ftmul& (0+255),w,b
 14053  001F9C  0100               	movlb	0	; () banked
 14054  001F9E  6F8A               	movwf	___ftmul@sign& (0+255),b
 14055  001FA0  0100               	movlb	0	; () banked
 14056  001FA2  518A               	movf	___ftmul@sign& (0+255),w,b
 14057  001FA4  A4D8               	btfss	status,2,c
 14058  001FA6  D00A               	goto	l6639
 14059  001FA8                     l6635:
 14060                           
 14061                           ; BSR set to: 0
 14062  001FA8  0E00               	movlw	0
 14063  001FAA  0100               	movlb	0	; () banked
 14064  001FAC  6F7C               	movwf	?___ftmul& (0+255),b
 14065  001FAE  0E00               	movlw	0
 14066  001FB0  0100               	movlb	0	; () banked
 14067  001FB2  6F7D               	movwf	(?___ftmul+1)& (0+255),b
 14068  001FB4  0E00               	movlw	0
 14069  001FB6  0100               	movlb	0	; () banked
 14070  001FB8  6F7E               	movwf	(?___ftmul+2)& (0+255),b
 14071                           
 14072                           ; BSR set to: 0
 14073  001FBA  D07B               	goto	l1634
 14074  001FBC                     l6639:
 14075                           
 14076                           ; BSR set to: 0
 14077  001FBC  0100               	movlb	0	; () banked
 14078  001FBE  518A               	movf	___ftmul@sign& (0+255),w,b
 14079  001FC0  0F7B               	addlw	123
 14080  001FC2  0100               	movlb	0	; () banked
 14081  001FC4  2785               	addwf	___ftmul@exp& (0+255),f,b
 14082                           
 14083                           ; BSR set to: 0
 14084  001FC6  C07E  F08A         	movff	___ftmul@f1+2,___ftmul@sign
 14085  001FCA  0100               	movlb	0	; () banked
 14086  001FCC  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
 14087  001FCE  0100               	movlb	0	; () banked
 14088  001FD0  1B8A               	xorwf	___ftmul@sign& (0+255),f,b
 14089  001FD2  0E80               	movlw	128
 14090  001FD4  0100               	movlb	0	; () banked
 14091  001FD6  178A               	andwf	___ftmul@sign& (0+255),f,b
 14092                           
 14093                           ; BSR set to: 0
 14094  001FD8  0100               	movlb	0	; () banked
 14095  001FDA  8F7D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 14096                           
 14097                           ; BSR set to: 0
 14098  001FDC  0100               	movlb	0	; () banked
 14099  001FDE  8F80               	bsf	(___ftmul@f2+1)& (0+255),7,b
 14100                           
 14101                           ; BSR set to: 0
 14102  001FE0  0EFF               	movlw	255
 14103  001FE2  0100               	movlb	0	; () banked
 14104  001FE4  177F               	andwf	___ftmul@f2& (0+255),f,b
 14105  001FE6  0EFF               	movlw	255
 14106  001FE8  0100               	movlb	0	; () banked
 14107  001FEA  1780               	andwf	(___ftmul@f2+1)& (0+255),f,b
 14108  001FEC  0E00               	movlw	0
 14109  001FEE  0100               	movlb	0	; () banked
 14110  001FF0  1781               	andwf	(___ftmul@f2+2)& (0+255),f,b
 14111                           
 14112                           ; BSR set to: 0
 14113  001FF2  0E00               	movlw	0
 14114  001FF4  0100               	movlb	0	; () banked
 14115  001FF6  6F86               	movwf	___ftmul@f3_as_product& (0+255),b
 14116  001FF8  0E00               	movlw	0
 14117  001FFA  0100               	movlb	0	; () banked
 14118  001FFC  6F87               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 14119  001FFE  0E00               	movlw	0
 14120  002000  0100               	movlb	0	; () banked
 14121  002002  6F88               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 14122                           
 14123                           ; BSR set to: 0
 14124  002004  0E07               	movlw	7
 14125  002006  0100               	movlb	0	; () banked
 14126  002008  6F89               	movwf	___ftmul@cntr& (0+255),b
 14127  00200A  D000               	goto	l6653
 14128  00200C                     l6653:
 14129                           
 14130                           ; BSR set to: 0
 14131  00200C  0100               	movlb	0	; () banked
 14132  00200E  A17C               	btfss	___ftmul@f1& (0+255),0,b
 14133  002010  D00D               	goto	l6657
 14134                           
 14135                           ; BSR set to: 0
 14136  002012  0100               	movlb	0	; () banked
 14137  002014  517F               	movf	___ftmul@f2& (0+255),w,b
 14138  002016  0100               	movlb	0	; () banked
 14139  002018  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14140  00201A  0100               	movlb	0	; () banked
 14141  00201C  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
 14142  00201E  0100               	movlb	0	; () banked
 14143  002020  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14144  002022  0100               	movlb	0	; () banked
 14145  002024  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
 14146  002026  0100               	movlb	0	; () banked
 14147  002028  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14148  00202A  D000               	goto	l6657
 14149  00202C                     l6657:
 14150                           
 14151                           ; BSR set to: 0
 14152  00202C  0100               	movlb	0	; () banked
 14153  00202E  90D8               	bcf	status,0,c
 14154  002030  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14155  002032  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14156  002034  337C               	rrcf	___ftmul@f1& (0+255),f,b
 14157  002036  0100               	movlb	0	; () banked
 14158  002038  90D8               	bcf	status,0,c
 14159  00203A  377F               	rlcf	___ftmul@f2& (0+255),f,b
 14160  00203C  3780               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14161  00203E  3781               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14162                           
 14163                           ; BSR set to: 0
 14164  002040  0100               	movlb	0	; () banked
 14165  002042  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
 14166  002044  D7E3               	goto	l6653
 14167  002046  D000               	goto	l6661
 14168  002048                     l6661:
 14169                           
 14170                           ; BSR set to: 0
 14171  002048  0E09               	movlw	9
 14172  00204A  0100               	movlb	0	; () banked
 14173  00204C  6F89               	movwf	___ftmul@cntr& (0+255),b
 14174  00204E  D000               	goto	l6663
 14175  002050                     l6663:
 14176                           
 14177                           ; BSR set to: 0
 14178  002050  0100               	movlb	0	; () banked
 14179  002052  A17C               	btfss	___ftmul@f1& (0+255),0,b
 14180  002054  D00D               	goto	l6667
 14181                           
 14182                           ; BSR set to: 0
 14183  002056  0100               	movlb	0	; () banked
 14184  002058  517F               	movf	___ftmul@f2& (0+255),w,b
 14185  00205A  0100               	movlb	0	; () banked
 14186  00205C  2786               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14187  00205E  0100               	movlb	0	; () banked
 14188  002060  5180               	movf	(___ftmul@f2+1)& (0+255),w,b
 14189  002062  0100               	movlb	0	; () banked
 14190  002064  2387               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14191  002066  0100               	movlb	0	; () banked
 14192  002068  5181               	movf	(___ftmul@f2+2)& (0+255),w,b
 14193  00206A  0100               	movlb	0	; () banked
 14194  00206C  2388               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14195  00206E  D000               	goto	l6667
 14196  002070                     l6667:
 14197                           
 14198                           ; BSR set to: 0
 14199  002070  0100               	movlb	0	; () banked
 14200  002072  90D8               	bcf	status,0,c
 14201  002074  337E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14202  002076  337D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14203  002078  337C               	rrcf	___ftmul@f1& (0+255),f,b
 14204  00207A  0100               	movlb	0	; () banked
 14205  00207C  90D8               	bcf	status,0,c
 14206  00207E  3388               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14207  002080  3387               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14208  002082  3386               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14209                           
 14210                           ; BSR set to: 0
 14211  002084  0100               	movlb	0	; () banked
 14212  002086  2F89               	decfsz	___ftmul@cntr& (0+255),f,b
 14213  002088  D7E3               	goto	l6663
 14214  00208A  D000               	goto	l6671
 14215  00208C                     l6671:
 14216                           
 14217                           ; BSR set to: 0
 14218  00208C  C086  F070         	movff	___ftmul@f3_as_product,___ftpack@arg
 14219  002090  C087  F071         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14220  002094  C088  F072         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14221  002098  C085  F073         	movff	___ftmul@exp,___ftpack@exp
 14222  00209C  C08A  F074         	movff	___ftmul@sign,___ftpack@sign
 14223  0020A0  EC65  F013         	call	___ftpack	;wreg free
 14224  0020A4  C070  F07C         	movff	?___ftpack,?___ftmul
 14225  0020A8  C071  F07D         	movff	?___ftpack+1,?___ftmul+1
 14226  0020AC  C072  F07E         	movff	?___ftpack+2,?___ftmul+2
 14227  0020B0  D000               	goto	l1634
 14228  0020B2                     l1634:
 14229  0020B2  0012               	return		;funcret
 14230  0020B4                     __end_of___ftmul:
 14231                           	opt stack 0
 14232                           tblptru	equ	0xFF8
 14233                           tblptrh	equ	0xFF7
 14234                           tblptrl	equ	0xFF6
 14235                           tablat	equ	0xFF5
 14236                           prodh	equ	0xFF4
 14237                           prodl	equ	0xFF3
 14238                           intcon	equ	0xFF2
 14239                           intcon2	equ	0xFF1
 14240                           intcon3	equ	0xFF0
 14241                           postinc0	equ	0xFEE
 14242                           wreg	equ	0xFE8
 14243                           indf2	equ	0xFDF
 14244                           postinc2	equ	0xFDE
 14245                           postdec2	equ	0xFDD
 14246                           fsr2h	equ	0xFDA
 14247                           fsr2l	equ	0xFD9
 14248                           status	equ	0xFD8
 14249                           
 14250 ;; *************** function ___ftsub *****************
 14251 ;; Defined at:
 14252 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;  f1              3   55[BANK0 ] float 
 14255 ;;  f2              3   58[BANK0 ] float 
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;		None
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  3   55[BANK0 ] float 
 14260 ;; Registers used:
 14261 ;;		wreg, status,2, status,0, cstack
 14262 ;; Tracked objects:
 14263 ;;		On entry : 0/0
 14264 ;;		On exit  : 0/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14267 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14271 ;;Total ram usage:        6 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    9
 14274 ;; This function calls:
 14275 ;;		___ftadd
 14276 ;; This function is called by:
 14277 ;;		_exp
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text106
 14282  003BDC                     __ptext106:
 14283                           	opt stack 0
 14284  003BDC                     ___ftsub:
 14285                           	opt stack 18
 14286                           
 14287                           ;incstack = 0
 14288  003BDC  0100               	movlb	0	; () banked
 14289  003BDE  519A               	movf	___ftsub@f2& (0+255),w,b
 14290  003BE0  0100               	movlb	0	; () banked
 14291  003BE2  119B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14292  003BE4  0100               	movlb	0	; () banked
 14293  003BE6  119C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14294  003BE8  B4D8               	btfsc	status,2,c
 14295  003BEA  D00A               	goto	l6995
 14296                           
 14297                           ; BSR set to: 0
 14298  003BEC  0E00               	movlw	0
 14299  003BEE  0100               	movlb	0	; () banked
 14300  003BF0  1B9A               	xorwf	___ftsub@f2& (0+255),f,b
 14301  003BF2  0E00               	movlw	0
 14302  003BF4  0100               	movlb	0	; () banked
 14303  003BF6  1B9B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14304  003BF8  0E80               	movlw	128
 14305  003BFA  0100               	movlb	0	; () banked
 14306  003BFC  1B9C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14307  003BFE  D000               	goto	l6995
 14308  003C00                     l6995:
 14309                           
 14310                           ; BSR set to: 0
 14311  003C00  C097  F08B         	movff	___ftsub@f1,___ftadd@f1
 14312  003C04  C098  F08C         	movff	___ftsub@f1+1,___ftadd@f1+1
 14313  003C08  C099  F08D         	movff	___ftsub@f1+2,___ftadd@f1+2
 14314  003C0C  C09A  F08E         	movff	___ftsub@f2,___ftadd@f2
 14315  003C10  C09B  F08F         	movff	___ftsub@f2+1,___ftadd@f2+1
 14316  003C14  C09C  F090         	movff	___ftsub@f2+2,___ftadd@f2+2
 14317  003C18  ECC9  F00B         	call	___ftadd	;wreg free
 14318  003C1C  C08B  F097         	movff	?___ftadd,?___ftsub
 14319  003C20  C08C  F098         	movff	?___ftadd+1,?___ftsub+1
 14320  003C24  C08D  F099         	movff	?___ftadd+2,?___ftsub+2
 14321  003C28  D000               	goto	l1651
 14322  003C2A                     l1651:
 14323  003C2A  0012               	return		;funcret
 14324  003C2C                     __end_of___ftsub:
 14325                           	opt stack 0
 14326                           tblptru	equ	0xFF8
 14327                           tblptrh	equ	0xFF7
 14328                           tblptrl	equ	0xFF6
 14329                           tablat	equ	0xFF5
 14330                           prodh	equ	0xFF4
 14331                           prodl	equ	0xFF3
 14332                           intcon	equ	0xFF2
 14333                           intcon2	equ	0xFF1
 14334                           intcon3	equ	0xFF0
 14335                           postinc0	equ	0xFEE
 14336                           wreg	equ	0xFE8
 14337                           indf2	equ	0xFDF
 14338                           postinc2	equ	0xFDE
 14339                           postdec2	equ	0xFDD
 14340                           fsr2h	equ	0xFDA
 14341                           fsr2l	equ	0xFD9
 14342                           status	equ	0xFD8
 14343                           
 14344 ;; *************** function ___ftadd *****************
 14345 ;; Defined at:
 14346 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;  f1              3   43[BANK0 ] float 
 14349 ;;  f2              3   46[BANK0 ] float 
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;  exp1            1   54[BANK0 ] unsigned char 
 14352 ;;  exp2            1   53[BANK0 ] unsigned char 
 14353 ;;  sign            1   52[BANK0 ] unsigned char 
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  3   43[BANK0 ] float 
 14356 ;; Registers used:
 14357 ;;		wreg, status,2, status,0, cstack
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14363 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14364 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14367 ;;Total ram usage:       12 bytes
 14368 ;; Hardware stack levels used:    1
 14369 ;; Hardware stack levels required when called:    8
 14370 ;; This function calls:
 14371 ;;		___ftpack
 14372 ;; This function is called by:
 14373 ;;		___ftsub
 14374 ;;		_floor
 14375 ;;		_log
 14376 ;;		_eval_poly
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380                           	psect	text107
 14381  001792                     __ptext107:
 14382                           	opt stack 0
 14383  001792                     ___ftadd:
 14384                           	opt stack 18
 14385                           
 14386                           ;incstack = 0
 14387  001792  C08D  F091         	movff	___ftadd@f1+2,??___ftadd
 14388  001796  0100               	movlb	0	; () banked
 14389  001798  6B92               	clrf	(??___ftadd+1)& (0+255),b
 14390  00179A  6B93               	clrf	(??___ftadd+2)& (0+255),b
 14391  00179C  0100               	movlb	0	; () banked
 14392  00179E  358C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14393  0017A0  0100               	movlb	0	; () banked
 14394  0017A2  3791               	rlcf	??___ftadd& (0+255),f,b
 14395  0017A4  E301               	bnc	u6041
 14396  0017A6  8192               	bsf	(??___ftadd+1)& (0+255),0,b
 14397  0017A8                     u6041:
 14398  0017A8  0100               	movlb	0	; () banked
 14399  0017AA  5191               	movf	??___ftadd& (0+255),w,b
 14400  0017AC  0100               	movlb	0	; () banked
 14401  0017AE  6F96               	movwf	___ftadd@exp1& (0+255),b
 14402  0017B0  C090  F091         	movff	___ftadd@f2+2,??___ftadd
 14403  0017B4  0100               	movlb	0	; () banked
 14404  0017B6  6B92               	clrf	(??___ftadd+1)& (0+255),b
 14405  0017B8  6B93               	clrf	(??___ftadd+2)& (0+255),b
 14406  0017BA  0100               	movlb	0	; () banked
 14407  0017BC  358F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14408  0017BE  0100               	movlb	0	; () banked
 14409  0017C0  3791               	rlcf	??___ftadd& (0+255),f,b
 14410  0017C2  E301               	bnc	u6051
 14411  0017C4  8192               	bsf	(??___ftadd+1)& (0+255),0,b
 14412  0017C6                     u6051:
 14413  0017C6  0100               	movlb	0	; () banked
 14414  0017C8  5191               	movf	??___ftadd& (0+255),w,b
 14415  0017CA  0100               	movlb	0	; () banked
 14416  0017CC  6F95               	movwf	___ftadd@exp2& (0+255),b
 14417                           
 14418                           ; BSR set to: 0
 14419  0017CE  0100               	movlb	0	; () banked
 14420  0017D0  5196               	movf	___ftadd@exp1& (0+255),w,b
 14421  0017D2  0100               	movlb	0	; () banked
 14422  0017D4  B4D8               	btfsc	status,2,c
 14423  0017D6  D011               	goto	l1587
 14424                           
 14425                           ; BSR set to: 0
 14426  0017D8  0100               	movlb	0	; () banked
 14427  0017DA  5195               	movf	___ftadd@exp2& (0+255),w,b
 14428  0017DC  0100               	movlb	0	; () banked
 14429  0017DE  5D96               	subwf	___ftadd@exp1& (0+255),w,b
 14430  0017E0  B0D8               	btfsc	status,0,c
 14431  0017E2  D012               	goto	l6565
 14432                           
 14433                           ; BSR set to: 0
 14434  0017E4  0100               	movlb	0	; () banked
 14435  0017E6  5196               	movf	___ftadd@exp1& (0+255),w,b
 14436  0017E8  0800               	sublw	0
 14437  0017EA  0100               	movlb	0	; () banked
 14438  0017EC  2595               	addwf	___ftadd@exp2& (0+255),w,b
 14439  0017EE  0100               	movlb	0	; () banked
 14440  0017F0  6F91               	movwf	??___ftadd& (0+255),b
 14441  0017F2  0E18               	movlw	24
 14442  0017F4  0100               	movlb	0	; () banked
 14443  0017F6  6591               	cpfsgt	??___ftadd& (0+255),b
 14444  0017F8  D007               	goto	l6565
 14445  0017FA                     l1587:
 14446                           
 14447                           ; BSR set to: 0
 14448  0017FA  C08E  F08B         	movff	___ftadd@f2,?___ftadd
 14449  0017FE  C08F  F08C         	movff	___ftadd@f2+1,?___ftadd+1
 14450  001802  C090  F08D         	movff	___ftadd@f2+2,?___ftadd+2
 14451  001806  D103               	goto	l1588
 14452  001808                     l6565:
 14453                           
 14454                           ; BSR set to: 0
 14455  001808  0100               	movlb	0	; () banked
 14456  00180A  5195               	movf	___ftadd@exp2& (0+255),w,b
 14457  00180C  0100               	movlb	0	; () banked
 14458  00180E  B4D8               	btfsc	status,2,c
 14459  001810  D011               	goto	l1591
 14460                           
 14461                           ; BSR set to: 0
 14462  001812  0100               	movlb	0	; () banked
 14463  001814  5196               	movf	___ftadd@exp1& (0+255),w,b
 14464  001816  0100               	movlb	0	; () banked
 14465  001818  5D95               	subwf	___ftadd@exp2& (0+255),w,b
 14466  00181A  B0D8               	btfsc	status,0,c
 14467  00181C  D012               	goto	l6571
 14468                           
 14469                           ; BSR set to: 0
 14470  00181E  0100               	movlb	0	; () banked
 14471  001820  5195               	movf	___ftadd@exp2& (0+255),w,b
 14472  001822  0800               	sublw	0
 14473  001824  0100               	movlb	0	; () banked
 14474  001826  2596               	addwf	___ftadd@exp1& (0+255),w,b
 14475  001828  0100               	movlb	0	; () banked
 14476  00182A  6F91               	movwf	??___ftadd& (0+255),b
 14477  00182C  0E18               	movlw	24
 14478  00182E  0100               	movlb	0	; () banked
 14479  001830  6591               	cpfsgt	??___ftadd& (0+255),b
 14480  001832  D007               	goto	l6571
 14481  001834                     l1591:
 14482                           
 14483                           ; BSR set to: 0
 14484  001834  C08B  F08B         	movff	___ftadd@f1,?___ftadd
 14485  001838  C08C  F08C         	movff	___ftadd@f1+1,?___ftadd+1
 14486  00183C  C08D  F08D         	movff	___ftadd@f1+2,?___ftadd+2
 14487  001840  D0E6               	goto	l1588
 14488  001842                     l6571:
 14489                           
 14490                           ; BSR set to: 0
 14491  001842  0E06               	movlw	6
 14492  001844  0100               	movlb	0	; () banked
 14493  001846  6F94               	movwf	___ftadd@sign& (0+255),b
 14494                           
 14495                           ; BSR set to: 0
 14496  001848  0100               	movlb	0	; () banked
 14497  00184A  AF8D               	btfss	(___ftadd@f1+2)& (0+255),7,b
 14498  00184C  D003               	goto	l6577
 14499                           
 14500                           ; BSR set to: 0
 14501  00184E  0100               	movlb	0	; () banked
 14502  001850  8F94               	bsf	___ftadd@sign& (0+255),7,b
 14503  001852  D000               	goto	l6577
 14504  001854                     l6577:
 14505                           
 14506                           ; BSR set to: 0
 14507  001854  0100               	movlb	0	; () banked
 14508  001856  AF90               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14509  001858  D002               	goto	l1593
 14510                           
 14511                           ; BSR set to: 0
 14512  00185A  0100               	movlb	0	; () banked
 14513  00185C  8D94               	bsf	___ftadd@sign& (0+255),6,b
 14514  00185E                     l1593:
 14515                           
 14516                           ; BSR set to: 0
 14517  00185E  0100               	movlb	0	; () banked
 14518  001860  8F8C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14519                           
 14520                           ; BSR set to: 0
 14521  001862  0EFF               	movlw	255
 14522  001864  0100               	movlb	0	; () banked
 14523  001866  178B               	andwf	___ftadd@f1& (0+255),f,b
 14524  001868  0EFF               	movlw	255
 14525  00186A  0100               	movlb	0	; () banked
 14526  00186C  178C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14527  00186E  0E00               	movlw	0
 14528  001870  0100               	movlb	0	; () banked
 14529  001872  178D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14530  001874  0100               	movlb	0	; () banked
 14531  001876  8F8F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14532                           
 14533                           ; BSR set to: 0
 14534  001878  0EFF               	movlw	255
 14535  00187A  0100               	movlb	0	; () banked
 14536  00187C  178E               	andwf	___ftadd@f2& (0+255),f,b
 14537  00187E  0EFF               	movlw	255
 14538  001880  0100               	movlb	0	; () banked
 14539  001882  178F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14540  001884  0E00               	movlw	0
 14541  001886  0100               	movlb	0	; () banked
 14542  001888  1790               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14543                           
 14544                           ; BSR set to: 0
 14545  00188A  0100               	movlb	0	; () banked
 14546  00188C  5195               	movf	___ftadd@exp2& (0+255),w,b
 14547  00188E  0100               	movlb	0	; () banked
 14548  001890  5D96               	subwf	___ftadd@exp1& (0+255),w,b
 14549  001892  B0D8               	btfsc	status,0,c
 14550  001894  D028               	goto	l6597
 14551  001896                     l6587:
 14552                           
 14553                           ; BSR set to: 0
 14554  001896  0100               	movlb	0	; () banked
 14555  001898  90D8               	bcf	status,0,c
 14556  00189A  378E               	rlcf	___ftadd@f2& (0+255),f,b
 14557  00189C  378F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14558  00189E  3790               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14559  0018A0  0100               	movlb	0	; () banked
 14560  0018A2  0795               	decf	___ftadd@exp2& (0+255),f,b
 14561                           
 14562                           ; BSR set to: 0
 14563  0018A4  0100               	movlb	0	; () banked
 14564  0018A6  5196               	movf	___ftadd@exp1& (0+255),w,b
 14565  0018A8  0100               	movlb	0	; () banked
 14566  0018AA  1995               	xorwf	___ftadd@exp2& (0+255),w,b
 14567  0018AC  B4D8               	btfsc	status,2,c
 14568  0018AE  D013               	goto	l6595
 14569                           
 14570                           ; BSR set to: 0
 14571  0018B0  0100               	movlb	0	; () banked
 14572  0018B2  0794               	decf	___ftadd@sign& (0+255),f,b
 14573  0018B4  C094  F091         	movff	___ftadd@sign,??___ftadd
 14574  0018B8  0E07               	movlw	7
 14575  0018BA  0100               	movlb	0	; () banked
 14576  0018BC  1791               	andwf	??___ftadd& (0+255),f,b
 14577  0018BE  B4D8               	btfsc	status,2,c
 14578  0018C0  D00A               	goto	l6595
 14579  0018C2  D7E9               	goto	l6587
 14580                           
 14581                           ; BSR set to: 0
 14582                           
 14583                           ; BSR set to: 0
 14584  0018C4  D008               	goto	l6595
 14585  0018C6                     l6593:
 14586                           
 14587                           ; BSR set to: 0
 14588  0018C6  0100               	movlb	0	; () banked
 14589  0018C8  90D8               	bcf	status,0,c
 14590  0018CA  338D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14591  0018CC  338C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14592  0018CE  338B               	rrcf	___ftadd@f1& (0+255),f,b
 14593  0018D0  0100               	movlb	0	; () banked
 14594  0018D2  2B96               	incf	___ftadd@exp1& (0+255),f,b
 14595  0018D4  D000               	goto	l6595
 14596  0018D6                     l6595:
 14597                           
 14598                           ; BSR set to: 0
 14599  0018D6  0100               	movlb	0	; () banked
 14600  0018D8  5195               	movf	___ftadd@exp2& (0+255),w,b
 14601  0018DA  0100               	movlb	0	; () banked
 14602  0018DC  1996               	xorwf	___ftadd@exp1& (0+255),w,b
 14603  0018DE  B4D8               	btfsc	status,2,c
 14604  0018E0  D030               	goto	l1602
 14605  0018E2  D7F1               	goto	l6593
 14606                           
 14607                           ; BSR set to: 0
 14608  0018E4  D02E               	goto	l1602
 14609  0018E6                     l6597:
 14610                           
 14611                           ; BSR set to: 0
 14612  0018E6  0100               	movlb	0	; () banked
 14613  0018E8  5196               	movf	___ftadd@exp1& (0+255),w,b
 14614  0018EA  0100               	movlb	0	; () banked
 14615  0018EC  5D95               	subwf	___ftadd@exp2& (0+255),w,b
 14616  0018EE  B0D8               	btfsc	status,0,c
 14617  0018F0  D028               	goto	l1602
 14618  0018F2                     l6599:
 14619                           
 14620                           ; BSR set to: 0
 14621  0018F2  0100               	movlb	0	; () banked
 14622  0018F4  90D8               	bcf	status,0,c
 14623  0018F6  378B               	rlcf	___ftadd@f1& (0+255),f,b
 14624  0018F8  378C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14625  0018FA  378D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14626  0018FC  0100               	movlb	0	; () banked
 14627  0018FE  0796               	decf	___ftadd@exp1& (0+255),f,b
 14628                           
 14629                           ; BSR set to: 0
 14630  001900  0100               	movlb	0	; () banked
 14631  001902  5196               	movf	___ftadd@exp1& (0+255),w,b
 14632  001904  0100               	movlb	0	; () banked
 14633  001906  1995               	xorwf	___ftadd@exp2& (0+255),w,b
 14634  001908  B4D8               	btfsc	status,2,c
 14635  00190A  D013               	goto	l6607
 14636                           
 14637                           ; BSR set to: 0
 14638  00190C  0100               	movlb	0	; () banked
 14639  00190E  0794               	decf	___ftadd@sign& (0+255),f,b
 14640  001910  C094  F091         	movff	___ftadd@sign,??___ftadd
 14641  001914  0E07               	movlw	7
 14642  001916  0100               	movlb	0	; () banked
 14643  001918  1791               	andwf	??___ftadd& (0+255),f,b
 14644  00191A  B4D8               	btfsc	status,2,c
 14645  00191C  D00A               	goto	l6607
 14646  00191E  D7E9               	goto	l6599
 14647                           
 14648                           ; BSR set to: 0
 14649                           
 14650                           ; BSR set to: 0
 14651  001920  D008               	goto	l6607
 14652  001922                     l6605:
 14653                           
 14654                           ; BSR set to: 0
 14655  001922  0100               	movlb	0	; () banked
 14656  001924  90D8               	bcf	status,0,c
 14657  001926  3390               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14658  001928  338F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14659  00192A  338E               	rrcf	___ftadd@f2& (0+255),f,b
 14660  00192C  0100               	movlb	0	; () banked
 14661  00192E  2B95               	incf	___ftadd@exp2& (0+255),f,b
 14662  001930  D000               	goto	l6607
 14663  001932                     l6607:
 14664                           
 14665                           ; BSR set to: 0
 14666  001932  0100               	movlb	0	; () banked
 14667  001934  5195               	movf	___ftadd@exp2& (0+255),w,b
 14668  001936  0100               	movlb	0	; () banked
 14669  001938  1996               	xorwf	___ftadd@exp1& (0+255),w,b
 14670  00193A  B4D8               	btfsc	status,2,c
 14671  00193C  D002               	goto	l1602
 14672  00193E  D7F1               	goto	l6605
 14673                           
 14674                           ; BSR set to: 0
 14675  001940  D000               	goto	l1602
 14676  001942                     l1602:
 14677                           
 14678                           ; BSR set to: 0
 14679  001942  0100               	movlb	0	; () banked
 14680  001944  AF94               	btfss	___ftadd@sign& (0+255),7,b
 14681  001946  D012               	goto	l1611
 14682                           
 14683                           ; BSR set to: 0
 14684  001948  0EFF               	movlw	255
 14685  00194A  0100               	movlb	0	; () banked
 14686  00194C  1B8B               	xorwf	___ftadd@f1& (0+255),f,b
 14687  00194E  0EFF               	movlw	255
 14688  001950  0100               	movlb	0	; () banked
 14689  001952  1B8C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14690  001954  0EFF               	movlw	255
 14691  001956  0100               	movlb	0	; () banked
 14692  001958  1B8D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14693  00195A  0E01               	movlw	1
 14694  00195C  0100               	movlb	0	; () banked
 14695  00195E  278B               	addwf	___ftadd@f1& (0+255),f,b
 14696  001960  0E00               	movlw	0
 14697  001962  0100               	movlb	0	; () banked
 14698  001964  238C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14699  001966  0E00               	movlw	0
 14700  001968  0100               	movlb	0	; () banked
 14701  00196A  238D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14702  00196C                     l1611:
 14703                           
 14704                           ; BSR set to: 0
 14705  00196C  0100               	movlb	0	; () banked
 14706  00196E  AD94               	btfss	___ftadd@sign& (0+255),6,b
 14707  001970  D013               	goto	l6613
 14708                           
 14709                           ; BSR set to: 0
 14710  001972  0EFF               	movlw	255
 14711  001974  0100               	movlb	0	; () banked
 14712  001976  1B8E               	xorwf	___ftadd@f2& (0+255),f,b
 14713  001978  0EFF               	movlw	255
 14714  00197A  0100               	movlb	0	; () banked
 14715  00197C  1B8F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14716  00197E  0EFF               	movlw	255
 14717  001980  0100               	movlb	0	; () banked
 14718  001982  1B90               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14719  001984  0E01               	movlw	1
 14720  001986  0100               	movlb	0	; () banked
 14721  001988  278E               	addwf	___ftadd@f2& (0+255),f,b
 14722  00198A  0E00               	movlw	0
 14723  00198C  0100               	movlb	0	; () banked
 14724  00198E  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14725  001990  0E00               	movlw	0
 14726  001992  0100               	movlb	0	; () banked
 14727  001994  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14728  001996  D000               	goto	l6613
 14729  001998                     l6613:
 14730                           
 14731                           ; BSR set to: 0
 14732  001998  0E00               	movlw	0
 14733  00199A  0100               	movlb	0	; () banked
 14734  00199C  6F94               	movwf	___ftadd@sign& (0+255),b
 14735                           
 14736                           ; BSR set to: 0
 14737  00199E  0100               	movlb	0	; () banked
 14738  0019A0  518B               	movf	___ftadd@f1& (0+255),w,b
 14739  0019A2  0100               	movlb	0	; () banked
 14740  0019A4  278E               	addwf	___ftadd@f2& (0+255),f,b
 14741  0019A6  0100               	movlb	0	; () banked
 14742  0019A8  518C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14743  0019AA  0100               	movlb	0	; () banked
 14744  0019AC  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14745  0019AE  0100               	movlb	0	; () banked
 14746  0019B0  518D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14747  0019B2  0100               	movlb	0	; () banked
 14748  0019B4  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14749                           
 14750                           ; BSR set to: 0
 14751  0019B6  0100               	movlb	0	; () banked
 14752  0019B8  AF90               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14753  0019BA  D016               	goto	l6623
 14754                           
 14755                           ; BSR set to: 0
 14756  0019BC  0EFF               	movlw	255
 14757  0019BE  0100               	movlb	0	; () banked
 14758  0019C0  1B8E               	xorwf	___ftadd@f2& (0+255),f,b
 14759  0019C2  0EFF               	movlw	255
 14760  0019C4  0100               	movlb	0	; () banked
 14761  0019C6  1B8F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14762  0019C8  0EFF               	movlw	255
 14763  0019CA  0100               	movlb	0	; () banked
 14764  0019CC  1B90               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14765  0019CE  0E01               	movlw	1
 14766  0019D0  0100               	movlb	0	; () banked
 14767  0019D2  278E               	addwf	___ftadd@f2& (0+255),f,b
 14768  0019D4  0E00               	movlw	0
 14769  0019D6  0100               	movlb	0	; () banked
 14770  0019D8  238F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14771  0019DA  0E00               	movlw	0
 14772  0019DC  0100               	movlb	0	; () banked
 14773  0019DE  2390               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14774                           
 14775                           ; BSR set to: 0
 14776  0019E0  0E01               	movlw	1
 14777  0019E2  0100               	movlb	0	; () banked
 14778  0019E4  6F94               	movwf	___ftadd@sign& (0+255),b
 14779  0019E6  D000               	goto	l6623
 14780  0019E8                     l6623:
 14781                           
 14782                           ; BSR set to: 0
 14783  0019E8  C08E  F070         	movff	___ftadd@f2,___ftpack@arg
 14784  0019EC  C08F  F071         	movff	___ftadd@f2+1,___ftpack@arg+1
 14785  0019F0  C090  F072         	movff	___ftadd@f2+2,___ftpack@arg+2
 14786  0019F4  C096  F073         	movff	___ftadd@exp1,___ftpack@exp
 14787  0019F8  C094  F074         	movff	___ftadd@sign,___ftpack@sign
 14788  0019FC  EC65  F013         	call	___ftpack	;wreg free
 14789  001A00  C070  F08B         	movff	?___ftpack,?___ftadd
 14790  001A04  C071  F08C         	movff	?___ftpack+1,?___ftadd+1
 14791  001A08  C072  F08D         	movff	?___ftpack+2,?___ftadd+2
 14792  001A0C  D000               	goto	l1588
 14793  001A0E                     l1588:
 14794  001A0E  0012               	return		;funcret
 14795  001A10                     __end_of___ftadd:
 14796                           	opt stack 0
 14797                           tblptru	equ	0xFF8
 14798                           tblptrh	equ	0xFF7
 14799                           tblptrl	equ	0xFF6
 14800                           tablat	equ	0xFF5
 14801                           prodh	equ	0xFF4
 14802                           prodl	equ	0xFF3
 14803                           intcon	equ	0xFF2
 14804                           intcon2	equ	0xFF1
 14805                           intcon3	equ	0xFF0
 14806                           postinc0	equ	0xFEE
 14807                           wreg	equ	0xFE8
 14808                           indf2	equ	0xFDF
 14809                           postinc2	equ	0xFDE
 14810                           postdec2	equ	0xFDD
 14811                           fsr2h	equ	0xFDA
 14812                           fsr2l	equ	0xFD9
 14813                           status	equ	0xFD8
 14814                           
 14815 ;; *************** function ___ftneg *****************
 14816 ;; Defined at:
 14817 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 14818 ;; Parameters:    Size  Location     Type
 14819 ;;  f1              3   16[BANK0 ] float 
 14820 ;; Auto vars:     Size  Location     Type
 14821 ;;		None
 14822 ;; Return value:  Size  Location     Type
 14823 ;;                  3   16[BANK0 ] float 
 14824 ;; Registers used:
 14825 ;;		wreg, status,2, status,0
 14826 ;; Tracked objects:
 14827 ;;		On entry : 0/0
 14828 ;;		On exit  : 0/0
 14829 ;;		Unchanged: 0/0
 14830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14831 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14834 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14835 ;;Total ram usage:        3 bytes
 14836 ;; Hardware stack levels used:    1
 14837 ;; Hardware stack levels required when called:    7
 14838 ;; This function calls:
 14839 ;;		Nothing
 14840 ;; This function is called by:
 14841 ;;		_pow
 14842 ;;		_exp
 14843 ;; This function uses a non-reentrant model
 14844 ;;
 14845                           
 14846                           	psect	text108
 14847  0040CA                     __ptext108:
 14848                           	opt stack 0
 14849  0040CA                     ___ftneg:
 14850                           	opt stack 20
 14851                           
 14852                           ;incstack = 0
 14853  0040CA  0100               	movlb	0	; () banked
 14854  0040CC  5170               	movf	___ftneg@f1& (0+255),w,b
 14855  0040CE  0100               	movlb	0	; () banked
 14856  0040D0  1171               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 14857  0040D2  0100               	movlb	0	; () banked
 14858  0040D4  1172               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 14859  0040D6  B4D8               	btfsc	status,2,c
 14860  0040D8  D009               	goto	l1644
 14861                           
 14862                           ; BSR set to: 0
 14863  0040DA  0E00               	movlw	0
 14864  0040DC  0100               	movlb	0	; () banked
 14865  0040DE  1B70               	xorwf	___ftneg@f1& (0+255),f,b
 14866  0040E0  0E00               	movlw	0
 14867  0040E2  0100               	movlb	0	; () banked
 14868  0040E4  1B71               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 14869  0040E6  0E80               	movlw	128
 14870  0040E8  0100               	movlb	0	; () banked
 14871  0040EA  1B72               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 14872  0040EC                     l1644:
 14873                           
 14874                           ; BSR set to: 0
 14875  0040EC  C070  F070         	movff	___ftneg@f1,?___ftneg
 14876  0040F0  C071  F071         	movff	___ftneg@f1+1,?___ftneg+1
 14877  0040F4  C072  F072         	movff	___ftneg@f1+2,?___ftneg+2
 14878                           
 14879                           ; BSR set to: 0
 14880  0040F8  0012               	return		;funcret
 14881  0040FA                     __end_of___ftneg:
 14882                           	opt stack 0
 14883                           tblptru	equ	0xFF8
 14884                           tblptrh	equ	0xFF7
 14885                           tblptrl	equ	0xFF6
 14886                           tablat	equ	0xFF5
 14887                           prodh	equ	0xFF4
 14888                           prodl	equ	0xFF3
 14889                           intcon	equ	0xFF2
 14890                           intcon2	equ	0xFF1
 14891                           intcon3	equ	0xFF0
 14892                           postinc0	equ	0xFEE
 14893                           wreg	equ	0xFE8
 14894                           indf2	equ	0xFDF
 14895                           postinc2	equ	0xFDE
 14896                           postdec2	equ	0xFDD
 14897                           fsr2h	equ	0xFDA
 14898                           fsr2l	equ	0xFD9
 14899                           status	equ	0xFD8
 14900                           
 14901 ;; *************** function ___ftdiv *****************
 14902 ;; Defined at:
 14903 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;  f1              3   24[BANK0 ] float 
 14906 ;;  f2              3   27[BANK0 ] float 
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;  f3              3   34[BANK0 ] float 
 14909 ;;  sign            1   38[BANK0 ] unsigned char 
 14910 ;;  exp             1   37[BANK0 ] unsigned char 
 14911 ;;  cntr            1   33[BANK0 ] unsigned char 
 14912 ;; Return value:  Size  Location     Type
 14913 ;;                  3   24[BANK0 ] float 
 14914 ;; Registers used:
 14915 ;;		wreg, status,2, status,0, cstack
 14916 ;; Tracked objects:
 14917 ;;		On entry : 0/0
 14918 ;;		On exit  : 0/0
 14919 ;;		Unchanged: 0/0
 14920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14921 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14922 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14924 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14925 ;;Total ram usage:       15 bytes
 14926 ;; Hardware stack levels used:    1
 14927 ;; Hardware stack levels required when called:    8
 14928 ;; This function calls:
 14929 ;;		___ftpack
 14930 ;; This function is called by:
 14931 ;;		_exp
 14932 ;; This function uses a non-reentrant model
 14933 ;;
 14934                           
 14935                           	psect	text109
 14936  0021F6                     __ptext109:
 14937                           	opt stack 0
 14938  0021F6                     ___ftdiv:
 14939                           	opt stack 19
 14940                           
 14941                           ; BSR set to: 0
 14942                           ;incstack = 0
 14943  0021F6  C07A  F07E         	movff	___ftdiv@f1+2,??___ftdiv
 14944  0021FA  0100               	movlb	0	; () banked
 14945  0021FC  6B7F               	clrf	(??___ftdiv+1)& (0+255),b
 14946  0021FE  6B80               	clrf	(??___ftdiv+2)& (0+255),b
 14947  002200  0100               	movlb	0	; () banked
 14948  002202  3579               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14949  002204  0100               	movlb	0	; () banked
 14950  002206  377E               	rlcf	??___ftdiv& (0+255),f,b
 14951  002208  E301               	bnc	u6731
 14952  00220A  817F               	bsf	(??___ftdiv+1)& (0+255),0,b
 14953  00220C                     u6731:
 14954  00220C  0100               	movlb	0	; () banked
 14955  00220E  517E               	movf	??___ftdiv& (0+255),w,b
 14956  002210  0100               	movlb	0	; () banked
 14957  002212  6F85               	movwf	___ftdiv@exp& (0+255),b
 14958  002214  0100               	movlb	0	; () banked
 14959  002216  5185               	movf	___ftdiv@exp& (0+255),w,b
 14960  002218  A4D8               	btfss	status,2,c
 14961  00221A  D002               	goto	l6951
 14962  00221C  D014               	goto	l6953
 14963                           
 14964                           ; BSR set to: 0
 14965                           
 14966                           ; BSR set to: 0
 14967  00221E  D08B               	goto	l1619
 14968  002220                     l6951:
 14969                           
 14970                           ; BSR set to: 0
 14971  002220  C07D  F07E         	movff	___ftdiv@f2+2,??___ftdiv
 14972  002224  0100               	movlb	0	; () banked
 14973  002226  6B7F               	clrf	(??___ftdiv+1)& (0+255),b
 14974  002228  6B80               	clrf	(??___ftdiv+2)& (0+255),b
 14975  00222A  0100               	movlb	0	; () banked
 14976  00222C  357C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14977  00222E  0100               	movlb	0	; () banked
 14978  002230  377E               	rlcf	??___ftdiv& (0+255),f,b
 14979  002232  E301               	bnc	u6751
 14980  002234  817F               	bsf	(??___ftdiv+1)& (0+255),0,b
 14981  002236                     u6751:
 14982  002236  0100               	movlb	0	; () banked
 14983  002238  517E               	movf	??___ftdiv& (0+255),w,b
 14984  00223A  0100               	movlb	0	; () banked
 14985  00223C  6F86               	movwf	___ftdiv@sign& (0+255),b
 14986  00223E  0100               	movlb	0	; () banked
 14987  002240  5186               	movf	___ftdiv@sign& (0+255),w,b
 14988  002242  A4D8               	btfss	status,2,c
 14989  002244  D00A               	goto	l6957
 14990  002246                     l6953:
 14991                           
 14992                           ; BSR set to: 0
 14993  002246  0E00               	movlw	0
 14994  002248  0100               	movlb	0	; () banked
 14995  00224A  6F78               	movwf	?___ftdiv& (0+255),b
 14996  00224C  0E00               	movlw	0
 14997  00224E  0100               	movlb	0	; () banked
 14998  002250  6F79               	movwf	(?___ftdiv+1)& (0+255),b
 14999  002252  0E00               	movlw	0
 15000  002254  0100               	movlb	0	; () banked
 15001  002256  6F7A               	movwf	(?___ftdiv+2)& (0+255),b
 15002                           
 15003                           ; BSR set to: 0
 15004  002258  D06E               	goto	l1619
 15005  00225A                     l6957:
 15006                           
 15007                           ; BSR set to: 0
 15008  00225A  0E00               	movlw	0
 15009  00225C  0100               	movlb	0	; () banked
 15010  00225E  6F82               	movwf	___ftdiv@f3& (0+255),b
 15011  002260  0E00               	movlw	0
 15012  002262  0100               	movlb	0	; () banked
 15013  002264  6F83               	movwf	(___ftdiv@f3+1)& (0+255),b
 15014  002266  0E00               	movlw	0
 15015  002268  0100               	movlb	0	; () banked
 15016  00226A  6F84               	movwf	(___ftdiv@f3+2)& (0+255),b
 15017                           
 15018                           ; BSR set to: 0
 15019  00226C  0100               	movlb	0	; () banked
 15020  00226E  5186               	movf	___ftdiv@sign& (0+255),w,b
 15021  002270  0F89               	addlw	137
 15022  002272  0100               	movlb	0	; () banked
 15023  002274  5F85               	subwf	___ftdiv@exp& (0+255),f,b
 15024                           
 15025                           ; BSR set to: 0
 15026  002276  C07A  F086         	movff	___ftdiv@f1+2,___ftdiv@sign
 15027                           
 15028                           ; BSR set to: 0
 15029  00227A  0100               	movlb	0	; () banked
 15030  00227C  517D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 15031  00227E  0100               	movlb	0	; () banked
 15032  002280  1B86               	xorwf	___ftdiv@sign& (0+255),f,b
 15033                           
 15034                           ; BSR set to: 0
 15035  002282  0E80               	movlw	128
 15036  002284  0100               	movlb	0	; () banked
 15037  002286  1786               	andwf	___ftdiv@sign& (0+255),f,b
 15038                           
 15039                           ; BSR set to: 0
 15040  002288  0100               	movlb	0	; () banked
 15041  00228A  8F79               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 15042                           
 15043                           ; BSR set to: 0
 15044  00228C  0EFF               	movlw	255
 15045  00228E  0100               	movlb	0	; () banked
 15046  002290  1778               	andwf	___ftdiv@f1& (0+255),f,b
 15047  002292  0EFF               	movlw	255
 15048  002294  0100               	movlb	0	; () banked
 15049  002296  1779               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 15050  002298  0E00               	movlw	0
 15051  00229A  0100               	movlb	0	; () banked
 15052  00229C  177A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 15053                           
 15054                           ; BSR set to: 0
 15055  00229E  0100               	movlb	0	; () banked
 15056  0022A0  8F7C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 15057                           
 15058                           ; BSR set to: 0
 15059  0022A2  0EFF               	movlw	255
 15060  0022A4  0100               	movlb	0	; () banked
 15061  0022A6  177B               	andwf	___ftdiv@f2& (0+255),f,b
 15062  0022A8  0EFF               	movlw	255
 15063  0022AA  0100               	movlb	0	; () banked
 15064  0022AC  177C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 15065  0022AE  0E00               	movlw	0
 15066  0022B0  0100               	movlb	0	; () banked
 15067  0022B2  177D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 15068                           
 15069                           ; BSR set to: 0
 15070  0022B4  0E18               	movlw	24
 15071  0022B6  0100               	movlb	0	; () banked
 15072  0022B8  6F81               	movwf	___ftdiv@cntr& (0+255),b
 15073  0022BA  D000               	goto	l6977
 15074  0022BC                     l6977:
 15075                           
 15076                           ; BSR set to: 0
 15077  0022BC  0100               	movlb	0	; () banked
 15078  0022BE  90D8               	bcf	status,0,c
 15079  0022C0  3782               	rlcf	___ftdiv@f3& (0+255),f,b
 15080  0022C2  3783               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 15081  0022C4  3784               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 15082                           
 15083                           ; BSR set to: 0
 15084  0022C6  0100               	movlb	0	; () banked
 15085  0022C8  517B               	movf	___ftdiv@f2& (0+255),w,b
 15086  0022CA  0100               	movlb	0	; () banked
 15087  0022CC  5D78               	subwf	___ftdiv@f1& (0+255),w,b
 15088  0022CE  0100               	movlb	0	; () banked
 15089  0022D0  517C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 15090  0022D2  0100               	movlb	0	; () banked
 15091  0022D4  5979               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 15092  0022D6  0100               	movlb	0	; () banked
 15093  0022D8  517D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 15094  0022DA  0100               	movlb	0	; () banked
 15095  0022DC  597A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 15096  0022DE  A0D8               	btfss	status,0,c
 15097  0022E0  D00E               	goto	l1622
 15098                           
 15099                           ; BSR set to: 0
 15100  0022E2  0100               	movlb	0	; () banked
 15101  0022E4  517B               	movf	___ftdiv@f2& (0+255),w,b
 15102  0022E6  0100               	movlb	0	; () banked
 15103  0022E8  5F78               	subwf	___ftdiv@f1& (0+255),f,b
 15104  0022EA  0100               	movlb	0	; () banked
 15105  0022EC  517C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 15106  0022EE  0100               	movlb	0	; () banked
 15107  0022F0  5B79               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 15108  0022F2  0100               	movlb	0	; () banked
 15109  0022F4  517D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 15110  0022F6  0100               	movlb	0	; () banked
 15111  0022F8  5B7A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 15112                           
 15113                           ; BSR set to: 0
 15114  0022FA  0100               	movlb	0	; () banked
 15115  0022FC  8182               	bsf	___ftdiv@f3& (0+255),0,b
 15116  0022FE                     l1622:
 15117                           
 15118                           ; BSR set to: 0
 15119  0022FE  0100               	movlb	0	; () banked
 15120  002300  90D8               	bcf	status,0,c
 15121  002302  3778               	rlcf	___ftdiv@f1& (0+255),f,b
 15122  002304  3779               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 15123  002306  377A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 15124                           
 15125                           ; BSR set to: 0
 15126  002308  0100               	movlb	0	; () banked
 15127  00230A  2F81               	decfsz	___ftdiv@cntr& (0+255),f,b
 15128  00230C  D7D7               	goto	l6977
 15129  00230E  D000               	goto	l6987
 15130  002310                     l6987:
 15131                           
 15132                           ; BSR set to: 0
 15133  002310  C082  F070         	movff	___ftdiv@f3,___ftpack@arg
 15134  002314  C083  F071         	movff	___ftdiv@f3+1,___ftpack@arg+1
 15135  002318  C084  F072         	movff	___ftdiv@f3+2,___ftpack@arg+2
 15136  00231C  C085  F073         	movff	___ftdiv@exp,___ftpack@exp
 15137  002320  C086  F074         	movff	___ftdiv@sign,___ftpack@sign
 15138  002324  EC65  F013         	call	___ftpack	;wreg free
 15139  002328  C070  F078         	movff	?___ftpack,?___ftdiv
 15140  00232C  C071  F079         	movff	?___ftpack+1,?___ftdiv+1
 15141  002330  C072  F07A         	movff	?___ftpack+2,?___ftdiv+2
 15142  002334  D000               	goto	l1619
 15143  002336                     l1619:
 15144  002336  0012               	return		;funcret
 15145  002338                     __end_of___ftdiv:
 15146                           	opt stack 0
 15147                           tblptru	equ	0xFF8
 15148                           tblptrh	equ	0xFF7
 15149                           tblptrl	equ	0xFF6
 15150                           tablat	equ	0xFF5
 15151                           prodh	equ	0xFF4
 15152                           prodl	equ	0xFF3
 15153                           intcon	equ	0xFF2
 15154                           intcon2	equ	0xFF1
 15155                           intcon3	equ	0xFF0
 15156                           postinc0	equ	0xFEE
 15157                           wreg	equ	0xFE8
 15158                           indf2	equ	0xFDF
 15159                           postinc2	equ	0xFDE
 15160                           postdec2	equ	0xFDD
 15161                           fsr2h	equ	0xFDA
 15162                           fsr2l	equ	0xFD9
 15163                           status	equ	0xFD8
 15164                           
 15165 ;; *************** function ___awtoft *****************
 15166 ;; Defined at:
 15167 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;  c               2   24[BANK0 ] int 
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;  sign            1   27[BANK0 ] unsigned char 
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  3   24[BANK0 ] float 
 15174 ;; Registers used:
 15175 ;;		wreg, status,2, status,0, cstack
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15181 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15184 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;Total ram usage:        4 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:    8
 15188 ;; This function calls:
 15189 ;;		___ftpack
 15190 ;; This function is called by:
 15191 ;;		_exp
 15192 ;;		_log
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196                           	psect	text110
 15197  003C2C                     __ptext110:
 15198                           	opt stack 0
 15199  003C2C                     ___awtoft:
 15200                           	opt stack 19
 15201                           
 15202                           ;incstack = 0
 15203  003C2C  0E00               	movlw	0
 15204  003C2E  0100               	movlb	0	; () banked
 15205  003C30  6F7B               	movwf	___awtoft@sign& (0+255),b
 15206                           
 15207                           ; BSR set to: 0
 15208  003C32  0100               	movlb	0	; () banked
 15209  003C34  AF79               	btfss	(___awtoft@c+1)& (0+255),7,b
 15210  003C36  D009               	goto	l7007
 15211                           
 15212                           ; BSR set to: 0
 15213  003C38  0100               	movlb	0	; () banked
 15214  003C3A  6D78               	negf	___awtoft@c& (0+255),b
 15215  003C3C  1F79               	comf	(___awtoft@c+1)& (0+255),f,b
 15216  003C3E  B0D8               	btfsc	status,0,c
 15217  003C40  2B79               	incf	(___awtoft@c+1)& (0+255),f,b
 15218                           
 15219                           ; BSR set to: 0
 15220  003C42  0E01               	movlw	1
 15221  003C44  0100               	movlb	0	; () banked
 15222  003C46  6F7B               	movwf	___awtoft@sign& (0+255),b
 15223  003C48  D000               	goto	l7007
 15224  003C4A                     l7007:
 15225                           
 15226                           ; BSR set to: 0
 15227  003C4A  C078  F070         	movff	___awtoft@c,___ftpack@arg
 15228  003C4E  C079  F071         	movff	___awtoft@c+1,___ftpack@arg+1
 15229  003C52  0100               	movlb	0	; () banked
 15230  003C54  6B72               	clrf	(___ftpack@arg+2)& (0+255),b
 15231  003C56  0E8E               	movlw	142
 15232  003C58  0100               	movlb	0	; () banked
 15233  003C5A  6F73               	movwf	___ftpack@exp& (0+255),b
 15234  003C5C  C07B  F074         	movff	___awtoft@sign,___ftpack@sign
 15235  003C60  EC65  F013         	call	___ftpack	;wreg free
 15236  003C64  C070  F078         	movff	?___ftpack,?___awtoft
 15237  003C68  C071  F079         	movff	?___ftpack+1,?___awtoft+1
 15238  003C6C  C072  F07A         	movff	?___ftpack+2,?___awtoft+2
 15239  003C70  D000               	goto	l1443
 15240  003C72                     l1443:
 15241  003C72  0012               	return		;funcret
 15242  003C74                     __end_of___awtoft:
 15243                           	opt stack 0
 15244                           tblptru	equ	0xFF8
 15245                           tblptrh	equ	0xFF7
 15246                           tblptrl	equ	0xFF6
 15247                           tablat	equ	0xFF5
 15248                           prodh	equ	0xFF4
 15249                           prodl	equ	0xFF3
 15250                           intcon	equ	0xFF2
 15251                           intcon2	equ	0xFF1
 15252                           intcon3	equ	0xFF0
 15253                           postinc0	equ	0xFEE
 15254                           wreg	equ	0xFE8
 15255                           indf2	equ	0xFDF
 15256                           postinc2	equ	0xFDE
 15257                           postdec2	equ	0xFDD
 15258                           fsr2h	equ	0xFDA
 15259                           fsr2l	equ	0xFD9
 15260                           status	equ	0xFD8
 15261                           
 15262 ;; *************** function ___lltoft *****************
 15263 ;; Defined at:
 15264 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 15265 ;; Parameters:    Size  Location     Type
 15266 ;;  c               4   24[BANK0 ] unsigned long 
 15267 ;; Auto vars:     Size  Location     Type
 15268 ;;  exp             1   32[BANK0 ] unsigned char 
 15269 ;; Return value:  Size  Location     Type
 15270 ;;                  3   24[BANK0 ] float 
 15271 ;; Registers used:
 15272 ;;		wreg, status,2, status,0, cstack
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15280 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15281 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15282 ;;Total ram usage:        9 bytes
 15283 ;; Hardware stack levels used:    1
 15284 ;; Hardware stack levels required when called:    8
 15285 ;; This function calls:
 15286 ;;		___ftpack
 15287 ;; This function is called by:
 15288 ;;		_pow
 15289 ;; This function uses a non-reentrant model
 15290 ;;
 15291                           
 15292                           	psect	text111
 15293  00353E                     __ptext111:
 15294                           	opt stack 0
 15295  00353E                     ___lltoft:
 15296                           	opt stack 20
 15297                           
 15298                           ;incstack = 0
 15299  00353E  0E8E               	movlw	142
 15300  003540  0100               	movlb	0	; () banked
 15301  003542  6F80               	movwf	___lltoft@exp& (0+255),b
 15302  003544  D009               	goto	l7287
 15303  003546                     l7285:
 15304                           
 15305                           ; BSR set to: 0
 15306  003546  0100               	movlb	0	; () banked
 15307  003548  90D8               	bcf	status,0,c
 15308  00354A  337B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 15309  00354C  337A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 15310  00354E  3379               	rrcf	(___lltoft@c+1)& (0+255),f,b
 15311  003550  3378               	rrcf	___lltoft@c& (0+255),f,b
 15312  003552  0100               	movlb	0	; () banked
 15313  003554  2B80               	incf	___lltoft@exp& (0+255),f,b
 15314  003556  D000               	goto	l7287
 15315  003558                     l7287:
 15316                           
 15317                           ; BSR set to: 0
 15318  003558  0E00               	movlw	0
 15319  00355A  0100               	movlb	0	; () banked
 15320  00355C  1578               	andwf	___lltoft@c& (0+255),w,b
 15321  00355E  0100               	movlb	0	; () banked
 15322  003560  6F7C               	movwf	??___lltoft& (0+255),b
 15323  003562  0E00               	movlw	0
 15324  003564  0100               	movlb	0	; () banked
 15325  003566  1579               	andwf	(___lltoft@c+1)& (0+255),w,b
 15326  003568  0100               	movlb	0	; () banked
 15327  00356A  6F7D               	movwf	(??___lltoft+1)& (0+255),b
 15328  00356C  0E00               	movlw	0
 15329  00356E  0100               	movlb	0	; () banked
 15330  003570  157A               	andwf	(___lltoft@c+2)& (0+255),w,b
 15331  003572  0100               	movlb	0	; () banked
 15332  003574  6F7E               	movwf	(??___lltoft+2)& (0+255),b
 15333  003576  0EFF               	movlw	255
 15334  003578  0100               	movlb	0	; () banked
 15335  00357A  157B               	andwf	(___lltoft@c+3)& (0+255),w,b
 15336  00357C  0100               	movlb	0	; () banked
 15337  00357E  6F7F               	movwf	(??___lltoft+3)& (0+255),b
 15338  003580  0100               	movlb	0	; () banked
 15339  003582  517C               	movf	??___lltoft& (0+255),w,b
 15340  003584  0100               	movlb	0	; () banked
 15341  003586  117D               	iorwf	(??___lltoft+1)& (0+255),w,b
 15342  003588  0100               	movlb	0	; () banked
 15343  00358A  117E               	iorwf	(??___lltoft+2)& (0+255),w,b
 15344  00358C  0100               	movlb	0	; () banked
 15345  00358E  117F               	iorwf	(??___lltoft+3)& (0+255),w,b
 15346  003590  A4D8               	btfss	status,2,c
 15347  003592  D7D9               	goto	l7285
 15348                           
 15349                           ; BSR set to: 0
 15350                           
 15351                           ; BSR set to: 0
 15352  003594  C078  F070         	movff	___lltoft@c,___ftpack@arg
 15353  003598  C079  F071         	movff	___lltoft@c+1,___ftpack@arg+1
 15354  00359C  C07A  F072         	movff	___lltoft@c+2,___ftpack@arg+2
 15355  0035A0  C080  F073         	movff	___lltoft@exp,___ftpack@exp
 15356  0035A4  0E00               	movlw	0
 15357  0035A6  0100               	movlb	0	; () banked
 15358  0035A8  6F74               	movwf	___ftpack@sign& (0+255),b
 15359  0035AA  EC65  F013         	call	___ftpack	;wreg free
 15360  0035AE  C070  F078         	movff	?___ftpack,?___lltoft
 15361  0035B2  C071  F079         	movff	?___ftpack+1,?___lltoft+1
 15362  0035B6  C072  F07A         	movff	?___ftpack+2,?___lltoft+2
 15363  0035BA  D000               	goto	l1724
 15364  0035BC                     l1724:
 15365  0035BC  0012               	return		;funcret
 15366  0035BE                     __end_of___lltoft:
 15367                           	opt stack 0
 15368                           tblptru	equ	0xFF8
 15369                           tblptrh	equ	0xFF7
 15370                           tblptrl	equ	0xFF6
 15371                           tablat	equ	0xFF5
 15372                           prodh	equ	0xFF4
 15373                           prodl	equ	0xFF3
 15374                           intcon	equ	0xFF2
 15375                           intcon2	equ	0xFF1
 15376                           intcon3	equ	0xFF0
 15377                           postinc0	equ	0xFEE
 15378                           wreg	equ	0xFE8
 15379                           indf2	equ	0xFDF
 15380                           postinc2	equ	0xFDE
 15381                           postdec2	equ	0xFDD
 15382                           fsr2h	equ	0xFDA
 15383                           fsr2l	equ	0xFD9
 15384                           status	equ	0xFD8
 15385                           
 15386 ;; *************** function ___lbtoft *****************
 15387 ;; Defined at:
 15388 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 15389 ;; Parameters:    Size  Location     Type
 15390 ;;  c               1    wreg     unsigned char 
 15391 ;; Auto vars:     Size  Location     Type
 15392 ;;  c               1   27[BANK0 ] unsigned char 
 15393 ;; Return value:  Size  Location     Type
 15394 ;;                  3   24[BANK0 ] float 
 15395 ;; Registers used:
 15396 ;;		wreg, status,2, status,0, cstack
 15397 ;; Tracked objects:
 15398 ;;		On entry : 0/0
 15399 ;;		On exit  : 0/0
 15400 ;;		Unchanged: 0/0
 15401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15402 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15405 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15406 ;;Total ram usage:        4 bytes
 15407 ;; Hardware stack levels used:    1
 15408 ;; Hardware stack levels required when called:    8
 15409 ;; This function calls:
 15410 ;;		___ftpack
 15411 ;; This function is called by:
 15412 ;;		_CalculateSensorSums
 15413 ;; This function uses a non-reentrant model
 15414 ;;
 15415                           
 15416                           	psect	text112
 15417  0040FA                     __ptext112:
 15418                           	opt stack 0
 15419  0040FA                     ___lbtoft:
 15420                           	opt stack 21
 15421                           
 15422                           ;incstack = 0
 15423                           ;___lbtoft@c stored from wreg
 15424  0040FA  0100               	movlb	0	; () banked
 15425  0040FC  6F7B               	movwf	___lbtoft@c& (0+255),b
 15426                           
 15427                           ; BSR set to: 0
 15428  0040FE  0100               	movlb	0	; () banked
 15429  004100  517B               	movf	___lbtoft@c& (0+255),w,b
 15430  004102  0100               	movlb	0	; () banked
 15431  004104  6F70               	movwf	___ftpack@arg& (0+255),b
 15432  004106  6B71               	clrf	(___ftpack@arg+1)& (0+255),b
 15433  004108  6B72               	clrf	(___ftpack@arg+2)& (0+255),b
 15434  00410A  0E8E               	movlw	142
 15435  00410C  0100               	movlb	0	; () banked
 15436  00410E  6F73               	movwf	___ftpack@exp& (0+255),b
 15437  004110  0E00               	movlw	0
 15438  004112  0100               	movlb	0	; () banked
 15439  004114  6F74               	movwf	___ftpack@sign& (0+255),b
 15440  004116  EC65  F013         	call	___ftpack	;wreg free
 15441  00411A  C070  F078         	movff	?___ftpack,?___lbtoft
 15442  00411E  C071  F079         	movff	?___ftpack+1,?___lbtoft+1
 15443  004122  C072  F07A         	movff	?___ftpack+2,?___lbtoft+2
 15444  004126  D000               	goto	l1691
 15445  004128                     l1691:
 15446  004128  0012               	return		;funcret
 15447  00412A                     __end_of___lbtoft:
 15448                           	opt stack 0
 15449                           tblptru	equ	0xFF8
 15450                           tblptrh	equ	0xFF7
 15451                           tblptrl	equ	0xFF6
 15452                           tablat	equ	0xFF5
 15453                           prodh	equ	0xFF4
 15454                           prodl	equ	0xFF3
 15455                           intcon	equ	0xFF2
 15456                           intcon2	equ	0xFF1
 15457                           intcon3	equ	0xFF0
 15458                           postinc0	equ	0xFEE
 15459                           wreg	equ	0xFE8
 15460                           indf2	equ	0xFDF
 15461                           postinc2	equ	0xFDE
 15462                           postdec2	equ	0xFDD
 15463                           fsr2h	equ	0xFDA
 15464                           fsr2l	equ	0xFD9
 15465                           status	equ	0xFD8
 15466                           
 15467 ;; *************** function ___ftpack *****************
 15468 ;; Defined at:
 15469 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 15470 ;; Parameters:    Size  Location     Type
 15471 ;;  arg             3   16[BANK0 ] unsigned um
 15472 ;;  exp             1   19[BANK0 ] unsigned char 
 15473 ;;  sign            1   20[BANK0 ] unsigned char 
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;		None
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  3   16[BANK0 ] float 
 15478 ;; Registers used:
 15479 ;;		wreg, status,2, status,0
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15485 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15488 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15489 ;;Total ram usage:        8 bytes
 15490 ;; Hardware stack levels used:    1
 15491 ;; Hardware stack levels required when called:    7
 15492 ;; This function calls:
 15493 ;;		Nothing
 15494 ;; This function is called by:
 15495 ;;		___altoft
 15496 ;;		___awtoft
 15497 ;;		___ftadd
 15498 ;;		___ftdiv
 15499 ;;		___ftmul
 15500 ;;		___lbtoft
 15501 ;;		___lltoft
 15502 ;;		___lwtoft
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           	psect	text113
 15507  0026CA                     __ptext113:
 15508                           	opt stack 0
 15509  0026CA                     ___ftpack:
 15510                           	opt stack 18
 15511                           
 15512                           ;incstack = 0
 15513  0026CA  0100               	movlb	0	; () banked
 15514  0026CC  5173               	movf	___ftpack@exp& (0+255),w,b
 15515  0026CE  0100               	movlb	0	; () banked
 15516  0026D0  B4D8               	btfsc	status,2,c
 15517  0026D2  D008               	goto	l6447
 15518                           
 15519                           ; BSR set to: 0
 15520  0026D4  0100               	movlb	0	; () banked
 15521  0026D6  5170               	movf	___ftpack@arg& (0+255),w,b
 15522  0026D8  0100               	movlb	0	; () banked
 15523  0026DA  1171               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15524  0026DC  0100               	movlb	0	; () banked
 15525  0026DE  1172               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15526  0026E0  A4D8               	btfss	status,2,c
 15527  0026E2  D013               	goto	l6453
 15528  0026E4                     l6447:
 15529                           
 15530                           ; BSR set to: 0
 15531  0026E4  0E00               	movlw	0
 15532  0026E6  0100               	movlb	0	; () banked
 15533  0026E8  6F70               	movwf	?___ftpack& (0+255),b
 15534  0026EA  0E00               	movlw	0
 15535  0026EC  0100               	movlb	0	; () banked
 15536  0026EE  6F71               	movwf	(?___ftpack+1)& (0+255),b
 15537  0026F0  0E00               	movlw	0
 15538  0026F2  0100               	movlb	0	; () banked
 15539  0026F4  6F72               	movwf	(?___ftpack+2)& (0+255),b
 15540                           
 15541                           ; BSR set to: 0
 15542  0026F6  D078               	goto	l1547
 15543                           
 15544                           ; BSR set to: 0
 15545  0026F8  D008               	goto	l6453
 15546  0026FA                     l6451:
 15547                           
 15548                           ; BSR set to: 0
 15549  0026FA  0100               	movlb	0	; () banked
 15550  0026FC  2B73               	incf	___ftpack@exp& (0+255),f,b
 15551  0026FE  0100               	movlb	0	; () banked
 15552  002700  90D8               	bcf	status,0,c
 15553  002702  3372               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15554  002704  3371               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15555  002706  3370               	rrcf	___ftpack@arg& (0+255),f,b
 15556  002708  D000               	goto	l6453
 15557  00270A                     l6453:
 15558                           
 15559                           ; BSR set to: 0
 15560  00270A  0E00               	movlw	0
 15561  00270C  0100               	movlb	0	; () banked
 15562  00270E  1570               	andwf	___ftpack@arg& (0+255),w,b
 15563  002710  0100               	movlb	0	; () banked
 15564  002712  6F75               	movwf	??___ftpack& (0+255),b
 15565  002714  0E00               	movlw	0
 15566  002716  0100               	movlb	0	; () banked
 15567  002718  1571               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15568  00271A  0100               	movlb	0	; () banked
 15569  00271C  6F76               	movwf	(??___ftpack+1)& (0+255),b
 15570  00271E  0EFE               	movlw	254
 15571  002720  0100               	movlb	0	; () banked
 15572  002722  1572               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15573  002724  0100               	movlb	0	; () banked
 15574  002726  6F77               	movwf	(??___ftpack+2)& (0+255),b
 15575  002728  0100               	movlb	0	; () banked
 15576  00272A  5175               	movf	??___ftpack& (0+255),w,b
 15577  00272C  0100               	movlb	0	; () banked
 15578  00272E  1176               	iorwf	(??___ftpack+1)& (0+255),w,b
 15579  002730  0100               	movlb	0	; () banked
 15580  002732  1177               	iorwf	(??___ftpack+2)& (0+255),w,b
 15581  002734  B4D8               	btfsc	status,2,c
 15582  002736  D013               	goto	l6459
 15583  002738  D7E0               	goto	l6451
 15584                           
 15585                           ; BSR set to: 0
 15586  00273A  D011               	goto	l6459
 15587  00273C                     l6455:
 15588                           
 15589                           ; BSR set to: 0
 15590  00273C  0100               	movlb	0	; () banked
 15591  00273E  2B73               	incf	___ftpack@exp& (0+255),f,b
 15592                           
 15593                           ; BSR set to: 0
 15594  002740  0E01               	movlw	1
 15595  002742  0100               	movlb	0	; () banked
 15596  002744  2770               	addwf	___ftpack@arg& (0+255),f,b
 15597  002746  0E00               	movlw	0
 15598  002748  0100               	movlb	0	; () banked
 15599  00274A  2371               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15600  00274C  0E00               	movlw	0
 15601  00274E  0100               	movlb	0	; () banked
 15602  002750  2372               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15603  002752  0100               	movlb	0	; () banked
 15604  002754  90D8               	bcf	status,0,c
 15605  002756  3372               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15606  002758  3371               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15607  00275A  3370               	rrcf	___ftpack@arg& (0+255),f,b
 15608  00275C  D000               	goto	l6459
 15609  00275E                     l6459:
 15610                           
 15611                           ; BSR set to: 0
 15612  00275E  0E00               	movlw	0
 15613  002760  0100               	movlb	0	; () banked
 15614  002762  1570               	andwf	___ftpack@arg& (0+255),w,b
 15615  002764  0100               	movlb	0	; () banked
 15616  002766  6F75               	movwf	??___ftpack& (0+255),b
 15617  002768  0E00               	movlw	0
 15618  00276A  0100               	movlb	0	; () banked
 15619  00276C  1571               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15620  00276E  0100               	movlb	0	; () banked
 15621  002770  6F76               	movwf	(??___ftpack+1)& (0+255),b
 15622  002772  0EFF               	movlw	255
 15623  002774  0100               	movlb	0	; () banked
 15624  002776  1572               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15625  002778  0100               	movlb	0	; () banked
 15626  00277A  6F77               	movwf	(??___ftpack+2)& (0+255),b
 15627  00277C  0100               	movlb	0	; () banked
 15628  00277E  5175               	movf	??___ftpack& (0+255),w,b
 15629  002780  0100               	movlb	0	; () banked
 15630  002782  1176               	iorwf	(??___ftpack+1)& (0+255),w,b
 15631  002784  0100               	movlb	0	; () banked
 15632  002786  1177               	iorwf	(??___ftpack+2)& (0+255),w,b
 15633  002788  B4D8               	btfsc	status,2,c
 15634  00278A  D00A               	goto	l6463
 15635  00278C  D7D7               	goto	l6455
 15636                           
 15637                           ; BSR set to: 0
 15638  00278E  D008               	goto	l6463
 15639  002790                     l6461:
 15640                           
 15641                           ; BSR set to: 0
 15642  002790  0100               	movlb	0	; () banked
 15643  002792  0773               	decf	___ftpack@exp& (0+255),f,b
 15644  002794  0100               	movlb	0	; () banked
 15645  002796  90D8               	bcf	status,0,c
 15646  002798  3770               	rlcf	___ftpack@arg& (0+255),f,b
 15647  00279A  3771               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15648  00279C  3772               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15649  00279E  D000               	goto	l6463
 15650  0027A0                     l6463:
 15651                           
 15652                           ; BSR set to: 0
 15653  0027A0  0100               	movlb	0	; () banked
 15654  0027A2  BF71               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15655  0027A4  D005               	goto	l1558
 15656                           
 15657                           ; BSR set to: 0
 15658  0027A6  0E02               	movlw	2
 15659  0027A8  0100               	movlb	0	; () banked
 15660  0027AA  6173               	cpfslt	___ftpack@exp& (0+255),b
 15661  0027AC  D7F1               	goto	l6461
 15662  0027AE  D000               	goto	l1558
 15663  0027B0                     l1558:
 15664                           
 15665                           ; BSR set to: 0
 15666  0027B0  0100               	movlb	0	; () banked
 15667  0027B2  B173               	btfsc	___ftpack@exp& (0+255),0,b
 15668  0027B4  D003               	goto	l6469
 15669                           
 15670                           ; BSR set to: 0
 15671  0027B6  0100               	movlb	0	; () banked
 15672  0027B8  9F71               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15673  0027BA  D000               	goto	l6469
 15674  0027BC                     l6469:
 15675                           
 15676                           ; BSR set to: 0
 15677  0027BC  0100               	movlb	0	; () banked
 15678  0027BE  90D8               	bcf	status,0,c
 15679  0027C0  3373               	rrcf	___ftpack@exp& (0+255),f,b
 15680  0027C2  0100               	movlb	0	; () banked
 15681  0027C4  5173               	movf	___ftpack@exp& (0+255),w,b
 15682  0027C6  0100               	movlb	0	; () banked
 15683  0027C8  1372               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15684                           
 15685                           ; BSR set to: 0
 15686  0027CA  0100               	movlb	0	; () banked
 15687  0027CC  5174               	movf	___ftpack@sign& (0+255),w,b
 15688  0027CE  0100               	movlb	0	; () banked
 15689  0027D0  B4D8               	btfsc	status,2,c
 15690  0027D2  D003               	goto	l6475
 15691                           
 15692                           ; BSR set to: 0
 15693  0027D4  0100               	movlb	0	; () banked
 15694  0027D6  8F72               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15695  0027D8  D000               	goto	l6475
 15696  0027DA                     l6475:
 15697                           
 15698                           ; BSR set to: 0
 15699  0027DA  C070  F070         	movff	___ftpack@arg,?___ftpack
 15700  0027DE  C071  F071         	movff	___ftpack@arg+1,?___ftpack+1
 15701  0027E2  C072  F072         	movff	___ftpack@arg+2,?___ftpack+2
 15702  0027E6  D000               	goto	l1547
 15703  0027E8                     l1547:
 15704                           
 15705                           ; BSR set to: 0
 15706  0027E8  0012               	return		;funcret
 15707  0027EA                     __end_of___ftpack:
 15708                           	opt stack 0
 15709                           tblptru	equ	0xFF8
 15710                           tblptrh	equ	0xFF7
 15711                           tblptrl	equ	0xFF6
 15712                           tablat	equ	0xFF5
 15713                           prodh	equ	0xFF4
 15714                           prodl	equ	0xFF3
 15715                           intcon	equ	0xFF2
 15716                           intcon2	equ	0xFF1
 15717                           intcon3	equ	0xFF0
 15718                           postinc0	equ	0xFEE
 15719                           wreg	equ	0xFE8
 15720                           indf2	equ	0xFDF
 15721                           postinc2	equ	0xFDE
 15722                           postdec2	equ	0xFDD
 15723                           fsr2h	equ	0xFDA
 15724                           fsr2l	equ	0xFD9
 15725                           status	equ	0xFD8
 15726                           
 15727 ;; *************** function _CalculateSensorError *****************
 15728 ;; Defined at:
 15729 ;;		line 404 in file "FastBuggy17_Main_Code_TUNING.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;  sum             2   16[BANK0 ] PTR const unsigned char 
 15732 ;;		 -> main@sensor_sum(1), 
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;		None
 15735 ;; Return value:  Size  Location     Type
 15736 ;;                  2   16[BANK0 ] int 
 15737 ;; Registers used:
 15738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15739 ;; Tracked objects:
 15740 ;;		On entry : 0/0
 15741 ;;		On exit  : 0/0
 15742 ;;		Unchanged: 0/0
 15743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15748 ;;Total ram usage:        2 bytes
 15749 ;; Hardware stack levels used:    1
 15750 ;; Hardware stack levels required when called:    7
 15751 ;; This function calls:
 15752 ;;		Nothing
 15753 ;; This function is called by:
 15754 ;;		_main
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text114
 15759  002F7C                     __ptext114:
 15760                           	opt stack 0
 15761  002F7C                     _CalculateSensorError:
 15762                           	opt stack 23
 15763                           
 15764                           ;FastBuggy17_Main_Code_TUNING.c: 406: switch(*sum) {
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;incstack = 0
 15768  002F7C  D033               	goto	l7961
 15769  002F7E                     l7923:
 15770                           
 15771                           ;FastBuggy17_Main_Code_TUNING.c: 408: return(8);
 15772  002F7E  0E00               	movlw	0
 15773  002F80  0100               	movlb	0	; () banked
 15774  002F82  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15775  002F84  0E08               	movlw	8
 15776  002F86  D053               	goto	L24
 15777                           
 15778                           ; BSR set to: 0
 15779  002F88  D054               	goto	l796
 15780  002F8A                     l7927:
 15781                           
 15782                           ;FastBuggy17_Main_Code_TUNING.c: 410: return(6);
 15783  002F8A  0E00               	movlw	0
 15784  002F8C  0100               	movlb	0	; () banked
 15785  002F8E  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15786  002F90  0E06               	movlw	6
 15787  002F92  D04D               	goto	L24
 15788                           
 15789                           ; BSR set to: 0
 15790  002F94  D04E               	goto	l796
 15791  002F96                     l7931:
 15792                           
 15793                           ;FastBuggy17_Main_Code_TUNING.c: 412: return(4);
 15794  002F96  0E00               	movlw	0
 15795  002F98  0100               	movlb	0	; () banked
 15796  002F9A  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15797  002F9C  0E04               	movlw	4
 15798  002F9E  D047               	goto	L24
 15799                           
 15800                           ; BSR set to: 0
 15801  002FA0  D048               	goto	l796
 15802  002FA2                     l7935:
 15803                           
 15804                           ;FastBuggy17_Main_Code_TUNING.c: 414: return(2);
 15805  002FA2  0E00               	movlw	0
 15806  002FA4  0100               	movlb	0	; () banked
 15807  002FA6  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15808  002FA8  0E02               	movlw	2
 15809  002FAA  D041               	goto	L24
 15810                           
 15811                           ; BSR set to: 0
 15812  002FAC  D042               	goto	l796
 15813                           
 15814                           ; BSR set to: 0
 15815                           
 15816                           ;FastBuggy17_Main_Code_TUNING.c: 415: case(4) :
 15817  002FAE  D03B               	goto	l7963
 15818                           
 15819                           ; BSR set to: 0
 15820                           
 15821                           ;FastBuggy17_Main_Code_TUNING.c: 416: return(0);
 15822  002FB0  D040               	goto	l796
 15823  002FB2                     l7943:
 15824                           
 15825                           ;FastBuggy17_Main_Code_TUNING.c: 418: return(-2);
 15826  002FB2  0EFF               	movlw	255
 15827  002FB4  0100               	movlb	0	; () banked
 15828  002FB6  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15829  002FB8  0EFE               	movlw	254
 15830  002FBA  D039               	goto	L24
 15831                           
 15832                           ; BSR set to: 0
 15833  002FBC  D03A               	goto	l796
 15834  002FBE                     l7947:
 15835                           
 15836                           ;FastBuggy17_Main_Code_TUNING.c: 420: return(-4);
 15837  002FBE  0EFF               	movlw	255
 15838  002FC0  0100               	movlb	0	; () banked
 15839  002FC2  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15840  002FC4  0EFC               	movlw	252
 15841  002FC6  D033               	goto	L24
 15842                           
 15843                           ; BSR set to: 0
 15844  002FC8  D034               	goto	l796
 15845  002FCA                     l7951:
 15846                           
 15847                           ;FastBuggy17_Main_Code_TUNING.c: 422: return(-6);
 15848  002FCA  0EFF               	movlw	255
 15849  002FCC  0100               	movlb	0	; () banked
 15850  002FCE  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15851  002FD0  0EFA               	movlw	250
 15852  002FD2  D02D               	goto	L24
 15853                           
 15854                           ; BSR set to: 0
 15855  002FD4  D02E               	goto	l796
 15856  002FD6                     l7955:
 15857                           
 15858                           ;FastBuggy17_Main_Code_TUNING.c: 424: return(-8);
 15859  002FD6  0EFF               	movlw	255
 15860  002FD8  0100               	movlb	0	; () banked
 15861  002FDA  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15862  002FDC  0EF8               	movlw	248
 15863  002FDE  D027               	goto	L24
 15864                           
 15865                           ; BSR set to: 0
 15866  002FE0  D028               	goto	l796
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;FastBuggy17_Main_Code_TUNING.c: 427: }
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;FastBuggy17_Main_Code_TUNING.c: 426: break;
 15873                           
 15874                           ;FastBuggy17_Main_Code_TUNING.c: 425: default :
 15875  002FE2  D021               	goto	l7963
 15876  002FE4                     l7961:
 15877  002FE4  C070  FFD9         	movff	CalculateSensorError@sum,fsr2l
 15878  002FE8  C071  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
 15879  002FEC  50DF               	movf	indf2,w,c
 15880                           
 15881                           ; Switch size 1, requested type "space"
 15882                           ; Number of cases is 9, Range of values is 1 to 24
 15883                           ; switch strategies available:
 15884                           ; Name         Instructions Cycles
 15885                           ; simple_byte           28    15 (average)
 15886                           ;	Chosen strategy is simple_byte
 15887  002FEE  0A01               	xorlw	1	; case 1
 15888  002FF0  B4D8               	btfsc	status,2,c
 15889  002FF2  D7F1               	goto	l7955
 15890  002FF4  0A03               	xorlw	3	; case 2
 15891  002FF6  B4D8               	btfsc	status,2,c
 15892  002FF8  D7E2               	goto	l7947
 15893  002FFA  0A01               	xorlw	1	; case 3
 15894  002FFC  B4D8               	btfsc	status,2,c
 15895  002FFE  D7E5               	goto	l7951
 15896  003000  0A07               	xorlw	7	; case 4
 15897  003002  B4D8               	btfsc	status,2,c
 15898  003004  D010               	goto	l7963
 15899  003006  0A02               	xorlw	2	; case 6
 15900  003008  B4D8               	btfsc	status,2,c
 15901  00300A  D7D3               	goto	l7943
 15902  00300C  0A0E               	xorlw	14	; case 8
 15903  00300E  B4D8               	btfsc	status,2,c
 15904  003010  D7C2               	goto	l7931
 15905  003012  0A04               	xorlw	4	; case 12
 15906  003014  B4D8               	btfsc	status,2,c
 15907  003016  D7C5               	goto	l7935
 15908  003018  0A1C               	xorlw	28	; case 16
 15909  00301A  B4D8               	btfsc	status,2,c
 15910  00301C  D7B0               	goto	l7923
 15911  00301E  0A08               	xorlw	8	; case 24
 15912  003020  B4D8               	btfsc	status,2,c
 15913  003022  D7B3               	goto	l7927
 15914  003024  D000               	goto	l7963
 15915  003026                     l7963:
 15916                           
 15917                           ;FastBuggy17_Main_Code_TUNING.c: 429: return(0);
 15918  003026  0E00               	movlw	0
 15919  003028  0100               	movlb	0	; () banked
 15920  00302A  6F71               	movwf	(?_CalculateSensorError+1)& (0+255),b
 15921  00302C  0E00               	movlw	0
 15922  00302E                     L24:
 15923  00302E  6F70               	movwf	?_CalculateSensorError& (0+255),b
 15924  003030  D000               	goto	l796
 15925  003032                     l796:
 15926                           
 15927                           ; BSR set to: 0
 15928  003032  0012               	return		;funcret
 15929  003034                     __end_of_CalculateSensorError:
 15930                           	opt stack 0
 15931                           tblptru	equ	0xFF8
 15932                           tblptrh	equ	0xFF7
 15933                           tblptrl	equ	0xFF6
 15934                           tablat	equ	0xFF5
 15935                           prodh	equ	0xFF4
 15936                           prodl	equ	0xFF3
 15937                           intcon	equ	0xFF2
 15938                           intcon2	equ	0xFF1
 15939                           intcon3	equ	0xFF0
 15940                           postinc0	equ	0xFEE
 15941                           wreg	equ	0xFE8
 15942                           indf2	equ	0xFDF
 15943                           postinc2	equ	0xFDE
 15944                           postdec2	equ	0xFDD
 15945                           fsr2h	equ	0xFDA
 15946                           fsr2l	equ	0xFD9
 15947                           status	equ	0xFD8
 15948                           
 15949 ;; *************** function _BusyDistanceAcq *****************
 15950 ;; Defined at:
 15951 ;;		line 61 in file "Ultrasound.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;		None
 15954 ;; Auto vars:     Size  Location     Type
 15955 ;;		None
 15956 ;; Return value:  Size  Location     Type
 15957 ;;                  1    wreg      unsigned char 
 15958 ;; Registers used:
 15959 ;;		wreg, status,2
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/0
 15962 ;;		On exit  : 0/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15969 ;;Total ram usage:        0 bytes
 15970 ;; Hardware stack levels used:    1
 15971 ;; Hardware stack levels required when called:    7
 15972 ;; This function calls:
 15973 ;;		Nothing
 15974 ;; This function is called by:
 15975 ;;		_main
 15976 ;; This function uses a non-reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text115
 15980  004534                     __ptext115:
 15981                           	opt stack 0
 15982  004534                     _BusyDistanceAcq:
 15983                           	opt stack 23
 15984                           
 15985                           ;Ultrasound.c: 63: return (!echo_acq_done);
 15986                           
 15987                           ; BSR set to: 0
 15988                           ;incstack = 0
 15989  004534  501A               	movf	_echo_acq_done,w,c
 15990  004536  A4D8               	btfss	status,2,c
 15991  004538  D002               	goto	u7760
 15992  00453A  0E01               	movlw	1
 15993  00453C  D002               	goto	l36
 15994  00453E                     u7760:
 15995  00453E  0E00               	movlw	0
 15996  004540  D000               	goto	l36
 15997  004542                     l36:
 15998  004542  0012               	return		;funcret
 15999  004544                     __end_of_BusyDistanceAcq:
 16000                           	opt stack 0
 16001                           tblptru	equ	0xFF8
 16002                           tblptrh	equ	0xFF7
 16003                           tblptrl	equ	0xFF6
 16004                           tablat	equ	0xFF5
 16005                           prodh	equ	0xFF4
 16006                           prodl	equ	0xFF3
 16007                           intcon	equ	0xFF2
 16008                           intcon2	equ	0xFF1
 16009                           intcon3	equ	0xFF0
 16010                           postinc0	equ	0xFEE
 16011                           wreg	equ	0xFE8
 16012                           indf2	equ	0xFDF
 16013                           postinc2	equ	0xFDE
 16014                           postdec2	equ	0xFDD
 16015                           fsr2h	equ	0xFDA
 16016                           fsr2l	equ	0xFD9
 16017                           status	equ	0xFD8
 16018                           
 16019 ;; *************** function _isrLP *****************
 16020 ;; Defined at:
 16021 ;;		line 748 in file "FastBuggy17_Main_Code_TUNING.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;		None
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;		None
 16026 ;; Return value:  Size  Location     Type
 16027 ;;		None               void
 16028 ;; Registers used:
 16029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16030 ;; Tracked objects:
 16031 ;;		On entry : 0/0
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16037 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16038 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;Total ram usage:       17 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    6
 16042 ;; This function calls:
 16043 ;;		_WirelessTx_ISR
 16044 ;;		i1_ConvertADC
 16045 ;;		i1_ReadADC
 16046 ;;		i1_SetADCChannel
 16047 ;; This function is called by:
 16048 ;;		Interrupt level 1
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           	psect	intcodelo
 16053  000018                     __pintcodelo:
 16054                           	opt stack 0
 16055  000018                     _isrLP:
 16056                           	opt stack 18
 16057                           
 16058                           ;incstack = 0
 16059  000018  CFD8 F033          	movff	status,??_isrLP
 16060  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 16061  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 16062  000024  CFFA F036          	movff	pclath,??_isrLP+3
 16063  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 16064  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 16065  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 16066  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 16067  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 16068  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 16069  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 16070  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 16071  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 16072  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 16073  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 16074  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 16075  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 16076                           
 16077                           ;FastBuggy17_Main_Code_TUNING.c: 763: if (PIR1bits.ADIF == 1) {
 16078  00005C  AC9E               	btfss	3998,6,c	;volatile
 16079  00005E  D01D               	goto	i1l929
 16080                           
 16081                           ;FastBuggy17_Main_Code_TUNING.c: 764: PIR1bits.ADIF = 0;
 16082  000060  9C9E               	bcf	3998,6,c	;volatile
 16083                           
 16084                           ;FastBuggy17_Main_Code_TUNING.c: 765: if (sensor_acq_index < 5) {
 16085  000062  0E05               	movlw	5
 16086  000064  6021               	cpfslt	_sensor_acq_index,c	;volatile
 16087  000066  D015               	goto	i1l6119
 16088                           
 16089                           ;FastBuggy17_Main_Code_TUNING.c: 766: *(sensor_readings_raw + sensor_acq_index) = ReadAD
      +                          C();
 16090  000068  ECA2  F022         	call	i1_ReadADC	;wreg free
 16091  00006C  5021               	movf	_sensor_acq_index,w,c	;volatile
 16092  00006E  0D02               	mullw	2
 16093  000070  0ECB               	movlw	low _sensor_readings_raw
 16094  000072  24F3               	addwf	prodl,w,c
 16095  000074  6ED9               	movwf	fsr2l,c
 16096  000076  0E00               	movlw	high _sensor_readings_raw
 16097  000078  20F4               	addwfc	prodh,w,c
 16098  00007A  6EDA               	movwf	fsr2h,c
 16099  00007C  C02B  FFDE         	movff	?i1_ReadADC,postinc2
 16100  000080  C02C  FFDD         	movff	?i1_ReadADC+1,postdec2
 16101                           
 16102                           ;FastBuggy17_Main_Code_TUNING.c: 767: sensor_acq_index++;
 16103  000084  2A21               	incf	_sensor_acq_index,f,c	;volatile
 16104                           
 16105                           ;FastBuggy17_Main_Code_TUNING.c: 768: SetADCChannel(sensor_acq_index);
 16106  000086  5021               	movf	_sensor_acq_index,w,c	;volatile
 16107  000088  ECE2  F016         	call	i1_SetADCChannel
 16108                           
 16109                           ;FastBuggy17_Main_Code_TUNING.c: 769: ConvertADC();
 16110  00008C  EC0F  F023         	call	i1_ConvertADC	;wreg free
 16111                           
 16112                           ;FastBuggy17_Main_Code_TUNING.c: 770: } else {
 16113  000090  D00A               	goto	i1l934
 16114  000092                     i1l6119:
 16115                           
 16116                           ;FastBuggy17_Main_Code_TUNING.c: 771: sensor_acq_done = 1;
 16117  000092  0E01               	movlw	1
 16118  000094  6E20               	movwf	_sensor_acq_done,c	;volatile
 16119                           
 16120                           ;FastBuggy17_Main_Code_TUNING.c: 772: PIE1bits.ADIE = 0;
 16121  000096  9C9D               	bcf	3997,6,c	;volatile
 16122                           
 16123                           ;FastBuggy17_Main_Code_TUNING.c: 773: }
 16124                           ;FastBuggy17_Main_Code_TUNING.c: 774: }
 16125  000098  D006               	goto	i1l934
 16126  00009A                     i1l929:
 16127                           
 16128                           ;FastBuggy17_Main_Code_TUNING.c: 776: else if(PIR1bits.TX1IF == 1) {
 16129  00009A  A89E               	btfss	3998,4,c	;volatile
 16130  00009C  D004               	goto	i1l934
 16131                           
 16132                           ;FastBuggy17_Main_Code_TUNING.c: 777: PIR1bits.TX1IF = 0;
 16133  00009E  989E               	bcf	3998,4,c	;volatile
 16134                           
 16135                           ;FastBuggy17_Main_Code_TUNING.c: 778: WirelessTx_ISR();
 16136  0000A0  EC74  F021         	call	_WirelessTx_ISR	;wreg free
 16137  0000A4  D000               	goto	i1l934
 16138  0000A6                     i1l934:
 16139  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 16140  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 16141  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 16142  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 16143  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 16144  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 16145  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 16146  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 16147  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 16148  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 16149  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 16150  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 16151  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 16152  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 16153  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 16154  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 16155  0000E6  C033  FFD8         	movff	??_isrLP,status
 16156  0000EA  0010               	retfie	
 16157  0000EC                     __end_of_isrLP:
 16158                           	opt stack 0
 16159                           pclatu	equ	0xFFB
 16160                           pclath	equ	0xFFA
 16161                           tblptru	equ	0xFF8
 16162                           tblptrh	equ	0xFF7
 16163                           tblptrl	equ	0xFF6
 16164                           tablat	equ	0xFF5
 16165                           prodh	equ	0xFF4
 16166                           prodl	equ	0xFF3
 16167                           intcon	equ	0xFF2
 16168                           intcon2	equ	0xFF1
 16169                           intcon3	equ	0xFF0
 16170                           postinc0	equ	0xFEE
 16171                           fsr0h	equ	0xFEA
 16172                           fsr0l	equ	0xFE9
 16173                           wreg	equ	0xFE8
 16174                           fsr1h	equ	0xFE2
 16175                           fsr1l	equ	0xFE1
 16176                           bsr	equ	0xFE0
 16177                           indf2	equ	0xFDF
 16178                           postinc2	equ	0xFDE
 16179                           postdec2	equ	0xFDD
 16180                           fsr2h	equ	0xFDA
 16181                           fsr2l	equ	0xFD9
 16182                           status	equ	0xFD8
 16183                           
 16184 ;; *************** function i1_SetADCChannel *****************
 16185 ;; Defined at:
 16186 ;;		line 268 in file "FastBuggy17_Main_Code_TUNING.c"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;  channel         1    wreg     unsigned char 
 16189 ;; Auto vars:     Size  Location     Type
 16190 ;;  channel         1    2[COMRAM] unsigned char 
 16191 ;; Return value:  Size  Location     Type
 16192 ;;		None               void
 16193 ;; Registers used:
 16194 ;;		wreg, status,2, status,0, cstack
 16195 ;; Tracked objects:
 16196 ;;		On entry : 0/0
 16197 ;;		On exit  : 0/0
 16198 ;;		Unchanged: 0/0
 16199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16204 ;;Total ram usage:        1 bytes
 16205 ;; Hardware stack levels used:    1
 16206 ;; Hardware stack levels required when called:    4
 16207 ;; This function calls:
 16208 ;;		i1_SetChanADC
 16209 ;; This function is called by:
 16210 ;;		_isrLP
 16211 ;; This function uses a non-reentrant model
 16212 ;;
 16213                           
 16214                           	psect	text117
 16215  002DC4                     __ptext117:
 16216                           	opt stack 0
 16217  002DC4                     i1_SetADCChannel:
 16218                           	opt stack 19
 16219                           
 16220                           ;incstack = 0
 16221                           ;i1SetADCChannel@channel stored from wreg
 16222  002DC4  6E2D               	movwf	i1SetADCChannel@channel,c
 16223                           
 16224                           ;FastBuggy17_Main_Code_TUNING.c: 270: switch (channel) {
 16225  002DC6  D040               	goto	i1l5937
 16226  002DC8                     i1l5903:
 16227                           
 16228                           ;FastBuggy17_Main_Code_TUNING.c: 272: SetChanADC(0b10000111);
 16229  002DC8  0E87               	movlw	135
 16230  002DCA  EC10  F022         	call	i1_SetChanADC
 16231                           
 16232                           ;FastBuggy17_Main_Code_TUNING.c: 273: break;
 16233  002DCE  D06E               	goto	i1l761
 16234  002DD0                     i1l5905:
 16235                           
 16236                           ;FastBuggy17_Main_Code_TUNING.c: 275: SetChanADC(0b10001111);
 16237  002DD0  0E8F               	movlw	143
 16238  002DD2  EC10  F022         	call	i1_SetChanADC
 16239                           
 16240                           ;FastBuggy17_Main_Code_TUNING.c: 276: break;
 16241  002DD6  D06A               	goto	i1l761
 16242  002DD8                     i1l5907:
 16243                           
 16244                           ;FastBuggy17_Main_Code_TUNING.c: 278: SetChanADC(0b10010111);
 16245  002DD8  0E97               	movlw	151
 16246  002DDA  EC10  F022         	call	i1_SetChanADC
 16247                           
 16248                           ;FastBuggy17_Main_Code_TUNING.c: 279: break;
 16249  002DDE  D066               	goto	i1l761
 16250  002DE0                     i1l5909:
 16251                           
 16252                           ;FastBuggy17_Main_Code_TUNING.c: 281: SetChanADC(0b10011111);
 16253  002DE0  0E9F               	movlw	159
 16254  002DE2  EC10  F022         	call	i1_SetChanADC
 16255                           
 16256                           ;FastBuggy17_Main_Code_TUNING.c: 282: break;
 16257  002DE6  D062               	goto	i1l761
 16258  002DE8                     i1l5911:
 16259                           
 16260                           ;FastBuggy17_Main_Code_TUNING.c: 284: SetChanADC(0b10100111);
 16261  002DE8  0EA7               	movlw	167
 16262  002DEA  EC10  F022         	call	i1_SetChanADC
 16263                           
 16264                           ;FastBuggy17_Main_Code_TUNING.c: 285: break;
 16265  002DEE  D05E               	goto	i1l761
 16266  002DF0                     i1l5913:
 16267                           
 16268                           ;FastBuggy17_Main_Code_TUNING.c: 287: SetChanADC(0b10101111);
 16269  002DF0  0EAF               	movlw	175
 16270  002DF2  EC10  F022         	call	i1_SetChanADC
 16271                           
 16272                           ;FastBuggy17_Main_Code_TUNING.c: 288: break;
 16273  002DF6  D05A               	goto	i1l761
 16274  002DF8                     i1l5915:
 16275                           
 16276                           ;FastBuggy17_Main_Code_TUNING.c: 290: SetChanADC(0b10110111);
 16277  002DF8  0EB7               	movlw	183
 16278  002DFA  EC10  F022         	call	i1_SetChanADC
 16279                           
 16280                           ;FastBuggy17_Main_Code_TUNING.c: 291: break;
 16281  002DFE  D056               	goto	i1l761
 16282  002E00                     i1l5917:
 16283                           
 16284                           ;FastBuggy17_Main_Code_TUNING.c: 293: SetChanADC(0b10111111);
 16285  002E00  0EBF               	movlw	191
 16286  002E02  EC10  F022         	call	i1_SetChanADC
 16287                           
 16288                           ;FastBuggy17_Main_Code_TUNING.c: 294: break;
 16289  002E06  D052               	goto	i1l761
 16290  002E08                     i1l5919:
 16291                           
 16292                           ;FastBuggy17_Main_Code_TUNING.c: 296: SetChanADC(0b11000111);
 16293  002E08  0EC7               	movlw	199
 16294  002E0A  EC10  F022         	call	i1_SetChanADC
 16295                           
 16296                           ;FastBuggy17_Main_Code_TUNING.c: 297: break;
 16297  002E0E  D04E               	goto	i1l761
 16298  002E10                     i1l5921:
 16299                           
 16300                           ;FastBuggy17_Main_Code_TUNING.c: 299: SetChanADC(0b11001111);
 16301  002E10  0ECF               	movlw	207
 16302  002E12  EC10  F022         	call	i1_SetChanADC
 16303                           
 16304                           ;FastBuggy17_Main_Code_TUNING.c: 300: break;
 16305  002E16  D04A               	goto	i1l761
 16306  002E18                     i1l5923:
 16307                           
 16308                           ;FastBuggy17_Main_Code_TUNING.c: 302: SetChanADC(0b11010111);
 16309  002E18  0ED7               	movlw	215
 16310  002E1A  EC10  F022         	call	i1_SetChanADC
 16311                           
 16312                           ;FastBuggy17_Main_Code_TUNING.c: 303: break;
 16313  002E1E  D046               	goto	i1l761
 16314  002E20                     i1l5925:
 16315                           
 16316                           ;FastBuggy17_Main_Code_TUNING.c: 305: SetChanADC(0b11011111);
 16317  002E20  0EDF               	movlw	223
 16318  002E22  EC10  F022         	call	i1_SetChanADC
 16319                           
 16320                           ;FastBuggy17_Main_Code_TUNING.c: 306: break;
 16321  002E26  D042               	goto	i1l761
 16322  002E28                     i1l5927:
 16323                           
 16324                           ;FastBuggy17_Main_Code_TUNING.c: 308: SetChanADC(0b11100111);
 16325  002E28  0EE7               	movlw	231
 16326  002E2A  EC10  F022         	call	i1_SetChanADC
 16327                           
 16328                           ;FastBuggy17_Main_Code_TUNING.c: 309: break;
 16329  002E2E  D03E               	goto	i1l761
 16330  002E30                     i1l5929:
 16331                           
 16332                           ;FastBuggy17_Main_Code_TUNING.c: 311: SetChanADC(0b11101111);
 16333  002E30  0EEF               	movlw	239
 16334  002E32  EC10  F022         	call	i1_SetChanADC
 16335                           
 16336                           ;FastBuggy17_Main_Code_TUNING.c: 312: break;
 16337  002E36  D03A               	goto	i1l761
 16338  002E38                     i1l5931:
 16339                           
 16340                           ;FastBuggy17_Main_Code_TUNING.c: 314: SetChanADC(0b11110111);
 16341  002E38  0EF7               	movlw	247
 16342  002E3A  EC10  F022         	call	i1_SetChanADC
 16343                           
 16344                           ;FastBuggy17_Main_Code_TUNING.c: 315: break;
 16345  002E3E  D036               	goto	i1l761
 16346  002E40                     i1l5933:
 16347                           
 16348                           ;FastBuggy17_Main_Code_TUNING.c: 317: SetChanADC(0b11111111);
 16349  002E40  0EFF               	movlw	255
 16350  002E42  EC10  F022         	call	i1_SetChanADC
 16351                           
 16352                           ;FastBuggy17_Main_Code_TUNING.c: 321: }
 16353                           
 16354                           ;FastBuggy17_Main_Code_TUNING.c: 320: break;
 16355                           
 16356                           ;FastBuggy17_Main_Code_TUNING.c: 319: default:
 16357                           
 16358                           ;FastBuggy17_Main_Code_TUNING.c: 318: break;
 16359  002E46  D032               	goto	i1l761
 16360  002E48                     i1l5937:
 16361  002E48  502D               	movf	i1SetADCChannel@channel,w,c
 16362                           
 16363                           ; Switch size 1, requested type "space"
 16364                           ; Number of cases is 16, Range of values is 0 to 15
 16365                           ; switch strategies available:
 16366                           ; Name         Instructions Cycles
 16367                           ; simple_byte           49    25 (average)
 16368                           ;	Chosen strategy is simple_byte
 16369  002E4A  0A00               	xorlw	0	; case 0
 16370  002E4C  B4D8               	btfsc	status,2,c
 16371  002E4E  D7BC               	goto	i1l5903
 16372  002E50  0A01               	xorlw	1	; case 1
 16373  002E52  B4D8               	btfsc	status,2,c
 16374  002E54  D7BD               	goto	i1l5905
 16375  002E56  0A03               	xorlw	3	; case 2
 16376  002E58  B4D8               	btfsc	status,2,c
 16377  002E5A  D7BE               	goto	i1l5907
 16378  002E5C  0A01               	xorlw	1	; case 3
 16379  002E5E  B4D8               	btfsc	status,2,c
 16380  002E60  D7BF               	goto	i1l5909
 16381  002E62  0A07               	xorlw	7	; case 4
 16382  002E64  B4D8               	btfsc	status,2,c
 16383  002E66  D7C0               	goto	i1l5911
 16384  002E68  0A01               	xorlw	1	; case 5
 16385  002E6A  B4D8               	btfsc	status,2,c
 16386  002E6C  D7C1               	goto	i1l5913
 16387  002E6E  0A03               	xorlw	3	; case 6
 16388  002E70  B4D8               	btfsc	status,2,c
 16389  002E72  D7C2               	goto	i1l5915
 16390  002E74  0A01               	xorlw	1	; case 7
 16391  002E76  B4D8               	btfsc	status,2,c
 16392  002E78  D7C3               	goto	i1l5917
 16393  002E7A  0A0F               	xorlw	15	; case 8
 16394  002E7C  B4D8               	btfsc	status,2,c
 16395  002E7E  D7C4               	goto	i1l5919
 16396  002E80  0A01               	xorlw	1	; case 9
 16397  002E82  B4D8               	btfsc	status,2,c
 16398  002E84  D7C5               	goto	i1l5921
 16399  002E86  0A03               	xorlw	3	; case 10
 16400  002E88  B4D8               	btfsc	status,2,c
 16401  002E8A  D7C6               	goto	i1l5923
 16402  002E8C  0A01               	xorlw	1	; case 11
 16403  002E8E  B4D8               	btfsc	status,2,c
 16404  002E90  D7C7               	goto	i1l5925
 16405  002E92  0A07               	xorlw	7	; case 12
 16406  002E94  B4D8               	btfsc	status,2,c
 16407  002E96  D7C8               	goto	i1l5927
 16408  002E98  0A01               	xorlw	1	; case 13
 16409  002E9A  B4D8               	btfsc	status,2,c
 16410  002E9C  D7C9               	goto	i1l5929
 16411  002E9E  0A03               	xorlw	3	; case 14
 16412  002EA0  B4D8               	btfsc	status,2,c
 16413  002EA2  D7CA               	goto	i1l5931
 16414  002EA4  0A01               	xorlw	1	; case 15
 16415  002EA6  B4D8               	btfsc	status,2,c
 16416  002EA8  D7CB               	goto	i1l5933
 16417  002EAA  D000               	goto	i1l761
 16418  002EAC                     i1l761:
 16419  002EAC  0012               	return		;funcret
 16420  002EAE                     __end_ofi1_SetADCChannel:
 16421                           	opt stack 0
 16422                           pclatu	equ	0xFFB
 16423                           pclath	equ	0xFFA
 16424                           tblptru	equ	0xFF8
 16425                           tblptrh	equ	0xFF7
 16426                           tblptrl	equ	0xFF6
 16427                           tablat	equ	0xFF5
 16428                           prodh	equ	0xFF4
 16429                           prodl	equ	0xFF3
 16430                           intcon	equ	0xFF2
 16431                           intcon2	equ	0xFF1
 16432                           intcon3	equ	0xFF0
 16433                           postinc0	equ	0xFEE
 16434                           fsr0h	equ	0xFEA
 16435                           fsr0l	equ	0xFE9
 16436                           wreg	equ	0xFE8
 16437                           fsr1h	equ	0xFE2
 16438                           fsr1l	equ	0xFE1
 16439                           bsr	equ	0xFE0
 16440                           indf2	equ	0xFDF
 16441                           postinc2	equ	0xFDE
 16442                           postdec2	equ	0xFDD
 16443                           fsr2h	equ	0xFDA
 16444                           fsr2l	equ	0xFD9
 16445                           status	equ	0xFD8
 16446                           
 16447 ;; *************** function i1_SetChanADC *****************
 16448 ;; Defined at:
 16449 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;  channel         1    wreg     unsigned char 
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;  channel         1    1[COMRAM] unsigned char 
 16454 ;; Return value:  Size  Location     Type
 16455 ;;		None               void
 16456 ;; Registers used:
 16457 ;;		wreg, status,2, status,0
 16458 ;; Tracked objects:
 16459 ;;		On entry : 0/0
 16460 ;;		On exit  : 0/0
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16467 ;;Total ram usage:        2 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; Hardware stack levels required when called:    3
 16470 ;; This function calls:
 16471 ;;		Nothing
 16472 ;; This function is called by:
 16473 ;;		i1_SetADCChannel
 16474 ;; This function uses a non-reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text118
 16478  004420                     __ptext118:
 16479                           	opt stack 0
 16480  004420                     i1_SetChanADC:
 16481                           	opt stack 19
 16482                           
 16483                           ;incstack = 0
 16484                           ;i1SetChanADC@channel stored from wreg
 16485  004420  6E2C               	movwf	i1SetChanADC@channel,c
 16486  004422  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 16487  004426  0EC3               	movlw	195
 16488  004428  162B               	andwf	??i1_SetChanADC,f,c
 16489  00442A  90D8               	bcf	status,0,c
 16490  00442C  302C               	rrcf	i1SetChanADC@channel,w,c
 16491  00442E  0B3C               	andlw	60
 16492  004430  102B               	iorwf	??i1_SetChanADC,w,c
 16493  004432  6EC2               	movwf	4034,c	;volatile
 16494  004434  0012               	return		;funcret
 16495  004436                     __end_ofi1_SetChanADC:
 16496                           	opt stack 0
 16497                           pclatu	equ	0xFFB
 16498                           pclath	equ	0xFFA
 16499                           tblptru	equ	0xFF8
 16500                           tblptrh	equ	0xFF7
 16501                           tblptrl	equ	0xFF6
 16502                           tablat	equ	0xFF5
 16503                           prodh	equ	0xFF4
 16504                           prodl	equ	0xFF3
 16505                           intcon	equ	0xFF2
 16506                           intcon2	equ	0xFF1
 16507                           intcon3	equ	0xFF0
 16508                           postinc0	equ	0xFEE
 16509                           fsr0h	equ	0xFEA
 16510                           fsr0l	equ	0xFE9
 16511                           wreg	equ	0xFE8
 16512                           fsr1h	equ	0xFE2
 16513                           fsr1l	equ	0xFE1
 16514                           bsr	equ	0xFE0
 16515                           indf2	equ	0xFDF
 16516                           postinc2	equ	0xFDE
 16517                           postdec2	equ	0xFDD
 16518                           fsr2h	equ	0xFDA
 16519                           fsr2l	equ	0xFD9
 16520                           status	equ	0xFD8
 16521                           
 16522 ;; *************** function i1_ReadADC *****************
 16523 ;; Defined at:
 16524 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 16525 ;; Parameters:    Size  Location     Type
 16526 ;;		None
 16527 ;; Auto vars:     Size  Location     Type
 16528 ;;		None
 16529 ;; Return value:  Size  Location     Type
 16530 ;;                  2    0[COMRAM] int 
 16531 ;; Registers used:
 16532 ;;		wreg, status,2
 16533 ;; Tracked objects:
 16534 ;;		On entry : 0/0
 16535 ;;		On exit  : 0/0
 16536 ;;		Unchanged: 0/0
 16537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16541 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16542 ;;Total ram usage:        4 bytes
 16543 ;; Hardware stack levels used:    1
 16544 ;; Hardware stack levels required when called:    3
 16545 ;; This function calls:
 16546 ;;		Nothing
 16547 ;; This function is called by:
 16548 ;;		_isrLP
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552                           	psect	text119
 16553  004544                     __ptext119:
 16554                           	opt stack 0
 16555  004544                     i1_ReadADC:
 16556                           	opt stack 20
 16557                           
 16558                           ;incstack = 0
 16559  004544  50C4               	movf	4036,w,c	;volatile
 16560  004546  6E2D               	movwf	??i1_ReadADC& (0+255),c
 16561  004548  50C3               	movf	4035,w,c	;volatile
 16562  00454A  6E2B               	movwf	?i1_ReadADC,c
 16563  00454C  C02D  F02C         	movff	??i1_ReadADC,?i1_ReadADC+1
 16564  004550  D000               	goto	i1l1040
 16565  004552                     i1l1040:
 16566  004552  0012               	return		;funcret
 16567  004554                     __end_ofi1_ReadADC:
 16568                           	opt stack 0
 16569                           pclatu	equ	0xFFB
 16570                           pclath	equ	0xFFA
 16571                           tblptru	equ	0xFF8
 16572                           tblptrh	equ	0xFF7
 16573                           tblptrl	equ	0xFF6
 16574                           tablat	equ	0xFF5
 16575                           prodh	equ	0xFF4
 16576                           prodl	equ	0xFF3
 16577                           intcon	equ	0xFF2
 16578                           intcon2	equ	0xFF1
 16579                           intcon3	equ	0xFF0
 16580                           postinc0	equ	0xFEE
 16581                           fsr0h	equ	0xFEA
 16582                           fsr0l	equ	0xFE9
 16583                           wreg	equ	0xFE8
 16584                           fsr1h	equ	0xFE2
 16585                           fsr1l	equ	0xFE1
 16586                           bsr	equ	0xFE0
 16587                           indf2	equ	0xFDF
 16588                           postinc2	equ	0xFDE
 16589                           postdec2	equ	0xFDD
 16590                           fsr2h	equ	0xFDA
 16591                           fsr2l	equ	0xFD9
 16592                           status	equ	0xFD8
 16593                           
 16594 ;; *************** function i1_ConvertADC *****************
 16595 ;; Defined at:
 16596 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;		None
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;		None
 16601 ;; Return value:  Size  Location     Type
 16602 ;;		None               void
 16603 ;; Registers used:
 16604 ;;		None
 16605 ;; Tracked objects:
 16606 ;;		On entry : 0/0
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16614 ;;Total ram usage:        0 bytes
 16615 ;; Hardware stack levels used:    1
 16616 ;; Hardware stack levels required when called:    3
 16617 ;; This function calls:
 16618 ;;		Nothing
 16619 ;; This function is called by:
 16620 ;;		_isrLP
 16621 ;; This function uses a non-reentrant model
 16622 ;;
 16623                           
 16624                           	psect	text120
 16625  00461E                     __ptext120:
 16626                           	opt stack 0
 16627  00461E                     i1_ConvertADC:
 16628                           	opt stack 20
 16629                           
 16630                           ;incstack = 0
 16631  00461E  82C2               	bsf	4034,1,c	;volatile
 16632  004620  0012               	return		;funcret
 16633  004622                     __end_ofi1_ConvertADC:
 16634                           	opt stack 0
 16635                           pclatu	equ	0xFFB
 16636                           pclath	equ	0xFFA
 16637                           tblptru	equ	0xFF8
 16638                           tblptrh	equ	0xFF7
 16639                           tblptrl	equ	0xFF6
 16640                           tablat	equ	0xFF5
 16641                           prodh	equ	0xFF4
 16642                           prodl	equ	0xFF3
 16643                           intcon	equ	0xFF2
 16644                           intcon2	equ	0xFF1
 16645                           intcon3	equ	0xFF0
 16646                           postinc0	equ	0xFEE
 16647                           fsr0h	equ	0xFEA
 16648                           fsr0l	equ	0xFE9
 16649                           wreg	equ	0xFE8
 16650                           fsr1h	equ	0xFE2
 16651                           fsr1l	equ	0xFE1
 16652                           bsr	equ	0xFE0
 16653                           indf2	equ	0xFDF
 16654                           postinc2	equ	0xFDE
 16655                           postdec2	equ	0xFDD
 16656                           fsr2h	equ	0xFDA
 16657                           fsr2l	equ	0xFD9
 16658                           status	equ	0xFD8
 16659                           
 16660 ;; *************** function _WirelessTx_ISR *****************
 16661 ;; Defined at:
 16662 ;;		line 61 in file "Wireless.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;		None
 16665 ;; Auto vars:     Size  Location     Type
 16666 ;;		None
 16667 ;; Return value:  Size  Location     Type
 16668 ;;		None               void
 16669 ;; Registers used:
 16670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16671 ;; Tracked objects:
 16672 ;;		On entry : 0/0
 16673 ;;		On exit  : 0/0
 16674 ;;		Unchanged: 0/0
 16675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16680 ;;Total ram usage:        0 bytes
 16681 ;; Hardware stack levels used:    1
 16682 ;; Hardware stack levels required when called:    5
 16683 ;; This function calls:
 16684 ;;		_GetCharTxBuf
 16685 ;;		_Write1USART
 16686 ;; This function is called by:
 16687 ;;		_isrLP
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text121
 16692  0042E8                     __ptext121:
 16693                           	opt stack 0
 16694  0042E8                     _WirelessTx_ISR:
 16695                           	opt stack 18
 16696                           
 16697                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 16698                           
 16699                           ;incstack = 0
 16700  0042E8  ECAF  F01F         	call	_GetCharTxBuf	;wreg free
 16701  0042EC  6E17               	movwf	_TxCharacter,c	;volatile
 16702                           
 16703                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 16704  0042EE  0E0A               	movlw	10
 16705  0042F0  1817               	xorwf	_TxCharacter,w,c	;volatile
 16706  0042F2  A4D8               	btfss	status,2,c
 16707  0042F4  D007               	goto	i1l5659
 16708                           
 16709                           ;Wireless.c: 64: Write1USART(TxCharacter);
 16710  0042F6  5017               	movf	_TxCharacter,w,c	;volatile
 16711  0042F8  EC1B  F022         	call	_Write1USART
 16712                           
 16713                           ;Wireless.c: 65: Tx_complete = 1;
 16714  0042FC  0E01               	movlw	1
 16715  0042FE  6E18               	movwf	_Tx_complete,c
 16716                           
 16717                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 16718  004300  989D               	bcf	3997,4,c	;volatile
 16719                           
 16720                           ;Wireless.c: 67: }
 16721  004302  D004               	goto	i1l295
 16722  004304                     i1l5659:
 16723                           
 16724                           ;Wireless.c: 68: else {
 16725                           ;Wireless.c: 69: Write1USART(TxCharacter);
 16726  004304  5017               	movf	_TxCharacter,w,c	;volatile
 16727  004306  EC1B  F022         	call	_Write1USART
 16728  00430A  D000               	goto	i1l295
 16729  00430C                     i1l295:
 16730  00430C  0012               	return		;funcret
 16731  00430E                     __end_of_WirelessTx_ISR:
 16732                           	opt stack 0
 16733                           pclatu	equ	0xFFB
 16734                           pclath	equ	0xFFA
 16735                           tblptru	equ	0xFF8
 16736                           tblptrh	equ	0xFF7
 16737                           tblptrl	equ	0xFF6
 16738                           tablat	equ	0xFF5
 16739                           prodh	equ	0xFF4
 16740                           prodl	equ	0xFF3
 16741                           intcon	equ	0xFF2
 16742                           intcon2	equ	0xFF1
 16743                           intcon3	equ	0xFF0
 16744                           postinc0	equ	0xFEE
 16745                           fsr0h	equ	0xFEA
 16746                           fsr0l	equ	0xFE9
 16747                           wreg	equ	0xFE8
 16748                           fsr1h	equ	0xFE2
 16749                           fsr1l	equ	0xFE1
 16750                           bsr	equ	0xFE0
 16751                           indf2	equ	0xFDF
 16752                           postinc2	equ	0xFDE
 16753                           postdec2	equ	0xFDD
 16754                           fsr2h	equ	0xFDA
 16755                           fsr2l	equ	0xFD9
 16756                           status	equ	0xFD8
 16757                           
 16758 ;; *************** function _Write1USART *****************
 16759 ;; Defined at:
 16760 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;  data            1    wreg     unsigned char 
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;  data            1    0[COMRAM] unsigned char 
 16765 ;; Return value:  Size  Location     Type
 16766 ;;		None               void
 16767 ;; Registers used:
 16768 ;;		wreg
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16778 ;;Total ram usage:        1 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; Hardware stack levels required when called:    3
 16781 ;; This function calls:
 16782 ;;		Nothing
 16783 ;; This function is called by:
 16784 ;;		_WirelessTx_ISR
 16785 ;; This function uses a non-reentrant model
 16786 ;;
 16787                           
 16788                           	psect	text122
 16789  004436                     __ptext122:
 16790                           	opt stack 0
 16791  004436                     _Write1USART:
 16792                           	opt stack 19
 16793                           
 16794                           ;incstack = 0
 16795                           ;Write1USART@data stored from wreg
 16796  004436  6E2B               	movwf	Write1USART@data,c
 16797  004438  ACAC               	btfss	4012,6,c	;volatile
 16798  00443A  D005               	goto	i1l5219
 16799  00443C  90AC               	bcf	4012,0,c	;volatile
 16800  00443E  A219               	btfss	_USART1_Status,1,c
 16801  004440  D002               	goto	i1l5219
 16802  004442  80AC               	bsf	4012,0,c	;volatile
 16803  004444  D000               	goto	i1l5219
 16804  004446                     i1l5219:
 16805  004446  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 16806  00444A  0012               	return		;funcret
 16807  00444C                     __end_of_Write1USART:
 16808                           	opt stack 0
 16809                           pclatu	equ	0xFFB
 16810                           pclath	equ	0xFFA
 16811                           tblptru	equ	0xFF8
 16812                           tblptrh	equ	0xFF7
 16813                           tblptrl	equ	0xFF6
 16814                           tablat	equ	0xFF5
 16815                           prodh	equ	0xFF4
 16816                           prodl	equ	0xFF3
 16817                           intcon	equ	0xFF2
 16818                           intcon2	equ	0xFF1
 16819                           intcon3	equ	0xFF0
 16820                           postinc0	equ	0xFEE
 16821                           fsr0h	equ	0xFEA
 16822                           fsr0l	equ	0xFE9
 16823                           wreg	equ	0xFE8
 16824                           fsr1h	equ	0xFE2
 16825                           fsr1l	equ	0xFE1
 16826                           bsr	equ	0xFE0
 16827                           indf2	equ	0xFDF
 16828                           postinc2	equ	0xFDE
 16829                           postdec2	equ	0xFDD
 16830                           fsr2h	equ	0xFDA
 16831                           fsr2l	equ	0xFD9
 16832                           status	equ	0xFD8
 16833                           
 16834 ;; *************** function _GetCharTxBuf *****************
 16835 ;; Defined at:
 16836 ;;		line 15 in file "Wireless.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;		None
 16839 ;; Auto vars:     Size  Location     Type
 16840 ;;  ch              1    7[COMRAM] unsigned char 
 16841 ;; Return value:  Size  Location     Type
 16842 ;;                  1    wreg      unsigned char 
 16843 ;; Registers used:
 16844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16845 ;; Tracked objects:
 16846 ;;		On entry : 0/0
 16847 ;;		On exit  : 0/0
 16848 ;;		Unchanged: 0/0
 16849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16854 ;;Total ram usage:        2 bytes
 16855 ;; Hardware stack levels used:    1
 16856 ;; Hardware stack levels required when called:    4
 16857 ;; This function calls:
 16858 ;;		i1___awmod
 16859 ;; This function is called by:
 16860 ;;		_WirelessTx_ISR
 16861 ;; This function uses a non-reentrant model
 16862 ;;
 16863                           
 16864                           	psect	text123
 16865  003F5E                     __ptext123:
 16866                           	opt stack 0
 16867  003F5E                     _GetCharTxBuf:
 16868                           	opt stack 18
 16869                           
 16870                           ;Wireless.c: 16: unsigned char ch;
 16871                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 16872                           
 16873                           ;incstack = 0
 16874  003F5E  501C               	movf	_get_Tx_index,w,c
 16875  003F60  0D01               	mullw	1
 16876  003F62  0E19               	movlw	low _Tx_buffer
 16877  003F64  24F3               	addwf	prodl,w,c
 16878  003F66  6ED9               	movwf	fsr2l,c
 16879  003F68  0E01               	movlw	high _Tx_buffer
 16880  003F6A  20F4               	addwfc	prodh,w,c
 16881  003F6C  6EDA               	movwf	fsr2h,c
 16882  003F6E  50DF               	movf	indf2,w,c
 16883  003F70  6E32               	movwf	GetCharTxBuf@ch,c
 16884                           
 16885                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 16886  003F72  C01C  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 16887  003F76  0E01               	movlw	1
 16888  003F78  2631               	addwf	??_GetCharTxBuf,f,c
 16889  003F7A  5031               	movf	??_GetCharTxBuf,w,c
 16890  003F7C  6E2B               	movwf	i1___awmod@dividend,c
 16891  003F7E  6A2C               	clrf	i1___awmod@dividend+1,c
 16892  003F80  0E00               	movlw	0
 16893  003F82  6E2E               	movwf	i1___awmod@divisor+1,c
 16894  003F84  0E19               	movlw	25
 16895  003F86  6E2D               	movwf	i1___awmod@divisor,c
 16896  003F88  EC5E  F01A         	call	i1___awmod	;wreg free
 16897  003F8C  502B               	movf	?i1___awmod,w,c
 16898  003F8E  6E1C               	movwf	_get_Tx_index,c
 16899                           
 16900                           ;Wireless.c: 21: return(ch);
 16901  003F90  5032               	movf	GetCharTxBuf@ch,w,c
 16902  003F92  D000               	goto	i1l272
 16903  003F94                     i1l272:
 16904  003F94  0012               	return		;funcret
 16905  003F96                     __end_of_GetCharTxBuf:
 16906                           	opt stack 0
 16907                           pclatu	equ	0xFFB
 16908                           pclath	equ	0xFFA
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           intcon	equ	0xFF2
 16916                           intcon2	equ	0xFF1
 16917                           intcon3	equ	0xFF0
 16918                           postinc0	equ	0xFEE
 16919                           fsr0h	equ	0xFEA
 16920                           fsr0l	equ	0xFE9
 16921                           wreg	equ	0xFE8
 16922                           fsr1h	equ	0xFE2
 16923                           fsr1l	equ	0xFE1
 16924                           bsr	equ	0xFE0
 16925                           indf2	equ	0xFDF
 16926                           postinc2	equ	0xFDE
 16927                           postdec2	equ	0xFDD
 16928                           fsr2h	equ	0xFDA
 16929                           fsr2l	equ	0xFD9
 16930                           status	equ	0xFD8
 16931                           
 16932 ;; *************** function i1___awmod *****************
 16933 ;; Defined at:
 16934 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;  dividend        2    0[COMRAM] int 
 16937 ;;  divisor         2    2[COMRAM] int 
 16938 ;; Auto vars:     Size  Location     Type
 16939 ;;  __awmod         1    5[COMRAM] unsigned char 
 16940 ;;  __awmod         1    4[COMRAM] unsigned char 
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  2    0[COMRAM] int 
 16943 ;; Registers used:
 16944 ;;		wreg, status,2, status,0
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/0
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16953 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16954 ;;Total ram usage:        6 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:    3
 16957 ;; This function calls:
 16958 ;;		Nothing
 16959 ;; This function is called by:
 16960 ;;		_GetCharTxBuf
 16961 ;; This function uses a non-reentrant model
 16962 ;;
 16963                           
 16964                           	psect	text124
 16965  0034BC                     __ptext124:
 16966                           	opt stack 0
 16967  0034BC                     i1___awmod:
 16968                           	opt stack 18
 16969                           
 16970                           ;incstack = 0
 16971  0034BC  0E00               	movlw	0
 16972  0034BE  6E30               	movwf	i1___awmod@sign,c
 16973  0034C0  AE2C               	btfss	i1___awmod@dividend+1,7,c
 16974  0034C2  D007               	goto	i1l5155
 16975  0034C4  6C2B               	negf	i1___awmod@dividend,c
 16976  0034C6  1E2C               	comf	i1___awmod@dividend+1,f,c
 16977  0034C8  B0D8               	btfsc	status,0,c
 16978  0034CA  2A2C               	incf	i1___awmod@dividend+1,f,c
 16979  0034CC  0E01               	movlw	1
 16980  0034CE  6E30               	movwf	i1___awmod@sign,c
 16981  0034D0  D000               	goto	i1l5155
 16982  0034D2                     i1l5155:
 16983  0034D2  AE2E               	btfss	i1___awmod@divisor+1,7,c
 16984  0034D4  D005               	goto	i1l5159
 16985  0034D6  6C2D               	negf	i1___awmod@divisor,c
 16986  0034D8  1E2E               	comf	i1___awmod@divisor+1,f,c
 16987  0034DA  B0D8               	btfsc	status,0,c
 16988  0034DC  2A2E               	incf	i1___awmod@divisor+1,f,c
 16989  0034DE  D000               	goto	i1l5159
 16990  0034E0                     i1l5159:
 16991  0034E0  502D               	movf	i1___awmod@divisor,w,c
 16992  0034E2  102E               	iorwf	i1___awmod@divisor+1,w,c
 16993  0034E4  B4D8               	btfsc	status,2,c
 16994  0034E6  D01D               	goto	i1l5175
 16995  0034E8  0E01               	movlw	1
 16996  0034EA  6E2F               	movwf	i1___awmod@counter,c
 16997  0034EC  D005               	goto	i1l5165
 16998  0034EE                     i1l5163:
 16999  0034EE  90D8               	bcf	status,0,c
 17000  0034F0  362D               	rlcf	i1___awmod@divisor,f,c
 17001  0034F2  362E               	rlcf	i1___awmod@divisor+1,f,c
 17002  0034F4  2A2F               	incf	i1___awmod@counter,f,c
 17003  0034F6  D000               	goto	i1l5165
 17004  0034F8                     i1l5165:
 17005  0034F8  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 17006  0034FA  D002               	goto	i1l5167
 17007  0034FC  D7F8               	goto	i1l5163
 17008  0034FE  D000               	goto	i1l5167
 17009  003500                     i1l5167:
 17010  003500  502D               	movf	i1___awmod@divisor,w,c
 17011  003502  5C2B               	subwf	i1___awmod@dividend,w,c
 17012  003504  502E               	movf	i1___awmod@divisor+1,w,c
 17013  003506  582C               	subwfb	i1___awmod@dividend+1,w,c
 17014  003508  A0D8               	btfss	status,0,c
 17015  00350A  D005               	goto	i1l5171
 17016  00350C  502D               	movf	i1___awmod@divisor,w,c
 17017  00350E  5E2B               	subwf	i1___awmod@dividend,f,c
 17018  003510  502E               	movf	i1___awmod@divisor+1,w,c
 17019  003512  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 17020  003514  D000               	goto	i1l5171
 17021  003516                     i1l5171:
 17022  003516  90D8               	bcf	status,0,c
 17023  003518  322E               	rrcf	i1___awmod@divisor+1,f,c
 17024  00351A  322D               	rrcf	i1___awmod@divisor,f,c
 17025  00351C  2E2F               	decfsz	i1___awmod@counter,f,c
 17026  00351E  D7F0               	goto	i1l5167
 17027  003520  D000               	goto	i1l5175
 17028  003522                     i1l5175:
 17029  003522  5030               	movf	i1___awmod@sign,w,c
 17030  003524  B4D8               	btfsc	status,2,c
 17031  003526  D005               	goto	i1l5179
 17032  003528  6C2B               	negf	i1___awmod@dividend,c
 17033  00352A  1E2C               	comf	i1___awmod@dividend+1,f,c
 17034  00352C  B0D8               	btfsc	status,0,c
 17035  00352E  2A2C               	incf	i1___awmod@dividend+1,f,c
 17036  003530  D000               	goto	i1l5179
 17037  003532                     i1l5179:
 17038  003532  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 17039  003536  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 17040  00353A  D000               	goto	i1l1431
 17041  00353C                     i1l1431:
 17042  00353C  0012               	return		;funcret
 17043  00353E                     __end_ofi1___awmod:
 17044                           	opt stack 0
 17045                           pclatu	equ	0xFFB
 17046                           pclath	equ	0xFFA
 17047                           tblptru	equ	0xFF8
 17048                           tblptrh	equ	0xFF7
 17049                           tblptrl	equ	0xFF6
 17050                           tablat	equ	0xFF5
 17051                           prodh	equ	0xFF4
 17052                           prodl	equ	0xFF3
 17053                           intcon	equ	0xFF2
 17054                           intcon2	equ	0xFF1
 17055                           intcon3	equ	0xFF0
 17056                           postinc0	equ	0xFEE
 17057                           fsr0h	equ	0xFEA
 17058                           fsr0l	equ	0xFE9
 17059                           wreg	equ	0xFE8
 17060                           fsr1h	equ	0xFE2
 17061                           fsr1l	equ	0xFE1
 17062                           bsr	equ	0xFE0
 17063                           indf2	equ	0xFDF
 17064                           postinc2	equ	0xFDE
 17065                           postdec2	equ	0xFDD
 17066                           fsr2h	equ	0xFDA
 17067                           fsr2l	equ	0xFD9
 17068                           status	equ	0xFD8
 17069                           
 17070 ;; *************** function _isrHP *****************
 17071 ;; Defined at:
 17072 ;;		line 726 in file "FastBuggy17_Main_Code_TUNING.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;		None
 17077 ;; Return value:  Size  Location     Type
 17078 ;;		None               void
 17079 ;; Registers used:
 17080 ;;		wreg, status,2, status,0, cstack
 17081 ;; Tracked objects:
 17082 ;;		On entry : 0/0
 17083 ;;		On exit  : 0/0
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17088 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17089 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17090 ;;Total ram usage:       14 bytes
 17091 ;; Hardware stack levels used:    1
 17092 ;; Hardware stack levels required when called:    2
 17093 ;; This function calls:
 17094 ;;		_MillisecondTimerISR
 17095 ;;		_UltrasoundISR
 17096 ;; This function is called by:
 17097 ;;		Interrupt level 2
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	intcode
 17102  000008                     __pintcode:
 17103                           	opt stack 0
 17104  000008                     _isrHP:
 17105                           	opt stack 18
 17106                           
 17107                           ;incstack = 0
 17108  000008  CFFA F062          	movff	pclath,??_isrHP
 17109  00000C  CFFB F063          	movff	pclatu,??_isrHP+1
 17110  000010  CFE9 F064          	movff	fsr0l,??_isrHP+2
 17111  000014  EDDF  F01A         	call	int_func,f	;refresh shadow registers
 17112                           pclatu	equ	0xFFB
 17113                           pclath	equ	0xFFA
 17114                           tblptru	equ	0xFF8
 17115                           tblptrh	equ	0xFF7
 17116                           tblptrl	equ	0xFF6
 17117                           tablat	equ	0xFF5
 17118                           prodh	equ	0xFF4
 17119                           prodl	equ	0xFF3
 17120                           intcon	equ	0xFF2
 17121                           intcon2	equ	0xFF1
 17122                           intcon3	equ	0xFF0
 17123                           postinc0	equ	0xFEE
 17124                           fsr0h	equ	0xFEA
 17125                           fsr0l	equ	0xFE9
 17126                           wreg	equ	0xFE8
 17127                           fsr1h	equ	0xFE2
 17128                           fsr1l	equ	0xFE1
 17129                           bsr	equ	0xFE0
 17130                           indf2	equ	0xFDF
 17131                           postinc2	equ	0xFDE
 17132                           postdec2	equ	0xFDD
 17133                           fsr2h	equ	0xFDA
 17134                           fsr2l	equ	0xFD9
 17135                           status	equ	0xFD8
 17136                           
 17137                           	psect	intcode_body
 17138  0035BE                     __pintcode_body:
 17139                           	opt stack 18
 17140  0035BE                     int_func:
 17141                           	opt stack 18
 17142  0035BE  0006               	pop		; remove dummy address from shadow register refresh
 17143  0035C0  CFEA F065          	movff	fsr0h,??_isrHP+3
 17144  0035C4  CFE1 F066          	movff	fsr1l,??_isrHP+4
 17145  0035C8  CFE2 F067          	movff	fsr1h,??_isrHP+5
 17146  0035CC  CFD9 F068          	movff	fsr2l,??_isrHP+6
 17147  0035D0  CFDA F069          	movff	fsr2h,??_isrHP+7
 17148  0035D4  CFF3 F06A          	movff	prodl,??_isrHP+8
 17149  0035D8  CFF4 F06B          	movff	prodh,??_isrHP+9
 17150  0035DC  CFF6 F06C          	movff	tblptrl,??_isrHP+10
 17151  0035E0  CFF7 F06D          	movff	tblptrh,??_isrHP+11
 17152  0035E4  CFF8 F06E          	movff	tblptru,??_isrHP+12
 17153  0035E8  CFF5 F06F          	movff	tablat,??_isrHP+13
 17154                           
 17155                           ;FastBuggy17_Main_Code_TUNING.c: 729: if (INTCONbits.TMR0IF == 1) {
 17156  0035EC  A4F2               	btfss	intcon,2,c	;volatile
 17157  0035EE  D004               	goto	i2l923
 17158                           
 17159                           ;FastBuggy17_Main_Code_TUNING.c: 730: INTCONbits.TMR0IF = 0;
 17160  0035F0  94F2               	bcf	intcon,2,c	;volatile
 17161                           
 17162                           ;FastBuggy17_Main_Code_TUNING.c: 732: MillisecondTimerISR();
 17163  0035F2  ECE1  F021         	call	_MillisecondTimerISR	;wreg free
 17164                           
 17165                           ;FastBuggy17_Main_Code_TUNING.c: 736: }
 17166  0035F6  D006               	goto	i2l926
 17167  0035F8                     i2l923:
 17168                           
 17169                           ;FastBuggy17_Main_Code_TUNING.c: 739: else if (INTCON3bits.INT3IF == 1) {
 17170  0035F8  A4F0               	btfss	intcon3,2,c	;volatile
 17171  0035FA  D004               	goto	i2l926
 17172                           
 17173                           ;FastBuggy17_Main_Code_TUNING.c: 740: INTCON3bits.INT3IF = 0;
 17174  0035FC  94F0               	bcf	intcon3,2,c	;volatile
 17175                           
 17176                           ;FastBuggy17_Main_Code_TUNING.c: 742: UltrasoundISR();
 17177  0035FE  EC34  F020         	call	_UltrasoundISR	;wreg free
 17178  003602  D000               	goto	i2l926
 17179  003604                     i2l926:
 17180  003604  C06F  FFF5         	movff	??_isrHP+13,tablat
 17181  003608  C06E  FFF8         	movff	??_isrHP+12,tblptru
 17182  00360C  C06D  FFF7         	movff	??_isrHP+11,tblptrh
 17183  003610  C06C  FFF6         	movff	??_isrHP+10,tblptrl
 17184  003614  C06B  FFF4         	movff	??_isrHP+9,prodh
 17185  003618  C06A  FFF3         	movff	??_isrHP+8,prodl
 17186  00361C  C069  FFDA         	movff	??_isrHP+7,fsr2h
 17187  003620  C068  FFD9         	movff	??_isrHP+6,fsr2l
 17188  003624  C067  FFE2         	movff	??_isrHP+5,fsr1h
 17189  003628  C066  FFE1         	movff	??_isrHP+4,fsr1l
 17190  00362C  C065  FFEA         	movff	??_isrHP+3,fsr0h
 17191  003630  C064  FFE9         	movff	??_isrHP+2,fsr0l
 17192  003634  C063  FFFB         	movff	??_isrHP+1,pclatu
 17193  003638  C062  FFFA         	movff	??_isrHP,pclath
 17194  00363C  0011               	retfie		f
 17195  00363E                     __end_of_isrHP:
 17196                           	opt stack 0
 17197                           pclatu	equ	0xFFB
 17198                           pclath	equ	0xFFA
 17199                           tblptru	equ	0xFF8
 17200                           tblptrh	equ	0xFF7
 17201                           tblptrl	equ	0xFF6
 17202                           tablat	equ	0xFF5
 17203                           prodh	equ	0xFF4
 17204                           prodl	equ	0xFF3
 17205                           intcon	equ	0xFF2
 17206                           intcon2	equ	0xFF1
 17207                           intcon3	equ	0xFF0
 17208                           postinc0	equ	0xFEE
 17209                           fsr0h	equ	0xFEA
 17210                           fsr0l	equ	0xFE9
 17211                           wreg	equ	0xFE8
 17212                           fsr1h	equ	0xFE2
 17213                           fsr1l	equ	0xFE1
 17214                           bsr	equ	0xFE0
 17215                           indf2	equ	0xFDF
 17216                           postinc2	equ	0xFDE
 17217                           postdec2	equ	0xFDD
 17218                           fsr2h	equ	0xFDA
 17219                           fsr2l	equ	0xFD9
 17220                           status	equ	0xFD8
 17221                           
 17222 ;; *************** function _UltrasoundISR *****************
 17223 ;; Defined at:
 17224 ;;		line 17 in file "Ultrasound.c"
 17225 ;; Parameters:    Size  Location     Type
 17226 ;;		None
 17227 ;; Auto vars:     Size  Location     Type
 17228 ;;		None
 17229 ;; Return value:  Size  Location     Type
 17230 ;;		None               void
 17231 ;; Registers used:
 17232 ;;		wreg, status,2, cstack
 17233 ;; Tracked objects:
 17234 ;;		On entry : 0/0
 17235 ;;		On exit  : 0/0
 17236 ;;		Unchanged: 0/0
 17237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17242 ;;Total ram usage:        0 bytes
 17243 ;; Hardware stack levels used:    1
 17244 ;; Hardware stack levels required when called:    1
 17245 ;; This function calls:
 17246 ;;		_ReadTimer1
 17247 ;;		i2_WriteTimer1
 17248 ;; This function is called by:
 17249 ;;		_isrHP
 17250 ;; This function uses a non-reentrant model
 17251 ;;
 17252                           
 17253                           	psect	text126
 17254  004068                     __ptext126:
 17255                           	opt stack 0
 17256  004068                     _UltrasoundISR:
 17257                           	opt stack 18
 17258                           
 17259                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 17260                           
 17261                           ;incstack = 0
 17262  004068  9AF0               	bcf	intcon3,5,c	;volatile
 17263                           
 17264                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 17265  00406A  B0CD               	btfsc	4045,0,c	;volatile
 17266  00406C  D009               	goto	i2l28
 17267                           
 17268                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 17269  00406E  80CD               	bsf	4045,0,c	;volatile
 17270                           
 17271                           ;Ultrasound.c: 35: WriteTimer1(0);
 17272  004070  0E00               	movlw	0
 17273  004072  6E45               	movwf	i2WriteTimer1@timer1+1,c
 17274  004074  0E00               	movlw	0
 17275  004076  6E44               	movwf	i2WriteTimer1@timer1,c
 17276  004078  EC5F  F022         	call	i2_WriteTimer1	;wreg free
 17277                           
 17278                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 17279  00407C  96F1               	bcf	intcon2,3,c	;volatile
 17280                           
 17281                           ;Ultrasound.c: 37: }
 17282  00407E  D00A               	goto	i2l7743
 17283  004080                     i2l28:
 17284                           
 17285                           ;Ultrasound.c: 38: else {
 17286                           ;Ultrasound.c: 39: T1CONbits.TMR1ON = 0;
 17287  004080  90CD               	bcf	4045,0,c	;volatile
 17288                           
 17289                           ;Ultrasound.c: 40: echo_time = ReadTimer1();
 17290  004082  EC68  F022         	call	_ReadTimer1	;wreg free
 17291  004086  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 17292  00408A  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 17293                           
 17294                           ;Ultrasound.c: 41: echo_acq_done = 1;
 17295  00408E  0E01               	movlw	1
 17296  004090  6E1A               	movwf	_echo_acq_done,c
 17297  004092  D000               	goto	i2l7743
 17298  004094                     i2l7743:
 17299                           
 17300                           ;Ultrasound.c: 42: }
 17301                           ;Ultrasound.c: 43: INTCON3bits.INT3IF = 0;
 17302  004094  94F0               	bcf	intcon3,2,c	;volatile
 17303                           
 17304                           ;Ultrasound.c: 44: INTCON3bits.INT3IE = 1;
 17305  004096  8AF0               	bsf	intcon3,5,c	;volatile
 17306  004098  0012               	return		;funcret
 17307  00409A                     __end_of_UltrasoundISR:
 17308                           	opt stack 0
 17309                           pclatu	equ	0xFFB
 17310                           pclath	equ	0xFFA
 17311                           tblptru	equ	0xFF8
 17312                           tblptrh	equ	0xFF7
 17313                           tblptrl	equ	0xFF6
 17314                           tablat	equ	0xFF5
 17315                           prodh	equ	0xFF4
 17316                           prodl	equ	0xFF3
 17317                           intcon	equ	0xFF2
 17318                           intcon2	equ	0xFF1
 17319                           intcon3	equ	0xFF0
 17320                           postinc0	equ	0xFEE
 17321                           fsr0h	equ	0xFEA
 17322                           fsr0l	equ	0xFE9
 17323                           wreg	equ	0xFE8
 17324                           fsr1h	equ	0xFE2
 17325                           fsr1l	equ	0xFE1
 17326                           bsr	equ	0xFE0
 17327                           indf2	equ	0xFDF
 17328                           postinc2	equ	0xFDE
 17329                           postdec2	equ	0xFDD
 17330                           fsr2h	equ	0xFDA
 17331                           fsr2l	equ	0xFD9
 17332                           status	equ	0xFD8
 17333                           
 17334 ;; *************** function i2_WriteTimer1 *****************
 17335 ;; Defined at:
 17336 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;  timer1          2   25[COMRAM] unsigned int 
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 17341 ;; Return value:  Size  Location     Type
 17342 ;;		None               void
 17343 ;; Registers used:
 17344 ;;		None
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17353 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17354 ;;Total ram usage:        4 bytes
 17355 ;; Hardware stack levels used:    1
 17356 ;; This function calls:
 17357 ;;		Nothing
 17358 ;; This function is called by:
 17359 ;;		_UltrasoundISR
 17360 ;; This function uses a non-reentrant model
 17361 ;;
 17362                           
 17363                           	psect	text127
 17364  0044BE                     __ptext127:
 17365                           	opt stack 0
 17366  0044BE                     i2_WriteTimer1:
 17367                           	opt stack 18
 17368                           
 17369                           ;incstack = 0
 17370  0044BE  C044  F060         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 17371  0044C2  C045  F061         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 17372  0044C6  C061  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 17373  0044CA  C060  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 17374  0044CE  0012               	return		;funcret
 17375  0044D0                     __end_ofi2_WriteTimer1:
 17376                           	opt stack 0
 17377                           pclatu	equ	0xFFB
 17378                           pclath	equ	0xFFA
 17379                           tblptru	equ	0xFF8
 17380                           tblptrh	equ	0xFF7
 17381                           tblptrl	equ	0xFF6
 17382                           tablat	equ	0xFF5
 17383                           prodh	equ	0xFF4
 17384                           prodl	equ	0xFF3
 17385                           intcon	equ	0xFF2
 17386                           intcon2	equ	0xFF1
 17387                           intcon3	equ	0xFF0
 17388                           postinc0	equ	0xFEE
 17389                           fsr0h	equ	0xFEA
 17390                           fsr0l	equ	0xFE9
 17391                           wreg	equ	0xFE8
 17392                           fsr1h	equ	0xFE2
 17393                           fsr1l	equ	0xFE1
 17394                           bsr	equ	0xFE0
 17395                           indf2	equ	0xFDF
 17396                           postinc2	equ	0xFDE
 17397                           postdec2	equ	0xFDD
 17398                           fsr2h	equ	0xFDA
 17399                           fsr2l	equ	0xFD9
 17400                           status	equ	0xFD8
 17401                           
 17402 ;; *************** function _ReadTimer1 *****************
 17403 ;; Defined at:
 17404 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 17405 ;; Parameters:    Size  Location     Type
 17406 ;;		None
 17407 ;; Auto vars:     Size  Location     Type
 17408 ;;  timer           2    0[BANK0 ] struct Timers
 17409 ;; Return value:  Size  Location     Type
 17410 ;;                  2   25[COMRAM] unsigned int 
 17411 ;; Registers used:
 17412 ;;		None
 17413 ;; Tracked objects:
 17414 ;;		On entry : 0/0
 17415 ;;		On exit  : 0/0
 17416 ;;		Unchanged: 0/0
 17417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17422 ;;Total ram usage:        4 bytes
 17423 ;; Hardware stack levels used:    1
 17424 ;; This function calls:
 17425 ;;		Nothing
 17426 ;; This function is called by:
 17427 ;;		_UltrasoundISR
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           	psect	text128
 17432  0044D0                     __ptext128:
 17433                           	opt stack 0
 17434  0044D0                     _ReadTimer1:
 17435                           	opt stack 18
 17436                           
 17437                           ;incstack = 0
 17438  0044D0  CFCE F060          	movff	4046,ReadTimer1@timer	;volatile
 17439  0044D4  CFCF F061          	movff	4047,ReadTimer1@timer+1	;volatile
 17440  0044D8  C060  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 17441  0044DC  C061  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 17442  0044E0  0012               	return		;funcret
 17443  0044E2                     __end_of_ReadTimer1:
 17444                           	opt stack 0
 17445                           pclatu	equ	0xFFB
 17446                           pclath	equ	0xFFA
 17447                           tblptru	equ	0xFF8
 17448                           tblptrh	equ	0xFF7
 17449                           tblptrl	equ	0xFF6
 17450                           tablat	equ	0xFF5
 17451                           prodh	equ	0xFF4
 17452                           prodl	equ	0xFF3
 17453                           intcon	equ	0xFF2
 17454                           intcon2	equ	0xFF1
 17455                           intcon3	equ	0xFF0
 17456                           postinc0	equ	0xFEE
 17457                           fsr0h	equ	0xFEA
 17458                           fsr0l	equ	0xFE9
 17459                           wreg	equ	0xFE8
 17460                           fsr1h	equ	0xFE2
 17461                           fsr1l	equ	0xFE1
 17462                           bsr	equ	0xFE0
 17463                           indf2	equ	0xFDF
 17464                           postinc2	equ	0xFDE
 17465                           postdec2	equ	0xFDD
 17466                           fsr2h	equ	0xFDA
 17467                           fsr2l	equ	0xFD9
 17468                           status	equ	0xFD8
 17469                           
 17470 ;; *************** function _MillisecondTimerISR *****************
 17471 ;; Defined at:
 17472 ;;		line 44 in file "MillisecondTimer.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;		None
 17475 ;; Auto vars:     Size  Location     Type
 17476 ;;		None
 17477 ;; Return value:  Size  Location     Type
 17478 ;;		None               void
 17479 ;; Registers used:
 17480 ;;		wreg, status,2, status,0, cstack
 17481 ;; Tracked objects:
 17482 ;;		On entry : 0/0
 17483 ;;		On exit  : 0/0
 17484 ;;		Unchanged: 0/0
 17485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17490 ;;Total ram usage:        0 bytes
 17491 ;; Hardware stack levels used:    1
 17492 ;; Hardware stack levels required when called:    1
 17493 ;; This function calls:
 17494 ;;		i2_WriteTimer0
 17495 ;; This function is called by:
 17496 ;;		_isrHP
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text129
 17501  0043C2                     __ptext129:
 17502                           	opt stack 0
 17503  0043C2                     _MillisecondTimerISR:
 17504                           	opt stack 18
 17505                           
 17506                           ;MillisecondTimer.c: 46: WriteTimer0(63036);
 17507                           
 17508                           ;incstack = 0
 17509  0043C2  0EF6               	movlw	246
 17510  0043C4  6E45               	movwf	i2WriteTimer0@timer0+1,c
 17511  0043C6  0E3C               	movlw	60
 17512  0043C8  6E44               	movwf	i2WriteTimer0@timer0,c
 17513  0043CA  EC71  F022         	call	i2_WriteTimer0	;wreg free
 17514                           
 17515                           ;MillisecondTimer.c: 47: millisecond_COUNT0++;
 17516  0043CE  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 17517  0043D0  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 17518                           
 17519                           ;MillisecondTimer.c: 48: millisecond_COUNT1++;
 17520  0043D2  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 17521  0043D4  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 17522                           
 17523                           ;MillisecondTimer.c: 49: millisecond_COUNT2++;
 17524  0043D6  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 17525  0043D8  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 17526  0043DA  0012               	return		;funcret
 17527  0043DC                     __end_of_MillisecondTimerISR:
 17528                           	opt stack 0
 17529                           pclatu	equ	0xFFB
 17530                           pclath	equ	0xFFA
 17531                           tblptru	equ	0xFF8
 17532                           tblptrh	equ	0xFF7
 17533                           tblptrl	equ	0xFF6
 17534                           tablat	equ	0xFF5
 17535                           prodh	equ	0xFF4
 17536                           prodl	equ	0xFF3
 17537                           intcon	equ	0xFF2
 17538                           intcon2	equ	0xFF1
 17539                           intcon3	equ	0xFF0
 17540                           postinc0	equ	0xFEE
 17541                           fsr0h	equ	0xFEA
 17542                           fsr0l	equ	0xFE9
 17543                           wreg	equ	0xFE8
 17544                           fsr1h	equ	0xFE2
 17545                           fsr1l	equ	0xFE1
 17546                           bsr	equ	0xFE0
 17547                           indf2	equ	0xFDF
 17548                           postinc2	equ	0xFDE
 17549                           postdec2	equ	0xFDD
 17550                           fsr2h	equ	0xFDA
 17551                           fsr2l	equ	0xFD9
 17552                           status	equ	0xFD8
 17553                           
 17554 ;; *************** function i2_WriteTimer0 *****************
 17555 ;; Defined at:
 17556 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 17557 ;; Parameters:    Size  Location     Type
 17558 ;;  timer0          2   25[COMRAM] unsigned int 
 17559 ;; Auto vars:     Size  Location     Type
 17560 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 17561 ;; Return value:  Size  Location     Type
 17562 ;;		None               void
 17563 ;; Registers used:
 17564 ;;		None
 17565 ;; Tracked objects:
 17566 ;;		On entry : 0/0
 17567 ;;		On exit  : 0/0
 17568 ;;		Unchanged: 0/0
 17569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17573 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17574 ;;Total ram usage:        4 bytes
 17575 ;; Hardware stack levels used:    1
 17576 ;; This function calls:
 17577 ;;		Nothing
 17578 ;; This function is called by:
 17579 ;;		_MillisecondTimerISR
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text130
 17584  0044E2                     __ptext130:
 17585                           	opt stack 0
 17586  0044E2                     i2_WriteTimer0:
 17587                           	opt stack 18
 17588                           
 17589                           ;incstack = 0
 17590  0044E2  C044  F060         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 17591  0044E6  C045  F061         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 17592  0044EA  C061  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 17593  0044EE  C060  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 17594  0044F2  0012               	return		;funcret
 17595  0044F4                     __end_ofi2_WriteTimer0:
 17596                           	opt stack 0
 17597                           pclatu	equ	0xFFB
 17598                           pclath	equ	0xFFA
 17599                           tblptru	equ	0xFF8
 17600                           tblptrh	equ	0xFF7
 17601                           tblptrl	equ	0xFF6
 17602                           tablat	equ	0xFF5
 17603                           prodh	equ	0xFF4
 17604                           prodl	equ	0xFF3
 17605                           intcon	equ	0xFF2
 17606                           intcon2	equ	0xFF1
 17607                           intcon3	equ	0xFF0
 17608                           postinc0	equ	0xFEE
 17609                           fsr0h	equ	0xFEA
 17610                           fsr0l	equ	0xFE9
 17611                           wreg	equ	0xFE8
 17612                           fsr1h	equ	0xFE2
 17613                           fsr1l	equ	0xFE1
 17614                           bsr	equ	0xFE0
 17615                           indf2	equ	0xFDF
 17616                           postinc2	equ	0xFDE
 17617                           postdec2	equ	0xFDD
 17618                           fsr2h	equ	0xFDA
 17619                           fsr2l	equ	0xFD9
 17620                           status	equ	0xFD8
 17621                           pclatu	equ	0xFFB
 17622                           pclath	equ	0xFFA
 17623                           tblptru	equ	0xFF8
 17624                           tblptrh	equ	0xFF7
 17625                           tblptrl	equ	0xFF6
 17626                           tablat	equ	0xFF5
 17627                           prodh	equ	0xFF4
 17628                           prodl	equ	0xFF3
 17629                           intcon	equ	0xFF2
 17630                           intcon2	equ	0xFF1
 17631                           intcon3	equ	0xFF0
 17632                           postinc0	equ	0xFEE
 17633                           fsr0h	equ	0xFEA
 17634                           fsr0l	equ	0xFE9
 17635                           wreg	equ	0xFE8
 17636                           fsr1h	equ	0xFE2
 17637                           fsr1l	equ	0xFE1
 17638                           bsr	equ	0xFE0
 17639                           indf2	equ	0xFDF
 17640                           postinc2	equ	0xFDE
 17641                           postdec2	equ	0xFDD
 17642                           fsr2h	equ	0xFDA
 17643                           fsr2l	equ	0xFD9
 17644                           status	equ	0xFD8
 17645                           
 17646                           	psect	rparam
 17647  0000                     pclatu	equ	0xFFB
 17648                           pclath	equ	0xFFA
 17649                           tblptru	equ	0xFF8
 17650                           tblptrh	equ	0xFF7
 17651                           tblptrl	equ	0xFF6
 17652                           tablat	equ	0xFF5
 17653                           prodh	equ	0xFF4
 17654                           prodl	equ	0xFF3
 17655                           intcon	equ	0xFF2
 17656                           intcon2	equ	0xFF1
 17657                           intcon3	equ	0xFF0
 17658                           postinc0	equ	0xFEE
 17659                           fsr0h	equ	0xFEA
 17660                           fsr0l	equ	0xFE9
 17661                           wreg	equ	0xFE8
 17662                           fsr1h	equ	0xFE2
 17663                           fsr1l	equ	0xFE1
 17664                           bsr	equ	0xFE0
 17665                           indf2	equ	0xFDF
 17666                           postinc2	equ	0xFDE
 17667                           postdec2	equ	0xFDD
 17668                           fsr2h	equ	0xFDA
 17669                           fsr2l	equ	0xFD9
 17670                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         134
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160    107     141
    BANK1           256     44     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 

    sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK1[1]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> NULL(NULL[0]), sensor_threshold(COMRAM[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_CalculateSensorSums
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendStoredPIDValues->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_SendOffsets
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _SendThreshold->_PutCharTxBuf
    _SendStatus->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_DisplaySensorStatuses
    _CalibrateThreshold->_NormaliseSensorReadings
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _CalculateSensorSums->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0  129775
                                              0 BANK1     44    44      0
                    _BusyDistanceAcq
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadMillis2
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                         _SendStatus
                _SendStoredPIDValues
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1170
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1390
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     585
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11872
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5980
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   12576
                                             32 BANK0      3     3      0
                          _FlashLEDS
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                        _SendOffsets
                      _SendThreshold
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1232
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     644
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0    7869
                                             29 BANK0      3     3      0
                   _CalibrateOffsets
                 _CalibrateThreshold
                       _Delay10KTCYx
                          _FlashLEDS
                         _PB1pressed
                        _SendOffsets
                         _SendStatus
                      _SendThreshold
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3    1096
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _SendThreshold                                        4     2      2    1205
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (2) _SendOffsets                                          5     3      2    1335
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   2     2      0     963
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     161
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                              4     4      0     322
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0     192
                                             19 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     638
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     440
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSums                                  5     5      0   72599
                                            102 BANK0      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   65508
                                             85 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   21377
                                             67 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   35480
                                             76 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     489
                                             67 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9118
                                             68 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     582
                                             16 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     631
                                             43 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     718
                                             16 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2529
                                             58 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9719
                                             55 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3968
                                             28 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4541
                                             55 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4225
                                             43 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     260
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2900
                                             24 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2523
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2427
                                             24 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2291
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2260
                                             16 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      96
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _ReadADC
       _SetADCChannel
         _SetChanADC
     _Delay10KTCYx
     _FlashLEDS
       _Delay10KTCYx
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _SendOffsets
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendThreshold
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _FlashLEDS
       _Delay10KTCYx
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _ReadADC
         _SetADCChannel
           _SetChanADC
       _Delay10KTCYx
       _FlashLEDS
         _Delay10KTCYx
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendOffsets
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SendThreshold
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendOffsets
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SendThreshold
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadMillis2
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2C      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      8D       5       88.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     140      32        0.0%
DATA                 0      0     140       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Apr 25 11:31:19 2017

             __size_of_WriteEEPROM 0040                __end_of_OWWriteByte 4182  
                     ___altoft@exp 00A2               __end_of_GetCharRxBuf 3CBA  
             __end_of_GetCharTxBuf 3F96                      ___altoft@sign 00A3  
                               l36 4542                WriteCharEEPROM@data 0075  
                               bsr 000FE0                ___wmul@multiplicand 0072  
                      __CFG_BORV$0 000000                  main@line_end_flag 0153  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                __end_of_GetDistance 4474  
                     ___ftadd@exp1 0096                       ___ftadd@exp2 0095  
                     __CFG_CP6$OFF 000000                       __CFG_CP7$OFF 000000  
                     ___ftadd@sign 0094               LoadCalibration@index 0082  
                              l205 3DD4                                l206 3E04  
                              l215 4190                                l208 3DF8  
                              l216 41AC                                l232 4502  
                              l128 30E8                                l218 41A4  
                              l316 4512                                l229 3ADC  
                              l423 457C                                l440 39B8  
                              l426 45EE                                l522 40C8  
                              l514 3EEC                                l532 3F18  
                              l452 4154                                l533 3F24  
                              l517 3E64                                l278 3CB8  
                              l519 3E7A                                l527 4180  
                              l811 3BDA                                l900 20D0  
                              l823 3AFE                                l840 3A7E  
                              l920 2AF0                                l761 2DC2  
                              l825 3B3A                                l843 3A4C  
                              l772 372E                                l828 3B08  
                              l838 3A42                                l791 32F0  
                              l767 4522                                l858 37A4  
                              l786 2CD4                                l796 3032  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                              _PR4 000F77                       __CFG_CPD$OFF 000000  
    __size_of_SendCurrentPIDValues 006A             __size_of_SetDCMotorPID 00B6  
             __size_of_WriteTimer0 0012               __size_of_WriteTimer1 0012  
            CalibrateOffsets@index 0075                                _exp 1A10  
                              _log 2338                         _OWReadByte 3EEE  
                              _pow 1C38                      _SetADCChannel 2CD6  
                     ___awmod@sign 0075                                prod 000FF3  
             ?_SendStoredPIDValues 0078                                wreg 000FE8  
                       _TXSTA1bits 000FAC        __end_of_CalculateSensorSums 32F2  
                     __CFG_MODE$MC 000000          ??_CalculateSensorStatuses 0070  
                      ?_PB1pressed 002B                    ReadTimer1@timer 0060  
                    main@Kd_stored 0161                  main@line_mode_ptr 014F  
                      ?_PB2pressed 002B                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 0081                         _Delay1TCYx 4524  
                     ___ftdiv@sign 0086                       __CFG_WDT$OFF 000000  
                             l1010 458A                               l1110 4296  
                             l1111 4298                               l1032 36B6  
                             l1040 445E                               l1211 4274  
                             l1062 42DC                               l1134 4018  
                             l1207 4262                               l1064 42E6  
                             l1136 4030                               l1225 3F5C  
                             l1137 4032                               l1322 3434  
                             l1165 432A                               l1166 432C  
                             l1431 319C                               l1088 42B4  
                             l1193 348E                               l1602 1942  
                             l1450 436A                               l1443 3C72  
                             l1611 196C                               l1195 349C  
                             l1196 349E                               l1189 346C  
                             l1622 22FE                               l1198 34BA  
                             l1455 4528                               l1457 4532  
                             l1634 20B2                               l1547 27E8  
                             l1619 2336                               l1651 3C2A  
                             l1724 35BC                               l1644 40EC  
                             l1628 2F7A                               l1820 1AE6  
                             l1821 1C2A                               l1558 27B0  
                             l1591 1834                               l1655 25A8  
                             l1831 29EE                               l1593 185E  
                             l1841 28FE                               l1817 1C36  
                             l1691 4128                               l1587 17FA  
                             l1588 1A0E                               l1837 324A  
                             l1829 29FA                               l1859 2476  
                             l1795 1DD0                               l7007 3C4A  
                             l1799 1DC4                               l7041 2B40  
                             l7033 296C                               l7025 293A  
                             l7043 2BCE                               l7051 27FE  
                             l7131 3FDC                               l8011 1EE0  
                             l8003 1EAA                               l7029 294E  
                             l6501 2CEC                               l7141 3E82  
                             l8021 1F3A                               l7071 2896  
                             l7127 3FD2                               l6511 2D14  
                             l6503 2CF4                               l8015 1EEA  
                             l7321 1A32                               l7305 2378  
                             l7137 3FF8                               l6521 2D3C  
                             l6513 2D1C                               l6505 2CFC  
                             l8025 2A04                               l6451 26FA  
                             l7075 28AC                               l7059 2864  
                             l7411 3492                               l7403 347A  
                             l6523 2D44                               l6515 2D24  
                             l6507 2D04                               l6531 2D5C  
                             l7243 3B30                               l7235 3B12  
                             l7155 3314                               ?_exp 00AC  
                             l6461 2790                               l6453 270A  
                             l6613 1998                               l6605 1922  
                             l7077 28F0                               l7333 1AB0  
                             l6525 2D4C                               l6517 2D2C  
                             l6509 2D0C                               l7261 3750  
                             l7253 3736                               l7237 3B2A  
                             l7165 3376                               l7149 32F4  
                             l7173 37A8                               l8045 2AAA  
                             l8301 1204                               ?_log 00A3  
                             l6463 27A0                               l6455 273C  
                             l6447 26E4                               l6623 19E8  
                             l6607 1932                               l6551 33D2  
                             l7351 1BE8                               l7327 1A76  
                             l7503 401C                               l7407 3484  
                             l6527 2D54                               l6519 2D34  
                             l7247 3B36                               l6703 317C  
                             l7167 3384                               l7159 331E  
                             l8039 2A86                               l8311 121E  
                             l6633 1F82                               l7257 3746  
                             l7273 3B4C                               l7177 3802  
                             l8321 1256                               l6475 27DA  
                             l6459 275E                               l6571 1842  
                             l6635 1FA8                               l6715 2EF0  
                             l7355 1BFA                               l6707 3192  
                             l8331 1274                               l8251 1106  
                             l6469 27BC                               l7285 3546  
                             l6565 1808                               l6661 2048  
                             l6653 200C                               l6549 33C0  
                             l6725 2F76                               l8261 1128  
                             l7287 3558                               l6671 208C  
                             l6663 2050                               l6639 1FBC  
                             l6719 2F32                               l6735 24A2  
                             l7391 3458                               l6911 2C74  
                             l6903 2C5E                               l7279 3B68  
                             l7631 3A56                               l7447 3EDE  
                             l7455 4160                               l8431 1584  
                             l8327 1266                               l8319 1238  
                             l8271 1148                               l6593 18C6  
                             l6577 1854                               l6657 202C  
                             l6753 2526                               l6841 3FA6  
                             l6497 2CDC                               l7633 3A6E  
                             l7705 20E4                               l7481 3F1E  
                             l7473 3F04                               l8337 128E  
                             l8257 1116                               l6595 18D6  
                             l6587 1896                               l6667 2070  
                             l6771 2596                               l6763 2558  
                             l7299 234A                               l7555 42BE  
                             l7395 3462                               l7387 344C  
                             l6499 2CE4                               l6915 2CB4  
                             l6907 2C6A                               l6923 3B92  
                             l6691 312E                               l6683 3108  
                             l7651 25B6                               l7643 3A7A  
                             l7707 20F2                               l7459 416A  
                             l8427 1566                               l8363 135E  
                             l6597 18E6                               l6765 256A  
                             l6757 253A                               l6837 3F9C  
                             l6917 2CCC                               l6933 4352  
                             l6693 313C                               l7469 3EFA  
                             l8453 15FC                               l8429 157E  
                             l8445 15DC                               l8285 1174  
                             l6951 2220                               l6599 18F2  
                             l6759 2542                               l6767 2578  
                             l6783 31D2                               l6847 3FC2  
                             l7399 3470                               l6927 3B9C  
                             l6695 3146                               l6687 311A  
                             l7663 25DC                               l7655 25C2  
                             l7639 3A74                               l8455 1614  
                             l8439 15B0                               l8447 15E2  
                             l8367 1368                               l8279 115E  
                             l6953 2246                               l7593 1D14  
                             l7585 1C9C                               l7905 3258  
                             l7825 387E                               l7817 3E08  
                             l8481 16A4                               l8457 161A  
                             l8385 146E                               l7931 2F96  
                             l7923 2F7E                               l7579 1C7A  
                             l6875 36C0                               l6699 316C  
                             l7675 2642                               l7659 25D2  
                             l7835 3814                               l8483 16AC  
                             l8475 166A                               l8491 16DA  
                             l8467 1646                               l6957 225A  
                             l7597 1D3C                               l7917 32EA  
                             l7909 3262                               l6893 2BFE  
                             l7685 268A                               l7669 2626  
                             l7845 38E8                               l7829 38D6  
                             l7773 30BE                               l8389 14A4  
                             l7951 2FCA                               l7943 2FB2  
                             l7935 2FA2                               l7927 2F8A  
                             l6879 36CA                               l7679 264E  
                             l7695 20C4                               l7855 39BC  
                             l7839 386C                               l7767 3048  
                             l8479 1678                               l8487 16BC  
                             l7961 2FE4                               l6977 22BC  
                             l6897 2C3E                               l6889 2BF4  
                             l7689 26BC                               l7849 3940  
                             l7769 3082                               l8489 16D4  
                             l7963 3026                               l7955 2FD6  
                             l7947 2FBE                               l6987 2310  
                             l6995 3C00                               l6899 2C56  
                             l7859 3A12                               l7869 3992  
                             ?_pow 00B5                               l7985 1E2C  
                             l7977 1DF6                               l7995 1E86  
                             l7989 1E36                               _LATE 000F8D  
                             _LATJ 000F91                               u6041 17A8  
                             u6051 17C6                               u6401 248E  
                             u6251 1F6E                               u6420 24C8  
                             u7220 1ABA                               u7230 1ABC  
                             u6271 1F98                               u6425 24BE  
                             u7090 3B26                               i2l28 4080  
                             u6540 450E                               u6720 4586  
                             u6704 3BC8                               u6560 4578  
                             u6705 3BC2                               u6490 3204  
                             u6570 451E                               u6731 220C  
                             u7620 3A6A                               u8500 14E8  
                             u6830 295E                               u6751 2236  
                             u7560 1CF6                               u6498 3208  
                             u6915 3D08                               u6925 3CC4  
                             u6870 2830                               u8630 1686  
                  _BusyDistanceAcq 4534                               u7760 453E  
                             u8640 169A                               u8632 1688  
                             u8642 169C                               u8707 3E6A  
                             u7915 39A0                               u8717 3E72  
                             u6878 2834                               u7790 3096  
                             u8727 3EC2                               u8737 3ECC  
                             u8747 3EE0                               u8757 40A0  
                             u8767 40A8                               u8687 3E56  
                             u8777 40BA                               u8697 3E5E  
                             u8787 435A                               _TMR2 000FCC  
                    main@Ki_stored 0163          __size_of_ConfigureBuggyIO 001A  
                   Read1USART@data 0070                               _main 103C  
         __end_of_EnableSensorLEDS 460A            _NormaliseSensorReadings 36BA  
                     ___ftpack@arg 0070                       ___ftpack@exp 0073  
           __end_of_WirelessTx_ISR 430E                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             exp@x 00AC                               log@x 00A3  
           __size_ofi2_WriteTimer0 0012             __size_ofi2_WriteTimer1 0012  
                             pclat 000FFA                               pow@x 00B5  
                             pow@y 00B8                               prodh 000FF4  
                             prodl 000FF3                     _ReadCharEEPROM 44F4  
                             start 00EC                    __end_of_OWReset 3EEE  
                       _OWWriteBit 3E42                      __CFG_IESO$OFF 000000  
              _ConfigureInterrupts 4228                      main@Kp_stored 015F  
                    _BusySensorAcq 4514       __end_of_CalculateSensorError 3034  
                    _ReadIntEEPROM 3A80               __end_of_EnableMotors 461A  
                    __CFG_MCLRE$ON 000000                       ___ftmul@cntr 0089  
                       _GetCommand 45E8                       ___param_bank 000010  
                     ___ftmul@sign 008A                    __end_of_BusyADC 458C  
                  __end_of_ReadADC 4460                      ??_ReadMillis0 0072  
                    ??_ReadMillis1 0072                      ??_ReadMillis2 0072  
                  __end_of_OpenADC 36BA                       ___fttol@exp1 0099  
                            ??_exp 00AF                              ??_log 00A6  
                     ___fttol@lval 0095                              ??_pow 00BB  
                    ??_SetDCMotorL 0078                      ??_SetDCMotorR 0078  
            _DisplaySensorStatuses 3B8C                      __CFG_WAIT$OFF 000000  
                  __end_of_StartTx 45E8                      ??_ReadVoltage 0075  
                   _ReadEchoLength 45C2                              ?_main 002B  
                            _EEADR 000FA9                    __end_of___ftadd 1A10  
                  __end_of___awmod 319E                    __end_of___ftdiv 2338  
                  __end_of___ftneg 40FA                    __end_of___ftmul 20B4  
                   PutCharRxBuf@ch 0077                              _T0CON 000FD5  
                            _T1CON 000FCD                    __end_of___ftsub 3C2C  
                  __end_of___fttol 25AA                              _T2CON 000FCA  
                            i1l272 3F94                              i1l295 430C  
                            i1l761 2EAC                     ?_SetADCChannel 002B  
                            i1l934 00A6                              i1l929 009A  
 __size_of_ResetAccumulatedCurrent 002C                              i2l923 35F8  
                            i2l926 3604                      _UltrasoundISR 4068  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                   PutCharTxBuf@ch 0077              ??_SendStoredPIDValues 007E  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                              _TRISG 000F98  
                            _TRISJ 000F9A               ?_ConfigureInterrupts 002B  
            __size_of_Delay10KTCYx 001E                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                      __CFG_WRT5$OFF 000000  
                     ___lltoft@exp 0080                      __CFG_WRT6$OFF 000000  
                    __CFG_WRT7$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                     __CFG_EBTR5$OFF 000000  
                   __CFG_EBTR6$OFF 000000                     __CFG_EBTR7$OFF 000000  
           WriteCharEEPROM@address 0073                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   i1___awmod@sign 0030                     __CFG_EBTRB$OFF 000000  
                    ___awtoft@sign 007B                 __size_ofi1_ReadADC 0010  
                            _floor 2900                              _isrHP 0008  
                            _ldexp 27EA                              _isrLP 0018  
                            _frexp 319E                              _errno 00DD  
                    ___ftpack@sign 0074                         _Read1USART 4250  
                       _ConvertADC 4612                    ??_LoadPIDValues 007D  
                   __CFG_BOREN$OFF 000000                              tablat 000FF5  
                            pow@yi 00C2                         _ReadEEPROM 4182  
           __end_of_ReadCharEEPROM 4504                              status 000FD8  
            SendStoredPIDValues@Kd 007A              SendStoredPIDValues@Ki 007C  
            SendStoredPIDValues@Kp 0078                    ?_WirelessTx_ISR 002B  
               __size_ofi1___awmod 0082                        _OWWriteByte 4156  
                    _SetDCMotorPID 3034                     ?_BusySensorAcq 002B  
                      exp@exponent 00B2                     ?_ReadIntEEPROM 0072  
                    ?_SetPIDValues 002B                         _FlushRxBuf 3FCC  
                  _ConfigureTimer0 440A                    _ConfigureTimer1 43DC  
                  _ConfigureTimer2 45F0                        ldexp@newexp 00A6  
                       _FlushTxBuf 3F96                 __size_of_OWReadBit 0030  
                  __initialization 41AE                   ?_LoadCalibration 002B  
                      log@exponent 00A6                        _GetDistance 4460  
               main@sensor_sum_ptr 014D                       __end_of_main 1792  
                       _ReadTimer1 44D0                __size_of_PB1pressed 005E  
              __size_of_PB2pressed 005E                       _Delay10KTCYx 434E  
                    ??_SendOffsets 007A             __end_of_ReadEchoLength 45CC  
          __size_of_WriteIntEEPROM 0032                   _CommandAvailable 4570  
                       _Open1USART 3436                   __end_of_OpenPWM4 42E8  
                 __end_of_OpenPWM5 42C2                             ??_main 013C  
             __end_of_ConfigureADC 4488                      ___fttol@sign1 0094  
                   ?_UltrasoundISR 002B                      i2_WriteTimer0 44E2  
             __end_of_ConfigurePWM 459A                      i2_WriteTimer1 44BE  
                    __activetblptr 000003                  ReadVoltage@result 0078  
              __end_of_ReadMillis0 45C2                __end_of_ReadMillis1 45B8  
              __end_of_ReadMillis2 45E0              ??_ConfigureInterrupts 0070  
               __size_of_FlashLEDS 0028                         _SetChanADC 436C  
              _ConfigureUltrasound 4200                        ?_OWReadByte 002B  
      __size_of_CalibrateThreshold 0050            __end_of_BusyDistanceAcq 4544  
              __end_of_SetDCMotorL 4570                __end_of_SetDCMotorR 4562  
              __end_of_ReadVoltage 39BA              __end_of_DisableMotors 461E  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                  ReadEEPROM@address 0070  
                           ?_floor 00A4                             ?_isrHP 002B  
                           ?_ldexp 00A3                             ?_isrLP 002B  
                           ?_frexp 0070                   __end_of___altoft 3436  
                           _ADRESH 000FC4                             _EEADRH 000FAA  
                           _ADRESL 000FC3                             _EEDATA 000FA8  
                      ?_Delay1TCYx 002B                      ??_SetUnipolar 0070  
                           _CCPR4L 000F74                             _CCPR5L 000F71  
                           _EECON2 000FA7                    i1_SetADCChannel 2DC4  
                 __end_of___awtoft 3C74                   __end_of___ftpack 27EA  
        ??_NormaliseSensorReadings 0070                   __end_of___lbtoft 412A  
                       _SendStatus 3E7C                   __end_of___lltoft 35BE  
                           i1l1040 4552                             i1l1431 353C  
                        ??_OWReset 0070                    __CFG_BBSIZ$BB2K 000000  
                           i1l5171 3516                             i1l5163 34EE  
                           i1l5155 34D2                             i1l5219 4446  
                           i1l5165 34F8                             i1l5167 3500  
                           i1l5175 3522                             i1l5159 34E0  
                           i1l6119 0092                             i1l5179 3532  
                       _OpenTimer0 4276                         _OpenTimer1 4002  
                       _OpenTimer2 430E                             i1l5911 2DE8  
                           i1l5903 2DC8                             i1l5921 2E10  
                           i1l5913 2DF0                             i1l5905 2DD0  
                           i1l5659 4304                             i1l5931 2E38  
                           i1l5923 2E18                             i1l5915 2DF8  
                           i1l5907 2DD8                             i1l5933 2E40  
                           i1l5925 2E20                             i1l5917 2E00  
                           i1l5909 2DE0                             i1l5927 2E28  
                           i1l5919 2E08                             i1l5929 2E30  
                           i1l5937 2E48                             i2l7743 4094  
                           _RCREG1 000FAE                             _RCSTA1 000FAB  
                           _PID_Kd 00D5                             _PID_Ki 00D7  
                           _PID_Kp 00E9           GenerateCalibration@index 007F  
                           _SPBRG1 000FAF                    ?_ReadCharEEPROM 0072  
               __size_of_SetDCPWM4 0044                 __size_of_SetDCPWM5 0044  
                 _CalibrateOffsets 3730                     ?_SetDCMotorPID 0078  
                        ??_BusyADC 0070                             _TXREG1 000FAD  
                        ??_ReadADC 0072                             _TXSTA1 000FAC  
             ?_ConfigureUltrasound 0074                _SetDirectionForward 45FE  
                   ??_SetPIDValues 0079                        ?_OWWriteBit 002B  
            __size_of_GetCharRxBuf 0046                          ??_OpenADC 0072  
           CalculateSensorSums@sum 00C9              __size_of_GetCharTxBuf 0038  
       _sensor_readings_normalised 0132                             _BusyTx 4504  
                   __CFG_XINST$OFF 000000                        ?_GetCommand 002B  
                ?_SetReverseMotorL 002B                             ___ftge 2EAE  
                        ??_StartTx 0070                  __end_ofi1_ReadADC 4554  
                           ___wmul 3F26                _sensor_readings_raw 00CB  
           ?_DisplaySensorStatuses 0070                          ??___ftadd 0091  
                        ??___awmod 0074                          ??___ftdiv 007E  
                        ??___ftneg 0073                          ??___ftmul 0082  
                        ??___ftsub 009D                          ??___fttol 008F  
                 OpenTimer0@config 0070                 ??_SetReverseMotorL 0070  
                 OpenTimer1@config 0070                    ?_ReadEchoLength 0070  
           SendCurrentPIDValues@Kd 007A             SendCurrentPIDValues@Ki 007C  
           SendCurrentPIDValues@Kp 0078                   OpenTimer2@config 0070  
                           clear_0 41B4                             clear_1 41C0  
                           clear_2 41CC                    ___awmod@divisor 0072  
                  ??_SetADCChannel 0072                     ?i2_WriteTimer0 0044  
                   ?i2_WriteTimer1 0044                    ___awmod@counter 0074  
            ReadCharEEPROM@address 0072                      ?_SendLineMode 0078  
         __size_of_WriteCharEEPROM 0012                             floor@i 00A7  
                           floor@x 00A4              ___ftmul@f3_as_product 0086  
                __end_ofi1___awmod 353E               ?_SetDirectionForward 002B  
              __end_of_SendOffsets 3394                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                  __end_of_OWReadBit 40CA  
            WriteIntEEPROM@address 0073               _CalculateSensorError 2F7C  
               main@find_line_flag 0146                        ?_Read1USART 002B  
                     _GetCharRxBuf 3C74                        ?_ConvertADC 002B  
                     _GetCharTxBuf 3F5E            __end_of_ConfigureTimer0 4420  
          __end_of_ConfigureTimer1 43F4                   __end_ofexp@coeff 101F  
          __end_of_ConfigureTimer2 45F8                      main@stop_flag 0159  
                 _ConfigureBuggyIO 43A8                   __end_oflog@coeff 103A  
                      ?_ReadEEPROM 0070                         __accesstop 0060  
          __end_of__initialization 41D2                         ___altoft@c 009A  
            __size_of_EnableMotors 0004                    ??_BusySensorAcq 0070  
                       ___ftadd@f1 008B                         ___ftadd@f2 008E  
               _millisecond_COUNT0 000D                 _millisecond_COUNT1 000F  
               _millisecond_COUNT2 0011                    ??_ReadIntEEPROM 0074  
                       _StopMotors 4330                         ___ftge@ff1 0070  
                       ___ftge@ff2 0073              ??_ConfigureUltrasound 007A  
         ??_SendBattVoltageInitial 007A      ConfigureUltrasound@echo_to_cm 0074  
    ConfigureUltrasound@echo_to_in 0077                       eval_poly@res 00A0  
                    ___rparam_used 000001                         ___ftdiv@f1 0078  
                       ___ftdiv@f2 007B                         ___ftdiv@f3 0082  
              __end_of_SetUnipolar 45FE                  __end_of_FlashLEDS 4200  
     __end_of_SendDefaultPIDValues 38E6                         ___ftneg@f1 0070  
                       ___awtoft@c 0078                         ___lbtoft@c 007B  
                      ?_FlushRxBuf 002B                        ?_FlushTxBuf 002B  
              __size_of_OWReadByte 0038                         ___ftmul@f1 007C  
                       ___ftmul@f2 007F                         ___ftsub@f1 0097  
                       ___ftsub@f2 009A                         ___fttol@f1 008B  
                   __pcstackCOMRAM 002B                        ?_ReadTimer1 0044  
                       ___lltoft@c 0078                        _ReadMillis0 45B8  
                      _ReadMillis1 45AE                        _ReadMillis2 45D6  
                    __end_of_floor 29FC                      __end_of_isrHP 363E  
                    __end_of_ldexp 2900                      __end_of_isrLP 00EC  
                    __end_of_frexp 324C                __size_of_Delay1TCYx 0010  
                  ??_UltrasoundISR 0046                        _SetDCMotorL 4562  
                      _SetDCMotorR 4554                     ??_SendLineMode 007A  
                      ?_Open1USART 0070            _ResetAccumulatedCurrent 412A  
                __end_of_SetDCPWM4 3CFE                  __end_of_SetDCPWM5 3D42  
                      _ReadVoltage 3950              ??_SetDirectionForward 0070  
                    ?_ResetMillis0 002B                      ?_ResetMillis1 002B  
                    ?_ResetMillis2 002B                i1SetChanADC@channel 002C  
                      ?_SetChanADC 002B            __end_ofi1_SetADCChannel 2EAE  
                  _sensor_acq_done 0020        __end_of_MillisecondTimerISR 43DC  
             ReadIntEEPROM@address 0072       CalculateSensorStatuses@index 0073  
                 ?_BusyDistanceAcq 002B                __size_of_OWWriteBit 003A  
            ?_CalculateSensorError 0070                       _EnableMotors 4616  
                     ??_PB1pressed 0072                       ??_PB2pressed 0072  
              __size_of_GetCommand 0008                            ??_floor 00A7  
                          ??_isrHP 0062                            ??_ldexp 00A8  
                          ??_isrLP 0033        __end_of_GenerateCalibration 26CA  
                          ??_frexp 0075                        ?_SendStatus 002B  
                       __pbssBANK0 00CB                         __pbssBANK1 0100  
                  ??_SetDCMotorPID 007A                        ?_OpenTimer0 002B  
                      ?_OpenTimer1 002B                        ?_OpenTimer2 002B  
               __size_of_eval_poly 00F6                      ??_Write1USART 002B  
     __end_of_SendCurrentPIDValues 3950            main@battery_current_acc 0147  
           __size_of_SendThreshold 006C                  ?_EnableSensorLEDS 002B  
          main@battery_current_ptr 0140                      ??_WriteEEPROM 0073  
                        ?_OpenPWM4 002B                          ?_OpenPWM5 002B  
                          ?_BusyTx 002B                 ??_EnableSensorLEDS 0070  
          CalculateSensorError@sum 0070                            ?___ftge 0070  
            __size_of_ConfigureADC 0014                            ?___wmul 0070  
                      _RxCharacter 0013              __size_of_ConfigurePWM 000E  
                  ??i2_WriteTimer0 0046                    ??i2_WriteTimer1 0046  
               __end_of_PB1pressed 3B3C                     _WriteIntEEPROM 4036  
                          _CCP4CON 000F73                            _CCP5CON 000F70  
                 WriteTimer0@timer 0072                          ?___altoft 009A  
               __end_of_PB2pressed 3A80                        _SendOffsets 32F2  
                 WriteTimer1@timer 0072                      ??_WriteTimer0 0072  
                    ??_WriteTimer1 0072                __size_of_Read1USART 0026  
              __size_of_ConvertADC 0004                          ?___awtoft 0078  
                        ?___ftpack 0070                          ?___lbtoft 0078  
                    ?_PutCharRxBuf 002B                   SendOffsets@index 007C  
                    ?_PutCharTxBuf 002B                     ??_ResetMillis0 0070  
                   ??_ResetMillis1 0070                     ??_ResetMillis2 0070  
                        ?___lltoft 0078                __size_of_ReadEEPROM 002C  
                 Open1USART@config 0072             SetPIDValues@char_index 007C  
             __end_of_SetPIDValues 21F6                __size_of_FlushRxBuf 0036  
                          _SPBRGH1 000F7F                __size_of_FlushTxBuf 0036  
                ??_WriteCharEEPROM 0076                        _TxCharacter 0017  
                 ??_WirelessTx_ISR 0033                        _SetUnipolar 45F8  
              __size_of_ReadTimer1 0012                            _OWReset 3EB6  
         __end_of_CommandAvailable 457E             SetDCMotorPID@PIDoutput 0078  
                 ?_ConfigureTimer0 002B                   ?_ConfigureTimer1 002B  
                 ?_ConfigureTimer2 002B                         _convert_cm 0168  
                       _convert_in 016B       __size_of_CalculateSensorSums 00A6  
                      ?_StopMotors 002B                __size_of_Open1USART 0086  
                     ?_OWWriteByte 002B                       _ConfigureADC 4474  
                          _BusyADC 457E                            _ReadADC 444C  
                     _ConfigurePWM 458C                i2WriteTimer0@timer0 0044  
                       ??_OpenPWM4 0070                         ??_OpenPWM5 0070  
  __size_of_SendBattVoltageInitial 0068                i2WriteTimer1@timer1 0044  
                          _OpenADC 363E                            __Hparam 0000  
              __size_of_SetChanADC 001E                    __size_of_BusyTx 0010  
                          __Lparam 0000                __end_of_Write1USART 444C  
                     ?_GetDistance 002B             __end_of_WriteIntEEPROM 4068  
                          _StartTx 45E0                    __size_of___ftge 00CE  
                          ___ftadd 1792                            ___awmod 30EA  
                          ___ftdiv 21F6                            ___ftneg 40CA  
                  __size_of___wmul 0038                            ___ftmul 1F58  
        ??_ResetAccumulatedCurrent 0073                            ___ftsub 3BDC  
                          ___fttol 2478                __end_of_WriteEEPROM 3E06  
                    ?i1_ConvertADC 002B                       __psmallconst 1000  
                ReadIntEEPROM@data 0077        __end_of_SendStoredPIDValues 387C  
                       ??___altoft 009E                     ??_PutCharRxBuf 0076  
                  __CFG_STVREN$OFF 000000                     ??_PutCharTxBuf 0076  
                          __pcinit 41AE                 WriteEEPROM@address 0070  
                       ??___awtoft 007B                         ??___ftpack 0075  
                       ??___lbtoft 007B                  __end_of_eval_poly 2BE8  
                          __ramtop 1000                __size_of_SendStatus 003A  
                   main@loop_count 0144                __size_of_OpenTimer0 0026  
              __size_of_OpenTimer1 0034                __size_of_OpenTimer2 0022  
                       ??___lltoft 007C                            __ptext0 103C  
                          __ptext1 4330                            __ptext2 45F8  
                          __ptext3 460A                            __ptext4 460E  
                          __ptext5 45FE                            __ptext6 3034  
                          __ptext7 4554                            __ptext8 3CBA  
                          __ptext9 4562                       _get_Rx_index 001B  
         __end_of_CalibrateOffsets 37A6                      _SendThreshold 37A6  
                        _T0CONbits 000FD5           ?_CalculateSensorStatuses 002B  
                        _T1CONbits 000FCD                       _get_Tx_index 001C  
                     ??_OWReadByte 0071                          _T2CONbits 000FCA  
                     __size_of_exp 0228                       __size_of_log 0140  
           ??_CalculateSensorError 0072                       __size_of_pow 019A  
                 ?i1_SetADCChannel 002B                          _T3CONbits 000FB1  
                 ___awmod@dividend 0070                          _T4CONbits 000F76  
             _SendDefaultPIDValues 387C                __end_of_WriteTimer0 44BE  
              __end_of_WriteTimer1 44AC                   ??_ReadCharEEPROM 0074  
                     ??_Delay1TCYx 0070                     OpenADC@config2 0070  
                   __pintcode_body 35BE                  _GetSensorReadings 43F4  
             end_of_initialization 41D2                            exp@sign 00B4  
                   main@sensor_sum 0167                    FlushRxBuf@index 0070  
               ?_GetSensorReadings 002B              __end_of_LoadPIDValues 2AF2  
             __end_of_SendLineMode 3E42                            int_func 35BE  
              main@battery_current 014B                      ?i1_SetChanADC 002B  
                     ??_OWWriteBit 0070            ??_DisplaySensorStatuses 0072  
                          pow@sign 00C1                   ??_ReadEchoLength 0072  
                      _Rx_complete 0015                       ??_GetCommand 0071  
              ??_GetSensorReadings 0073                 __end_of_OWReadByte 3F26  
                  ?_WriteIntEEPROM 0073                            postdec2 000FDD  
              main@battery_voltage 0155                            postinc0 000FEE  
                          postinc2 000FDE                     ??i1_ConvertADC 002B  
                        _PID_error 00D9        __end_of_ConfigureInterrupts 4250  
               __end_of_Delay1TCYx 4534                    FlushTxBuf@index 0070  
         __end_of_ConfigureBuggyIO 43C2                     ?_SendThreshold 0078  
       __end_of_CalibrateThreshold 3B8C                     GetCharRxBuf@ch 0077  
                        i1_ReadADC 4544                          _PORTBbits 000F81  
                        _PORTHbits 000F87           __size_of_LoadCalibration 0186  
                   GetCharTxBuf@ch 0032             _SendBattVoltageInitial 39BA  
                _SetForwardsMotorR 460E               _SendCurrentPIDValues 38E6  
              __size_of_StopMotors 001E              ?_SendDefaultPIDValues 0078  
                      _Tx_complete 0018                          _TRISCbits 000F94  
               ?_SetForwardsMotorR 002B          __size_of_SetReverseMotorL 0004  
                        _TRISGbits 000F98                          _TRISHbits 000F99  
                       main@D_temp 0157                 __end_of_OWWriteBit 3E7C  
        __end_of_GetSensorReadings 440A                          i1___awmod 34BC  
                       main@I_temp 0165             main@wall_detected_flag 0154  
                     ??_Read1USART 0070                 __end_of_GetCommand 45F0  
                     ??_ConvertADC 0070                          _OWReadBit 409A  
              ??_SetForwardsMotorR 0070                       ??_ReadEEPROM 0072  
                      _Write1USART 4436                        ___ftdiv@exp 0085  
                   ??i1_SetChanADC 002B               __end_of_ResetMillis0 45AE  
             __end_of_ResetMillis1 45A4               __end_of_ResetMillis2 45D6  
           i1SetADCChannel@channel 002D                        _WriteEEPROM 3DC6  
                     ??_FlushRxBuf 0070                       ??_FlushTxBuf 0070  
                      ___ftmul@exp 0085              SetDCMotorL@duty_cycle 0076  
                   __end_of_BusyTx 4514                  _ConfigureWireless 438A  
                     ??_ReadTimer1 0046                          _FlashLEDS 41D8  
                     ?_ReadMillis0 0070                       ?_ReadMillis1 0070  
                     ?_ReadMillis2 0070               _second_rollover_flag 001F  
           __size_of_DisableMotors 0004    __end_of_CalculateSensorStatuses 2CD6  
                   __end_of___ftge 2F7C                 ?_ConfigureWireless 002B  
                   __end_of___wmul 3F5E                       ?_SetDCMotorL 0076  
                     ?_SetDCMotorR 0076                       ??_Open1USART 0072  
            __size_of_SetPIDValues 0142                        _WriteTimer0 44AC  
                      _WriteTimer1 449A          __end_of_SetForwardsMotorR 4612  
               __end_of_Read1USART 4276                         ?i1_ReadADC 002B  
               __end_of_ConvertADC 4616                       ?_ReadVoltage 0073  
            ?_SendCurrentPIDValues 0078                         floor@expon 00AA  
            __end_of_SetADCChannel 2DC4                       ??_SetChanADC 0070  
               __end_of_ReadEEPROM 41AE            main@battery_voltage_ptr 0151  
              ??_ConfigureWireless 0073                start_initialization 41AE  
         ?_NormaliseSensorReadings 002B                         eval_poly@d 009A  
                       eval_poly@n 009C                         eval_poly@x 0097  
                       ldexp@value 00A3                          _SetDCPWM4 3CBA  
                        _SetDCPWM5 3CFE                        __end_of_exp 1C38  
                      __end_of_log 2478                        __end_of_pow 1DD2  
                       ?i1___awmod 002B                 __end_of_FlushRxBuf 4002  
               __end_of_FlushTxBuf 3FCC                    SetDCPWM4@DCycle 0074  
      __end_of_ConfigureUltrasound 4228                    SetDCPWM5@DCycle 0074  
                     ??_SendStatus 0078                       ??_OpenTimer0 0070  
                     ??_OpenTimer1 0070                       ??_OpenTimer2 0070  
                       ?_OWReadBit 002B                      _echo_acq_done 001A  
               __end_of_ReadTimer1 44E2                   OWReadByte@result 0071  
             __end_of_PutCharRxBuf 3D84                         frexp@value 0070  
             __end_of_PutCharTxBuf 3DC6                        _SystemClock 0001  
                 _sensor_acq_index 0021                 __end_of_Open1USART 34BC  
            __end_of_BusySensorAcq 4524               SetADCChannel@channel 0072  
            __end_of_ReadIntEEPROM 3ADE          __end_of_ConfigureWireless 43A8  
                         ??_BusyTx 0070  DisplaySensorStatuses@status_array 0070  
             __size_of_OWWriteByte 002C                       _SetPIDValues 20B4  
               __end_of_SetChanADC 438A                  __size_of_OpenPWM4 0026  
                __size_of_OpenPWM5 0026                           ??___ftge 0076  
                         ??___wmul 0074                         ?_FlashLEDS 002B  
      __end_of_SetDirectionForward 4604                    ??_SendThreshold 007A  
               i1___awmod@dividend 002B                   __CFG_LPT1OSC$OFF 000000  
             __size_of_GetDistance 0014                       ?_SendOffsets 0078  
                        _Rx_buffer 0100                    _WriteCharEEPROM 4488  
        __size_of_EnableSensorLEDS 0006                _CalculateSensorSums 324C  
               __end_of_SendStatus 3EB6              __end_of_UltrasoundISR 409A  
               __end_of_OpenTimer0 429C                 __end_of_OpenTimer1 4036  
               __end_of_OpenTimer2 4330                  __size_of___altoft 00A2  
                     OWWriteByte@i 0072             ??_SendDefaultPIDValues 007E  
                        _Tx_buffer 0119                  __size_of___awtoft 0048  
                __size_of___ftpack 0120                  __size_of___lbtoft 0030  
                __size_of___lltoft 0080                        __pbssCOMRAM 0001  
                    __pcstackBANK0 0060                      __pcstackBANK1 013C  
                       ?_SetDCPWM4 0070                         ?_SetDCPWM5 0070  
       __size_of_GetSensorReadings 0016              __size_of_SendLineMode 003C  
                ??_LoadCalibration 0080                      _DisableMotors 461A  
                     ?_SetUnipolar 002B               __end_ofi1_ConvertADC 4622  
     __size_of_MillisecondTimerISR 001A                           ?_OWReset 002B  
                ?_CommandAvailable 002B           __size_of_BusyDistanceAcq 0010  
             ?_CalculateSensorSums 002B              __end_of_SetDCMotorPID 30EA  
                     ??_StopMotors 0078                 WriteIntEEPROM@data 0075  
                         ?_BusyADC 002B                           ?_ReadADC 0070  
                        __pnvBANK0 00EB                          __pnvBANK1 0168  
     __size_of_GenerateCalibration 0120                 ??_CommandAvailable 0070  
                OpenADC@portconfig 0071                           ?_OpenADC 0070  
                   _sensor_offsets 00DF                          _echo_time 000B  
                __CFG_CCP2MX$PORTC 000000                          __pintcode 0008  
                  main@command_msg 015E                           ?_StartTx 002B  
                        __ptext100 2478                          __ptext101 2EAE  
                        __ptext110 3C2C                          __ptext102 3394  
                        __ptext111 353E                          __ptext103 2AF2  
                        __ptext120 461E                          __ptext112 40FA  
                        __ptext104 3F26                          __ptext121 42E8  
                        __ptext113 26CA                          __ptext105 1F58  
                        __ptext130 44E2                          __ptext122 4436  
                        __ptext114 2F7C                          __ptext106 3BDC  
                        __ptext123 3F5E                          __ptext115 4534  
                        __ptext107 1792                          __ptext124 34BC  
                        __ptext108 40CA                          __ptext117 2DC4  
                        __ptext109 21F6                           ?___ftadd 008B  
                        __ptext126 4068                          __ptext118 4420  
                        __ptext127 44BE                          __ptext119 4544  
                        __ptext128 44D0                          __ptext129 43C2  
                         ?___awmod 0070                        OWReadByte@i 0072  
                         ?___ftdiv 0078                           ?___ftneg 0070  
                         ?___ftmul 007C                           ?___ftsub 0097  
                         ?___fttol 008B                      ?_Delay10KTCYx 002B  
      main@battery_current_acc_ptr 0142                        __pintcodelo 0018  
                  Open1USART@spbrg 0070         __size_of_SetForwardsMotorR 0004  
           ??_SendCurrentPIDValues 007E              __end_ofi2_WriteTimer0 44F4  
            __end_ofi2_WriteTimer1 44D0    __end_of_NormaliseSensorReadings 3730  
                      ??i1_ReadADC 002D                   _sensor_threshold 0028  
                     _SendLineMode 3E06                  ?_CalibrateOffsets 002B  
            SendLineMode@line_mode 0078                        __smallconst 1000  
                WriteTimer0@timer0 0070               __end_ofi1_SetChanADC 4436  
                WriteTimer1@timer1 0070                          _eval_poly 2AF2  
               i2WriteTimer0@timer 0060                 __end_of_StopMotors 434E  
               i2WriteTimer1@timer 0060                 ??_CalibrateOffsets 0073  
                 _SetReverseMotorL 460A                        ??i1___awmod 002F  
                   ?_DisableMotors 002B                          _line_mode 002A  
                   __size_of_floor 00FC                     __size_of_isrHP 3636  
                   __size_of_ldexp 0116                     __size_of_isrLP 00D4  
                   __size_of_frexp 00AE                    Write1USART@data 002B  
            __size_of_ResetMillis0 000A              __size_of_ResetMillis1 000A  
            __size_of_ResetMillis2 000A                    OWReadBit@result 0070  
                      ??_OWReadBit 0070              ??_CalculateSensorSums 00C6  
 __size_of_CalculateSensorStatuses 00EE                     ___wmul@product 0074  
                    OpenADC@config 0074                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LATHbits 000F90  
                 ??_WriteIntEEPROM 0077                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D         __size_of_ConfigureWireless 001E  
       DisplaySensorStatuses@index 0074        main@send_battery_stats_flag 0145  
           SendDefaultPIDValues@Kd 007A             SendDefaultPIDValues@Ki 007C  
           SendDefaultPIDValues@Kp 0078                           _PIR1bits 000F9E  
                         _DCmotorL 0007                           _DCmotorR 0009  
            __CFG_DATABW$DATA16BIT 000000            __end_of_WriteCharEEPROM 449A  
   __size_of_DisplaySensorStatuses 0050                           _RCONbits 000FD0  
         __size_of_ConfigureTimer0 0016           __size_of_ConfigureTimer1 0018  
         __size_of_ConfigureTimer2 0008      __end_of_DisplaySensorStatuses 3BDC  
                 __CFG_WDTPS$32768 000000                     ??_Delay10KTCYx 0070  
            SetDCMotorR@duty_cycle 0076                        ??_FlashLEDS 0072  
          ?_SendBattVoltageInitial 0078               __size_of_ReadMillis0 000A  
             __size_of_ReadMillis1 000A               __size_of_ReadMillis2 000A  
                        main@I_max 015A                          main@I_min 015C  
                __CFG_ECCPMX$PORTH 000000                         _ADCON0bits 000FC2  
                ?_ConfigureBuggyIO 002B                  ___wmul@multiplier 0070  
             __size_of_SetDCMotorL 000E               __size_of_SetDCMotorR 000E  
                     _ResetMillis0 45A4                       _ResetMillis1 459A  
                     _ResetMillis2 45CC                 ??_ConfigureBuggyIO 0070  
                       ?_eval_poly 0097               __size_of_ReadVoltage 006A  
     __size_of_SendStoredPIDValues 006A                        ??_SetDCPWM4 0072  
                      ??_SetDCPWM5 0072                   Delay10KTCYx@unit 0071  
    __size_of_CalculateSensorError 00B8              __size_of_PutCharRxBuf 0042  
            __size_of_PutCharTxBuf 0042           CalculateSensorSums@index 00CA  
                      _INTCON2bits 000FF1                      ?_GetCharRxBuf 002B  
                      _INTCON3bits 000FF0                      ?_GetCharTxBuf 002B  
               _CalibrateThreshold 3B3C           __size_ofi1_SetADCChannel 00EA  
                 __size_of_OWReset 0038                       ?_Write1USART 002B  
                        frexp@eptr 0073                         _EECON1bits 000FA6  
                         _OpenPWM4 42C2                           _OpenPWM5 429C  
                     ?_WriteEEPROM 0070                ?_CalibrateThreshold 002B  
                 __size_of_BusyADC 000E                   __size_of_ReadADC 0014  
                         __Hrparam 0000           ?_ResetAccumulatedCurrent 002B  
          __size_of_WirelessTx_ISR 0026                   __size_of_OpenADC 007C  
                         __Lrparam 0000      SendThreshold@sensor_threshold 0078  
                ??_BusyDistanceAcq 0070           _CalculateSensorSums$3769 00C6  
   __end_of_SendBattVoltageInitial 3A22                  i1___awmod@divisor 002D  
                      OWWriteBit@b 0070                  i1___awmod@counter 002F  
                 __size_of_StartTx 0008                   __size_of___ftadd 027E  
                 __size_of___awmod 00B4                   __size_of___ftdiv 0142  
                 __size_of___ftneg 0030                           ___altoft 3394  
                 __size_of___ftmul 015C                   __size_of___ftsub 0050  
                 __size_of___fttol 0132                       ?_WriteTimer0 0070  
                     ?_WriteTimer1 0070                           ___awtoft 3C2C  
                         ___ftpack 26CA                           ___lbtoft 40FA  
                 _EnableSensorLEDS 4604                           ___lltoft 353E  
                     _PutCharRxBuf 3D42                       _PutCharTxBuf 3D84  
             __size_of_SendOffsets 00A2             __size_of_LoadPIDValues 00F6  
              _system_clock_enable 0022               ??_CalibrateThreshold 0075  
                         _exp$3772 00AF       __size_of_ConfigureInterrupts 0028  
            __size_ofi1_ConvertADC 0004                    ??_DisableMotors 0070  
                    ?_EnableMotors 002B                 SetDCPWM4@dutycycle 0070  
                   OpenPWM4@period 0070                           __ptext10 3CFE  
                         __ptext11 3812                           __ptext20 4156  
                         __ptext12 3E06                           __ptext21 3E42  
                         __ptext13 387C                           __ptext30 3D42  
                         __ptext22 3EB6                           __ptext14 38E6  
                    _sensor_status 0023                           __ptext31 3C74  
                         __ptext23 3EEE                           __ptext15 39BA  
                         __ptext40 3DC6                           __ptext32 3A22  
                         __ptext24 409A                           __ptext16 459A  
                         __ptext41 37A6                           __ptext33 1DD2  
                         __ptext25 45AE                           __ptext17 45A4  
                         __ptext50 45D6                           __ptext42 3E7C  
                         __ptext34 3A80                           __ptext26 45B8  
                         __ptext18 412A                           __ptext51 45E8  
                         __ptext43 32F2                           __ptext35 44F4  
                         __ptext27 45C2                           __ptext19 3950  
                         __ptext60 2BE8                           __ptext52 4250  
                         __ptext44 45E0                           __ptext36 4182  
                         __ptext28 29FC                           __ptext61 457E  
                         __ptext53 4570                           __ptext45 3D84  
                         __ptext37 25AA                           __ptext29 20B4  
                         __ptext70 4604                           __ptext62 3730  
                         __ptext54 41D8                           __ptext46 30EA  
                         __ptext38 4036                           __ptext71 4616  
                         __ptext63 43F4                           __ptext55 434E  
                         __ptext47 4504                           __ptext39 4488  
                         __ptext80 43DC                           __ptext72 461A  
                         __ptext64 2CD6                           __ptext56 3B3C  
                         __ptext48 3ADE                           __ptext81 449A  
                         __ptext73 438A                           __ptext65 436C  
                         __ptext57 444C                           __ptext49 45CC  
                         __ptext90 43A8                           __ptext82 4002  
                         __ptext74 3436                           __ptext66 4612  
                         __ptext58 36BA                           __ptext91 4474  
                         __ptext83 440A                           __ptext75 3F96  
                         __ptext67 4514                           __ptext59 3B8C  
                         __ptext92 363E                           __ptext84 44AC  
                         __ptext76 3FCC                           __ptext68 4460  
                         __ptext93 324C                           __ptext85 4276  
                         __ptext77 4200                           __ptext69 4524  
                         __ptext94 1C38                           __ptext86 458C  
                         __ptext78 45F0                           __ptext95 2338  
                         __ptext87 429C                           __ptext79 430E  
                         __ptext96 1A10                           __ptext88 42C2  
                         __ptext97 27EA                           __ptext89 4228  
                   OpenPWM5@period 0070                           __ptext98 2900  
                         __ptext99 319E                     ??_GetCharRxBuf 0076  
                   ??_GetCharTxBuf 0031                           _pow$3770 00BB  
                         _pow$3771 00BE                 SetDCPWM5@dutycycle 0070  
             __size_of_SetUnipolar 0006                      __size_of_main 0756  
                   Delay1TCYx@unit 0070   __size_of_NormaliseSensorReadings 0076  
          __size_of_ReadCharEEPROM 0010                   ?_WriteCharEEPROM 0073  
            __size_ofi1_SetChanADC 0016                       i1_ConvertADC 461E  
              _MillisecondTimerISR 43C2                    _LoadCalibration 1DD2  
                    _USART1_Status 0019                  ??_ConfigureTimer0 0074  
                ??_ConfigureTimer1 0074                  ??_ConfigureTimer2 0071  
                         exp@coeff 1001            __size_of_ReadEchoLength 000A  
                         log@coeff 101F              __CFG_ADDRBW$ADDR20BIT 000000  
     NormaliseSensorReadings@index 0074                _GenerateCalibration 25AA  
                       _INTCONbits 000FF2                        ??_eval_poly 009E  
                   ??_EnableMotors 0070                  _Rx_chars_received 0014  
                       _PB1pressed 3ADE                         _PB2pressed 3A22  
                    OWReset@result 0070               __end_of_Delay10KTCYx 436C  
             ?_MillisecondTimerISR 002B                           intlevel1 0000  
                         intlevel2 0000            _CalculateSensorStatuses 2BE8  
  __end_of_ResetAccumulatedCurrent 4156                      ??_OWWriteByte 0071  
                    ?_ConfigureADC 002B                      ?_ConfigurePWM 002B  
                    _LoadPIDValues 29FC               ?_GenerateCalibration 002B  
                SetChanADC@channel 0071                         _RCSTA1bits 000FAB  
     __size_of_ConfigureUltrasound 0028                    WriteEEPROM@data 0072  
                     i1_SetChanADC 4420                      _Rx_msg_length 0016  
           __size_of_SetADCChannel 00EE              SendStatus@status_code 0078  
                ??i1_SetADCChannel 002D           __end_of_SetReverseMotorL 460E  
                    ??_GetDistance 0071          __size_of_CommandAvailable 000E  
    SendBattVoltageInitial@reading 0078              __end_of_SendThreshold 3812  
                       _PID_output 00DB       __size_of_SetDirectionForward 0006  
         SendOffsets@offsets_array 0078             __size_of_BusySensorAcq 0010  
    __size_of_SendDefaultPIDValues 006A             __size_of_ReadIntEEPROM 005E  
            ??_MillisecondTimerISR 0046               _sensor_threshold_ptr 00EB  
                   ??_ConfigureADC 0075                     ??_ConfigurePWM 0071  
                   ?_LoadPIDValues 002B                    OWWriteByte@byte 0071  
        __size_of_CalibrateOffsets 0076              ??_GenerateCalibration 007D  
           __size_of_UltrasoundISR 0032               __size_of_Write1USART 0016  
                     _put_Rx_index 001D                     _WirelessTx_ISR 42E8  
              _SendStoredPIDValues 3812            __end_of_LoadCalibration 1F58  
                     _put_Tx_index 001E  
