

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 24 16:27:19 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   101  0000                     
   102                           	psect	smallconst
   103  001000                     __psmallconst:
   104                           	opt stack 0
   105  001000  00                 	db	0
   106  001001                     exp@coeff:
   107                           	opt stack 0
   108  001001  00                 	db	0
   109  001002  80                 	db	128
   110  001003  3F                 	db	63
   111  001004  72                 	db	114
   112  001005  31                 	db	49
   113  001006  3F                 	db	63
   114  001007  FE                 	db	254
   115  001008  75                 	db	117
   116  001009  3E                 	db	62
   117  00100A  58                 	db	88
   118  00100B  63                 	db	99
   119  00100C  3D                 	db	61
   120  00100D  95                 	db	149
   121  00100E  1D                 	db	29
   122  00100F  3C                 	db	60
   123  001010  C5                 	db	197
   124  001011  AE                 	db	174
   125  001012  3A                 	db	58
   126  001013  79                 	db	121
   127  001014  21                 	db	33
   128  001015  39                 	db	57
   129  001016  94                 	db	148
   130  001017  80                 	db	128
   131  001018  37                 	db	55
   132  001019  93                 	db	147
   133  00101A  A7                 	db	167
   134  00101B  35                 	db	53
   135  00101C  56                 	db	86
   136  00101D  15                 	db	21
   137  00101E  34                 	db	52
   138  00101F                     __end_ofexp@coeff:
   139                           	opt stack 0
   140  00101F                     log@coeff:
   141                           	opt stack 0
   142  00101F  00                 	db	0
   143  001020  00                 	db	0
   144  001021  00                 	db	0
   145  001022  00                 	db	0
   146  001023  80                 	db	128
   147  001024  3F                 	db	63
   148  001025  F0                 	db	240
   149  001026  FF                 	db	255
   150  001027  BE                 	db	190
   151  001028  E2                 	db	226
   152  001029  A9                 	db	169
   153  00102A  3E                 	db	62
   154  00102B  83                 	db	131
   155  00102C  76                 	db	118
   156  00102D  BE                 	db	190
   157  00102E  AE                 	db	174
   158  00102F  2B                 	db	43
   159  001030  3E                 	db	62
   160  001031  3C                 	db	60
   161  001032  C3                 	db	195
   162  001033  BD                 	db	189
   163  001034  D2                 	db	210
   164  001035  13                 	db	19
   165  001036  3D                 	db	61
   166  001037  78                 	db	120
   167  001038  D3                 	db	211
   168  001039  BB                 	db	187
   169  00103A                     __end_oflog@coeff:
   170                           	opt stack 0
   171  00103A  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	nvCOMRAM
   174  000048                     __pnvCOMRAM:
   175                           	opt stack 0
   176  000048                     _echo_acq_done:
   177                           	opt stack 0
   178  000048                     	ds	1
   179                           
   180                           	psect	nvBANK0
   181  0000D8                     __pnvBANK0:
   182                           	opt stack 0
   183  0000D8                     _convert_cm:
   184                           	opt stack 0
   185  0000D8                     	ds	3
   186  0000DB                     _convert_in:
   187                           	opt stack 0
   188  0000DB                     	ds	3
   189  0000                     _ADCON0	set	4034
   190  0000                     _ADCON0bits	set	4034
   191  0000                     _ADCON1	set	4033
   192  0000                     _ADCON2	set	4032
   193  0000                     _ADRESH	set	4036
   194  0000                     _ADRESL	set	4035
   195  0000                     _CCP4CON	set	3955
   196  0000                     _CCP5CON	set	3952
   197  0000                     _CCPR4L	set	3956
   198  0000                     _CCPR5L	set	3953
   199  0000                     _INTCON2bits	set	4081
   200  0000                     _INTCONbits	set	4082
   201  0000                     _IPR1bits	set	3999
   202  0000                     _LATDbits	set	3980
   203  0000                     _LATE	set	3981
   204  0000                     _LATEbits	set	3981
   205  0000                     _LATJ	set	3985
   206  0000                     _LATJbits	set	3985
   207  0000                     _PIE1bits	set	3997
   208  0000                     _PIR1bits	set	3998
   209  0000                     _PORTBbits	set	3969
   210  0000                     _PR2	set	4043
   211  0000                     _PR4	set	3959
   212  0000                     _RCONbits	set	4048
   213  0000                     _T0CON	set	4053
   214  0000                     _T0CONbits	set	4053
   215  0000                     _T1CON	set	4045
   216  0000                     _T1CONbits	set	4045
   217  0000                     _T2CON	set	4042
   218  0000                     _T2CONbits	set	4042
   219  0000                     _T3CONbits	set	4017
   220  0000                     _T4CONbits	set	3958
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223  0000                     _TMR1H	set	4047
   224  0000                     _TMR1L	set	4046
   225  0000                     _TMR2	set	4044
   226  0000                     _TRISA	set	3986
   227  0000                     _TRISB	set	3987
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TRISG	set	3992
   232  0000                     _TRISGbits	set	3992
   233  0000                     _TRISJ	set	3994
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  002F08                     __pcinit:
   239                           	opt stack 0
   240  002F08                     start_initialization:
   241                           	opt stack 0
   242  002F08                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (26 bytes)
   246  002F08  EE00  F0BE         	lfsr	0,__pbssBANK0
   247  002F0C  0E1A               	movlw	26
   248  002F0E                     clear_0:
   249  002F0E  6AEE               	clrf	postinc0,c
   250  002F10  06E8               	decf	wreg,f,c
   251  002F12  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to COMRAM (32 bytes)
   254  002F14  EE00  F028         	lfsr	0,__pbssCOMRAM
   255  002F18  0E20               	movlw	32
   256  002F1A                     clear_1:
   257  002F1A  6AEE               	clrf	postinc0,c
   258  002F1C  06E8               	decf	wreg,f,c
   259  002F1E  E1FD               	bnz	clear_1
   260  002F20                     end_of_initialization:
   261                           	opt stack 0
   262  002F20                     __end_of__initialization:
   263                           	opt stack 0
   264  002F20  0100               	movlb	0
   265  002F22  EF1E  F008         	goto	_main	;jump to C main() function
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssCOMRAM
   270  000028                     __pbssCOMRAM:
   271                           	opt stack 0
   272  000028                     _sensor_readings_raw:
   273                           	opt stack 0
   274  000028                     	ds	10
   275  000032                     _SystemClock:
   276                           	opt stack 0
   277  000032                     	ds	6
   278  000038                     _echo_time:
   279                           	opt stack 0
   280  000038                     	ds	2
   281  00003A                     _millisecond_COUNT:
   282                           	opt stack 0
   283  00003A                     	ds	2
   284  00003C                     _sensor_threshold:
   285                           	opt stack 0
   286  00003C                     	ds	2
   287  00003E                     _line_mode:
   288                           	opt stack 0
   289  00003E                     	ds	1
   290  00003F                     _second_rollover_flag:
   291                           	opt stack 0
   292  00003F                     	ds	1
   293  000040                     _sensor_acq_done:
   294                           	opt stack 0
   295  000040                     	ds	1
   296  000041                     _sensor_acq_index:
   297                           	opt stack 0
   298  000041                     	ds	1
   299  000042                     _system_clock_enable:
   300                           	opt stack 0
   301  000042                     	ds	1
   302  000043                     _sensor_status:
   303                           	opt stack 0
   304  000043                     	ds	5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	bssBANK0
   309  0000BE                     __pbssBANK0:
   310                           	opt stack 0
   311  0000BE                     _sensor_offsets:
   312                           	opt stack 0
   313  0000BE                     	ds	10
   314  0000C8                     _sensor_readings_normalised:
   315                           	opt stack 0
   316  0000C8                     	ds	10
   317  0000D2                     _PID_output:
   318                           	opt stack 0
   319  0000D2                     	ds	2
   320  0000D4                     _errno:
   321                           	opt stack 0
   322  0000D4                     	ds	2
   323  0000D6                     _PID_error:
   324                           	opt stack 0
   325  0000D6                     	ds	2
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329                           	psect	cstackBANK0
   330  000060                     __pcstackBANK0:
   331                           	opt stack 0
   332  000060                     ??_SetChanADC:
   333  000060                     ??_Delay10KTCYx:
   334  000060                     ??_NormaliseSensorReadings:
   335  000060                     ??_CalculateSensorStatuses:
   336  000060                     ?_ReadADC:
   337                           	opt stack 0
   338  000060                     ?_ReadEchoLength:
   339                           	opt stack 0
   340  000060                     ?_ReadMillis:
   341                           	opt stack 0
   342  000060                     ?_CalculateSensorError:
   343                           	opt stack 0
   344  000060                     ?___wmul:
   345                           	opt stack 0
   346  000060                     ?___ftpack:
   347                           	opt stack 0
   348  000060                     ?_frexp:
   349                           	opt stack 0
   350  000060                     ?___ftneg:
   351                           	opt stack 0
   352  000060                     OpenADC@config2:
   353                           	opt stack 0
   354  000060                     OpenPWM4@period:
   355                           	opt stack 0
   356  000060                     OpenPWM5@period:
   357                           	opt stack 0
   358  000060                     OpenTimer0@config:
   359                           	opt stack 0
   360  000060                     OpenTimer1@config:
   361                           	opt stack 0
   362  000060                     OpenTimer2@config:
   363                           	opt stack 0
   364  000060                     Delay1TCYx@unit:
   365                           	opt stack 0
   366  000060                     CalculateSensorError@sum:
   367                           	opt stack 0
   368  000060                     DisplaySensorStatuses@status_array:
   369                           	opt stack 0
   370  000060                     SetDCPWM4@dutycycle:
   371                           	opt stack 0
   372  000060                     SetDCPWM5@dutycycle:
   373                           	opt stack 0
   374  000060                     WriteTimer0@timer0:
   375                           	opt stack 0
   376  000060                     WriteTimer1@timer1:
   377                           	opt stack 0
   378  000060                     ___wmul@multiplier:
   379                           	opt stack 0
   380  000060                     ___ftpack@arg:
   381                           	opt stack 0
   382  000060                     ___ftge@ff1:
   383                           	opt stack 0
   384  000060                     ___ftneg@f1:
   385                           	opt stack 0
   386  000060                     frexp@value:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x0
   390  000060                     	ds	1
   391  000061                     OpenADC@portconfig:
   392                           	opt stack 0
   393  000061                     SetChanADC@channel:
   394                           	opt stack 0
   395  000061                     Delay10KTCYx@unit:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x1
   399  000061                     	ds	1
   400  000062                     ??_SetDCPWM5:
   401  000062                     ??_SetDCPWM4:
   402  000062                     ??_OpenADC:
   403  000062                     ??_ReadADC:
   404  000062                     ??_DisplaySensorStatuses:
   405  000062                     SetADCChannel@channel:
   406                           	opt stack 0
   407  000062                     WriteTimer0@timer:
   408                           	opt stack 0
   409  000062                     WriteTimer1@timer:
   410                           	opt stack 0
   411  000062                     ___wmul@multiplicand:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x2
   415  000062                     	ds	1
   416  000063                     ??_CalibrateSensors:
   417  000063                     CalculateSensorStatuses@index:
   418                           	opt stack 0
   419  000063                     ___ftpack@exp:
   420                           	opt stack 0
   421  000063                     frexp@eptr:
   422                           	opt stack 0
   423  000063                     ___ftge@ff2:
   424                           	opt stack 0
   425                           
   426                           ; 3 bytes @ 0x3
   427  000063                     	ds	1
   428  000064                     NormaliseSensorReadings@index:
   429                           	opt stack 0
   430  000064                     DisplaySensorStatuses@index:
   431                           	opt stack 0
   432  000064                     OpenADC@config:
   433                           	opt stack 0
   434  000064                     ___ftpack@sign:
   435                           	opt stack 0
   436  000064                     SetDCPWM4@DCycle:
   437                           	opt stack 0
   438  000064                     SetDCPWM5@DCycle:
   439                           	opt stack 0
   440  000064                     ___wmul@product:
   441                           	opt stack 0
   442  000064                     ConfigureUltrasound@echo_to_cm:
   443                           	opt stack 0
   444                           
   445                           ; 3 bytes @ 0x4
   446  000064                     	ds	1
   447  000065                     ??___ftpack:
   448  000065                     ??_frexp:
   449  000065                     CalibrateSensors@index:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x5
   453  000065                     	ds	1
   454  000066                     ??___ftge:
   455  000066                     SetDCMotorL@duty_cycle:
   456                           	opt stack 0
   457  000066                     SetDCMotorR@duty_cycle:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x6
   461  000066                     	ds	1
   462  000067                     ConfigureUltrasound@echo_to_in:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0x7
   466  000067                     	ds	1
   467  000068                     ?___ftdiv:
   468                           	opt stack 0
   469  000068                     ?___awtoft:
   470                           	opt stack 0
   471  000068                     ?___lbtoft:
   472                           	opt stack 0
   473  000068                     ?___lltoft:
   474                           	opt stack 0
   475  000068                     SetDCMotorPID@PIDoutput:
   476                           	opt stack 0
   477  000068                     ___awtoft@c:
   478                           	opt stack 0
   479  000068                     ___ftdiv@f1:
   480                           	opt stack 0
   481  000068                     ___lltoft@c:
   482                           	opt stack 0
   483                           
   484                           ; 4 bytes @ 0x8
   485  000068                     	ds	2
   486  00006A                     ??_SetDCMotorPID:
   487                           
   488                           ; 0 bytes @ 0xA
   489  00006A                     	ds	1
   490  00006B                     ___awtoft@sign:
   491                           	opt stack 0
   492  00006B                     ___lbtoft@c:
   493                           	opt stack 0
   494  00006B                     ___ftdiv@f2:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0xB
   498  00006B                     	ds	1
   499  00006C                     ??___lltoft:
   500  00006C                     ?___ftmul:
   501                           	opt stack 0
   502  00006C                     ___ftmul@f1:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0xC
   506  00006C                     	ds	2
   507  00006E                     ??___ftdiv:
   508                           
   509                           ; 0 bytes @ 0xE
   510  00006E                     	ds	1
   511  00006F                     ___ftmul@f2:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0xF
   515  00006F                     	ds	1
   516  000070                     ___lltoft@exp:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x10
   520  000070                     	ds	1
   521  000071                     ___ftdiv@cntr:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x11
   525  000071                     	ds	1
   526  000072                     ??___ftmul:
   527  000072                     ___ftdiv@f3:
   528                           	opt stack 0
   529                           
   530                           ; 3 bytes @ 0x12
   531  000072                     	ds	3
   532  000075                     ___ftdiv@exp:
   533                           	opt stack 0
   534  000075                     ___ftmul@exp:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x15
   538  000075                     	ds	1
   539  000076                     ___ftdiv@sign:
   540                           	opt stack 0
   541  000076                     ___ftmul@f3_as_product:
   542                           	opt stack 0
   543                           
   544                           ; 3 bytes @ 0x16
   545  000076                     	ds	3
   546  000079                     ___ftmul@cntr:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x19
   550  000079                     	ds	1
   551  00007A                     ___ftmul@sign:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1A
   555  00007A                     	ds	1
   556  00007B                     ?___ftadd:
   557                           	opt stack 0
   558  00007B                     ?___fttol:
   559                           	opt stack 0
   560  00007B                     ___ftadd@f1:
   561                           	opt stack 0
   562  00007B                     ___fttol@f1:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x1B
   566  00007B                     	ds	3
   567  00007E                     ___ftadd@f2:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x1E
   571  00007E                     	ds	1
   572  00007F                     ??___fttol:
   573                           
   574                           ; 0 bytes @ 0x1F
   575  00007F                     	ds	2
   576  000081                     ??___ftadd:
   577                           
   578                           ; 0 bytes @ 0x21
   579  000081                     	ds	3
   580  000084                     ___ftadd@sign:
   581                           	opt stack 0
   582  000084                     ___fttol@sign1:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x24
   586  000084                     	ds	1
   587  000085                     ___ftadd@exp2:
   588                           	opt stack 0
   589  000085                     ___fttol@lval:
   590                           	opt stack 0
   591                           
   592                           ; 4 bytes @ 0x25
   593  000085                     	ds	1
   594  000086                     ___ftadd@exp1:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x26
   598  000086                     	ds	1
   599  000087                     ?___ftsub:
   600                           	opt stack 0
   601  000087                     ?_eval_poly:
   602                           	opt stack 0
   603  000087                     ___ftsub@f1:
   604                           	opt stack 0
   605  000087                     eval_poly@x:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x27
   609  000087                     	ds	2
   610  000089                     ___fttol@exp1:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x29
   614  000089                     	ds	1
   615  00008A                     ?___altoft:
   616                           	opt stack 0
   617  00008A                     eval_poly@d:
   618                           	opt stack 0
   619  00008A                     ___ftsub@f2:
   620                           	opt stack 0
   621  00008A                     ___altoft@c:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x2A
   625  00008A                     	ds	2
   626  00008C                     eval_poly@n:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x2C
   630  00008C                     	ds	1
   631  00008D                     
   632                           ; 0 bytes @ 0x2D
   633  00008D                     	ds	1
   634  00008E                     ??_eval_poly:
   635  00008E                     ??___altoft:
   636                           
   637                           ; 0 bytes @ 0x2E
   638  00008E                     	ds	2
   639  000090                     eval_poly@res:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x30
   643  000090                     	ds	2
   644  000092                     ___altoft@exp:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x32
   648  000092                     	ds	1
   649  000093                     ?_log:
   650                           	opt stack 0
   651  000093                     ?_ldexp:
   652                           	opt stack 0
   653  000093                     ___altoft@sign:
   654                           	opt stack 0
   655  000093                     ldexp@value:
   656                           	opt stack 0
   657  000093                     log@x:
   658                           	opt stack 0
   659                           
   660                           ; 3 bytes @ 0x33
   661  000093                     	ds	1
   662  000094                     ?_floor:
   663                           	opt stack 0
   664  000094                     floor@x:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x34
   668  000094                     	ds	2
   669  000096                     ldexp@newexp:
   670                           	opt stack 0
   671  000096                     log@exponent:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x36
   675  000096                     	ds	1
   676  000097                     floor@i:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x37
   680  000097                     	ds	1
   681  000098                     ??_ldexp:
   682                           
   683                           ; 0 bytes @ 0x38
   684  000098                     	ds	2
   685  00009A                     floor@expon:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x3A
   689  00009A                     	ds	2
   690  00009C                     ?_exp:
   691                           	opt stack 0
   692  00009C                     exp@x:
   693                           	opt stack 0
   694                           
   695                           ; 3 bytes @ 0x3C
   696  00009C                     	ds	3
   697  00009F                     _exp$2911:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x3F
   701  00009F                     	ds	3
   702  0000A2                     exp@exponent:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x42
   706  0000A2                     	ds	2
   707  0000A4                     exp@sign:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x44
   711  0000A4                     	ds	1
   712  0000A5                     ?_pow:
   713                           	opt stack 0
   714  0000A5                     pow@x:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x45
   718  0000A5                     	ds	3
   719  0000A8                     pow@y:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x48
   723  0000A8                     	ds	3
   724  0000AB                     _pow$2909:
   725                           	opt stack 0
   726                           
   727                           ; 3 bytes @ 0x4B
   728  0000AB                     	ds	3
   729  0000AE                     _pow$2910:
   730                           	opt stack 0
   731                           
   732                           ; 3 bytes @ 0x4E
   733  0000AE                     	ds	3
   734  0000B1                     pow@sign:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x51
   738  0000B1                     	ds	1
   739  0000B2                     pow@yi:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x52
   743  0000B2                     	ds	4
   744  0000B6                     _CalculateSensorSums$2908:
   745                           	opt stack 0
   746                           
   747                           ; 3 bytes @ 0x56
   748  0000B6                     	ds	3
   749  0000B9                     CalculateSensorSums@sum:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x59
   753  0000B9                     	ds	1
   754  0000BA                     CalculateSensorSums@index:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x5A
   758  0000BA                     	ds	1
   759  0000BB                     main@sensor_sum_ptr:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x5B
   763  0000BB                     	ds	2
   764  0000BD                     main@sensor_sum:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x5D
   768  0000BD                     	ds	1
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           
   772                           	psect	cstackCOMRAM
   773  000001                     __pcstackCOMRAM:
   774                           	opt stack 0
   775  000001                     ??i1_SetChanADC:
   776  000001                     ?i1_ReadADC:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x0
   780  000001                     	ds	1
   781  000002                     i1SetChanADC@channel:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x1
   785  000002                     	ds	1
   786  000003                     ??i1_ReadADC:
   787  000003                     i1SetADCChannel@channel:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x2
   791  000003                     	ds	2
   792  000005                     ??_isrLP:
   793                           
   794                           ; 0 bytes @ 0x4
   795  000005                     	ds	17
   796  000016                     ?_ReadTimer1:
   797                           	opt stack 0
   798  000016                     i2WriteTimer0@timer0:
   799                           	opt stack 0
   800  000016                     i2WriteTimer1@timer1:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x15
   804  000016                     	ds	2
   805  000018                     ReadTimer1@timer:
   806                           	opt stack 0
   807  000018                     i2WriteTimer0@timer:
   808                           	opt stack 0
   809  000018                     i2WriteTimer1@timer:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x17
   813  000018                     	ds	2
   814  00001A                     ??_isrHP:
   815                           
   816                           ; 0 bytes @ 0x19
   817  00001A                     	ds	14
   818                           postinc0	equ	0xFEE
   819                           wreg	equ	0xFE8
   820                           
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 566 in file "FastBuggy17_Main_Code.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  sensor_sum_p    2   91[BANK0 ] PTR unsigned char 
   831 ;;		 -> main@sensor_sum(1), 
   832 ;;  sensor_sum      1   93[BANK0 ] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;		None               void
   835 ;; Registers used:
   836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;Total ram usage:        3 bytes
   847 ;; Hardware stack levels required when called:   12
   848 ;; This function calls:
   849 ;;		_BusyDistanceAcq
   850 ;;		_BusySensorAcq
   851 ;;		_CalculateSensorError
   852 ;;		_CalculateSensorStatuses
   853 ;;		_CalculateSensorSums
   854 ;;		_CalibrateLine
   855 ;;		_CalibrateSensors
   856 ;;		_ChangeMode
   857 ;;		_ConfigureADC
   858 ;;		_ConfigureBuggyIO
   859 ;;		_ConfigureInterrupts
   860 ;;		_ConfigurePWM
   861 ;;		_ConfigureTimer0
   862 ;;		_ConfigureTimer1
   863 ;;		_ConfigureTimer2
   864 ;;		_ConfigureUltrasound
   865 ;;		_Delay10KTCYx
   866 ;;		_DisableMotors
   867 ;;		_DisplaySensorStatuses
   868 ;;		_EnableMotors
   869 ;;		_EnableSensorLEDS
   870 ;;		_GetDistance
   871 ;;		_GetSensorReadings
   872 ;;		_NormaliseSensorReadings
   873 ;;		_ReadEchoLength
   874 ;;		_ReadMillis
   875 ;;		_ResetEchoLength
   876 ;;		_ResetMillis
   877 ;;		_SetDCMotorL
   878 ;;		_SetDCMotorPID
   879 ;;		_SetDCMotorR
   880 ;;		_SetDirectionForward
   881 ;;		_SetForwardsMotorL
   882 ;;		_SetForwardsMotorR
   883 ;;		_SetReverseMotorL
   884 ;;		_SetReverseMotorR
   885 ;;		_SetUnipolar
   886 ;;		___wmul
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  00103C                     __ptext0:
   894                           	opt stack 0
   895  00103C                     _main:
   896                           	opt stack 19
   897                           
   898                           ;FastBuggy17_Main_Code.c: 569: unsigned char sensor_sum;
   899                           ;FastBuggy17_Main_Code.c: 572: unsigned char *sensor_sum_ptr;
   900                           ;FastBuggy17_Main_Code.c: 573: sensor_sum_ptr = &sensor_sum;
   901                           
   902                           ;incstack = 0
   903  00103C  0EBD               	movlw	low main@sensor_sum
   904  00103E  0100               	movlb	0	; () banked
   905  001040  6FBB               	movwf	main@sensor_sum_ptr& (0+255),b
   906  001042  0E00               	movlw	high main@sensor_sum
   907  001044  0100               	movlb	0	; () banked
   908  001046  6FBC               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
   909                           
   910                           ; BSR set to: 0
   911                           ;FastBuggy17_Main_Code.c: 575: ConfigureUltrasound(0.0137, 0.054);
   912  001048  0E76               	movlw	118
   913  00104A  0100               	movlb	0	; () banked
   914  00104C  6F64               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
   915  00104E  0E60               	movlw	96
   916  001050  0100               	movlb	0	; () banked
   917  001052  6F65               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
   918  001054  0E3C               	movlw	60
   919  001056  0100               	movlb	0	; () banked
   920  001058  6F66               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
   921  00105A  0E2F               	movlw	47
   922  00105C  0100               	movlb	0	; () banked
   923  00105E  6F67               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
   924  001060  0E5D               	movlw	93
   925  001062  0100               	movlb	0	; () banked
   926  001064  6F68               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
   927  001066  0E3D               	movlw	61
   928  001068  0100               	movlb	0	; () banked
   929  00106A  6F69               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
   930  00106C  EC10  F017         	call	_ConfigureUltrasound	;wreg free
   931                           
   932                           ;FastBuggy17_Main_Code.c: 576: ConfigureBuggyIO();
   933  001070  ECBE  F017         	call	_ConfigureBuggyIO	;wreg free
   934                           
   935                           ;FastBuggy17_Main_Code.c: 577: ConfigureInterrupts();
   936  001074  ECB1  F017         	call	_ConfigureInterrupts	;wreg free
   937                           
   938                           ;FastBuggy17_Main_Code.c: 578: ConfigureTimer0();
   939  001078  ECE3  F017         	call	_ConfigureTimer0	;wreg free
   940                           
   941                           ;FastBuggy17_Main_Code.c: 579: ConfigureTimer1();
   942  00107C  ECD7  F017         	call	_ConfigureTimer1	;wreg free
   943                           
   944                           ;FastBuggy17_Main_Code.c: 580: ConfigureTimer2();
   945  001080  ECA4  F018         	call	_ConfigureTimer2	;wreg free
   946                           
   947                           ;FastBuggy17_Main_Code.c: 581: ConfigurePWM();
   948  001084  EC8C  F018         	call	_ConfigurePWM	;wreg free
   949                           
   950                           ;FastBuggy17_Main_Code.c: 582: ConfigureADC();
   951  001088  EC04  F018         	call	_ConfigureADC	;wreg free
   952                           
   953                           ;FastBuggy17_Main_Code.c: 584: EnableSensorLEDS();
   954  00108C  ECAE  F018         	call	_EnableSensorLEDS	;wreg free
   955                           
   956                           ;FastBuggy17_Main_Code.c: 586: line_mode = 0;
   957  001090  0E00               	movlw	0
   958  001092  6E3E               	movwf	_line_mode,c
   959                           
   960                           ;FastBuggy17_Main_Code.c: 588: PID_error = 0;
   961  001094  0E00               	movlw	0
   962  001096  0100               	movlb	0	; () banked
   963  001098  6FD7               	movwf	(_PID_error+1)& (0+255),b
   964  00109A  0E00               	movlw	0
   965  00109C  6FD6               	movwf	_PID_error& (0+255),b
   966                           
   967                           ; BSR set to: 0
   968                           ;FastBuggy17_Main_Code.c: 589: PID_output = 0;
   969  00109E  0E00               	movlw	0
   970  0010A0  0100               	movlb	0	; () banked
   971  0010A2  6FD3               	movwf	(_PID_output+1)& (0+255),b
   972  0010A4  0E00               	movlw	0
   973  0010A6  6FD2               	movwf	_PID_output& (0+255),b
   974                           
   975                           ; BSR set to: 0
   976                           ;FastBuggy17_Main_Code.c: 591: LATJ = 0x00;
   977  0010A8  0E00               	movlw	0
   978  0010AA  6E91               	movwf	3985,c	;volatile
   979                           
   980                           ;FastBuggy17_Main_Code.c: 593: ResetMillis();
   981  0010AC  ECCB  F017         	call	_ResetMillis	;wreg free
   982                           
   983                           ;FastBuggy17_Main_Code.c: 596: while(PORTBbits.RB1 == 0) {
   984  0010B0  D013               	goto	l4661
   985  0010B2                     l4651:
   986                           
   987                           ;FastBuggy17_Main_Code.c: 598: CalibrateSensors();
   988  0010B2  EC42  F015         	call	_CalibrateSensors	;wreg free
   989                           
   990                           ;FastBuggy17_Main_Code.c: 599: Delay10KTCYx(10);
   991  0010B6  0E0A               	movlw	10
   992  0010B8  EC93  F017         	call	_Delay10KTCYx
   993                           
   994                           ;FastBuggy17_Main_Code.c: 601: if(ReadMillis() >= 100) {
   995  0010BC  EC9A  F018         	call	_ReadMillis	;wreg free
   996  0010C0  0100               	movlb	0	; () banked
   997  0010C2  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
   998  0010C4  E105               	bnz	u4040
   999  0010C6  0E64               	movlw	100
  1000  0010C8  0100               	movlb	0	; () banked
  1001  0010CA  5D60               	subwf	?_ReadMillis& (0+255),w,b
  1002  0010CC  A0D8               	btfss	status,0,c
  1003  0010CE  D004               	goto	l4661
  1004  0010D0                     u4040:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;FastBuggy17_Main_Code.c: 602: LATJbits.LATJ0 ^= 1;
  1008  0010D0  7091               	btg	3985,0,c	;volatile
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;FastBuggy17_Main_Code.c: 603: ResetMillis();
  1012  0010D2  ECCB  F017         	call	_ResetMillis	;wreg free
  1013  0010D6  D000               	goto	l4661
  1014  0010D8                     l4661:
  1015  0010D8  A281               	btfss	3969,1,c	;volatile
  1016  0010DA  D7EB               	goto	l4651
  1017                           
  1018                           ;FastBuggy17_Main_Code.c: 604: }
  1019                           ;FastBuggy17_Main_Code.c: 606: }
  1020                           ;FastBuggy17_Main_Code.c: 608: ChangeMode();
  1021  0010DC  EC26  F017         	call	_ChangeMode	;wreg free
  1022                           
  1023                           ;FastBuggy17_Main_Code.c: 609: ResetMillis();
  1024  0010E0  ECCB  F017         	call	_ResetMillis	;wreg free
  1025                           
  1026                           ;FastBuggy17_Main_Code.c: 623: while(PORTBbits.RB1 == 0) {
  1027  0010E4  D006               	goto	l4669
  1028  0010E6                     l4665:
  1029                           
  1030                           ;FastBuggy17_Main_Code.c: 625: CalibrateLine();
  1031  0010E6  ECB0  F015         	call	_CalibrateLine	;wreg free
  1032                           
  1033                           ;FastBuggy17_Main_Code.c: 626: Delay10KTCYx(10);
  1034  0010EA  0E0A               	movlw	10
  1035  0010EC  EC93  F017         	call	_Delay10KTCYx
  1036  0010F0  D000               	goto	l4669
  1037  0010F2                     l4669:
  1038  0010F2  B281               	btfsc	3969,1,c	;volatile
  1039  0010F4  D010               	goto	l4677
  1040  0010F6  D7F7               	goto	l4665
  1041                           
  1042                           ;FastBuggy17_Main_Code.c: 628: }
  1043                           ;FastBuggy17_Main_Code.c: 630: while(PORTBbits.RB1 == 0) {
  1044  0010F8  D00E               	goto	l4677
  1045  0010FA                     l4671:
  1046                           
  1047                           ;FastBuggy17_Main_Code.c: 631: if(ReadMillis() >= 100) {
  1048  0010FA  EC9A  F018         	call	_ReadMillis	;wreg free
  1049  0010FE  0100               	movlb	0	; () banked
  1050  001100  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
  1051  001102  E105               	bnz	u4070
  1052  001104  0E64               	movlw	100
  1053  001106  0100               	movlb	0	; () banked
  1054  001108  5D60               	subwf	?_ReadMillis& (0+255),w,b
  1055  00110A  A0D8               	btfss	status,0,c
  1056  00110C  D004               	goto	l4677
  1057  00110E                     u4070:
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;FastBuggy17_Main_Code.c: 632: LATJbits.LATJ0 ^= 1;
  1061  00110E  7091               	btg	3985,0,c	;volatile
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;FastBuggy17_Main_Code.c: 633: ResetMillis();
  1065  001110  ECCB  F017         	call	_ResetMillis	;wreg free
  1066  001114  D000               	goto	l4677
  1067  001116                     l4677:
  1068  001116  A281               	btfss	3969,1,c	;volatile
  1069  001118  D7F0               	goto	l4671
  1070                           
  1071                           ;FastBuggy17_Main_Code.c: 634: }
  1072                           ;FastBuggy17_Main_Code.c: 636: }
  1073                           ;FastBuggy17_Main_Code.c: 638: ChangeMode();
  1074  00111A  EC26  F017         	call	_ChangeMode	;wreg free
  1075                           
  1076                           ;FastBuggy17_Main_Code.c: 640: SetUnipolar();
  1077  00111E  ECA8  F018         	call	_SetUnipolar	;wreg free
  1078                           
  1079                           ;FastBuggy17_Main_Code.c: 641: SetDCMotorL(500);
  1080  001122  0E01               	movlw	1
  1081  001124  0100               	movlb	0	; () banked
  1082  001126  6F67               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1083  001128  0EF4               	movlw	244
  1084  00112A  6F66               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1085  00112C  EC7E  F018         	call	_SetDCMotorL	;wreg free
  1086                           
  1087                           ;FastBuggy17_Main_Code.c: 642: SetDCMotorR(500);
  1088  001130  0E01               	movlw	1
  1089  001132  0100               	movlb	0	; () banked
  1090  001134  6F67               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1091  001136  0EF4               	movlw	244
  1092  001138  6F66               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1093  00113A  EC77  F018         	call	_SetDCMotorR	;wreg free
  1094                           
  1095                           ;FastBuggy17_Main_Code.c: 643: EnableMotors();
  1096  00113E  ECB9  F018         	call	_EnableMotors	;wreg free
  1097                           
  1098                           ;FastBuggy17_Main_Code.c: 644: SetDirectionForward();
  1099  001142  ECAB  F018         	call	_SetDirectionForward	;wreg free
  1100                           
  1101                           ;FastBuggy17_Main_Code.c: 646: GetDistance();
  1102  001146  EC18  F018         	call	_GetDistance	;wreg free
  1103  00114A  D000               	goto	l4693
  1104  00114C                     l4693:
  1105                           
  1106                           ;FastBuggy17_Main_Code.c: 652: GetSensorReadings();
  1107  00114C  ECEE  F017         	call	_GetSensorReadings	;wreg free
  1108                           
  1109                           ;FastBuggy17_Main_Code.c: 654: while(BusySensorAcq());
  1110  001150  D000               	goto	l4695
  1111  001152                     l4695:
  1112  001152  EC5F  F018         	call	_BusySensorAcq	;wreg free
  1113  001156  0900               	iorlw	0
  1114  001158  A4D8               	btfss	status,2,c
  1115  00115A  D7FB               	goto	l4695
  1116                           
  1117                           ;FastBuggy17_Main_Code.c: 656: NormaliseSensorReadings();
  1118  00115C  EC07  F015         	call	_NormaliseSensorReadings	;wreg free
  1119                           
  1120                           ;FastBuggy17_Main_Code.c: 658: CalculateSensorStatuses();
  1121  001160  ECA0  F011         	call	_CalculateSensorStatuses	;wreg free
  1122                           
  1123                           ;FastBuggy17_Main_Code.c: 659: sensor_sum = CalculateSensorSums();
  1124  001164  ECA6  F013         	call	_CalculateSensorSums	;wreg free
  1125  001168  0100               	movlb	0	; () banked
  1126  00116A  6FBD               	movwf	main@sensor_sum& (0+255),b
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;FastBuggy17_Main_Code.c: 664: PID_error = CalculateSensorError(sensor_sum_ptr);
  1130  00116C  C0BB  F060         	movff	main@sensor_sum_ptr,CalculateSensorError@sum
  1131  001170  C0BC  F061         	movff	main@sensor_sum_ptr+1,CalculateSensorError@sum+1
  1132  001174  ECF3  F012         	call	_CalculateSensorError	;wreg free
  1133  001178  C060  F0D6         	movff	?_CalculateSensorError,_PID_error
  1134  00117C  C061  F0D7         	movff	?_CalculateSensorError+1,_PID_error+1
  1135                           
  1136                           ;FastBuggy17_Main_Code.c: 665: PID_output = 12 * PID_error;
  1137  001180  C0D6  F060         	movff	_PID_error,___wmul@multiplier
  1138  001184  C0D7  F061         	movff	_PID_error+1,___wmul@multiplier+1
  1139  001188  0E00               	movlw	0
  1140  00118A  0100               	movlb	0	; () banked
  1141  00118C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1142  00118E  0E0C               	movlw	12
  1143  001190  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1144  001192  EC90  F016         	call	___wmul	;wreg free
  1145  001196  C060  F0D2         	movff	?___wmul,_PID_output
  1146  00119A  C061  F0D3         	movff	?___wmul+1,_PID_output+1
  1147                           
  1148                           ;FastBuggy17_Main_Code.c: 667: SetDCMotorPID(PID_output);
  1149  00119E  C0D2  F068         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1150  0011A2  C0D3  F069         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1151  0011A6  EC7B  F015         	call	_SetDCMotorPID	;wreg free
  1152                           
  1153                           ;FastBuggy17_Main_Code.c: 671: DisplaySensorStatuses(sensor_status);
  1154  0011AA  0E43               	movlw	low _sensor_status
  1155  0011AC  0100               	movlb	0	; () banked
  1156  0011AE  6F60               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1157  0011B0  0E00               	movlw	high _sensor_status
  1158  0011B2  0100               	movlb	0	; () banked
  1159  0011B4  6F61               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1160  0011B6  ECD8  F015         	call	_DisplaySensorStatuses	;wreg free
  1161                           
  1162                           ;FastBuggy17_Main_Code.c: 681: if(BusyDistanceAcq() == 0) {
  1163  0011BA  EC67  F018         	call	_BusyDistanceAcq	;wreg free
  1164  0011BE  0900               	iorlw	0
  1165  0011C0  A4D8               	btfss	status,2,c
  1166  0011C2  D077               	goto	l430
  1167                           
  1168                           ;FastBuggy17_Main_Code.c: 682: if(ReadEchoLength() <= 1232 ) {
  1169  0011C4  EC9F  F018         	call	_ReadEchoLength	;wreg free
  1170  0011C8  0ED1               	movlw	209
  1171  0011CA  0100               	movlb	0	; () banked
  1172  0011CC  5D60               	subwf	?_ReadEchoLength& (0+255),w,b
  1173  0011CE  0E04               	movlw	4
  1174  0011D0  0100               	movlb	0	; () banked
  1175  0011D2  5961               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1176  0011D4  B0D8               	btfsc	status,0,c
  1177  0011D6  D06A               	goto	l4755
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;FastBuggy17_Main_Code.c: 684: DisableMotors();
  1181  0011D8  ECBB  F018         	call	_DisableMotors	;wreg free
  1182                           
  1183                           ;FastBuggy17_Main_Code.c: 686: if(PID_output < 0){
  1184  0011DC  0100               	movlb	0	; () banked
  1185  0011DE  AFD3               	btfss	(_PID_output+1)& (0+255),7,b
  1186  0011E0  D005               	goto	l4719
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;FastBuggy17_Main_Code.c: 687: SetForwardsMotorR();
  1190  0011E2  ECB5  F018         	call	_SetForwardsMotorR	;wreg free
  1191                           
  1192                           ;FastBuggy17_Main_Code.c: 688: SetReverseMotorL();
  1193  0011E6  ECB3  F018         	call	_SetReverseMotorL	;wreg free
  1194  0011EA  D000               	goto	l4719
  1195  0011EC                     l4719:
  1196                           
  1197                           ;FastBuggy17_Main_Code.c: 689: }
  1198                           ;FastBuggy17_Main_Code.c: 690: if(PID_output > 0){
  1199  0011EC  0100               	movlb	0	; () banked
  1200  0011EE  BFD3               	btfsc	(_PID_output+1)& (0+255),7,b
  1201  0011F0  D00C               	goto	l4723
  1202  0011F2  0100               	movlb	0	; () banked
  1203  0011F4  51D3               	movf	(_PID_output+1)& (0+255),w,b
  1204  0011F6  E104               	bnz	u4130
  1205  0011F8  0100               	movlb	0	; () banked
  1206  0011FA  05D2               	decf	_PID_output& (0+255),w,b
  1207  0011FC  A0D8               	btfss	status,0,c
  1208  0011FE  D005               	goto	l4723
  1209  001200                     u4130:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;FastBuggy17_Main_Code.c: 691: SetForwardsMotorL();
  1213  001200  ECB7  F018         	call	_SetForwardsMotorL	;wreg free
  1214                           
  1215                           ;FastBuggy17_Main_Code.c: 692: SetReverseMotorR();
  1216  001204  ECB1  F018         	call	_SetReverseMotorR	;wreg free
  1217  001208  D000               	goto	l4723
  1218  00120A                     l4723:
  1219                           
  1220                           ;FastBuggy17_Main_Code.c: 693: }
  1221                           ;FastBuggy17_Main_Code.c: 696: SetDCMotorL(400);
  1222  00120A  0E01               	movlw	1
  1223  00120C  0100               	movlb	0	; () banked
  1224  00120E  6F67               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1225  001210  0E90               	movlw	144
  1226  001212  6F66               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1227  001214  EC7E  F018         	call	_SetDCMotorL	;wreg free
  1228                           
  1229                           ;FastBuggy17_Main_Code.c: 697: SetDCMotorR(400);
  1230  001218  0E01               	movlw	1
  1231  00121A  0100               	movlb	0	; () banked
  1232  00121C  6F67               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1233  00121E  0E90               	movlw	144
  1234  001220  6F66               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1235  001222  EC77  F018         	call	_SetDCMotorR	;wreg free
  1236                           
  1237                           ;FastBuggy17_Main_Code.c: 699: EnableMotors();
  1238  001226  ECB9  F018         	call	_EnableMotors	;wreg free
  1239                           
  1240                           ;FastBuggy17_Main_Code.c: 701: ResetMillis();
  1241  00122A  ECCB  F017         	call	_ResetMillis	;wreg free
  1242                           
  1243                           ;FastBuggy17_Main_Code.c: 702: while(ReadMillis() < 30);
  1244  00122E  D000               	goto	l4729
  1245  001230                     l4729:
  1246  001230  EC9A  F018         	call	_ReadMillis	;wreg free
  1247  001234  0100               	movlb	0	; () banked
  1248  001236  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
  1249  001238  E107               	bnz	l4731
  1250  00123A  0E1E               	movlw	30
  1251  00123C  0100               	movlb	0	; () banked
  1252  00123E  5D60               	subwf	?_ReadMillis& (0+255),w,b
  1253  001240  B0D8               	btfsc	status,0,c
  1254  001242  D002               	goto	l4731
  1255  001244  D7F5               	goto	l4729
  1256  001246  D000               	goto	l4731
  1257  001248                     l4731:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;FastBuggy17_Main_Code.c: 703: sensor_sum = 0;
  1261  001248  0E00               	movlw	0
  1262  00124A  0100               	movlb	0	; () banked
  1263  00124C  6FBD               	movwf	main@sensor_sum& (0+255),b
  1264                           
  1265                           ;FastBuggy17_Main_Code.c: 707: while(sensor_sum == 0) {
  1266  00124E  D019               	goto	l4743
  1267  001250                     l4733:
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;FastBuggy17_Main_Code.c: 708: GetSensorReadings();
  1271  001250  ECEE  F017         	call	_GetSensorReadings	;wreg free
  1272                           
  1273                           ;FastBuggy17_Main_Code.c: 709: while(BusySensorAcq());
  1274  001254  D000               	goto	l4735
  1275  001256                     l4735:
  1276  001256  EC5F  F018         	call	_BusySensorAcq	;wreg free
  1277  00125A  0900               	iorlw	0
  1278  00125C  A4D8               	btfss	status,2,c
  1279  00125E  D7FB               	goto	l4735
  1280                           
  1281                           ;FastBuggy17_Main_Code.c: 710: NormaliseSensorReadings();
  1282  001260  EC07  F015         	call	_NormaliseSensorReadings	;wreg free
  1283                           
  1284                           ;FastBuggy17_Main_Code.c: 711: CalculateSensorStatuses();
  1285  001264  ECA0  F011         	call	_CalculateSensorStatuses	;wreg free
  1286                           
  1287                           ;FastBuggy17_Main_Code.c: 712: sensor_sum = CalculateSensorSums();
  1288  001268  ECA6  F013         	call	_CalculateSensorSums	;wreg free
  1289  00126C  0100               	movlb	0	; () banked
  1290  00126E  6FBD               	movwf	main@sensor_sum& (0+255),b
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;FastBuggy17_Main_Code.c: 713: DisplaySensorStatuses(sensor_status);
  1294  001270  0E43               	movlw	low _sensor_status
  1295  001272  0100               	movlb	0	; () banked
  1296  001274  6F60               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  1297  001276  0E00               	movlw	high _sensor_status
  1298  001278  0100               	movlb	0	; () banked
  1299  00127A  6F61               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  1300  00127C  ECD8  F015         	call	_DisplaySensorStatuses	;wreg free
  1301  001280  D000               	goto	l4743
  1302  001282                     l4743:
  1303  001282  0100               	movlb	0	; () banked
  1304  001284  51BD               	movf	main@sensor_sum& (0+255),w,b
  1305  001286  0100               	movlb	0	; () banked
  1306  001288  B4D8               	btfsc	status,2,c
  1307  00128A  D7E2               	goto	l4733
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;FastBuggy17_Main_Code.c: 715: }
  1311                           ;FastBuggy17_Main_Code.c: 717: ResetEchoLength();
  1312                           
  1313                           ; BSR set to: 0
  1314  00128C  EC85  F018         	call	_ResetEchoLength	;wreg free
  1315                           
  1316                           ;FastBuggy17_Main_Code.c: 719: DisableMotors();
  1317  001290  ECBB  F018         	call	_DisableMotors	;wreg free
  1318                           
  1319                           ;FastBuggy17_Main_Code.c: 720: SetDirectionForward();
  1320  001294  ECAB  F018         	call	_SetDirectionForward	;wreg free
  1321                           
  1322                           ;FastBuggy17_Main_Code.c: 721: EnableMotors();
  1323  001298  ECB9  F018         	call	_EnableMotors	;wreg free
  1324                           
  1325                           ;FastBuggy17_Main_Code.c: 723: PID_error = 0;
  1326  00129C  0E00               	movlw	0
  1327  00129E  0100               	movlb	0	; () banked
  1328  0012A0  6FD7               	movwf	(_PID_error+1)& (0+255),b
  1329  0012A2  0E00               	movlw	0
  1330  0012A4  6FD6               	movwf	_PID_error& (0+255),b
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;FastBuggy17_Main_Code.c: 725: GetDistance();
  1334  0012A6  EC18  F018         	call	_GetDistance	;wreg free
  1335                           
  1336                           ;FastBuggy17_Main_Code.c: 726: }
  1337  0012AA  D003               	goto	l430
  1338  0012AC                     l4755:
  1339                           
  1340                           ;FastBuggy17_Main_Code.c: 727: else {
  1341                           ;FastBuggy17_Main_Code.c: 728: GetDistance();
  1342  0012AC  EC18  F018         	call	_GetDistance	;wreg free
  1343  0012B0  D000               	goto	l430
  1344  0012B2                     l430:
  1345                           
  1346                           ;FastBuggy17_Main_Code.c: 729: }
  1347                           ;FastBuggy17_Main_Code.c: 730: }
  1348                           ;FastBuggy17_Main_Code.c: 734: ResetMillis();
  1349  0012B2  ECCB  F017         	call	_ResetMillis	;wreg free
  1350                           
  1351                           ;FastBuggy17_Main_Code.c: 735: while(ReadMillis() < 5);
  1352  0012B6  D000               	goto	l4757
  1353  0012B8                     l4757:
  1354  0012B8  EC9A  F018         	call	_ReadMillis	;wreg free
  1355  0012BC  0100               	movlb	0	; () banked
  1356  0012BE  5161               	movf	(?_ReadMillis+1)& (0+255),w,b
  1357  0012C0  E107               	bnz	l4759
  1358  0012C2  0E05               	movlw	5
  1359  0012C4  0100               	movlb	0	; () banked
  1360  0012C6  5D60               	subwf	?_ReadMillis& (0+255),w,b
  1361  0012C8  B0D8               	btfsc	status,0,c
  1362  0012CA  D002               	goto	l4759
  1363  0012CC  D7F5               	goto	l4757
  1364  0012CE  D000               	goto	l4759
  1365  0012D0                     l4759:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;FastBuggy17_Main_Code.c: 736: LATJ = 0x00;
  1369  0012D0  0E00               	movlw	0
  1370  0012D2  6E91               	movwf	3985,c	;volatile
  1371                           
  1372                           ; BSR set to: 0
  1373  0012D4  D73B               	goto	l4693
  1374                           
  1375                           ; BSR set to: 0
  1376                           
  1377                           ; BSR set to: 0
  1378  0012D6  EF70  F000         	goto	start
  1379  0012DA                     __end_of_main:
  1380                           	opt stack 0
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _SetUnipolar *****************
  1386 ;; Defined at:
  1387 ;;		line 99 in file "Motors.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;		None               void
  1394 ;; Registers used:
  1395 ;;		None
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    6
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text1
  1416  003150                     __ptext1:
  1417                           	opt stack 0
  1418  003150                     _SetUnipolar:
  1419                           	opt stack 24
  1420                           
  1421                           ;Motors.c: 101: LATDbits.LATD0 = 0;
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;incstack = 0
  1425  003150  908C               	bcf	3980,0,c	;volatile
  1426                           
  1427                           ;Motors.c: 102: LATDbits.LATD2 = 0;
  1428  003152  948C               	bcf	3980,2,c	;volatile
  1429  003154  0012               	return		;funcret
  1430  003156                     __end_of_SetUnipolar:
  1431                           	opt stack 0
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _SetReverseMotorR *****************
  1437 ;; Defined at:
  1438 ;;		line 68 in file "Motors.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		None
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    6
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text2
  1467  003162                     __ptext2:
  1468                           	opt stack 0
  1469  003162                     _SetReverseMotorR:
  1470                           	opt stack 24
  1471                           
  1472                           ;Motors.c: 70: LATDbits.LATD1 = 0;
  1473                           
  1474                           ;incstack = 0
  1475  003162  928C               	bcf	3980,1,c	;volatile
  1476  003164  0012               	return		;funcret
  1477  003166                     __end_of_SetReverseMotorR:
  1478                           	opt stack 0
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _SetReverseMotorL *****************
  1484 ;; Defined at:
  1485 ;;		line 74 in file "Motors.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;		None               void
  1492 ;; Registers used:
  1493 ;;		None
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    6
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text3
  1514  003166                     __ptext3:
  1515                           	opt stack 0
  1516  003166                     _SetReverseMotorL:
  1517                           	opt stack 24
  1518                           
  1519                           ;Motors.c: 76: LATDbits.LATD3 = 0;
  1520                           
  1521                           ;incstack = 0
  1522  003166  968C               	bcf	3980,3,c	;volatile
  1523  003168  0012               	return		;funcret
  1524  00316A                     __end_of_SetReverseMotorL:
  1525                           	opt stack 0
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _SetForwardsMotorR *****************
  1531 ;; Defined at:
  1532 ;;		line 56 in file "Motors.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		None
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    6
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text4
  1561  00316A                     __ptext4:
  1562                           	opt stack 0
  1563  00316A                     _SetForwardsMotorR:
  1564                           	opt stack 24
  1565                           
  1566                           ;Motors.c: 58: LATDbits.LATD1 = 1;
  1567                           
  1568                           ;incstack = 0
  1569  00316A  828C               	bsf	3980,1,c	;volatile
  1570  00316C  0012               	return		;funcret
  1571  00316E                     __end_of_SetForwardsMotorR:
  1572                           	opt stack 0
  1573                           postinc0	equ	0xFEE
  1574                           wreg	equ	0xFE8
  1575                           status	equ	0xFD8
  1576                           
  1577 ;; *************** function _SetForwardsMotorL *****************
  1578 ;; Defined at:
  1579 ;;		line 62 in file "Motors.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;		None               void
  1586 ;; Registers used:
  1587 ;;		None
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    6
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text5
  1608  00316E                     __ptext5:
  1609                           	opt stack 0
  1610  00316E                     _SetForwardsMotorL:
  1611                           	opt stack 24
  1612                           
  1613                           ;Motors.c: 64: LATDbits.LATD3 = 1;
  1614                           
  1615                           ;incstack = 0
  1616  00316E  868C               	bsf	3980,3,c	;volatile
  1617  003170  0012               	return		;funcret
  1618  003172                     __end_of_SetForwardsMotorL:
  1619                           	opt stack 0
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _SetDirectionForward *****************
  1625 ;; Defined at:
  1626 ;;		line 42 in file "Motors.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;		None               void
  1633 ;; Registers used:
  1634 ;;		None
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    6
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text6
  1655  003156                     __ptext6:
  1656                           	opt stack 0
  1657  003156                     _SetDirectionForward:
  1658                           	opt stack 24
  1659                           
  1660                           ;Motors.c: 44: LATDbits.LATD3 = 1;
  1661                           
  1662                           ;incstack = 0
  1663  003156  868C               	bsf	3980,3,c	;volatile
  1664                           
  1665                           ;Motors.c: 45: LATDbits.LATD1 = 1;
  1666  003158  828C               	bsf	3980,1,c	;volatile
  1667  00315A  0012               	return		;funcret
  1668  00315C                     __end_of_SetDirectionForward:
  1669                           	opt stack 0
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _SetDCMotorPID *****************
  1675 ;; Defined at:
  1676 ;;		line 29 in file "Motors.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  PIDoutput       2    8[BANK0 ] int 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    8
  1697 ;; This function calls:
  1698 ;;		_SetDCMotorL
  1699 ;;		_SetDCMotorR
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text7
  1706  002AF6                     __ptext7:
  1707                           	opt stack 0
  1708  002AF6                     _SetDCMotorPID:
  1709                           	opt stack 22
  1710                           
  1711                           ;Motors.c: 31: if(PIDoutput < 0) {
  1712                           
  1713                           ;incstack = 0
  1714  002AF6  0100               	movlb	0	; () banked
  1715  002AF8  AF69               	btfss	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  1716  002AFA  D01D               	goto	l4453
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;Motors.c: 32: SetDCMotorL(410 - PIDoutput);
  1720  002AFC  C068  F06A         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  1721  002B00  C069  F06B         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  1722  002B04  0100               	movlb	0	; () banked
  1723  002B06  1F6A               	comf	??_SetDCMotorPID& (0+255),f,b
  1724  002B08  1F6B               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  1725  002B0A  4B6A               	infsnz	??_SetDCMotorPID& (0+255),f,b
  1726  002B0C  2B6B               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  1727  002B0E  0E9A               	movlw	154
  1728  002B10  0100               	movlb	0	; () banked
  1729  002B12  256A               	addwf	??_SetDCMotorPID& (0+255),w,b
  1730  002B14  0100               	movlb	0	; () banked
  1731  002B16  6F66               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1732  002B18  0E01               	movlw	1
  1733  002B1A  0100               	movlb	0	; () banked
  1734  002B1C  216B               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  1735  002B1E  0100               	movlb	0	; () banked
  1736  002B20  6F67               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1737  002B22  EC7E  F018         	call	_SetDCMotorL	;wreg free
  1738                           
  1739                           ;Motors.c: 33: SetDCMotorR(410);
  1740  002B26  0E01               	movlw	1
  1741  002B28  0100               	movlb	0	; () banked
  1742  002B2A  6F67               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1743  002B2C  0E9A               	movlw	154
  1744  002B2E  6F66               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1745  002B30  EC77  F018         	call	_SetDCMotorR	;wreg free
  1746                           
  1747                           ;Motors.c: 34: }
  1748  002B34  D014               	goto	l107
  1749  002B36                     l4453:
  1750                           
  1751                           ;Motors.c: 35: else {
  1752                           ;Motors.c: 36: SetDCMotorL(410);
  1753  002B36  0E01               	movlw	1
  1754  002B38  0100               	movlb	0	; () banked
  1755  002B3A  6F67               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1756  002B3C  0E9A               	movlw	154
  1757  002B3E  6F66               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1758  002B40  EC7E  F018         	call	_SetDCMotorL	;wreg free
  1759                           
  1760                           ;Motors.c: 37: SetDCMotorR(410 + PIDoutput);
  1761  002B44  0E9A               	movlw	154
  1762  002B46  0100               	movlb	0	; () banked
  1763  002B48  2568               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  1764  002B4A  0100               	movlb	0	; () banked
  1765  002B4C  6F66               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1766  002B4E  0E01               	movlw	1
  1767  002B50  0100               	movlb	0	; () banked
  1768  002B52  2169               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  1769  002B54  0100               	movlb	0	; () banked
  1770  002B56  6F67               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1771  002B58  EC77  F018         	call	_SetDCMotorR	;wreg free
  1772  002B5C  D000               	goto	l107
  1773  002B5E                     l107:
  1774  002B5E  0012               	return		;funcret
  1775  002B60                     __end_of_SetDCMotorPID:
  1776                           	opt stack 0
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _SetDCMotorR *****************
  1782 ;; Defined at:
  1783 ;;		line 17 in file "Motors.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  duty_cycle      2    6[BANK0 ] unsigned int 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;Total ram usage:        2 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    7
  1804 ;; This function calls:
  1805 ;;		_SetDCPWM4
  1806 ;; This function is called by:
  1807 ;;		_SetDCMotorPID
  1808 ;;		_main
  1809 ;;		_StopMotors
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text8
  1814  0030EE                     __ptext8:
  1815                           	opt stack 0
  1816  0030EE                     _SetDCMotorR:
  1817                           	opt stack 23
  1818                           
  1819                           ;Motors.c: 19: SetDCPWM4(duty_cycle);
  1820                           
  1821                           ;incstack = 0
  1822  0030EE  C066  F060         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  1823  0030F2  C067  F061         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  1824  0030F6  EC4C  F016         	call	_SetDCPWM4	;wreg free
  1825  0030FA  0012               	return		;funcret
  1826  0030FC                     __end_of_SetDCMotorR:
  1827                           	opt stack 0
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _SetDCPWM4 *****************
  1833 ;; Defined at:
  1834 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  1839 ;; Return value:  Size  Location     Type
  1840 ;;		None               void
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;Total ram usage:        6 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    6
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_SetDCMotorR
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text9
  1863  002C98                     __ptext9:
  1864                           	opt stack 0
  1865  002C98                     _SetDCPWM4:
  1866                           	opt stack 23
  1867                           
  1868                           ;incstack = 0
  1869  002C98  C060  F062         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  1870  002C9C  C061  F063         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  1871  002CA0  0E06               	movlw	6
  1872  002CA2                     u3475:
  1873  002CA2  90D8               	bcf	status,0,c
  1874  002CA4  0100               	movlb	0	; () banked
  1875  002CA6  3762               	rlcf	??_SetDCPWM4& (0+255),f,b
  1876  002CA8  3763               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  1877  002CAA  2EE8               	decfsz	wreg,f,c
  1878  002CAC  D7FA               	goto	u3475
  1879  002CAE  C062  F064         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  1880  002CB2  C063  F065         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  1881                           
  1882                           ; BSR set to: 0
  1883  002CB6  C065  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  1884  002CBA  C064  F062         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  1885  002CBE  0100               	movlb	0	; () banked
  1886  002CC0  90D8               	bcf	status,0,c
  1887  002CC2  3362               	rrcf	??_SetDCPWM4& (0+255),f,b
  1888  002CC4  0100               	movlb	0	; () banked
  1889  002CC6  90D8               	bcf	status,0,c
  1890  002CC8  3362               	rrcf	??_SetDCPWM4& (0+255),f,b
  1891  002CCA  0E30               	movlw	48
  1892  002CCC  0100               	movlb	0	; () banked
  1893  002CCE  1762               	andwf	??_SetDCPWM4& (0+255),f,b
  1894  002CD0  5073               	movf	3955,w,c	;volatile
  1895  002CD2  0BCF               	andlw	207
  1896  002CD4  0100               	movlb	0	; () banked
  1897  002CD6  1162               	iorwf	??_SetDCPWM4& (0+255),w,b
  1898  002CD8  6E73               	movwf	3955,c	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901  002CDA  0012               	return		;funcret
  1902  002CDC                     __end_of_SetDCPWM4:
  1903                           	opt stack 0
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           status	equ	0xFD8
  1907                           
  1908 ;; *************** function _SetDCMotorL *****************
  1909 ;; Defined at:
  1910 ;;		line 4 in file "Motors.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  duty_cycle      2    6[BANK0 ] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;		None               void
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        2 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    7
  1931 ;; This function calls:
  1932 ;;		_SetDCPWM5
  1933 ;; This function is called by:
  1934 ;;		_SetDCMotorPID
  1935 ;;		_main
  1936 ;;		_StopMotors
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text10
  1941  0030FC                     __ptext10:
  1942                           	opt stack 0
  1943  0030FC                     _SetDCMotorL:
  1944                           	opt stack 22
  1945                           
  1946                           ;Motors.c: 6: SetDCPWM5(duty_cycle);
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;incstack = 0
  1950  0030FC  C066  F060         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  1951  003100  C067  F061         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  1952  003104  EC6E  F016         	call	_SetDCPWM5	;wreg free
  1953  003108  0012               	return		;funcret
  1954  00310A                     __end_of_SetDCMotorL:
  1955                           	opt stack 0
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           status	equ	0xFD8
  1959                           
  1960 ;; *************** function _SetDCPWM5 *****************
  1961 ;; Defined at:
  1962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  1967 ;; Return value:  Size  Location     Type
  1968 ;;		None               void
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;Total ram usage:        6 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    6
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_SetDCMotorL
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text11
  1991  002CDC                     __ptext11:
  1992                           	opt stack 0
  1993  002CDC                     _SetDCPWM5:
  1994                           	opt stack 22
  1995                           
  1996                           ;incstack = 0
  1997  002CDC  C060  F062         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  1998  002CE0  C061  F063         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  1999  002CE4  0E06               	movlw	6
  2000  002CE6                     u3465:
  2001  002CE6  90D8               	bcf	status,0,c
  2002  002CE8  0100               	movlb	0	; () banked
  2003  002CEA  3762               	rlcf	??_SetDCPWM5& (0+255),f,b
  2004  002CEC  3763               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  2005  002CEE  2EE8               	decfsz	wreg,f,c
  2006  002CF0  D7FA               	goto	u3465
  2007  002CF2  C062  F064         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  2008  002CF6  C063  F065         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  2009                           
  2010                           ; BSR set to: 0
  2011  002CFA  C065  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  2012  002CFE  C064  F062         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  2013  002D02  0100               	movlb	0	; () banked
  2014  002D04  90D8               	bcf	status,0,c
  2015  002D06  3362               	rrcf	??_SetDCPWM5& (0+255),f,b
  2016  002D08  0100               	movlb	0	; () banked
  2017  002D0A  90D8               	bcf	status,0,c
  2018  002D0C  3362               	rrcf	??_SetDCPWM5& (0+255),f,b
  2019  002D0E  0E30               	movlw	48
  2020  002D10  0100               	movlb	0	; () banked
  2021  002D12  1762               	andwf	??_SetDCPWM5& (0+255),f,b
  2022  002D14  5070               	movf	3952,w,c	;volatile
  2023  002D16  0BCF               	andlw	207
  2024  002D18  0100               	movlb	0	; () banked
  2025  002D1A  1162               	iorwf	??_SetDCPWM5& (0+255),w,b
  2026  002D1C  6E70               	movwf	3952,c	;volatile
  2027                           
  2028                           ; BSR set to: 0
  2029  002D1E  0012               	return		;funcret
  2030  002D20                     __end_of_SetDCPWM5:
  2031                           	opt stack 0
  2032                           postinc0	equ	0xFEE
  2033                           wreg	equ	0xFE8
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _ResetMillis *****************
  2037 ;; Defined at:
  2038 ;;		line 15 in file "MillisecondTimer.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    7
  2059 ;; This function calls:
  2060 ;;		_WriteTimer0
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text12
  2067  002F96                     __ptext12:
  2068                           	opt stack 0
  2069  002F96                     _ResetMillis:
  2070                           	opt stack 23
  2071                           
  2072                           ;MillisecondTimer.c: 17: WriteTimer0(63036);
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;incstack = 0
  2076  002F96  0EF6               	movlw	246
  2077  002F98  0100               	movlb	0	; () banked
  2078  002F9A  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  2079  002F9C  0E3C               	movlw	60
  2080  002F9E  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  2081  002FA0  EC2A  F018         	call	_WriteTimer0	;wreg free
  2082                           
  2083                           ;MillisecondTimer.c: 18: millisecond_COUNT = 0;
  2084  002FA4  0E00               	movlw	0
  2085  002FA6  6E3B               	movwf	_millisecond_COUNT+1,c	;volatile
  2086  002FA8  0E00               	movlw	0
  2087  002FAA  6E3A               	movwf	_millisecond_COUNT,c	;volatile
  2088  002FAC  0012               	return		;funcret
  2089  002FAE                     __end_of_ResetMillis:
  2090                           	opt stack 0
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _ResetEchoLength *****************
  2096 ;; Defined at:
  2097 ;;		line 58 in file "Ultrasound.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    6
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text13
  2126  00310A                     __ptext13:
  2127                           	opt stack 0
  2128  00310A                     _ResetEchoLength:
  2129                           	opt stack 24
  2130                           
  2131                           ;Ultrasound.c: 60: echo_time = 0;
  2132                           
  2133                           ;incstack = 0
  2134  00310A  0E00               	movlw	0
  2135  00310C  6E39               	movwf	_echo_time+1,c	;volatile
  2136  00310E  0E00               	movlw	0
  2137  003110  6E38               	movwf	_echo_time,c	;volatile
  2138                           
  2139                           ;Ultrasound.c: 61: echo_acq_done = 0;
  2140  003112  0E00               	movlw	0
  2141  003114  6E48               	movwf	_echo_acq_done,c
  2142  003116  0012               	return		;funcret
  2143  003118                     __end_of_ResetEchoLength:
  2144                           	opt stack 0
  2145                           postinc0	equ	0xFEE
  2146                           wreg	equ	0xFE8
  2147                           status	equ	0xFD8
  2148                           
  2149 ;; *************** function _ReadMillis *****************
  2150 ;; Defined at:
  2151 ;;		line 7 in file "MillisecondTimer.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  2    0[BANK0 ] unsigned int 
  2158 ;; Registers used:
  2159 ;;		None
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    6
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text14
  2180  003134                     __ptext14:
  2181                           	opt stack 0
  2182  003134                     _ReadMillis:
  2183                           	opt stack 24
  2184                           
  2185                           ;MillisecondTimer.c: 9: return (millisecond_COUNT);
  2186                           
  2187                           ;incstack = 0
  2188  003134  C03A  F060         	movff	_millisecond_COUNT,?_ReadMillis	;volatile
  2189  003138  C03B  F061         	movff	_millisecond_COUNT+1,?_ReadMillis+1	;volatile
  2190  00313C  0012               	return		;funcret
  2191  00313E                     __end_of_ReadMillis:
  2192                           	opt stack 0
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _ReadEchoLength *****************
  2198 ;; Defined at:
  2199 ;;		line 52 in file "Ultrasound.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2    0[BANK0 ] unsigned int 
  2206 ;; Registers used:
  2207 ;;		None
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    6
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text15
  2228  00313E                     __ptext15:
  2229                           	opt stack 0
  2230  00313E                     _ReadEchoLength:
  2231                           	opt stack 24
  2232                           
  2233                           ;Ultrasound.c: 54: return (echo_time);
  2234                           
  2235                           ;incstack = 0
  2236  00313E  C038  F060         	movff	_echo_time,?_ReadEchoLength	;volatile
  2237  003142  C039  F061         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  2238  003146  0012               	return		;funcret
  2239  003148                     __end_of_ReadEchoLength:
  2240                           	opt stack 0
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function _GetDistance *****************
  2246 ;; Defined at:
  2247 ;;		line 34 in file "Ultrasound.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    7
  2268 ;; This function calls:
  2269 ;;		_Delay1TCYx
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text16
  2276  003030                     __ptext16:
  2277                           	opt stack 0
  2278  003030                     _GetDistance:
  2279                           	opt stack 23
  2280                           
  2281                           ;Ultrasound.c: 36: LATEbits.LATE5 = 1;
  2282                           
  2283                           ;incstack = 0
  2284  003030  8A8D               	bsf	3981,5,c	;volatile
  2285                           
  2286                           ;Ultrasound.c: 37: Delay1TCYx(25);
  2287  003032  0E19               	movlw	25
  2288  003034  EC57  F018         	call	_Delay1TCYx
  2289                           
  2290                           ;Ultrasound.c: 38: LATEbits.LATE5 = 0;
  2291  003038  9A8D               	bcf	3981,5,c	;volatile
  2292                           
  2293                           ;Ultrasound.c: 39: INTCONbits.RBIE = 1;
  2294  00303A  86F2               	bsf	intcon,3,c	;volatile
  2295                           
  2296                           ;Ultrasound.c: 40: echo_acq_done = 0;
  2297  00303C  0E00               	movlw	0
  2298  00303E  6E48               	movwf	_echo_acq_done,c
  2299  003040  0012               	return		;funcret
  2300  003042                     __end_of_GetDistance:
  2301                           	opt stack 0
  2302                           intcon	equ	0xFF2
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           status	equ	0xFD8
  2306                           
  2307 ;; *************** function _Delay1TCYx *****************
  2308 ;; Defined at:
  2309 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  unit            1    wreg     unsigned char 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  unit            1    0[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;		None               void
  2316 ;; Registers used:
  2317 ;;		wreg
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:        1 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    6
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_GetDistance
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text17
  2338  0030AE                     __ptext17:
  2339                           	opt stack 0
  2340  0030AE                     _Delay1TCYx:
  2341                           	opt stack 23
  2342                           
  2343                           ;incstack = 0
  2344                           ;Delay1TCYx@unit stored from wreg
  2345  0030AE  0100               	movlb	0	; () banked
  2346  0030B0  6F60               	movwf	Delay1TCYx@unit& (0+255),b
  2347  0030B2                     l875:
  2348                           
  2349                           ; BSR set to: 0
  2350  0030B2  F000               	nop	
  2351  0030B4  0100               	movlb	0	; () banked
  2352  0030B6  2F60               	decfsz	Delay1TCYx@unit& (0+255),f,b
  2353  0030B8  D7FC               	goto	l875
  2354  0030BA  D000               	goto	l877
  2355  0030BC                     l877:
  2356                           
  2357                           ; BSR set to: 0
  2358  0030BC  0012               	return		;funcret
  2359  0030BE                     __end_of_Delay1TCYx:
  2360                           	opt stack 0
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           status	equ	0xFD8
  2365                           
  2366 ;; *************** function _EnableSensorLEDS *****************
  2367 ;; Defined at:
  2368 ;;		line 424 in file "FastBuggy17_Main_Code.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;		None               void
  2375 ;; Registers used:
  2376 ;;		wreg, status,2
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    6
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text18
  2397  00315C                     __ptext18:
  2398                           	opt stack 0
  2399  00315C                     _EnableSensorLEDS:
  2400                           	opt stack 24
  2401                           
  2402                           ;FastBuggy17_Main_Code.c: 426: LATE = 0x1F;
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;incstack = 0
  2406  00315C  0E1F               	movlw	31
  2407  00315E  6E8D               	movwf	3981,c	;volatile
  2408  003160  0012               	return		;funcret
  2409  003162                     __end_of_EnableSensorLEDS:
  2410                           	opt stack 0
  2411                           intcon	equ	0xFF2
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _EnableMotors *****************
  2417 ;; Defined at:
  2418 ;;		line 80 in file "Motors.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		None
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    6
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text19
  2447  003172                     __ptext19:
  2448                           	opt stack 0
  2449  003172                     _EnableMotors:
  2450                           	opt stack 24
  2451                           
  2452                           ;Motors.c: 82: LATDbits.LATD4 = 1;
  2453                           
  2454                           ;incstack = 0
  2455  003172  888C               	bsf	3980,4,c	;volatile
  2456  003174  0012               	return		;funcret
  2457  003176                     __end_of_EnableMotors:
  2458                           	opt stack 0
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _DisableMotors *****************
  2465 ;; Defined at:
  2466 ;;		line 86 in file "Motors.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		None
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    6
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text20
  2495  003176                     __ptext20:
  2496                           	opt stack 0
  2497  003176                     _DisableMotors:
  2498                           	opt stack 24
  2499                           
  2500                           ;Motors.c: 88: LATDbits.LATD4 = 0;
  2501                           
  2502                           ;incstack = 0
  2503  003176  988C               	bcf	3980,4,c	;volatile
  2504  003178  0012               	return		;funcret
  2505  00317A                     __end_of_DisableMotors:
  2506                           	opt stack 0
  2507                           intcon	equ	0xFF2
  2508                           postinc0	equ	0xFEE
  2509                           wreg	equ	0xFE8
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _ConfigureUltrasound *****************
  2513 ;; Defined at:
  2514 ;;		line 9 in file "Ultrasound.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  echo_to_cm      3    4[BANK0 ] float 
  2517 ;;  echo_to_in      3    7[BANK0 ] float 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;		None               void
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:        6 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    7
  2536 ;; This function calls:
  2537 ;;		_WriteTimer1
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text21
  2544  002E20                     __ptext21:
  2545                           	opt stack 0
  2546  002E20                     _ConfigureUltrasound:
  2547                           	opt stack 23
  2548                           
  2549                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
  2550                           
  2551                           ;incstack = 0
  2552  002E20  C064  F0D8         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
  2553  002E24  C065  F0D9         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
  2554  002E28  C066  F0DA         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
  2555                           
  2556                           ;Ultrasound.c: 11: convert_in = echo_to_in;
  2557  002E2C  C067  F0DB         	movff	ConfigureUltrasound@echo_to_in,_convert_in
  2558  002E30  C068  F0DC         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
  2559  002E34  C069  F0DD         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
  2560                           
  2561                           ;Ultrasound.c: 12: echo_acq_done = 1;
  2562  002E38  0E01               	movlw	1
  2563  002E3A  6E48               	movwf	_echo_acq_done,c
  2564                           
  2565                           ;Ultrasound.c: 13: WriteTimer1(0);
  2566  002E3C  0E00               	movlw	0
  2567  002E3E  0100               	movlb	0	; () banked
  2568  002E40  6F61               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  2569  002E42  0E00               	movlw	0
  2570  002E44  6F60               	movwf	WriteTimer1@timer1& (0+255),b
  2571  002E46  EC21  F018         	call	_WriteTimer1	;wreg free
  2572  002E4A  0012               	return		;funcret
  2573  002E4C                     __end_of_ConfigureUltrasound:
  2574                           	opt stack 0
  2575                           intcon	equ	0xFF2
  2576                           postinc0	equ	0xFEE
  2577                           wreg	equ	0xFE8
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _ConfigureTimer2 *****************
  2581 ;; Defined at:
  2582 ;;		line 155 in file "FastBuggy17_Main_Code.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;		None               void
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    7
  2603 ;; This function calls:
  2604 ;;		_OpenTimer2
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text22
  2611  003148                     __ptext22:
  2612                           	opt stack 0
  2613  003148                     _ConfigureTimer2:
  2614                           	opt stack 23
  2615                           
  2616                           ;FastBuggy17_Main_Code.c: 157: OpenTimer2(0b01111111
  2617                           ;FastBuggy17_Main_Code.c: 158: & 0b11111100
  2618                           ;FastBuggy17_Main_Code.c: 159: & 0b10000111
  2619                           ;FastBuggy17_Main_Code.c: 160: & 0b10110111);
  2620                           
  2621                           ;incstack = 0
  2622  003148  0E04               	movlw	4
  2623  00314A  EC73  F017         	call	_OpenTimer2
  2624  00314E  0012               	return		;funcret
  2625  003150                     __end_of_ConfigureTimer2:
  2626                           	opt stack 0
  2627                           intcon	equ	0xFF2
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function _OpenTimer2 *****************
  2633 ;; Defined at:
  2634 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  config          1    wreg     unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  config          1    0[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    6
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_ConfigureTimer2
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text23
  2663  002EE6                     __ptext23:
  2664                           	opt stack 0
  2665  002EE6                     _OpenTimer2:
  2666                           	opt stack 23
  2667                           
  2668                           ;incstack = 0
  2669                           ;OpenTimer2@config stored from wreg
  2670  002EE6  0100               	movlb	0	; () banked
  2671  002EE8  6F60               	movwf	OpenTimer2@config& (0+255),b
  2672                           
  2673                           ; BSR set to: 0
  2674  002EEA  0100               	movlb	0	; () banked
  2675  002EEC  5160               	movf	OpenTimer2@config& (0+255),w,b
  2676  002EEE  0BFB               	andlw	251
  2677  002EF0  6ECA               	movwf	4042,c	;volatile
  2678                           
  2679                           ; BSR set to: 0
  2680  002EF2  0E00               	movlw	0
  2681  002EF4  6ECC               	movwf	4044,c	;volatile
  2682                           
  2683                           ; BSR set to: 0
  2684  002EF6  929E               	bcf	3998,1,c	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687  002EF8  0100               	movlb	0	; () banked
  2688  002EFA  AF60               	btfss	OpenTimer2@config& (0+255),7,b
  2689  002EFC  D002               	goto	l609
  2690                           
  2691                           ; BSR set to: 0
  2692  002EFE  829D               	bsf	3997,1,c	;volatile
  2693  002F00  D001               	goto	l610
  2694  002F02                     l609:
  2695                           
  2696                           ; BSR set to: 0
  2697  002F02  929D               	bcf	3997,1,c	;volatile
  2698  002F04                     l610:
  2699                           
  2700                           ; BSR set to: 0
  2701  002F04  84CA               	bsf	4042,2,c	;volatile
  2702                           
  2703                           ; BSR set to: 0
  2704  002F06  0012               	return		;funcret
  2705  002F08                     __end_of_OpenTimer2:
  2706                           	opt stack 0
  2707                           intcon	equ	0xFF2
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           status	equ	0xFD8
  2711                           
  2712 ;; *************** function _ConfigureTimer1 *****************
  2713 ;; Defined at:
  2714 ;;		line 137 in file "FastBuggy17_Main_Code.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;		None               void
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    7
  2735 ;; This function calls:
  2736 ;;		_OpenTimer1
  2737 ;;		_WriteTimer1
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text24
  2744  002FAE                     __ptext24:
  2745                           	opt stack 0
  2746  002FAE                     _ConfigureTimer1:
  2747                           	opt stack 23
  2748                           
  2749                           ;FastBuggy17_Main_Code.c: 139: OpenTimer1(0b01111111
  2750                           ;FastBuggy17_Main_Code.c: 140: & 0b11111111
  2751                           ;FastBuggy17_Main_Code.c: 141: & 0b11111101
  2752                           ;FastBuggy17_Main_Code.c: 142: & 0b11011111
  2753                           ;FastBuggy17_Main_Code.c: 143: & 0b11110111
  2754                           ;FastBuggy17_Main_Code.c: 144: & 0b11111111);
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;incstack = 0
  2758  002FAE  0E55               	movlw	85
  2759  002FB0  ECAC  F016         	call	_OpenTimer1
  2760                           
  2761                           ;FastBuggy17_Main_Code.c: 148: T1CONbits.TMR1ON = 0;
  2762  002FB4  90CD               	bcf	4045,0,c	;volatile
  2763                           
  2764                           ;FastBuggy17_Main_Code.c: 150: WriteTimer1(0);
  2765  002FB6  0E00               	movlw	0
  2766  002FB8  0100               	movlb	0	; () banked
  2767  002FBA  6F61               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  2768  002FBC  0E00               	movlw	0
  2769  002FBE  6F60               	movwf	WriteTimer1@timer1& (0+255),b
  2770  002FC0  EC21  F018         	call	_WriteTimer1	;wreg free
  2771  002FC4  0012               	return		;funcret
  2772  002FC6                     __end_of_ConfigureTimer1:
  2773                           	opt stack 0
  2774                           intcon	equ	0xFF2
  2775                           postinc0	equ	0xFEE
  2776                           wreg	equ	0xFE8
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _WriteTimer1 *****************
  2780 ;; Defined at:
  2781 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  timer1          2    0[BANK0 ] unsigned int 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  timer           2    2[BANK0 ] struct Timers
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		None
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;Total ram usage:        4 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    6
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_ConfigureUltrasound
  2806 ;;		_ConfigureTimer1
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text25
  2811  003042                     __ptext25:
  2812                           	opt stack 0
  2813  003042                     _WriteTimer1:
  2814                           	opt stack 23
  2815                           
  2816                           ;incstack = 0
  2817  003042  C060  F062         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2818  003046  C061  F063         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2819  00304A  C063  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2820  00304E  C062  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2821  003052  0012               	return		;funcret
  2822  003054                     __end_of_WriteTimer1:
  2823                           	opt stack 0
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _OpenTimer1 *****************
  2830 ;; Defined at:
  2831 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  config          1    wreg     unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  config          1    0[BANK0 ] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;		None               void
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:        1 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    6
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_ConfigureTimer1
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text26
  2860  002D58                     __ptext26:
  2861                           	opt stack 0
  2862  002D58                     _OpenTimer1:
  2863                           	opt stack 23
  2864                           
  2865                           ;incstack = 0
  2866                           ;OpenTimer1@config stored from wreg
  2867  002D58  0100               	movlb	0	; () banked
  2868  002D5A  6F60               	movwf	OpenTimer1@config& (0+255),b
  2869                           
  2870                           ; BSR set to: 0
  2871  002D5C  0100               	movlb	0	; () banked
  2872  002D5E  5160               	movf	OpenTimer1@config& (0+255),w,b
  2873  002D60  0B7E               	andlw	126
  2874  002D62  6ECD               	movwf	4045,c	;volatile
  2875                           
  2876                           ; BSR set to: 0
  2877  002D64  0100               	movlb	0	; () banked
  2878  002D66  AD60               	btfss	OpenTimer1@config& (0+255),6,b
  2879  002D68  D002               	goto	l578
  2880                           
  2881                           ; BSR set to: 0
  2882  002D6A  8ECD               	bsf	4045,7,c	;volatile
  2883  002D6C  D002               	goto	l4209
  2884  002D6E                     l578:
  2885                           
  2886                           ; BSR set to: 0
  2887  002D6E  9ECD               	bcf	4045,7,c	;volatile
  2888  002D70  D000               	goto	l4209
  2889  002D72                     l4209:
  2890                           
  2891                           ; BSR set to: 0
  2892  002D72  0E00               	movlw	0
  2893  002D74  6ECF               	movwf	4047,c	;volatile
  2894  002D76  0E00               	movlw	0
  2895  002D78  6ECE               	movwf	4046,c	;volatile
  2896                           
  2897                           ; BSR set to: 0
  2898  002D7A  909E               	bcf	3998,0,c	;volatile
  2899                           
  2900                           ; BSR set to: 0
  2901  002D7C  0100               	movlb	0	; () banked
  2902  002D7E  AF60               	btfss	OpenTimer1@config& (0+255),7,b
  2903  002D80  D002               	goto	l580
  2904                           
  2905                           ; BSR set to: 0
  2906  002D82  809D               	bsf	3997,0,c	;volatile
  2907  002D84  D001               	goto	l581
  2908  002D86                     l580:
  2909                           
  2910                           ; BSR set to: 0
  2911  002D86  909D               	bcf	3997,0,c	;volatile
  2912  002D88                     l581:
  2913                           
  2914                           ; BSR set to: 0
  2915  002D88  80CD               	bsf	4045,0,c	;volatile
  2916                           
  2917                           ; BSR set to: 0
  2918  002D8A  0012               	return		;funcret
  2919  002D8C                     __end_of_OpenTimer1:
  2920                           	opt stack 0
  2921                           intcon	equ	0xFF2
  2922                           postinc0	equ	0xFEE
  2923                           wreg	equ	0xFE8
  2924                           status	equ	0xFD8
  2925                           
  2926 ;; *************** function _ConfigureTimer0 *****************
  2927 ;; Defined at:
  2928 ;;		line 123 in file "FastBuggy17_Main_Code.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;		None               void
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    7
  2949 ;; This function calls:
  2950 ;;		_OpenTimer0
  2951 ;;		_WriteTimer0
  2952 ;; This function is called by:
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text27
  2958  002FC6                     __ptext27:
  2959                           	opt stack 0
  2960  002FC6                     _ConfigureTimer0:
  2961                           	opt stack 23
  2962                           
  2963                           ;FastBuggy17_Main_Code.c: 125: OpenTimer0(0b11111111
  2964                           ;FastBuggy17_Main_Code.c: 126: & 0b10111111
  2965                           ;FastBuggy17_Main_Code.c: 127: & 0b11011111
  2966                           ;FastBuggy17_Main_Code.c: 128: & 0b11111111);
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;incstack = 0
  2970  002FC6  0E9F               	movlw	159
  2971  002FC8  EC3A  F017         	call	_OpenTimer0
  2972                           
  2973                           ;FastBuggy17_Main_Code.c: 132: WriteTimer0(63036);
  2974  002FCC  0EF6               	movlw	246
  2975  002FCE  0100               	movlb	0	; () banked
  2976  002FD0  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  2977  002FD2  0E3C               	movlw	60
  2978  002FD4  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  2979  002FD6  EC2A  F018         	call	_WriteTimer0	;wreg free
  2980  002FDA  0012               	return		;funcret
  2981  002FDC                     __end_of_ConfigureTimer0:
  2982                           	opt stack 0
  2983                           intcon	equ	0xFF2
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _WriteTimer0 *****************
  2989 ;; Defined at:
  2990 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  timer0          2    0[BANK0 ] unsigned int 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  timer           2    2[BANK0 ] struct Timers
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;Total ram usage:        4 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    6
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_ResetMillis
  3015 ;;		_ConfigureTimer0
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text28
  3020  003054                     __ptext28:
  3021                           	opt stack 0
  3022  003054                     _WriteTimer0:
  3023                           	opt stack 23
  3024                           
  3025                           ;incstack = 0
  3026  003054  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3027  003058  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3028  00305C  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3029  003060  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3030  003064  0012               	return		;funcret
  3031  003066                     __end_of_WriteTimer0:
  3032                           	opt stack 0
  3033                           intcon	equ	0xFF2
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _OpenTimer0 *****************
  3039 ;; Defined at:
  3040 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  config          1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  config          1    0[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;		None               void
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        1 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    6
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_ConfigureTimer0
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text29
  3069  002E74                     __ptext29:
  3070                           	opt stack 0
  3071  002E74                     _OpenTimer0:
  3072                           	opt stack 23
  3073                           
  3074                           ;incstack = 0
  3075                           ;OpenTimer0@config stored from wreg
  3076  002E74  0100               	movlb	0	; () banked
  3077  002E76  6F60               	movwf	OpenTimer0@config& (0+255),b
  3078                           
  3079                           ; BSR set to: 0
  3080  002E78  0100               	movlb	0	; () banked
  3081  002E7A  5160               	movf	OpenTimer0@config& (0+255),w,b
  3082  002E7C  0B7F               	andlw	127
  3083  002E7E  6ED5               	movwf	4053,c	;volatile
  3084                           
  3085                           ; BSR set to: 0
  3086  002E80  0E00               	movlw	0
  3087  002E82  6ED7               	movwf	4055,c	;volatile
  3088                           
  3089                           ; BSR set to: 0
  3090  002E84  0E00               	movlw	0
  3091  002E86  6ED6               	movwf	4054,c	;volatile
  3092                           
  3093                           ; BSR set to: 0
  3094  002E88  94F2               	bcf	intcon,2,c	;volatile
  3095                           
  3096                           ; BSR set to: 0
  3097  002E8A  0100               	movlb	0	; () banked
  3098  002E8C  AF60               	btfss	OpenTimer0@config& (0+255),7,b
  3099  002E8E  D002               	goto	l554
  3100                           
  3101                           ; BSR set to: 0
  3102  002E90  8AF2               	bsf	intcon,5,c	;volatile
  3103  002E92  D001               	goto	l555
  3104  002E94                     l554:
  3105                           
  3106                           ; BSR set to: 0
  3107  002E94  9AF2               	bcf	intcon,5,c	;volatile
  3108  002E96                     l555:
  3109                           
  3110                           ; BSR set to: 0
  3111  002E96  8ED5               	bsf	4053,7,c	;volatile
  3112                           
  3113                           ; BSR set to: 0
  3114  002E98  0012               	return		;funcret
  3115  002E9A                     __end_of_OpenTimer0:
  3116                           	opt stack 0
  3117                           intcon	equ	0xFF2
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           status	equ	0xFD8
  3121                           
  3122 ;; *************** function _ConfigurePWM *****************
  3123 ;; Defined at:
  3124 ;;		line 173 in file "FastBuggy17_Main_Code.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;		None               void
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    7
  3145 ;; This function calls:
  3146 ;;		_OpenPWM4
  3147 ;;		_OpenPWM5
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text30
  3154  003118                     __ptext30:
  3155                           	opt stack 0
  3156  003118                     _ConfigurePWM:
  3157                           	opt stack 23
  3158                           
  3159                           ;FastBuggy17_Main_Code.c: 175: OpenPWM4(130);
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;incstack = 0
  3163  003118  0E82               	movlw	130
  3164  00311A  EC60  F017         	call	_OpenPWM4
  3165                           
  3166                           ;FastBuggy17_Main_Code.c: 176: OpenPWM5(130);
  3167  00311E  0E82               	movlw	130
  3168  003120  EC4D  F017         	call	_OpenPWM5
  3169  003124  0012               	return		;funcret
  3170  003126                     __end_of_ConfigurePWM:
  3171                           	opt stack 0
  3172                           intcon	equ	0xFF2
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _OpenPWM5 *****************
  3178 ;; Defined at:
  3179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  period          1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  period          1    0[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg, status,2
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:        1 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    6
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_ConfigurePWM
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text31
  3208  002E9A                     __ptext31:
  3209                           	opt stack 0
  3210  002E9A                     _OpenPWM5:
  3211                           	opt stack 23
  3212                           
  3213                           ;incstack = 0
  3214                           ;OpenPWM5@period stored from wreg
  3215  002E9A  0100               	movlb	0	; () banked
  3216  002E9C  6F60               	movwf	OpenPWM5@period& (0+255),b
  3217                           
  3218                           ; BSR set to: 0
  3219  002E9E  0E0C               	movlw	12
  3220  002EA0  6E70               	movwf	3952,c	;volatile
  3221                           
  3222                           ; BSR set to: 0
  3223  002EA2  ACB1               	btfss	4017,6,c	;volatile
  3224                           
  3225                           ; BSR set to: 0
  3226  002EA4  B6B1               	btfsc	4017,3,c	;volatile
  3227  002EA6  D005               	goto	l532
  3228                           
  3229                           ; BSR set to: 0
  3230  002EA8  94CA               	bcf	4042,2,c	;volatile
  3231                           
  3232                           ; BSR set to: 0
  3233  002EAA  C060  FFCB         	movff	OpenPWM5@period,4043	;volatile
  3234                           
  3235                           ; BSR set to: 0
  3236  002EAE  84CA               	bsf	4042,2,c	;volatile
  3237  002EB0  D005               	goto	l4261
  3238  002EB2                     l532:
  3239                           
  3240                           ; BSR set to: 0
  3241  002EB2  9476               	bcf	3958,2,c	;volatile
  3242                           
  3243                           ; BSR set to: 0
  3244  002EB4  C060  FF77         	movff	OpenPWM5@period,3959	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247  002EB8  8476               	bsf	3958,2,c	;volatile
  3248  002EBA  D000               	goto	l4261
  3249  002EBC                     l4261:
  3250                           
  3251                           ; BSR set to: 0
  3252  002EBC  9898               	bcf	3992,4,c	;volatile
  3253                           
  3254                           ; BSR set to: 0
  3255  002EBE  0012               	return		;funcret
  3256  002EC0                     __end_of_OpenPWM5:
  3257                           	opt stack 0
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _OpenPWM4 *****************
  3264 ;; Defined at:
  3265 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  period          1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  period          1    0[BANK0 ] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;		None               void
  3272 ;; Registers used:
  3273 ;;		wreg, status,2
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    6
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_ConfigurePWM
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text32
  3294  002EC0                     __ptext32:
  3295                           	opt stack 0
  3296  002EC0                     _OpenPWM4:
  3297                           	opt stack 23
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;incstack = 0
  3301                           ;OpenPWM4@period stored from wreg
  3302  002EC0  0100               	movlb	0	; () banked
  3303  002EC2  6F60               	movwf	OpenPWM4@period& (0+255),b
  3304                           
  3305                           ; BSR set to: 0
  3306  002EC4  0E0C               	movlw	12
  3307  002EC6  6E73               	movwf	3955,c	;volatile
  3308                           
  3309                           ; BSR set to: 0
  3310  002EC8  9698               	bcf	3992,3,c	;volatile
  3311                           
  3312                           ; BSR set to: 0
  3313  002ECA  ACB1               	btfss	4017,6,c	;volatile
  3314                           
  3315                           ; BSR set to: 0
  3316  002ECC  B6B1               	btfsc	4017,3,c	;volatile
  3317  002ECE  D005               	goto	l506
  3318                           
  3319                           ; BSR set to: 0
  3320  002ED0  94CA               	bcf	4042,2,c	;volatile
  3321                           
  3322                           ; BSR set to: 0
  3323  002ED2  C060  FFCB         	movff	OpenPWM4@period,4043	;volatile
  3324                           
  3325                           ; BSR set to: 0
  3326  002ED6  84CA               	bsf	4042,2,c	;volatile
  3327  002ED8  D005               	goto	l508
  3328  002EDA                     l506:
  3329                           
  3330                           ; BSR set to: 0
  3331  002EDA  9476               	bcf	3958,2,c	;volatile
  3332                           
  3333                           ; BSR set to: 0
  3334  002EDC  C060  FF77         	movff	OpenPWM4@period,3959	;volatile
  3335                           
  3336                           ; BSR set to: 0
  3337  002EE0  8476               	bsf	3958,2,c	;volatile
  3338  002EE2  D000               	goto	l508
  3339  002EE4                     l508:
  3340                           
  3341                           ; BSR set to: 0
  3342  002EE4  0012               	return		;funcret
  3343  002EE6                     __end_of_OpenPWM4:
  3344                           	opt stack 0
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function _ConfigureInterrupts *****************
  3351 ;; Defined at:
  3352 ;;		line 72 in file "FastBuggy17_Main_Code.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;		None               void
  3359 ;; Registers used:
  3360 ;;		None
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    6
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text33
  3381  002F62                     __ptext33:
  3382                           	opt stack 0
  3383  002F62                     _ConfigureInterrupts:
  3384                           	opt stack 24
  3385                           
  3386                           ;FastBuggy17_Main_Code.c: 74: INTCONbits.GIE = 1;
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;incstack = 0
  3390  002F62  8EF2               	bsf	intcon,7,c	;volatile
  3391                           
  3392                           ;FastBuggy17_Main_Code.c: 75: INTCONbits.PEIE = 1;
  3393  002F64  8CF2               	bsf	intcon,6,c	;volatile
  3394                           
  3395                           ;FastBuggy17_Main_Code.c: 76: RCONbits.IPEN = 1;
  3396  002F66  8ED0               	bsf	4048,7,c	;volatile
  3397                           
  3398                           ;FastBuggy17_Main_Code.c: 93: INTCONbits.RBIE = 0;
  3399  002F68  96F2               	bcf	intcon,3,c	;volatile
  3400                           
  3401                           ;FastBuggy17_Main_Code.c: 94: INTCONbits.RBIF = 0;
  3402  002F6A  90F2               	bcf	intcon,0,c	;volatile
  3403                           
  3404                           ;FastBuggy17_Main_Code.c: 95: INTCON2bits.RBIP = 1;
  3405  002F6C  80F1               	bsf	intcon2,0,c	;volatile
  3406                           
  3407                           ;FastBuggy17_Main_Code.c: 98: INTCONbits.TMR0IE = 1;
  3408  002F6E  8AF2               	bsf	intcon,5,c	;volatile
  3409                           
  3410                           ;FastBuggy17_Main_Code.c: 99: INTCONbits.TMR0IF = 0;
  3411  002F70  94F2               	bcf	intcon,2,c	;volatile
  3412                           
  3413                           ;FastBuggy17_Main_Code.c: 100: INTCON2bits.TMR0IP = 1;
  3414  002F72  84F1               	bsf	intcon2,2,c	;volatile
  3415                           
  3416                           ;FastBuggy17_Main_Code.c: 109: PIE1bits.ADIE = 0;
  3417  002F74  9C9D               	bcf	3997,6,c	;volatile
  3418                           
  3419                           ;FastBuggy17_Main_Code.c: 110: PIR1bits.ADIF = 0;
  3420  002F76  9C9E               	bcf	3998,6,c	;volatile
  3421                           
  3422                           ;FastBuggy17_Main_Code.c: 111: IPR1bits.ADIP = 0;
  3423  002F78  9C9F               	bcf	3999,6,c	;volatile
  3424  002F7A  0012               	return		;funcret
  3425  002F7C                     __end_of_ConfigureInterrupts:
  3426                           	opt stack 0
  3427                           intcon	equ	0xFF2
  3428                           intcon2	equ	0xFF1
  3429                           postinc0	equ	0xFEE
  3430                           wreg	equ	0xFE8
  3431                           status	equ	0xFD8
  3432                           
  3433 ;; *************** function _ConfigureBuggyIO *****************
  3434 ;; Defined at:
  3435 ;;		line 196 in file "FastBuggy17_Main_Code.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, status,2
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    6
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text34
  3464  002F7C                     __ptext34:
  3465                           	opt stack 0
  3466  002F7C                     _ConfigureBuggyIO:
  3467                           	opt stack 24
  3468                           
  3469                           ;FastBuggy17_Main_Code.c: 199: TRISA = 0xFF;
  3470                           
  3471                           ;incstack = 0
  3472  002F7C  6892               	setf	3986,c	;volatile
  3473                           
  3474                           ;FastBuggy17_Main_Code.c: 202: TRISB = 0xFF;
  3475  002F7E  6893               	setf	3987,c	;volatile
  3476                           
  3477                           ;FastBuggy17_Main_Code.c: 205: TRISC = 0xBF;
  3478  002F80  0EBF               	movlw	191
  3479  002F82  6E94               	movwf	3988,c	;volatile
  3480                           
  3481                           ;FastBuggy17_Main_Code.c: 208: TRISD = 0xE0;
  3482  002F84  0EE0               	movlw	224
  3483  002F86  6E95               	movwf	3989,c	;volatile
  3484                           
  3485                           ;FastBuggy17_Main_Code.c: 211: TRISE = 0x80;
  3486  002F88  0E80               	movlw	128
  3487  002F8A  6E96               	movwf	3990,c	;volatile
  3488                           
  3489                           ;FastBuggy17_Main_Code.c: 214: TRISG = 0xE7;
  3490  002F8C  0EE7               	movlw	231
  3491  002F8E  6E98               	movwf	3992,c	;volatile
  3492                           
  3493                           ;FastBuggy17_Main_Code.c: 217: TRISJ = 0x00;
  3494  002F90  0E00               	movlw	0
  3495  002F92  6E9A               	movwf	3994,c	;volatile
  3496  002F94  0012               	return		;funcret
  3497  002F96                     __end_of_ConfigureBuggyIO:
  3498                           	opt stack 0
  3499                           intcon	equ	0xFF2
  3500                           intcon2	equ	0xFF1
  3501                           postinc0	equ	0xFEE
  3502                           wreg	equ	0xFE8
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _ConfigureADC *****************
  3506 ;; Defined at:
  3507 ;;		line 222 in file "FastBuggy17_Main_Code.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;		None               void
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    7
  3528 ;; This function calls:
  3529 ;;		_OpenADC
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text35
  3536  003008                     __ptext35:
  3537                           	opt stack 0
  3538  003008                     _ConfigureADC:
  3539                           	opt stack 23
  3540                           
  3541                           ;FastBuggy17_Main_Code.c: 224: OpenADC(0b10011111
  3542                           ;FastBuggy17_Main_Code.c: 225: & 0b11111111
  3543                           ;FastBuggy17_Main_Code.c: 226: & 0b11110101,
  3544                           ;FastBuggy17_Main_Code.c: 227: 0b10000111
  3545                           ;FastBuggy17_Main_Code.c: 228: & 0b01111111
  3546                           ;FastBuggy17_Main_Code.c: 229: & 0b11111110
  3547                           ;FastBuggy17_Main_Code.c: 230: & 0b11111101,
  3548                           ;FastBuggy17_Main_Code.c: 231: 9);
  3549                           
  3550                           ;incstack = 0
  3551  003008  0E04               	movlw	4
  3552  00300A  0100               	movlb	0	; () banked
  3553  00300C  6F60               	movwf	OpenADC@config2& (0+255),b
  3554  00300E  0E09               	movlw	9
  3555  003010  0100               	movlb	0	; () banked
  3556  003012  6F61               	movwf	OpenADC@portconfig& (0+255),b
  3557  003014  0E95               	movlw	149
  3558  003016  ECC9  F014         	call	_OpenADC
  3559  00301A  0012               	return		;funcret
  3560  00301C                     __end_of_ConfigureADC:
  3561                           	opt stack 0
  3562                           intcon	equ	0xFF2
  3563                           intcon2	equ	0xFF1
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           status	equ	0xFD8
  3567                           
  3568 ;; *************** function _OpenADC *****************
  3569 ;; Defined at:
  3570 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  config          1    wreg     unsigned char 
  3573 ;;  config2         1    0[BANK0 ] unsigned char 
  3574 ;;  portconfig      1    1[BANK0 ] unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  config          1    4[BANK0 ] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;Total ram usage:        5 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    6
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_ConfigureADC
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text36
  3601  002992                     __ptext36:
  3602                           	opt stack 0
  3603  002992                     _OpenADC:
  3604                           	opt stack 23
  3605                           
  3606                           ;incstack = 0
  3607                           ;OpenADC@config stored from wreg
  3608  002992  0100               	movlb	0	; () banked
  3609  002994  6F64               	movwf	OpenADC@config& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612  002996  0E00               	movlw	0
  3613  002998  6EC2               	movwf	4034,c	;volatile
  3614  00299A  0E00               	movlw	0
  3615  00299C  6EC0               	movwf	4032,c	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618  00299E  0100               	movlb	0	; () banked
  3619  0029A0  90D8               	bcf	status,0,c
  3620  0029A2  3160               	rrcf	OpenADC@config2& (0+255),w,b
  3621  0029A4  0B3C               	andlw	60
  3622  0029A6  6EC2               	movwf	4034,c	;volatile
  3623                           
  3624                           ; BSR set to: 0
  3625  0029A8  C060  F062         	movff	OpenADC@config2,??_OpenADC
  3626  0029AC  0100               	movlb	0	; () banked
  3627  0029AE  3B62               	swapf	??_OpenADC& (0+255),f,b
  3628  0029B0  0EF0               	movlw	240
  3629  0029B2  1762               	andwf	??_OpenADC& (0+255),f,b
  3630  0029B4  0E30               	movlw	48
  3631  0029B6  0100               	movlb	0	; () banked
  3632  0029B8  1762               	andwf	??_OpenADC& (0+255),f,b
  3633  0029BA  0100               	movlb	0	; () banked
  3634  0029BC  5161               	movf	OpenADC@portconfig& (0+255),w,b
  3635  0029BE  0B0F               	andlw	15
  3636  0029C0  0100               	movlb	0	; () banked
  3637  0029C2  1162               	iorwf	??_OpenADC& (0+255),w,b
  3638  0029C4  6EC1               	movwf	4033,c	;volatile
  3639                           
  3640                           ; BSR set to: 0
  3641  0029C6  C064  F062         	movff	OpenADC@config,??_OpenADC
  3642  0029CA  0100               	movlb	0	; () banked
  3643  0029CC  90D8               	bcf	status,0,c
  3644  0029CE  3762               	rlcf	??_OpenADC& (0+255),f,b
  3645  0029D0  0100               	movlb	0	; () banked
  3646  0029D2  90D8               	bcf	status,0,c
  3647  0029D4  3762               	rlcf	??_OpenADC& (0+255),f,b
  3648  0029D6  0E38               	movlw	56
  3649  0029D8  0100               	movlb	0	; () banked
  3650  0029DA  1762               	andwf	??_OpenADC& (0+255),f,b
  3651  0029DC  C064  F063         	movff	OpenADC@config,??_OpenADC+1
  3652  0029E0  0100               	movlb	0	; () banked
  3653  0029E2  3B63               	swapf	(??_OpenADC+1)& (0+255),f,b
  3654  0029E4  0E0F               	movlw	15
  3655  0029E6  1763               	andwf	(??_OpenADC+1)& (0+255),f,b
  3656  0029E8  0E07               	movlw	7
  3657  0029EA  0100               	movlb	0	; () banked
  3658  0029EC  1763               	andwf	(??_OpenADC+1)& (0+255),f,b
  3659  0029EE  0100               	movlb	0	; () banked
  3660  0029F0  5164               	movf	OpenADC@config& (0+255),w,b
  3661  0029F2  0B80               	andlw	128
  3662  0029F4  0100               	movlb	0	; () banked
  3663  0029F6  1163               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3664  0029F8  0100               	movlb	0	; () banked
  3665  0029FA  1162               	iorwf	??_OpenADC& (0+255),w,b
  3666  0029FC  6EC0               	movwf	4032,c	;volatile
  3667                           
  3668                           ; BSR set to: 0
  3669  0029FE  0100               	movlb	0	; () banked
  3670  002A00  AF60               	btfss	OpenADC@config2& (0+255),7,b
  3671  002A02  D003               	goto	l476
  3672                           
  3673                           ; BSR set to: 0
  3674  002A04  9C9E               	bcf	3998,6,c	;volatile
  3675  002A06  8C9D               	bsf	3997,6,c	;volatile
  3676  002A08  8CF2               	bsf	intcon,6,c	;volatile
  3677  002A0A                     l476:
  3678                           
  3679                           ; BSR set to: 0
  3680  002A0A  80C2               	bsf	4034,0,c	;volatile
  3681                           
  3682                           ; BSR set to: 0
  3683  002A0C  0012               	return		;funcret
  3684  002A0E                     __end_of_OpenADC:
  3685                           	opt stack 0
  3686                           intcon	equ	0xFF2
  3687                           intcon2	equ	0xFF1
  3688                           postinc0	equ	0xFEE
  3689                           wreg	equ	0xFE8
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function _ChangeMode *****************
  3693 ;; Defined at:
  3694 ;;		line 502 in file "FastBuggy17_Main_Code.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;		None               void
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;Total ram usage:        0 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    7
  3715 ;; This function calls:
  3716 ;;		_Delay10KTCYx
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text37
  3723  002E4C                     __ptext37:
  3724                           	opt stack 0
  3725  002E4C                     _ChangeMode:
  3726                           	opt stack 23
  3727                           
  3728                           ;FastBuggy17_Main_Code.c: 503: LATJ = 0x00;
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;incstack = 0
  3732  002E4C  0E00               	movlw	0
  3733  002E4E  6E91               	movwf	3985,c	;volatile
  3734                           
  3735                           ;FastBuggy17_Main_Code.c: 504: LATJ = 0x1F;
  3736  002E50  0E1F               	movlw	31
  3737  002E52  6E91               	movwf	3985,c	;volatile
  3738                           
  3739                           ;FastBuggy17_Main_Code.c: 505: Delay10KTCYx(125);
  3740  002E54  0E7D               	movlw	125
  3741  002E56  EC93  F017         	call	_Delay10KTCYx
  3742                           
  3743                           ;FastBuggy17_Main_Code.c: 506: LATJ = 0x00;
  3744  002E5A  0E00               	movlw	0
  3745  002E5C  6E91               	movwf	3985,c	;volatile
  3746                           
  3747                           ;FastBuggy17_Main_Code.c: 507: Delay10KTCYx(125);
  3748  002E5E  0E7D               	movlw	125
  3749  002E60  EC93  F017         	call	_Delay10KTCYx
  3750                           
  3751                           ;FastBuggy17_Main_Code.c: 508: LATJ = 0x1F;
  3752  002E64  0E1F               	movlw	31
  3753  002E66  6E91               	movwf	3985,c	;volatile
  3754                           
  3755                           ;FastBuggy17_Main_Code.c: 509: Delay10KTCYx(125);
  3756  002E68  0E7D               	movlw	125
  3757  002E6A  EC93  F017         	call	_Delay10KTCYx
  3758                           
  3759                           ;FastBuggy17_Main_Code.c: 510: LATJ = 0x00;
  3760  002E6E  0E00               	movlw	0
  3761  002E70  6E91               	movwf	3985,c	;volatile
  3762  002E72  0012               	return		;funcret
  3763  002E74                     __end_of_ChangeMode:
  3764                           	opt stack 0
  3765                           intcon	equ	0xFF2
  3766                           intcon2	equ	0xFF1
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _Delay10KTCYx *****************
  3772 ;; Defined at:
  3773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  unit            1    wreg     unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  unit            1    1[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;Total ram usage:        2 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    6
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_ChangeMode
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text38
  3803  002F26                     __ptext38:
  3804                           	opt stack 0
  3805  002F26                     _Delay10KTCYx:
  3806                           	opt stack 24
  3807                           
  3808                           ;incstack = 0
  3809                           ;Delay10KTCYx@unit stored from wreg
  3810  002F26  0100               	movlb	0	; () banked
  3811  002F28  6F61               	movwf	Delay10KTCYx@unit& (0+255),b
  3812  002F2A                     
  3813                           ; BSR set to: 0
  3814  002F2A  0E0D               	movlw	13
  3815  002F2C  0100               	movlb	0	; () banked
  3816  002F2E  6F60               	movwf	??_Delay10KTCYx& (0+255),b
  3817  002F30  0EFC               	movlw	252
  3818  002F32                     u4187:
  3819  002F32  2EE8               	decfsz	wreg,f,c
  3820  002F34  D7FE               	goto	u4187
  3821  002F36  2F60               	decfsz	??_Delay10KTCYx& (0+255),f,b
  3822  002F38  D7FC               	goto	u4187
  3823  002F3A  0100               	movlb	0	; () banked
  3824  002F3C  2F61               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  3825  002F3E  D7F5               	goto	l4395
  3826  002F40  D000               	goto	l870
  3827  002F42                     l870:
  3828                           
  3829                           ; BSR set to: 0
  3830  002F42  0012               	return		;funcret
  3831  002F44                     __end_of_Delay10KTCYx:
  3832                           	opt stack 0
  3833                           intcon	equ	0xFF2
  3834                           intcon2	equ	0xFF1
  3835                           postinc0	equ	0xFEE
  3836                           wreg	equ	0xFE8
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function _CalibrateSensors *****************
  3840 ;; Defined at:
  3841 ;;		line 438 in file "FastBuggy17_Main_Code.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  index           1    5[BANK0 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;		None               void
  3848 ;; Registers used:
  3849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;Total ram usage:        3 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    9
  3862 ;; This function calls:
  3863 ;;		_BusySensorAcq
  3864 ;;		_GetSensorReadings
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text39
  3871  002A84                     __ptext39:
  3872                           	opt stack 0
  3873  002A84                     _CalibrateSensors:
  3874                           	opt stack 21
  3875                           
  3876                           ;FastBuggy17_Main_Code.c: 439: unsigned char index;
  3877                           ;FastBuggy17_Main_Code.c: 441: GetSensorReadings();
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;incstack = 0
  3881  002A84  ECEE  F017         	call	_GetSensorReadings	;wreg free
  3882                           
  3883                           ;FastBuggy17_Main_Code.c: 443: while(BusySensorAcq());
  3884  002A88  D000               	goto	l4571
  3885  002A8A                     l4571:
  3886  002A8A  EC5F  F018         	call	_BusySensorAcq	;wreg free
  3887  002A8E  0900               	iorlw	0
  3888  002A90  A4D8               	btfss	status,2,c
  3889  002A92  D7FB               	goto	l4571
  3890                           
  3891                           ;FastBuggy17_Main_Code.c: 445: for(index = 0; index < 5; index++) {
  3892  002A94  0E00               	movlw	0
  3893  002A96  0100               	movlb	0	; () banked
  3894  002A98  6F65               	movwf	CalibrateSensors@index& (0+255),b
  3895  002A9A                     l4575:
  3896                           
  3897                           ; BSR set to: 0
  3898  002A9A  0E04               	movlw	4
  3899  002A9C  0100               	movlb	0	; () banked
  3900  002A9E  6565               	cpfsgt	CalibrateSensors@index& (0+255),b
  3901  002AA0  D001               	goto	l4579
  3902                           
  3903                           ; BSR set to: 0
  3904  002AA2  D028               	goto	l389
  3905  002AA4                     l4579:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;FastBuggy17_Main_Code.c: 447: sensor_offsets[index] = sensor_readings_raw[2] - sensor_r
      +                          eadings_raw[index];
  3909  002AA4  0100               	movlb	0	; () banked
  3910  002AA6  5165               	movf	CalibrateSensors@index& (0+255),w,b
  3911  002AA8  0D02               	mullw	2
  3912  002AAA  0E28               	movlw	low _sensor_readings_raw
  3913  002AAC  24F3               	addwf	prodl,w,c
  3914  002AAE  6ED9               	movwf	fsr2l,c
  3915  002AB0  0E00               	movlw	high _sensor_readings_raw
  3916  002AB2  20F4               	addwfc	prodh,w,c
  3917  002AB4  6EDA               	movwf	fsr2h,c
  3918  002AB6  CFDE F063          	movff	postinc2,??_CalibrateSensors
  3919  002ABA  CFDD F064          	movff	postdec2,??_CalibrateSensors+1
  3920  002ABE  0100               	movlb	0	; () banked
  3921  002AC0  1F63               	comf	??_CalibrateSensors& (0+255),f,b
  3922  002AC2  1F64               	comf	(??_CalibrateSensors+1)& (0+255),f,b
  3923  002AC4  4B63               	infsnz	??_CalibrateSensors& (0+255),f,b
  3924  002AC6  2B64               	incf	(??_CalibrateSensors+1)& (0+255),f,b
  3925  002AC8  502C               	movf	_sensor_readings_raw+4,w,c	;volatile
  3926  002ACA  0100               	movlb	0	; () banked
  3927  002ACC  2763               	addwf	??_CalibrateSensors& (0+255),f,b
  3928  002ACE  502D               	movf	_sensor_readings_raw+5,w,c	;volatile
  3929  002AD0  0100               	movlb	0	; () banked
  3930  002AD2  2364               	addwfc	(??_CalibrateSensors+1)& (0+255),f,b
  3931  002AD4  0100               	movlb	0	; () banked
  3932  002AD6  5165               	movf	CalibrateSensors@index& (0+255),w,b
  3933  002AD8  0D02               	mullw	2
  3934  002ADA  0EBE               	movlw	low _sensor_offsets
  3935  002ADC  24F3               	addwf	prodl,w,c
  3936  002ADE  6ED9               	movwf	fsr2l,c
  3937  002AE0  0E00               	movlw	high _sensor_offsets
  3938  002AE2  20F4               	addwfc	prodh,w,c
  3939  002AE4  6EDA               	movwf	fsr2h,c
  3940  002AE6  C063  FFDE         	movff	??_CalibrateSensors,postinc2
  3941  002AEA  C064  FFDD         	movff	??_CalibrateSensors+1,postdec2
  3942                           
  3943                           ; BSR set to: 0
  3944  002AEE  0100               	movlb	0	; () banked
  3945  002AF0  2B65               	incf	CalibrateSensors@index& (0+255),f,b
  3946  002AF2  D7D3               	goto	l4575
  3947  002AF4                     l389:
  3948                           
  3949                           ; BSR set to: 0
  3950  002AF4  0012               	return		;funcret
  3951  002AF6                     __end_of_CalibrateSensors:
  3952                           	opt stack 0
  3953                           prodh	equ	0xFF4
  3954                           prodl	equ	0xFF3
  3955                           intcon	equ	0xFF2
  3956                           intcon2	equ	0xFF1
  3957                           postinc0	equ	0xFEE
  3958                           wreg	equ	0xFE8
  3959                           postinc2	equ	0xFDE
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _CalibrateLine *****************
  3966 ;; Defined at:
  3967 ;;		line 454 in file "FastBuggy17_Main_Code.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  sum             1    0        unsigned char 
  3972 ;;  index           1    0        unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    9
  3989 ;; This function calls:
  3990 ;;		_BusyADC
  3991 ;;		_BusySensorAcq
  3992 ;;		_CalculateSensorStatuses
  3993 ;;		_ConvertADC
  3994 ;;		_DisplaySensorStatuses
  3995 ;;		_GetSensorReadings
  3996 ;;		_NormaliseSensorReadings
  3997 ;;		_ReadADC
  3998 ;;		_SetADCChannel
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text40
  4005  002B60                     __ptext40:
  4006                           	opt stack 0
  4007  002B60                     _CalibrateLine:
  4008                           	opt stack 21
  4009                           
  4010                           ;FastBuggy17_Main_Code.c: 455: unsigned char index, sum;
  4011                           ;FastBuggy17_Main_Code.c: 459: LATJ = 0x00;
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;incstack = 0
  4015  002B60  0E00               	movlw	0
  4016  002B62  6E91               	movwf	3985,c	;volatile
  4017                           
  4018                           ;FastBuggy17_Main_Code.c: 462: SetADCChannel(5);
  4019  002B64  0E05               	movlw	5
  4020  002B66  EC29  F011         	call	_SetADCChannel
  4021                           
  4022                           ;FastBuggy17_Main_Code.c: 463: ConvertADC();
  4023  002B6A  ECBD  F018         	call	_ConvertADC	;wreg free
  4024                           
  4025                           ;FastBuggy17_Main_Code.c: 464: while(BusyADC());
  4026  002B6E  D000               	goto	l4591
  4027  002B70                     l4591:
  4028  002B70  EC93  F018         	call	_BusyADC	;wreg free
  4029  002B74  0900               	iorlw	0
  4030  002B76  A4D8               	btfss	status,2,c
  4031  002B78  D7FB               	goto	l4591
  4032                           
  4033                           ;FastBuggy17_Main_Code.c: 465: sensor_threshold = ReadADC();
  4034  002B7A  EC0E  F018         	call	_ReadADC	;wreg free
  4035  002B7E  C060  F03C         	movff	?_ReadADC,_sensor_threshold
  4036  002B82  C061  F03D         	movff	?_ReadADC+1,_sensor_threshold+1
  4037                           
  4038                           ;FastBuggy17_Main_Code.c: 468: GetSensorReadings();
  4039  002B86  ECEE  F017         	call	_GetSensorReadings	;wreg free
  4040                           
  4041                           ;FastBuggy17_Main_Code.c: 470: while(BusySensorAcq());
  4042  002B8A  D000               	goto	l4597
  4043  002B8C                     l4597:
  4044  002B8C  EC5F  F018         	call	_BusySensorAcq	;wreg free
  4045  002B90  0900               	iorlw	0
  4046  002B92  A4D8               	btfss	status,2,c
  4047  002B94  D7FB               	goto	l4597
  4048                           
  4049                           ;FastBuggy17_Main_Code.c: 472: NormaliseSensorReadings();
  4050  002B96  EC07  F015         	call	_NormaliseSensorReadings	;wreg free
  4051                           
  4052                           ;FastBuggy17_Main_Code.c: 474: CalculateSensorStatuses();
  4053  002B9A  ECA0  F011         	call	_CalculateSensorStatuses	;wreg free
  4054                           
  4055                           ;FastBuggy17_Main_Code.c: 476: DisplaySensorStatuses(sensor_status);
  4056  002B9E  0E43               	movlw	low _sensor_status
  4057  002BA0  0100               	movlb	0	; () banked
  4058  002BA2  6F60               	movwf	DisplaySensorStatuses@status_array& (0+255),b
  4059  002BA4  0E00               	movlw	high _sensor_status
  4060  002BA6  0100               	movlb	0	; () banked
  4061  002BA8  6F61               	movwf	(DisplaySensorStatuses@status_array+1)& (0+255),b
  4062  002BAA  ECD8  F015         	call	_DisplaySensorStatuses	;wreg free
  4063  002BAE  0012               	return		;funcret
  4064  002BB0                     __end_of_CalibrateLine:
  4065                           	opt stack 0
  4066                           prodh	equ	0xFF4
  4067                           prodl	equ	0xFF3
  4068                           intcon	equ	0xFF2
  4069                           intcon2	equ	0xFF1
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function _ReadADC *****************
  4079 ;; Defined at:
  4080 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    0[BANK0 ] int 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;Total ram usage:        4 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    6
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_CalibrateLine
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text41
  4109  00301C                     __ptext41:
  4110                           	opt stack 0
  4111  00301C                     _ReadADC:
  4112                           	opt stack 23
  4113                           
  4114                           ;incstack = 0
  4115  00301C  50C4               	movf	4036,w,c	;volatile
  4116  00301E  0100               	movlb	0	; () banked
  4117  003020  6F62               	movwf	??_ReadADC& (0+255),b
  4118  003022  50C3               	movf	4035,w,c	;volatile
  4119  003024  0100               	movlb	0	; () banked
  4120  003026  6F60               	movwf	?_ReadADC& (0+255),b
  4121  003028  C062  F061         	movff	??_ReadADC,?_ReadADC+1
  4122  00302C  D000               	goto	l484
  4123  00302E                     l484:
  4124                           
  4125                           ; BSR set to: 0
  4126  00302E  0012               	return		;funcret
  4127  003030                     __end_of_ReadADC:
  4128                           	opt stack 0
  4129                           prodh	equ	0xFF4
  4130                           prodl	equ	0xFF3
  4131                           intcon	equ	0xFF2
  4132                           intcon2	equ	0xFF1
  4133                           postinc0	equ	0xFEE
  4134                           wreg	equ	0xFE8
  4135                           postinc2	equ	0xFDE
  4136                           postdec2	equ	0xFDD
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function _NormaliseSensorReadings *****************
  4142 ;; Defined at:
  4143 ;;		line 325 in file "FastBuggy17_Main_Code.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  index           1    4[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;		None               void
  4150 ;; Registers used:
  4151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:        5 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    6
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_CalibrateLine
  4168 ;;		_main
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text42
  4173  002A0E                     __ptext42:
  4174                           	opt stack 0
  4175  002A0E                     _NormaliseSensorReadings:
  4176                           	opt stack 24
  4177                           
  4178                           ;FastBuggy17_Main_Code.c: 326: unsigned char index;
  4179                           ;FastBuggy17_Main_Code.c: 328: for(index = 0; index < 5; index++) {
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;incstack = 0
  4183  002A0E  0E00               	movlw	0
  4184  002A10  0100               	movlb	0	; () banked
  4185  002A12  6F64               	movwf	NormaliseSensorReadings@index& (0+255),b
  4186  002A14                     l4289:
  4187                           
  4188                           ; BSR set to: 0
  4189  002A14  0E04               	movlw	4
  4190  002A16  0100               	movlb	0	; () banked
  4191  002A18  6564               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  4192  002A1A  D001               	goto	l4293
  4193                           
  4194                           ; BSR set to: 0
  4195  002A1C  D032               	goto	l336
  4196  002A1E                     l4293:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;FastBuggy17_Main_Code.c: 330: sensor_readings_normalised[index] = sensor_readings_raw[i
      +                          ndex] + sensor_offsets[index];
  4200  002A1E  0100               	movlb	0	; () banked
  4201  002A20  5164               	movf	NormaliseSensorReadings@index& (0+255),w,b
  4202  002A22  0D02               	mullw	2
  4203  002A24  0EBE               	movlw	low _sensor_offsets
  4204  002A26  24F3               	addwf	prodl,w,c
  4205  002A28  6ED9               	movwf	fsr2l,c
  4206  002A2A  0E00               	movlw	high _sensor_offsets
  4207  002A2C  20F4               	addwfc	prodh,w,c
  4208  002A2E  6EDA               	movwf	fsr2h,c
  4209  002A30  CFDE F060          	movff	postinc2,??_NormaliseSensorReadings
  4210  002A34  CFDD F061          	movff	postdec2,??_NormaliseSensorReadings+1
  4211  002A38  0100               	movlb	0	; () banked
  4212  002A3A  5164               	movf	NormaliseSensorReadings@index& (0+255),w,b
  4213  002A3C  0D02               	mullw	2
  4214  002A3E  0E28               	movlw	low _sensor_readings_raw
  4215  002A40  24F3               	addwf	prodl,w,c
  4216  002A42  6ED9               	movwf	fsr2l,c
  4217  002A44  0E00               	movlw	high _sensor_readings_raw
  4218  002A46  20F4               	addwfc	prodh,w,c
  4219  002A48  6EDA               	movwf	fsr2h,c
  4220  002A4A  CFDE F062          	movff	postinc2,??_NormaliseSensorReadings+2
  4221  002A4E  CFDD F063          	movff	postdec2,??_NormaliseSensorReadings+3
  4222  002A52  0100               	movlb	0	; () banked
  4223  002A54  5160               	movf	??_NormaliseSensorReadings& (0+255),w,b
  4224  002A56  0100               	movlb	0	; () banked
  4225  002A58  2762               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  4226  002A5A  0100               	movlb	0	; () banked
  4227  002A5C  5161               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  4228  002A5E  0100               	movlb	0	; () banked
  4229  002A60  2363               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  4230  002A62  0100               	movlb	0	; () banked
  4231  002A64  5164               	movf	NormaliseSensorReadings@index& (0+255),w,b
  4232  002A66  0D02               	mullw	2
  4233  002A68  0EC8               	movlw	low _sensor_readings_normalised
  4234  002A6A  24F3               	addwf	prodl,w,c
  4235  002A6C  6ED9               	movwf	fsr2l,c
  4236  002A6E  0E00               	movlw	high _sensor_readings_normalised
  4237  002A70  20F4               	addwfc	prodh,w,c
  4238  002A72  6EDA               	movwf	fsr2h,c
  4239  002A74  C062  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  4240  002A78  C063  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  4241                           
  4242                           ; BSR set to: 0
  4243  002A7C  0100               	movlb	0	; () banked
  4244  002A7E  2B64               	incf	NormaliseSensorReadings@index& (0+255),f,b
  4245  002A80  D7C9               	goto	l4289
  4246  002A82                     l336:
  4247                           
  4248                           ; BSR set to: 0
  4249  002A82  0012               	return		;funcret
  4250  002A84                     __end_of_NormaliseSensorReadings:
  4251                           	opt stack 0
  4252                           prodh	equ	0xFF4
  4253                           prodl	equ	0xFF3
  4254                           intcon	equ	0xFF2
  4255                           intcon2	equ	0xFF1
  4256                           postinc0	equ	0xFEE
  4257                           wreg	equ	0xFE8
  4258                           postinc2	equ	0xFDE
  4259                           postdec2	equ	0xFDD
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function _GetSensorReadings *****************
  4265 ;; Defined at:
  4266 ;;		line 307 in file "FastBuggy17_Main_Code.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;		None               void
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    8
  4287 ;; This function calls:
  4288 ;;		_ConvertADC
  4289 ;;		_SetADCChannel
  4290 ;; This function is called by:
  4291 ;;		_CalibrateSensors
  4292 ;;		_CalibrateLine
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text43
  4298  002FDC                     __ptext43:
  4299                           	opt stack 0
  4300  002FDC                     _GetSensorReadings:
  4301                           	opt stack 22
  4302                           
  4303                           ;FastBuggy17_Main_Code.c: 309: sensor_acq_index = 0;
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;incstack = 0
  4307  002FDC  0E00               	movlw	0
  4308  002FDE  6E41               	movwf	_sensor_acq_index,c	;volatile
  4309                           
  4310                           ;FastBuggy17_Main_Code.c: 310: sensor_acq_done = 0;
  4311  002FE0  0E00               	movlw	0
  4312  002FE2  6E40               	movwf	_sensor_acq_done,c	;volatile
  4313                           
  4314                           ;FastBuggy17_Main_Code.c: 311: SetADCChannel(sensor_acq_index);
  4315  002FE4  5041               	movf	_sensor_acq_index,w,c	;volatile
  4316  002FE6  EC29  F011         	call	_SetADCChannel
  4317                           
  4318                           ;FastBuggy17_Main_Code.c: 312: ConvertADC();
  4319  002FEA  ECBD  F018         	call	_ConvertADC	;wreg free
  4320                           
  4321                           ;FastBuggy17_Main_Code.c: 313: PIE1bits.ADIE = 1;
  4322  002FEE  8C9D               	bsf	3997,6,c	;volatile
  4323  002FF0  0012               	return		;funcret
  4324  002FF2                     __end_of_GetSensorReadings:
  4325                           	opt stack 0
  4326                           prodh	equ	0xFF4
  4327                           prodl	equ	0xFF3
  4328                           intcon	equ	0xFF2
  4329                           intcon2	equ	0xFF1
  4330                           postinc0	equ	0xFEE
  4331                           wreg	equ	0xFE8
  4332                           postinc2	equ	0xFDE
  4333                           postdec2	equ	0xFDD
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _SetADCChannel *****************
  4339 ;; Defined at:
  4340 ;;		line 249 in file "FastBuggy17_Main_Code.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  channel         1    wreg     unsigned char 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  channel         1    2[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;		None               void
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    7
  4361 ;; This function calls:
  4362 ;;		_SetChanADC
  4363 ;; This function is called by:
  4364 ;;		_GetSensorReadings
  4365 ;;		_CalibrateLine
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text44
  4370  002252                     __ptext44:
  4371                           	opt stack 0
  4372  002252                     _SetADCChannel:
  4373                           	opt stack 22
  4374                           
  4375                           ;incstack = 0
  4376                           ;SetADCChannel@channel stored from wreg
  4377  002252  0100               	movlb	0	; () banked
  4378  002254  6F62               	movwf	SetADCChannel@channel& (0+255),b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;FastBuggy17_Main_Code.c: 251: switch (channel) {
  4382  002256  D040               	goto	l4101
  4383  002258                     l4067:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;FastBuggy17_Main_Code.c: 253: SetChanADC(0b10000111);
  4387  002258  0E87               	movlw	135
  4388  00225A  ECA2  F017         	call	_SetChanADC
  4389                           
  4390                           ;FastBuggy17_Main_Code.c: 254: break;
  4391  00225E  D06F               	goto	l325
  4392  002260                     l4069:
  4393                           
  4394                           ;FastBuggy17_Main_Code.c: 256: SetChanADC(0b10001111);
  4395  002260  0E8F               	movlw	143
  4396  002262  ECA2  F017         	call	_SetChanADC
  4397                           
  4398                           ;FastBuggy17_Main_Code.c: 257: break;
  4399  002266  D06B               	goto	l325
  4400  002268                     l4071:
  4401                           
  4402                           ;FastBuggy17_Main_Code.c: 259: SetChanADC(0b10010111);
  4403  002268  0E97               	movlw	151
  4404  00226A  ECA2  F017         	call	_SetChanADC
  4405                           
  4406                           ;FastBuggy17_Main_Code.c: 260: break;
  4407  00226E  D067               	goto	l325
  4408  002270                     l4073:
  4409                           
  4410                           ;FastBuggy17_Main_Code.c: 262: SetChanADC(0b10011111);
  4411  002270  0E9F               	movlw	159
  4412  002272  ECA2  F017         	call	_SetChanADC
  4413                           
  4414                           ;FastBuggy17_Main_Code.c: 263: break;
  4415  002276  D063               	goto	l325
  4416  002278                     l4075:
  4417                           
  4418                           ;FastBuggy17_Main_Code.c: 265: SetChanADC(0b10100111);
  4419  002278  0EA7               	movlw	167
  4420  00227A  ECA2  F017         	call	_SetChanADC
  4421                           
  4422                           ;FastBuggy17_Main_Code.c: 266: break;
  4423  00227E  D05F               	goto	l325
  4424  002280                     l4077:
  4425                           
  4426                           ;FastBuggy17_Main_Code.c: 268: SetChanADC(0b10101111);
  4427  002280  0EAF               	movlw	175
  4428  002282  ECA2  F017         	call	_SetChanADC
  4429                           
  4430                           ;FastBuggy17_Main_Code.c: 269: break;
  4431  002286  D05B               	goto	l325
  4432  002288                     l4079:
  4433                           
  4434                           ;FastBuggy17_Main_Code.c: 271: SetChanADC(0b10110111);
  4435  002288  0EB7               	movlw	183
  4436  00228A  ECA2  F017         	call	_SetChanADC
  4437                           
  4438                           ;FastBuggy17_Main_Code.c: 272: break;
  4439  00228E  D057               	goto	l325
  4440  002290                     l4081:
  4441                           
  4442                           ;FastBuggy17_Main_Code.c: 274: SetChanADC(0b10111111);
  4443  002290  0EBF               	movlw	191
  4444  002292  ECA2  F017         	call	_SetChanADC
  4445                           
  4446                           ;FastBuggy17_Main_Code.c: 275: break;
  4447  002296  D053               	goto	l325
  4448  002298                     l4083:
  4449                           
  4450                           ;FastBuggy17_Main_Code.c: 277: SetChanADC(0b11000111);
  4451  002298  0EC7               	movlw	199
  4452  00229A  ECA2  F017         	call	_SetChanADC
  4453                           
  4454                           ;FastBuggy17_Main_Code.c: 278: break;
  4455  00229E  D04F               	goto	l325
  4456  0022A0                     l4085:
  4457                           
  4458                           ;FastBuggy17_Main_Code.c: 280: SetChanADC(0b11001111);
  4459  0022A0  0ECF               	movlw	207
  4460  0022A2  ECA2  F017         	call	_SetChanADC
  4461                           
  4462                           ;FastBuggy17_Main_Code.c: 281: break;
  4463  0022A6  D04B               	goto	l325
  4464  0022A8                     l4087:
  4465                           
  4466                           ;FastBuggy17_Main_Code.c: 283: SetChanADC(0b11010111);
  4467  0022A8  0ED7               	movlw	215
  4468  0022AA  ECA2  F017         	call	_SetChanADC
  4469                           
  4470                           ;FastBuggy17_Main_Code.c: 284: break;
  4471  0022AE  D047               	goto	l325
  4472  0022B0                     l4089:
  4473                           
  4474                           ;FastBuggy17_Main_Code.c: 286: SetChanADC(0b11011111);
  4475  0022B0  0EDF               	movlw	223
  4476  0022B2  ECA2  F017         	call	_SetChanADC
  4477                           
  4478                           ;FastBuggy17_Main_Code.c: 287: break;
  4479  0022B6  D043               	goto	l325
  4480  0022B8                     l4091:
  4481                           
  4482                           ;FastBuggy17_Main_Code.c: 289: SetChanADC(0b11100111);
  4483  0022B8  0EE7               	movlw	231
  4484  0022BA  ECA2  F017         	call	_SetChanADC
  4485                           
  4486                           ;FastBuggy17_Main_Code.c: 290: break;
  4487  0022BE  D03F               	goto	l325
  4488  0022C0                     l4093:
  4489                           
  4490                           ;FastBuggy17_Main_Code.c: 292: SetChanADC(0b11101111);
  4491  0022C0  0EEF               	movlw	239
  4492  0022C2  ECA2  F017         	call	_SetChanADC
  4493                           
  4494                           ;FastBuggy17_Main_Code.c: 293: break;
  4495  0022C6  D03B               	goto	l325
  4496  0022C8                     l4095:
  4497                           
  4498                           ;FastBuggy17_Main_Code.c: 295: SetChanADC(0b11110111);
  4499  0022C8  0EF7               	movlw	247
  4500  0022CA  ECA2  F017         	call	_SetChanADC
  4501                           
  4502                           ;FastBuggy17_Main_Code.c: 296: break;
  4503  0022CE  D037               	goto	l325
  4504  0022D0                     l4097:
  4505                           
  4506                           ;FastBuggy17_Main_Code.c: 298: SetChanADC(0b11111111);
  4507  0022D0  0EFF               	movlw	255
  4508  0022D2  ECA2  F017         	call	_SetChanADC
  4509                           
  4510                           ;FastBuggy17_Main_Code.c: 302: }
  4511                           
  4512                           ;FastBuggy17_Main_Code.c: 301: break;
  4513                           
  4514                           ;FastBuggy17_Main_Code.c: 300: default:
  4515                           
  4516                           ;FastBuggy17_Main_Code.c: 299: break;
  4517  0022D6  D033               	goto	l325
  4518  0022D8                     l4101:
  4519  0022D8  0100               	movlb	0	; () banked
  4520  0022DA  5162               	movf	SetADCChannel@channel& (0+255),w,b
  4521                           
  4522                           ; Switch size 1, requested type "space"
  4523                           ; Number of cases is 16, Range of values is 0 to 15
  4524                           ; switch strategies available:
  4525                           ; Name         Instructions Cycles
  4526                           ; simple_byte           49    25 (average)
  4527                           ;	Chosen strategy is simple_byte
  4528  0022DC  0A00               	xorlw	0	; case 0
  4529  0022DE  B4D8               	btfsc	status,2,c
  4530  0022E0  D7BB               	goto	l4067
  4531  0022E2  0A01               	xorlw	1	; case 1
  4532  0022E4  B4D8               	btfsc	status,2,c
  4533  0022E6  D7BC               	goto	l4069
  4534  0022E8  0A03               	xorlw	3	; case 2
  4535  0022EA  B4D8               	btfsc	status,2,c
  4536  0022EC  D7BD               	goto	l4071
  4537  0022EE  0A01               	xorlw	1	; case 3
  4538  0022F0  B4D8               	btfsc	status,2,c
  4539  0022F2  D7BE               	goto	l4073
  4540  0022F4  0A07               	xorlw	7	; case 4
  4541  0022F6  B4D8               	btfsc	status,2,c
  4542  0022F8  D7BF               	goto	l4075
  4543  0022FA  0A01               	xorlw	1	; case 5
  4544  0022FC  B4D8               	btfsc	status,2,c
  4545  0022FE  D7C0               	goto	l4077
  4546  002300  0A03               	xorlw	3	; case 6
  4547  002302  B4D8               	btfsc	status,2,c
  4548  002304  D7C1               	goto	l4079
  4549  002306  0A01               	xorlw	1	; case 7
  4550  002308  B4D8               	btfsc	status,2,c
  4551  00230A  D7C2               	goto	l4081
  4552  00230C  0A0F               	xorlw	15	; case 8
  4553  00230E  B4D8               	btfsc	status,2,c
  4554  002310  D7C3               	goto	l4083
  4555  002312  0A01               	xorlw	1	; case 9
  4556  002314  B4D8               	btfsc	status,2,c
  4557  002316  D7C4               	goto	l4085
  4558  002318  0A03               	xorlw	3	; case 10
  4559  00231A  B4D8               	btfsc	status,2,c
  4560  00231C  D7C5               	goto	l4087
  4561  00231E  0A01               	xorlw	1	; case 11
  4562  002320  B4D8               	btfsc	status,2,c
  4563  002322  D7C6               	goto	l4089
  4564  002324  0A07               	xorlw	7	; case 12
  4565  002326  B4D8               	btfsc	status,2,c
  4566  002328  D7C7               	goto	l4091
  4567  00232A  0A01               	xorlw	1	; case 13
  4568  00232C  B4D8               	btfsc	status,2,c
  4569  00232E  D7C8               	goto	l4093
  4570  002330  0A03               	xorlw	3	; case 14
  4571  002332  B4D8               	btfsc	status,2,c
  4572  002334  D7C9               	goto	l4095
  4573  002336  0A01               	xorlw	1	; case 15
  4574  002338  B4D8               	btfsc	status,2,c
  4575  00233A  D7CA               	goto	l4097
  4576  00233C  D000               	goto	l325
  4577  00233E                     l325:
  4578  00233E  0012               	return		;funcret
  4579  002340                     __end_of_SetADCChannel:
  4580                           	opt stack 0
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           intcon	equ	0xFF2
  4584                           intcon2	equ	0xFF1
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postinc2	equ	0xFDE
  4588                           postdec2	equ	0xFDD
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function _SetChanADC *****************
  4594 ;; Defined at:
  4595 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  channel         1    wreg     unsigned char 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  channel         1    1[BANK0 ] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;		None               void
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        2 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    6
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_SetADCChannel
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text45
  4624  002F44                     __ptext45:
  4625                           	opt stack 0
  4626  002F44                     _SetChanADC:
  4627                           	opt stack 22
  4628                           
  4629                           ;incstack = 0
  4630                           ;SetChanADC@channel stored from wreg
  4631  002F44  0100               	movlb	0	; () banked
  4632  002F46  6F61               	movwf	SetChanADC@channel& (0+255),b
  4633                           
  4634                           ; BSR set to: 0
  4635  002F48  CFC2 F060          	movff	4034,??_SetChanADC	;volatile
  4636  002F4C  0EC3               	movlw	195
  4637  002F4E  0100               	movlb	0	; () banked
  4638  002F50  1760               	andwf	??_SetChanADC& (0+255),f,b
  4639  002F52  0100               	movlb	0	; () banked
  4640  002F54  90D8               	bcf	status,0,c
  4641  002F56  3161               	rrcf	SetChanADC@channel& (0+255),w,b
  4642  002F58  0B3C               	andlw	60
  4643  002F5A  0100               	movlb	0	; () banked
  4644  002F5C  1160               	iorwf	??_SetChanADC& (0+255),w,b
  4645  002F5E  6EC2               	movwf	4034,c	;volatile
  4646                           
  4647                           ; BSR set to: 0
  4648  002F60  0012               	return		;funcret
  4649  002F62                     __end_of_SetChanADC:
  4650                           	opt stack 0
  4651                           prodh	equ	0xFF4
  4652                           prodl	equ	0xFF3
  4653                           intcon	equ	0xFF2
  4654                           intcon2	equ	0xFF1
  4655                           postinc0	equ	0xFEE
  4656                           wreg	equ	0xFE8
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _ConvertADC *****************
  4664 ;; Defined at:
  4665 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		None
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    6
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_GetSensorReadings
  4690 ;;		_CalibrateLine
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text46
  4695  00317A                     __ptext46:
  4696                           	opt stack 0
  4697  00317A                     _ConvertADC:
  4698                           	opt stack 23
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;incstack = 0
  4702  00317A  82C2               	bsf	4034,1,c	;volatile
  4703  00317C  0012               	return		;funcret
  4704  00317E                     __end_of_ConvertADC:
  4705                           	opt stack 0
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           intcon2	equ	0xFF1
  4710                           postinc0	equ	0xFEE
  4711                           wreg	equ	0xFE8
  4712                           postinc2	equ	0xFDE
  4713                           postdec2	equ	0xFDD
  4714                           fsr2h	equ	0xFDA
  4715                           fsr2l	equ	0xFD9
  4716                           status	equ	0xFD8
  4717                           
  4718 ;; *************** function _DisplaySensorStatuses *****************
  4719 ;; Defined at:
  4720 ;;		line 414 in file "FastBuggy17_Main_Code.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  status_array    2    0[BANK0 ] PTR const unsigned char 
  4723 ;;		 -> sensor_status(5), 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  index           1    4[BANK0 ] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;		None               void
  4728 ;; Registers used:
  4729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;Total ram usage:        5 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    6
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_CalibrateLine
  4746 ;;		_main
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text47
  4751  002BB0                     __ptext47:
  4752                           	opt stack 0
  4753  002BB0                     _DisplaySensorStatuses:
  4754                           	opt stack 24
  4755                           
  4756                           ;FastBuggy17_Main_Code.c: 415: unsigned char index;
  4757                           ;FastBuggy17_Main_Code.c: 417: for (index = 0; index < 5; index++) {
  4758                           
  4759                           ;incstack = 0
  4760  002BB0  0E00               	movlw	0
  4761  002BB2  0100               	movlb	0	; () banked
  4762  002BB4  6F64               	movwf	DisplaySensorStatuses@index& (0+255),b
  4763  002BB6                     l4377:
  4764                           
  4765                           ; BSR set to: 0
  4766  002BB6  0E04               	movlw	4
  4767  002BB8  0100               	movlb	0	; () banked
  4768  002BBA  6564               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  4769  002BBC  D001               	goto	l4381
  4770                           
  4771                           ; BSR set to: 0
  4772  002BBE  D01F               	goto	l375
  4773  002BC0                     l4381:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;FastBuggy17_Main_Code.c: 418: LATJ ^= *(status_array + index) << index;
  4777  002BC0  C064  F062         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  4778  002BC4  0100               	movlb	0	; () banked
  4779  002BC6  5164               	movf	DisplaySensorStatuses@index& (0+255),w,b
  4780  002BC8  0D01               	mullw	1
  4781  002BCA  50F3               	movf	prodl,w,c
  4782  002BCC  0100               	movlb	0	; () banked
  4783  002BCE  2560               	addwf	DisplaySensorStatuses@status_array& (0+255),w,b
  4784  002BD0  6ED9               	movwf	fsr2l,c
  4785  002BD2  50F4               	movf	prodh,w,c
  4786  002BD4  0100               	movlb	0	; () banked
  4787  002BD6  2161               	addwfc	(DisplaySensorStatuses@status_array+1)& (0+255),w,b
  4788  002BD8  6EDA               	movwf	fsr2h,c
  4789  002BDA  50DF               	movf	indf2,w,c
  4790  002BDC  0100               	movlb	0	; () banked
  4791  002BDE  6F63               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  4792  002BE0  0100               	movlb	0	; () banked
  4793  002BE2  2B62               	incf	??_DisplaySensorStatuses& (0+255),f,b
  4794  002BE4  D003               	goto	u3874
  4795  002BE6                     u3875:
  4796  002BE6  0100               	movlb	0	; () banked
  4797  002BE8  90D8               	bcf	status,0,c
  4798  002BEA  3763               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  4799  002BEC                     u3874:
  4800  002BEC  0100               	movlb	0	; () banked
  4801  002BEE  2F62               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  4802  002BF0  D7FA               	goto	u3875
  4803  002BF2  0100               	movlb	0	; () banked
  4804  002BF4  5163               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  4805  002BF6  1A91               	xorwf	3985,f,c	;volatile
  4806                           
  4807                           ; BSR set to: 0
  4808  002BF8  0100               	movlb	0	; () banked
  4809  002BFA  2B64               	incf	DisplaySensorStatuses@index& (0+255),f,b
  4810  002BFC  D7DC               	goto	l4377
  4811  002BFE                     l375:
  4812                           
  4813                           ; BSR set to: 0
  4814  002BFE  0012               	return		;funcret
  4815  002C00                     __end_of_DisplaySensorStatuses:
  4816                           	opt stack 0
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           intcon2	equ	0xFF1
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           indf2	equ	0xFDF
  4824                           postinc2	equ	0xFDE
  4825                           postdec2	equ	0xFDD
  4826                           fsr2h	equ	0xFDA
  4827                           fsr2l	equ	0xFD9
  4828                           status	equ	0xFD8
  4829                           
  4830 ;; *************** function _CalculateSensorStatuses *****************
  4831 ;; Defined at:
  4832 ;;		line 337 in file "FastBuggy17_Main_Code.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  index           1    3[BANK0 ] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;		None               void
  4839 ;; Registers used:
  4840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;Total ram usage:        4 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    6
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_CalibrateLine
  4857 ;;		_main
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text48
  4862  002340                     __ptext48:
  4863                           	opt stack 0
  4864  002340                     _CalculateSensorStatuses:
  4865                           	opt stack 23
  4866                           
  4867                           ;FastBuggy17_Main_Code.c: 338: unsigned char index;
  4868                           ;FastBuggy17_Main_Code.c: 341: if(line_mode == 1) {
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;incstack = 0
  4872  002340  043E               	decf	_line_mode,w,c
  4873  002342  A4D8               	btfss	status,2,c
  4874  002344  D038               	goto	l4317
  4875                           
  4876                           ;FastBuggy17_Main_Code.c: 342: for(index = 0; index < 5; index++) {
  4877  002346  0E00               	movlw	0
  4878  002348  0100               	movlb	0	; () banked
  4879  00234A  6F63               	movwf	CalculateSensorStatuses@index& (0+255),b
  4880  00234C                     l4303:
  4881                           
  4882                           ; BSR set to: 0
  4883  00234C  0E04               	movlw	4
  4884  00234E  0100               	movlb	0	; () banked
  4885  002350  6563               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  4886  002352  D001               	goto	l4307
  4887                           
  4888                           ; BSR set to: 0
  4889  002354  D06B               	goto	l350
  4890  002356                     l4307:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;FastBuggy17_Main_Code.c: 344: if(sensor_readings_normalised[index] > sensor_threshold) 
      +                          {
  4894  002356  0100               	movlb	0	; () banked
  4895  002358  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  4896  00235A  0D02               	mullw	2
  4897  00235C  0EC8               	movlw	low _sensor_readings_normalised
  4898  00235E  24F3               	addwf	prodl,w,c
  4899  002360  6ED9               	movwf	fsr2l,c
  4900  002362  0E00               	movlw	high _sensor_readings_normalised
  4901  002364  20F4               	addwfc	prodh,w,c
  4902  002366  6EDA               	movwf	fsr2h,c
  4903  002368  50DE               	movf	postinc2,w,c
  4904  00236A  5C3C               	subwf	_sensor_threshold,w,c
  4905  00236C  503D               	movf	_sensor_threshold+1,w,c
  4906  00236E  0A80               	xorlw	128
  4907  002370  0100               	movlb	0	; () banked
  4908  002372  6F62               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  4909  002374  50DE               	movf	postinc2,w,c
  4910  002376  0A80               	xorlw	128
  4911  002378  0100               	movlb	0	; () banked
  4912  00237A  5962               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  4913  00237C  B0D8               	btfsc	status,0,c
  4914  00237E  D00B               	goto	l4311
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;FastBuggy17_Main_Code.c: 345: sensor_status[index] = 1;
  4918  002380  0100               	movlb	0	; () banked
  4919  002382  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  4920  002384  0D01               	mullw	1
  4921  002386  0E43               	movlw	low _sensor_status
  4922  002388  24F3               	addwf	prodl,w,c
  4923  00238A  6ED9               	movwf	fsr2l,c
  4924  00238C  0E00               	movlw	high _sensor_status
  4925  00238E  20F4               	addwfc	prodh,w,c
  4926  002390  6EDA               	movwf	fsr2h,c
  4927  002392  0E01               	movlw	1
  4928  002394  D00A               	goto	L1
  4929  002396                     l4311:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;FastBuggy17_Main_Code.c: 347: else {
  4933                           ;FastBuggy17_Main_Code.c: 348: sensor_status[index] = 0;
  4934  002396  0100               	movlb	0	; () banked
  4935  002398  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  4936  00239A  0D01               	mullw	1
  4937  00239C  0E43               	movlw	low _sensor_status
  4938  00239E  24F3               	addwf	prodl,w,c
  4939  0023A0  6ED9               	movwf	fsr2l,c
  4940  0023A2  0E00               	movlw	high _sensor_status
  4941  0023A4  20F4               	addwfc	prodh,w,c
  4942  0023A6  6EDA               	movwf	fsr2h,c
  4943  0023A8  0E00               	movlw	0
  4944  0023AA                     L1:
  4945  0023AA  6EDF               	movwf	indf2,c
  4946  0023AC  D000               	goto	l4313
  4947  0023AE                     l4313:
  4948                           
  4949                           ; BSR set to: 0
  4950  0023AE  0100               	movlb	0	; () banked
  4951  0023B0  2B63               	incf	CalculateSensorStatuses@index& (0+255),f,b
  4952  0023B2  D7CC               	goto	l4303
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;FastBuggy17_Main_Code.c: 349: }
  4956                           ;FastBuggy17_Main_Code.c: 350: }
  4957                           ;FastBuggy17_Main_Code.c: 351: }
  4958                           
  4959                           ; BSR set to: 0
  4960  0023B4  D03B               	goto	l350
  4961  0023B6                     l4317:
  4962                           
  4963                           ;FastBuggy17_Main_Code.c: 352: else if(line_mode == 0) {
  4964  0023B6  503E               	movf	_line_mode,w,c
  4965  0023B8  A4D8               	btfss	status,2,c
  4966  0023BA  D038               	goto	l350
  4967                           
  4968                           ;FastBuggy17_Main_Code.c: 354: for(index = 0; index < 5; index++) {
  4969  0023BC  0E00               	movlw	0
  4970  0023BE  0100               	movlb	0	; () banked
  4971  0023C0  6F63               	movwf	CalculateSensorStatuses@index& (0+255),b
  4972  0023C2                     l4321:
  4973                           
  4974                           ; BSR set to: 0
  4975  0023C2  0E04               	movlw	4
  4976  0023C4  0100               	movlb	0	; () banked
  4977  0023C6  6563               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  4978  0023C8  D001               	goto	l4325
  4979                           
  4980                           ; BSR set to: 0
  4981  0023CA  D030               	goto	l350
  4982  0023CC                     l4325:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;FastBuggy17_Main_Code.c: 356: if(sensor_readings_normalised[index] < sensor_threshold) 
      +                          {
  4986  0023CC  0100               	movlb	0	; () banked
  4987  0023CE  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  4988  0023D0  0D02               	mullw	2
  4989  0023D2  0EC8               	movlw	low _sensor_readings_normalised
  4990  0023D4  24F3               	addwf	prodl,w,c
  4991  0023D6  6ED9               	movwf	fsr2l,c
  4992  0023D8  0E00               	movlw	high _sensor_readings_normalised
  4993  0023DA  20F4               	addwfc	prodh,w,c
  4994  0023DC  6EDA               	movwf	fsr2h,c
  4995  0023DE  503C               	movf	_sensor_threshold,w,c
  4996  0023E0  5CDE               	subwf	postinc2,w,c
  4997  0023E2  50DE               	movf	postinc2,w,c
  4998  0023E4  0A80               	xorlw	128
  4999  0023E6  0100               	movlb	0	; () banked
  5000  0023E8  6F62               	movwf	(??_CalculateSensorStatuses+2)& (0+255),b
  5001  0023EA  503D               	movf	_sensor_threshold+1,w,c
  5002  0023EC  0A80               	xorlw	128
  5003  0023EE  0100               	movlb	0	; () banked
  5004  0023F0  5962               	subwfb	(??_CalculateSensorStatuses+2)& (0+255),w,b
  5005  0023F2  B0D8               	btfsc	status,0,c
  5006  0023F4  D00B               	goto	l4329
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;FastBuggy17_Main_Code.c: 357: sensor_status[index] = 1;
  5010  0023F6  0100               	movlb	0	; () banked
  5011  0023F8  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  5012  0023FA  0D01               	mullw	1
  5013  0023FC  0E43               	movlw	low _sensor_status
  5014  0023FE  24F3               	addwf	prodl,w,c
  5015  002400  6ED9               	movwf	fsr2l,c
  5016  002402  0E00               	movlw	high _sensor_status
  5017  002404  20F4               	addwfc	prodh,w,c
  5018  002406  6EDA               	movwf	fsr2h,c
  5019  002408  0E01               	movlw	1
  5020  00240A  D00A               	goto	L2
  5021  00240C                     l4329:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;FastBuggy17_Main_Code.c: 359: else {
  5025                           ;FastBuggy17_Main_Code.c: 360: sensor_status[index] = 0;
  5026  00240C  0100               	movlb	0	; () banked
  5027  00240E  5163               	movf	CalculateSensorStatuses@index& (0+255),w,b
  5028  002410  0D01               	mullw	1
  5029  002412  0E43               	movlw	low _sensor_status
  5030  002414  24F3               	addwf	prodl,w,c
  5031  002416  6ED9               	movwf	fsr2l,c
  5032  002418  0E00               	movlw	high _sensor_status
  5033  00241A  20F4               	addwfc	prodh,w,c
  5034  00241C  6EDA               	movwf	fsr2h,c
  5035  00241E  0E00               	movlw	0
  5036  002420                     L2:
  5037  002420  6EDF               	movwf	indf2,c
  5038  002422  D000               	goto	l4331
  5039  002424                     l4331:
  5040                           
  5041                           ; BSR set to: 0
  5042  002424  0100               	movlb	0	; () banked
  5043  002426  2B63               	incf	CalculateSensorStatuses@index& (0+255),f,b
  5044  002428  D7CC               	goto	l4321
  5045                           
  5046                           ; BSR set to: 0
  5047                           
  5048                           ; BSR set to: 0
  5049                           
  5050                           ; BSR set to: 0
  5051  00242A  D000               	goto	l350
  5052  00242C                     l350:
  5053  00242C  0012               	return		;funcret
  5054  00242E                     __end_of_CalculateSensorStatuses:
  5055                           	opt stack 0
  5056                           prodh	equ	0xFF4
  5057                           prodl	equ	0xFF3
  5058                           intcon	equ	0xFF2
  5059                           intcon2	equ	0xFF1
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf2	equ	0xFDF
  5063                           postinc2	equ	0xFDE
  5064                           postdec2	equ	0xFDD
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _BusySensorAcq *****************
  5070 ;; Defined at:
  5071 ;;		line 318 in file "FastBuggy17_Main_Code.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    6
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_CalibrateSensors
  5096 ;;		_CalibrateLine
  5097 ;;		_main
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text49
  5102  0030BE                     __ptext49:
  5103                           	opt stack 0
  5104  0030BE                     _BusySensorAcq:
  5105                           	opt stack 23
  5106                           
  5107                           ;FastBuggy17_Main_Code.c: 320: return (!sensor_acq_done);
  5108                           
  5109                           ;incstack = 0
  5110  0030BE  5040               	movf	_sensor_acq_done,w,c	;volatile
  5111  0030C0  A4D8               	btfss	status,2,c
  5112  0030C2  D002               	goto	u3680
  5113  0030C4  0E01               	movlw	1
  5114  0030C6  D002               	goto	l331
  5115  0030C8                     u3680:
  5116  0030C8  0E00               	movlw	0
  5117  0030CA  D000               	goto	l331
  5118  0030CC                     l331:
  5119  0030CC  0012               	return		;funcret
  5120  0030CE                     __end_of_BusySensorAcq:
  5121                           	opt stack 0
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           intcon2	equ	0xFF1
  5126                           postinc0	equ	0xFEE
  5127                           wreg	equ	0xFE8
  5128                           indf2	equ	0xFDF
  5129                           postinc2	equ	0xFDE
  5130                           postdec2	equ	0xFDD
  5131                           fsr2h	equ	0xFDA
  5132                           fsr2l	equ	0xFD9
  5133                           status	equ	0xFD8
  5134                           
  5135 ;; *************** function _BusyADC *****************
  5136 ;; Defined at:
  5137 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      unsigned char 
  5144 ;; Registers used:
  5145 ;;		wreg
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    6
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_CalibrateLine
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text50
  5166  003126                     __ptext50:
  5167                           	opt stack 0
  5168  003126                     _BusyADC:
  5169                           	opt stack 23
  5170                           
  5171                           ;incstack = 0
  5172  003126  A2C2               	btfss	4034,1,c	;volatile
  5173  003128  D002               	goto	u3890
  5174  00312A  0E01               	movlw	1
  5175  00312C  D002               	goto	l454
  5176  00312E                     u3890:
  5177  00312E  0E00               	movlw	0
  5178  003130  D000               	goto	l454
  5179  003132                     l454:
  5180  003132  0012               	return		;funcret
  5181  003134                     __end_of_BusyADC:
  5182                           	opt stack 0
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           intcon2	equ	0xFF1
  5187                           postinc0	equ	0xFEE
  5188                           wreg	equ	0xFE8
  5189                           indf2	equ	0xFDF
  5190                           postinc2	equ	0xFDE
  5191                           postdec2	equ	0xFDD
  5192                           fsr2h	equ	0xFDA
  5193                           fsr2l	equ	0xFD9
  5194                           status	equ	0xFD8
  5195                           
  5196 ;; *************** function _CalculateSensorSums *****************
  5197 ;; Defined at:
  5198 ;;		line 370 in file "FastBuggy17_Main_Code.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  index           1   90[BANK0 ] unsigned char 
  5203 ;;  sum             1   89[BANK0 ] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      unsigned char 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;Total ram usage:        5 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:   11
  5220 ;; This function calls:
  5221 ;;		___ftmul
  5222 ;;		___fttol
  5223 ;;		___lbtoft
  5224 ;;		_pow
  5225 ;; This function is called by:
  5226 ;;		_main
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text51
  5231  00274C                     __ptext51:
  5232                           	opt stack 0
  5233  00274C                     _CalculateSensorSums:
  5234                           	opt stack 19
  5235                           
  5236                           ;FastBuggy17_Main_Code.c: 371: unsigned char index, sum = 0;
  5237                           
  5238                           ;incstack = 0
  5239  00274C  0E00               	movlw	0
  5240  00274E  0100               	movlb	0	; () banked
  5241  002750  6FB9               	movwf	CalculateSensorSums@sum& (0+255),b
  5242                           
  5243                           ;FastBuggy17_Main_Code.c: 373: for(index = 0; index < 5; index++) {
  5244  002752  0E00               	movlw	0
  5245  002754  0100               	movlb	0	; () banked
  5246  002756  6FBA               	movwf	CalculateSensorSums@index& (0+255),b
  5247  002758                     l4505:
  5248                           
  5249                           ; BSR set to: 0
  5250  002758  0E04               	movlw	4
  5251  00275A  0100               	movlb	0	; () banked
  5252  00275C  65BA               	cpfsgt	CalculateSensorSums@index& (0+255),b
  5253  00275E  D001               	goto	l4509
  5254                           
  5255                           ; BSR set to: 0
  5256  002760  D044               	goto	l4517
  5257  002762                     l4509:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;FastBuggy17_Main_Code.c: 375: sum += (unsigned char) (sensor_status[index] * pow(2, ind
      +                          ex));
  5261  002762  0100               	movlb	0	; () banked
  5262  002764  51BA               	movf	CalculateSensorSums@index& (0+255),w,b
  5263  002766  ECF8  F016         	call	___lbtoft
  5264  00276A  C068  F0A8         	movff	?___lbtoft,pow@y
  5265  00276E  C069  F0A9         	movff	?___lbtoft+1,pow@y+1
  5266  002772  C06A  F0AA         	movff	?___lbtoft+2,pow@y+2
  5267  002776  0E00               	movlw	0
  5268  002778  0100               	movlb	0	; () banked
  5269  00277A  6FA5               	movwf	pow@x& (0+255),b
  5270  00277C  0E00               	movlw	0
  5271  00277E  0100               	movlb	0	; () banked
  5272  002780  6FA6               	movwf	(pow@x+1)& (0+255),b
  5273  002782  0E40               	movlw	64
  5274  002784  0100               	movlb	0	; () banked
  5275  002786  6FA7               	movwf	(pow@x+2)& (0+255),b
  5276  002788  ECC0  F00B         	call	_pow	;wreg free
  5277  00278C  C0A5  F0B6         	movff	?_pow,_CalculateSensorSums$2908
  5278  002790  C0A6  F0B7         	movff	?_pow+1,_CalculateSensorSums$2908+1
  5279  002794  C0A7  F0B8         	movff	?_pow+2,_CalculateSensorSums$2908+2
  5280                           
  5281                           ;FastBuggy17_Main_Code.c: 375: sum += (unsigned char) (sensor_status[index] * pow(2, ind
      +                          ex));
  5282  002798  C0B6  F06F         	movff	_CalculateSensorSums$2908,___ftmul@f2
  5283  00279C  C0B7  F070         	movff	_CalculateSensorSums$2908+1,___ftmul@f2+1
  5284  0027A0  C0B8  F071         	movff	_CalculateSensorSums$2908+2,___ftmul@f2+2
  5285  0027A4  0100               	movlb	0	; () banked
  5286  0027A6  51BA               	movf	CalculateSensorSums@index& (0+255),w,b
  5287  0027A8  0D01               	mullw	1
  5288  0027AA  0E43               	movlw	low _sensor_status
  5289  0027AC  24F3               	addwf	prodl,w,c
  5290  0027AE  6ED9               	movwf	fsr2l,c
  5291  0027B0  0E00               	movlw	high _sensor_status
  5292  0027B2  20F4               	addwfc	prodh,w,c
  5293  0027B4  6EDA               	movwf	fsr2h,c
  5294  0027B6  50DF               	movf	indf2,w,c
  5295  0027B8  ECF8  F016         	call	___lbtoft
  5296  0027BC  C068  F06C         	movff	?___lbtoft,___ftmul@f1
  5297  0027C0  C069  F06D         	movff	?___lbtoft+1,___ftmul@f1+1
  5298  0027C4  C06A  F06E         	movff	?___lbtoft+2,___ftmul@f1+2
  5299  0027C8  EC8D  F00C         	call	___ftmul	;wreg free
  5300  0027CC  C06C  F07B         	movff	?___ftmul,___fttol@f1
  5301  0027D0  C06D  F07C         	movff	?___ftmul+1,___fttol@f1+1
  5302  0027D4  C06E  F07D         	movff	?___ftmul+2,___fttol@f1+2
  5303  0027D8  EC7C  F00E         	call	___fttol	;wreg free
  5304  0027DC  0100               	movlb	0	; () banked
  5305  0027DE  517B               	movf	?___fttol& (0+255),w,b
  5306  0027E0  0100               	movlb	0	; () banked
  5307  0027E2  27B9               	addwf	CalculateSensorSums@sum& (0+255),f,b
  5308                           
  5309                           ; BSR set to: 0
  5310  0027E4  0100               	movlb	0	; () banked
  5311  0027E6  2BBA               	incf	CalculateSensorSums@index& (0+255),f,b
  5312  0027E8  D7B7               	goto	l4505
  5313  0027EA                     l4517:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;FastBuggy17_Main_Code.c: 377: }
  5317                           ;FastBuggy17_Main_Code.c: 379: return(sum);
  5318  0027EA  0100               	movlb	0	; () banked
  5319  0027EC  51B9               	movf	CalculateSensorSums@sum& (0+255),w,b
  5320  0027EE  D000               	goto	l355
  5321  0027F0                     l355:
  5322                           
  5323                           ; BSR set to: 0
  5324  0027F0  0012               	return		;funcret
  5325  0027F2                     __end_of_CalculateSensorSums:
  5326                           	opt stack 0
  5327                           prodh	equ	0xFF4
  5328                           prodl	equ	0xFF3
  5329                           intcon	equ	0xFF2
  5330                           intcon2	equ	0xFF1
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           indf2	equ	0xFDF
  5334                           postinc2	equ	0xFDE
  5335                           postdec2	equ	0xFDD
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _pow *****************
  5341 ;; Defined at:
  5342 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  x               3   69[BANK0 ] unsigned char 
  5345 ;;  y               3   72[BANK0 ] unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  yi              4   82[BANK0 ] unsigned long 
  5348 ;;  sign            1   81[BANK0 ] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  3   69[BANK0 ] unsigned char 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5358 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;Total ram usage:       17 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:   10
  5365 ;; This function calls:
  5366 ;;		___ftge
  5367 ;;		___ftmul
  5368 ;;		___ftneg
  5369 ;;		___fttol
  5370 ;;		___lltoft
  5371 ;;		_exp
  5372 ;;		_log
  5373 ;; This function is called by:
  5374 ;;		_CalculateSensorSums
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text52
  5379  001780                     __ptext52:
  5380                           	opt stack 0
  5381  001780                     _pow:
  5382                           	opt stack 19
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;incstack = 0
  5386  001780  0E00               	movlw	0
  5387  001782  0100               	movlb	0	; () banked
  5388  001784  6FB1               	movwf	pow@sign& (0+255),b
  5389                           
  5390                           ; BSR set to: 0
  5391  001786  0100               	movlb	0	; () banked
  5392  001788  51A5               	movf	pow@x& (0+255),w,b
  5393  00178A  0100               	movlb	0	; () banked
  5394  00178C  11A6               	iorwf	(pow@x+1)& (0+255),w,b
  5395  00178E  0100               	movlb	0	; () banked
  5396  001790  11A7               	iorwf	(pow@x+2)& (0+255),w,b
  5397  001792  A4D8               	btfss	status,2,c
  5398  001794  D016               	goto	l4345
  5399                           
  5400                           ; BSR set to: 0
  5401  001796  0E00               	movlw	0
  5402  001798  0100               	movlb	0	; () banked
  5403  00179A  6F60               	movwf	___ftge@ff1& (0+255),b
  5404  00179C  0E00               	movlw	0
  5405  00179E  0100               	movlb	0	; () banked
  5406  0017A0  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  5407  0017A2  0E00               	movlw	0
  5408  0017A4  0100               	movlb	0	; () banked
  5409  0017A6  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  5410  0017A8  C0A8  F063         	movff	pow@y,___ftge@ff2
  5411  0017AC  C0A9  F064         	movff	pow@y+1,___ftge@ff2+1
  5412  0017B0  C0AA  F065         	movff	pow@y+2,___ftge@ff2+2
  5413  0017B4  EC8C  F012         	call	___ftge	;wreg free
  5414  0017B8  0100               	movlb	0	; () banked
  5415  0017BA  A0D8               	btfss	status,0,c
  5416  0017BC  D045               	goto	L5
  5417  0017BE  D03F               	goto	u3840
  5418                           
  5419                           ; BSR set to: 0
  5420                           
  5421                           ; BSR set to: 0
  5422                           
  5423                           ; BSR set to: 0
  5424  0017C0  D0AB               	goto	l1215
  5425  0017C2                     l4345:
  5426                           
  5427                           ; BSR set to: 0
  5428  0017C2  0100               	movlb	0	; () banked
  5429  0017C4  51A8               	movf	pow@y& (0+255),w,b
  5430  0017C6  0100               	movlb	0	; () banked
  5431  0017C8  11A9               	iorwf	(pow@y+1)& (0+255),w,b
  5432  0017CA  0100               	movlb	0	; () banked
  5433  0017CC  11AA               	iorwf	(pow@y+2)& (0+255),w,b
  5434  0017CE  A4D8               	btfss	status,2,c
  5435  0017D0  D009               	goto	l4351
  5436                           
  5437                           ; BSR set to: 0
  5438  0017D2  0E00               	movlw	0
  5439  0017D4  0100               	movlb	0	; () banked
  5440  0017D6  6FA5               	movwf	?_pow& (0+255),b
  5441  0017D8  0E80               	movlw	128
  5442  0017DA  0100               	movlb	0	; () banked
  5443  0017DC  6FA6               	movwf	(?_pow+1)& (0+255),b
  5444  0017DE  0E3F               	movlw	63
  5445  0017E0  D03A               	goto	L4
  5446                           
  5447                           ; BSR set to: 0
  5448  0017E2  D09A               	goto	l1215
  5449  0017E4                     l4351:
  5450                           
  5451                           ; BSR set to: 0
  5452  0017E4  0100               	movlb	0	; () banked
  5453  0017E6  AFA7               	btfss	(pow@x+2)& (0+255),7,b
  5454  0017E8  D04D               	goto	l4363
  5455                           
  5456                           ; BSR set to: 0
  5457  0017EA  C0A8  F07B         	movff	pow@y,___fttol@f1
  5458  0017EE  C0A9  F07C         	movff	pow@y+1,___fttol@f1+1
  5459  0017F2  C0AA  F07D         	movff	pow@y+2,___fttol@f1+2
  5460  0017F6  EC7C  F00E         	call	___fttol	;wreg free
  5461  0017FA  C07B  F0B2         	movff	?___fttol,pow@yi
  5462  0017FE  C07C  F0B3         	movff	?___fttol+1,pow@yi+1
  5463  001802  C07D  F0B4         	movff	?___fttol+2,pow@yi+2
  5464  001806  C07E  F0B5         	movff	?___fttol+3,pow@yi+3
  5465  00180A  C0B2  F068         	movff	pow@yi,___lltoft@c
  5466  00180E  C0B3  F069         	movff	pow@yi+1,___lltoft@c+1
  5467  001812  C0B4  F06A         	movff	pow@yi+2,___lltoft@c+2
  5468  001816  C0B5  F06B         	movff	pow@yi+3,___lltoft@c+3
  5469  00181A  EC4A  F014         	call	___lltoft	;wreg free
  5470  00181E  0100               	movlb	0	; () banked
  5471  001820  51A8               	movf	pow@y& (0+255),w,b
  5472  001822  0100               	movlb	0	; () banked
  5473  001824  1968               	xorwf	?___lltoft& (0+255),w,b
  5474  001826  E10B               	bnz	u3840
  5475  001828  0100               	movlb	0	; () banked
  5476  00182A  51A9               	movf	(pow@y+1)& (0+255),w,b
  5477  00182C  0100               	movlb	0	; () banked
  5478  00182E  1969               	xorwf	(?___lltoft+1)& (0+255),w,b
  5479  001830  E106               	bnz	u3840
  5480  001832  0100               	movlb	0	; () banked
  5481  001834  51AA               	movf	(pow@y+2)& (0+255),w,b
  5482  001836  0100               	movlb	0	; () banked
  5483  001838  196A               	xorwf	(?___lltoft+2)& (0+255),w,b
  5484  00183A  B4D8               	btfsc	status,2,c
  5485  00183C  D00F               	goto	l4359
  5486  00183E                     u3840:
  5487                           
  5488                           ; BSR set to: 0
  5489  00183E  0E00               	movlw	0
  5490  001840  0100               	movlb	0	; () banked
  5491  001842  6FD5               	movwf	(_errno+1)& (0+255),b
  5492  001844  0E21               	movlw	33
  5493  001846  6FD4               	movwf	_errno& (0+255),b
  5494  001848                     L5:
  5495  001848  0E00               	movlw	0
  5496  00184A  0100               	movlb	0	; () banked
  5497  00184C  6FA5               	movwf	?_pow& (0+255),b
  5498  00184E  0E00               	movlw	0
  5499  001850  0100               	movlb	0	; () banked
  5500  001852  6FA6               	movwf	(?_pow+1)& (0+255),b
  5501  001854  0E00               	movlw	0
  5502  001856                     L4:
  5503  001856  0100               	movlb	0	; () banked
  5504  001858  6FA7               	movwf	(?_pow+2)& (0+255),b
  5505                           
  5506                           ; BSR set to: 0
  5507  00185A  D05E               	goto	l1215
  5508  00185C                     l4359:
  5509                           
  5510                           ; BSR set to: 0
  5511  00185C  0100               	movlb	0	; () banked
  5512  00185E  51B2               	movf	pow@yi& (0+255),w,b
  5513  001860  0B01               	andlw	1
  5514  001862  0100               	movlb	0	; () banked
  5515  001864  6FB1               	movwf	pow@sign& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518  001866  C0A5  F060         	movff	pow@x,___ftneg@f1
  5519  00186A  C0A6  F061         	movff	pow@x+1,___ftneg@f1+1
  5520  00186E  C0A7  F062         	movff	pow@x+2,___ftneg@f1+2
  5521  001872  ECE0  F016         	call	___ftneg	;wreg free
  5522  001876  C060  F0A5         	movff	?___ftneg,pow@x
  5523  00187A  C061  F0A6         	movff	?___ftneg+1,pow@x+1
  5524  00187E  C062  F0A7         	movff	?___ftneg+2,pow@x+2
  5525  001882  D000               	goto	l4363
  5526  001884                     l4363:
  5527  001884  C0A5  F093         	movff	pow@x,log@x
  5528  001888  C0A6  F094         	movff	pow@x+1,log@x+1
  5529  00188C  C0A7  F095         	movff	pow@x+2,log@x+2
  5530  001890  ECDC  F00D         	call	_log	;wreg free
  5531  001894  C093  F0AB         	movff	?_log,_pow$2909
  5532  001898  C094  F0AC         	movff	?_log+1,_pow$2909+1
  5533  00189C  C095  F0AD         	movff	?_log+2,_pow$2909+2
  5534  0018A0  C0AB  F06C         	movff	_pow$2909,___ftmul@f1
  5535  0018A4  C0AC  F06D         	movff	_pow$2909+1,___ftmul@f1+1
  5536  0018A8  C0AD  F06E         	movff	_pow$2909+2,___ftmul@f1+2
  5537  0018AC  C0A8  F06F         	movff	pow@y,___ftmul@f2
  5538  0018B0  C0A9  F070         	movff	pow@y+1,___ftmul@f2+1
  5539  0018B4  C0AA  F071         	movff	pow@y+2,___ftmul@f2+2
  5540  0018B8  EC8D  F00C         	call	___ftmul	;wreg free
  5541  0018BC  C06C  F0AE         	movff	?___ftmul,_pow$2910
  5542  0018C0  C06D  F0AF         	movff	?___ftmul+1,_pow$2910+1
  5543  0018C4  C06E  F0B0         	movff	?___ftmul+2,_pow$2910+2
  5544  0018C8  C0AE  F09C         	movff	_pow$2910,exp@x
  5545  0018CC  C0AF  F09D         	movff	_pow$2910+1,exp@x+1
  5546  0018D0  C0B0  F09E         	movff	_pow$2910+2,exp@x+2
  5547  0018D4  ECAC  F00A         	call	_exp	;wreg free
  5548  0018D8  C09C  F0A5         	movff	?_exp,pow@x
  5549  0018DC  C09D  F0A6         	movff	?_exp+1,pow@x+1
  5550  0018E0  C09E  F0A7         	movff	?_exp+2,pow@x+2
  5551  0018E4  0100               	movlb	0	; () banked
  5552  0018E6  51B1               	movf	pow@sign& (0+255),w,b
  5553  0018E8  0100               	movlb	0	; () banked
  5554  0018EA  B4D8               	btfsc	status,2,c
  5555  0018EC  D00F               	goto	l1219
  5556                           
  5557                           ; BSR set to: 0
  5558  0018EE  C0A5  F060         	movff	pow@x,___ftneg@f1
  5559  0018F2  C0A6  F061         	movff	pow@x+1,___ftneg@f1+1
  5560  0018F6  C0A7  F062         	movff	pow@x+2,___ftneg@f1+2
  5561  0018FA  ECE0  F016         	call	___ftneg	;wreg free
  5562  0018FE  C060  F0A5         	movff	?___ftneg,?_pow
  5563  001902  C061  F0A6         	movff	?___ftneg+1,?_pow+1
  5564  001906  C062  F0A7         	movff	?___ftneg+2,?_pow+2
  5565  00190A  D006               	goto	l1215
  5566  00190C                     l1219:
  5567                           
  5568                           ; BSR set to: 0
  5569  00190C  C0A5  F0A5         	movff	pow@x,?_pow
  5570  001910  C0A6  F0A6         	movff	pow@x+1,?_pow+1
  5571  001914  C0A7  F0A7         	movff	pow@x+2,?_pow+2
  5572  001918                     l1215:
  5573  001918  0012               	return		;funcret
  5574  00191A                     __end_of_pow:
  5575                           	opt stack 0
  5576                           prodh	equ	0xFF4
  5577                           prodl	equ	0xFF3
  5578                           intcon	equ	0xFF2
  5579                           intcon2	equ	0xFF1
  5580                           postinc0	equ	0xFEE
  5581                           wreg	equ	0xFE8
  5582                           indf2	equ	0xFDF
  5583                           postinc2	equ	0xFDE
  5584                           postdec2	equ	0xFDD
  5585                           fsr2h	equ	0xFDA
  5586                           fsr2l	equ	0xFD9
  5587                           status	equ	0xFD8
  5588                           
  5589 ;; *************** function _log *****************
  5590 ;; Defined at:
  5591 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  x               3   51[BANK0 ] unsigned char 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  exponent        2   54[BANK0 ] int 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  3   51[BANK0 ] int 
  5598 ;; Registers used:
  5599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5605 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;Total ram usage:        5 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    9
  5612 ;; This function calls:
  5613 ;;		___awtoft
  5614 ;;		___ftadd
  5615 ;;		___ftmul
  5616 ;;		_eval_poly
  5617 ;;		_frexp
  5618 ;; This function is called by:
  5619 ;;		_pow
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text53
  5624  001BB8                     __ptext53:
  5625                           	opt stack 0
  5626  001BB8                     _log:
  5627                           	opt stack 19
  5628                           
  5629                           ;incstack = 0
  5630  001BB8  0100               	movlb	0	; () banked
  5631  001BBA  AF95               	btfss	(log@x+2)& (0+255),7,b
  5632  001BBC  D006               	goto	l4121
  5633                           
  5634                           ; BSR set to: 0
  5635  001BBE  0E00               	movlw	0
  5636  001BC0  0100               	movlb	0	; () banked
  5637  001BC2  6FD5               	movwf	(_errno+1)& (0+255),b
  5638  001BC4  0E21               	movlw	33
  5639  001BC6  D00D               	goto	L6
  5640                           
  5641                           ; BSR set to: 0
  5642  001BC8  D096               	goto	l1277
  5643  001BCA                     l4121:
  5644                           
  5645                           ; BSR set to: 0
  5646  001BCA  0100               	movlb	0	; () banked
  5647  001BCC  5193               	movf	log@x& (0+255),w,b
  5648  001BCE  0100               	movlb	0	; () banked
  5649  001BD0  1194               	iorwf	(log@x+1)& (0+255),w,b
  5650  001BD2  0100               	movlb	0	; () banked
  5651  001BD4  1195               	iorwf	(log@x+2)& (0+255),w,b
  5652  001BD6  A4D8               	btfss	status,2,c
  5653  001BD8  D00F               	goto	l4127
  5654                           
  5655                           ; BSR set to: 0
  5656  001BDA  0E00               	movlw	0
  5657  001BDC  0100               	movlb	0	; () banked
  5658  001BDE  6FD5               	movwf	(_errno+1)& (0+255),b
  5659  001BE0  0E22               	movlw	34
  5660  001BE2                     L6:
  5661  001BE2  6FD4               	movwf	_errno& (0+255),b
  5662  001BE4  0E00               	movlw	0
  5663  001BE6  0100               	movlb	0	; () banked
  5664  001BE8  6F93               	movwf	?_log& (0+255),b
  5665  001BEA  0E00               	movlw	0
  5666  001BEC  0100               	movlb	0	; () banked
  5667  001BEE  6F94               	movwf	(?_log+1)& (0+255),b
  5668  001BF0  0E00               	movlw	0
  5669  001BF2  0100               	movlb	0	; () banked
  5670  001BF4  6F95               	movwf	(?_log+2)& (0+255),b
  5671                           
  5672                           ; BSR set to: 0
  5673  001BF6  D07F               	goto	l1277
  5674  001BF8                     l4127:
  5675                           
  5676                           ; BSR set to: 0
  5677  001BF8  0E00               	movlw	0
  5678  001BFA  0100               	movlb	0	; () banked
  5679  001BFC  6F6F               	movwf	___ftmul@f2& (0+255),b
  5680  001BFE  0E00               	movlw	0
  5681  001C00  0100               	movlb	0	; () banked
  5682  001C02  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  5683  001C04  0E40               	movlw	64
  5684  001C06  0100               	movlb	0	; () banked
  5685  001C08  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  5686  001C0A  0E96               	movlw	low log@exponent
  5687  001C0C  0100               	movlb	0	; () banked
  5688  001C0E  6F63               	movwf	frexp@eptr& (0+255),b
  5689  001C10  0E00               	movlw	high log@exponent
  5690  001C12  0100               	movlb	0	; () banked
  5691  001C14  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  5692  001C16  C093  F060         	movff	log@x,frexp@value
  5693  001C1A  C094  F061         	movff	log@x+1,frexp@value+1
  5694  001C1E  C095  F062         	movff	log@x+2,frexp@value+2
  5695  001C22  EC4F  F013         	call	_frexp	;wreg free
  5696  001C26  C060  F06C         	movff	?_frexp,___ftmul@f1
  5697  001C2A  C061  F06D         	movff	?_frexp+1,___ftmul@f1+1
  5698  001C2E  C062  F06E         	movff	?_frexp+2,___ftmul@f1+2
  5699  001C32  EC8D  F00C         	call	___ftmul	;wreg free
  5700  001C36  C06C  F07B         	movff	?___ftmul,___ftadd@f1
  5701  001C3A  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
  5702  001C3E  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
  5703  001C42  0E00               	movlw	0
  5704  001C44  0100               	movlb	0	; () banked
  5705  001C46  6F7E               	movwf	___ftadd@f2& (0+255),b
  5706  001C48  0E80               	movlw	128
  5707  001C4A  0100               	movlb	0	; () banked
  5708  001C4C  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
  5709  001C4E  0EBF               	movlw	191
  5710  001C50  0100               	movlb	0	; () banked
  5711  001C52  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
  5712  001C54  EC6D  F009         	call	___ftadd	;wreg free
  5713  001C58  C07B  F093         	movff	?___ftadd,log@x
  5714  001C5C  C07C  F094         	movff	?___ftadd+1,log@x+1
  5715  001C60  C07D  F095         	movff	?___ftadd+2,log@x+2
  5716  001C64  0100               	movlb	0	; () banked
  5717  001C66  0796               	decf	log@exponent& (0+255),f,b
  5718  001C68  A0D8               	btfss	status,0,c
  5719  001C6A  0797               	decf	(log@exponent+1)& (0+255),f,b
  5720                           
  5721                           ; BSR set to: 0
  5722  001C6C  C093  F087         	movff	log@x,eval_poly@x
  5723  001C70  C094  F088         	movff	log@x+1,eval_poly@x+1
  5724  001C74  C095  F089         	movff	log@x+2,eval_poly@x+2
  5725  001C78  0E1F               	movlw	low log@coeff
  5726  001C7A  0100               	movlb	0	; () banked
  5727  001C7C  6F8A               	movwf	eval_poly@d& (0+255),b
  5728  001C7E  0E10               	movlw	high log@coeff
  5729  001C80  0100               	movlb	0	; () banked
  5730  001C82  6F8B               	movwf	(eval_poly@d+1)& (0+255),b
  5731  001C84  0E00               	movlw	0
  5732  001C86  0100               	movlb	0	; () banked
  5733  001C88  6F8D               	movwf	(eval_poly@n+1)& (0+255),b
  5734  001C8A  0E08               	movlw	8
  5735  001C8C  6F8C               	movwf	eval_poly@n& (0+255),b
  5736  001C8E  ECAE  F010         	call	_eval_poly	;wreg free
  5737  001C92  C087  F093         	movff	?_eval_poly,log@x
  5738  001C96  C088  F094         	movff	?_eval_poly+1,log@x+1
  5739  001C9A  C089  F095         	movff	?_eval_poly+2,log@x+2
  5740  001C9E  0E72               	movlw	114
  5741  001CA0  0100               	movlb	0	; () banked
  5742  001CA2  6F6F               	movwf	___ftmul@f2& (0+255),b
  5743  001CA4  0E31               	movlw	49
  5744  001CA6  0100               	movlb	0	; () banked
  5745  001CA8  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  5746  001CAA  0E3F               	movlw	63
  5747  001CAC  0100               	movlb	0	; () banked
  5748  001CAE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  5749  001CB0  C096  F068         	movff	log@exponent,___awtoft@c
  5750  001CB4  C097  F069         	movff	log@exponent+1,___awtoft@c+1
  5751  001CB8  EC28  F016         	call	___awtoft	;wreg free
  5752  001CBC  C068  F06C         	movff	?___awtoft,___ftmul@f1
  5753  001CC0  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  5754  001CC4  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  5755  001CC8  EC8D  F00C         	call	___ftmul	;wreg free
  5756  001CCC  C06C  F07B         	movff	?___ftmul,___ftadd@f1
  5757  001CD0  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
  5758  001CD4  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
  5759  001CD8  C093  F07E         	movff	log@x,___ftadd@f2
  5760  001CDC  C094  F07F         	movff	log@x+1,___ftadd@f2+1
  5761  001CE0  C095  F080         	movff	log@x+2,___ftadd@f2+2
  5762  001CE4  EC6D  F009         	call	___ftadd	;wreg free
  5763  001CE8  C07B  F093         	movff	?___ftadd,?_log
  5764  001CEC  C07C  F094         	movff	?___ftadd+1,?_log+1
  5765  001CF0  C07D  F095         	movff	?___ftadd+2,?_log+2
  5766  001CF4  D000               	goto	l1277
  5767  001CF6                     l1277:
  5768  001CF6  0012               	return		;funcret
  5769  001CF8                     __end_of_log:
  5770                           	opt stack 0
  5771                           prodh	equ	0xFF4
  5772                           prodl	equ	0xFF3
  5773                           intcon	equ	0xFF2
  5774                           intcon2	equ	0xFF1
  5775                           postinc0	equ	0xFEE
  5776                           wreg	equ	0xFE8
  5777                           indf2	equ	0xFDF
  5778                           postinc2	equ	0xFDE
  5779                           postdec2	equ	0xFDD
  5780                           fsr2h	equ	0xFDA
  5781                           fsr2l	equ	0xFD9
  5782                           status	equ	0xFD8
  5783                           
  5784 ;; *************** function _exp *****************
  5785 ;; Defined at:
  5786 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  x               3   60[BANK0 ] int 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  exponent        2   66[BANK0 ] int 
  5791 ;;  sign            1   68[BANK0 ] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  3   60[BANK0 ] unsigned char 
  5794 ;; Registers used:
  5795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5801 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;Total ram usage:        9 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    9
  5808 ;; This function calls:
  5809 ;;		___awtoft
  5810 ;;		___ftdiv
  5811 ;;		___ftge
  5812 ;;		___ftmul
  5813 ;;		___ftneg
  5814 ;;		___ftsub
  5815 ;;		___fttol
  5816 ;;		_eval_poly
  5817 ;;		_floor
  5818 ;;		_ldexp
  5819 ;; This function is called by:
  5820 ;;		_pow
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text54
  5825  001558                     __ptext54:
  5826                           	opt stack 0
  5827  001558                     _exp:
  5828                           	opt stack 19
  5829                           
  5830                           ;incstack = 0
  5831  001558  0100               	movlb	0	; () banked
  5832  00155A  519C               	movf	exp@x& (0+255),w,b
  5833  00155C  0100               	movlb	0	; () banked
  5834  00155E  119D               	iorwf	(exp@x+1)& (0+255),w,b
  5835  001560  0100               	movlb	0	; () banked
  5836  001562  119E               	iorwf	(exp@x+2)& (0+255),w,b
  5837  001564  A4D8               	btfss	status,2,c
  5838  001566  D009               	goto	l4143
  5839                           
  5840                           ; BSR set to: 0
  5841  001568  0E00               	movlw	0
  5842  00156A  0100               	movlb	0	; () banked
  5843  00156C  6F9C               	movwf	?_exp& (0+255),b
  5844  00156E  0E80               	movlw	128
  5845  001570  0100               	movlb	0	; () banked
  5846  001572  6F9D               	movwf	(?_exp+1)& (0+255),b
  5847  001574  0E3F               	movlw	63
  5848  001576  D03D               	goto	L8
  5849                           
  5850                           ; BSR set to: 0
  5851  001578  D102               	goto	l1235
  5852  00157A                     l4143:
  5853                           
  5854                           ; BSR set to: 0
  5855  00157A  0E72               	movlw	114
  5856  00157C  0100               	movlb	0	; () banked
  5857  00157E  6F60               	movwf	___ftge@ff1& (0+255),b
  5858  001580  0E31               	movlw	49
  5859  001582  0100               	movlb	0	; () banked
  5860  001584  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  5861  001586  0E44               	movlw	68
  5862  001588  0100               	movlb	0	; () banked
  5863  00158A  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  5864  00158C  C09C  F063         	movff	exp@x,___ftge@ff2
  5865  001590  C09D  F064         	movff	exp@x+1,___ftge@ff2+1
  5866  001594  C09E  F065         	movff	exp@x+2,___ftge@ff2+2
  5867  001598  EC8C  F012         	call	___ftge	;wreg free
  5868  00159C  0100               	movlb	0	; () banked
  5869  00159E  B0D8               	btfsc	status,0,c
  5870  0015A0  D00E               	goto	l4149
  5871                           
  5872                           ; BSR set to: 0
  5873  0015A2  0E00               	movlw	0
  5874  0015A4  0100               	movlb	0	; () banked
  5875  0015A6  6FD5               	movwf	(_errno+1)& (0+255),b
  5876  0015A8  0E22               	movlw	34
  5877  0015AA  6FD4               	movwf	_errno& (0+255),b
  5878  0015AC  0EFF               	movlw	255
  5879  0015AE  0100               	movlb	0	; () banked
  5880  0015B0  6F9C               	movwf	?_exp& (0+255),b
  5881  0015B2  0E7F               	movlw	127
  5882  0015B4  0100               	movlb	0	; () banked
  5883  0015B6  6F9D               	movwf	(?_exp+1)& (0+255),b
  5884  0015B8  0E7F               	movlw	127
  5885  0015BA  D01B               	goto	L8
  5886                           
  5887                           ; BSR set to: 0
  5888  0015BC  D0E0               	goto	l1235
  5889  0015BE                     l4149:
  5890                           
  5891                           ; BSR set to: 0
  5892  0015BE  C09C  F060         	movff	exp@x,___ftge@ff1
  5893  0015C2  C09D  F061         	movff	exp@x+1,___ftge@ff1+1
  5894  0015C6  C09E  F062         	movff	exp@x+2,___ftge@ff1+2
  5895  0015CA  0E49               	movlw	73
  5896  0015CC  0100               	movlb	0	; () banked
  5897  0015CE  6F63               	movwf	___ftge@ff2& (0+255),b
  5898  0015D0  0E3A               	movlw	58
  5899  0015D2  0100               	movlb	0	; () banked
  5900  0015D4  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5901  0015D6  0EC4               	movlw	196
  5902  0015D8  0100               	movlb	0	; () banked
  5903  0015DA  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5904  0015DC  EC8C  F012         	call	___ftge	;wreg free
  5905  0015E0  0100               	movlb	0	; () banked
  5906  0015E2  B0D8               	btfsc	status,0,c
  5907  0015E4  D009               	goto	l4155
  5908                           
  5909                           ; BSR set to: 0
  5910  0015E6  0E00               	movlw	0
  5911  0015E8  0100               	movlb	0	; () banked
  5912  0015EA  6FD5               	movwf	(_errno+1)& (0+255),b
  5913  0015EC  0E22               	movlw	34
  5914  0015EE  6FD4               	movwf	_errno& (0+255),b
  5915  0015F0  D09F               	goto	l4173
  5916  0015F2                     L8:
  5917  0015F2  0100               	movlb	0	; () banked
  5918  0015F4  6F9E               	movwf	(?_exp+2)& (0+255),b
  5919                           
  5920                           ; BSR set to: 0
  5921  0015F6  D0C3               	goto	l1235
  5922  0015F8                     l4155:
  5923                           
  5924                           ; BSR set to: 0
  5925  0015F8  0100               	movlb	0	; () banked
  5926  0015FA  AF9E               	btfss	(exp@x+2)& (0+255),7,b
  5927  0015FC  D002               	goto	u3540
  5928  0015FE  0E01               	movlw	1
  5929  001600  D001               	goto	u3550
  5930  001602                     u3540:
  5931  001602  0E00               	movlw	0
  5932  001604                     u3550:
  5933  001604  0100               	movlb	0	; () banked
  5934  001606  6FA4               	movwf	exp@sign& (0+255),b
  5935                           
  5936                           ; BSR set to: 0
  5937  001608  0100               	movlb	0	; () banked
  5938  00160A  51A4               	movf	exp@sign& (0+255),w,b
  5939  00160C  0100               	movlb	0	; () banked
  5940  00160E  B4D8               	btfsc	status,2,c
  5941  001610  D00E               	goto	l1238
  5942                           
  5943                           ; BSR set to: 0
  5944  001612  C09C  F060         	movff	exp@x,___ftneg@f1
  5945  001616  C09D  F061         	movff	exp@x+1,___ftneg@f1+1
  5946  00161A  C09E  F062         	movff	exp@x+2,___ftneg@f1+2
  5947  00161E  ECE0  F016         	call	___ftneg	;wreg free
  5948  001622  C060  F09C         	movff	?___ftneg,exp@x
  5949  001626  C061  F09D         	movff	?___ftneg+1,exp@x+1
  5950  00162A  C062  F09E         	movff	?___ftneg+2,exp@x+2
  5951  00162E                     l1238:
  5952  00162E  C09C  F06C         	movff	exp@x,___ftmul@f1
  5953  001632  C09D  F06D         	movff	exp@x+1,___ftmul@f1+1
  5954  001636  C09E  F06E         	movff	exp@x+2,___ftmul@f1+2
  5955  00163A  0EAA               	movlw	170
  5956  00163C  0100               	movlb	0	; () banked
  5957  00163E  6F6F               	movwf	___ftmul@f2& (0+255),b
  5958  001640  0EB8               	movlw	184
  5959  001642  0100               	movlb	0	; () banked
  5960  001644  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  5961  001646  0E3F               	movlw	63
  5962  001648  0100               	movlb	0	; () banked
  5963  00164A  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  5964  00164C  EC8D  F00C         	call	___ftmul	;wreg free
  5965  001650  C06C  F09C         	movff	?___ftmul,exp@x
  5966  001654  C06D  F09D         	movff	?___ftmul+1,exp@x+1
  5967  001658  C06E  F09E         	movff	?___ftmul+2,exp@x+2
  5968  00165C  C09C  F094         	movff	exp@x,floor@x
  5969  001660  C09D  F095         	movff	exp@x+1,floor@x+1
  5970  001664  C09E  F096         	movff	exp@x+2,floor@x+2
  5971  001668  EC30  F010         	call	_floor	;wreg free
  5972  00166C  C094  F09F         	movff	?_floor,_exp$2911
  5973  001670  C095  F0A0         	movff	?_floor+1,_exp$2911+1
  5974  001674  C096  F0A1         	movff	?_floor+2,_exp$2911+2
  5975  001678  C09F  F07B         	movff	_exp$2911,___fttol@f1
  5976  00167C  C0A0  F07C         	movff	_exp$2911+1,___fttol@f1+1
  5977  001680  C0A1  F07D         	movff	_exp$2911+2,___fttol@f1+2
  5978  001684  EC7C  F00E         	call	___fttol	;wreg free
  5979  001688  C07B  F0A2         	movff	?___fttol,exp@exponent
  5980  00168C  C07C  F0A3         	movff	?___fttol+1,exp@exponent+1
  5981  001690  C09C  F087         	movff	exp@x,___ftsub@f1
  5982  001694  C09D  F088         	movff	exp@x+1,___ftsub@f1+1
  5983  001698  C09E  F089         	movff	exp@x+2,___ftsub@f1+2
  5984  00169C  C0A2  F068         	movff	exp@exponent,___awtoft@c
  5985  0016A0  C0A3  F069         	movff	exp@exponent+1,___awtoft@c+1
  5986  0016A4  EC28  F016         	call	___awtoft	;wreg free
  5987  0016A8  C068  F08A         	movff	?___awtoft,___ftsub@f2
  5988  0016AC  C069  F08B         	movff	?___awtoft+1,___ftsub@f2+1
  5989  0016B0  C06A  F08C         	movff	?___awtoft+2,___ftsub@f2+2
  5990  0016B4  EC00  F016         	call	___ftsub	;wreg free
  5991  0016B8  C087  F09C         	movff	?___ftsub,exp@x
  5992  0016BC  C088  F09D         	movff	?___ftsub+1,exp@x+1
  5993  0016C0  C089  F09E         	movff	?___ftsub+2,exp@x+2
  5994  0016C4  C09C  F087         	movff	exp@x,eval_poly@x
  5995  0016C8  C09D  F088         	movff	exp@x+1,eval_poly@x+1
  5996  0016CC  C09E  F089         	movff	exp@x+2,eval_poly@x+2
  5997  0016D0  0E01               	movlw	low exp@coeff
  5998  0016D2  0100               	movlb	0	; () banked
  5999  0016D4  6F8A               	movwf	eval_poly@d& (0+255),b
  6000  0016D6  0E10               	movlw	high exp@coeff
  6001  0016D8  0100               	movlb	0	; () banked
  6002  0016DA  6F8B               	movwf	(eval_poly@d+1)& (0+255),b
  6003  0016DC  0E00               	movlw	0
  6004  0016DE  0100               	movlb	0	; () banked
  6005  0016E0  6F8D               	movwf	(eval_poly@n+1)& (0+255),b
  6006  0016E2  0E09               	movlw	9
  6007  0016E4  6F8C               	movwf	eval_poly@n& (0+255),b
  6008  0016E6  ECAE  F010         	call	_eval_poly	;wreg free
  6009  0016EA  C087  F093         	movff	?_eval_poly,ldexp@value
  6010  0016EE  C088  F094         	movff	?_eval_poly+1,ldexp@value+1
  6011  0016F2  C089  F095         	movff	?_eval_poly+2,ldexp@value+2
  6012  0016F6  C0A2  F096         	movff	exp@exponent,ldexp@newexp
  6013  0016FA  C0A3  F097         	movff	exp@exponent+1,ldexp@newexp+1
  6014  0016FE  ECA5  F00F         	call	_ldexp	;wreg free
  6015  001702  C093  F09C         	movff	?_ldexp,exp@x
  6016  001706  C094  F09D         	movff	?_ldexp+1,exp@x+1
  6017  00170A  C095  F09E         	movff	?_ldexp+2,exp@x+2
  6018  00170E  0100               	movlb	0	; () banked
  6019  001710  51A4               	movf	exp@sign& (0+255),w,b
  6020  001712  0100               	movlb	0	; () banked
  6021  001714  B4D8               	btfsc	status,2,c
  6022  001716  D02D               	goto	l1239
  6023                           
  6024                           ; BSR set to: 0
  6025  001718  0100               	movlb	0	; () banked
  6026  00171A  299C               	incf	exp@x& (0+255),w,b
  6027  00171C  E112               	bnz	l4177
  6028  00171E  0E7F               	movlw	127
  6029  001720  0100               	movlb	0	; () banked
  6030  001722  199D               	xorwf	(exp@x+1)& (0+255),w,b
  6031  001724  E10E               	bnz	l4177
  6032  001726  0E7F               	movlw	127
  6033  001728  0100               	movlb	0	; () banked
  6034  00172A  199E               	xorwf	(exp@x+2)& (0+255),w,b
  6035  00172C  A4D8               	btfss	status,2,c
  6036  00172E  D009               	goto	l4177
  6037  001730                     l4173:
  6038                           
  6039                           ; BSR set to: 0
  6040  001730  0E00               	movlw	0
  6041  001732  0100               	movlb	0	; () banked
  6042  001734  6F9C               	movwf	?_exp& (0+255),b
  6043  001736  0E00               	movlw	0
  6044  001738  0100               	movlb	0	; () banked
  6045  00173A  6F9D               	movwf	(?_exp+1)& (0+255),b
  6046  00173C  0E00               	movlw	0
  6047  00173E  D759               	goto	L8
  6048                           
  6049                           ; BSR set to: 0
  6050  001740  D01E               	goto	l1235
  6051  001742                     l4177:
  6052                           
  6053                           ; BSR set to: 0
  6054  001742  0E00               	movlw	0
  6055  001744  0100               	movlb	0	; () banked
  6056  001746  6F68               	movwf	___ftdiv@f1& (0+255),b
  6057  001748  0E80               	movlw	128
  6058  00174A  0100               	movlb	0	; () banked
  6059  00174C  6F69               	movwf	(___ftdiv@f1+1)& (0+255),b
  6060  00174E  0E3F               	movlw	63
  6061  001750  0100               	movlb	0	; () banked
  6062  001752  6F6A               	movwf	(___ftdiv@f1+2)& (0+255),b
  6063  001754  C09C  F06B         	movff	exp@x,___ftdiv@f2
  6064  001758  C09D  F06C         	movff	exp@x+1,___ftdiv@f2+1
  6065  00175C  C09E  F06D         	movff	exp@x+2,___ftdiv@f2+2
  6066  001760  EC3B  F00D         	call	___ftdiv	;wreg free
  6067  001764  C068  F09C         	movff	?___ftdiv,?_exp
  6068  001768  C069  F09D         	movff	?___ftdiv+1,?_exp+1
  6069  00176C  C06A  F09E         	movff	?___ftdiv+2,?_exp+2
  6070  001770  D006               	goto	l1235
  6071  001772                     l1239:
  6072                           
  6073                           ; BSR set to: 0
  6074  001772  C09C  F09C         	movff	exp@x,?_exp
  6075  001776  C09D  F09D         	movff	exp@x+1,?_exp+1
  6076  00177A  C09E  F09E         	movff	exp@x+2,?_exp+2
  6077  00177E                     l1235:
  6078  00177E  0012               	return		;funcret
  6079  001780                     __end_of_exp:
  6080                           	opt stack 0
  6081                           prodh	equ	0xFF4
  6082                           prodl	equ	0xFF3
  6083                           intcon	equ	0xFF2
  6084                           intcon2	equ	0xFF1
  6085                           postinc0	equ	0xFEE
  6086                           wreg	equ	0xFE8
  6087                           indf2	equ	0xFDF
  6088                           postinc2	equ	0xFDE
  6089                           postdec2	equ	0xFDD
  6090                           fsr2h	equ	0xFDA
  6091                           fsr2l	equ	0xFD9
  6092                           status	equ	0xFD8
  6093                           
  6094 ;; *************** function _ldexp *****************
  6095 ;; Defined at:
  6096 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  value           3   51[BANK0 ] unsigned char 
  6099 ;;  newexp          2   54[BANK0 ] int 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  3   51[BANK0 ] int 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6111 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;Total ram usage:        7 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    6
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_exp
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text55
  6126  001F4A                     __ptext55:
  6127                           	opt stack 0
  6128  001F4A                     _ldexp:
  6129                           	opt stack 21
  6130                           
  6131                           ;incstack = 0
  6132  001F4A  0100               	movlb	0	; () banked
  6133  001F4C  5193               	movf	ldexp@value& (0+255),w,b
  6134  001F4E  0100               	movlb	0	; () banked
  6135  001F50  1194               	iorwf	(ldexp@value+1)& (0+255),w,b
  6136  001F52  0100               	movlb	0	; () banked
  6137  001F54  1195               	iorwf	(ldexp@value+2)& (0+255),w,b
  6138  001F56  A4D8               	btfss	status,2,c
  6139  001F58  D002               	goto	l2935
  6140  001F5A  D02A               	goto	L9
  6141                           
  6142                           ; BSR set to: 0
  6143                           
  6144                           ; BSR set to: 0
  6145  001F5C  D080               	goto	l1259
  6146  001F5E                     l2935:
  6147                           
  6148                           ; BSR set to: 0
  6149  001F5E  0100               	movlb	0	; () banked
  6150  001F60  5195               	movf	(ldexp@value+2)& (0+255),w,b
  6151  001F62  0B7F               	andlw	127
  6152  001F64  0100               	movlb	0	; () banked
  6153  001F66  6F98               	movwf	??_ldexp& (0+255),b
  6154  001F68  6B99               	clrf	(??_ldexp+1)& (0+255),b
  6155  001F6A  90D8               	bcf	status,0,c
  6156  001F6C  0100               	movlb	0	; () banked
  6157  001F6E  3798               	rlcf	??_ldexp& (0+255),f,b
  6158  001F70  3799               	rlcf	(??_ldexp+1)& (0+255),f,b
  6159  001F72  0100               	movlb	0	; () banked
  6160  001F74  5198               	movf	??_ldexp& (0+255),w,b
  6161  001F76  0100               	movlb	0	; () banked
  6162  001F78  2796               	addwf	ldexp@newexp& (0+255),f,b
  6163  001F7A  0100               	movlb	0	; () banked
  6164  001F7C  5199               	movf	(??_ldexp+1)& (0+255),w,b
  6165  001F7E  0100               	movlb	0	; () banked
  6166  001F80  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  6167  001F82  0100               	movlb	0	; () banked
  6168  001F84  AF94               	btfss	(ldexp@value+1)& (0+255),7,b
  6169  001F86  D004               	goto	u2130
  6170  001F88  0100               	movlb	0	; () banked
  6171  001F8A  6B98               	clrf	??_ldexp& (0+255),b
  6172  001F8C  2B98               	incf	??_ldexp& (0+255),f,b
  6173  001F8E  D002               	goto	u2138
  6174  001F90                     u2130:
  6175  001F90  0100               	movlb	0	; () banked
  6176  001F92  6B98               	clrf	??_ldexp& (0+255),b
  6177  001F94                     u2138:
  6178  001F94  0100               	movlb	0	; () banked
  6179  001F96  5198               	movf	??_ldexp& (0+255),w,b
  6180  001F98  0100               	movlb	0	; () banked
  6181  001F9A  2796               	addwf	ldexp@newexp& (0+255),f,b
  6182  001F9C  0E00               	movlw	0
  6183  001F9E  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  6184  001FA0  0100               	movlb	0	; () banked
  6185  001FA2  AF97               	btfss	(ldexp@newexp+1)& (0+255),7,b
  6186  001FA4  D00F               	goto	l2943
  6187                           
  6188                           ; BSR set to: 0
  6189  001FA6  0E00               	movlw	0
  6190  001FA8  0100               	movlb	0	; () banked
  6191  001FAA  6FD5               	movwf	(_errno+1)& (0+255),b
  6192  001FAC  0E22               	movlw	34
  6193  001FAE  6FD4               	movwf	_errno& (0+255),b
  6194  001FB0                     L9:
  6195  001FB0  0E00               	movlw	0
  6196  001FB2  0100               	movlb	0	; () banked
  6197  001FB4  6F93               	movwf	?_ldexp& (0+255),b
  6198  001FB6  0E00               	movlw	0
  6199  001FB8  0100               	movlb	0	; () banked
  6200  001FBA  6F94               	movwf	(?_ldexp+1)& (0+255),b
  6201  001FBC  0E00               	movlw	0
  6202  001FBE  D022               	goto	L11
  6203                           
  6204                           ; BSR set to: 0
  6205  001FC0  D04E               	goto	l1259
  6206                           
  6207                           ; BSR set to: 0
  6208  001FC2  D046               	goto	l2961
  6209  001FC4                     l2943:
  6210                           
  6211                           ; BSR set to: 0
  6212  001FC4  0100               	movlb	0	; () banked
  6213  001FC6  BF97               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  6214  001FC8  D021               	goto	l2959
  6215  001FCA  0100               	movlb	0	; () banked
  6216  001FCC  0597               	decf	(ldexp@newexp+1)& (0+255),w,b
  6217  001FCE  A0D8               	btfss	status,0,c
  6218  001FD0  D01D               	goto	l2959
  6219                           
  6220                           ; BSR set to: 0
  6221  001FD2  0E00               	movlw	0
  6222  001FD4  0100               	movlb	0	; () banked
  6223  001FD6  6FD5               	movwf	(_errno+1)& (0+255),b
  6224  001FD8  0E22               	movlw	34
  6225  001FDA  6FD4               	movwf	_errno& (0+255),b
  6226                           
  6227                           ; BSR set to: 0
  6228  001FDC  0100               	movlb	0	; () banked
  6229  001FDE  AF95               	btfss	(ldexp@value+2)& (0+255),7,b
  6230  001FE0  D00A               	goto	l2955
  6231                           
  6232                           ; BSR set to: 0
  6233  001FE2  0EFF               	movlw	255
  6234  001FE4  0100               	movlb	0	; () banked
  6235  001FE6  6F93               	movwf	?_ldexp& (0+255),b
  6236  001FE8  0E7F               	movlw	127
  6237  001FEA  0100               	movlb	0	; () banked
  6238  001FEC  6F94               	movwf	(?_ldexp+1)& (0+255),b
  6239  001FEE  0EFF               	movlw	255
  6240  001FF0  D009               	goto	L11
  6241                           
  6242                           ; BSR set to: 0
  6243  001FF2  D035               	goto	l1259
  6244                           
  6245                           ; BSR set to: 0
  6246  001FF4  D02D               	goto	l2961
  6247  001FF6                     l2955:
  6248                           
  6249                           ; BSR set to: 0
  6250  001FF6  0EFF               	movlw	255
  6251  001FF8  0100               	movlb	0	; () banked
  6252  001FFA  6F93               	movwf	?_ldexp& (0+255),b
  6253  001FFC  0E7F               	movlw	127
  6254  001FFE  0100               	movlb	0	; () banked
  6255  002000  6F94               	movwf	(?_ldexp+1)& (0+255),b
  6256  002002  0E7F               	movlw	127
  6257  002004                     L11:
  6258  002004  0100               	movlb	0	; () banked
  6259  002006  6F95               	movwf	(?_ldexp+2)& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262  002008  D02A               	goto	l1259
  6263                           
  6264                           ; BSR set to: 0
  6265  00200A  D022               	goto	l2961
  6266  00200C                     l2959:
  6267                           
  6268                           ; BSR set to: 0
  6269  00200C  0100               	movlb	0	; () banked
  6270  00200E  3597               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  6271  002010  3197               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  6272  002012  0100               	movlb	0	; () banked
  6273  002014  6F99               	movwf	(??_ldexp+1)& (0+255),b
  6274  002016  0100               	movlb	0	; () banked
  6275  002018  3196               	rrcf	ldexp@newexp& (0+255),w,b
  6276  00201A  0100               	movlb	0	; () banked
  6277  00201C  6F98               	movwf	??_ldexp& (0+255),b
  6278  00201E  0100               	movlb	0	; () banked
  6279  002020  5195               	movf	(ldexp@value+2)& (0+255),w,b
  6280  002022  0100               	movlb	0	; () banked
  6281  002024  1998               	xorwf	??_ldexp& (0+255),w,b
  6282  002026  0B80               	andlw	-128
  6283  002028  1998               	xorwf	??_ldexp& (0+255),w,b
  6284  00202A  0100               	movlb	0	; () banked
  6285  00202C  6F95               	movwf	(ldexp@value+2)& (0+255),b
  6286  00202E  C096  F098         	movff	ldexp@newexp,??_ldexp
  6287  002032  0E01               	movlw	1
  6288  002034  0100               	movlb	0	; () banked
  6289  002036  1798               	andwf	??_ldexp& (0+255),f,b
  6290  002038  0100               	movlb	0	; () banked
  6291  00203A  3398               	rrcf	??_ldexp& (0+255),f,b
  6292  00203C  3398               	rrcf	??_ldexp& (0+255),f,b
  6293  00203E  0100               	movlb	0	; () banked
  6294  002040  5194               	movf	(ldexp@value+1)& (0+255),w,b
  6295  002042  0100               	movlb	0	; () banked
  6296  002044  1998               	xorwf	??_ldexp& (0+255),w,b
  6297  002046  0B7F               	andlw	-129
  6298  002048  1998               	xorwf	??_ldexp& (0+255),w,b
  6299  00204A  0100               	movlb	0	; () banked
  6300  00204C  6F94               	movwf	(ldexp@value+1)& (0+255),b
  6301                           
  6302                           ; BSR set to: 0
  6303  00204E  D000               	goto	l2961
  6304  002050                     l2961:
  6305                           
  6306                           ; BSR set to: 0
  6307  002050  C093  F093         	movff	ldexp@value,?_ldexp
  6308  002054  C094  F094         	movff	ldexp@value+1,?_ldexp+1
  6309  002058  C095  F095         	movff	ldexp@value+2,?_ldexp+2
  6310  00205C  D000               	goto	l1259
  6311  00205E                     l1259:
  6312                           
  6313                           ; BSR set to: 0
  6314  00205E  0012               	return		;funcret
  6315  002060                     __end_of_ldexp:
  6316                           	opt stack 0
  6317                           prodh	equ	0xFF4
  6318                           prodl	equ	0xFF3
  6319                           intcon	equ	0xFF2
  6320                           intcon2	equ	0xFF1
  6321                           postinc0	equ	0xFEE
  6322                           wreg	equ	0xFE8
  6323                           indf2	equ	0xFDF
  6324                           postinc2	equ	0xFDE
  6325                           postdec2	equ	0xFDD
  6326                           fsr2h	equ	0xFDA
  6327                           fsr2l	equ	0xFD9
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function _floor *****************
  6331 ;; Defined at:
  6332 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  x               3   52[BANK0 ] int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  i               3   55[BANK0 ] int 
  6337 ;;  expon           2   58[BANK0 ] int 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  3   52[BANK0 ] int 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6347 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:        8 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    8
  6354 ;; This function calls:
  6355 ;;		___altoft
  6356 ;;		___ftadd
  6357 ;;		___ftge
  6358 ;;		___fttol
  6359 ;;		_frexp
  6360 ;; This function is called by:
  6361 ;;		_exp
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text56
  6366  002060                     __ptext56:
  6367                           	opt stack 0
  6368  002060                     _floor:
  6369                           	opt stack 19
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;incstack = 0
  6373  002060  C094  F060         	movff	floor@x,frexp@value
  6374  002064  C095  F061         	movff	floor@x+1,frexp@value+1
  6375  002068  C096  F062         	movff	floor@x+2,frexp@value+2
  6376  00206C  0E9A               	movlw	low floor@expon
  6377  00206E  0100               	movlb	0	; () banked
  6378  002070  6F63               	movwf	frexp@eptr& (0+255),b
  6379  002072  0E00               	movlw	high floor@expon
  6380  002074  0100               	movlb	0	; () banked
  6381  002076  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  6382  002078  EC4F  F013         	call	_frexp	;wreg free
  6383  00207C  0100               	movlb	0	; () banked
  6384  00207E  AF9B               	btfss	(floor@expon+1)& (0+255),7,b
  6385  002080  D016               	goto	l4041
  6386                           
  6387                           ; BSR set to: 0
  6388  002082  0100               	movlb	0	; () banked
  6389  002084  AF96               	btfss	(floor@x+2)& (0+255),7,b
  6390  002086  D009               	goto	l4037
  6391                           
  6392                           ; BSR set to: 0
  6393  002088  0E00               	movlw	0
  6394  00208A  0100               	movlb	0	; () banked
  6395  00208C  6F94               	movwf	?_floor& (0+255),b
  6396  00208E  0E80               	movlw	128
  6397  002090  0100               	movlb	0	; () banked
  6398  002092  6F95               	movwf	(?_floor+1)& (0+255),b
  6399  002094  0EBF               	movlw	191
  6400  002096  D008               	goto	L12
  6401                           
  6402                           ; BSR set to: 0
  6403  002098  D060               	goto	l1247
  6404  00209A                     l4037:
  6405                           
  6406                           ; BSR set to: 0
  6407  00209A  0E00               	movlw	0
  6408  00209C  0100               	movlb	0	; () banked
  6409  00209E  6F94               	movwf	?_floor& (0+255),b
  6410  0020A0  0E00               	movlw	0
  6411  0020A2  0100               	movlb	0	; () banked
  6412  0020A4  6F95               	movwf	(?_floor+1)& (0+255),b
  6413  0020A6  0E00               	movlw	0
  6414  0020A8                     L12:
  6415  0020A8  0100               	movlb	0	; () banked
  6416  0020AA  6F96               	movwf	(?_floor+2)& (0+255),b
  6417                           
  6418                           ; BSR set to: 0
  6419  0020AC  D056               	goto	l1247
  6420  0020AE                     l4041:
  6421                           
  6422                           ; BSR set to: 0
  6423  0020AE  0100               	movlb	0	; () banked
  6424  0020B0  519B               	movf	(floor@expon+1)& (0+255),w,b
  6425  0020B2  E105               	bnz	u3430
  6426  0020B4  0E15               	movlw	21
  6427  0020B6  0100               	movlb	0	; () banked
  6428  0020B8  5D9A               	subwf	floor@expon& (0+255),w,b
  6429  0020BA  A0D8               	btfss	status,0,c
  6430  0020BC  D007               	goto	l4045
  6431  0020BE                     u3430:
  6432                           
  6433                           ; BSR set to: 0
  6434  0020BE  C094  F094         	movff	floor@x,?_floor
  6435  0020C2  C095  F095         	movff	floor@x+1,?_floor+1
  6436  0020C6  C096  F096         	movff	floor@x+2,?_floor+2
  6437  0020CA  D047               	goto	l1247
  6438  0020CC                     l4045:
  6439                           
  6440                           ; BSR set to: 0
  6441  0020CC  C094  F07B         	movff	floor@x,___fttol@f1
  6442  0020D0  C095  F07C         	movff	floor@x+1,___fttol@f1+1
  6443  0020D4  C096  F07D         	movff	floor@x+2,___fttol@f1+2
  6444  0020D8  EC7C  F00E         	call	___fttol	;wreg free
  6445  0020DC  C07B  F08A         	movff	?___fttol,___altoft@c
  6446  0020E0  C07C  F08B         	movff	?___fttol+1,___altoft@c+1
  6447  0020E4  C07D  F08C         	movff	?___fttol+2,___altoft@c+2
  6448  0020E8  C07E  F08D         	movff	?___fttol+3,___altoft@c+3
  6449  0020EC  ECF9  F013         	call	___altoft	;wreg free
  6450  0020F0  C08A  F097         	movff	?___altoft,floor@i
  6451  0020F4  C08B  F098         	movff	?___altoft+1,floor@i+1
  6452  0020F8  C08C  F099         	movff	?___altoft+2,floor@i+2
  6453  0020FC  C094  F060         	movff	floor@x,___ftge@ff1
  6454  002100  C095  F061         	movff	floor@x+1,___ftge@ff1+1
  6455  002104  C096  F062         	movff	floor@x+2,___ftge@ff1+2
  6456  002108  C097  F063         	movff	floor@i,___ftge@ff2
  6457  00210C  C098  F064         	movff	floor@i+1,___ftge@ff2+1
  6458  002110  C099  F065         	movff	floor@i+2,___ftge@ff2+2
  6459  002114  EC8C  F012         	call	___ftge	;wreg free
  6460  002118  0100               	movlb	0	; () banked
  6461  00211A  B0D8               	btfsc	status,0,c
  6462  00211C  D018               	goto	l1249
  6463                           
  6464                           ; BSR set to: 0
  6465  00211E  C097  F07B         	movff	floor@i,___ftadd@f1
  6466  002122  C098  F07C         	movff	floor@i+1,___ftadd@f1+1
  6467  002126  C099  F07D         	movff	floor@i+2,___ftadd@f1+2
  6468  00212A  0E00               	movlw	0
  6469  00212C  0100               	movlb	0	; () banked
  6470  00212E  6F7E               	movwf	___ftadd@f2& (0+255),b
  6471  002130  0E80               	movlw	128
  6472  002132  0100               	movlb	0	; () banked
  6473  002134  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
  6474  002136  0EBF               	movlw	191
  6475  002138  0100               	movlb	0	; () banked
  6476  00213A  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
  6477  00213C  EC6D  F009         	call	___ftadd	;wreg free
  6478  002140  C07B  F094         	movff	?___ftadd,?_floor
  6479  002144  C07C  F095         	movff	?___ftadd+1,?_floor+1
  6480  002148  C07D  F096         	movff	?___ftadd+2,?_floor+2
  6481  00214C  D006               	goto	l1247
  6482  00214E                     l1249:
  6483                           
  6484                           ; BSR set to: 0
  6485  00214E  C097  F094         	movff	floor@i,?_floor
  6486  002152  C098  F095         	movff	floor@i+1,?_floor+1
  6487  002156  C099  F096         	movff	floor@i+2,?_floor+2
  6488  00215A                     l1247:
  6489  00215A  0012               	return		;funcret
  6490  00215C                     __end_of_floor:
  6491                           	opt stack 0
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           intcon2	equ	0xFF1
  6496                           postinc0	equ	0xFEE
  6497                           wreg	equ	0xFE8
  6498                           indf2	equ	0xFDF
  6499                           postinc2	equ	0xFDE
  6500                           postdec2	equ	0xFDD
  6501                           fsr2h	equ	0xFDA
  6502                           fsr2l	equ	0xFD9
  6503                           status	equ	0xFD8
  6504                           
  6505 ;; *************** function _frexp *****************
  6506 ;; Defined at:
  6507 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  value           3    0[BANK0 ] int 
  6510 ;;  eptr            2    3[BANK0 ] PTR int 
  6511 ;;		 -> log@exponent(2), floor@expon(2), 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  3    0[BANK0 ] PTR int 
  6516 ;; Registers used:
  6517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6523 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;Total ram usage:        7 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    6
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_floor
  6534 ;;		_log
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text57
  6539  00269E                     __ptext57:
  6540                           	opt stack 0
  6541  00269E                     _frexp:
  6542                           	opt stack 21
  6543                           
  6544                           ;incstack = 0
  6545  00269E  0100               	movlb	0	; () banked
  6546  0026A0  5160               	movf	frexp@value& (0+255),w,b
  6547  0026A2  0100               	movlb	0	; () banked
  6548  0026A4  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  6549  0026A6  0100               	movlb	0	; () banked
  6550  0026A8  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  6551  0026AA  A4D8               	btfss	status,2,c
  6552  0026AC  D012               	goto	l3943
  6553                           
  6554                           ; BSR set to: 0
  6555  0026AE  C063  FFD9         	movff	frexp@eptr,fsr2l
  6556  0026B2  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  6557  0026B6  0E00               	movlw	0
  6558  0026B8  6EDE               	movwf	postinc2,c
  6559  0026BA  0E00               	movlw	0
  6560  0026BC  6EDD               	movwf	postdec2,c
  6561                           
  6562                           ; BSR set to: 0
  6563  0026BE  0E00               	movlw	0
  6564  0026C0  0100               	movlb	0	; () banked
  6565  0026C2  6F60               	movwf	?_frexp& (0+255),b
  6566  0026C4  0E00               	movlw	0
  6567  0026C6  0100               	movlb	0	; () banked
  6568  0026C8  6F61               	movwf	(?_frexp+1)& (0+255),b
  6569  0026CA  0E00               	movlw	0
  6570  0026CC  0100               	movlb	0	; () banked
  6571  0026CE  6F62               	movwf	(?_frexp+2)& (0+255),b
  6572                           
  6573                           ; BSR set to: 0
  6574  0026D0  D03C               	goto	l1255
  6575  0026D2                     l3943:
  6576                           
  6577                           ; BSR set to: 0
  6578  0026D2  0100               	movlb	0	; () banked
  6579  0026D4  5162               	movf	(frexp@value+2)& (0+255),w,b
  6580  0026D6  0B7F               	andlw	127
  6581  0026D8  0100               	movlb	0	; () banked
  6582  0026DA  6F65               	movwf	??_frexp& (0+255),b
  6583  0026DC  6B66               	clrf	(??_frexp+1)& (0+255),b
  6584  0026DE  90D8               	bcf	status,0,c
  6585  0026E0  0100               	movlb	0	; () banked
  6586  0026E2  3765               	rlcf	??_frexp& (0+255),f,b
  6587  0026E4  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  6588  0026E6  C063  FFD9         	movff	frexp@eptr,fsr2l
  6589  0026EA  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  6590  0026EE  C065  FFDE         	movff	??_frexp,postinc2
  6591  0026F2  C066  FFDD         	movff	??_frexp+1,postdec2
  6592  0026F6  0100               	movlb	0	; () banked
  6593  0026F8  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  6594  0026FA  D004               	goto	u3320
  6595  0026FC  0100               	movlb	0	; () banked
  6596  0026FE  6B65               	clrf	??_frexp& (0+255),b
  6597  002700  2B65               	incf	??_frexp& (0+255),f,b
  6598  002702  D002               	goto	u3328
  6599  002704                     u3320:
  6600  002704  0100               	movlb	0	; () banked
  6601  002706  6B65               	clrf	??_frexp& (0+255),b
  6602  002708                     u3328:
  6603  002708  0100               	movlb	0	; () banked
  6604  00270A  5165               	movf	??_frexp& (0+255),w,b
  6605  00270C  C063  FFD9         	movff	frexp@eptr,fsr2l
  6606  002710  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  6607  002714  12DE               	iorwf	postinc2,f,c
  6608  002716  0E00               	movlw	0
  6609  002718  12DD               	iorwf	postdec2,f,c
  6610                           
  6611                           ; BSR set to: 0
  6612  00271A  C063  FFD9         	movff	frexp@eptr,fsr2l
  6613  00271E  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  6614  002722  0E82               	movlw	130
  6615  002724  26DE               	addwf	postinc2,f,c
  6616  002726  0EFF               	movlw	255
  6617  002728  22DD               	addwfc	postdec2,f,c
  6618                           
  6619                           ; BSR set to: 0
  6620  00272A  8162               	bsf	(frexp@value+2)& (0+255),0,b
  6621  00272C  8362               	bsf	(frexp@value+2)& (0+255),1,b
  6622  00272E  8562               	bsf	(frexp@value+2)& (0+255),2,b
  6623  002730  8762               	bsf	(frexp@value+2)& (0+255),3,b
  6624  002732  8962               	bsf	(frexp@value+2)& (0+255),4,b
  6625  002734  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  6626  002736  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  6627                           
  6628                           ; BSR set to: 0
  6629  002738  0100               	movlb	0	; () banked
  6630  00273A  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  6631                           
  6632                           ; BSR set to: 0
  6633  00273C  C060  F060         	movff	frexp@value,?_frexp
  6634  002740  C061  F061         	movff	frexp@value+1,?_frexp+1
  6635  002744  C062  F062         	movff	frexp@value+2,?_frexp+2
  6636  002748  D000               	goto	l1255
  6637  00274A                     l1255:
  6638                           
  6639                           ; BSR set to: 0
  6640  00274A  0012               	return		;funcret
  6641  00274C                     __end_of_frexp:
  6642                           	opt stack 0
  6643                           prodh	equ	0xFF4
  6644                           prodl	equ	0xFF3
  6645                           intcon	equ	0xFF2
  6646                           intcon2	equ	0xFF1
  6647                           postinc0	equ	0xFEE
  6648                           wreg	equ	0xFE8
  6649                           indf2	equ	0xFDF
  6650                           postinc2	equ	0xFDE
  6651                           postdec2	equ	0xFDD
  6652                           fsr2h	equ	0xFDA
  6653                           fsr2l	equ	0xFD9
  6654                           status	equ	0xFD8
  6655                           
  6656 ;; *************** function ___fttol *****************
  6657 ;; Defined at:
  6658 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  f1              3   27[BANK0 ] float 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  lval            4   37[BANK0 ] unsigned long 
  6663 ;;  exp1            1   41[BANK0 ] unsigned char 
  6664 ;;  sign1           1   36[BANK0 ] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  4   27[BANK0 ] long 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6674 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;Total ram usage:       15 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    6
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_CalculateSensorSums
  6685 ;;		_pow
  6686 ;;		_exp
  6687 ;;		_floor
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text58
  6692  001CF8                     __ptext58:
  6693                           	opt stack 0
  6694  001CF8                     ___fttol:
  6695                           	opt stack 20
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;incstack = 0
  6699  001CF8  C07D  F07F         	movff	___fttol@f1+2,??___fttol
  6700  001CFC  0100               	movlb	0	; () banked
  6701  001CFE  6B80               	clrf	(??___fttol+1)& (0+255),b
  6702  001D00  6B81               	clrf	(??___fttol+2)& (0+255),b
  6703  001D02  0100               	movlb	0	; () banked
  6704  001D04  357C               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6705  001D06  0100               	movlb	0	; () banked
  6706  001D08  377F               	rlcf	??___fttol& (0+255),f,b
  6707  001D0A  E301               	bnc	u1891
  6708  001D0C  8180               	bsf	(??___fttol+1)& (0+255),0,b
  6709  001D0E                     u1891:
  6710  001D0E  0100               	movlb	0	; () banked
  6711  001D10  517F               	movf	??___fttol& (0+255),w,b
  6712  001D12  0100               	movlb	0	; () banked
  6713  001D14  6F89               	movwf	___fttol@exp1& (0+255),b
  6714  001D16  0100               	movlb	0	; () banked
  6715  001D18  5189               	movf	___fttol@exp1& (0+255),w,b
  6716  001D1A  A4D8               	btfss	status,2,c
  6717  001D1C  D002               	goto	l2767
  6718  001D1E  D051               	goto	l2791
  6719                           
  6720                           ; BSR set to: 0
  6721                           
  6722                           ; BSR set to: 0
  6723  001D20  D083               	goto	l1075
  6724  001D22                     l2767:
  6725                           
  6726                           ; BSR set to: 0
  6727  001D22  0E17               	movlw	23
  6728  001D24  0100               	movlb	0	; () banked
  6729  001D26  6F7F               	movwf	??___fttol& (0+255),b
  6730  001D28  C07B  F080         	movff	___fttol@f1,??___fttol+1
  6731  001D2C  C07C  F081         	movff	___fttol@f1+1,??___fttol+2
  6732  001D30  C07D  F082         	movff	___fttol@f1+2,??___fttol+3
  6733  001D34  0100               	movlb	0	; () banked
  6734  001D36  297F               	incf	??___fttol& (0+255),w,b
  6735  001D38  0100               	movlb	0	; () banked
  6736  001D3A  6F83               	movwf	(??___fttol+4)& (0+255),b
  6737  001D3C  D005               	goto	u1910
  6738  001D3E                     u1915:
  6739  001D3E  0100               	movlb	0	; () banked
  6740  001D40  90D8               	bcf	status,0,c
  6741  001D42  3382               	rrcf	(??___fttol+3)& (0+255),f,b
  6742  001D44  3381               	rrcf	(??___fttol+2)& (0+255),f,b
  6743  001D46  3380               	rrcf	(??___fttol+1)& (0+255),f,b
  6744  001D48                     u1910:
  6745  001D48  0100               	movlb	0	; () banked
  6746  001D4A  2F83               	decfsz	(??___fttol+4)& (0+255),f,b
  6747  001D4C  D7F8               	goto	u1915
  6748  001D4E  0100               	movlb	0	; () banked
  6749  001D50  5180               	movf	(??___fttol+1)& (0+255),w,b
  6750  001D52  0100               	movlb	0	; () banked
  6751  001D54  6F84               	movwf	___fttol@sign1& (0+255),b
  6752                           
  6753                           ; BSR set to: 0
  6754  001D56  0100               	movlb	0	; () banked
  6755  001D58  8F7C               	bsf	(___fttol@f1+1)& (0+255),7,b
  6756                           
  6757                           ; BSR set to: 0
  6758  001D5A  0EFF               	movlw	255
  6759  001D5C  0100               	movlb	0	; () banked
  6760  001D5E  177B               	andwf	___fttol@f1& (0+255),f,b
  6761  001D60  0EFF               	movlw	255
  6762  001D62  0100               	movlb	0	; () banked
  6763  001D64  177C               	andwf	(___fttol@f1+1)& (0+255),f,b
  6764  001D66  0E00               	movlw	0
  6765  001D68  0100               	movlb	0	; () banked
  6766  001D6A  177D               	andwf	(___fttol@f1+2)& (0+255),f,b
  6767                           
  6768                           ; BSR set to: 0
  6769  001D6C  0100               	movlb	0	; () banked
  6770  001D6E  517B               	movf	___fttol@f1& (0+255),w,b
  6771  001D70  0100               	movlb	0	; () banked
  6772  001D72  6F85               	movwf	___fttol@lval& (0+255),b
  6773  001D74  0100               	movlb	0	; () banked
  6774  001D76  517C               	movf	(___fttol@f1+1)& (0+255),w,b
  6775  001D78  0100               	movlb	0	; () banked
  6776  001D7A  6F86               	movwf	(___fttol@lval+1)& (0+255),b
  6777  001D7C  0100               	movlb	0	; () banked
  6778  001D7E  517D               	movf	(___fttol@f1+2)& (0+255),w,b
  6779  001D80  0100               	movlb	0	; () banked
  6780  001D82  6F87               	movwf	(___fttol@lval+2)& (0+255),b
  6781  001D84  0100               	movlb	0	; () banked
  6782  001D86  6B88               	clrf	(___fttol@lval+3)& (0+255),b
  6783                           
  6784                           ; BSR set to: 0
  6785  001D88  0E8E               	movlw	142
  6786  001D8A  0100               	movlb	0	; () banked
  6787  001D8C  5F89               	subwf	___fttol@exp1& (0+255),f,b
  6788                           
  6789                           ; BSR set to: 0
  6790  001D8E  0100               	movlb	0	; () banked
  6791  001D90  AF89               	btfss	___fttol@exp1& (0+255),7,b
  6792  001D92  D013               	goto	l2789
  6793                           
  6794                           ; BSR set to: 0
  6795  001D94  0100               	movlb	0	; () banked
  6796  001D96  5189               	movf	___fttol@exp1& (0+255),w,b
  6797  001D98  0A80               	xorlw	128
  6798  001D9A  0F8F               	addlw	143
  6799  001D9C  B0D8               	btfsc	status,0,c
  6800  001D9E  D003               	goto	l2785
  6801  001DA0  D010               	goto	l2791
  6802                           
  6803                           ; BSR set to: 0
  6804                           
  6805                           ; BSR set to: 0
  6806  001DA2  D042               	goto	l1075
  6807                           
  6808                           ; BSR set to: 0
  6809  001DA4  D000               	goto	l2785
  6810  001DA6                     l2785:
  6811                           
  6812                           ; BSR set to: 0
  6813  001DA6  0100               	movlb	0	; () banked
  6814  001DA8  90D8               	bcf	status,0,c
  6815  001DAA  3388               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6816  001DAC  3387               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6817  001DAE  3386               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6818  001DB0  3385               	rrcf	___fttol@lval& (0+255),f,b
  6819                           
  6820                           ; BSR set to: 0
  6821  001DB2  0100               	movlb	0	; () banked
  6822  001DB4  3F89               	incfsz	___fttol@exp1& (0+255),f,b
  6823  001DB6  D7F7               	goto	l2785
  6824                           
  6825                           ; BSR set to: 0
  6826  001DB8  D01F               	goto	l2799
  6827  001DBA                     l2789:
  6828                           
  6829                           ; BSR set to: 0
  6830  001DBA  0E17               	movlw	23
  6831  001DBC  0100               	movlb	0	; () banked
  6832  001DBE  6589               	cpfsgt	___fttol@exp1& (0+255),b
  6833  001DC0  D014               	goto	l2797
  6834  001DC2                     l2791:
  6835                           
  6836                           ; BSR set to: 0
  6837  001DC2  0E00               	movlw	0
  6838  001DC4  0100               	movlb	0	; () banked
  6839  001DC6  6F7B               	movwf	?___fttol& (0+255),b
  6840  001DC8  0E00               	movlw	0
  6841  001DCA  6F7C               	movwf	(?___fttol+1)& (0+255),b
  6842  001DCC  0E00               	movlw	0
  6843  001DCE  6F7D               	movwf	(?___fttol+2)& (0+255),b
  6844  001DD0  0E00               	movlw	0
  6845  001DD2  6F7E               	movwf	(?___fttol+3)& (0+255),b
  6846                           
  6847                           ; BSR set to: 0
  6848  001DD4  D029               	goto	l1075
  6849                           
  6850                           ; BSR set to: 0
  6851  001DD6  D009               	goto	l2797
  6852  001DD8                     l2795:
  6853                           
  6854                           ; BSR set to: 0
  6855  001DD8  0100               	movlb	0	; () banked
  6856  001DDA  90D8               	bcf	status,0,c
  6857  001DDC  3785               	rlcf	___fttol@lval& (0+255),f,b
  6858  001DDE  3786               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6859  001DE0  3787               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6860  001DE2  3788               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6861  001DE4  0100               	movlb	0	; () banked
  6862  001DE6  0789               	decf	___fttol@exp1& (0+255),f,b
  6863  001DE8  D000               	goto	l2797
  6864  001DEA                     l2797:
  6865                           
  6866                           ; BSR set to: 0
  6867  001DEA  0100               	movlb	0	; () banked
  6868  001DEC  5189               	movf	___fttol@exp1& (0+255),w,b
  6869  001DEE  0100               	movlb	0	; () banked
  6870  001DF0  B4D8               	btfsc	status,2,c
  6871  001DF2  D002               	goto	l2799
  6872  001DF4  D7F1               	goto	l2795
  6873                           
  6874                           ; BSR set to: 0
  6875  001DF6  D000               	goto	l2799
  6876  001DF8                     l2799:
  6877                           
  6878                           ; BSR set to: 0
  6879  001DF8  0100               	movlb	0	; () banked
  6880  001DFA  5184               	movf	___fttol@sign1& (0+255),w,b
  6881  001DFC  0100               	movlb	0	; () banked
  6882  001DFE  B4D8               	btfsc	status,2,c
  6883  001E00  D00A               	goto	l2803
  6884                           
  6885                           ; BSR set to: 0
  6886  001E02  0100               	movlb	0	; () banked
  6887  001E04  1F88               	comf	(___fttol@lval+3)& (0+255),f,b
  6888  001E06  1F87               	comf	(___fttol@lval+2)& (0+255),f,b
  6889  001E08  1F86               	comf	(___fttol@lval+1)& (0+255),f,b
  6890  001E0A  6D85               	negf	___fttol@lval& (0+255),b
  6891  001E0C  0E00               	movlw	0
  6892  001E0E  2386               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6893  001E10  2387               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6894  001E12  2388               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6895  001E14  D000               	goto	l2803
  6896  001E16                     l2803:
  6897                           
  6898                           ; BSR set to: 0
  6899  001E16  C085  F07B         	movff	___fttol@lval,?___fttol
  6900  001E1A  C086  F07C         	movff	___fttol@lval+1,?___fttol+1
  6901  001E1E  C087  F07D         	movff	___fttol@lval+2,?___fttol+2
  6902  001E22  C088  F07E         	movff	___fttol@lval+3,?___fttol+3
  6903  001E26  D000               	goto	l1075
  6904  001E28                     l1075:
  6905                           
  6906                           ; BSR set to: 0
  6907  001E28  0012               	return		;funcret
  6908  001E2A                     __end_of___fttol:
  6909                           	opt stack 0
  6910                           prodh	equ	0xFF4
  6911                           prodl	equ	0xFF3
  6912                           intcon	equ	0xFF2
  6913                           intcon2	equ	0xFF1
  6914                           postinc0	equ	0xFEE
  6915                           wreg	equ	0xFE8
  6916                           indf2	equ	0xFDF
  6917                           postinc2	equ	0xFDE
  6918                           postdec2	equ	0xFDD
  6919                           fsr2h	equ	0xFDA
  6920                           fsr2l	equ	0xFD9
  6921                           status	equ	0xFD8
  6922                           
  6923 ;; *************** function ___ftge *****************
  6924 ;; Defined at:
  6925 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  ff1             3    0[BANK0 ] float 
  6928 ;;  ff2             3    3[BANK0 ] float 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;		None               void
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6940 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;Total ram usage:        9 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    6
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_pow
  6951 ;;		_exp
  6952 ;;		_floor
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text59
  6957  002518                     __ptext59:
  6958                           	opt stack 0
  6959  002518                     ___ftge:
  6960                           	opt stack 20
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;incstack = 0
  6964  002518  0100               	movlb	0	; () banked
  6965  00251A  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  6966  00251C  D01E               	goto	l3921
  6967                           
  6968                           ; BSR set to: 0
  6969  00251E  C060  F066         	movff	___ftge@ff1,??___ftge
  6970  002522  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  6971  002526  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  6972  00252A  0100               	movlb	0	; () banked
  6973  00252C  1F66               	comf	??___ftge& (0+255),f,b
  6974  00252E  1F67               	comf	(??___ftge+1)& (0+255),f,b
  6975  002530  1F68               	comf	(??___ftge+2)& (0+255),f,b
  6976  002532  2B66               	incf	??___ftge& (0+255),f,b
  6977  002534  0E00               	movlw	0
  6978  002536  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  6979  002538  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  6980  00253A  0E00               	movlw	0
  6981  00253C  0100               	movlb	0	; () banked
  6982  00253E  2566               	addwf	??___ftge& (0+255),w,b
  6983  002540  0100               	movlb	0	; () banked
  6984  002542  6F60               	movwf	___ftge@ff1& (0+255),b
  6985  002544  0E00               	movlw	0
  6986  002546  0100               	movlb	0	; () banked
  6987  002548  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  6988  00254A  0100               	movlb	0	; () banked
  6989  00254C  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  6990  00254E  0E80               	movlw	128
  6991  002550  0100               	movlb	0	; () banked
  6992  002552  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  6993  002554  0100               	movlb	0	; () banked
  6994  002556  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  6995  002558  D000               	goto	l3921
  6996  00255A                     l3921:
  6997                           
  6998                           ; BSR set to: 0
  6999  00255A  0100               	movlb	0	; () banked
  7000  00255C  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  7001  00255E  D01E               	goto	l3925
  7002                           
  7003                           ; BSR set to: 0
  7004  002560  C063  F066         	movff	___ftge@ff2,??___ftge
  7005  002564  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  7006  002568  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  7007  00256C  0100               	movlb	0	; () banked
  7008  00256E  1F66               	comf	??___ftge& (0+255),f,b
  7009  002570  1F67               	comf	(??___ftge+1)& (0+255),f,b
  7010  002572  1F68               	comf	(??___ftge+2)& (0+255),f,b
  7011  002574  2B66               	incf	??___ftge& (0+255),f,b
  7012  002576  0E00               	movlw	0
  7013  002578  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  7014  00257A  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  7015  00257C  0E00               	movlw	0
  7016  00257E  0100               	movlb	0	; () banked
  7017  002580  2566               	addwf	??___ftge& (0+255),w,b
  7018  002582  0100               	movlb	0	; () banked
  7019  002584  6F63               	movwf	___ftge@ff2& (0+255),b
  7020  002586  0E00               	movlw	0
  7021  002588  0100               	movlb	0	; () banked
  7022  00258A  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  7023  00258C  0100               	movlb	0	; () banked
  7024  00258E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7025  002590  0E80               	movlw	128
  7026  002592  0100               	movlb	0	; () banked
  7027  002594  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  7028  002596  0100               	movlb	0	; () banked
  7029  002598  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7030  00259A  D000               	goto	l3925
  7031  00259C                     l3925:
  7032                           
  7033                           ; BSR set to: 0
  7034  00259C  0E00               	movlw	0
  7035  00259E  0100               	movlb	0	; () banked
  7036  0025A0  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  7037  0025A2  0E00               	movlw	0
  7038  0025A4  0100               	movlb	0	; () banked
  7039  0025A6  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  7040  0025A8  0E80               	movlw	128
  7041  0025AA  0100               	movlb	0	; () banked
  7042  0025AC  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  7043                           
  7044                           ; BSR set to: 0
  7045  0025AE  0E00               	movlw	0
  7046  0025B0  0100               	movlb	0	; () banked
  7047  0025B2  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  7048  0025B4  0E00               	movlw	0
  7049  0025B6  0100               	movlb	0	; () banked
  7050  0025B8  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  7051  0025BA  0E80               	movlw	128
  7052  0025BC  0100               	movlb	0	; () banked
  7053  0025BE  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  7054  0025C0  0100               	movlb	0	; () banked
  7055  0025C2  5163               	movf	___ftge@ff2& (0+255),w,b
  7056  0025C4  0100               	movlb	0	; () banked
  7057  0025C6  5D60               	subwf	___ftge@ff1& (0+255),w,b
  7058  0025C8  0100               	movlb	0	; () banked
  7059  0025CA  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  7060  0025CC  0100               	movlb	0	; () banked
  7061  0025CE  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  7062  0025D0  0100               	movlb	0	; () banked
  7063  0025D2  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  7064  0025D4  0100               	movlb	0	; () banked
  7065  0025D6  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  7066  0025D8  B0D8               	btfsc	status,0,c
  7067  0025DA  D002               	goto	l3931
  7068                           
  7069                           ; BSR set to: 0
  7070  0025DC  90D8               	bcf	status,0,c
  7071  0025DE  D002               	goto	l1048
  7072  0025E0                     l3931:
  7073                           
  7074                           ; BSR set to: 0
  7075  0025E0  80D8               	bsf	status,0,c
  7076                           
  7077                           ; BSR set to: 0
  7078  0025E2  D000               	goto	l1048
  7079  0025E4                     l1048:
  7080                           
  7081                           ; BSR set to: 0
  7082  0025E4  0012               	return		;funcret
  7083  0025E6                     __end_of___ftge:
  7084                           	opt stack 0
  7085                           prodh	equ	0xFF4
  7086                           prodl	equ	0xFF3
  7087                           intcon	equ	0xFF2
  7088                           intcon2	equ	0xFF1
  7089                           postinc0	equ	0xFEE
  7090                           wreg	equ	0xFE8
  7091                           indf2	equ	0xFDF
  7092                           postinc2	equ	0xFDE
  7093                           postdec2	equ	0xFDD
  7094                           fsr2h	equ	0xFDA
  7095                           fsr2l	equ	0xFD9
  7096                           status	equ	0xFD8
  7097                           
  7098 ;; *************** function ___altoft *****************
  7099 ;; Defined at:
  7100 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  c               4   42[BANK0 ] long 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  sign            1   51[BANK0 ] unsigned char 
  7105 ;;  exp             1   50[BANK0 ] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  3   42[BANK0 ] float 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;Total ram usage:       10 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    7
  7122 ;; This function calls:
  7123 ;;		___ftpack
  7124 ;; This function is called by:
  7125 ;;		_floor
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text60
  7130  0027F2                     __ptext60:
  7131                           	opt stack 0
  7132  0027F2                     ___altoft:
  7133                           	opt stack 19
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;incstack = 0
  7137  0027F2  0E00               	movlw	0
  7138  0027F4  0100               	movlb	0	; () banked
  7139  0027F6  6F93               	movwf	___altoft@sign& (0+255),b
  7140  0027F8  0E8E               	movlw	142
  7141  0027FA  0100               	movlb	0	; () banked
  7142  0027FC  6F92               	movwf	___altoft@exp& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145  0027FE  0100               	movlb	0	; () banked
  7146  002800  AF8D               	btfss	(___altoft@c+3)& (0+255),7,b
  7147  002802  D016               	goto	l3793
  7148                           
  7149                           ; BSR set to: 0
  7150  002804  0100               	movlb	0	; () banked
  7151  002806  1F8D               	comf	(___altoft@c+3)& (0+255),f,b
  7152  002808  1F8C               	comf	(___altoft@c+2)& (0+255),f,b
  7153  00280A  1F8B               	comf	(___altoft@c+1)& (0+255),f,b
  7154  00280C  6D8A               	negf	___altoft@c& (0+255),b
  7155  00280E  0E00               	movlw	0
  7156  002810  238B               	addwfc	(___altoft@c+1)& (0+255),f,b
  7157  002812  238C               	addwfc	(___altoft@c+2)& (0+255),f,b
  7158  002814  238D               	addwfc	(___altoft@c+3)& (0+255),f,b
  7159                           
  7160                           ; BSR set to: 0
  7161  002816  0E01               	movlw	1
  7162  002818  0100               	movlb	0	; () banked
  7163  00281A  6F93               	movwf	___altoft@sign& (0+255),b
  7164                           
  7165                           ; BSR set to: 0
  7166  00281C  D009               	goto	l3793
  7167  00281E                     l3791:
  7168                           
  7169                           ; BSR set to: 0
  7170  00281E  0100               	movlb	0	; () banked
  7171  002820  90D8               	bcf	status,0,c
  7172  002822  338D               	rrcf	(___altoft@c+3)& (0+255),f,b
  7173  002824  338C               	rrcf	(___altoft@c+2)& (0+255),f,b
  7174  002826  338B               	rrcf	(___altoft@c+1)& (0+255),f,b
  7175  002828  338A               	rrcf	___altoft@c& (0+255),f,b
  7176  00282A  0100               	movlb	0	; () banked
  7177  00282C  2B92               	incf	___altoft@exp& (0+255),f,b
  7178  00282E  D000               	goto	l3793
  7179  002830                     l3793:
  7180                           
  7181                           ; BSR set to: 0
  7182  002830  0E00               	movlw	0
  7183  002832  0100               	movlb	0	; () banked
  7184  002834  158A               	andwf	___altoft@c& (0+255),w,b
  7185  002836  0100               	movlb	0	; () banked
  7186  002838  6F8E               	movwf	??___altoft& (0+255),b
  7187  00283A  0E00               	movlw	0
  7188  00283C  0100               	movlb	0	; () banked
  7189  00283E  158B               	andwf	(___altoft@c+1)& (0+255),w,b
  7190  002840  0100               	movlb	0	; () banked
  7191  002842  6F8F               	movwf	(??___altoft+1)& (0+255),b
  7192  002844  0E00               	movlw	0
  7193  002846  0100               	movlb	0	; () banked
  7194  002848  158C               	andwf	(___altoft@c+2)& (0+255),w,b
  7195  00284A  0100               	movlb	0	; () banked
  7196  00284C  6F90               	movwf	(??___altoft+2)& (0+255),b
  7197  00284E  0EFF               	movlw	255
  7198  002850  0100               	movlb	0	; () banked
  7199  002852  158D               	andwf	(___altoft@c+3)& (0+255),w,b
  7200  002854  0100               	movlb	0	; () banked
  7201  002856  6F91               	movwf	(??___altoft+3)& (0+255),b
  7202  002858  0100               	movlb	0	; () banked
  7203  00285A  518E               	movf	??___altoft& (0+255),w,b
  7204  00285C  0100               	movlb	0	; () banked
  7205  00285E  118F               	iorwf	(??___altoft+1)& (0+255),w,b
  7206  002860  0100               	movlb	0	; () banked
  7207  002862  1190               	iorwf	(??___altoft+2)& (0+255),w,b
  7208  002864  0100               	movlb	0	; () banked
  7209  002866  1191               	iorwf	(??___altoft+3)& (0+255),w,b
  7210  002868  A4D8               	btfss	status,2,c
  7211  00286A  D7D9               	goto	l3791
  7212                           
  7213                           ; BSR set to: 0
  7214                           
  7215                           ; BSR set to: 0
  7216  00286C  C08A  F060         	movff	___altoft@c,___ftpack@arg
  7217  002870  C08B  F061         	movff	___altoft@c+1,___ftpack@arg+1
  7218  002874  C08C  F062         	movff	___altoft@c+2,___ftpack@arg+2
  7219  002878  C092  F063         	movff	___altoft@exp,___ftpack@exp
  7220  00287C  C093  F064         	movff	___altoft@sign,___ftpack@sign
  7221  002880  EC15  F00F         	call	___ftpack	;wreg free
  7222  002884  C060  F08A         	movff	?___ftpack,?___altoft
  7223  002888  C061  F08B         	movff	?___ftpack+1,?___altoft+1
  7224  00288C  C062  F08C         	movff	?___ftpack+2,?___altoft+2
  7225  002890  D000               	goto	l742
  7226  002892                     l742:
  7227  002892  0012               	return		;funcret
  7228  002894                     __end_of___altoft:
  7229                           	opt stack 0
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           intcon2	equ	0xFF1
  7234                           postinc0	equ	0xFEE
  7235                           wreg	equ	0xFE8
  7236                           indf2	equ	0xFDF
  7237                           postinc2	equ	0xFDE
  7238                           postdec2	equ	0xFDD
  7239                           fsr2h	equ	0xFDA
  7240                           fsr2l	equ	0xFD9
  7241                           status	equ	0xFD8
  7242                           
  7243 ;; *************** function _eval_poly *****************
  7244 ;; Defined at:
  7245 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  x               3   39[BANK0 ] float 
  7248 ;;  d               2   42[BANK0 ] PTR const 
  7249 ;;		 -> log@coeff(27), exp@coeff(30), 
  7250 ;;  n               2   44[BANK0 ] int 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  res             3   48[BANK0 ] int 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  3   39[BANK0 ] int 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7262 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;Total ram usage:       12 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    8
  7269 ;; This function calls:
  7270 ;;		___ftadd
  7271 ;;		___ftmul
  7272 ;;		___wmul
  7273 ;; This function is called by:
  7274 ;;		_exp
  7275 ;;		_log
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text61
  7280  00215C                     __ptext61:
  7281                           	opt stack 0
  7282  00215C                     _eval_poly:
  7283                           	opt stack 19
  7284                           
  7285                           ;incstack = 0
  7286  00215C  C08C  F060         	movff	eval_poly@n,___wmul@multiplier
  7287  002160  C08D  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  7288  002164  0E00               	movlw	0
  7289  002166  0100               	movlb	0	; () banked
  7290  002168  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7291  00216A  0E03               	movlw	3
  7292  00216C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7293  00216E  EC90  F016         	call	___wmul	;wreg free
  7294  002172  C08A  F08E         	movff	eval_poly@d,??_eval_poly
  7295  002176  C08B  F08F         	movff	eval_poly@d+1,??_eval_poly+1
  7296  00217A  0100               	movlb	0	; () banked
  7297  00217C  5160               	movf	?___wmul& (0+255),w,b
  7298  00217E  0100               	movlb	0	; () banked
  7299  002180  278E               	addwf	??_eval_poly& (0+255),f,b
  7300  002182  0100               	movlb	0	; () banked
  7301  002184  5161               	movf	(?___wmul+1)& (0+255),w,b
  7302  002186  0100               	movlb	0	; () banked
  7303  002188  238F               	addwfc	(??_eval_poly+1)& (0+255),f,b
  7304  00218A  C08E  FFF6         	movff	??_eval_poly,tblptrl
  7305  00218E  C08F  FFF7         	movff	??_eval_poly+1,tblptrh
  7306  002192                     	if	0	;tblptru may be non-zero
  7307  002192                     	endif
  7308  002192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7309  002192  0E00               	movlw	low (__mediumconst shr (0+16))
  7310  002194  6EF8               	movwf	tblptru,c
  7311  002196                     	endif
  7312  002196  0009               	tblrd		*+
  7313  002198  CFF5 F090          	movff	tablat,eval_poly@res
  7314  00219C  0009               	tblrd		*+
  7315  00219E  CFF5 F091          	movff	tablat,eval_poly@res+1
  7316  0021A2  000A               	tblrd		*-
  7317  0021A4  CFF5 F092          	movff	tablat,eval_poly@res+2
  7318  0021A8  D047               	goto	l4055
  7319  0021AA                     l4053:
  7320                           
  7321                           ; BSR set to: 0
  7322  0021AA  C090  F06F         	movff	eval_poly@res,___ftmul@f2
  7323  0021AE  C091  F070         	movff	eval_poly@res+1,___ftmul@f2+1
  7324  0021B2  C092  F071         	movff	eval_poly@res+2,___ftmul@f2+2
  7325  0021B6  C087  F06C         	movff	eval_poly@x,___ftmul@f1
  7326  0021BA  C088  F06D         	movff	eval_poly@x+1,___ftmul@f1+1
  7327  0021BE  C089  F06E         	movff	eval_poly@x+2,___ftmul@f1+2
  7328  0021C2  EC8D  F00C         	call	___ftmul	;wreg free
  7329  0021C6  C06C  F07B         	movff	?___ftmul,___ftadd@f1
  7330  0021CA  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
  7331  0021CE  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
  7332  0021D2  0E00               	movlw	0
  7333  0021D4  0100               	movlb	0	; () banked
  7334  0021D6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7335  0021D8  0E03               	movlw	3
  7336  0021DA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7337  0021DC  0100               	movlb	0	; () banked
  7338  0021DE  078C               	decf	eval_poly@n& (0+255),f,b
  7339  0021E0  A0D8               	btfss	status,0,c
  7340  0021E2  078D               	decf	(eval_poly@n+1)& (0+255),f,b
  7341  0021E4  C08C  F060         	movff	eval_poly@n,___wmul@multiplier
  7342  0021E8  C08D  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  7343  0021EC  EC90  F016         	call	___wmul	;wreg free
  7344  0021F0  C08A  F08E         	movff	eval_poly@d,??_eval_poly
  7345  0021F4  C08B  F08F         	movff	eval_poly@d+1,??_eval_poly+1
  7346  0021F8  0100               	movlb	0	; () banked
  7347  0021FA  5160               	movf	?___wmul& (0+255),w,b
  7348  0021FC  0100               	movlb	0	; () banked
  7349  0021FE  278E               	addwf	??_eval_poly& (0+255),f,b
  7350  002200  0100               	movlb	0	; () banked
  7351  002202  5161               	movf	(?___wmul+1)& (0+255),w,b
  7352  002204  0100               	movlb	0	; () banked
  7353  002206  238F               	addwfc	(??_eval_poly+1)& (0+255),f,b
  7354  002208  C08E  FFF6         	movff	??_eval_poly,tblptrl
  7355  00220C  C08F  FFF7         	movff	??_eval_poly+1,tblptrh
  7356  002210                     	if	0	;tblptru may be non-zero
  7357  002210                     	endif
  7358  002210                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7359  002210  0E00               	movlw	low (__mediumconst shr (0+16))
  7360  002212  6EF8               	movwf	tblptru,c
  7361  002214                     	endif
  7362  002214  0009               	tblrd		*+
  7363  002216  CFF5 F07E          	movff	tablat,___ftadd@f2
  7364  00221A  0009               	tblrd		*+
  7365  00221C  CFF5 F07F          	movff	tablat,___ftadd@f2+1
  7366  002220  000A               	tblrd		*-
  7367  002222  CFF5 F080          	movff	tablat,___ftadd@f2+2
  7368  002226  EC6D  F009         	call	___ftadd	;wreg free
  7369  00222A  C07B  F090         	movff	?___ftadd,eval_poly@res
  7370  00222E  C07C  F091         	movff	?___ftadd+1,eval_poly@res+1
  7371  002232  C07D  F092         	movff	?___ftadd+2,eval_poly@res+2
  7372  002236  D000               	goto	l4055
  7373  002238                     l4055:
  7374  002238  0100               	movlb	0	; () banked
  7375  00223A  518C               	movf	eval_poly@n& (0+255),w,b
  7376  00223C  0100               	movlb	0	; () banked
  7377  00223E  118D               	iorwf	(eval_poly@n+1)& (0+255),w,b
  7378  002240  A4D8               	btfss	status,2,c
  7379  002242  D7B3               	goto	l4053
  7380                           
  7381                           ; BSR set to: 0
  7382  002244  C090  F087         	movff	eval_poly@res,?_eval_poly
  7383  002248  C091  F088         	movff	eval_poly@res+1,?_eval_poly+1
  7384  00224C  C092  F089         	movff	eval_poly@res+2,?_eval_poly+2
  7385                           
  7386                           ; BSR set to: 0
  7387  002250  0012               	return		;funcret
  7388  002252                     __end_of_eval_poly:
  7389                           	opt stack 0
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           intcon2	equ	0xFF1
  7398                           postinc0	equ	0xFEE
  7399                           wreg	equ	0xFE8
  7400                           indf2	equ	0xFDF
  7401                           postinc2	equ	0xFDE
  7402                           postdec2	equ	0xFDD
  7403                           fsr2h	equ	0xFDA
  7404                           fsr2l	equ	0xFD9
  7405                           status	equ	0xFD8
  7406                           
  7407 ;; *************** function ___wmul *****************
  7408 ;; Defined at:
  7409 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7412 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  product         2    4[BANK0 ] unsigned int 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  2    0[BANK0 ] unsigned int 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, prodl, prodh
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7424 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;Total ram usage:        6 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    6
  7431 ;; This function calls:
  7432 ;;		Nothing
  7433 ;; This function is called by:
  7434 ;;		_main
  7435 ;;		_eval_poly
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text62
  7440  002D20                     __ptext62:
  7441                           	opt stack 0
  7442  002D20                     ___wmul:
  7443                           	opt stack 24
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;incstack = 0
  7447  002D20  0100               	movlb	0	; () banked
  7448  002D22  5160               	movf	___wmul@multiplier& (0+255),w,b
  7449  002D24  0100               	movlb	0	; () banked
  7450  002D26  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7451  002D28  CFF3 F064          	movff	prodl,___wmul@product
  7452  002D2C  CFF4 F065          	movff	prodh,___wmul@product+1
  7453  002D30  0100               	movlb	0	; () banked
  7454  002D32  5160               	movf	___wmul@multiplier& (0+255),w,b
  7455  002D34  0100               	movlb	0	; () banked
  7456  002D36  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7457  002D38  50F3               	movf	prodl,w,c
  7458  002D3A  0100               	movlb	0	; () banked
  7459  002D3C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7460  002D3E  0100               	movlb	0	; () banked
  7461  002D40  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7462  002D42  0100               	movlb	0	; () banked
  7463  002D44  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7464  002D46  50F3               	movf	prodl,w,c
  7465  002D48  0100               	movlb	0	; () banked
  7466  002D4A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7467                           
  7468                           ; BSR set to: 0
  7469  002D4C  C064  F060         	movff	___wmul@product,?___wmul
  7470  002D50  C065  F061         	movff	___wmul@product+1,?___wmul+1
  7471  002D54  D000               	goto	l645
  7472  002D56                     l645:
  7473                           
  7474                           ; BSR set to: 0
  7475  002D56  0012               	return		;funcret
  7476  002D58                     __end_of___wmul:
  7477                           	opt stack 0
  7478                           tblptru	equ	0xFF8
  7479                           tblptrh	equ	0xFF7
  7480                           tblptrl	equ	0xFF6
  7481                           tablat	equ	0xFF5
  7482                           prodh	equ	0xFF4
  7483                           prodl	equ	0xFF3
  7484                           intcon	equ	0xFF2
  7485                           intcon2	equ	0xFF1
  7486                           postinc0	equ	0xFEE
  7487                           wreg	equ	0xFE8
  7488                           indf2	equ	0xFDF
  7489                           postinc2	equ	0xFDE
  7490                           postdec2	equ	0xFDD
  7491                           fsr2h	equ	0xFDA
  7492                           fsr2l	equ	0xFD9
  7493                           status	equ	0xFD8
  7494                           
  7495 ;; *************** function ___ftmul *****************
  7496 ;; Defined at:
  7497 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  f1              3   12[BANK0 ] float 
  7500 ;;  f2              3   15[BANK0 ] float 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  7503 ;;  sign            1   26[BANK0 ] unsigned char 
  7504 ;;  cntr            1   25[BANK0 ] unsigned char 
  7505 ;;  exp             1   21[BANK0 ] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  3   12[BANK0 ] float 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7515 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;Total ram usage:       15 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:    7
  7522 ;; This function calls:
  7523 ;;		___ftpack
  7524 ;; This function is called by:
  7525 ;;		_CalculateSensorSums
  7526 ;;		_pow
  7527 ;;		_exp
  7528 ;;		_log
  7529 ;;		_eval_poly
  7530 ;;		_ConvertDistanceCM
  7531 ;;		_ConvertDistanceIN
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text63
  7536  00191A                     __ptext63:
  7537                           	opt stack 0
  7538  00191A                     ___ftmul:
  7539                           	opt stack 19
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;incstack = 0
  7543  00191A  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
  7544  00191E  0100               	movlb	0	; () banked
  7545  001920  6B73               	clrf	(??___ftmul+1)& (0+255),b
  7546  001922  6B74               	clrf	(??___ftmul+2)& (0+255),b
  7547  001924  0100               	movlb	0	; () banked
  7548  001926  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7549  001928  0100               	movlb	0	; () banked
  7550  00192A  3772               	rlcf	??___ftmul& (0+255),f,b
  7551  00192C  E301               	bnc	u3221
  7552  00192E  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  7553  001930                     u3221:
  7554  001930  0100               	movlb	0	; () banked
  7555  001932  5172               	movf	??___ftmul& (0+255),w,b
  7556  001934  0100               	movlb	0	; () banked
  7557  001936  6F75               	movwf	___ftmul@exp& (0+255),b
  7558  001938  0100               	movlb	0	; () banked
  7559  00193A  5175               	movf	___ftmul@exp& (0+255),w,b
  7560  00193C  A4D8               	btfss	status,2,c
  7561  00193E  D002               	goto	l3875
  7562  001940  D014               	goto	l3877
  7563                           
  7564                           ; BSR set to: 0
  7565                           
  7566                           ; BSR set to: 0
  7567  001942  D098               	goto	l1054
  7568  001944                     l3875:
  7569                           
  7570                           ; BSR set to: 0
  7571  001944  C071  F072         	movff	___ftmul@f2+2,??___ftmul
  7572  001948  0100               	movlb	0	; () banked
  7573  00194A  6B73               	clrf	(??___ftmul+1)& (0+255),b
  7574  00194C  6B74               	clrf	(??___ftmul+2)& (0+255),b
  7575  00194E  0100               	movlb	0	; () banked
  7576  001950  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7577  001952  0100               	movlb	0	; () banked
  7578  001954  3772               	rlcf	??___ftmul& (0+255),f,b
  7579  001956  E301               	bnc	u3241
  7580  001958  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  7581  00195A                     u3241:
  7582  00195A  0100               	movlb	0	; () banked
  7583  00195C  5172               	movf	??___ftmul& (0+255),w,b
  7584  00195E  0100               	movlb	0	; () banked
  7585  001960  6F7A               	movwf	___ftmul@sign& (0+255),b
  7586  001962  0100               	movlb	0	; () banked
  7587  001964  517A               	movf	___ftmul@sign& (0+255),w,b
  7588  001966  A4D8               	btfss	status,2,c
  7589  001968  D00A               	goto	l3881
  7590  00196A                     l3877:
  7591                           
  7592                           ; BSR set to: 0
  7593  00196A  0E00               	movlw	0
  7594  00196C  0100               	movlb	0	; () banked
  7595  00196E  6F6C               	movwf	?___ftmul& (0+255),b
  7596  001970  0E00               	movlw	0
  7597  001972  0100               	movlb	0	; () banked
  7598  001974  6F6D               	movwf	(?___ftmul+1)& (0+255),b
  7599  001976  0E00               	movlw	0
  7600  001978  0100               	movlb	0	; () banked
  7601  00197A  6F6E               	movwf	(?___ftmul+2)& (0+255),b
  7602                           
  7603                           ; BSR set to: 0
  7604  00197C  D07B               	goto	l1054
  7605  00197E                     l3881:
  7606                           
  7607                           ; BSR set to: 0
  7608  00197E  0100               	movlb	0	; () banked
  7609  001980  517A               	movf	___ftmul@sign& (0+255),w,b
  7610  001982  0F7B               	addlw	123
  7611  001984  0100               	movlb	0	; () banked
  7612  001986  2775               	addwf	___ftmul@exp& (0+255),f,b
  7613                           
  7614                           ; BSR set to: 0
  7615  001988  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
  7616  00198C  0100               	movlb	0	; () banked
  7617  00198E  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  7618  001990  0100               	movlb	0	; () banked
  7619  001992  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
  7620  001994  0E80               	movlw	128
  7621  001996  0100               	movlb	0	; () banked
  7622  001998  177A               	andwf	___ftmul@sign& (0+255),f,b
  7623                           
  7624                           ; BSR set to: 0
  7625  00199A  0100               	movlb	0	; () banked
  7626  00199C  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7627                           
  7628                           ; BSR set to: 0
  7629  00199E  0100               	movlb	0	; () banked
  7630  0019A0  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7631                           
  7632                           ; BSR set to: 0
  7633  0019A2  0EFF               	movlw	255
  7634  0019A4  0100               	movlb	0	; () banked
  7635  0019A6  176F               	andwf	___ftmul@f2& (0+255),f,b
  7636  0019A8  0EFF               	movlw	255
  7637  0019AA  0100               	movlb	0	; () banked
  7638  0019AC  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7639  0019AE  0E00               	movlw	0
  7640  0019B0  0100               	movlb	0	; () banked
  7641  0019B2  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 0
  7644  0019B4  0E00               	movlw	0
  7645  0019B6  0100               	movlb	0	; () banked
  7646  0019B8  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
  7647  0019BA  0E00               	movlw	0
  7648  0019BC  0100               	movlb	0	; () banked
  7649  0019BE  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7650  0019C0  0E00               	movlw	0
  7651  0019C2  0100               	movlb	0	; () banked
  7652  0019C4  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7653                           
  7654                           ; BSR set to: 0
  7655  0019C6  0E07               	movlw	7
  7656  0019C8  0100               	movlb	0	; () banked
  7657  0019CA  6F79               	movwf	___ftmul@cntr& (0+255),b
  7658  0019CC  D000               	goto	l3895
  7659  0019CE                     l3895:
  7660                           
  7661                           ; BSR set to: 0
  7662  0019CE  0100               	movlb	0	; () banked
  7663  0019D0  A16C               	btfss	___ftmul@f1& (0+255),0,b
  7664  0019D2  D00D               	goto	l3899
  7665                           
  7666                           ; BSR set to: 0
  7667  0019D4  0100               	movlb	0	; () banked
  7668  0019D6  516F               	movf	___ftmul@f2& (0+255),w,b
  7669  0019D8  0100               	movlb	0	; () banked
  7670  0019DA  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7671  0019DC  0100               	movlb	0	; () banked
  7672  0019DE  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  7673  0019E0  0100               	movlb	0	; () banked
  7674  0019E2  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7675  0019E4  0100               	movlb	0	; () banked
  7676  0019E6  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  7677  0019E8  0100               	movlb	0	; () banked
  7678  0019EA  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7679  0019EC  D000               	goto	l3899
  7680  0019EE                     l3899:
  7681                           
  7682                           ; BSR set to: 0
  7683  0019EE  0100               	movlb	0	; () banked
  7684  0019F0  90D8               	bcf	status,0,c
  7685  0019F2  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7686  0019F4  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7687  0019F6  336C               	rrcf	___ftmul@f1& (0+255),f,b
  7688  0019F8  0100               	movlb	0	; () banked
  7689  0019FA  90D8               	bcf	status,0,c
  7690  0019FC  376F               	rlcf	___ftmul@f2& (0+255),f,b
  7691  0019FE  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7692  001A00  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7693                           
  7694                           ; BSR set to: 0
  7695  001A02  0100               	movlb	0	; () banked
  7696  001A04  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  7697  001A06  D7E3               	goto	l3895
  7698  001A08  D000               	goto	l3903
  7699  001A0A                     l3903:
  7700                           
  7701                           ; BSR set to: 0
  7702  001A0A  0E09               	movlw	9
  7703  001A0C  0100               	movlb	0	; () banked
  7704  001A0E  6F79               	movwf	___ftmul@cntr& (0+255),b
  7705  001A10  D000               	goto	l3905
  7706  001A12                     l3905:
  7707                           
  7708                           ; BSR set to: 0
  7709  001A12  0100               	movlb	0	; () banked
  7710  001A14  A16C               	btfss	___ftmul@f1& (0+255),0,b
  7711  001A16  D00D               	goto	l3909
  7712                           
  7713                           ; BSR set to: 0
  7714  001A18  0100               	movlb	0	; () banked
  7715  001A1A  516F               	movf	___ftmul@f2& (0+255),w,b
  7716  001A1C  0100               	movlb	0	; () banked
  7717  001A1E  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7718  001A20  0100               	movlb	0	; () banked
  7719  001A22  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  7720  001A24  0100               	movlb	0	; () banked
  7721  001A26  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7722  001A28  0100               	movlb	0	; () banked
  7723  001A2A  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  7724  001A2C  0100               	movlb	0	; () banked
  7725  001A2E  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7726  001A30  D000               	goto	l3909
  7727  001A32                     l3909:
  7728                           
  7729                           ; BSR set to: 0
  7730  001A32  0100               	movlb	0	; () banked
  7731  001A34  90D8               	bcf	status,0,c
  7732  001A36  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7733  001A38  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7734  001A3A  336C               	rrcf	___ftmul@f1& (0+255),f,b
  7735  001A3C  0100               	movlb	0	; () banked
  7736  001A3E  90D8               	bcf	status,0,c
  7737  001A40  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7738  001A42  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7739  001A44  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7740                           
  7741                           ; BSR set to: 0
  7742  001A46  0100               	movlb	0	; () banked
  7743  001A48  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  7744  001A4A  D7E3               	goto	l3905
  7745  001A4C  D000               	goto	l3913
  7746  001A4E                     l3913:
  7747                           
  7748                           ; BSR set to: 0
  7749  001A4E  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  7750  001A52  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7751  001A56  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7752  001A5A  C075  F063         	movff	___ftmul@exp,___ftpack@exp
  7753  001A5E  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
  7754  001A62  EC15  F00F         	call	___ftpack	;wreg free
  7755  001A66  C060  F06C         	movff	?___ftpack,?___ftmul
  7756  001A6A  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
  7757  001A6E  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
  7758  001A72  D000               	goto	l1054
  7759  001A74                     l1054:
  7760  001A74  0012               	return		;funcret
  7761  001A76                     __end_of___ftmul:
  7762                           	opt stack 0
  7763                           tblptru	equ	0xFF8
  7764                           tblptrh	equ	0xFF7
  7765                           tblptrl	equ	0xFF6
  7766                           tablat	equ	0xFF5
  7767                           prodh	equ	0xFF4
  7768                           prodl	equ	0xFF3
  7769                           intcon	equ	0xFF2
  7770                           intcon2	equ	0xFF1
  7771                           postinc0	equ	0xFEE
  7772                           wreg	equ	0xFE8
  7773                           indf2	equ	0xFDF
  7774                           postinc2	equ	0xFDE
  7775                           postdec2	equ	0xFDD
  7776                           fsr2h	equ	0xFDA
  7777                           fsr2l	equ	0xFD9
  7778                           status	equ	0xFD8
  7779                           
  7780 ;; *************** function ___ftsub *****************
  7781 ;; Defined at:
  7782 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  f1              3   39[BANK0 ] float 
  7785 ;;  f2              3   42[BANK0 ] float 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  3   39[BANK0 ] float 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7797 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;Total ram usage:        6 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    8
  7804 ;; This function calls:
  7805 ;;		___ftadd
  7806 ;; This function is called by:
  7807 ;;		_exp
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text64
  7812  002C00                     __ptext64:
  7813                           	opt stack 0
  7814  002C00                     ___ftsub:
  7815                           	opt stack 19
  7816                           
  7817                           ;incstack = 0
  7818  002C00  0100               	movlb	0	; () banked
  7819  002C02  518A               	movf	___ftsub@f2& (0+255),w,b
  7820  002C04  0100               	movlb	0	; () banked
  7821  002C06  118B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7822  002C08  0100               	movlb	0	; () banked
  7823  002C0A  118C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7824  002C0C  B4D8               	btfsc	status,2,c
  7825  002C0E  D00A               	goto	l4007
  7826                           
  7827                           ; BSR set to: 0
  7828  002C10  0E00               	movlw	0
  7829  002C12  0100               	movlb	0	; () banked
  7830  002C14  1B8A               	xorwf	___ftsub@f2& (0+255),f,b
  7831  002C16  0E00               	movlw	0
  7832  002C18  0100               	movlb	0	; () banked
  7833  002C1A  1B8B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7834  002C1C  0E80               	movlw	128
  7835  002C1E  0100               	movlb	0	; () banked
  7836  002C20  1B8C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7837  002C22  D000               	goto	l4007
  7838  002C24                     l4007:
  7839                           
  7840                           ; BSR set to: 0
  7841  002C24  C087  F07B         	movff	___ftsub@f1,___ftadd@f1
  7842  002C28  C088  F07C         	movff	___ftsub@f1+1,___ftadd@f1+1
  7843  002C2C  C089  F07D         	movff	___ftsub@f1+2,___ftadd@f1+2
  7844  002C30  C08A  F07E         	movff	___ftsub@f2,___ftadd@f2
  7845  002C34  C08B  F07F         	movff	___ftsub@f2+1,___ftadd@f2+1
  7846  002C38  C08C  F080         	movff	___ftsub@f2+2,___ftadd@f2+2
  7847  002C3C  EC6D  F009         	call	___ftadd	;wreg free
  7848  002C40  C07B  F087         	movff	?___ftadd,?___ftsub
  7849  002C44  C07C  F088         	movff	?___ftadd+1,?___ftsub+1
  7850  002C48  C07D  F089         	movff	?___ftadd+2,?___ftsub+2
  7851  002C4C  D000               	goto	l1071
  7852  002C4E                     l1071:
  7853  002C4E  0012               	return		;funcret
  7854  002C50                     __end_of___ftsub:
  7855                           	opt stack 0
  7856                           tblptru	equ	0xFF8
  7857                           tblptrh	equ	0xFF7
  7858                           tblptrl	equ	0xFF6
  7859                           tablat	equ	0xFF5
  7860                           prodh	equ	0xFF4
  7861                           prodl	equ	0xFF3
  7862                           intcon	equ	0xFF2
  7863                           intcon2	equ	0xFF1
  7864                           postinc0	equ	0xFEE
  7865                           wreg	equ	0xFE8
  7866                           indf2	equ	0xFDF
  7867                           postinc2	equ	0xFDE
  7868                           postdec2	equ	0xFDD
  7869                           fsr2h	equ	0xFDA
  7870                           fsr2l	equ	0xFD9
  7871                           status	equ	0xFD8
  7872                           
  7873 ;; *************** function ___ftadd *****************
  7874 ;; Defined at:
  7875 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  f1              3   27[BANK0 ] float 
  7878 ;;  f2              3   30[BANK0 ] float 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  exp1            1   38[BANK0 ] unsigned char 
  7881 ;;  exp2            1   37[BANK0 ] unsigned char 
  7882 ;;  sign            1   36[BANK0 ] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  3   27[BANK0 ] float 
  7885 ;; Registers used:
  7886 ;;		wreg, status,2, status,0, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7892 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;Total ram usage:       12 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:    7
  7899 ;; This function calls:
  7900 ;;		___ftpack
  7901 ;; This function is called by:
  7902 ;;		___ftsub
  7903 ;;		_floor
  7904 ;;		_log
  7905 ;;		_eval_poly
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text65
  7910  0012DA                     __ptext65:
  7911                           	opt stack 0
  7912  0012DA                     ___ftadd:
  7913                           	opt stack 19
  7914                           
  7915                           ;incstack = 0
  7916  0012DA  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
  7917  0012DE  0100               	movlb	0	; () banked
  7918  0012E0  6B82               	clrf	(??___ftadd+1)& (0+255),b
  7919  0012E2  6B83               	clrf	(??___ftadd+2)& (0+255),b
  7920  0012E4  0100               	movlb	0	; () banked
  7921  0012E6  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7922  0012E8  0100               	movlb	0	; () banked
  7923  0012EA  3781               	rlcf	??___ftadd& (0+255),f,b
  7924  0012EC  E301               	bnc	u3011
  7925  0012EE  8182               	bsf	(??___ftadd+1)& (0+255),0,b
  7926  0012F0                     u3011:
  7927  0012F0  0100               	movlb	0	; () banked
  7928  0012F2  5181               	movf	??___ftadd& (0+255),w,b
  7929  0012F4  0100               	movlb	0	; () banked
  7930  0012F6  6F86               	movwf	___ftadd@exp1& (0+255),b
  7931  0012F8  C080  F081         	movff	___ftadd@f2+2,??___ftadd
  7932  0012FC  0100               	movlb	0	; () banked
  7933  0012FE  6B82               	clrf	(??___ftadd+1)& (0+255),b
  7934  001300  6B83               	clrf	(??___ftadd+2)& (0+255),b
  7935  001302  0100               	movlb	0	; () banked
  7936  001304  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7937  001306  0100               	movlb	0	; () banked
  7938  001308  3781               	rlcf	??___ftadd& (0+255),f,b
  7939  00130A  E301               	bnc	u3021
  7940  00130C  8182               	bsf	(??___ftadd+1)& (0+255),0,b
  7941  00130E                     u3021:
  7942  00130E  0100               	movlb	0	; () banked
  7943  001310  5181               	movf	??___ftadd& (0+255),w,b
  7944  001312  0100               	movlb	0	; () banked
  7945  001314  6F85               	movwf	___ftadd@exp2& (0+255),b
  7946                           
  7947                           ; BSR set to: 0
  7948  001316  0100               	movlb	0	; () banked
  7949  001318  5186               	movf	___ftadd@exp1& (0+255),w,b
  7950  00131A  0100               	movlb	0	; () banked
  7951  00131C  B4D8               	btfsc	status,2,c
  7952  00131E  D011               	goto	l1007
  7953                           
  7954                           ; BSR set to: 0
  7955  001320  0100               	movlb	0	; () banked
  7956  001322  5185               	movf	___ftadd@exp2& (0+255),w,b
  7957  001324  0100               	movlb	0	; () banked
  7958  001326  5D86               	subwf	___ftadd@exp1& (0+255),w,b
  7959  001328  B0D8               	btfsc	status,0,c
  7960  00132A  D012               	goto	l3807
  7961                           
  7962                           ; BSR set to: 0
  7963  00132C  0100               	movlb	0	; () banked
  7964  00132E  5186               	movf	___ftadd@exp1& (0+255),w,b
  7965  001330  0800               	sublw	0
  7966  001332  0100               	movlb	0	; () banked
  7967  001334  2585               	addwf	___ftadd@exp2& (0+255),w,b
  7968  001336  0100               	movlb	0	; () banked
  7969  001338  6F81               	movwf	??___ftadd& (0+255),b
  7970  00133A  0E18               	movlw	24
  7971  00133C  0100               	movlb	0	; () banked
  7972  00133E  6581               	cpfsgt	??___ftadd& (0+255),b
  7973  001340  D007               	goto	l3807
  7974  001342                     l1007:
  7975                           
  7976                           ; BSR set to: 0
  7977  001342  C07E  F07B         	movff	___ftadd@f2,?___ftadd
  7978  001346  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
  7979  00134A  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
  7980  00134E  D103               	goto	l1008
  7981  001350                     l3807:
  7982                           
  7983                           ; BSR set to: 0
  7984  001350  0100               	movlb	0	; () banked
  7985  001352  5185               	movf	___ftadd@exp2& (0+255),w,b
  7986  001354  0100               	movlb	0	; () banked
  7987  001356  B4D8               	btfsc	status,2,c
  7988  001358  D011               	goto	l1011
  7989                           
  7990                           ; BSR set to: 0
  7991  00135A  0100               	movlb	0	; () banked
  7992  00135C  5186               	movf	___ftadd@exp1& (0+255),w,b
  7993  00135E  0100               	movlb	0	; () banked
  7994  001360  5D85               	subwf	___ftadd@exp2& (0+255),w,b
  7995  001362  B0D8               	btfsc	status,0,c
  7996  001364  D012               	goto	l3813
  7997                           
  7998                           ; BSR set to: 0
  7999  001366  0100               	movlb	0	; () banked
  8000  001368  5185               	movf	___ftadd@exp2& (0+255),w,b
  8001  00136A  0800               	sublw	0
  8002  00136C  0100               	movlb	0	; () banked
  8003  00136E  2586               	addwf	___ftadd@exp1& (0+255),w,b
  8004  001370  0100               	movlb	0	; () banked
  8005  001372  6F81               	movwf	??___ftadd& (0+255),b
  8006  001374  0E18               	movlw	24
  8007  001376  0100               	movlb	0	; () banked
  8008  001378  6581               	cpfsgt	??___ftadd& (0+255),b
  8009  00137A  D007               	goto	l3813
  8010  00137C                     l1011:
  8011                           
  8012                           ; BSR set to: 0
  8013  00137C  C07B  F07B         	movff	___ftadd@f1,?___ftadd
  8014  001380  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
  8015  001384  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
  8016  001388  D0E6               	goto	l1008
  8017  00138A                     l3813:
  8018                           
  8019                           ; BSR set to: 0
  8020  00138A  0E06               	movlw	6
  8021  00138C  0100               	movlb	0	; () banked
  8022  00138E  6F84               	movwf	___ftadd@sign& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025  001390  0100               	movlb	0	; () banked
  8026  001392  AF7D               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8027  001394  D003               	goto	l3819
  8028                           
  8029                           ; BSR set to: 0
  8030  001396  0100               	movlb	0	; () banked
  8031  001398  8F84               	bsf	___ftadd@sign& (0+255),7,b
  8032  00139A  D000               	goto	l3819
  8033  00139C                     l3819:
  8034                           
  8035                           ; BSR set to: 0
  8036  00139C  0100               	movlb	0	; () banked
  8037  00139E  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8038  0013A0  D002               	goto	l1013
  8039                           
  8040                           ; BSR set to: 0
  8041  0013A2  0100               	movlb	0	; () banked
  8042  0013A4  8D84               	bsf	___ftadd@sign& (0+255),6,b
  8043  0013A6                     l1013:
  8044                           
  8045                           ; BSR set to: 0
  8046  0013A6  0100               	movlb	0	; () banked
  8047  0013A8  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8048                           
  8049                           ; BSR set to: 0
  8050  0013AA  0EFF               	movlw	255
  8051  0013AC  0100               	movlb	0	; () banked
  8052  0013AE  177B               	andwf	___ftadd@f1& (0+255),f,b
  8053  0013B0  0EFF               	movlw	255
  8054  0013B2  0100               	movlb	0	; () banked
  8055  0013B4  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8056  0013B6  0E00               	movlw	0
  8057  0013B8  0100               	movlb	0	; () banked
  8058  0013BA  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8059  0013BC  0100               	movlb	0	; () banked
  8060  0013BE  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8061                           
  8062                           ; BSR set to: 0
  8063  0013C0  0EFF               	movlw	255
  8064  0013C2  0100               	movlb	0	; () banked
  8065  0013C4  177E               	andwf	___ftadd@f2& (0+255),f,b
  8066  0013C6  0EFF               	movlw	255
  8067  0013C8  0100               	movlb	0	; () banked
  8068  0013CA  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8069  0013CC  0E00               	movlw	0
  8070  0013CE  0100               	movlb	0	; () banked
  8071  0013D0  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8072                           
  8073                           ; BSR set to: 0
  8074  0013D2  0100               	movlb	0	; () banked
  8075  0013D4  5185               	movf	___ftadd@exp2& (0+255),w,b
  8076  0013D6  0100               	movlb	0	; () banked
  8077  0013D8  5D86               	subwf	___ftadd@exp1& (0+255),w,b
  8078  0013DA  B0D8               	btfsc	status,0,c
  8079  0013DC  D028               	goto	l3839
  8080  0013DE                     l3829:
  8081                           
  8082                           ; BSR set to: 0
  8083  0013DE  0100               	movlb	0	; () banked
  8084  0013E0  90D8               	bcf	status,0,c
  8085  0013E2  377E               	rlcf	___ftadd@f2& (0+255),f,b
  8086  0013E4  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8087  0013E6  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8088  0013E8  0100               	movlb	0	; () banked
  8089  0013EA  0785               	decf	___ftadd@exp2& (0+255),f,b
  8090                           
  8091                           ; BSR set to: 0
  8092  0013EC  0100               	movlb	0	; () banked
  8093  0013EE  5186               	movf	___ftadd@exp1& (0+255),w,b
  8094  0013F0  0100               	movlb	0	; () banked
  8095  0013F2  1985               	xorwf	___ftadd@exp2& (0+255),w,b
  8096  0013F4  B4D8               	btfsc	status,2,c
  8097  0013F6  D013               	goto	l3837
  8098                           
  8099                           ; BSR set to: 0
  8100  0013F8  0100               	movlb	0	; () banked
  8101  0013FA  0784               	decf	___ftadd@sign& (0+255),f,b
  8102  0013FC  C084  F081         	movff	___ftadd@sign,??___ftadd
  8103  001400  0E07               	movlw	7
  8104  001402  0100               	movlb	0	; () banked
  8105  001404  1781               	andwf	??___ftadd& (0+255),f,b
  8106  001406  B4D8               	btfsc	status,2,c
  8107  001408  D00A               	goto	l3837
  8108  00140A  D7E9               	goto	l3829
  8109                           
  8110                           ; BSR set to: 0
  8111                           
  8112                           ; BSR set to: 0
  8113  00140C  D008               	goto	l3837
  8114  00140E                     l3835:
  8115                           
  8116                           ; BSR set to: 0
  8117  00140E  0100               	movlb	0	; () banked
  8118  001410  90D8               	bcf	status,0,c
  8119  001412  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8120  001414  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8121  001416  337B               	rrcf	___ftadd@f1& (0+255),f,b
  8122  001418  0100               	movlb	0	; () banked
  8123  00141A  2B86               	incf	___ftadd@exp1& (0+255),f,b
  8124  00141C  D000               	goto	l3837
  8125  00141E                     l3837:
  8126                           
  8127                           ; BSR set to: 0
  8128  00141E  0100               	movlb	0	; () banked
  8129  001420  5185               	movf	___ftadd@exp2& (0+255),w,b
  8130  001422  0100               	movlb	0	; () banked
  8131  001424  1986               	xorwf	___ftadd@exp1& (0+255),w,b
  8132  001426  B4D8               	btfsc	status,2,c
  8133  001428  D030               	goto	l1022
  8134  00142A  D7F1               	goto	l3835
  8135                           
  8136                           ; BSR set to: 0
  8137  00142C  D02E               	goto	l1022
  8138  00142E                     l3839:
  8139                           
  8140                           ; BSR set to: 0
  8141  00142E  0100               	movlb	0	; () banked
  8142  001430  5186               	movf	___ftadd@exp1& (0+255),w,b
  8143  001432  0100               	movlb	0	; () banked
  8144  001434  5D85               	subwf	___ftadd@exp2& (0+255),w,b
  8145  001436  B0D8               	btfsc	status,0,c
  8146  001438  D028               	goto	l1022
  8147  00143A                     l3841:
  8148                           
  8149                           ; BSR set to: 0
  8150  00143A  0100               	movlb	0	; () banked
  8151  00143C  90D8               	bcf	status,0,c
  8152  00143E  377B               	rlcf	___ftadd@f1& (0+255),f,b
  8153  001440  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8154  001442  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8155  001444  0100               	movlb	0	; () banked
  8156  001446  0786               	decf	___ftadd@exp1& (0+255),f,b
  8157                           
  8158                           ; BSR set to: 0
  8159  001448  0100               	movlb	0	; () banked
  8160  00144A  5186               	movf	___ftadd@exp1& (0+255),w,b
  8161  00144C  0100               	movlb	0	; () banked
  8162  00144E  1985               	xorwf	___ftadd@exp2& (0+255),w,b
  8163  001450  B4D8               	btfsc	status,2,c
  8164  001452  D013               	goto	l3849
  8165                           
  8166                           ; BSR set to: 0
  8167  001454  0100               	movlb	0	; () banked
  8168  001456  0784               	decf	___ftadd@sign& (0+255),f,b
  8169  001458  C084  F081         	movff	___ftadd@sign,??___ftadd
  8170  00145C  0E07               	movlw	7
  8171  00145E  0100               	movlb	0	; () banked
  8172  001460  1781               	andwf	??___ftadd& (0+255),f,b
  8173  001462  B4D8               	btfsc	status,2,c
  8174  001464  D00A               	goto	l3849
  8175  001466  D7E9               	goto	l3841
  8176                           
  8177                           ; BSR set to: 0
  8178                           
  8179                           ; BSR set to: 0
  8180  001468  D008               	goto	l3849
  8181  00146A                     l3847:
  8182                           
  8183                           ; BSR set to: 0
  8184  00146A  0100               	movlb	0	; () banked
  8185  00146C  90D8               	bcf	status,0,c
  8186  00146E  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8187  001470  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8188  001472  337E               	rrcf	___ftadd@f2& (0+255),f,b
  8189  001474  0100               	movlb	0	; () banked
  8190  001476  2B85               	incf	___ftadd@exp2& (0+255),f,b
  8191  001478  D000               	goto	l3849
  8192  00147A                     l3849:
  8193                           
  8194                           ; BSR set to: 0
  8195  00147A  0100               	movlb	0	; () banked
  8196  00147C  5185               	movf	___ftadd@exp2& (0+255),w,b
  8197  00147E  0100               	movlb	0	; () banked
  8198  001480  1986               	xorwf	___ftadd@exp1& (0+255),w,b
  8199  001482  B4D8               	btfsc	status,2,c
  8200  001484  D002               	goto	l1022
  8201  001486  D7F1               	goto	l3847
  8202                           
  8203                           ; BSR set to: 0
  8204  001488  D000               	goto	l1022
  8205  00148A                     l1022:
  8206                           
  8207                           ; BSR set to: 0
  8208  00148A  0100               	movlb	0	; () banked
  8209  00148C  AF84               	btfss	___ftadd@sign& (0+255),7,b
  8210  00148E  D012               	goto	l1031
  8211                           
  8212                           ; BSR set to: 0
  8213  001490  0EFF               	movlw	255
  8214  001492  0100               	movlb	0	; () banked
  8215  001494  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
  8216  001496  0EFF               	movlw	255
  8217  001498  0100               	movlb	0	; () banked
  8218  00149A  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8219  00149C  0EFF               	movlw	255
  8220  00149E  0100               	movlb	0	; () banked
  8221  0014A0  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8222  0014A2  0E01               	movlw	1
  8223  0014A4  0100               	movlb	0	; () banked
  8224  0014A6  277B               	addwf	___ftadd@f1& (0+255),f,b
  8225  0014A8  0E00               	movlw	0
  8226  0014AA  0100               	movlb	0	; () banked
  8227  0014AC  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8228  0014AE  0E00               	movlw	0
  8229  0014B0  0100               	movlb	0	; () banked
  8230  0014B2  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8231  0014B4                     l1031:
  8232                           
  8233                           ; BSR set to: 0
  8234  0014B4  0100               	movlb	0	; () banked
  8235  0014B6  AD84               	btfss	___ftadd@sign& (0+255),6,b
  8236  0014B8  D013               	goto	l3855
  8237                           
  8238                           ; BSR set to: 0
  8239  0014BA  0EFF               	movlw	255
  8240  0014BC  0100               	movlb	0	; () banked
  8241  0014BE  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
  8242  0014C0  0EFF               	movlw	255
  8243  0014C2  0100               	movlb	0	; () banked
  8244  0014C4  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8245  0014C6  0EFF               	movlw	255
  8246  0014C8  0100               	movlb	0	; () banked
  8247  0014CA  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8248  0014CC  0E01               	movlw	1
  8249  0014CE  0100               	movlb	0	; () banked
  8250  0014D0  277E               	addwf	___ftadd@f2& (0+255),f,b
  8251  0014D2  0E00               	movlw	0
  8252  0014D4  0100               	movlb	0	; () banked
  8253  0014D6  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8254  0014D8  0E00               	movlw	0
  8255  0014DA  0100               	movlb	0	; () banked
  8256  0014DC  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8257  0014DE  D000               	goto	l3855
  8258  0014E0                     l3855:
  8259                           
  8260                           ; BSR set to: 0
  8261  0014E0  0E00               	movlw	0
  8262  0014E2  0100               	movlb	0	; () banked
  8263  0014E4  6F84               	movwf	___ftadd@sign& (0+255),b
  8264                           
  8265                           ; BSR set to: 0
  8266  0014E6  0100               	movlb	0	; () banked
  8267  0014E8  517B               	movf	___ftadd@f1& (0+255),w,b
  8268  0014EA  0100               	movlb	0	; () banked
  8269  0014EC  277E               	addwf	___ftadd@f2& (0+255),f,b
  8270  0014EE  0100               	movlb	0	; () banked
  8271  0014F0  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
  8272  0014F2  0100               	movlb	0	; () banked
  8273  0014F4  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8274  0014F6  0100               	movlb	0	; () banked
  8275  0014F8  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
  8276  0014FA  0100               	movlb	0	; () banked
  8277  0014FC  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8278                           
  8279                           ; BSR set to: 0
  8280  0014FE  0100               	movlb	0	; () banked
  8281  001500  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8282  001502  D016               	goto	l3865
  8283                           
  8284                           ; BSR set to: 0
  8285  001504  0EFF               	movlw	255
  8286  001506  0100               	movlb	0	; () banked
  8287  001508  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
  8288  00150A  0EFF               	movlw	255
  8289  00150C  0100               	movlb	0	; () banked
  8290  00150E  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8291  001510  0EFF               	movlw	255
  8292  001512  0100               	movlb	0	; () banked
  8293  001514  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8294  001516  0E01               	movlw	1
  8295  001518  0100               	movlb	0	; () banked
  8296  00151A  277E               	addwf	___ftadd@f2& (0+255),f,b
  8297  00151C  0E00               	movlw	0
  8298  00151E  0100               	movlb	0	; () banked
  8299  001520  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8300  001522  0E00               	movlw	0
  8301  001524  0100               	movlb	0	; () banked
  8302  001526  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8303                           
  8304                           ; BSR set to: 0
  8305  001528  0E01               	movlw	1
  8306  00152A  0100               	movlb	0	; () banked
  8307  00152C  6F84               	movwf	___ftadd@sign& (0+255),b
  8308  00152E  D000               	goto	l3865
  8309  001530                     l3865:
  8310                           
  8311                           ; BSR set to: 0
  8312  001530  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
  8313  001534  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  8314  001538  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  8315  00153C  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
  8316  001540  C084  F064         	movff	___ftadd@sign,___ftpack@sign
  8317  001544  EC15  F00F         	call	___ftpack	;wreg free
  8318  001548  C060  F07B         	movff	?___ftpack,?___ftadd
  8319  00154C  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
  8320  001550  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
  8321  001554  D000               	goto	l1008
  8322  001556                     l1008:
  8323  001556  0012               	return		;funcret
  8324  001558                     __end_of___ftadd:
  8325                           	opt stack 0
  8326                           tblptru	equ	0xFF8
  8327                           tblptrh	equ	0xFF7
  8328                           tblptrl	equ	0xFF6
  8329                           tablat	equ	0xFF5
  8330                           prodh	equ	0xFF4
  8331                           prodl	equ	0xFF3
  8332                           intcon	equ	0xFF2
  8333                           intcon2	equ	0xFF1
  8334                           postinc0	equ	0xFEE
  8335                           wreg	equ	0xFE8
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           fsr2h	equ	0xFDA
  8340                           fsr2l	equ	0xFD9
  8341                           status	equ	0xFD8
  8342                           
  8343 ;; *************** function ___ftneg *****************
  8344 ;; Defined at:
  8345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  f1              3    0[BANK0 ] float 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  3    0[BANK0 ] float 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8359 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;Total ram usage:        3 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    6
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_pow
  8370 ;;		_exp
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text66
  8375  002DC0                     __ptext66:
  8376                           	opt stack 0
  8377  002DC0                     ___ftneg:
  8378                           	opt stack 21
  8379                           
  8380                           ;incstack = 0
  8381  002DC0  0100               	movlb	0	; () banked
  8382  002DC2  5160               	movf	___ftneg@f1& (0+255),w,b
  8383  002DC4  0100               	movlb	0	; () banked
  8384  002DC6  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8385  002DC8  0100               	movlb	0	; () banked
  8386  002DCA  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8387  002DCC  B4D8               	btfsc	status,2,c
  8388  002DCE  D009               	goto	l1064
  8389                           
  8390                           ; BSR set to: 0
  8391  002DD0  0E00               	movlw	0
  8392  002DD2  0100               	movlb	0	; () banked
  8393  002DD4  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  8394  002DD6  0E00               	movlw	0
  8395  002DD8  0100               	movlb	0	; () banked
  8396  002DDA  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8397  002DDC  0E80               	movlw	128
  8398  002DDE  0100               	movlb	0	; () banked
  8399  002DE0  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8400  002DE2                     l1064:
  8401                           
  8402                           ; BSR set to: 0
  8403  002DE2  C060  F060         	movff	___ftneg@f1,?___ftneg
  8404  002DE6  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  8405  002DEA  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  8406                           
  8407                           ; BSR set to: 0
  8408  002DEE  0012               	return		;funcret
  8409  002DF0                     __end_of___ftneg:
  8410                           	opt stack 0
  8411                           tblptru	equ	0xFF8
  8412                           tblptrh	equ	0xFF7
  8413                           tblptrl	equ	0xFF6
  8414                           tablat	equ	0xFF5
  8415                           prodh	equ	0xFF4
  8416                           prodl	equ	0xFF3
  8417                           intcon	equ	0xFF2
  8418                           intcon2	equ	0xFF1
  8419                           postinc0	equ	0xFEE
  8420                           wreg	equ	0xFE8
  8421                           indf2	equ	0xFDF
  8422                           postinc2	equ	0xFDE
  8423                           postdec2	equ	0xFDD
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function ___ftdiv *****************
  8429 ;; Defined at:
  8430 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  f1              3    8[BANK0 ] float 
  8433 ;;  f2              3   11[BANK0 ] float 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;  f3              3   18[BANK0 ] float 
  8436 ;;  sign            1   22[BANK0 ] unsigned char 
  8437 ;;  exp             1   21[BANK0 ] unsigned char 
  8438 ;;  cntr            1   17[BANK0 ] unsigned char 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  3    8[BANK0 ] float 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, status,0, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8448 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;Total ram usage:       15 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    7
  8455 ;; This function calls:
  8456 ;;		___ftpack
  8457 ;; This function is called by:
  8458 ;;		_exp
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text67
  8463  001A76                     __ptext67:
  8464                           	opt stack 0
  8465  001A76                     ___ftdiv:
  8466                           	opt stack 20
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;incstack = 0
  8470  001A76  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  8471  001A7A  0100               	movlb	0	; () banked
  8472  001A7C  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  8473  001A7E  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  8474  001A80  0100               	movlb	0	; () banked
  8475  001A82  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8476  001A84  0100               	movlb	0	; () banked
  8477  001A86  376E               	rlcf	??___ftdiv& (0+255),f,b
  8478  001A88  E301               	bnc	u3331
  8479  001A8A  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  8480  001A8C                     u3331:
  8481  001A8C  0100               	movlb	0	; () banked
  8482  001A8E  516E               	movf	??___ftdiv& (0+255),w,b
  8483  001A90  0100               	movlb	0	; () banked
  8484  001A92  6F75               	movwf	___ftdiv@exp& (0+255),b
  8485  001A94  0100               	movlb	0	; () banked
  8486  001A96  5175               	movf	___ftdiv@exp& (0+255),w,b
  8487  001A98  A4D8               	btfss	status,2,c
  8488  001A9A  D002               	goto	l3963
  8489  001A9C  D014               	goto	l3965
  8490                           
  8491                           ; BSR set to: 0
  8492                           
  8493                           ; BSR set to: 0
  8494  001A9E  D08B               	goto	l1039
  8495  001AA0                     l3963:
  8496                           
  8497                           ; BSR set to: 0
  8498  001AA0  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  8499  001AA4  0100               	movlb	0	; () banked
  8500  001AA6  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  8501  001AA8  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  8502  001AAA  0100               	movlb	0	; () banked
  8503  001AAC  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8504  001AAE  0100               	movlb	0	; () banked
  8505  001AB0  376E               	rlcf	??___ftdiv& (0+255),f,b
  8506  001AB2  E301               	bnc	u3351
  8507  001AB4  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  8508  001AB6                     u3351:
  8509  001AB6  0100               	movlb	0	; () banked
  8510  001AB8  516E               	movf	??___ftdiv& (0+255),w,b
  8511  001ABA  0100               	movlb	0	; () banked
  8512  001ABC  6F76               	movwf	___ftdiv@sign& (0+255),b
  8513  001ABE  0100               	movlb	0	; () banked
  8514  001AC0  5176               	movf	___ftdiv@sign& (0+255),w,b
  8515  001AC2  A4D8               	btfss	status,2,c
  8516  001AC4  D00A               	goto	l3969
  8517  001AC6                     l3965:
  8518                           
  8519                           ; BSR set to: 0
  8520  001AC6  0E00               	movlw	0
  8521  001AC8  0100               	movlb	0	; () banked
  8522  001ACA  6F68               	movwf	?___ftdiv& (0+255),b
  8523  001ACC  0E00               	movlw	0
  8524  001ACE  0100               	movlb	0	; () banked
  8525  001AD0  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  8526  001AD2  0E00               	movlw	0
  8527  001AD4  0100               	movlb	0	; () banked
  8528  001AD6  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  8529                           
  8530                           ; BSR set to: 0
  8531  001AD8  D06E               	goto	l1039
  8532  001ADA                     l3969:
  8533                           
  8534                           ; BSR set to: 0
  8535  001ADA  0E00               	movlw	0
  8536  001ADC  0100               	movlb	0	; () banked
  8537  001ADE  6F72               	movwf	___ftdiv@f3& (0+255),b
  8538  001AE0  0E00               	movlw	0
  8539  001AE2  0100               	movlb	0	; () banked
  8540  001AE4  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  8541  001AE6  0E00               	movlw	0
  8542  001AE8  0100               	movlb	0	; () banked
  8543  001AEA  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  8544                           
  8545                           ; BSR set to: 0
  8546  001AEC  0100               	movlb	0	; () banked
  8547  001AEE  5176               	movf	___ftdiv@sign& (0+255),w,b
  8548  001AF0  0F89               	addlw	137
  8549  001AF2  0100               	movlb	0	; () banked
  8550  001AF4  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  8551                           
  8552                           ; BSR set to: 0
  8553  001AF6  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  8554                           
  8555                           ; BSR set to: 0
  8556  001AFA  0100               	movlb	0	; () banked
  8557  001AFC  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8558  001AFE  0100               	movlb	0	; () banked
  8559  001B00  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  8560                           
  8561                           ; BSR set to: 0
  8562  001B02  0E80               	movlw	128
  8563  001B04  0100               	movlb	0	; () banked
  8564  001B06  1776               	andwf	___ftdiv@sign& (0+255),f,b
  8565                           
  8566                           ; BSR set to: 0
  8567  001B08  0100               	movlb	0	; () banked
  8568  001B0A  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8569                           
  8570                           ; BSR set to: 0
  8571  001B0C  0EFF               	movlw	255
  8572  001B0E  0100               	movlb	0	; () banked
  8573  001B10  1768               	andwf	___ftdiv@f1& (0+255),f,b
  8574  001B12  0EFF               	movlw	255
  8575  001B14  0100               	movlb	0	; () banked
  8576  001B16  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8577  001B18  0E00               	movlw	0
  8578  001B1A  0100               	movlb	0	; () banked
  8579  001B1C  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 0
  8582  001B1E  0100               	movlb	0	; () banked
  8583  001B20  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8584                           
  8585                           ; BSR set to: 0
  8586  001B22  0EFF               	movlw	255
  8587  001B24  0100               	movlb	0	; () banked
  8588  001B26  176B               	andwf	___ftdiv@f2& (0+255),f,b
  8589  001B28  0EFF               	movlw	255
  8590  001B2A  0100               	movlb	0	; () banked
  8591  001B2C  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8592  001B2E  0E00               	movlw	0
  8593  001B30  0100               	movlb	0	; () banked
  8594  001B32  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8595                           
  8596                           ; BSR set to: 0
  8597  001B34  0E18               	movlw	24
  8598  001B36  0100               	movlb	0	; () banked
  8599  001B38  6F71               	movwf	___ftdiv@cntr& (0+255),b
  8600  001B3A  D000               	goto	l3989
  8601  001B3C                     l3989:
  8602                           
  8603                           ; BSR set to: 0
  8604  001B3C  0100               	movlb	0	; () banked
  8605  001B3E  90D8               	bcf	status,0,c
  8606  001B40  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  8607  001B42  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8608  001B44  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611  001B46  0100               	movlb	0	; () banked
  8612  001B48  516B               	movf	___ftdiv@f2& (0+255),w,b
  8613  001B4A  0100               	movlb	0	; () banked
  8614  001B4C  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  8615  001B4E  0100               	movlb	0	; () banked
  8616  001B50  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8617  001B52  0100               	movlb	0	; () banked
  8618  001B54  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8619  001B56  0100               	movlb	0	; () banked
  8620  001B58  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8621  001B5A  0100               	movlb	0	; () banked
  8622  001B5C  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8623  001B5E  A0D8               	btfss	status,0,c
  8624  001B60  D00E               	goto	l1042
  8625                           
  8626                           ; BSR set to: 0
  8627  001B62  0100               	movlb	0	; () banked
  8628  001B64  516B               	movf	___ftdiv@f2& (0+255),w,b
  8629  001B66  0100               	movlb	0	; () banked
  8630  001B68  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  8631  001B6A  0100               	movlb	0	; () banked
  8632  001B6C  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8633  001B6E  0100               	movlb	0	; () banked
  8634  001B70  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8635  001B72  0100               	movlb	0	; () banked
  8636  001B74  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8637  001B76  0100               	movlb	0	; () banked
  8638  001B78  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8639                           
  8640                           ; BSR set to: 0
  8641  001B7A  0100               	movlb	0	; () banked
  8642  001B7C  8172               	bsf	___ftdiv@f3& (0+255),0,b
  8643  001B7E                     l1042:
  8644                           
  8645                           ; BSR set to: 0
  8646  001B7E  0100               	movlb	0	; () banked
  8647  001B80  90D8               	bcf	status,0,c
  8648  001B82  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  8649  001B84  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8650  001B86  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8651                           
  8652                           ; BSR set to: 0
  8653  001B88  0100               	movlb	0	; () banked
  8654  001B8A  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  8655  001B8C  D7D7               	goto	l3989
  8656  001B8E  D000               	goto	l3999
  8657  001B90                     l3999:
  8658                           
  8659                           ; BSR set to: 0
  8660  001B90  C072  F060         	movff	___ftdiv@f3,___ftpack@arg
  8661  001B94  C073  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8662  001B98  C074  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8663  001B9C  C075  F063         	movff	___ftdiv@exp,___ftpack@exp
  8664  001BA0  C076  F064         	movff	___ftdiv@sign,___ftpack@sign
  8665  001BA4  EC15  F00F         	call	___ftpack	;wreg free
  8666  001BA8  C060  F068         	movff	?___ftpack,?___ftdiv
  8667  001BAC  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
  8668  001BB0  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
  8669  001BB4  D000               	goto	l1039
  8670  001BB6                     l1039:
  8671  001BB6  0012               	return		;funcret
  8672  001BB8                     __end_of___ftdiv:
  8673                           	opt stack 0
  8674                           tblptru	equ	0xFF8
  8675                           tblptrh	equ	0xFF7
  8676                           tblptrl	equ	0xFF6
  8677                           tablat	equ	0xFF5
  8678                           prodh	equ	0xFF4
  8679                           prodl	equ	0xFF3
  8680                           intcon	equ	0xFF2
  8681                           intcon2	equ	0xFF1
  8682                           postinc0	equ	0xFEE
  8683                           wreg	equ	0xFE8
  8684                           indf2	equ	0xFDF
  8685                           postinc2	equ	0xFDE
  8686                           postdec2	equ	0xFDD
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8
  8690                           
  8691 ;; *************** function ___awtoft *****************
  8692 ;; Defined at:
  8693 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  c               2    8[BANK0 ] int 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  sign            1   11[BANK0 ] unsigned char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  3    8[BANK0 ] float 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8707 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;Total ram usage:        4 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    7
  8714 ;; This function calls:
  8715 ;;		___ftpack
  8716 ;; This function is called by:
  8717 ;;		_exp
  8718 ;;		_log
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text68
  8723  002C50                     __ptext68:
  8724                           	opt stack 0
  8725  002C50                     ___awtoft:
  8726                           	opt stack 20
  8727                           
  8728                           ;incstack = 0
  8729  002C50  0E00               	movlw	0
  8730  002C52  0100               	movlb	0	; () banked
  8731  002C54  6F6B               	movwf	___awtoft@sign& (0+255),b
  8732                           
  8733                           ; BSR set to: 0
  8734  002C56  0100               	movlb	0	; () banked
  8735  002C58  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  8736  002C5A  D009               	goto	l4019
  8737                           
  8738                           ; BSR set to: 0
  8739  002C5C  0100               	movlb	0	; () banked
  8740  002C5E  6D68               	negf	___awtoft@c& (0+255),b
  8741  002C60  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  8742  002C62  B0D8               	btfsc	status,0,c
  8743  002C64  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  8744                           
  8745                           ; BSR set to: 0
  8746  002C66  0E01               	movlw	1
  8747  002C68  0100               	movlb	0	; () banked
  8748  002C6A  6F6B               	movwf	___awtoft@sign& (0+255),b
  8749  002C6C  D000               	goto	l4019
  8750  002C6E                     l4019:
  8751                           
  8752                           ; BSR set to: 0
  8753  002C6E  C068  F060         	movff	___awtoft@c,___ftpack@arg
  8754  002C72  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  8755  002C76  0100               	movlb	0	; () banked
  8756  002C78  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  8757  002C7A  0E8E               	movlw	142
  8758  002C7C  0100               	movlb	0	; () banked
  8759  002C7E  6F63               	movwf	___ftpack@exp& (0+255),b
  8760  002C80  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  8761  002C84  EC15  F00F         	call	___ftpack	;wreg free
  8762  002C88  C060  F068         	movff	?___ftpack,?___awtoft
  8763  002C8C  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  8764  002C90  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  8765  002C94  D000               	goto	l863
  8766  002C96                     l863:
  8767  002C96  0012               	return		;funcret
  8768  002C98                     __end_of___awtoft:
  8769                           	opt stack 0
  8770                           tblptru	equ	0xFF8
  8771                           tblptrh	equ	0xFF7
  8772                           tblptrl	equ	0xFF6
  8773                           tablat	equ	0xFF5
  8774                           prodh	equ	0xFF4
  8775                           prodl	equ	0xFF3
  8776                           intcon	equ	0xFF2
  8777                           intcon2	equ	0xFF1
  8778                           postinc0	equ	0xFEE
  8779                           wreg	equ	0xFE8
  8780                           indf2	equ	0xFDF
  8781                           postinc2	equ	0xFDE
  8782                           postdec2	equ	0xFDD
  8783                           fsr2h	equ	0xFDA
  8784                           fsr2l	equ	0xFD9
  8785                           status	equ	0xFD8
  8786                           
  8787 ;; *************** function ___lltoft *****************
  8788 ;; Defined at:
  8789 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  c               4    8[BANK0 ] unsigned long 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  exp             1   16[BANK0 ] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  3    8[BANK0 ] float 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8806 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;Total ram usage:        9 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    7
  8810 ;; This function calls:
  8811 ;;		___ftpack
  8812 ;; This function is called by:
  8813 ;;		_pow
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text69
  8818  002894                     __ptext69:
  8819                           	opt stack 0
  8820  002894                     ___lltoft:
  8821                           	opt stack 21
  8822                           
  8823                           ;incstack = 0
  8824  002894  0E8E               	movlw	142
  8825  002896  0100               	movlb	0	; () banked
  8826  002898  6F70               	movwf	___lltoft@exp& (0+255),b
  8827  00289A  D009               	goto	l4109
  8828  00289C                     l4107:
  8829                           
  8830                           ; BSR set to: 0
  8831  00289C  0100               	movlb	0	; () banked
  8832  00289E  90D8               	bcf	status,0,c
  8833  0028A0  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8834  0028A2  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8835  0028A4  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8836  0028A6  3368               	rrcf	___lltoft@c& (0+255),f,b
  8837  0028A8  0100               	movlb	0	; () banked
  8838  0028AA  2B70               	incf	___lltoft@exp& (0+255),f,b
  8839  0028AC  D000               	goto	l4109
  8840  0028AE                     l4109:
  8841                           
  8842                           ; BSR set to: 0
  8843  0028AE  0E00               	movlw	0
  8844  0028B0  0100               	movlb	0	; () banked
  8845  0028B2  1568               	andwf	___lltoft@c& (0+255),w,b
  8846  0028B4  0100               	movlb	0	; () banked
  8847  0028B6  6F6C               	movwf	??___lltoft& (0+255),b
  8848  0028B8  0E00               	movlw	0
  8849  0028BA  0100               	movlb	0	; () banked
  8850  0028BC  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  8851  0028BE  0100               	movlb	0	; () banked
  8852  0028C0  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  8853  0028C2  0E00               	movlw	0
  8854  0028C4  0100               	movlb	0	; () banked
  8855  0028C6  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  8856  0028C8  0100               	movlb	0	; () banked
  8857  0028CA  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  8858  0028CC  0EFF               	movlw	255
  8859  0028CE  0100               	movlb	0	; () banked
  8860  0028D0  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  8861  0028D2  0100               	movlb	0	; () banked
  8862  0028D4  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  8863  0028D6  0100               	movlb	0	; () banked
  8864  0028D8  516C               	movf	??___lltoft& (0+255),w,b
  8865  0028DA  0100               	movlb	0	; () banked
  8866  0028DC  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  8867  0028DE  0100               	movlb	0	; () banked
  8868  0028E0  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  8869  0028E2  0100               	movlb	0	; () banked
  8870  0028E4  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
  8871  0028E6  A4D8               	btfss	status,2,c
  8872  0028E8  D7D9               	goto	l4107
  8873                           
  8874                           ; BSR set to: 0
  8875                           
  8876                           ; BSR set to: 0
  8877  0028EA  C068  F060         	movff	___lltoft@c,___ftpack@arg
  8878  0028EE  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  8879  0028F2  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  8880  0028F6  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  8881  0028FA  0E00               	movlw	0
  8882  0028FC  0100               	movlb	0	; () banked
  8883  0028FE  6F64               	movwf	___ftpack@sign& (0+255),b
  8884  002900  EC15  F00F         	call	___ftpack	;wreg free
  8885  002904  C060  F068         	movff	?___ftpack,?___lltoft
  8886  002908  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  8887  00290C  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  8888  002910  D000               	goto	l1144
  8889  002912                     l1144:
  8890  002912  0012               	return		;funcret
  8891  002914                     __end_of___lltoft:
  8892                           	opt stack 0
  8893                           tblptru	equ	0xFF8
  8894                           tblptrh	equ	0xFF7
  8895                           tblptrl	equ	0xFF6
  8896                           tablat	equ	0xFF5
  8897                           prodh	equ	0xFF4
  8898                           prodl	equ	0xFF3
  8899                           intcon	equ	0xFF2
  8900                           intcon2	equ	0xFF1
  8901                           postinc0	equ	0xFEE
  8902                           wreg	equ	0xFE8
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           
  8910 ;; *************** function ___lbtoft *****************
  8911 ;; Defined at:
  8912 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  c               1    wreg     unsigned char 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  c               1   11[BANK0 ] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  3    8[BANK0 ] float 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8926 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;Total ram usage:        4 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    7
  8933 ;; This function calls:
  8934 ;;		___ftpack
  8935 ;; This function is called by:
  8936 ;;		_CalculateSensorSums
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text70
  8941  002DF0                     __ptext70:
  8942                           	opt stack 0
  8943  002DF0                     ___lbtoft:
  8944                           	opt stack 22
  8945                           
  8946                           ;incstack = 0
  8947                           ;___lbtoft@c stored from wreg
  8948  002DF0  0100               	movlb	0	; () banked
  8949  002DF2  6F6B               	movwf	___lbtoft@c& (0+255),b
  8950                           
  8951                           ; BSR set to: 0
  8952  002DF4  0100               	movlb	0	; () banked
  8953  002DF6  516B               	movf	___lbtoft@c& (0+255),w,b
  8954  002DF8  0100               	movlb	0	; () banked
  8955  002DFA  6F60               	movwf	___ftpack@arg& (0+255),b
  8956  002DFC  6B61               	clrf	(___ftpack@arg+1)& (0+255),b
  8957  002DFE  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  8958  002E00  0E8E               	movlw	142
  8959  002E02  0100               	movlb	0	; () banked
  8960  002E04  6F63               	movwf	___ftpack@exp& (0+255),b
  8961  002E06  0E00               	movlw	0
  8962  002E08  0100               	movlb	0	; () banked
  8963  002E0A  6F64               	movwf	___ftpack@sign& (0+255),b
  8964  002E0C  EC15  F00F         	call	___ftpack	;wreg free
  8965  002E10  C060  F068         	movff	?___ftpack,?___lbtoft
  8966  002E14  C061  F069         	movff	?___ftpack+1,?___lbtoft+1
  8967  002E18  C062  F06A         	movff	?___ftpack+2,?___lbtoft+2
  8968  002E1C  D000               	goto	l1111
  8969  002E1E                     l1111:
  8970  002E1E  0012               	return		;funcret
  8971  002E20                     __end_of___lbtoft:
  8972                           	opt stack 0
  8973                           tblptru	equ	0xFF8
  8974                           tblptrh	equ	0xFF7
  8975                           tblptrl	equ	0xFF6
  8976                           tablat	equ	0xFF5
  8977                           prodh	equ	0xFF4
  8978                           prodl	equ	0xFF3
  8979                           intcon	equ	0xFF2
  8980                           intcon2	equ	0xFF1
  8981                           postinc0	equ	0xFEE
  8982                           wreg	equ	0xFE8
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           fsr2h	equ	0xFDA
  8987                           fsr2l	equ	0xFD9
  8988                           status	equ	0xFD8
  8989                           
  8990 ;; *************** function ___ftpack *****************
  8991 ;; Defined at:
  8992 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  arg             3    0[BANK0 ] unsigned um
  8995 ;;  exp             1    3[BANK0 ] unsigned char 
  8996 ;;  sign            1    4[BANK0 ] unsigned char 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;		None
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  3    0[BANK0 ] float 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9008 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9011 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;Total ram usage:        8 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:    6
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		___altoft
  9019 ;;		___awtoft
  9020 ;;		___ftadd
  9021 ;;		___ftdiv
  9022 ;;		___ftmul
  9023 ;;		___lbtoft
  9024 ;;		___lltoft
  9025 ;;		___lwtoft
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text71
  9030  001E2A                     __ptext71:
  9031                           	opt stack 0
  9032  001E2A                     ___ftpack:
  9033                           	opt stack 19
  9034                           
  9035                           ;incstack = 0
  9036  001E2A  0100               	movlb	0	; () banked
  9037  001E2C  5163               	movf	___ftpack@exp& (0+255),w,b
  9038  001E2E  0100               	movlb	0	; () banked
  9039  001E30  B4D8               	btfsc	status,2,c
  9040  001E32  D008               	goto	l3745
  9041                           
  9042                           ; BSR set to: 0
  9043  001E34  0100               	movlb	0	; () banked
  9044  001E36  5160               	movf	___ftpack@arg& (0+255),w,b
  9045  001E38  0100               	movlb	0	; () banked
  9046  001E3A  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9047  001E3C  0100               	movlb	0	; () banked
  9048  001E3E  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9049  001E40  A4D8               	btfss	status,2,c
  9050  001E42  D013               	goto	l3751
  9051  001E44                     l3745:
  9052                           
  9053                           ; BSR set to: 0
  9054  001E44  0E00               	movlw	0
  9055  001E46  0100               	movlb	0	; () banked
  9056  001E48  6F60               	movwf	?___ftpack& (0+255),b
  9057  001E4A  0E00               	movlw	0
  9058  001E4C  0100               	movlb	0	; () banked
  9059  001E4E  6F61               	movwf	(?___ftpack+1)& (0+255),b
  9060  001E50  0E00               	movlw	0
  9061  001E52  0100               	movlb	0	; () banked
  9062  001E54  6F62               	movwf	(?___ftpack+2)& (0+255),b
  9063                           
  9064                           ; BSR set to: 0
  9065  001E56  D078               	goto	l967
  9066                           
  9067                           ; BSR set to: 0
  9068  001E58  D008               	goto	l3751
  9069  001E5A                     l3749:
  9070                           
  9071                           ; BSR set to: 0
  9072  001E5A  0100               	movlb	0	; () banked
  9073  001E5C  2B63               	incf	___ftpack@exp& (0+255),f,b
  9074  001E5E  0100               	movlb	0	; () banked
  9075  001E60  90D8               	bcf	status,0,c
  9076  001E62  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9077  001E64  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9078  001E66  3360               	rrcf	___ftpack@arg& (0+255),f,b
  9079  001E68  D000               	goto	l3751
  9080  001E6A                     l3751:
  9081                           
  9082                           ; BSR set to: 0
  9083  001E6A  0E00               	movlw	0
  9084  001E6C  0100               	movlb	0	; () banked
  9085  001E6E  1560               	andwf	___ftpack@arg& (0+255),w,b
  9086  001E70  0100               	movlb	0	; () banked
  9087  001E72  6F65               	movwf	??___ftpack& (0+255),b
  9088  001E74  0E00               	movlw	0
  9089  001E76  0100               	movlb	0	; () banked
  9090  001E78  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9091  001E7A  0100               	movlb	0	; () banked
  9092  001E7C  6F66               	movwf	(??___ftpack+1)& (0+255),b
  9093  001E7E  0EFE               	movlw	254
  9094  001E80  0100               	movlb	0	; () banked
  9095  001E82  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9096  001E84  0100               	movlb	0	; () banked
  9097  001E86  6F67               	movwf	(??___ftpack+2)& (0+255),b
  9098  001E88  0100               	movlb	0	; () banked
  9099  001E8A  5165               	movf	??___ftpack& (0+255),w,b
  9100  001E8C  0100               	movlb	0	; () banked
  9101  001E8E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  9102  001E90  0100               	movlb	0	; () banked
  9103  001E92  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  9104  001E94  B4D8               	btfsc	status,2,c
  9105  001E96  D013               	goto	l3757
  9106  001E98  D7E0               	goto	l3749
  9107                           
  9108                           ; BSR set to: 0
  9109  001E9A  D011               	goto	l3757
  9110  001E9C                     l3753:
  9111                           
  9112                           ; BSR set to: 0
  9113  001E9C  0100               	movlb	0	; () banked
  9114  001E9E  2B63               	incf	___ftpack@exp& (0+255),f,b
  9115                           
  9116                           ; BSR set to: 0
  9117  001EA0  0E01               	movlw	1
  9118  001EA2  0100               	movlb	0	; () banked
  9119  001EA4  2760               	addwf	___ftpack@arg& (0+255),f,b
  9120  001EA6  0E00               	movlw	0
  9121  001EA8  0100               	movlb	0	; () banked
  9122  001EAA  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9123  001EAC  0E00               	movlw	0
  9124  001EAE  0100               	movlb	0	; () banked
  9125  001EB0  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9126  001EB2  0100               	movlb	0	; () banked
  9127  001EB4  90D8               	bcf	status,0,c
  9128  001EB6  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9129  001EB8  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9130  001EBA  3360               	rrcf	___ftpack@arg& (0+255),f,b
  9131  001EBC  D000               	goto	l3757
  9132  001EBE                     l3757:
  9133                           
  9134                           ; BSR set to: 0
  9135  001EBE  0E00               	movlw	0
  9136  001EC0  0100               	movlb	0	; () banked
  9137  001EC2  1560               	andwf	___ftpack@arg& (0+255),w,b
  9138  001EC4  0100               	movlb	0	; () banked
  9139  001EC6  6F65               	movwf	??___ftpack& (0+255),b
  9140  001EC8  0E00               	movlw	0
  9141  001ECA  0100               	movlb	0	; () banked
  9142  001ECC  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9143  001ECE  0100               	movlb	0	; () banked
  9144  001ED0  6F66               	movwf	(??___ftpack+1)& (0+255),b
  9145  001ED2  0EFF               	movlw	255
  9146  001ED4  0100               	movlb	0	; () banked
  9147  001ED6  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9148  001ED8  0100               	movlb	0	; () banked
  9149  001EDA  6F67               	movwf	(??___ftpack+2)& (0+255),b
  9150  001EDC  0100               	movlb	0	; () banked
  9151  001EDE  5165               	movf	??___ftpack& (0+255),w,b
  9152  001EE0  0100               	movlb	0	; () banked
  9153  001EE2  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  9154  001EE4  0100               	movlb	0	; () banked
  9155  001EE6  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  9156  001EE8  B4D8               	btfsc	status,2,c
  9157  001EEA  D00A               	goto	l3761
  9158  001EEC  D7D7               	goto	l3753
  9159                           
  9160                           ; BSR set to: 0
  9161  001EEE  D008               	goto	l3761
  9162  001EF0                     l3759:
  9163                           
  9164                           ; BSR set to: 0
  9165  001EF0  0100               	movlb	0	; () banked
  9166  001EF2  0763               	decf	___ftpack@exp& (0+255),f,b
  9167  001EF4  0100               	movlb	0	; () banked
  9168  001EF6  90D8               	bcf	status,0,c
  9169  001EF8  3760               	rlcf	___ftpack@arg& (0+255),f,b
  9170  001EFA  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9171  001EFC  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9172  001EFE  D000               	goto	l3761
  9173  001F00                     l3761:
  9174                           
  9175                           ; BSR set to: 0
  9176  001F00  0100               	movlb	0	; () banked
  9177  001F02  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9178  001F04  D005               	goto	l978
  9179                           
  9180                           ; BSR set to: 0
  9181  001F06  0E02               	movlw	2
  9182  001F08  0100               	movlb	0	; () banked
  9183  001F0A  6163               	cpfslt	___ftpack@exp& (0+255),b
  9184  001F0C  D7F1               	goto	l3759
  9185  001F0E  D000               	goto	l978
  9186  001F10                     l978:
  9187                           
  9188                           ; BSR set to: 0
  9189  001F10  0100               	movlb	0	; () banked
  9190  001F12  B163               	btfsc	___ftpack@exp& (0+255),0,b
  9191  001F14  D003               	goto	l3767
  9192                           
  9193                           ; BSR set to: 0
  9194  001F16  0100               	movlb	0	; () banked
  9195  001F18  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9196  001F1A  D000               	goto	l3767
  9197  001F1C                     l3767:
  9198                           
  9199                           ; BSR set to: 0
  9200  001F1C  0100               	movlb	0	; () banked
  9201  001F1E  90D8               	bcf	status,0,c
  9202  001F20  3363               	rrcf	___ftpack@exp& (0+255),f,b
  9203  001F22  0100               	movlb	0	; () banked
  9204  001F24  5163               	movf	___ftpack@exp& (0+255),w,b
  9205  001F26  0100               	movlb	0	; () banked
  9206  001F28  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9207                           
  9208                           ; BSR set to: 0
  9209  001F2A  0100               	movlb	0	; () banked
  9210  001F2C  5164               	movf	___ftpack@sign& (0+255),w,b
  9211  001F2E  0100               	movlb	0	; () banked
  9212  001F30  B4D8               	btfsc	status,2,c
  9213  001F32  D003               	goto	l3773
  9214                           
  9215                           ; BSR set to: 0
  9216  001F34  0100               	movlb	0	; () banked
  9217  001F36  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9218  001F38  D000               	goto	l3773
  9219  001F3A                     l3773:
  9220                           
  9221                           ; BSR set to: 0
  9222  001F3A  C060  F060         	movff	___ftpack@arg,?___ftpack
  9223  001F3E  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  9224  001F42  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  9225  001F46  D000               	goto	l967
  9226  001F48                     l967:
  9227                           
  9228                           ; BSR set to: 0
  9229  001F48  0012               	return		;funcret
  9230  001F4A                     __end_of___ftpack:
  9231                           	opt stack 0
  9232                           tblptru	equ	0xFF8
  9233                           tblptrh	equ	0xFF7
  9234                           tblptrl	equ	0xFF6
  9235                           tablat	equ	0xFF5
  9236                           prodh	equ	0xFF4
  9237                           prodl	equ	0xFF3
  9238                           intcon	equ	0xFF2
  9239                           intcon2	equ	0xFF1
  9240                           postinc0	equ	0xFEE
  9241                           wreg	equ	0xFE8
  9242                           indf2	equ	0xFDF
  9243                           postinc2	equ	0xFDE
  9244                           postdec2	equ	0xFDD
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _CalculateSensorError *****************
  9250 ;; Defined at:
  9251 ;;		line 384 in file "FastBuggy17_Main_Code.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  sum             2    0[BANK0 ] PTR const unsigned char 
  9254 ;;		 -> main@sensor_sum(1), 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  2    0[BANK0 ] int 
  9259 ;; Registers used:
  9260 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9270 ;;Total ram usage:        2 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:    6
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_main
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text72
  9281  0025E6                     __ptext72:
  9282                           	opt stack 0
  9283  0025E6                     _CalculateSensorError:
  9284                           	opt stack 24
  9285                           
  9286                           ;FastBuggy17_Main_Code.c: 386: switch(*sum) {
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;incstack = 0
  9290  0025E6  D033               	goto	l4561
  9291  0025E8                     l4523:
  9292                           
  9293                           ;FastBuggy17_Main_Code.c: 388: return(50);
  9294  0025E8  0E00               	movlw	0
  9295  0025EA  0100               	movlb	0	; () banked
  9296  0025EC  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9297  0025EE  0E32               	movlw	50
  9298  0025F0  D053               	goto	L21
  9299                           
  9300                           ; BSR set to: 0
  9301  0025F2  D054               	goto	l360
  9302  0025F4                     l4527:
  9303                           
  9304                           ;FastBuggy17_Main_Code.c: 390: return(30);
  9305  0025F4  0E00               	movlw	0
  9306  0025F6  0100               	movlb	0	; () banked
  9307  0025F8  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9308  0025FA  0E1E               	movlw	30
  9309  0025FC  D04D               	goto	L21
  9310                           
  9311                           ; BSR set to: 0
  9312  0025FE  D04E               	goto	l360
  9313  002600                     l4531:
  9314                           
  9315                           ;FastBuggy17_Main_Code.c: 392: return(22);
  9316  002600  0E00               	movlw	0
  9317  002602  0100               	movlb	0	; () banked
  9318  002604  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9319  002606  0E16               	movlw	22
  9320  002608  D047               	goto	L21
  9321                           
  9322                           ; BSR set to: 0
  9323  00260A  D048               	goto	l360
  9324  00260C                     l4535:
  9325                           
  9326                           ;FastBuggy17_Main_Code.c: 394: return(17);
  9327  00260C  0E00               	movlw	0
  9328  00260E  0100               	movlb	0	; () banked
  9329  002610  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9330  002612  0E11               	movlw	17
  9331  002614  D041               	goto	L21
  9332                           
  9333                           ; BSR set to: 0
  9334  002616  D042               	goto	l360
  9335                           
  9336                           ; BSR set to: 0
  9337                           
  9338                           ;FastBuggy17_Main_Code.c: 395: case(4) :
  9339  002618  D03B               	goto	l4563
  9340                           
  9341                           ; BSR set to: 0
  9342                           
  9343                           ;FastBuggy17_Main_Code.c: 396: return(0);
  9344  00261A  D040               	goto	l360
  9345  00261C                     l4543:
  9346                           
  9347                           ;FastBuggy17_Main_Code.c: 398: return(-17);
  9348  00261C  0EFF               	movlw	255
  9349  00261E  0100               	movlb	0	; () banked
  9350  002620  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9351  002622  0EEF               	movlw	239
  9352  002624  D039               	goto	L21
  9353                           
  9354                           ; BSR set to: 0
  9355  002626  D03A               	goto	l360
  9356  002628                     l4547:
  9357                           
  9358                           ;FastBuggy17_Main_Code.c: 400: return(-22);
  9359  002628  0EFF               	movlw	255
  9360  00262A  0100               	movlb	0	; () banked
  9361  00262C  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9362  00262E  0EEA               	movlw	234
  9363  002630  D033               	goto	L21
  9364                           
  9365                           ; BSR set to: 0
  9366  002632  D034               	goto	l360
  9367  002634                     l4551:
  9368                           
  9369                           ;FastBuggy17_Main_Code.c: 402: return(-30);
  9370  002634  0EFF               	movlw	255
  9371  002636  0100               	movlb	0	; () banked
  9372  002638  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9373  00263A  0EE2               	movlw	226
  9374  00263C  D02D               	goto	L21
  9375                           
  9376                           ; BSR set to: 0
  9377  00263E  D02E               	goto	l360
  9378  002640                     l4555:
  9379                           
  9380                           ;FastBuggy17_Main_Code.c: 404: return(-50);
  9381  002640  0EFF               	movlw	255
  9382  002642  0100               	movlb	0	; () banked
  9383  002644  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9384  002646  0ECE               	movlw	206
  9385  002648  D027               	goto	L21
  9386                           
  9387                           ; BSR set to: 0
  9388  00264A  D028               	goto	l360
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;FastBuggy17_Main_Code.c: 407: }
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;FastBuggy17_Main_Code.c: 406: break;
  9395                           
  9396                           ;FastBuggy17_Main_Code.c: 405: default :
  9397  00264C  D021               	goto	l4563
  9398  00264E                     l4561:
  9399  00264E  C060  FFD9         	movff	CalculateSensorError@sum,fsr2l
  9400  002652  C061  FFDA         	movff	CalculateSensorError@sum+1,fsr2h
  9401  002656  50DF               	movf	indf2,w,c
  9402                           
  9403                           ; Switch size 1, requested type "space"
  9404                           ; Number of cases is 9, Range of values is 1 to 24
  9405                           ; switch strategies available:
  9406                           ; Name         Instructions Cycles
  9407                           ; simple_byte           28    15 (average)
  9408                           ;	Chosen strategy is simple_byte
  9409  002658  0A01               	xorlw	1	; case 1
  9410  00265A  B4D8               	btfsc	status,2,c
  9411  00265C  D7F1               	goto	l4555
  9412  00265E  0A03               	xorlw	3	; case 2
  9413  002660  B4D8               	btfsc	status,2,c
  9414  002662  D7E2               	goto	l4547
  9415  002664  0A01               	xorlw	1	; case 3
  9416  002666  B4D8               	btfsc	status,2,c
  9417  002668  D7E5               	goto	l4551
  9418  00266A  0A07               	xorlw	7	; case 4
  9419  00266C  B4D8               	btfsc	status,2,c
  9420  00266E  D010               	goto	l4563
  9421  002670  0A02               	xorlw	2	; case 6
  9422  002672  B4D8               	btfsc	status,2,c
  9423  002674  D7D3               	goto	l4543
  9424  002676  0A0E               	xorlw	14	; case 8
  9425  002678  B4D8               	btfsc	status,2,c
  9426  00267A  D7C2               	goto	l4531
  9427  00267C  0A04               	xorlw	4	; case 12
  9428  00267E  B4D8               	btfsc	status,2,c
  9429  002680  D7C5               	goto	l4535
  9430  002682  0A1C               	xorlw	28	; case 16
  9431  002684  B4D8               	btfsc	status,2,c
  9432  002686  D7B0               	goto	l4523
  9433  002688  0A08               	xorlw	8	; case 24
  9434  00268A  B4D8               	btfsc	status,2,c
  9435  00268C  D7B3               	goto	l4527
  9436  00268E  D000               	goto	l4563
  9437  002690                     l4563:
  9438                           
  9439                           ;FastBuggy17_Main_Code.c: 409: return(0);
  9440  002690  0E00               	movlw	0
  9441  002692  0100               	movlb	0	; () banked
  9442  002694  6F61               	movwf	(?_CalculateSensorError+1)& (0+255),b
  9443  002696  0E00               	movlw	0
  9444  002698                     L21:
  9445  002698  6F60               	movwf	?_CalculateSensorError& (0+255),b
  9446  00269A  D000               	goto	l360
  9447  00269C                     l360:
  9448                           
  9449                           ; BSR set to: 0
  9450  00269C  0012               	return		;funcret
  9451  00269E                     __end_of_CalculateSensorError:
  9452                           	opt stack 0
  9453                           tblptru	equ	0xFF8
  9454                           tblptrh	equ	0xFF7
  9455                           tblptrl	equ	0xFF6
  9456                           tablat	equ	0xFF5
  9457                           prodh	equ	0xFF4
  9458                           prodl	equ	0xFF3
  9459                           intcon	equ	0xFF2
  9460                           intcon2	equ	0xFF1
  9461                           postinc0	equ	0xFEE
  9462                           wreg	equ	0xFE8
  9463                           indf2	equ	0xFDF
  9464                           postinc2	equ	0xFDE
  9465                           postdec2	equ	0xFDD
  9466                           fsr2h	equ	0xFDA
  9467                           fsr2l	equ	0xFD9
  9468                           status	equ	0xFD8
  9469                           
  9470 ;; *************** function _BusyDistanceAcq *****************
  9471 ;; Defined at:
  9472 ;;		line 45 in file "Ultrasound.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      unsigned char 
  9479 ;; Registers used:
  9480 ;;		wreg, status,2
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    6
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_main
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text73
  9501  0030CE                     __ptext73:
  9502                           	opt stack 0
  9503  0030CE                     _BusyDistanceAcq:
  9504                           	opt stack 24
  9505                           
  9506                           ;Ultrasound.c: 47: return (!echo_acq_done);
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;incstack = 0
  9510  0030CE  5048               	movf	_echo_acq_done,w,c
  9511  0030D0  A4D8               	btfss	status,2,c
  9512  0030D2  D002               	goto	u3920
  9513  0030D4  0E01               	movlw	1
  9514  0030D6  D002               	goto	l36
  9515  0030D8                     u3920:
  9516  0030D8  0E00               	movlw	0
  9517  0030DA  D000               	goto	l36
  9518  0030DC                     l36:
  9519  0030DC  0012               	return		;funcret
  9520  0030DE                     __end_of_BusyDistanceAcq:
  9521                           	opt stack 0
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           intcon2	equ	0xFF1
  9530                           postinc0	equ	0xFEE
  9531                           wreg	equ	0xFE8
  9532                           indf2	equ	0xFDF
  9533                           postinc2	equ	0xFDE
  9534                           postdec2	equ	0xFDD
  9535                           fsr2h	equ	0xFDA
  9536                           fsr2l	equ	0xFD9
  9537                           status	equ	0xFD8
  9538                           
  9539 ;; *************** function _isrLP *****************
  9540 ;; Defined at:
  9541 ;;		line 535 in file "FastBuggy17_Main_Code.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;		None
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;		None
  9546 ;; Return value:  Size  Location     Type
  9547 ;;		None               void
  9548 ;; Registers used:
  9549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;Total ram usage:       17 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:    5
  9562 ;; This function calls:
  9563 ;;		i1_ConvertADC
  9564 ;;		i1_ReadADC
  9565 ;;		i1_SetADCChannel
  9566 ;; This function is called by:
  9567 ;;		Interrupt level 1
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           	psect	intcodelo
  9572  000018                     __pintcodelo:
  9573                           	opt stack 0
  9574  000018                     _isrLP:
  9575                           	opt stack 19
  9576                           
  9577                           ;incstack = 0
  9578  000018  CFD8 F005          	movff	status,??_isrLP
  9579  00001C  CFE8 F006          	movff	wreg,??_isrLP+1
  9580  000020  CFE0 F007          	movff	bsr,??_isrLP+2
  9581  000024  CFFA F008          	movff	pclath,??_isrLP+3
  9582  000028  CFFB F009          	movff	pclatu,??_isrLP+4
  9583  00002C  CFE9 F00A          	movff	fsr0l,??_isrLP+5
  9584  000030  CFEA F00B          	movff	fsr0h,??_isrLP+6
  9585  000034  CFE1 F00C          	movff	fsr1l,??_isrLP+7
  9586  000038  CFE2 F00D          	movff	fsr1h,??_isrLP+8
  9587  00003C  CFD9 F00E          	movff	fsr2l,??_isrLP+9
  9588  000040  CFDA F00F          	movff	fsr2h,??_isrLP+10
  9589  000044  CFF3 F010          	movff	prodl,??_isrLP+11
  9590  000048  CFF4 F011          	movff	prodh,??_isrLP+12
  9591  00004C  CFF6 F012          	movff	tblptrl,??_isrLP+13
  9592  000050  CFF7 F013          	movff	tblptrh,??_isrLP+14
  9593  000054  CFF8 F014          	movff	tblptru,??_isrLP+15
  9594  000058  CFF5 F015          	movff	tablat,??_isrLP+16
  9595                           
  9596                           ;FastBuggy17_Main_Code.c: 550: if (PIR1bits.ADIF == 1) {
  9597  00005C  AC9E               	btfss	3998,6,c	;volatile
  9598  00005E  D01D               	goto	i1l412
  9599                           
  9600                           ;FastBuggy17_Main_Code.c: 551: PIR1bits.ADIF = 0;
  9601  000060  9C9E               	bcf	3998,6,c	;volatile
  9602                           
  9603                           ;FastBuggy17_Main_Code.c: 552: if (sensor_acq_index < 5) {
  9604  000062  0E05               	movlw	5
  9605  000064  6041               	cpfslt	_sensor_acq_index,c	;volatile
  9606  000066  D015               	goto	i1l3599
  9607                           
  9608                           ;FastBuggy17_Main_Code.c: 553: *(sensor_readings_raw + sensor_acq_index) = ReadADC();
  9609  000068  EC6F  F018         	call	i1_ReadADC	;wreg free
  9610  00006C  5041               	movf	_sensor_acq_index,w,c	;volatile
  9611  00006E  0D02               	mullw	2
  9612  000070  0E28               	movlw	low _sensor_readings_raw
  9613  000072  24F3               	addwf	prodl,w,c
  9614  000074  6ED9               	movwf	fsr2l,c
  9615  000076  0E00               	movlw	high _sensor_readings_raw
  9616  000078  20F4               	addwfc	prodh,w,c
  9617  00007A  6EDA               	movwf	fsr2h,c
  9618  00007C  C001  FFDE         	movff	?i1_ReadADC,postinc2
  9619  000080  C002  FFDD         	movff	?i1_ReadADC+1,postdec2
  9620                           
  9621                           ;FastBuggy17_Main_Code.c: 554: sensor_acq_index++;
  9622  000084  2A41               	incf	_sensor_acq_index,f,c	;volatile
  9623                           
  9624                           ;FastBuggy17_Main_Code.c: 555: SetADCChannel(sensor_acq_index);
  9625  000086  5041               	movf	_sensor_acq_index,w,c	;volatile
  9626  000088  EC17  F012         	call	i1_SetADCChannel
  9627                           
  9628                           ;FastBuggy17_Main_Code.c: 556: ConvertADC();
  9629  00008C  ECBF  F018         	call	i1_ConvertADC	;wreg free
  9630                           
  9631                           ;FastBuggy17_Main_Code.c: 557: } else {
  9632  000090  D004               	goto	i1l412
  9633  000092                     i1l3599:
  9634                           
  9635                           ;FastBuggy17_Main_Code.c: 558: sensor_acq_done = 1;
  9636  000092  0E01               	movlw	1
  9637  000094  6E40               	movwf	_sensor_acq_done,c	;volatile
  9638                           
  9639                           ;FastBuggy17_Main_Code.c: 559: PIE1bits.ADIE = 0;
  9640  000096  9C9D               	bcf	3997,6,c	;volatile
  9641  000098  D000               	goto	i1l412
  9642  00009A                     i1l412:
  9643  00009A  C015  FFF5         	movff	??_isrLP+16,tablat
  9644  00009E  C014  FFF8         	movff	??_isrLP+15,tblptru
  9645  0000A2  C013  FFF7         	movff	??_isrLP+14,tblptrh
  9646  0000A6  C012  FFF6         	movff	??_isrLP+13,tblptrl
  9647  0000AA  C011  FFF4         	movff	??_isrLP+12,prodh
  9648  0000AE  C010  FFF3         	movff	??_isrLP+11,prodl
  9649  0000B2  C00F  FFDA         	movff	??_isrLP+10,fsr2h
  9650  0000B6  C00E  FFD9         	movff	??_isrLP+9,fsr2l
  9651  0000BA  C00D  FFE2         	movff	??_isrLP+8,fsr1h
  9652  0000BE  C00C  FFE1         	movff	??_isrLP+7,fsr1l
  9653  0000C2  C00B  FFEA         	movff	??_isrLP+6,fsr0h
  9654  0000C6  C00A  FFE9         	movff	??_isrLP+5,fsr0l
  9655  0000CA  C009  FFFB         	movff	??_isrLP+4,pclatu
  9656  0000CE  C008  FFFA         	movff	??_isrLP+3,pclath
  9657  0000D2  C007  FFE0         	movff	??_isrLP+2,bsr
  9658  0000D6  C006  FFE8         	movff	??_isrLP+1,wreg
  9659  0000DA  C005  FFD8         	movff	??_isrLP,status
  9660  0000DE  0010               	retfie	
  9661  0000E0                     __end_of_isrLP:
  9662                           	opt stack 0
  9663                           pclatu	equ	0xFFB
  9664                           pclath	equ	0xFFA
  9665                           tblptru	equ	0xFF8
  9666                           tblptrh	equ	0xFF7
  9667                           tblptrl	equ	0xFF6
  9668                           tablat	equ	0xFF5
  9669                           prodh	equ	0xFF4
  9670                           prodl	equ	0xFF3
  9671                           intcon	equ	0xFF2
  9672                           intcon2	equ	0xFF1
  9673                           postinc0	equ	0xFEE
  9674                           fsr0h	equ	0xFEA
  9675                           fsr0l	equ	0xFE9
  9676                           wreg	equ	0xFE8
  9677                           fsr1h	equ	0xFE2
  9678                           fsr1l	equ	0xFE1
  9679                           bsr	equ	0xFE0
  9680                           indf2	equ	0xFDF
  9681                           postinc2	equ	0xFDE
  9682                           postdec2	equ	0xFDD
  9683                           fsr2h	equ	0xFDA
  9684                           fsr2l	equ	0xFD9
  9685                           status	equ	0xFD8
  9686                           
  9687 ;; *************** function i1_SetADCChannel *****************
  9688 ;; Defined at:
  9689 ;;		line 249 in file "FastBuggy17_Main_Code.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  channel         1    wreg     unsigned char 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  channel         1    2[COMRAM] unsigned char 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;		None               void
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0, cstack
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;Total ram usage:        1 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:    4
  9710 ;; This function calls:
  9711 ;;		i1_SetChanADC
  9712 ;; This function is called by:
  9713 ;;		_isrLP
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text75
  9718  00242E                     __ptext75:
  9719                           	opt stack 0
  9720  00242E                     i1_SetADCChannel:
  9721                           	opt stack 19
  9722                           
  9723                           ;incstack = 0
  9724                           ;i1SetADCChannel@channel stored from wreg
  9725  00242E  6E03               	movwf	i1SetADCChannel@channel,c
  9726                           
  9727                           ;FastBuggy17_Main_Code.c: 251: switch (channel) {
  9728  002430  D040               	goto	i1l3559
  9729  002432                     i1l3525:
  9730                           
  9731                           ;FastBuggy17_Main_Code.c: 253: SetChanADC(0b10000111);
  9732  002432  0E87               	movlw	135
  9733  002434  ECF9  F017         	call	i1_SetChanADC
  9734                           
  9735                           ;FastBuggy17_Main_Code.c: 254: break;
  9736  002438  D06E               	goto	i1l325
  9737  00243A                     i1l3527:
  9738                           
  9739                           ;FastBuggy17_Main_Code.c: 256: SetChanADC(0b10001111);
  9740  00243A  0E8F               	movlw	143
  9741  00243C  ECF9  F017         	call	i1_SetChanADC
  9742                           
  9743                           ;FastBuggy17_Main_Code.c: 257: break;
  9744  002440  D06A               	goto	i1l325
  9745  002442                     i1l3529:
  9746                           
  9747                           ;FastBuggy17_Main_Code.c: 259: SetChanADC(0b10010111);
  9748  002442  0E97               	movlw	151
  9749  002444  ECF9  F017         	call	i1_SetChanADC
  9750                           
  9751                           ;FastBuggy17_Main_Code.c: 260: break;
  9752  002448  D066               	goto	i1l325
  9753  00244A                     i1l3531:
  9754                           
  9755                           ;FastBuggy17_Main_Code.c: 262: SetChanADC(0b10011111);
  9756  00244A  0E9F               	movlw	159
  9757  00244C  ECF9  F017         	call	i1_SetChanADC
  9758                           
  9759                           ;FastBuggy17_Main_Code.c: 263: break;
  9760  002450  D062               	goto	i1l325
  9761  002452                     i1l3533:
  9762                           
  9763                           ;FastBuggy17_Main_Code.c: 265: SetChanADC(0b10100111);
  9764  002452  0EA7               	movlw	167
  9765  002454  ECF9  F017         	call	i1_SetChanADC
  9766                           
  9767                           ;FastBuggy17_Main_Code.c: 266: break;
  9768  002458  D05E               	goto	i1l325
  9769  00245A                     i1l3535:
  9770                           
  9771                           ;FastBuggy17_Main_Code.c: 268: SetChanADC(0b10101111);
  9772  00245A  0EAF               	movlw	175
  9773  00245C  ECF9  F017         	call	i1_SetChanADC
  9774                           
  9775                           ;FastBuggy17_Main_Code.c: 269: break;
  9776  002460  D05A               	goto	i1l325
  9777  002462                     i1l3537:
  9778                           
  9779                           ;FastBuggy17_Main_Code.c: 271: SetChanADC(0b10110111);
  9780  002462  0EB7               	movlw	183
  9781  002464  ECF9  F017         	call	i1_SetChanADC
  9782                           
  9783                           ;FastBuggy17_Main_Code.c: 272: break;
  9784  002468  D056               	goto	i1l325
  9785  00246A                     i1l3539:
  9786                           
  9787                           ;FastBuggy17_Main_Code.c: 274: SetChanADC(0b10111111);
  9788  00246A  0EBF               	movlw	191
  9789  00246C  ECF9  F017         	call	i1_SetChanADC
  9790                           
  9791                           ;FastBuggy17_Main_Code.c: 275: break;
  9792  002470  D052               	goto	i1l325
  9793  002472                     i1l3541:
  9794                           
  9795                           ;FastBuggy17_Main_Code.c: 277: SetChanADC(0b11000111);
  9796  002472  0EC7               	movlw	199
  9797  002474  ECF9  F017         	call	i1_SetChanADC
  9798                           
  9799                           ;FastBuggy17_Main_Code.c: 278: break;
  9800  002478  D04E               	goto	i1l325
  9801  00247A                     i1l3543:
  9802                           
  9803                           ;FastBuggy17_Main_Code.c: 280: SetChanADC(0b11001111);
  9804  00247A  0ECF               	movlw	207
  9805  00247C  ECF9  F017         	call	i1_SetChanADC
  9806                           
  9807                           ;FastBuggy17_Main_Code.c: 281: break;
  9808  002480  D04A               	goto	i1l325
  9809  002482                     i1l3545:
  9810                           
  9811                           ;FastBuggy17_Main_Code.c: 283: SetChanADC(0b11010111);
  9812  002482  0ED7               	movlw	215
  9813  002484  ECF9  F017         	call	i1_SetChanADC
  9814                           
  9815                           ;FastBuggy17_Main_Code.c: 284: break;
  9816  002488  D046               	goto	i1l325
  9817  00248A                     i1l3547:
  9818                           
  9819                           ;FastBuggy17_Main_Code.c: 286: SetChanADC(0b11011111);
  9820  00248A  0EDF               	movlw	223
  9821  00248C  ECF9  F017         	call	i1_SetChanADC
  9822                           
  9823                           ;FastBuggy17_Main_Code.c: 287: break;
  9824  002490  D042               	goto	i1l325
  9825  002492                     i1l3549:
  9826                           
  9827                           ;FastBuggy17_Main_Code.c: 289: SetChanADC(0b11100111);
  9828  002492  0EE7               	movlw	231
  9829  002494  ECF9  F017         	call	i1_SetChanADC
  9830                           
  9831                           ;FastBuggy17_Main_Code.c: 290: break;
  9832  002498  D03E               	goto	i1l325
  9833  00249A                     i1l3551:
  9834                           
  9835                           ;FastBuggy17_Main_Code.c: 292: SetChanADC(0b11101111);
  9836  00249A  0EEF               	movlw	239
  9837  00249C  ECF9  F017         	call	i1_SetChanADC
  9838                           
  9839                           ;FastBuggy17_Main_Code.c: 293: break;
  9840  0024A0  D03A               	goto	i1l325
  9841  0024A2                     i1l3553:
  9842                           
  9843                           ;FastBuggy17_Main_Code.c: 295: SetChanADC(0b11110111);
  9844  0024A2  0EF7               	movlw	247
  9845  0024A4  ECF9  F017         	call	i1_SetChanADC
  9846                           
  9847                           ;FastBuggy17_Main_Code.c: 296: break;
  9848  0024A8  D036               	goto	i1l325
  9849  0024AA                     i1l3555:
  9850                           
  9851                           ;FastBuggy17_Main_Code.c: 298: SetChanADC(0b11111111);
  9852  0024AA  0EFF               	movlw	255
  9853  0024AC  ECF9  F017         	call	i1_SetChanADC
  9854                           
  9855                           ;FastBuggy17_Main_Code.c: 302: }
  9856                           
  9857                           ;FastBuggy17_Main_Code.c: 301: break;
  9858                           
  9859                           ;FastBuggy17_Main_Code.c: 300: default:
  9860                           
  9861                           ;FastBuggy17_Main_Code.c: 299: break;
  9862  0024B0  D032               	goto	i1l325
  9863  0024B2                     i1l3559:
  9864  0024B2  5003               	movf	i1SetADCChannel@channel,w,c
  9865                           
  9866                           ; Switch size 1, requested type "space"
  9867                           ; Number of cases is 16, Range of values is 0 to 15
  9868                           ; switch strategies available:
  9869                           ; Name         Instructions Cycles
  9870                           ; simple_byte           49    25 (average)
  9871                           ;	Chosen strategy is simple_byte
  9872  0024B4  0A00               	xorlw	0	; case 0
  9873  0024B6  B4D8               	btfsc	status,2,c
  9874  0024B8  D7BC               	goto	i1l3525
  9875  0024BA  0A01               	xorlw	1	; case 1
  9876  0024BC  B4D8               	btfsc	status,2,c
  9877  0024BE  D7BD               	goto	i1l3527
  9878  0024C0  0A03               	xorlw	3	; case 2
  9879  0024C2  B4D8               	btfsc	status,2,c
  9880  0024C4  D7BE               	goto	i1l3529
  9881  0024C6  0A01               	xorlw	1	; case 3
  9882  0024C8  B4D8               	btfsc	status,2,c
  9883  0024CA  D7BF               	goto	i1l3531
  9884  0024CC  0A07               	xorlw	7	; case 4
  9885  0024CE  B4D8               	btfsc	status,2,c
  9886  0024D0  D7C0               	goto	i1l3533
  9887  0024D2  0A01               	xorlw	1	; case 5
  9888  0024D4  B4D8               	btfsc	status,2,c
  9889  0024D6  D7C1               	goto	i1l3535
  9890  0024D8  0A03               	xorlw	3	; case 6
  9891  0024DA  B4D8               	btfsc	status,2,c
  9892  0024DC  D7C2               	goto	i1l3537
  9893  0024DE  0A01               	xorlw	1	; case 7
  9894  0024E0  B4D8               	btfsc	status,2,c
  9895  0024E2  D7C3               	goto	i1l3539
  9896  0024E4  0A0F               	xorlw	15	; case 8
  9897  0024E6  B4D8               	btfsc	status,2,c
  9898  0024E8  D7C4               	goto	i1l3541
  9899  0024EA  0A01               	xorlw	1	; case 9
  9900  0024EC  B4D8               	btfsc	status,2,c
  9901  0024EE  D7C5               	goto	i1l3543
  9902  0024F0  0A03               	xorlw	3	; case 10
  9903  0024F2  B4D8               	btfsc	status,2,c
  9904  0024F4  D7C6               	goto	i1l3545
  9905  0024F6  0A01               	xorlw	1	; case 11
  9906  0024F8  B4D8               	btfsc	status,2,c
  9907  0024FA  D7C7               	goto	i1l3547
  9908  0024FC  0A07               	xorlw	7	; case 12
  9909  0024FE  B4D8               	btfsc	status,2,c
  9910  002500  D7C8               	goto	i1l3549
  9911  002502  0A01               	xorlw	1	; case 13
  9912  002504  B4D8               	btfsc	status,2,c
  9913  002506  D7C9               	goto	i1l3551
  9914  002508  0A03               	xorlw	3	; case 14
  9915  00250A  B4D8               	btfsc	status,2,c
  9916  00250C  D7CA               	goto	i1l3553
  9917  00250E  0A01               	xorlw	1	; case 15
  9918  002510  B4D8               	btfsc	status,2,c
  9919  002512  D7CB               	goto	i1l3555
  9920  002514  D000               	goto	i1l325
  9921  002516                     i1l325:
  9922  002516  0012               	return		;funcret
  9923  002518                     __end_ofi1_SetADCChannel:
  9924                           	opt stack 0
  9925                           pclatu	equ	0xFFB
  9926                           pclath	equ	0xFFA
  9927                           tblptru	equ	0xFF8
  9928                           tblptrh	equ	0xFF7
  9929                           tblptrl	equ	0xFF6
  9930                           tablat	equ	0xFF5
  9931                           prodh	equ	0xFF4
  9932                           prodl	equ	0xFF3
  9933                           intcon	equ	0xFF2
  9934                           intcon2	equ	0xFF1
  9935                           postinc0	equ	0xFEE
  9936                           fsr0h	equ	0xFEA
  9937                           fsr0l	equ	0xFE9
  9938                           wreg	equ	0xFE8
  9939                           fsr1h	equ	0xFE2
  9940                           fsr1l	equ	0xFE1
  9941                           bsr	equ	0xFE0
  9942                           indf2	equ	0xFDF
  9943                           postinc2	equ	0xFDE
  9944                           postdec2	equ	0xFDD
  9945                           fsr2h	equ	0xFDA
  9946                           fsr2l	equ	0xFD9
  9947                           status	equ	0xFD8
  9948                           
  9949 ;; *************** function i1_SetChanADC *****************
  9950 ;; Defined at:
  9951 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  channel         1    wreg     unsigned char 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  channel         1    1[COMRAM] unsigned char 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;		None               void
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, status,0
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9969 ;;Total ram usage:        2 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:    3
  9972 ;; This function calls:
  9973 ;;		Nothing
  9974 ;; This function is called by:
  9975 ;;		i1_SetADCChannel
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text76
  9980  002FF2                     __ptext76:
  9981                           	opt stack 0
  9982  002FF2                     i1_SetChanADC:
  9983                           	opt stack 19
  9984                           
  9985                           ;incstack = 0
  9986                           ;i1SetChanADC@channel stored from wreg
  9987  002FF2  6E02               	movwf	i1SetChanADC@channel,c
  9988  002FF4  CFC2 F001          	movff	4034,??i1_SetChanADC	;volatile
  9989  002FF8  0EC3               	movlw	195
  9990  002FFA  1601               	andwf	??i1_SetChanADC,f,c
  9991  002FFC  90D8               	bcf	status,0,c
  9992  002FFE  3002               	rrcf	i1SetChanADC@channel,w,c
  9993  003000  0B3C               	andlw	60
  9994  003002  1001               	iorwf	??i1_SetChanADC,w,c
  9995  003004  6EC2               	movwf	4034,c	;volatile
  9996  003006  0012               	return		;funcret
  9997  003008                     __end_ofi1_SetChanADC:
  9998                           	opt stack 0
  9999                           pclatu	equ	0xFFB
 10000                           pclath	equ	0xFFA
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           intcon	equ	0xFF2
 10008                           intcon2	equ	0xFF1
 10009                           postinc0	equ	0xFEE
 10010                           fsr0h	equ	0xFEA
 10011                           fsr0l	equ	0xFE9
 10012                           wreg	equ	0xFE8
 10013                           fsr1h	equ	0xFE2
 10014                           fsr1l	equ	0xFE1
 10015                           bsr	equ	0xFE0
 10016                           indf2	equ	0xFDF
 10017                           postinc2	equ	0xFDE
 10018                           postdec2	equ	0xFDD
 10019                           fsr2h	equ	0xFDA
 10020                           fsr2l	equ	0xFD9
 10021                           status	equ	0xFD8
 10022                           
 10023 ;; *************** function i1_ReadADC *****************
 10024 ;; Defined at:
 10025 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;		None
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  2    0[COMRAM] int 
 10032 ;; Registers used:
 10033 ;;		wreg, status,2
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;Total ram usage:        4 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:    3
 10046 ;; This function calls:
 10047 ;;		Nothing
 10048 ;; This function is called by:
 10049 ;;		_isrLP
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text77
 10054  0030DE                     __ptext77:
 10055                           	opt stack 0
 10056  0030DE                     i1_ReadADC:
 10057                           	opt stack 20
 10058                           
 10059                           ;incstack = 0
 10060  0030DE  50C4               	movf	4036,w,c	;volatile
 10061  0030E0  6E03               	movwf	??i1_ReadADC& (0+255),c
 10062  0030E2  50C3               	movf	4035,w,c	;volatile
 10063  0030E4  6E01               	movwf	?i1_ReadADC,c
 10064  0030E6  C003  F002         	movff	??i1_ReadADC,?i1_ReadADC+1
 10065  0030EA  D000               	goto	i1l484
 10066  0030EC                     i1l484:
 10067  0030EC  0012               	return		;funcret
 10068  0030EE                     __end_ofi1_ReadADC:
 10069                           	opt stack 0
 10070                           pclatu	equ	0xFFB
 10071                           pclath	equ	0xFFA
 10072                           tblptru	equ	0xFF8
 10073                           tblptrh	equ	0xFF7
 10074                           tblptrl	equ	0xFF6
 10075                           tablat	equ	0xFF5
 10076                           prodh	equ	0xFF4
 10077                           prodl	equ	0xFF3
 10078                           intcon	equ	0xFF2
 10079                           intcon2	equ	0xFF1
 10080                           postinc0	equ	0xFEE
 10081                           fsr0h	equ	0xFEA
 10082                           fsr0l	equ	0xFE9
 10083                           wreg	equ	0xFE8
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           bsr	equ	0xFE0
 10087                           indf2	equ	0xFDF
 10088                           postinc2	equ	0xFDE
 10089                           postdec2	equ	0xFDD
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function i1_ConvertADC *****************
 10095 ;; Defined at:
 10096 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;		None               void
 10103 ;; Registers used:
 10104 ;;		None
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    3
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_isrLP
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text78
 10125  00317E                     __ptext78:
 10126                           	opt stack 0
 10127  00317E                     i1_ConvertADC:
 10128                           	opt stack 20
 10129                           
 10130                           ;incstack = 0
 10131  00317E  82C2               	bsf	4034,1,c	;volatile
 10132  003180  0012               	return		;funcret
 10133  003182                     __end_ofi1_ConvertADC:
 10134                           	opt stack 0
 10135                           pclatu	equ	0xFFB
 10136                           pclath	equ	0xFFA
 10137                           tblptru	equ	0xFF8
 10138                           tblptrh	equ	0xFF7
 10139                           tblptrl	equ	0xFF6
 10140                           tablat	equ	0xFF5
 10141                           prodh	equ	0xFF4
 10142                           prodl	equ	0xFF3
 10143                           intcon	equ	0xFF2
 10144                           intcon2	equ	0xFF1
 10145                           postinc0	equ	0xFEE
 10146                           fsr0h	equ	0xFEA
 10147                           fsr0l	equ	0xFE9
 10148                           wreg	equ	0xFE8
 10149                           fsr1h	equ	0xFE2
 10150                           fsr1l	equ	0xFE1
 10151                           bsr	equ	0xFE0
 10152                           indf2	equ	0xFDF
 10153                           postinc2	equ	0xFDE
 10154                           postdec2	equ	0xFDD
 10155                           fsr2h	equ	0xFDA
 10156                           fsr2l	equ	0xFD9
 10157                           status	equ	0xFD8
 10158                           
 10159 ;; *************** function _isrHP *****************
 10160 ;; Defined at:
 10161 ;;		line 514 in file "FastBuggy17_Main_Code.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;		None               void
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;Total ram usage:       14 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    2
 10182 ;; This function calls:
 10183 ;;		_MillisecondTimerISR
 10184 ;;		_UltrasoundISR
 10185 ;; This function is called by:
 10186 ;;		Interrupt level 2
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	intcode
 10191  000008                     __pintcode:
 10192                           	opt stack 0
 10193  000008                     _isrHP:
 10194                           	opt stack 19
 10195                           
 10196                           ;incstack = 0
 10197  000008  CFFA F01A          	movff	pclath,??_isrHP
 10198  00000C  CFFB F01B          	movff	pclatu,??_isrHP+1
 10199  000010  CFE9 F01C          	movff	fsr0l,??_isrHP+2
 10200  000014  ED8A  F014         	call	int_func,f	;refresh shadow registers
 10201                           pclatu	equ	0xFFB
 10202                           pclath	equ	0xFFA
 10203                           tblptru	equ	0xFF8
 10204                           tblptrh	equ	0xFF7
 10205                           tblptrl	equ	0xFF6
 10206                           tablat	equ	0xFF5
 10207                           prodh	equ	0xFF4
 10208                           prodl	equ	0xFF3
 10209                           intcon	equ	0xFF2
 10210                           intcon2	equ	0xFF1
 10211                           postinc0	equ	0xFEE
 10212                           fsr0h	equ	0xFEA
 10213                           fsr0l	equ	0xFE9
 10214                           wreg	equ	0xFE8
 10215                           fsr1h	equ	0xFE2
 10216                           fsr1l	equ	0xFE1
 10217                           bsr	equ	0xFE0
 10218                           indf2	equ	0xFDF
 10219                           postinc2	equ	0xFDE
 10220                           postdec2	equ	0xFDD
 10221                           fsr2h	equ	0xFDA
 10222                           fsr2l	equ	0xFD9
 10223                           status	equ	0xFD8
 10224                           
 10225                           	psect	intcode_body
 10226  002914                     __pintcode_body:
 10227                           	opt stack 19
 10228  002914                     int_func:
 10229                           	opt stack 19
 10230  002914  0006               	pop		; remove dummy address from shadow register refresh
 10231  002916  CFEA F01D          	movff	fsr0h,??_isrHP+3
 10232  00291A  CFE1 F01E          	movff	fsr1l,??_isrHP+4
 10233  00291E  CFE2 F01F          	movff	fsr1h,??_isrHP+5
 10234  002922  CFD9 F020          	movff	fsr2l,??_isrHP+6
 10235  002926  CFDA F021          	movff	fsr2h,??_isrHP+7
 10236  00292A  CFF3 F022          	movff	prodl,??_isrHP+8
 10237  00292E  CFF4 F023          	movff	prodh,??_isrHP+9
 10238  002932  CFF6 F024          	movff	tblptrl,??_isrHP+10
 10239  002936  CFF7 F025          	movff	tblptrh,??_isrHP+11
 10240  00293A  CFF8 F026          	movff	tblptru,??_isrHP+12
 10241  00293E  CFF5 F027          	movff	tablat,??_isrHP+13
 10242                           
 10243                           ;FastBuggy17_Main_Code.c: 517: if (INTCONbits.TMR0IF == 1) {
 10244  002942  A4F2               	btfss	intcon,2,c	;volatile
 10245  002944  D004               	goto	i2l4627
 10246                           
 10247                           ;FastBuggy17_Main_Code.c: 518: INTCONbits.TMR0IF = 0;
 10248  002946  94F2               	bcf	intcon,2,c	;volatile
 10249                           
 10250                           ;FastBuggy17_Main_Code.c: 520: MillisecondTimerISR();
 10251  002948  EC45  F018         	call	_MillisecondTimerISR	;wreg free
 10252  00294C  D000               	goto	i2l4627
 10253  00294E                     i2l4627:
 10254                           
 10255                           ;FastBuggy17_Main_Code.c: 524: }
 10256                           ;FastBuggy17_Main_Code.c: 527: if (INTCONbits.RBIF == 1) {
 10257  00294E  A0F2               	btfss	intcon,0,c	;volatile
 10258  002950  D003               	goto	i2l406
 10259                           
 10260                           ;FastBuggy17_Main_Code.c: 528: UltrasoundISR();
 10261  002952  ECC6  F016         	call	_UltrasoundISR	;wreg free
 10262  002956  D000               	goto	i2l406
 10263  002958                     i2l406:
 10264  002958  C027  FFF5         	movff	??_isrHP+13,tablat
 10265  00295C  C026  FFF8         	movff	??_isrHP+12,tblptru
 10266  002960  C025  FFF7         	movff	??_isrHP+11,tblptrh
 10267  002964  C024  FFF6         	movff	??_isrHP+10,tblptrl
 10268  002968  C023  FFF4         	movff	??_isrHP+9,prodh
 10269  00296C  C022  FFF3         	movff	??_isrHP+8,prodl
 10270  002970  C021  FFDA         	movff	??_isrHP+7,fsr2h
 10271  002974  C020  FFD9         	movff	??_isrHP+6,fsr2l
 10272  002978  C01F  FFE2         	movff	??_isrHP+5,fsr1h
 10273  00297C  C01E  FFE1         	movff	??_isrHP+4,fsr1l
 10274  002980  C01D  FFEA         	movff	??_isrHP+3,fsr0h
 10275  002984  C01C  FFE9         	movff	??_isrHP+2,fsr0l
 10276  002988  C01B  FFFB         	movff	??_isrHP+1,pclatu
 10277  00298C  C01A  FFFA         	movff	??_isrHP,pclath
 10278  002990  0011               	retfie		f
 10279  002992                     __end_of_isrHP:
 10280                           	opt stack 0
 10281                           pclatu	equ	0xFFB
 10282                           pclath	equ	0xFFA
 10283                           tblptru	equ	0xFF8
 10284                           tblptrh	equ	0xFF7
 10285                           tblptrl	equ	0xFF6
 10286                           tablat	equ	0xFF5
 10287                           prodh	equ	0xFF4
 10288                           prodl	equ	0xFF3
 10289                           intcon	equ	0xFF2
 10290                           intcon2	equ	0xFF1
 10291                           postinc0	equ	0xFEE
 10292                           fsr0h	equ	0xFEA
 10293                           fsr0l	equ	0xFE9
 10294                           wreg	equ	0xFE8
 10295                           fsr1h	equ	0xFE2
 10296                           fsr1l	equ	0xFE1
 10297                           bsr	equ	0xFE0
 10298                           indf2	equ	0xFDF
 10299                           postinc2	equ	0xFDE
 10300                           postdec2	equ	0xFDD
 10301                           fsr2h	equ	0xFDA
 10302                           fsr2l	equ	0xFD9
 10303                           status	equ	0xFD8
 10304                           
 10305 ;; *************** function _UltrasoundISR *****************
 10306 ;; Defined at:
 10307 ;;		line 18 in file "Ultrasound.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;		None               void
 10314 ;; Registers used:
 10315 ;;		wreg, status,2, cstack
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;Total ram usage:        0 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    1
 10328 ;; This function calls:
 10329 ;;		_ReadTimer1
 10330 ;;		i2_WriteTimer1
 10331 ;; This function is called by:
 10332 ;;		_isrHP
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text80
 10337  002D8C                     __ptext80:
 10338                           	opt stack 0
 10339  002D8C                     _UltrasoundISR:
 10340                           	opt stack 19
 10341                           
 10342                           ;Ultrasound.c: 19: INTCONbits.RBIE = 0;
 10343                           
 10344                           ;incstack = 0
 10345  002D8C  96F2               	bcf	intcon,3,c	;volatile
 10346                           
 10347                           ;Ultrasound.c: 20: if (PORTBbits.RB4 == 1) {
 10348  002D8E  A881               	btfss	3969,4,c	;volatile
 10349  002D90  D008               	goto	i2l4419
 10350                           
 10351                           ;Ultrasound.c: 21: T1CONbits.TMR1ON = 1;
 10352  002D92  80CD               	bsf	4045,0,c	;volatile
 10353                           
 10354                           ;Ultrasound.c: 22: WriteTimer1(0);
 10355  002D94  0E00               	movlw	0
 10356  002D96  6E17               	movwf	i2WriteTimer1@timer1+1,c
 10357  002D98  0E00               	movlw	0
 10358  002D9A  6E16               	movwf	i2WriteTimer1@timer1,c
 10359  002D9C  EC33  F018         	call	i2_WriteTimer1	;wreg free
 10360  002DA0  D000               	goto	i2l4419
 10361  002DA2                     i2l4419:
 10362                           
 10363                           ;Ultrasound.c: 23: }
 10364                           ;Ultrasound.c: 24: if (PORTBbits.RB4 == 0) {
 10365  002DA2  B881               	btfsc	3969,4,c	;volatile
 10366  002DA4  D00A               	goto	i2l4427
 10367                           
 10368                           ;Ultrasound.c: 25: T1CONbits.TMR1ON = 0;
 10369  002DA6  90CD               	bcf	4045,0,c	;volatile
 10370                           
 10371                           ;Ultrasound.c: 26: echo_time = ReadTimer1();
 10372  002DA8  EC3C  F018         	call	_ReadTimer1	;wreg free
 10373  002DAC  C016  F038         	movff	?_ReadTimer1,_echo_time	;volatile
 10374  002DB0  C017  F039         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 10375                           
 10376                           ;Ultrasound.c: 27: echo_acq_done = 1;
 10377  002DB4  0E01               	movlw	1
 10378  002DB6  6E48               	movwf	_echo_acq_done,c
 10379  002DB8  D000               	goto	i2l4427
 10380  002DBA                     i2l4427:
 10381                           
 10382                           ;Ultrasound.c: 28: }
 10383                           ;Ultrasound.c: 29: INTCONbits.RBIE = 1;
 10384  002DBA  86F2               	bsf	intcon,3,c	;volatile
 10385                           
 10386                           ;Ultrasound.c: 30: INTCONbits.RBIF = 0;
 10387  002DBC  90F2               	bcf	intcon,0,c	;volatile
 10388  002DBE  0012               	return		;funcret
 10389  002DC0                     __end_of_UltrasoundISR:
 10390                           	opt stack 0
 10391                           pclatu	equ	0xFFB
 10392                           pclath	equ	0xFFA
 10393                           tblptru	equ	0xFF8
 10394                           tblptrh	equ	0xFF7
 10395                           tblptrl	equ	0xFF6
 10396                           tablat	equ	0xFF5
 10397                           prodh	equ	0xFF4
 10398                           prodl	equ	0xFF3
 10399                           intcon	equ	0xFF2
 10400                           intcon2	equ	0xFF1
 10401                           postinc0	equ	0xFEE
 10402                           fsr0h	equ	0xFEA
 10403                           fsr0l	equ	0xFE9
 10404                           wreg	equ	0xFE8
 10405                           fsr1h	equ	0xFE2
 10406                           fsr1l	equ	0xFE1
 10407                           bsr	equ	0xFE0
 10408                           indf2	equ	0xFDF
 10409                           postinc2	equ	0xFDE
 10410                           postdec2	equ	0xFDD
 10411                           fsr2h	equ	0xFDA
 10412                           fsr2l	equ	0xFD9
 10413                           status	equ	0xFD8
 10414                           
 10415 ;; *************** function i2_WriteTimer1 *****************
 10416 ;; Defined at:
 10417 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;  timer1          2   21[COMRAM] unsigned int 
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  WriteTimer1     2   23[COMRAM] struct Timers
 10422 ;; Return value:  Size  Location     Type
 10423 ;;		None               void
 10424 ;; Registers used:
 10425 ;;		None
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;Total ram usage:        4 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; This function calls:
 10438 ;;		Nothing
 10439 ;; This function is called by:
 10440 ;;		_UltrasoundISR
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text81
 10445  003066                     __ptext81:
 10446                           	opt stack 0
 10447  003066                     i2_WriteTimer1:
 10448                           	opt stack 19
 10449                           
 10450                           ;incstack = 0
 10451  003066  C016  F018         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 10452  00306A  C017  F019         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 10453  00306E  C019  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 10454  003072  C018  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 10455  003076  0012               	return		;funcret
 10456  003078                     __end_ofi2_WriteTimer1:
 10457                           	opt stack 0
 10458                           pclatu	equ	0xFFB
 10459                           pclath	equ	0xFFA
 10460                           tblptru	equ	0xFF8
 10461                           tblptrh	equ	0xFF7
 10462                           tblptrl	equ	0xFF6
 10463                           tablat	equ	0xFF5
 10464                           prodh	equ	0xFF4
 10465                           prodl	equ	0xFF3
 10466                           intcon	equ	0xFF2
 10467                           intcon2	equ	0xFF1
 10468                           postinc0	equ	0xFEE
 10469                           fsr0h	equ	0xFEA
 10470                           fsr0l	equ	0xFE9
 10471                           wreg	equ	0xFE8
 10472                           fsr1h	equ	0xFE2
 10473                           fsr1l	equ	0xFE1
 10474                           bsr	equ	0xFE0
 10475                           indf2	equ	0xFDF
 10476                           postinc2	equ	0xFDE
 10477                           postdec2	equ	0xFDD
 10478                           fsr2h	equ	0xFDA
 10479                           fsr2l	equ	0xFD9
 10480                           status	equ	0xFD8
 10481                           
 10482 ;; *************** function _ReadTimer1 *****************
 10483 ;; Defined at:
 10484 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;		None
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;  timer           2   23[COMRAM] struct Timers
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  2   21[COMRAM] unsigned int 
 10491 ;; Registers used:
 10492 ;;		None
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;Total ram usage:        4 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_UltrasoundISR
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text82
 10512  003078                     __ptext82:
 10513                           	opt stack 0
 10514  003078                     _ReadTimer1:
 10515                           	opt stack 19
 10516                           
 10517                           ;incstack = 0
 10518  003078  CFCE F018          	movff	4046,ReadTimer1@timer	;volatile
 10519  00307C  CFCF F019          	movff	4047,ReadTimer1@timer+1	;volatile
 10520  003080  C018  F016         	movff	ReadTimer1@timer,?_ReadTimer1
 10521  003084  C019  F017         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 10522  003088  0012               	return		;funcret
 10523  00308A                     __end_of_ReadTimer1:
 10524                           	opt stack 0
 10525                           pclatu	equ	0xFFB
 10526                           pclath	equ	0xFFA
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           intcon	equ	0xFF2
 10534                           intcon2	equ	0xFF1
 10535                           postinc0	equ	0xFEE
 10536                           fsr0h	equ	0xFEA
 10537                           fsr0l	equ	0xFE9
 10538                           wreg	equ	0xFE8
 10539                           fsr1h	equ	0xFE2
 10540                           fsr1l	equ	0xFE1
 10541                           bsr	equ	0xFE0
 10542                           indf2	equ	0xFDF
 10543                           postinc2	equ	0xFDE
 10544                           postdec2	equ	0xFDD
 10545                           fsr2h	equ	0xFDA
 10546                           fsr2l	equ	0xFD9
 10547                           status	equ	0xFD8
 10548                           
 10549 ;; *************** function _MillisecondTimerISR *****************
 10550 ;; Defined at:
 10551 ;;		line 22 in file "MillisecondTimer.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;		None               void
 10558 ;; Registers used:
 10559 ;;		wreg, status,2, status,0, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;Total ram usage:        0 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    1
 10572 ;; This function calls:
 10573 ;;		i2_WriteTimer0
 10574 ;; This function is called by:
 10575 ;;		_isrHP
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text83
 10580  00308A                     __ptext83:
 10581                           	opt stack 0
 10582  00308A                     _MillisecondTimerISR:
 10583                           	opt stack 19
 10584                           
 10585                           ;MillisecondTimer.c: 24: WriteTimer0(63036);
 10586                           
 10587                           ;incstack = 0
 10588  00308A  0EF6               	movlw	246
 10589  00308C  6E17               	movwf	i2WriteTimer0@timer0+1,c
 10590  00308E  0E3C               	movlw	60
 10591  003090  6E16               	movwf	i2WriteTimer0@timer0,c
 10592  003092  EC4E  F018         	call	i2_WriteTimer0	;wreg free
 10593                           
 10594                           ;MillisecondTimer.c: 25: millisecond_COUNT++;
 10595  003096  4A3A               	infsnz	_millisecond_COUNT,f,c	;volatile
 10596  003098  2A3B               	incf	_millisecond_COUNT+1,f,c	;volatile
 10597  00309A  0012               	return		;funcret
 10598  00309C                     __end_of_MillisecondTimerISR:
 10599                           	opt stack 0
 10600                           pclatu	equ	0xFFB
 10601                           pclath	equ	0xFFA
 10602                           tblptru	equ	0xFF8
 10603                           tblptrh	equ	0xFF7
 10604                           tblptrl	equ	0xFF6
 10605                           tablat	equ	0xFF5
 10606                           prodh	equ	0xFF4
 10607                           prodl	equ	0xFF3
 10608                           intcon	equ	0xFF2
 10609                           intcon2	equ	0xFF1
 10610                           postinc0	equ	0xFEE
 10611                           fsr0h	equ	0xFEA
 10612                           fsr0l	equ	0xFE9
 10613                           wreg	equ	0xFE8
 10614                           fsr1h	equ	0xFE2
 10615                           fsr1l	equ	0xFE1
 10616                           bsr	equ	0xFE0
 10617                           indf2	equ	0xFDF
 10618                           postinc2	equ	0xFDE
 10619                           postdec2	equ	0xFDD
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function i2_WriteTimer0 *****************
 10625 ;; Defined at:
 10626 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  timer0          2   21[COMRAM] unsigned int 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;  WriteTimer0     2   23[COMRAM] struct Timers
 10631 ;; Return value:  Size  Location     Type
 10632 ;;		None               void
 10633 ;; Registers used:
 10634 ;;		None
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;Total ram usage:        4 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_MillisecondTimerISR
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text84
 10654  00309C                     __ptext84:
 10655                           	opt stack 0
 10656  00309C                     i2_WriteTimer0:
 10657                           	opt stack 19
 10658                           
 10659                           ;incstack = 0
 10660  00309C  C016  F018         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 10661  0030A0  C017  F019         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 10662  0030A4  C019  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 10663  0030A8  C018  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 10664  0030AC  0012               	return		;funcret
 10665  0030AE                     __end_ofi2_WriteTimer0:
 10666                           	opt stack 0
 10667                           pclatu	equ	0xFFB
 10668                           pclath	equ	0xFFA
 10669                           tblptru	equ	0xFF8
 10670                           tblptrh	equ	0xFF7
 10671                           tblptrl	equ	0xFF6
 10672                           tablat	equ	0xFF5
 10673                           prodh	equ	0xFF4
 10674                           prodl	equ	0xFF3
 10675                           intcon	equ	0xFF2
 10676                           intcon2	equ	0xFF1
 10677                           postinc0	equ	0xFEE
 10678                           fsr0h	equ	0xFEA
 10679                           fsr0l	equ	0xFE9
 10680                           wreg	equ	0xFE8
 10681                           fsr1h	equ	0xFE2
 10682                           fsr1l	equ	0xFE1
 10683                           bsr	equ	0xFE0
 10684                           indf2	equ	0xFDF
 10685                           postinc2	equ	0xFDE
 10686                           postdec2	equ	0xFDD
 10687                           fsr2h	equ	0xFDA
 10688                           fsr2l	equ	0xFD9
 10689                           status	equ	0xFD8
 10690                           pclatu	equ	0xFFB
 10691                           pclath	equ	0xFFA
 10692                           tblptru	equ	0xFF8
 10693                           tblptrh	equ	0xFF7
 10694                           tblptrl	equ	0xFF6
 10695                           tablat	equ	0xFF5
 10696                           prodh	equ	0xFF4
 10697                           prodl	equ	0xFF3
 10698                           intcon	equ	0xFF2
 10699                           intcon2	equ	0xFF1
 10700                           postinc0	equ	0xFEE
 10701                           fsr0h	equ	0xFEA
 10702                           fsr0l	equ	0xFE9
 10703                           wreg	equ	0xFE8
 10704                           fsr1h	equ	0xFE2
 10705                           fsr1l	equ	0xFE1
 10706                           bsr	equ	0xFE0
 10707                           indf2	equ	0xFDF
 10708                           postinc2	equ	0xFDE
 10709                           postdec2	equ	0xFDD
 10710                           fsr2h	equ	0xFDA
 10711                           fsr2l	equ	0xFD9
 10712                           status	equ	0xFD8
 10713                           
 10714                           	psect	rparam
 10715  0000                     pclatu	equ	0xFFB
 10716                           pclath	equ	0xFFA
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           intcon2	equ	0xFF1
 10725                           postinc0	equ	0xFEE
 10726                           fsr0h	equ	0xFEA
 10727                           fsr0l	equ	0xFE9
 10728                           wreg	equ	0xFE8
 10729                           fsr1h	equ	0xFE2
 10730                           fsr1l	equ	0xFE1
 10731                           bsr	equ	0xFE0
 10732                           indf2	equ	0xFDF
 10733                           postinc2	equ	0xFDE
 10734                           postdec2	equ	0xFDD
 10735                           fsr2h	equ	0xFDA
 10736                           fsr2l	equ	0xFD9
 10737                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         58
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      72
    BANK0           160     94     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    main@sensor_sum_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK0[1]), 

    DisplaySensorStatuses@status_array	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_status(COMRAM[5]), 

    CalculateSensorError@sum	PTR const unsigned char  size(2) Largest target is 1
		 -> main@sensor_sum(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    _isrLP->i1_ReadADC
    i1_SetADCChannel->i1_SetChanADC

Critical Paths under _main in BANK0

    _main->_CalculateSensorSums
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _ResetMillis->_WriteTimer0
    _GetDistance->_Delay1TCYx
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer2
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC
    _ChangeMode->_Delay10KTCYx
    _CalibrateLine->_DisplaySensorStatuses
    _CalibrateLine->_NormaliseSensorReadings
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _CalculateSensorSums->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   78420
                                             91 BANK0      3     3      0
                    _BusyDistanceAcq
                      _BusySensorAcq
               _CalculateSensorError
            _CalculateSensorStatuses
                _CalculateSensorSums
                      _CalibrateLine
                   _CalibrateSensors
                         _ChangeMode
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                        _GetDistance
                  _GetSensorReadings
            _NormaliseSensorReadings
                     _ReadEchoLength
                         _ReadMillis
                    _ResetEchoLength
                        _ResetMillis
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorL
                  _SetForwardsMotorR
                   _SetReverseMotorL
                   _SetReverseMotorR
                        _SetUnipolar
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorL                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1198
                                              8 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorR                                          2     0      2     520
                                              6 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM4                                            6     4      2     164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     520
                                              6 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis                                          0     0      0     262
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _ResetEchoLength                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                              4 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      62
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     324
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     262
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ChangeMode                                           0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CalibrateSensors                                     3     3      0     192
                                              3 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
 ---------------------------------------------------------------------------------
 (1) _CalibrateLine                                        2     2      0     963
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              5     5      0     161
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (2) _SetADCChannel                                        1     1      0      62
                                              2 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplaySensorStatuses                                5     3      2     356
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CalculateSensorStatuses                              4     4      0     322
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSums                                  5     5      0   71276
                                             86 BANK0      5     5      0
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   64352
                                             69 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   21117
                                             51 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   34751
                                             60 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     354
                                             51 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    8951
                                             52 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     582
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     464
                                             27 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     718
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2529
                                             42 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9459
                                             39 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     622
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3968
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4541
                                             39 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4225
                                             27 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     260
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2900
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2523
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2427
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2291
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2260
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorError                                 2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0      44
                                              4 COMRAM    17    17      0
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isrHP                                              14    14      0     309
                                             25 COMRAM    14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (11) _UltrasoundISR                                       0     0      0     178
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (12) i2_WriteTimer1                                       4     2      2     131
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _ReadTimer1                                          4     2      2      47
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (12) i2_WriteTimer0                                       4     2      2     131
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorError
   _CalculateSensorStatuses
   _CalculateSensorSums
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _CalibrateLine
     _BusyADC
     _BusySensorAcq
     _CalculateSensorStatuses
     _ConvertADC
     _DisplaySensorStatuses
     _GetSensorReadings
       _ConvertADC
       _SetADCChannel
         _SetChanADC
     _NormaliseSensorReadings
     _ReadADC
     _SetADCChannel
       _SetChanADC
   _CalibrateSensors
     _BusySensorAcq
     _GetSensorReadings
       _ConvertADC
       _SetADCChannel
         _SetChanADC
   _ChangeMode
     _Delay10KTCYx
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer2
   _ConfigureUltrasound
     _WriteTimer1
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _NormaliseSensorReadings
   _ReadEchoLength
   _ReadMillis
   _ResetEchoLength
   _ResetMillis
     _WriteTimer0
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorL
   _SetForwardsMotorR
   _SetReverseMotorL
   _SetReverseMotorR
   _SetUnipolar
   ___wmul

 _isrLP (ROOT)
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      7E       5       78.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      48       1       75.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      32        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 24 16:27:19 2017

                     ___altoft@exp 0092                      ___altoft@sign 0093  
                               l36 30DC                                 bsr 000FE0  
              ___wmul@multiplicand 0062                        __CFG_BORV$0 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                __end_of_GetDistance 3042  
                     ___ftadd@exp1 0086                       ___ftadd@exp2 0085  
                     __CFG_CP6$OFF 000000                       __CFG_CP7$OFF 000000  
                     ___ftadd@sign 0084                                l107 2B5E  
                              l331 30CC                                l325 233E  
                              l350 242C                                l430 12B2  
                              l360 269C                                l336 2A82  
                              l506 2EDA                                l610 2F04  
                              l355 27F0                                l508 2EE4  
                              l532 2EB2                                l454 3132  
                              l375 2BFE                                l609 2F02  
                              l554 2E94                                l555 2E96  
                              l484 302E                                l476 2A0A  
                              l580 2D86                                l645 2D56  
                              l389 2AF4                                l581 2D88  
                              l742 2892                                l578 2D6E  
                              l870 2F42                                l863 2C96  
                              l875 30B2                                l877 30BC  
                              l967 1F48                                l978 1F10  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                              _PR4 000F77                       __CFG_CPD$OFF 000000  
           __size_of_SetDCMotorPID 006A               __size_of_WriteTimer0 0012  
             __size_of_WriteTimer1 0012                                _exp 1558  
                              _log 1BB8                                _pow 1780  
                    _SetADCChannel 2252                                prod 000FF3  
                              wreg 000FE8        __end_of_CalculateSensorSums 27F2  
                     __CFG_MODE$MC 000000          ??_CalculateSensorStatuses 0060  
                  ReadTimer1@timer 0018                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 0071                         _Delay1TCYx 30AE  
                     ___ftdiv@sign 0076                       __CFG_WDT$OFF 000000  
                       _ChangeMode 2E4C                               l1011 137C  
                             l1013 13A6                               l1022 148A  
                             l1111 2E1E                               l1031 14B4  
                             l1007 1342                               l1008 1556  
                             l1042 1B7E                               l1054 1A74  
                             l1039 1BB6                               l1071 2C4E  
                             l1215 1918                               l1144 2912  
                             l1064 2DE2                               l1048 25E4  
                             l1075 1E28                               l1235 177E  
                             l1219 190C                               l1238 162E  
                             l1255 274A                               l1247 215A  
                             l1239 1772                               l1249 214E  
                             l1259 205E                               l1277 1CF6  
                             l4101 22D8                               l4007 2C24  
                             l4041 20AE                               l4121 1BCA  
                             l4107 289C                               l4019 2C6E  
                             l4109 28AE                               l4053 21AA  
                             l4045 20CC                               l4037 209A  
                             l4055 2238                               l4143 157A  
                             l4127 1BF8                               l4311 2396  
                             l4303 234C                               l4071 2268  
                             l4321 23C2                               l4313 23AE  
                             l4081 2290                               l4073 2270  
                             l4209 2D72                               l2803 1E16  
                             l4155 15F8                               l4331 2424  
                             l4307 2356                               l4091 22B8  
                             l4083 2298                               l4075 2278  
                             l4067 2258                               l4173 1730  
                             l4149 15BE                               l4325 23CC  
                             l4317 23B6                               l4093 22C0  
                             l4085 22A0                               l4077 2280  
                             l4069 2260                               l4261 2EBC  
                             l4351 17E4                               l4095 22C8  
                             l4087 22A8                               l4079 2288  
                             l4177 1742                               l4345 17C2  
                             l4505 2758                               l4329 240C  
                             l4097 22D0                               l4089 22B0  
                             l4531 2600                               l4523 25E8  
                             l4363 1884                               l3813 138A  
                             l4517 27EA                               l4509 2762  
                             l4381 2BC0                               l4293 2A1E  
                             l4453 2B36                               l4551 2634  
                             l4543 261C                               l4535 260C  
                             l4527 25F4                               l3751 1E6A  
                             l3807 1350                               l3903 1A0A  
                             l2791 1DC2                               l2767 1D22  
                             l2943 1FC4                               l2935 1F5E  
                             l4359 185C                               l4561 264E  
                             l3761 1F00                               l3753 1E9C  
                             l3745 1E44                               l3841 143A  
                             l3913 1A4E                               l3905 1A12  
                             l3921 255A                               l2785 1DA6  
                             l2961 2050                               l4377 2BB6  
                             l4289 2A14                               l4563 2690  
                             l4555 2640                               l4547 2628  
                             l3835 140E                               l3819 139C  
                             l3931 25E0                               l2795 1DD8  
                             l2955 1FF6                               l4571 2A8A  
                             l4395 2F2A                               l4731 1248  
                             l4723 120A                               l4651 10B2  
                             l3773 1F3A                               l3757 1EBE  
                             l3749 1E5A                               l3837 141E  
                             l3829 13DE                               l3909 1A32  
                             l3925 259C                               l2797 1DEA  
                             l2789 1DBA                               l4733 1250  
                             l4661 10D8                               l3767 1F1C  
                             l3759 1EF0                               l3855 14E0  
                             l3847 146A                               l3839 142E  
                             l3791 281E                               l2799 1DF8  
                             l3943 26D2                               l2959 200C  
                             l4591 2B70                               l4575 2A9A  
                             l4735 1256                               l4743 1282  
                             l4719 11EC                               l4671 10FA  
                             l3865 1530                               l3849 147A  
                             l3881 197E                               l3793 2830  
                             l4729 1230                               l4665 10E6  
                             l3963 1AA0                               l3875 1944  
                             l4579 2AA4                               l4755 12AC  
                             ?_exp 009C                               l3965 1AC6  
                             l3877 196A                               l4597 2B8C  
                             l4757 12B8                               l4693 114C  
                             l4677 1116                               l4669 10F2  
                             ?_log 0093                               l3895 19CE  
                             l4759 12D0                               l4695 1152  
                             l3969 1ADA                               l3899 19EE  
                             l3989 1B3C                               l3999 1B90  
                             ?_pow 00A5                               u2130 1F90  
                             u3011 12F0                               u3021 130E  
                             _LATE 000F8D                               u2138 1F94  
                             u3221 1930                               _LATJ 000F91  
                             u3320 2704                               u4040 10D0  
                             u3241 195A                               u4130 1200  
                             u3331 1A8C                               u1910 1D48  
                             u3430 20BE                               u4070 110E  
                             u3351 1AB6                               u3328 2708  
                             u1915 1D3E                               u3540 1602  
                             u3550 1604                               u3465 2CE6  
                             u1891 1D0E                               u4187 2F32  
                             u3475 2CA2                               u3920 30D8  
                             u3840 183E                               u3680 30C8  
                             u3890 312E                               u3874 2BEC  
                             u3875 2BE6                    _BusyDistanceAcq 30CE  
                             _TMR2 000FCC          __size_of_ConfigureBuggyIO 001A  
                             _main 103C           __end_of_EnableSensorLEDS 3162  
          _NormaliseSensorReadings 2A0E                       ___ftpack@arg 0060  
                     ___ftpack@exp 0063                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             exp@x 009C                               log@x 0093  
           __size_ofi2_WriteTimer0 0012             __size_ofi2_WriteTimer1 0012  
                             pclat 000FFA                               pow@x 00A5  
                             pow@y 00A8                               prodh 000FF4  
                             prodl 000FF3                               start 00E0  
                    __CFG_IESO$OFF 000000                _ConfigureInterrupts 2F62  
                    _BusySensorAcq 30BE       __end_of_CalculateSensorError 269E  
             __end_of_EnableMotors 3176                      __CFG_MCLRE$ON 000000  
                     ___ftmul@cntr 0079                       ___param_bank 000010  
                     ___ftmul@sign 007A                    __end_of_BusyADC 3134  
          __end_of_ResetEchoLength 3118                    __end_of_ReadADC 3030  
                  __end_of_OpenADC 2A0E                       ___fttol@exp1 0089  
                            ??_exp 009F                              ??_log 0096  
                     ___fttol@lval 0085                              ??_pow 00AB  
                    ??_SetDCMotorL 0068                      ??_SetDCMotorR 0068  
            _DisplaySensorStatuses 2BB0                      __CFG_WAIT$OFF 000000  
                   _ReadEchoLength 313E                              ?_main 0001  
                  __end_of___ftadd 1558                    __end_of___ftdiv 1BB8  
                  __end_of___ftneg 2DF0                    __end_of___ftmul 1A76  
                            _T0CON 000FD5                              _T1CON 000FCD  
                  __end_of___ftsub 2C50                    __end_of___fttol 1E2A  
                            _T2CON 000FCA                              i1l412 009A  
                            i1l325 2516                              i1l484 30EC  
                            i2l406 2958                     ?_SetADCChannel 0001  
                    _UltrasoundISR 2D8C                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TRISG 000F98                              _TRISJ 000F9A  
             ?_ConfigureInterrupts 0001              __size_of_Delay10KTCYx 001E  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
                    __CFG_WRT5$OFF 000000                       ___lltoft@exp 0070  
                    __CFG_WRT6$OFF 000000                      __CFG_WRT7$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                   __CFG_EBTR5$OFF 000000                     __CFG_EBTR6$OFF 000000  
                   __CFG_EBTR7$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                      ___awtoft@sign 006B  
               __size_ofi1_ReadADC 0010                              _floor 2060  
                            _isrHP 0008                              _ldexp 1F4A  
                            _isrLP 0018                              _frexp 269E  
                            _errno 00D4                      ___ftpack@sign 0064  
                       _ConvertADC 317A                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              pow@yi 00B2  
                            status 000FD8                      _SetDCMotorPID 2AF6  
                   ?_BusySensorAcq 0001                        exp@exponent 00A2  
                _millisecond_COUNT 003A                    _ConfigureTimer0 2FC6  
                  _ConfigureTimer1 2FAE                    _ConfigureTimer2 3148  
                      ldexp@newexp 0096                    __initialization 2F08  
                      log@exponent 0096                        _GetDistance 3030  
                       _ReadMillis 3134                 main@sensor_sum_ptr 00BB  
                     __end_of_main 12DA                         _ReadTimer1 3078  
                     _Delay10KTCYx 2F26             __end_of_ReadEchoLength 3148  
                 __end_of_OpenPWM4 2EE6                   __end_of_OpenPWM5 2EC0  
                           ??_main 00BB               __end_of_ConfigureADC 301C  
                    ___fttol@sign1 0084                     ?_UltrasoundISR 0001  
                    i2_WriteTimer0 309C               __end_of_ConfigurePWM 3126  
                    i2_WriteTimer1 3066                      __activetblptr 000003  
            ??_ConfigureInterrupts 0060                         _SetChanADC 2F44  
              _ConfigureUltrasound 2E20            __end_of_BusyDistanceAcq 30DE  
              __end_of_SetDCMotorL 310A                __end_of_SetDCMotorR 30FC  
            __end_of_DisableMotors 317A                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           ?_floor 0094                             ?_isrHP 0001  
                           ?_ldexp 0093                             ?_isrLP 0001  
                           ?_frexp 0060                   __end_of___altoft 2894  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                      ?_Delay1TCYx 0001                      ??_SetUnipolar 0060  
           __size_of_CalibrateLine 0050                             _CCPR4L 000F74  
                           _CCPR5L 000F71                        ?_ChangeMode 0001  
                  i1_SetADCChannel 242E                   __end_of___awtoft 2C98  
                 __end_of___ftpack 1F4A          ??_NormaliseSensorReadings 0060  
                    ??_ResetMillis 0064                   __end_of___lbtoft 2E20  
                 __end_of___lltoft 2914                             i1l3531 244A  
                           i1l3541 2472                             i1l3533 2452  
                           i1l3525 2432                             i1l3551 249A  
                           i1l3543 247A                             i1l3535 245A  
                           i1l3527 243A                    __CFG_BBSIZ$BB2K 000000  
                           i1l3553 24A2                             i1l3545 2482  
                           i1l3537 2462                             i1l3529 2442  
                           i1l3555 24AA                             i1l3547 248A  
                           i1l3539 246A                             i1l3549 2492  
                           i1l3559 24B2                             i1l3599 0092  
                       _OpenTimer0 2E74                         _OpenTimer1 2D58  
                       _OpenTimer2 2EE6                             i2l4427 2DBA  
                           i2l4419 2DA2                             i2l4627 294E  
               __size_of_SetDCPWM4 0044                 __size_of_SetDCPWM5 0044  
                   ?_SetDCMotorPID 0068                          ??_BusyADC 0060  
                        ??_ReadADC 0062               ?_ConfigureUltrasound 0064  
                 _CalibrateSensors 2A84                _SetDirectionForward 3156  
                        ??_OpenADC 0062             CalculateSensorSums@sum 00B9  
       _sensor_readings_normalised 00C8                     __CFG_XINST$OFF 000000  
                ?_SetReverseMotorL 0001                  ?_SetReverseMotorR 0001  
                           ___ftge 2518                   ?_ResetEchoLength 0001  
                __end_ofi1_ReadADC 30EE                             ___wmul 2D20  
              _sensor_readings_raw 0028             ?_DisplaySensorStatuses 0060  
                        ??___ftadd 0081                          ??___ftdiv 006E  
                        ??___ftneg 0063                          ??___ftmul 0072  
                        ??___ftsub 008D                          ??___fttol 007F  
                 OpenTimer0@config 0060                 ??_SetReverseMotorL 0060  
               ??_SetReverseMotorR 0060                   OpenTimer1@config 0060  
                  ?_ReadEchoLength 0060                   OpenTimer2@config 0060  
                           clear_0 2F0E                             clear_1 2F1A  
                  ??_SetADCChannel 0062                     ?i2_WriteTimer0 0016  
                   ?i2_WriteTimer1 0016                             floor@i 0097  
                           floor@x 0094              ___ftmul@f3_as_product 0076  
             ?_SetDirectionForward 0001                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8               _CalculateSensorError 25E6  
                      ?_ConvertADC 0001            __end_of_ConfigureTimer0 2FDC  
          __end_of_ConfigureTimer1 2FC6                   __end_ofexp@coeff 101F  
          __end_of_ConfigureTimer2 3150                   _ConfigureBuggyIO 2F7C  
                 __end_oflog@coeff 103A                         __accesstop 0060  
          __end_of__initialization 2F20                         ___altoft@c 008A  
            __size_of_EnableMotors 0004                    ??_BusySensorAcq 0060  
                       ___ftadd@f1 007B                         ___ftadd@f2 007E  
                       ___ftge@ff1 0060                         ___ftge@ff2 0063  
            ??_ConfigureUltrasound 006A      ConfigureUltrasound@echo_to_cm 0064  
    ConfigureUltrasound@echo_to_in 0067                       eval_poly@res 0090  
                    ___rparam_used 000001                         ___ftdiv@f1 0068  
                       ___ftdiv@f2 006B                         ___ftdiv@f3 0072  
              __end_of_SetUnipolar 3156                         ___ftneg@f1 0060  
              __end_of_ResetMillis 2FAE                         ___awtoft@c 0068  
                       ___lbtoft@c 006B                         ___ftmul@f1 006C  
                       ___ftmul@f2 006F                         ___ftsub@f1 0087  
                       ___ftsub@f2 008A                         ___fttol@f1 007B  
                   __pcstackCOMRAM 0001                        ?_ReadMillis 0060  
                    _CalibrateLine 2B60                        ?_ReadTimer1 0016  
                       ___lltoft@c 0068                      __end_of_floor 215C  
                    __end_of_isrHP 2992                      __end_of_ldexp 2060  
                    __end_of_isrLP 00E0                      __end_of_frexp 274C  
              __size_of_Delay1TCYx 0010                __size_of_ChangeMode 0028  
                  ??_UltrasoundISR 001A                        _SetDCMotorL 30FC  
                      _SetDCMotorR 30EE                  __end_of_SetDCPWM4 2CDC  
                __end_of_SetDCPWM5 2D20              ??_SetDirectionForward 0060  
              i1SetChanADC@channel 0002                        ?_SetChanADC 0001  
          __end_ofi1_SetADCChannel 2518                    _sensor_acq_done 0040  
      __end_of_MillisecondTimerISR 309C       CalculateSensorStatuses@index 0063  
                 ?_BusyDistanceAcq 0001              ?_CalculateSensorError 0060  
                     _EnableMotors 3172                            ??_floor 0097  
                          ??_isrHP 001A                            ??_ldexp 0098  
                          ??_isrLP 0005                            ??_frexp 0065  
                       __pbssBANK0 00BE                    ??_SetDCMotorPID 006A  
                      ?_OpenTimer0 0001                        ?_OpenTimer1 0001  
                      ?_OpenTimer2 0001                 __size_of_eval_poly 00F6  
                       __pnvCOMRAM 0048                  ?_EnableSensorLEDS 0001  
                        ?_OpenPWM4 0001                          ?_OpenPWM5 0001  
               ??_EnableSensorLEDS 0060            CalculateSensorError@sum 0060  
                   ?_CalibrateLine 0001                            ?___ftge 0060  
            __size_of_ConfigureADC 0014                            ?___wmul 0060  
            __size_of_ConfigurePWM 000E                    ??i2_WriteTimer0 0018  
                  ??i2_WriteTimer1 0018                            _CCP4CON 000F73  
                          _CCP5CON 000F70                   WriteTimer0@timer 0062  
                        ?___altoft 008A                   WriteTimer1@timer 0062  
                    ??_WriteTimer0 0062                      ??_WriteTimer1 0062  
              __size_of_ConvertADC 0004                          ?___awtoft 0068  
                        ?___ftpack 0060                          ?___lbtoft 0068  
                        ?___lltoft 0068                __size_of_ReadMillis 000A  
                      _SetUnipolar 3150                __size_of_ReadTimer1 0012  
                      _ResetMillis 2F96             SetDCMotorPID@PIDoutput 0068  
                 ?_ConfigureTimer0 0001                   ?_ConfigureTimer1 0001  
                 ?_ConfigureTimer2 0001                         _convert_cm 00D8  
                       _convert_in 00DB       __size_of_CalculateSensorSums 00A6  
                     _ConfigureADC 3008                            _BusyADC 3126  
                          _ReadADC 301C                       _ConfigurePWM 3118  
              i2WriteTimer0@timer0 0016                         ??_OpenPWM4 0060  
                       ??_OpenPWM5 0060                i2WriteTimer1@timer1 0016  
                          _OpenADC 2992                            __Hparam 0000  
              __size_of_SetChanADC 001E                            __Lparam 0000  
                     ?_GetDistance 0001                    __size_of___ftge 00CE  
                          ___ftadd 12DA                            ___ftdiv 1A76  
                          ___ftneg 2DC0                    __size_of___wmul 0038  
                          ___ftmul 191A                            ___ftsub 2C00  
                          ___fttol 1CF8                      ?i1_ConvertADC 0001  
                     __psmallconst 1000                         ??___altoft 008E  
                  __CFG_STVREN$OFF 000000                            __pcinit 2F08  
                       ??___awtoft 006B                         ??___ftpack 0065  
                       ??___lbtoft 006B                  __end_of_eval_poly 2252  
                          __ramtop 1000                __size_of_OpenTimer0 0026  
              __size_of_OpenTimer1 0034                __size_of_OpenTimer2 0022  
                       ??___lltoft 006C                            __ptext0 103C  
                          __ptext1 3150                            __ptext2 3162  
                          __ptext3 3166                            __ptext4 316A  
                          __ptext5 316E                            __ptext6 3156  
                          __ptext7 2AF6                            __ptext8 30EE  
                          __ptext9 2C98                          _T0CONbits 000FD5  
         ?_CalculateSensorStatuses 0001                          _T1CONbits 000FCD  
                        _T2CONbits 000FCA           __end_of_CalibrateSensors 2AF6  
                     __size_of_exp 0228                       __size_of_log 0140  
           ??_CalculateSensorError 0062                       __size_of_pow 019A  
                 ?i1_SetADCChannel 0001                          _T3CONbits 000FB1  
                        _T4CONbits 000F76                __end_of_WriteTimer0 3066  
              __end_of_WriteTimer1 3054              CalibrateSensors@index 0065  
                     ??_Delay1TCYx 0060                     OpenADC@config2 0060  
                     ??_ChangeMode 0062                     __pintcode_body 2914  
                _GetSensorReadings 2FDC               end_of_initialization 2F20  
                          exp@sign 00A4                     main@sensor_sum 00BD  
               ?_GetSensorReadings 0001                            int_func 2914  
                    ?i1_SetChanADC 0001                    ??_CalibrateLine 0065  
          ??_DisplaySensorStatuses 0062                            pow@sign 00B1  
                 ??_ReadEchoLength 0062                ??_GetSensorReadings 0063  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                     ??i1_ConvertADC 0001  
                        _PID_error 00D6        __end_of_ConfigureInterrupts 2F7C  
               __end_of_Delay1TCYx 30BE           __end_of_ConfigureBuggyIO 2F96  
               __end_of_ChangeMode 2E74                          i1_ReadADC 30DE  
                        _PORTBbits 000F81                  _SetForwardsMotorL 316E  
                _SetForwardsMotorR 316A                 ?_SetForwardsMotorL 0001  
               ?_SetForwardsMotorR 0001          __size_of_SetReverseMotorL 0004  
        __size_of_SetReverseMotorR 0004                          _TRISGbits 000F98  
        __end_of_GetSensorReadings 2FF2                       ??_ConvertADC 0060  
              ??_SetForwardsMotorL 0060                ??_SetForwardsMotorR 0060  
                      ___ftdiv@exp 0075                     ??i1_SetChanADC 0001  
           i1SetADCChannel@channel 0003                        ___ftmul@exp 0075  
            SetDCMotorL@duty_cycle 0066                       ??_ReadMillis 0062  
                     ??_ReadTimer1 0018               _second_rollover_flag 003F  
           __size_of_DisableMotors 0004    __end_of_CalculateSensorStatuses 242E  
                   __end_of___ftge 25E6                     __end_of___wmul 2D58  
                     ?_SetDCMotorL 0066                       ?_SetDCMotorR 0066  
        __end_of_SetForwardsMotorL 3172                        _WriteTimer0 3054  
                      _WriteTimer1 3042          __end_of_SetForwardsMotorR 316E  
                       ?i1_ReadADC 0001                 __end_of_ConvertADC 317E  
                       floor@expon 009A              __end_of_SetADCChannel 2340  
         __size_of_ResetEchoLength 000E                       ??_SetChanADC 0060  
              start_initialization 2F08           ?_NormaliseSensorReadings 0001  
                       eval_poly@d 008A                         eval_poly@n 008C  
                       eval_poly@x 0087                         ldexp@value 0093  
                        _SetDCPWM4 2C98                          _SetDCPWM5 2CDC  
                      __end_of_exp 1780                        __end_of_log 1CF8  
                      __end_of_pow 191A                    SetDCPWM4@DCycle 0064  
      __end_of_ConfigureUltrasound 2E4C                    SetDCPWM5@DCycle 0064  
               __end_of_ReadMillis 313E                       ??_OpenTimer0 0060  
                     ??_OpenTimer1 0060                       ??_OpenTimer2 0060  
                    _echo_acq_done 0048                 __end_of_ReadTimer1 308A  
                       frexp@value 0060                        _SystemClock 0032  
                 _sensor_acq_index 0041              __end_of_BusySensorAcq 30CE  
             SetADCChannel@channel 0062  DisplaySensorStatuses@status_array 0060  
               __end_of_SetChanADC 2F62                  __size_of_OpenPWM4 0026  
                __size_of_OpenPWM5 0026                           ??___ftge 0066  
                         ??___wmul 0064        __end_of_SetDirectionForward 315C  
                 __CFG_LPT1OSC$OFF 000000               __size_of_GetDistance 0012  
        __size_of_EnableSensorLEDS 0006                _CalculateSensorSums 274C  
            __end_of_UltrasoundISR 2DC0                 __end_of_OpenTimer0 2E9A  
               __end_of_OpenTimer1 2D8C                 __end_of_OpenTimer2 2F08  
                __size_of___altoft 00A2                  __size_of___awtoft 0048  
                __size_of___ftpack 0120                  __size_of___lbtoft 0030  
                __size_of___lltoft 0080                        __pbssCOMRAM 0028  
                    __pcstackBANK0 0060                         ?_SetDCPWM4 0060  
                       ?_SetDCPWM5 0060         __size_of_GetSensorReadings 0016  
                    _DisableMotors 3176                       ?_SetUnipolar 0001  
             __end_ofi1_ConvertADC 3182                       ?_ResetMillis 0001  
     __size_of_MillisecondTimerISR 0012           __size_of_BusyDistanceAcq 0010  
             ?_CalculateSensorSums 0001              __end_of_SetDCMotorPID 2B60  
                         ?_BusyADC 0001                           ?_ReadADC 0060  
                        __pnvBANK0 00D8                  OpenADC@portconfig 0061  
                         ?_OpenADC 0060                     _sensor_offsets 00BE  
                        _echo_time 0038                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                           ?___ftadd 007B  
                         ?___ftdiv 0068                           ?___ftneg 0060  
                         ?___ftmul 006C                           ?___ftsub 0087  
                         ?___fttol 007B                      ?_Delay10KTCYx 0001  
                      __pintcodelo 0018         __size_of_SetForwardsMotorL 0004  
       __size_of_SetForwardsMotorR 0004              __end_ofi2_WriteTimer0 30AE  
            __end_ofi2_WriteTimer1 3078    __end_of_NormaliseSensorReadings 2A84  
                      ??i1_ReadADC 0003                   _sensor_threshold 003C  
                      __smallconst 1000                  WriteTimer0@timer0 0060  
             __end_ofi1_SetChanADC 3008                  WriteTimer1@timer1 0060  
                        _eval_poly 215C                 i2WriteTimer0@timer 0018  
                ?_CalibrateSensors 0001                 i2WriteTimer1@timer 0018  
                 _SetReverseMotorL 3166                   _SetReverseMotorR 3162  
               ??_CalibrateSensors 0063                     ?_DisableMotors 0001  
                        _line_mode 003E                     __size_of_floor 00FC  
                   __size_of_isrHP 298A                     __size_of_ldexp 0116  
                   __size_of_isrLP 00C8                     __size_of_frexp 00AE  
                ??_ResetEchoLength 0060              ??_CalculateSensorSums 00B6  
 __size_of_CalculateSensorStatuses 00EE                     ___wmul@product 0064  
                    OpenADC@config 0064                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LATJbits 000F91  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
       DisplaySensorStatuses@index 0064                           _PIR1bits 000F9E  
            __CFG_DATABW$DATA16BIT 000000     __size_of_DisplaySensorStatuses 0050  
                         _RCONbits 000FD0           __size_of_ConfigureTimer0 0016  
         __size_of_ConfigureTimer1 0018           __size_of_ConfigureTimer2 0008  
    __end_of_DisplaySensorStatuses 2C00                   __CFG_WDTPS$32768 000000  
                   ??_Delay10KTCYx 0060              SetDCMotorR@duty_cycle 0066  
                __CFG_ECCPMX$PORTH 000000                         _ADCON0bits 000FC2  
                ?_ConfigureBuggyIO 0001                  ___wmul@multiplier 0060  
             __size_of_SetDCMotorL 000E               __size_of_SetDCMotorR 000E  
               ??_ConfigureBuggyIO 0060                         ?_eval_poly 0087  
                      ??_SetDCPWM4 0062                        ??_SetDCPWM5 0062  
                 Delay10KTCYx@unit 0061      __size_of_CalculateSensorError 00B8  
         CalculateSensorSums@index 00BA                        _INTCON2bits 000FF1  
         __size_ofi1_SetADCChannel 00EA                          frexp@eptr 0063  
                         _OpenPWM4 2EC0                           _OpenPWM5 2E9A  
                 __size_of_BusyADC 000E                   __size_of_ReadADC 0014  
                         __Hrparam 0000                   __size_of_OpenADC 007C  
                         __Lrparam 0000                  ??_BusyDistanceAcq 0060  
            __end_of_CalibrateLine 2BB0           _CalculateSensorSums$2908 00B6  
                 __size_of___ftadd 027E                   __size_of___ftdiv 0142  
                 __size_of___ftneg 0030                           ___altoft 27F2  
                 __size_of___ftmul 015C                   __size_of___ftsub 0050  
                 __size_of___fttol 0132                       ?_WriteTimer0 0060  
                     ?_WriteTimer1 0060                           ___awtoft 2C50  
                         ___ftpack 1E2A                           ___lbtoft 2DF0  
                 _EnableSensorLEDS 315C                           ___lltoft 2894  
              _system_clock_enable 0042                           _exp$2911 009F  
     __size_of_ConfigureInterrupts 001A              __size_ofi1_ConvertADC 0004  
                  ??_DisableMotors 0060                      ?_EnableMotors 0001  
               SetDCPWM4@dutycycle 0060                     OpenPWM4@period 0060  
                         __ptext10 30FC                           __ptext11 2CDC  
                         __ptext20 3176                           __ptext12 2F96  
                         __ptext21 2E20                           __ptext13 310A  
                         __ptext30 3118                           __ptext22 3148  
                         __ptext14 3134                      _sensor_status 0043  
                         __ptext31 2E9A                           __ptext23 2EE6  
                         __ptext15 313E                           __ptext40 2B60  
                         __ptext32 2EC0                           __ptext24 2FAE  
                         __ptext16 3030                           __ptext41 301C  
                         __ptext33 2F62                           __ptext25 3042  
                         __ptext17 30AE                           __ptext50 3126  
                         __ptext42 2A0E                           __ptext34 2F7C  
                         __ptext26 2D58                           __ptext18 315C  
                         __ptext51 274C                           __ptext43 2FDC  
                         __ptext35 3008                           __ptext27 2FC6  
                         __ptext19 3172                           __ptext60 27F2  
                         __ptext52 1780                           __ptext44 2252  
                         __ptext36 2992                           __ptext28 3054  
                         __ptext61 215C                           __ptext53 1BB8  
                         __ptext45 2F44                           __ptext37 2E4C  
                         __ptext29 2E74                           __ptext70 2DF0  
                         __ptext62 2D20                           __ptext54 1558  
                         __ptext46 317A                           __ptext38 2F26  
                         __ptext71 1E2A                           __ptext63 191A  
                         __ptext55 1F4A                           __ptext47 2BB0  
                         __ptext39 2A84                           __ptext80 2D8C  
                         __ptext72 25E6                           __ptext64 2C00  
                         __ptext56 2060                           __ptext48 2340  
                         __ptext81 3066                           __ptext73 30CE  
                         __ptext65 12DA                           __ptext57 269E  
                         __ptext49 30BE                           __ptext82 3078  
                         __ptext66 2DC0                           __ptext58 1CF8  
                         __ptext83 308A                           __ptext75 242E  
                         __ptext67 1A76                           __ptext59 2518  
                         __ptext84 309C                           __ptext76 2FF2  
                         __ptext68 2C50                           __ptext77 30DE  
                         __ptext69 2894                           __ptext78 317E  
                   OpenPWM5@period 0060                           _pow$2910 00AE  
                         _pow$2909 00AB                 SetDCPWM5@dutycycle 0060  
             __size_of_SetUnipolar 0006                      __size_of_main 029E  
             __size_of_ResetMillis 0018                     Delay1TCYx@unit 0060  
 __size_of_NormaliseSensorReadings 0076              __size_ofi1_SetChanADC 0016  
                     i1_ConvertADC 317E                _MillisecondTimerISR 308A  
                ??_ConfigureTimer0 0064                  ??_ConfigureTimer1 0064  
                ??_ConfigureTimer2 0061                           exp@coeff 1001  
          __size_of_ReadEchoLength 000A                           log@coeff 101F  
            __CFG_ADDRBW$ADDR20BIT 000000       NormaliseSensorReadings@index 0064  
                       _INTCONbits 000FF2                        ??_eval_poly 008E  
                   ??_EnableMotors 0060               __end_of_Delay10KTCYx 2F44  
             ?_MillisecondTimerISR 0001                           intlevel1 0000  
                         intlevel2 0000            _CalculateSensorStatuses 2340  
                    ?_ConfigureADC 0001                      ?_ConfigurePWM 0001  
                SetChanADC@channel 0061       __size_of_ConfigureUltrasound 002C  
                     i1_SetChanADC 2FF2             __size_of_SetADCChannel 00EE  
                ??i1_SetADCChannel 0003           __end_of_SetReverseMotorL 316A  
         __end_of_SetReverseMotorR 3166                      ??_GetDistance 0061  
                  _ResetEchoLength 310A                         _PID_output 00D2  
     __size_of_SetDirectionForward 0006             __size_of_BusySensorAcq 0010  
            ??_MillisecondTimerISR 001A                     ??_ConfigureADC 0065  
                   ??_ConfigurePWM 0061             __size_of_UltrasoundISR 0034  
        __size_of_CalibrateSensors 0072  
