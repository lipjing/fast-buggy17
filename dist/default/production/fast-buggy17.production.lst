

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 10 18:30:33 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           	psect	mediumconst
    62  00FEE6                     __pmediumconst:
    63                           	opt stack 0
    64  00FEE6  00                 	db	0
    65  00FEE7                     _dpowers:
    66                           	opt stack 0
    67  00FEE7  0001               	dw	1
    68  00FEE9  0000               	dw	0
    69  00FEEB  000A               	dw	10
    70  00FEED  0000               	dw	0
    71  00FEEF  0064               	dw	100
    72  00FEF1  0000               	dw	0
    73  00FEF3  03E8               	dw	1000
    74  00FEF5  0000               	dw	0
    75  00FEF7  2710               	dw	10000
    76  00FEF9  0000               	dw	0
    77  00FEFB  86A0               	dw	34464
    78  00FEFD  0001               	dw	1
    79  00FEFF  4240               	dw	16960
    80  00FF01  000F               	dw	15
    81  00FF03  9680               	dw	38528
    82  00FF05  0098               	dw	152
    83  00FF07  E100               	dw	57600
    84  00FF09  05F5               	dw	1525
    85  00FF0B  CA00               	dw	51712
    86  00FF0D  3B9A               	dw	15258
    87  00FF0F                     __end_of_dpowers:
    88                           	opt stack 0
    89  00FF0F                     __npowers_:
    90                           	opt stack 0
    91  00FF0F  00                 	db	0
    92  00FF10  80                 	db	128
    93  00FF11  3F                 	db	63
    94  00FF12  CD                 	db	205
    95  00FF13  CC                 	db	204
    96  00FF14  3D                 	db	61
    97  00FF15  D7                 	db	215
    98  00FF16  23                 	db	35
    99  00FF17  3C                 	db	60
   100  00FF18  12                 	db	18
   101  00FF19  83                 	db	131
   102  00FF1A  3A                 	db	58
   103  00FF1B  B7                 	db	183
   104  00FF1C  D1                 	db	209
   105  00FF1D  38                 	db	56
   106  00FF1E  C6                 	db	198
   107  00FF1F  27                 	db	39
   108  00FF20  37                 	db	55
   109  00FF21  38                 	db	56
   110  00FF22  86                 	db	134
   111  00FF23  35                 	db	53
   112  00FF24  C0                 	db	192
   113  00FF25  D6                 	db	214
   114  00FF26  33                 	db	51
   115  00FF27  CC                 	db	204
   116  00FF28  2B                 	db	43
   117  00FF29  32                 	db	50
   118  00FF2A  70                 	db	112
   119  00FF2B  89                 	db	137
   120  00FF2C  30                 	db	48
   121  00FF2D  E7                 	db	231
   122  00FF2E  DB                 	db	219
   123  00FF2F  2E                 	db	46
   124  00FF30  E5                 	db	229
   125  00FF31  3C                 	db	60
   126  00FF32  1E                 	db	30
   127  00FF33  42                 	db	66
   128  00FF34  A2                 	db	162
   129  00FF35  0D                 	db	13
   130  00FF36                     __end_of__npowers_:
   131                           	opt stack 0
   132  00FF36                     __powers_:
   133                           	opt stack 0
   134  00FF36  00                 	db	0
   135  00FF37  80                 	db	128
   136  00FF38  3F                 	db	63
   137  00FF39  00                 	db	0
   138  00FF3A  20                 	db	32
   139  00FF3B  41                 	db	65
   140  00FF3C  00                 	db	0
   141  00FF3D  C8                 	db	200
   142  00FF3E  42                 	db	66
   143  00FF3F  00                 	db	0
   144  00FF40  7A                 	db	122
   145  00FF41  44                 	db	68
   146  00FF42  40                 	db	64
   147  00FF43  1C                 	db	28
   148  00FF44  46                 	db	70
   149  00FF45  50                 	db	80
   150  00FF46  C3                 	db	195
   151  00FF47  47                 	db	71
   152  00FF48  24                 	db	36
   153  00FF49  74                 	db	116
   154  00FF4A  49                 	db	73
   155  00FF4B  97                 	db	151
   156  00FF4C  18                 	db	24
   157  00FF4D  4B                 	db	75
   158  00FF4E  BC                 	db	188
   159  00FF4F  BE                 	db	190
   160  00FF50  4C                 	db	76
   161  00FF51  6B                 	db	107
   162  00FF52  6E                 	db	110
   163  00FF53  4E                 	db	78
   164  00FF54  03                 	db	3
   165  00FF55  15                 	db	21
   166  00FF56  50                 	db	80
   167  00FF57  79                 	db	121
   168  00FF58  AD                 	db	173
   169  00FF59  60                 	db	96
   170  00FF5A  F3                 	db	243
   171  00FF5B  49                 	db	73
   172  00FF5C  71                 	db	113
   173  00FF5D                     __end_of__powers_:
   174                           	opt stack 0
   175  0000                     _ADCON0	set	4034
   176  0000                     _ADCON0bits	set	4034
   177  0000                     _ADCON1	set	4033
   178  0000                     _ADCON2	set	4032
   179  0000                     _ADRESH	set	4036
   180  0000                     _ADRESL	set	4035
   181  0000                     _INTCON2bits	set	4081
   182  0000                     _INTCON3bits	set	4080
   183  0000                     _INTCONbits	set	4082
   184  0000                     _LATE	set	3981
   185  0000                     _LATEbits	set	3981
   186  0000                     _LATJ	set	3985
   187  0000                     _LATJbits	set	3985
   188  0000                     _PIE1bits	set	3997
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PORTBbits	set	3969
   191  0000                     _RCONbits	set	4048
   192  0000                     _RCSTA1	set	4011
   193  0000                     _RCSTA1bits	set	4011
   194  0000                     _SPBRG1	set	4015
   195  0000                     _SPBRGH1	set	3967
   196  0000                     _T0CON	set	4053
   197  0000                     _T0CONbits	set	4053
   198  0000                     _TMR0H	set	4055
   199  0000                     _TMR0L	set	4054
   200  0000                     _TRISA	set	3986
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISCbits	set	3988
   203  0000                     _TRISE	set	3990
   204  0000                     _TRISJ	set	3994
   205  0000                     _TXREG1	set	4013
   206  0000                     _TXSTA1	set	4012
   207  0000                     _TXSTA1bits	set	4012
   208  00FF5D                     STR_2:
   209  00FF5D  45                 	db	69	;'E'
   210  00FF5E  53                 	db	83	;'S'
   211  00FF5F  50                 	db	80	;'P'
   212  00FF60  20                 	db	32
   213  00FF61  47                 	db	71	;'G'
   214  00FF62  72                 	db	114	;'r'
   215  00FF63  6F                 	db	111	;'o'
   216  00FF64  75                 	db	117	;'u'
   217  00FF65  70                 	db	112	;'p'
   218  00FF66  20                 	db	32
   219  00FF67  31                 	db	49	;'1'
   220  00FF68  36                 	db	54	;'6'
   221  00FF69  0D                 	db	13
   222  00FF6A  0A                 	db	10
   223  00FF6B  54                 	db	84	;'T'
   224  00FF6C  65                 	db	101	;'e'
   225  00FF6D  63                 	db	99	;'c'
   226  00FF6E  68                 	db	104	;'h'
   227  00FF6F  20                 	db	32
   228  00FF70  44                 	db	68	;'D'
   229  00FF71  65                 	db	101	;'e'
   230  00FF72  6D                 	db	109	;'m'
   231  00FF73  6F                 	db	111	;'o'
   232  00FF74  20                 	db	32
   233  00FF75  33                 	db	51	;'3'
   234  00FF76  20                 	db	32
   235  00FF77  54                 	db	84	;'T'
   236  00FF78  65                 	db	101	;'e'
   237  00FF79  73                 	db	115	;'s'
   238  00FF7A  74                 	db	116	;'t'
   239  00FF7B  20                 	db	32
   240  00FF7C  50                 	db	80	;'P'
   241  00FF7D  72                 	db	114	;'r'
   242  00FF7E  6F                 	db	111	;'o'
   243  00FF7F  67                 	db	103	;'g'
   244  00FF80  72                 	db	114	;'r'
   245  00FF81  61                 	db	97	;'a'
   246  00FF82  6D                 	db	109	;'m'
   247  00FF83  0D                 	db	13
   248  00FF84  0A                 	db	10
   249  00FF85  00                 	db	0
   250  00FF86                     STR_6:
   251  00FF86  4D                 	db	77	;'M'
   252  00FF87  6F                 	db	111	;'o'
   253  00FF88  64                 	db	100	;'d'
   254  00FF89  65                 	db	101	;'e'
   255  00FF8A  3A                 	db	58	;':'
   256  00FF8B  20                 	db	32
   257  00FF8C  55                 	db	85	;'U'
   258  00FF8D  4C                 	db	76	;'L'
   259  00FF8E  54                 	db	84	;'T'
   260  00FF8F  52                 	db	82	;'R'
   261  00FF90  41                 	db	65	;'A'
   262  00FF91  53                 	db	83	;'S'
   263  00FF92  4F                 	db	79	;'O'
   264  00FF93  4E                 	db	78	;'N'
   265  00FF94  49                 	db	73	;'I'
   266  00FF95  43                 	db	67	;'C'
   267  00FF96  20                 	db	32
   268  00FF97  44                 	db	68	;'D'
   269  00FF98  49                 	db	73	;'I'
   270  00FF99  53                 	db	83	;'S'
   271  00FF9A  54                 	db	84	;'T'
   272  00FF9B  41                 	db	65	;'A'
   273  00FF9C  4E                 	db	78	;'N'
   274  00FF9D  43                 	db	67	;'C'
   275  00FF9E  45                 	db	69	;'E'
   276  00FF9F  0D                 	db	13
   277  00FFA0  0A                 	db	10
   278  00FFA1  00                 	db	0
   279  00FFA2                     STR_7:
   280  00FFA2  44                 	db	68	;'D'
   281  00FFA3  49                 	db	73	;'I'
   282  00FFA4  53                 	db	83	;'S'
   283  00FFA5  54                 	db	84	;'T'
   284  00FFA6  41                 	db	65	;'A'
   285  00FFA7  4E                 	db	78	;'N'
   286  00FFA8  43                 	db	67	;'C'
   287  00FFA9  45                 	db	69	;'E'
   288  00FFAA  20                 	db	32
   289  00FFAB  28                 	db	40
   290  00FFAC  43                 	db	67	;'C'
   291  00FFAD  4D                 	db	77	;'M'
   292  00FFAE  29                 	db	41
   293  00FFAF  09                 	db	9
   294  00FFB0  54                 	db	84	;'T'
   295  00FFB1  4D                 	db	77	;'M'
   296  00FFB2  52                 	db	82	;'R'
   297  00FFB3  30                 	db	48	;'0'
   298  00FFB4  20                 	db	32
   299  00FFB5  56                 	db	86	;'V'
   300  00FFB6  41                 	db	65	;'A'
   301  00FFB7  4C                 	db	76	;'L'
   302  00FFB8  55                 	db	85	;'U'
   303  00FFB9  45                 	db	69	;'E'
   304  00FFBA  0D                 	db	13
   305  00FFBB  0A                 	db	10
   306  00FFBC  00                 	db	0
   307  00FFBD                     STR_3:
   308  00FFBD  4D                 	db	77	;'M'
   309  00FFBE  6F                 	db	111	;'o'
   310  00FFBF  64                 	db	100	;'d'
   311  00FFC0  65                 	db	101	;'e'
   312  00FFC1  3A                 	db	58	;':'
   313  00FFC2  20                 	db	32
   314  00FFC3  4C                 	db	76	;'L'
   315  00FFC4  49                 	db	73	;'I'
   316  00FFC5  4E                 	db	78	;'N'
   317  00FFC6  45                 	db	69	;'E'
   318  00FFC7  20                 	db	32
   319  00FFC8  53                 	db	83	;'S'
   320  00FFC9  45                 	db	69	;'E'
   321  00FFCA  4E                 	db	78	;'N'
   322  00FFCB  53                 	db	83	;'S'
   323  00FFCC  49                 	db	73	;'I'
   324  00FFCD  4E                 	db	78	;'N'
   325  00FFCE  47                 	db	71	;'G'
   326  00FFCF  0D                 	db	13
   327  00FFD0  0A                 	db	10
   328  00FFD1  00                 	db	0
   329  00FFD2                     STR_1:
   330  00FFD2  55                 	db	85	;'U'
   331  00FFD3  53                 	db	83	;'S'
   332  00FFD4  41                 	db	65	;'A'
   333  00FFD5  52                 	db	82	;'R'
   334  00FFD6  54                 	db	84	;'T'
   335  00FFD7  20                 	db	32
   336  00FFD8  43                 	db	67	;'C'
   337  00FFD9  6F                 	db	111	;'o'
   338  00FFDA  6E                 	db	110	;'n'
   339  00FFDB  66                 	db	102	;'f'
   340  00FFDC  69                 	db	105	;'i'
   341  00FFDD  67                 	db	103	;'g'
   342  00FFDE  75                 	db	117	;'u'
   343  00FFDF  72                 	db	114	;'r'
   344  00FFE0  65                 	db	101	;'e'
   345  00FFE1  64                 	db	100	;'d'
   346  00FFE2  0D                 	db	13
   347  00FFE3  0A                 	db	10
   348  00FFE4  00                 	db	0
   349  00FFE5                     STR_8:
   350  00FFE5  25                 	db	37
   351  00FFE6  2E                 	db	46
   352  00FFE7  32                 	db	50	;'2'
   353  00FFE8  66                 	db	102	;'f'
   354  00FFE9  20                 	db	32
   355  00FFEA  63                 	db	99	;'c'
   356  00FFEB  6D                 	db	109	;'m'
   357  00FFEC  09                 	db	9
   358  00FFED  25                 	db	37
   359  00FFEE  64                 	db	100	;'d'
   360  00FFEF  0D                 	db	13
   361  00FFF0  0A                 	db	10
   362  00FFF1  00                 	db	0
   363  00FFF2                     STR_4:
   364  00FFF2  54                 	db	84	;'T'
   365  00FFF3  48                 	db	72	;'H'
   366  00FFF4  52                 	db	82	;'R'
   367  00FFF5  45                 	db	69	;'E'
   368  00FFF6  53                 	db	83	;'S'
   369  00FFF7  48                 	db	72	;'H'
   370  00FFF8  4F                 	db	79	;'O'
   371  00FFF9  4C                 	db	76	;'L'
   372  00FFFA  44                 	db	68	;'D'
   373  00FFFB  0D                 	db	13
   374  00FFFC  0A                 	db	10
   375  00FFFD  00                 	db	0
   376  0000                     
   377                           ; #config settings
   378  00FFFE  00                 	db	0	; dummy byte at the end
   379  0000                     
   380                           	psect	cinit
   381  012016                     __pcinit:
   382                           	opt stack 0
   383  012016                     start_initialization:
   384                           	opt stack 0
   385  012016                     __initialization:
   386                           	opt stack 0
   387                           
   388                           ; Clear objects allocated to BANK0 (37 bytes)
   389  012016  EE00  F08E         	lfsr	0,__pbssBANK0
   390  01201A  0E25               	movlw	37
   391  01201C                     clear_0:
   392  01201C  6AEE               	clrf	postinc0,c
   393  01201E  06E8               	decf	wreg,f,c
   394  012020  E1FD               	bnz	clear_0
   395                           
   396                           ; Clear objects allocated to COMRAM (1 bytes)
   397  012022  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   398  012024                     end_of_initialization:
   399                           	opt stack 0
   400  012024                     __end_of__initialization:
   401                           	opt stack 0
   402  012024  0100               	movlb	0
   403  012026  EF44  F088         	goto	_main	;jump to C main() function
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           
   407                           	psect	bssCOMRAM
   408  00004C                     __pbssCOMRAM:
   409                           	opt stack 0
   410  00004C                     _USART1_Status:
   411                           	opt stack 0
   412  00004C                     	ds	1
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416                           	psect	bssBANK0
   417  00008E                     __pbssBANK0:
   418                           	opt stack 0
   419  00008E                     _sensors:
   420                           	opt stack 0
   421  00008E                     	ds	10
   422  000098                     _dist_cm:
   423                           	opt stack 0
   424  000098                     	ds	3
   425  00009B                     _threshold:
   426                           	opt stack 0
   427  00009B                     	ds	2
   428  00009D                     _echo_ready:
   429                           	opt stack 0
   430  00009D                     	ds	1
   431  00009E                     _i:
   432                           	opt stack 0
   433  00009E                     	ds	1
   434  00009F                     _i2:
   435                           	opt stack 0
   436  00009F                     	ds	1
   437  0000A0                     _mode:
   438                           	opt stack 0
   439  0000A0                     	ds	1
   440  0000A1                     _buffer:
   441                           	opt stack 0
   442  0000A1                     	ds	16
   443  0000B1                     _echo_time:
   444                           	opt stack 0
   445  0000B1                     	ds	2
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           
   449                           	psect	cstackBANK0
   450  000060                     __pcstackBANK0:
   451                           	opt stack 0
   452  000060                     ?___ftsub:
   453                           	opt stack 0
   454  000060                     ___ftsub@f1:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0x0
   458  000060                     	ds	3
   459  000063                     ___ftsub@f2:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0x3
   463  000063                     	ds	3
   464  000066                     ?_sprintf:
   465                           	opt stack 0
   466  000066                     sprintf@sp:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470  000066                     	ds	2
   471  000068                     sprintf@f:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475  000068                     	ds	7
   476  00006F                     ??_sprintf:
   477                           
   478                           ; 0 bytes @ 0xF
   479  00006F                     	ds	6
   480  000075                     _sprintf$2000:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x15
   484  000075                     	ds	3
   485  000078                     sprintf@ap:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x18
   489  000078                     	ds	2
   490  00007A                     sprintf@flag:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x1A
   494  00007A                     	ds	2
   495  00007C                     sprintf@exp:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  00007C                     	ds	2
   500  00007E                     sprintf@tmpval:
   501                           	opt stack 0
   502                           
   503                           ; 4 bytes @ 0x1E
   504  00007E                     	ds	4
   505  000082                     sprintf@val:
   506                           	opt stack 0
   507                           
   508                           ; 4 bytes @ 0x22
   509  000082                     	ds	4
   510  000086                     sprintf@prec:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x26
   514  000086                     	ds	2
   515  000088                     sprintf@fval:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x28
   519  000088                     	ds	3
   520  00008B                     sprintf@c:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x2B
   524  00008B                     	ds	1
   525  00008C                     
   526                           ; 0 bytes @ 0x2C
   527  00008C                     	ds	2
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           
   531                           	psect	cstackCOMRAM
   532  000001                     __pcstackCOMRAM:
   533                           	opt stack 0
   534  000001                     ?_ReadTimer0:
   535                           	opt stack 0
   536  000001                     i2WriteTimer0@timer0:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x0
   540  000001                     	ds	2
   541  000003                     ReadTimer0@timer:
   542                           	opt stack 0
   543  000003                     i2WriteTimer0@timer:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x2
   547  000003                     	ds	2
   548  000005                     ??_isr:
   549                           
   550                           ; 0 bytes @ 0x4
   551  000005                     	ds	14
   552  000013                     ??_SetChanADC:
   553  000013                     ??_Delay10KTCYx:
   554  000013                     ??_isdigit:
   555  000013                     ?_ReadADC:
   556                           	opt stack 0
   557  000013                     ?___awmod:
   558                           	opt stack 0
   559  000013                     ?___ftpack:
   560                           	opt stack 0
   561  000013                     ?___ftneg:
   562                           	opt stack 0
   563  000013                     ?__tdiv_to_l_:
   564                           	opt stack 0
   565  000013                     ?__div_to_l_:
   566                           	opt stack 0
   567  000013                     ?___lldiv:
   568                           	opt stack 0
   569  000013                     IlluminateLED@sel:
   570                           	opt stack 0
   571  000013                     OpenADC@config2:
   572                           	opt stack 0
   573  000013                     Write1USART@data:
   574                           	opt stack 0
   575  000013                     Delay1KTCYx@unit:
   576                           	opt stack 0
   577  000013                     Delay1TCYx@unit:
   578                           	opt stack 0
   579  000013                     WriteTimer0@timer0:
   580                           	opt stack 0
   581  000013                     Open1USART@spbrg:
   582                           	opt stack 0
   583  000013                     ___awmod@dividend:
   584                           	opt stack 0
   585  000013                     __div_to_l_@f1:
   586                           	opt stack 0
   587  000013                     ___ftpack@arg:
   588                           	opt stack 0
   589  000013                     __tdiv_to_l_@f1:
   590                           	opt stack 0
   591  000013                     ___ftge@ff1:
   592                           	opt stack 0
   593  000013                     ___ftneg@f1:
   594                           	opt stack 0
   595  000013                     ___lldiv@dividend:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599  000013                     	ds	1
   600  000014                     OpenADC@portconfig:
   601                           	opt stack 0
   602  000014                     SetChanADC@channel:
   603                           	opt stack 0
   604  000014                     Delay10KTCYx@unit:
   605                           	opt stack 0
   606  000014                     _isdigit$1742:
   607                           	opt stack 0
   608  000014                     putrs1USART@data:
   609                           	opt stack 0
   610  000014                     puts1USART@data:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x13
   614  000014                     	ds	1
   615  000015                     ??_OpenADC:
   616  000015                     ??_ReadADC:
   617  000015                     Open1USART@config:
   618                           	opt stack 0
   619  000015                     isdigit@c:
   620                           	opt stack 0
   621  000015                     WriteTimer0@timer:
   622                           	opt stack 0
   623  000015                     ___awmod@divisor:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x14
   627  000015                     	ds	1
   628  000016                     ___ftpack@exp:
   629                           	opt stack 0
   630  000016                     __div_to_l_@f2:
   631                           	opt stack 0
   632  000016                     __tdiv_to_l_@f2:
   633                           	opt stack 0
   634  000016                     ___ftge@ff2:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x15
   638  000016                     	ds	1
   639  000017                     ?_GetADCReading:
   640                           	opt stack 0
   641  000017                     OpenADC@config:
   642                           	opt stack 0
   643  000017                     ___awmod@counter:
   644                           	opt stack 0
   645  000017                     ___ftpack@sign:
   646                           	opt stack 0
   647  000017                     ___lldiv@divisor:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x16
   651  000017                     	ds	1
   652  000018                     ??___ftpack:
   653  000018                     ___awmod@sign:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x17
   657  000018                     	ds	1
   658  000019                     ??__tdiv_to_l_:
   659  000019                     ??___ftge:
   660  000019                     ?___awdiv:
   661                           	opt stack 0
   662  000019                     GetADCReading@channel:
   663                           	opt stack 0
   664  000019                     ___awdiv@dividend:
   665                           	opt stack 0
   666  000019                     __div_to_l_@quot:
   667                           	opt stack 0
   668                           
   669                           ; 4 bytes @ 0x18
   670  000019                     	ds	2
   671  00001B                     ?___lltoft:
   672                           	opt stack 0
   673  00001B                     ?___lwtoft:
   674                           	opt stack 0
   675  00001B                     ___awdiv@divisor:
   676                           	opt stack 0
   677  00001B                     ___lwtoft@c:
   678                           	opt stack 0
   679  00001B                     ___lldiv@quotient:
   680                           	opt stack 0
   681  00001B                     ___lltoft@c:
   682                           	opt stack 0
   683                           
   684                           ; 4 bytes @ 0x1A
   685  00001B                     	ds	1
   686  00001C                     __tdiv_to_l_@quot:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x1B
   690  00001C                     	ds	1
   691  00001D                     ___awdiv@counter:
   692                           	opt stack 0
   693  00001D                     __div_to_l_@cntr:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x1C
   697  00001D                     	ds	1
   698  00001E                     ___awdiv@sign:
   699                           	opt stack 0
   700  00001E                     __div_to_l_@exp1:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x1D
   704  00001E                     	ds	1
   705  00001F                     ??___lltoft:
   706  00001F                     ___lldiv@counter:
   707                           	opt stack 0
   708  00001F                     ___awdiv@quotient:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x1E
   712  00001F                     	ds	1
   713  000020                     ?___llmod:
   714                           	opt stack 0
   715  000020                     __tdiv_to_l_@cntr:
   716                           	opt stack 0
   717  000020                     ___llmod@dividend:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x1F
   721  000020                     	ds	1
   722  000021                     ?___wmul:
   723                           	opt stack 0
   724  000021                     __tdiv_to_l_@exp1:
   725                           	opt stack 0
   726  000021                     ___wmul@multiplier:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x20
   730  000021                     	ds	2
   731  000023                     ___lltoft@exp:
   732                           	opt stack 0
   733  000023                     ___wmul@multiplicand:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x22
   737  000023                     	ds	1
   738  000024                     ___llmod@divisor:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x23
   742  000024                     	ds	1
   743  000025                     ___wmul@product:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x24
   747  000025                     	ds	2
   748  000027                     ?___ftmul:
   749                           	opt stack 0
   750  000027                     ___ftmul@f1:
   751                           	opt stack 0
   752                           
   753                           ; 3 bytes @ 0x26
   754  000027                     	ds	1
   755  000028                     ___llmod@counter:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x27
   759  000028                     	ds	2
   760  00002A                     ___ftmul@f2:
   761                           	opt stack 0
   762                           
   763                           ; 3 bytes @ 0x29
   764  00002A                     	ds	3
   765  00002D                     ??___ftmul:
   766                           
   767                           ; 0 bytes @ 0x2C
   768  00002D                     	ds	3
   769  000030                     ___ftmul@exp:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x2F
   773  000030                     	ds	1
   774  000031                     ___ftmul@f3_as_product:
   775                           	opt stack 0
   776                           
   777                           ; 3 bytes @ 0x30
   778  000031                     	ds	3
   779  000034                     ___ftmul@cntr:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x33
   783  000034                     	ds	1
   784  000035                     ___ftmul@sign:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x34
   788  000035                     	ds	1
   789  000036                     ?_fround:
   790                           	opt stack 0
   791  000036                     ?_scale:
   792                           	opt stack 0
   793  000036                     ?___fttol:
   794                           	opt stack 0
   795  000036                     ___fttol@f1:
   796                           	opt stack 0
   797                           
   798                           ; 3 bytes @ 0x35
   799  000036                     	ds	3
   800  000039                     _fround$1998:
   801                           	opt stack 0
   802  000039                     _scale$1999:
   803                           	opt stack 0
   804                           
   805                           ; 3 bytes @ 0x38
   806  000039                     	ds	1
   807  00003A                     ??___fttol:
   808                           
   809                           ; 0 bytes @ 0x39
   810  00003A                     	ds	2
   811  00003C                     scale@scl:
   812                           	opt stack 0
   813  00003C                     _fround$1997:
   814                           	opt stack 0
   815                           
   816                           ; 3 bytes @ 0x3B
   817  00003C                     	ds	3
   818  00003F                     fround@prec:
   819                           	opt stack 0
   820  00003F                     ___fttol@sign1:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x3E
   824  00003F                     	ds	1
   825  000040                     ?___ftadd:
   826                           	opt stack 0
   827  000040                     ___ftadd@f1:
   828                           	opt stack 0
   829  000040                     ___fttol@lval:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x3F
   833  000040                     	ds	3
   834  000043                     ___ftadd@f2:
   835                           	opt stack 0
   836                           
   837                           ; 3 bytes @ 0x42
   838  000043                     	ds	1
   839  000044                     ___fttol@exp1:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x43
   843  000044                     	ds	2
   844  000046                     ??___ftadd:
   845                           
   846                           ; 0 bytes @ 0x45
   847  000046                     	ds	3
   848  000049                     ___ftadd@sign:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x48
   852  000049                     	ds	1
   853  00004A                     ___ftadd@exp2:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x49
   857  00004A                     	ds	1
   858  00004B                     ___ftadd@exp1:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x4A
   862  00004B                     	ds	1
   863  00004C                     postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           
   866                           ; 0 bytes @ 0x4B
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 189 in file "TechDemo3_Test_Routine.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;		None               void
   879 ;; Registers used:
   880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;Total ram usage:        2 bytes
   891 ;; Hardware stack levels required when called:    6
   892 ;; This function calls:
   893 ;;		_ChangeMode
   894 ;;		_ConfigADC
   895 ;;		_ConfigIO
   896 ;;		_ConfigInterrupts
   897 ;;		_ConfigTimer0
   898 ;;		_ConfigUSART
   899 ;;		_Delay10KTCYx
   900 ;;		_Delay1KTCYx
   901 ;;		_GetADCReading
   902 ;;		_GetDistance
   903 ;;		_IlluminateLED
   904 ;;		___ftmul
   905 ;;		___lwtoft
   906 ;;		_putrs1USART
   907 ;;		_puts1USART
   908 ;;		_sprintf
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text0
   915  011088                     __ptext0:
   916                           	opt stack 0
   917  011088                     _main:
   918                           	opt stack 25
   919                           
   920                           ;TechDemo3_Test_Routine.c: 191: ConfigIO();
   921                           
   922                           ;incstack = 0
   923  011088  EC00  F090         	call	_ConfigIO	;wreg free
   924                           
   925                           ;TechDemo3_Test_Routine.c: 192: ConfigADC();
   926  01108C  EC5C  F090         	call	_ConfigADC	;wreg free
   927                           
   928                           ;TechDemo3_Test_Routine.c: 193: ConfigTimer0();
   929  011090  EC28  F090         	call	_ConfigTimer0	;wreg free
   930                           
   931                           ;TechDemo3_Test_Routine.c: 194: ConfigUSART();
   932  011094  ECD0  F08F         	call	_ConfigUSART	;wreg free
   933                           
   934                           ;TechDemo3_Test_Routine.c: 195: ConfigInterrupts();
   935  011098  EC54  F090         	call	_ConfigInterrupts	;wreg free
   936                           
   937                           ;TechDemo3_Test_Routine.c: 197: putrs1USART("ESP Group 16\r\nTech Demo 3 Test Program\r\
      +                          n");
   938  01109C  0E5D               	movlw	low STR_2
   939  01109E  6E14               	movwf	putrs1USART@data,c
   940  0110A0  0EFF               	movlw	high STR_2
   941  0110A2  6E15               	movwf	putrs1USART@data+1,c
   942  0110A4  EC43  F08F         	call	_putrs1USART	;wreg free
   943  0110A8  D000               	goto	l3237
   944  0110AA                     l3237:
   945                           
   946                           ;TechDemo3_Test_Routine.c: 201: putrs1USART("Mode: LINE SENSING\r\n");
   947  0110AA  0EBD               	movlw	low STR_3
   948  0110AC  6E14               	movwf	putrs1USART@data,c
   949  0110AE  0EFF               	movlw	high STR_3
   950  0110B0  6E15               	movwf	putrs1USART@data+1,c
   951  0110B2  EC43  F08F         	call	_putrs1USART	;wreg free
   952                           
   953                           ;TechDemo3_Test_Routine.c: 202: putrs1USART("THRESHOLD\r\n");
   954  0110B6  0EF2               	movlw	low STR_4
   955  0110B8  6E14               	movwf	putrs1USART@data,c
   956  0110BA  0EFF               	movlw	high STR_4
   957  0110BC  6E15               	movwf	putrs1USART@data+1,c
   958  0110BE  EC43  F08F         	call	_putrs1USART	;wreg free
   959                           
   960                           ;TechDemo3_Test_Routine.c: 203: i2 = 0;
   961  0110C2  0E00               	movlw	0
   962  0110C4  0100               	movlb	0	; () banked
   963  0110C6  6F9F               	movwf	_i2& (0+255),b
   964                           
   965                           ;TechDemo3_Test_Routine.c: 205: while (mode == 0) {
   966  0110C8  D067               	goto	l3275
   967  0110CA                     l3243:
   968                           
   969                           ; BSR set to: 0
   970                           ;TechDemo3_Test_Routine.c: 207: LATJ = 0x00;
   971  0110CA  0E00               	movlw	0
   972  0110CC  6E91               	movwf	3985,c	;volatile
   973                           
   974                           ; BSR set to: 0
   975                           ;TechDemo3_Test_Routine.c: 208: LATE = 0xFF;
   976  0110CE  688D               	setf	3981,c	;volatile
   977                           
   978                           ;TechDemo3_Test_Routine.c: 210: for (i = 0; i < 6; i++) {
   979  0110D0  0E00               	movlw	0
   980  0110D2  0100               	movlb	0	; () banked
   981  0110D4  6F9E               	movwf	_i& (0+255),b
   982  0110D6                     l3247:
   983                           
   984                           ; BSR set to: 0
   985  0110D6  0E05               	movlw	5
   986  0110D8  0100               	movlb	0	; () banked
   987  0110DA  659E               	cpfsgt	_i& (0+255),b
   988  0110DC  D001               	goto	l3251
   989                           
   990                           ; BSR set to: 0
   991  0110DE  D05C               	goto	l3275
   992  0110E0                     l3251:
   993                           
   994                           ; BSR set to: 0
   995                           ;TechDemo3_Test_Routine.c: 211: if (i < 5) {
   996  0110E0  0E05               	movlw	5
   997  0110E2  0100               	movlb	0	; () banked
   998  0110E4  619E               	cpfslt	_i& (0+255),b
   999  0110E6  D027               	goto	l3259
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;TechDemo3_Test_Routine.c: 212: sensors[i] = GetADCReading(i);
  1003  0110E8  0100               	movlb	0	; () banked
  1004  0110EA  519E               	movf	_i& (0+255),w,b
  1005  0110EC  ECA5  F08D         	call	_GetADCReading
  1006  0110F0  0100               	movlb	0	; () banked
  1007  0110F2  519E               	movf	_i& (0+255),w,b
  1008  0110F4  0D02               	mullw	2
  1009  0110F6  0E8E               	movlw	low _sensors
  1010  0110F8  24F3               	addwf	prodl,w,c
  1011  0110FA  6ED9               	movwf	fsr2l,c
  1012  0110FC  0E00               	movlw	high _sensors
  1013  0110FE  20F4               	addwfc	prodh,w,c
  1014  011100  6EDA               	movwf	fsr2h,c
  1015  011102  C017  FFDE         	movff	?_GetADCReading,postinc2
  1016  011106  C018  FFDD         	movff	?_GetADCReading+1,postdec2
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;TechDemo3_Test_Routine.c: 213: if (sensors[i] > threshold) {
  1020  01110A  0100               	movlb	0	; () banked
  1021  01110C  519E               	movf	_i& (0+255),w,b
  1022  01110E  0D02               	mullw	2
  1023  011110  0E8E               	movlw	low _sensors
  1024  011112  24F3               	addwf	prodl,w,c
  1025  011114  6ED9               	movwf	fsr2l,c
  1026  011116  0E00               	movlw	high _sensors
  1027  011118  20F4               	addwfc	prodh,w,c
  1028  01111A  6EDA               	movwf	fsr2h,c
  1029  01111C  50DE               	movf	postinc2,w,c
  1030  01111E  0100               	movlb	0	; () banked
  1031  011120  5D9B               	subwf	_threshold& (0+255),w,b
  1032  011122  50DE               	movf	postinc2,w,c
  1033  011124  0100               	movlb	0	; () banked
  1034  011126  599C               	subwfb	(_threshold+1)& (0+255),w,b
  1035  011128  B0D8               	btfsc	status,0,c
  1036  01112A  D00D               	goto	l3261
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;TechDemo3_Test_Routine.c: 214: IlluminateLED(i);
  1040  01112C  0100               	movlb	0	; () banked
  1041  01112E  519E               	movf	_i& (0+255),w,b
  1042  011130  EC24  F08F         	call	_IlluminateLED
  1043                           
  1044                           ;TechDemo3_Test_Routine.c: 215: }
  1045                           ;TechDemo3_Test_Routine.c: 216: } else {
  1046  011134  D008               	goto	l3261
  1047  011136                     l3259:
  1048                           
  1049                           ;TechDemo3_Test_Routine.c: 217: threshold = GetADCReading(5);
  1050  011136  0E05               	movlw	5
  1051  011138  ECA5  F08D         	call	_GetADCReading
  1052  01113C  C017  F09B         	movff	?_GetADCReading,_threshold
  1053  011140  C018  F09C         	movff	?_GetADCReading+1,_threshold+1
  1054  011144  D000               	goto	l3261
  1055  011146                     l3261:
  1056                           
  1057                           ;TechDemo3_Test_Routine.c: 218: }
  1058                           ;TechDemo3_Test_Routine.c: 219: Delay1KTCYx(10);
  1059  011146  0E0A               	movlw	10
  1060  011148  EC1F  F090         	call	_Delay1KTCYx
  1061                           
  1062                           ;TechDemo3_Test_Routine.c: 220: if(i2 >= 110) {
  1063  01114C  0E6D               	movlw	109
  1064  01114E  0100               	movlb	0	; () banked
  1065  011150  659F               	cpfsgt	_i2& (0+255),b
  1066  011152  D01C               	goto	l3271
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;TechDemo3_Test_Routine.c: 221: i2 = 0;
  1070  011154  0E00               	movlw	0
  1071  011156  0100               	movlb	0	; () banked
  1072  011158  6F9F               	movwf	_i2& (0+255),b
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;TechDemo3_Test_Routine.c: 222: sprintf(buffer, "%d\r\n", threshold);
  1076  01115A  0EA1               	movlw	low _buffer
  1077  01115C  0100               	movlb	0	; () banked
  1078  01115E  6F66               	movwf	sprintf@sp& (0+255),b
  1079  011160  0E00               	movlw	high _buffer
  1080  011162  0100               	movlb	0	; () banked
  1081  011164  6F67               	movwf	(sprintf@sp+1)& (0+255),b
  1082  011166  0EED               	movlw	low (STR_8+8)
  1083  011168  0100               	movlb	0	; () banked
  1084  01116A  6F68               	movwf	sprintf@f& (0+255),b
  1085  01116C  0EFF               	movlw	high (STR_8+8)
  1086  01116E  0100               	movlb	0	; () banked
  1087  011170  6F69               	movwf	(sprintf@f+1)& (0+255),b
  1088  011172  C09B  F06A         	movff	_threshold,?_sprintf+4
  1089  011176  C09C  F06B         	movff	_threshold+1,?_sprintf+5
  1090  01117A  EC00  F080         	call	_sprintf	;wreg free
  1091                           
  1092                           ;TechDemo3_Test_Routine.c: 223: puts1USART(buffer);
  1093  01117E  0EA1               	movlw	low _buffer
  1094  011180  6E14               	movwf	puts1USART@data,c
  1095  011182  0E00               	movlw	high _buffer
  1096  011184  6E15               	movwf	puts1USART@data+1,c
  1097  011186  EC72  F08F         	call	_puts1USART	;wreg free
  1098                           
  1099                           ;TechDemo3_Test_Routine.c: 224: }
  1100  01118A  D002               	goto	l141
  1101  01118C                     l3271:
  1102                           
  1103                           ;TechDemo3_Test_Routine.c: 225: else {
  1104                           ;TechDemo3_Test_Routine.c: 226: i2++;
  1105  01118C  0100               	movlb	0	; () banked
  1106  01118E  2B9F               	incf	_i2& (0+255),f,b
  1107  011190                     l141:
  1108  011190  0100               	movlb	0	; () banked
  1109  011192  2B9E               	incf	_i& (0+255),f,b
  1110  011194  D7A0               	goto	l3247
  1111                           
  1112                           ; BSR set to: 0
  1113                           
  1114                           ; BSR set to: 0
  1115  011196  D000               	goto	l3275
  1116  011198                     l3275:
  1117                           
  1118                           ; BSR set to: 0
  1119  011198  0100               	movlb	0	; () banked
  1120  01119A  51A0               	movf	_mode& (0+255),w,b	;volatile
  1121  01119C  B4D8               	btfsc	status,2,c
  1122  01119E  D795               	goto	l3243
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;TechDemo3_Test_Routine.c: 227: }
  1126                           ;TechDemo3_Test_Routine.c: 228: }
  1127                           ;TechDemo3_Test_Routine.c: 229: }
  1128                           ;TechDemo3_Test_Routine.c: 231: ChangeMode();
  1129                           
  1130                           ; BSR set to: 0
  1131  0111A0  EC86  F08F         	call	_ChangeMode	;wreg free
  1132                           
  1133                           ;TechDemo3_Test_Routine.c: 232: putrs1USART("Mode: ULTRASONIC DISTANCE\r\n");
  1134  0111A4  0E86               	movlw	low STR_6
  1135  0111A6  6E14               	movwf	putrs1USART@data,c
  1136  0111A8  0EFF               	movlw	high STR_6
  1137  0111AA  6E15               	movwf	putrs1USART@data+1,c
  1138  0111AC  EC43  F08F         	call	_putrs1USART	;wreg free
  1139                           
  1140                           ;TechDemo3_Test_Routine.c: 233: putrs1USART("DISTANCE (CM)\tTMR0 VALUE\r\n");
  1141  0111B0  0EA2               	movlw	low STR_7
  1142  0111B2  6E14               	movwf	putrs1USART@data,c
  1143  0111B4  0EFF               	movlw	high STR_7
  1144  0111B6  6E15               	movwf	putrs1USART@data+1,c
  1145  0111B8  EC43  F08F         	call	_putrs1USART	;wreg free
  1146                           
  1147                           ;TechDemo3_Test_Routine.c: 235: while (mode == 1) {
  1148  0111BC  D048               	goto	l3301
  1149  0111BE                     l3283:
  1150                           
  1151                           ;TechDemo3_Test_Routine.c: 236: GetDistance();
  1152  0111BE  EC15  F090         	call	_GetDistance	;wreg free
  1153                           
  1154                           ;TechDemo3_Test_Routine.c: 238: LATJbits.LATJ0 = 1;
  1155  0111C2  8091               	bsf	3985,0,c	;volatile
  1156                           
  1157                           ;TechDemo3_Test_Routine.c: 239: Delay1KTCYx(100);
  1158  0111C4  0E64               	movlw	100
  1159  0111C6  EC1F  F090         	call	_Delay1KTCYx
  1160                           
  1161                           ;TechDemo3_Test_Routine.c: 240: LATJbits.LATJ0 = 0;
  1162  0111CA  9091               	bcf	3985,0,c	;volatile
  1163                           
  1164                           ;TechDemo3_Test_Routine.c: 242: while (!(echo_ready == 1));
  1165  0111CC  D000               	goto	l3291
  1166  0111CE                     l3291:
  1167  0111CE  0100               	movlb	0	; () banked
  1168  0111D0  059D               	decf	_echo_ready& (0+255),w,b	;volatile
  1169  0111D2  A4D8               	btfss	status,2,c
  1170  0111D4  D7FC               	goto	l3291
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;TechDemo3_Test_Routine.c: 244: dist_cm = 0.0137 * echo_time;
  1174                           
  1175                           ; BSR set to: 0
  1176  0111D6  C0B1  F01B         	movff	_echo_time,___lwtoft@c	;volatile
  1177  0111DA  C0B2  F01C         	movff	_echo_time+1,___lwtoft@c+1	;volatile
  1178  0111DE  EC9A  F08F         	call	___lwtoft	;wreg free
  1179  0111E2  C01B  F027         	movff	?___lwtoft,___ftmul@f1
  1180  0111E6  C01C  F028         	movff	?___lwtoft+1,___ftmul@f1+1
  1181  0111EA  C01D  F029         	movff	?___lwtoft+2,___ftmul@f1+2
  1182  0111EE  0E76               	movlw	118
  1183  0111F0  6E2A               	movwf	___ftmul@f2,c
  1184  0111F2  0E60               	movlw	96
  1185  0111F4  6E2B               	movwf	___ftmul@f2+1,c
  1186  0111F6  0E3C               	movlw	60
  1187  0111F8  6E2C               	movwf	___ftmul@f2+2,c
  1188  0111FA  EC1F  F08B         	call	___ftmul	;wreg free
  1189  0111FE  C027  F098         	movff	?___ftmul,_dist_cm
  1190  011202  C028  F099         	movff	?___ftmul+1,_dist_cm+1
  1191  011206  C029  F09A         	movff	?___ftmul+2,_dist_cm+2
  1192                           
  1193                           ;TechDemo3_Test_Routine.c: 246: sprintf(buffer, "%.2f cm\t%d\r\n", dist_cm, echo_time);
  1194  01120A  0EA1               	movlw	low _buffer
  1195  01120C  0100               	movlb	0	; () banked
  1196  01120E  6F66               	movwf	sprintf@sp& (0+255),b
  1197  011210  0E00               	movlw	high _buffer
  1198  011212  0100               	movlb	0	; () banked
  1199  011214  6F67               	movwf	(sprintf@sp+1)& (0+255),b
  1200  011216  0EE5               	movlw	low STR_8
  1201  011218  0100               	movlb	0	; () banked
  1202  01121A  6F68               	movwf	sprintf@f& (0+255),b
  1203  01121C  0EFF               	movlw	high STR_8
  1204  01121E  0100               	movlb	0	; () banked
  1205  011220  6F69               	movwf	(sprintf@f+1)& (0+255),b
  1206  011222  C098  F06A         	movff	_dist_cm,?_sprintf+4
  1207  011226  C099  F06B         	movff	_dist_cm+1,?_sprintf+5
  1208  01122A  C09A  F06C         	movff	_dist_cm+2,?_sprintf+6
  1209  01122E  C0B1  F06D         	movff	_echo_time,?_sprintf+7	;volatile
  1210  011232  C0B2  F06E         	movff	_echo_time+1,?_sprintf+8	;volatile
  1211  011236  EC00  F080         	call	_sprintf	;wreg free
  1212                           
  1213                           ;TechDemo3_Test_Routine.c: 247: puts1USART(buffer);
  1214  01123A  0EA1               	movlw	low _buffer
  1215  01123C  6E14               	movwf	puts1USART@data,c
  1216  01123E  0E00               	movlw	high _buffer
  1217  011240  6E15               	movwf	puts1USART@data+1,c
  1218  011242  EC72  F08F         	call	_puts1USART	;wreg free
  1219                           
  1220                           ;TechDemo3_Test_Routine.c: 249: Delay10KTCYx(100);
  1221  011246  0E64               	movlw	100
  1222  011248  ECDE  F08F         	call	_Delay10KTCYx
  1223  01124C  D000               	goto	l3301
  1224  01124E                     l3301:
  1225  01124E  0100               	movlb	0	; () banked
  1226  011250  05A0               	decf	_mode& (0+255),w,b	;volatile
  1227  011252  B4D8               	btfsc	status,2,c
  1228  011254  D7B4               	goto	l3283
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;TechDemo3_Test_Routine.c: 251: }
  1232                           ;TechDemo3_Test_Routine.c: 253: ChangeMode();
  1233                           
  1234                           ; BSR set to: 0
  1235  011256  EC86  F08F         	call	_ChangeMode	;wreg free
  1236  01125A  D727               	goto	l3237
  1237  01125C  EF0C  F000         	goto	start
  1238  011260                     __end_of_main:
  1239                           	opt stack 0
  1240                           prodh	equ	0xFF4
  1241                           prodl	equ	0xFF3
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           postinc2	equ	0xFDE
  1245                           postdec2	equ	0xFDD
  1246                           fsr2h	equ	0xFDA
  1247                           fsr2l	equ	0xFD9
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _sprintf *****************
  1251 ;; Defined at:
  1252 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  sp              2    6[BANK0 ] PTR unsigned char 
  1255 ;;		 -> buffer(16), 
  1256 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  1257 ;;		 -> STR_8(13), STR_5(5), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  val             4   34[BANK0 ] unsigned long 
  1260 ;;  tmpval          4   30[BANK0 ] struct .
  1261 ;;  fval            3   40[BANK0 ] struct .
  1262 ;;  cp              3    0        PTR const unsigned char 
  1263 ;;  prec            2   38[BANK0 ] int 
  1264 ;;  exp             2   28[BANK0 ] int 
  1265 ;;  flag            2   26[BANK0 ] unsigned short 
  1266 ;;  ap              2   24[BANK0 ] PTR void [1]
  1267 ;;		 -> ?_sprintf(2), 
  1268 ;;  len             2    0        unsigned int 
  1269 ;;  width           2    0        int 
  1270 ;;  c               1   43[BANK0 ] char 
  1271 ;;  d               1    0        unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    6[BANK0 ] int 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1281 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;Total ram usage:       38 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    5
  1288 ;; This function calls:
  1289 ;;		___awdiv
  1290 ;;		___ftadd
  1291 ;;		___ftge
  1292 ;;		___ftmul
  1293 ;;		___ftneg
  1294 ;;		___ftsub
  1295 ;;		___fttol
  1296 ;;		___lldiv
  1297 ;;		___llmod
  1298 ;;		___lltoft
  1299 ;;		___wmul
  1300 ;;		__div_to_l_
  1301 ;;		__tdiv_to_l_
  1302 ;;		_fround
  1303 ;;		_isdigit
  1304 ;;		_scale
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text1
  1311  010000                     __ptext1:
  1312                           	opt stack 0
  1313  010000                     _sprintf:
  1314                           	opt stack 25
  1315                           
  1316                           ;doprnt.c: 494: va_list ap;
  1317                           ;doprnt.c: 499: signed char c;
  1318                           ;doprnt.c: 501: int width;
  1319                           ;doprnt.c: 504: int prec;
  1320                           ;doprnt.c: 508: unsigned short flag;
  1321                           ;doprnt.c: 515: char d;
  1322                           ;doprnt.c: 516: double fval;
  1323                           ;doprnt.c: 517: int exp;
  1324                           ;doprnt.c: 523: union {
  1325                           ;doprnt.c: 524: unsigned long vd;
  1326                           ;doprnt.c: 525: double integ;
  1327                           ;doprnt.c: 526: } tmpval;
  1328                           ;doprnt.c: 528: unsigned long val;
  1329                           ;doprnt.c: 529: unsigned len;
  1330                           ;doprnt.c: 530: const char * cp;
  1331                           ;doprnt.c: 533: *ap = __va_start();
  1332                           
  1333                           ;incstack = 0
  1334  010000  0E6A               	movlw	low (?_sprintf+4)
  1335  010002  0100               	movlb	0	; () banked
  1336  010004  6F78               	movwf	sprintf@ap& (0+255),b
  1337  010006  0E00               	movlw	high (?_sprintf+4)
  1338  010008  0100               	movlb	0	; () banked
  1339  01000A  6F79               	movwf	(sprintf@ap+1)& (0+255),b
  1340                           
  1341                           ;doprnt.c: 536: while(c = *f++) {
  1342  01000C  EFE4  F084         	goto	l3103
  1343  010010                     l2873:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;doprnt.c: 538: if(c != '%')
  1347  010010  0E25               	movlw	37
  1348  010012  0100               	movlb	0	; () banked
  1349  010014  198B               	xorwf	sprintf@c& (0+255),w,b
  1350  010016  B4D8               	btfsc	status,2,c
  1351  010018  D00B               	goto	l2879
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;doprnt.c: 540: {
  1355                           ;doprnt.c: 541: ((*sp++ = (c)));
  1356  01001A  C066  FFD9         	movff	sprintf@sp,fsr2l
  1357  01001E  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  1358  010022  C08B  FFDF         	movff	sprintf@c,indf2
  1359                           
  1360                           ; BSR set to: 0
  1361  010026  0100               	movlb	0	; () banked
  1362  010028  4B66               	infsnz	sprintf@sp& (0+255),f,b
  1363  01002A  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  1364                           
  1365                           ;doprnt.c: 542: continue;
  1366  01002C  EFE4  F084         	goto	l3103
  1367  010030                     l2879:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;doprnt.c: 543: }
  1371                           ;doprnt.c: 548: flag = 0;
  1372  010030  0E00               	movlw	0
  1373  010032  0100               	movlb	0	; () banked
  1374  010034  6F7B               	movwf	(sprintf@flag+1)& (0+255),b
  1375  010036  0E00               	movlw	0
  1376  010038  6F7A               	movwf	sprintf@flag& (0+255),b
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;doprnt.c: 611: if(*f == '.') {
  1380  01003A  C068  FFF6         	movff	sprintf@f,tblptrl
  1381  01003E  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1382  010042                     	if	0	;tblptru may be non-zero
  1383  010042                     	endif
  1384  010042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1385  010042  0E00               	movlw	low (__mediumconst shr (0+16))
  1386  010044  6EF8               	movwf	tblptru,c
  1387  010046                     	endif
  1388  010046  0008               	tblrd		*
  1389  010048  50F5               	movf	tablat,w,c
  1390  01004A  0A2E               	xorlw	46
  1391  01004C  A4D8               	btfss	status,2,c
  1392  01004E  D03A               	goto	l2893
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;doprnt.c: 612: flag |= 0x4000;
  1396  010050  0100               	movlb	0	; () banked
  1397  010052  8D7B               	bsf	(sprintf@flag+1)& (0+255),6,b
  1398                           
  1399                           ;doprnt.c: 613: f++;
  1400  010054  0100               	movlb	0	; () banked
  1401  010056  4B68               	infsnz	sprintf@f& (0+255),f,b
  1402  010058  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;doprnt.c: 620: {
  1406                           ;doprnt.c: 621: prec = 0;
  1407  01005A  0E00               	movlw	0
  1408  01005C  0100               	movlb	0	; () banked
  1409  01005E  6F87               	movwf	(sprintf@prec+1)& (0+255),b
  1410  010060  0E00               	movlw	0
  1411  010062  6F86               	movwf	sprintf@prec& (0+255),b
  1412                           
  1413                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1414  010064  D021               	goto	l2891
  1415  010066                     l2887:
  1416                           
  1417                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1418  010066  C086  F021         	movff	sprintf@prec,___wmul@multiplier
  1419  01006A  C087  F022         	movff	sprintf@prec+1,___wmul@multiplier+1
  1420  01006E  0E00               	movlw	0
  1421  010070  6E24               	movwf	___wmul@multiplicand+1,c
  1422  010072  0E0A               	movlw	10
  1423  010074  6E23               	movwf	___wmul@multiplicand,c
  1424  010076  EC5E  F08F         	call	___wmul	;wreg free
  1425  01007A  C068  FFF6         	movff	sprintf@f,tblptrl
  1426  01007E  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1427  010082                     	if	0	;tblptru may be non-zero
  1428  010082                     	endif
  1429  010082                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1430  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  1431  010084  6EF8               	movwf	tblptru,c
  1432  010086                     	endif
  1433  010086  0008               	tblrd		*
  1434  010088  50F5               	movf	tablat,w,c
  1435  01008A  2621               	addwf	?___wmul,f,c
  1436  01008C  0E00               	movlw	0
  1437  01008E  2222               	addwfc	?___wmul+1,f,c
  1438  010090  0ED0               	movlw	208
  1439  010092  2421               	addwf	?___wmul,w,c
  1440  010094  0100               	movlb	0	; () banked
  1441  010096  6F86               	movwf	sprintf@prec& (0+255),b
  1442  010098  0EFF               	movlw	255
  1443  01009A  2022               	addwfc	?___wmul+1,w,c
  1444  01009C  0100               	movlb	0	; () banked
  1445  01009E  6F87               	movwf	(sprintf@prec+1)& (0+255),b
  1446                           
  1447                           ; BSR set to: 0
  1448  0100A0  0100               	movlb	0	; () banked
  1449  0100A2  4B68               	infsnz	sprintf@f& (0+255),f,b
  1450  0100A4  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1451  0100A6  D000               	goto	l2891
  1452  0100A8                     l2891:
  1453                           
  1454                           ; BSR set to: 0
  1455  0100A8  C068  FFF6         	movff	sprintf@f,tblptrl
  1456  0100AC  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1457  0100B0                     	if	0	;tblptru may be non-zero
  1458  0100B0                     	endif
  1459  0100B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1460  0100B0  0E00               	movlw	low (__mediumconst shr (0+16))
  1461  0100B2  6EF8               	movwf	tblptru,c
  1462  0100B4                     	endif
  1463  0100B4  0008               	tblrd		*
  1464  0100B6  50F5               	movf	tablat,w,c
  1465  0100B8  ECBF  F08F         	call	_isdigit
  1466  0100BC  A0D8               	btfss	status,0,c
  1467  0100BE  D012               	goto	l2901
  1468  0100C0  D7D2               	goto	l2887
  1469                           
  1470                           ;doprnt.c: 624: }
  1471                           ;doprnt.c: 625: } else {
  1472  0100C2  D010               	goto	l2901
  1473  0100C4                     l2893:
  1474                           
  1475                           ;doprnt.c: 626: prec = 0;
  1476  0100C4  0E00               	movlw	0
  1477  0100C6  0100               	movlb	0	; () banked
  1478  0100C8  6F87               	movwf	(sprintf@prec+1)& (0+255),b
  1479  0100CA  0E00               	movlw	0
  1480  0100CC  6F86               	movwf	sprintf@prec& (0+255),b
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;doprnt.c: 628: flag |= 0x1000;
  1484  0100CE  0100               	movlb	0	; () banked
  1485  0100D0  897B               	bsf	(sprintf@flag+1)& (0+255),4,b
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;doprnt.c: 630: }
  1489                           ;doprnt.c: 635: switch(c = *f++) {
  1490  0100D2  D008               	goto	l2901
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;doprnt.c: 638: goto alldone;
  1494                           
  1495                           ;doprnt.c: 637: case 0:
  1496  0100D4  EFF7  F084         	goto	l3105
  1497  0100D8                     l2897:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;doprnt.c: 663: flag |= 0x400;
  1501  0100D8  0100               	movlb	0	; () banked
  1502  0100DA  857B               	bsf	(sprintf@flag+1)& (0+255),2,b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;doprnt.c: 698: case 'i':
  1506                           ;doprnt.c: 699: break;
  1507                           
  1508                           ; BSR set to: 0
  1509                           
  1510                           ;doprnt.c: 697: case 'd':
  1511                           
  1512                           ;doprnt.c: 664: break;
  1513  0100DC  D01F               	goto	l2903
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;doprnt.c: 813: continue;
  1517                           
  1518                           ;doprnt.c: 802: default:
  1519  0100DE  EFE4  F084         	goto	l3103
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;doprnt.c: 822: }
  1523  0100E2  D01C               	goto	l2903
  1524  0100E4                     l2901:
  1525  0100E4  C068  FFF6         	movff	sprintf@f,tblptrl
  1526  0100E8  C069  FFF7         	movff	sprintf@f+1,tblptrh
  1527  0100EC  0100               	movlb	0	; () banked
  1528  0100EE  4B68               	infsnz	sprintf@f& (0+255),f,b
  1529  0100F0  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  1530  0100F2                     	if	0	;tblptru may be non-zero
  1531  0100F2                     	endif
  1532  0100F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1533  0100F2  0E00               	movlw	low (__mediumconst shr (0+16))
  1534  0100F4  6EF8               	movwf	tblptru,c
  1535  0100F6                     	endif
  1536  0100F6  0008               	tblrd		*
  1537  0100F8  CFF5 F08B          	movff	tablat,sprintf@c
  1538  0100FC  0100               	movlb	0	; () banked
  1539  0100FE  518B               	movf	sprintf@c& (0+255),w,b
  1540                           
  1541                           ; Switch size 1, requested type "space"
  1542                           ; Number of cases is 4, Range of values is 0 to 105
  1543                           ; switch strategies available:
  1544                           ; Name         Instructions Cycles
  1545                           ; simple_byte           13     7 (average)
  1546                           ;	Chosen strategy is simple_byte
  1547  010100  0A00               	xorlw	0	; case 0
  1548  010102  B4D8               	btfsc	status,2,c
  1549  010104  EFF7  F084         	goto	l3105
  1550  010108  0A64               	xorlw	100	; case 100
  1551  01010A  B4D8               	btfsc	status,2,c
  1552  01010C  D007               	goto	l2903
  1553  01010E  0A02               	xorlw	2	; case 102
  1554  010110  B4D8               	btfsc	status,2,c
  1555  010112  D7E2               	goto	l2897
  1556  010114  0A0F               	xorlw	15	; case 105
  1557  010116  A4D8               	btfss	status,2,c
  1558  010118  EFE4  F084         	goto	l3103
  1559  01011C                     l2903:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;doprnt.c: 825: if(flag & (0x700)) {
  1563  01011C  0E07               	movlw	7
  1564  01011E  0100               	movlb	0	; () banked
  1565  010120  157B               	andwf	(sprintf@flag+1)& (0+255),w,b
  1566  010122  B4D8               	btfsc	status,2,c
  1567  010124  D34F               	goto	l3051
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;doprnt.c: 827: if(flag & 0x1000)
  1571  010126  0100               	movlb	0	; () banked
  1572  010128  A97B               	btfss	(sprintf@flag+1)& (0+255),4,b
  1573  01012A  D006               	goto	l2909
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;doprnt.c: 829: prec = 6;
  1577  01012C  0E00               	movlw	0
  1578  01012E  0100               	movlb	0	; () banked
  1579  010130  6F87               	movwf	(sprintf@prec+1)& (0+255),b
  1580  010132  0E06               	movlw	6
  1581  010134  6F86               	movwf	sprintf@prec& (0+255),b
  1582  010136  D000               	goto	l2909
  1583  010138                     l2909:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1587  010138  C078  FFD9         	movff	sprintf@ap,fsr2l
  1588  01013C  C079  FFDA         	movff	sprintf@ap+1,fsr2h
  1589  010140  CFDE F088          	movff	postinc2,sprintf@fval
  1590  010144  CFDE F089          	movff	postinc2,sprintf@fval+1
  1591  010148  CFDD F08A          	movff	postdec2,sprintf@fval+2
  1592                           
  1593                           ; BSR set to: 0
  1594  01014C  0E03               	movlw	3
  1595  01014E  0100               	movlb	0	; () banked
  1596  010150  2778               	addwf	sprintf@ap& (0+255),f,b
  1597  010152  0E00               	movlw	0
  1598  010154  2379               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;doprnt.c: 831: if(fval < 0.0) {
  1602  010156  0100               	movlb	0	; () banked
  1603  010158  AF8A               	btfss	(sprintf@fval+2)& (0+255),7,b
  1604  01015A  D012               	goto	l2919
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;doprnt.c: 832: fval = -fval;
  1608  01015C  C088  F013         	movff	sprintf@fval,___ftneg@f1
  1609  010160  C089  F014         	movff	sprintf@fval+1,___ftneg@f1+1
  1610  010164  C08A  F015         	movff	sprintf@fval+2,___ftneg@f1+2
  1611  010168  ECAD  F08F         	call	___ftneg	;wreg free
  1612  01016C  C013  F088         	movff	?___ftneg,sprintf@fval
  1613  010170  C014  F089         	movff	?___ftneg+1,sprintf@fval+1
  1614  010174  C015  F08A         	movff	?___ftneg+2,sprintf@fval+2
  1615                           
  1616                           ;doprnt.c: 833: flag |= 0x03;
  1617  010178  0E03               	movlw	3
  1618  01017A  0100               	movlb	0	; () banked
  1619  01017C  137A               	iorwf	sprintf@flag& (0+255),f,b
  1620  01017E  D000               	goto	l2919
  1621  010180                     l2919:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;doprnt.c: 834: }
  1625                           ;doprnt.c: 835: exp = 0;
  1626  010180  0E00               	movlw	0
  1627  010182  0100               	movlb	0	; () banked
  1628  010184  6F7D               	movwf	(sprintf@exp+1)& (0+255),b
  1629  010186  0E00               	movlw	0
  1630  010188  6F7C               	movwf	sprintf@exp& (0+255),b
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;doprnt.c: 836: if( fval!=0) {
  1634  01018A  0100               	movlb	0	; () banked
  1635  01018C  5188               	movf	sprintf@fval& (0+255),w,b
  1636  01018E  0100               	movlb	0	; () banked
  1637  010190  1189               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1638  010192  0100               	movlb	0	; () banked
  1639  010194  118A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1640  010196  B4D8               	btfsc	status,2,c
  1641  010198  D093               	goto	l2947
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1645  01019A  0E82               	movlw	130
  1646  01019C  0100               	movlb	0	; () banked
  1647  01019E  6F6F               	movwf	??_sprintf& (0+255),b
  1648  0101A0  0EFF               	movlw	255
  1649  0101A2  0100               	movlb	0	; () banked
  1650  0101A4  6F70               	movwf	(??_sprintf+1)& (0+255),b
  1651  0101A6  C088  F071         	movff	sprintf@fval,??_sprintf+2
  1652  0101AA  C089  F072         	movff	sprintf@fval+1,??_sprintf+3
  1653  0101AE  C08A  F073         	movff	sprintf@fval+2,??_sprintf+4
  1654  0101B2  C08B  F074         	movff	sprintf@fval+3,??_sprintf+5
  1655  0101B6  0E10               	movlw	16
  1656  0101B8  D006               	goto	u2780
  1657  0101BA                     u2785:
  1658  0101BA  0100               	movlb	0	; () banked
  1659  0101BC  90D8               	bcf	status,0,c
  1660  0101BE  3374               	rrcf	(??_sprintf+5)& (0+255),f,b
  1661  0101C0  3373               	rrcf	(??_sprintf+4)& (0+255),f,b
  1662  0101C2  3372               	rrcf	(??_sprintf+3)& (0+255),f,b
  1663  0101C4  3371               	rrcf	(??_sprintf+2)& (0+255),f,b
  1664  0101C6                     u2780:
  1665  0101C6  2EE8               	decfsz	wreg,f,c
  1666  0101C8  D7F8               	goto	u2785
  1667  0101CA  0100               	movlb	0	; () banked
  1668  0101CC  5171               	movf	(??_sprintf+2)& (0+255),w,b
  1669  0101CE  0100               	movlb	0	; () banked
  1670  0101D0  256F               	addwf	??_sprintf& (0+255),w,b
  1671  0101D2  0100               	movlb	0	; () banked
  1672  0101D4  6F7C               	movwf	sprintf@exp& (0+255),b
  1673  0101D6  0E00               	movlw	0
  1674  0101D8  0100               	movlb	0	; () banked
  1675  0101DA  2170               	addwfc	(??_sprintf+1)& (0+255),w,b
  1676  0101DC  0100               	movlb	0	; () banked
  1677  0101DE  6F7D               	movwf	(sprintf@exp+1)& (0+255),b
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;doprnt.c: 838: exp--;
  1681  0101E0  0100               	movlb	0	; () banked
  1682  0101E2  077C               	decf	sprintf@exp& (0+255),f,b
  1683  0101E4  A0D8               	btfss	status,0,c
  1684  0101E6  077D               	decf	(sprintf@exp+1)& (0+255),f,b
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;doprnt.c: 839: exp *= 3;
  1688  0101E8  C07C  F021         	movff	sprintf@exp,___wmul@multiplier
  1689  0101EC  C07D  F022         	movff	sprintf@exp+1,___wmul@multiplier+1
  1690  0101F0  0E00               	movlw	0
  1691  0101F2  6E24               	movwf	___wmul@multiplicand+1,c
  1692  0101F4  0E03               	movlw	3
  1693  0101F6  6E23               	movwf	___wmul@multiplicand,c
  1694  0101F8  EC5E  F08F         	call	___wmul	;wreg free
  1695  0101FC  C021  F07C         	movff	?___wmul,sprintf@exp
  1696  010200  C022  F07D         	movff	?___wmul+1,sprintf@exp+1
  1697                           
  1698                           ;doprnt.c: 840: exp /= 10;
  1699  010204  C07C  F019         	movff	sprintf@exp,___awdiv@dividend
  1700  010208  C07D  F01A         	movff	sprintf@exp+1,___awdiv@dividend+1
  1701  01020C  0E00               	movlw	0
  1702  01020E  6E1C               	movwf	___awdiv@divisor+1,c
  1703  010210  0E0A               	movlw	10
  1704  010212  6E1B               	movwf	___awdiv@divisor,c
  1705  010214  ECC9  F08C         	call	___awdiv	;wreg free
  1706  010218  C019  F07C         	movff	?___awdiv,sprintf@exp
  1707  01021C  C01A  F07D         	movff	?___awdiv+1,sprintf@exp+1
  1708                           
  1709                           ;doprnt.c: 841: if(exp < 0)
  1710  010220  0100               	movlb	0	; () banked
  1711  010222  AF7D               	btfss	(sprintf@exp+1)& (0+255),7,b
  1712  010224  D005               	goto	l2935
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;doprnt.c: 842: exp--;
  1716  010226  0100               	movlb	0	; () banked
  1717  010228  077C               	decf	sprintf@exp& (0+255),f,b
  1718  01022A  A0D8               	btfss	status,0,c
  1719  01022C  077D               	decf	(sprintf@exp+1)& (0+255),f,b
  1720  01022E  D000               	goto	l2935
  1721  010230                     l2935:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1725  010230  0100               	movlb	0	; () banked
  1726  010232  517C               	movf	sprintf@exp& (0+255),w,b
  1727  010234  0800               	sublw	0
  1728  010236  ECFF  F084         	call	_scale
  1729  01023A  C036  F07E         	movff	?_scale,sprintf@tmpval
  1730  01023E  C037  F07F         	movff	?_scale+1,sprintf@tmpval+1
  1731  010242  C038  F080         	movff	?_scale+2,sprintf@tmpval+2
  1732                           
  1733                           ;doprnt.c: 847: tmpval.integ *= fval;
  1734  010246  C07E  F027         	movff	sprintf@tmpval,___ftmul@f1
  1735  01024A  C07F  F028         	movff	sprintf@tmpval+1,___ftmul@f1+1
  1736  01024E  C080  F029         	movff	sprintf@tmpval+2,___ftmul@f1+2
  1737  010252  C088  F02A         	movff	sprintf@fval,___ftmul@f2
  1738  010256  C089  F02B         	movff	sprintf@fval+1,___ftmul@f2+1
  1739  01025A  C08A  F02C         	movff	sprintf@fval+2,___ftmul@f2+2
  1740  01025E  EC1F  F08B         	call	___ftmul	;wreg free
  1741  010262  C027  F07E         	movff	?___ftmul,sprintf@tmpval
  1742  010266  C028  F07F         	movff	?___ftmul+1,sprintf@tmpval+1
  1743  01026A  C029  F080         	movff	?___ftmul+2,sprintf@tmpval+2
  1744                           
  1745                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1746  01026E  C07E  F013         	movff	sprintf@tmpval,___ftge@ff1
  1747  010272  C07F  F014         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1748  010276  C080  F015         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1749  01027A  0E00               	movlw	0
  1750  01027C  6E16               	movwf	___ftge@ff2,c
  1751  01027E  0E80               	movlw	128
  1752  010280  6E17               	movwf	___ftge@ff2+1,c
  1753  010282  0E3F               	movlw	63
  1754  010284  6E18               	movwf	___ftge@ff2+2,c
  1755  010286  EC14  F08D         	call	___ftge	;wreg free
  1756  01028A  B0D8               	btfsc	status,0,c
  1757  01028C  D005               	goto	l2943
  1758                           
  1759                           ;doprnt.c: 849: exp--;
  1760  01028E  0100               	movlb	0	; () banked
  1761  010290  077C               	decf	sprintf@exp& (0+255),f,b
  1762  010292  A0D8               	btfss	status,0,c
  1763  010294  077D               	decf	(sprintf@exp+1)& (0+255),f,b
  1764  010296  D014               	goto	l2947
  1765  010298                     l2943:
  1766                           
  1767                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1768  010298  C07E  F013         	movff	sprintf@tmpval,___ftge@ff1
  1769  01029C  C07F  F014         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1770  0102A0  C080  F015         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1771  0102A4  0E00               	movlw	0
  1772  0102A6  6E16               	movwf	___ftge@ff2,c
  1773  0102A8  0E20               	movlw	32
  1774  0102AA  6E17               	movwf	___ftge@ff2+1,c
  1775  0102AC  0E41               	movlw	65
  1776  0102AE  6E18               	movwf	___ftge@ff2+2,c
  1777  0102B0  EC14  F08D         	call	___ftge	;wreg free
  1778  0102B4  A0D8               	btfss	status,0,c
  1779  0102B6  D004               	goto	l2947
  1780                           
  1781                           ;doprnt.c: 851: exp++;
  1782  0102B8  0100               	movlb	0	; () banked
  1783  0102BA  4B7C               	infsnz	sprintf@exp& (0+255),f,b
  1784  0102BC  2B7D               	incf	(sprintf@exp+1)& (0+255),f,b
  1785                           
  1786                           ; BSR set to: 0
  1787                           
  1788                           ; BSR set to: 0
  1789  0102BE  D000               	goto	l2947
  1790  0102C0                     l2947:
  1791                           
  1792                           ;doprnt.c: 852: }
  1793                           ;doprnt.c: 1112: if(prec <= 12)
  1794  0102C0  0100               	movlb	0	; () banked
  1795  0102C2  BF87               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1796  0102C4  D008               	goto	l2949
  1797  0102C6  0100               	movlb	0	; () banked
  1798  0102C8  5187               	movf	(sprintf@prec+1)& (0+255),w,b
  1799  0102CA  E11E               	bnz	l2951
  1800  0102CC  0E0D               	movlw	13
  1801  0102CE  0100               	movlb	0	; () banked
  1802  0102D0  5D86               	subwf	sprintf@prec& (0+255),w,b
  1803  0102D2  B0D8               	btfsc	status,0,c
  1804  0102D4  D019               	goto	l2951
  1805  0102D6                     l2949:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;doprnt.c: 1113: fval += fround(prec);
  1809  0102D6  C088  F040         	movff	sprintf@fval,___ftadd@f1
  1810  0102DA  C089  F041         	movff	sprintf@fval+1,___ftadd@f1+1
  1811  0102DE  C08A  F042         	movff	sprintf@fval+2,___ftadd@f1+2
  1812  0102E2  0100               	movlb	0	; () banked
  1813  0102E4  5186               	movf	sprintf@prec& (0+255),w,b
  1814  0102E6  EC10  F087         	call	_fround
  1815  0102EA  C036  F043         	movff	?_fround,___ftadd@f2
  1816  0102EE  C037  F044         	movff	?_fround+1,___ftadd@f2+1
  1817  0102F2  C038  F045         	movff	?_fround+2,___ftadd@f2+2
  1818  0102F6  EC30  F089         	call	___ftadd	;wreg free
  1819  0102FA  C040  F088         	movff	?___ftadd,sprintf@fval
  1820  0102FE  C041  F089         	movff	?___ftadd+1,sprintf@fval+1
  1821  010302  C042  F08A         	movff	?___ftadd+2,sprintf@fval+2
  1822  010306  D000               	goto	l2951
  1823  010308                     l2951:
  1824                           
  1825                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1826  010308  0100               	movlb	0	; () banked
  1827  01030A  BF7D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1828  01030C  D008               	goto	l2953
  1829  01030E  0100               	movlb	0	; () banked
  1830  010310  517D               	movf	(sprintf@exp+1)& (0+255),w,b
  1831  010312  E128               	bnz	l2959
  1832  010314  0E0A               	movlw	10
  1833  010316  0100               	movlb	0	; () banked
  1834  010318  5D7C               	subwf	sprintf@exp& (0+255),w,b
  1835  01031A  B0D8               	btfsc	status,0,c
  1836  01031C  D023               	goto	l2959
  1837  01031E                     l2953:
  1838                           
  1839                           ; BSR set to: 0
  1840  01031E  0100               	movlb	0	; () banked
  1841  010320  5188               	movf	sprintf@fval& (0+255),w,b
  1842  010322  0100               	movlb	0	; () banked
  1843  010324  1189               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1844  010326  0100               	movlb	0	; () banked
  1845  010328  118A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1846  01032A  B4D8               	btfsc	status,2,c
  1847  01032C  D077               	goto	l2973
  1848                           
  1849                           ; BSR set to: 0
  1850  01032E  C088  F036         	movff	sprintf@fval,___fttol@f1
  1851  010332  C089  F037         	movff	sprintf@fval+1,___fttol@f1+1
  1852  010336  C08A  F038         	movff	sprintf@fval+2,___fttol@f1+2
  1853  01033A  EC9B  F08B         	call	___fttol	;wreg free
  1854  01033E  5036               	movf	?___fttol,w,c
  1855  010340  1037               	iorwf	?___fttol+1,w,c
  1856  010342  1038               	iorwf	?___fttol+2,w,c
  1857  010344  1039               	iorwf	?___fttol+3,w,c
  1858  010346  A4D8               	btfss	status,2,c
  1859  010348  D069               	goto	l2973
  1860  01034A  0100               	movlb	0	; () banked
  1861  01034C  BF7D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1862  01034E  D066               	goto	l2973
  1863  010350  0100               	movlb	0	; () banked
  1864  010352  517D               	movf	(sprintf@exp+1)& (0+255),w,b
  1865  010354  E107               	bnz	l2959
  1866  010356  0E02               	movlw	2
  1867  010358  0100               	movlb	0	; () banked
  1868  01035A  5D7C               	subwf	sprintf@exp& (0+255),w,b
  1869  01035C  B0D8               	btfsc	status,0,c
  1870  01035E  D002               	goto	l2959
  1871  010360  D05D               	goto	l2973
  1872  010362  D000               	goto	l2959
  1873  010364                     l2959:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1877  010364  C07E  F013         	movff	sprintf@tmpval,___ftge@ff1
  1878  010368  C07F  F014         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1879  01036C  C080  F015         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1880  010370  0E70               	movlw	112
  1881  010372  6E16               	movwf	___ftge@ff2,c
  1882  010374  0E89               	movlw	137
  1883  010376  6E17               	movwf	___ftge@ff2+1,c
  1884  010378  0E40               	movlw	64
  1885  01037A  6E18               	movwf	___ftge@ff2+2,c
  1886  01037C  EC14  F08D         	call	___ftge	;wreg free
  1887  010380  B0D8               	btfsc	status,0,c
  1888  010382  D003               	goto	l2963
  1889                           
  1890                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1891  010384  0100               	movlb	0	; () banked
  1892  010386  0EF7               	movlw	247
  1893  010388  D002               	goto	L1
  1894  01038A                     l2963:
  1895                           
  1896                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1897  01038A  0100               	movlb	0	; () banked
  1898  01038C  0EF8               	movlw	248
  1899  01038E                     L1:
  1900  01038E  277C               	addwf	sprintf@exp& (0+255),f,b
  1901  010390  0EFF               	movlw	255
  1902  010392  237D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1903  010394  D000               	goto	l2965
  1904  010396                     l2965:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;doprnt.c: 1124: }
  1908                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1909  010396  0100               	movlb	0	; () banked
  1910  010398  517C               	movf	sprintf@exp& (0+255),w,b
  1911  01039A  ECFF  F084         	call	_scale
  1912  01039E  C036  F07E         	movff	?_scale,sprintf@tmpval
  1913  0103A2  C037  F07F         	movff	?_scale+1,sprintf@tmpval+1
  1914  0103A6  C038  F080         	movff	?_scale+2,sprintf@tmpval+2
  1915                           
  1916                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1917  0103AA  D017               	goto	l2969
  1918  0103AC  C088  F013         	movff	sprintf@fval,__div_to_l_@f1
  1919  0103B0  C089  F014         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1920  0103B4  C08A  F015         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1921  0103B8  C07E  F016         	movff	sprintf@tmpval,__div_to_l_@f2
  1922  0103BC  C07F  F017         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1923  0103C0  C080  F018         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1924  0103C4  EC9A  F08A         	call	__div_to_l_	;wreg free
  1925  0103C8  C013  F082         	movff	?__div_to_l_,sprintf@val
  1926  0103CC  C014  F083         	movff	?__div_to_l_+1,sprintf@val+1
  1927  0103D0  C015  F084         	movff	?__div_to_l_+2,sprintf@val+2
  1928  0103D4  C016  F085         	movff	?__div_to_l_+3,sprintf@val+3
  1929  0103D8  D017               	goto	l2971
  1930  0103DA                     l2969:
  1931  0103DA  C088  F013         	movff	sprintf@fval,__tdiv_to_l_@f1
  1932  0103DE  C089  F014         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  1933  0103E2  C08A  F015         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  1934  0103E6  C07E  F016         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  1935  0103EA  C07F  F017         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  1936  0103EE  C080  F018         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  1937  0103F2  EC12  F08A         	call	__tdiv_to_l_	;wreg free
  1938  0103F6  C013  F082         	movff	?__tdiv_to_l_,sprintf@val
  1939  0103FA  C014  F083         	movff	?__tdiv_to_l_+1,sprintf@val+1
  1940  0103FE  C015  F084         	movff	?__tdiv_to_l_+2,sprintf@val+2
  1941  010402  C016  F085         	movff	?__tdiv_to_l_+3,sprintf@val+3
  1942  010406  D000               	goto	l2971
  1943  010408                     l2971:
  1944                           
  1945                           ;doprnt.c: 1129: fval = 0.0;
  1946  010408  0E00               	movlw	0
  1947  01040A  0100               	movlb	0	; () banked
  1948  01040C  6F88               	movwf	sprintf@fval& (0+255),b
  1949  01040E  0E00               	movlw	0
  1950  010410  0100               	movlb	0	; () banked
  1951  010412  6F89               	movwf	(sprintf@fval+1)& (0+255),b
  1952  010414  0E00               	movlw	0
  1953  010416  0100               	movlb	0	; () banked
  1954  010418  6F8A               	movwf	(sprintf@fval+2)& (0+255),b
  1955                           
  1956                           ;doprnt.c: 1130: } else {
  1957  01041A  D034               	goto	l2977
  1958  01041C                     l2973:
  1959                           
  1960                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1961  01041C  C088  F036         	movff	sprintf@fval,___fttol@f1
  1962  010420  C089  F037         	movff	sprintf@fval+1,___fttol@f1+1
  1963  010424  C08A  F038         	movff	sprintf@fval+2,___fttol@f1+2
  1964  010428  EC9B  F08B         	call	___fttol	;wreg free
  1965  01042C  C036  F082         	movff	?___fttol,sprintf@val
  1966  010430  C037  F083         	movff	?___fttol+1,sprintf@val+1
  1967  010434  C038  F084         	movff	?___fttol+2,sprintf@val+2
  1968  010438  C039  F085         	movff	?___fttol+3,sprintf@val+3
  1969                           
  1970                           ;doprnt.c: 1132: fval -= (double)val;
  1971  01043C  C088  F060         	movff	sprintf@fval,___ftsub@f1
  1972  010440  C089  F061         	movff	sprintf@fval+1,___ftsub@f1+1
  1973  010444  C08A  F062         	movff	sprintf@fval+2,___ftsub@f1+2
  1974  010448  C082  F01B         	movff	sprintf@val,___lltoft@c
  1975  01044C  C083  F01C         	movff	sprintf@val+1,___lltoft@c+1
  1976  010450  C084  F01D         	movff	sprintf@val+2,___lltoft@c+2
  1977  010454  C085  F01E         	movff	sprintf@val+3,___lltoft@c+3
  1978  010458  EC9D  F08E         	call	___lltoft	;wreg free
  1979  01045C  C01B  F063         	movff	?___lltoft,___ftsub@f2
  1980  010460  C01C  F064         	movff	?___lltoft+1,___ftsub@f2+1
  1981  010464  C01D  F065         	movff	?___lltoft+2,___ftsub@f2+2
  1982  010468  ECFC  F08E         	call	___ftsub	;wreg free
  1983  01046C  C060  F088         	movff	?___ftsub,sprintf@fval
  1984  010470  C061  F089         	movff	?___ftsub+1,sprintf@fval+1
  1985  010474  C062  F08A         	movff	?___ftsub+2,sprintf@fval+2
  1986                           
  1987                           ;doprnt.c: 1133: exp = 0;
  1988  010478  0E00               	movlw	0
  1989  01047A  0100               	movlb	0	; () banked
  1990  01047C  6F7D               	movwf	(sprintf@exp+1)& (0+255),b
  1991  01047E  0E00               	movlw	0
  1992  010480  6F7C               	movwf	sprintf@exp& (0+255),b
  1993  010482  D000               	goto	l2977
  1994  010484                     l2977:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;doprnt.c: 1134: }
  1998                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1999  010484  0E01               	movlw	1
  2000  010486  0100               	movlb	0	; () banked
  2001  010488  6F8B               	movwf	sprintf@c& (0+255),b
  2002  01048A                     l2979:
  2003                           
  2004                           ; BSR set to: 0
  2005  01048A  0E0A               	movlw	10
  2006  01048C  0100               	movlb	0	; () banked
  2007  01048E  198B               	xorwf	sprintf@c& (0+255),w,b
  2008  010490  B4D8               	btfsc	status,2,c
  2009  010492  D025               	goto	l2991
  2010  010494  D001               	goto	l2983
  2011                           
  2012                           ; BSR set to: 0
  2013  010496  D023               	goto	l2991
  2014  010498                     l2983:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;doprnt.c: 1137: if(val < dpowers[c])
  2018  010498  0100               	movlb	0	; () banked
  2019  01049A  518B               	movf	sprintf@c& (0+255),w,b
  2020  01049C  0D04               	mullw	4
  2021  01049E  0EE7               	movlw	low _dpowers
  2022  0104A0  24F3               	addwf	prodl,w,c
  2023  0104A2  6EF6               	movwf	tblptrl,c
  2024  0104A4  0EFE               	movlw	high _dpowers
  2025  0104A6  20F4               	addwfc	prodh,w,c
  2026  0104A8  6EF7               	movwf	tblptrh,c
  2027  0104AA                     	if	1	;There are 3 active tblptr bytes
  2028  0104AA  6AF8               	clrf	tblptru,c
  2029  0104AC  0E00               	movlw	low (__mediumconst shr (0+16))
  2030  0104AE  22F8               	addwfc	tblptru,f,c
  2031  0104B0                     	endif
  2032  0104B0  0009               	tblrd		*+
  2033  0104B2  50F5               	movf	tablat,w,c
  2034  0104B4  0100               	movlb	0	; () banked
  2035  0104B6  5D82               	subwf	sprintf@val& (0+255),w,b
  2036  0104B8  0009               	tblrd		*+
  2037  0104BA  50F5               	movf	tablat,w,c
  2038  0104BC  0100               	movlb	0	; () banked
  2039  0104BE  5983               	subwfb	(sprintf@val+1)& (0+255),w,b
  2040  0104C0  0009               	tblrd		*+
  2041  0104C2  50F5               	movf	tablat,w,c
  2042  0104C4  0100               	movlb	0	; () banked
  2043  0104C6  5984               	subwfb	(sprintf@val+2)& (0+255),w,b
  2044  0104C8  0009               	tblrd		*+
  2045  0104CA  50F5               	movf	tablat,w,c
  2046  0104CC  0100               	movlb	0	; () banked
  2047  0104CE  5985               	subwfb	(sprintf@val+3)& (0+255),w,b
  2048  0104D0  A0D8               	btfss	status,0,c
  2049  0104D2  D005               	goto	l2991
  2050  0104D4  D001               	goto	l2987
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;doprnt.c: 1138: break;
  2054  0104D6  D003               	goto	l2991
  2055  0104D8                     l2987:
  2056                           
  2057                           ; BSR set to: 0
  2058  0104D8  0100               	movlb	0	; () banked
  2059  0104DA  2B8B               	incf	sprintf@c& (0+255),f,b
  2060  0104DC  D7D6               	goto	l2979
  2061  0104DE                     l2991:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;doprnt.c: 1175: {
  2065                           ;doprnt.c: 1188: if(flag & 0x03)
  2066  0104DE  0E03               	movlw	3
  2067  0104E0  0100               	movlb	0	; () banked
  2068  0104E2  157A               	andwf	sprintf@flag& (0+255),w,b
  2069  0104E4  0100               	movlb	0	; () banked
  2070  0104E6  6F6F               	movwf	??_sprintf& (0+255),b
  2071  0104E8  0E00               	movlw	0
  2072  0104EA  0100               	movlb	0	; () banked
  2073  0104EC  157B               	andwf	(sprintf@flag+1)& (0+255),w,b
  2074  0104EE  0100               	movlb	0	; () banked
  2075  0104F0  6F70               	movwf	(??_sprintf+1)& (0+255),b
  2076  0104F2  0100               	movlb	0	; () banked
  2077  0104F4  516F               	movf	??_sprintf& (0+255),w,b
  2078  0104F6  0100               	movlb	0	; () banked
  2079  0104F8  1170               	iorwf	(??_sprintf+1)& (0+255),w,b
  2080  0104FA  B4D8               	btfsc	status,2,c
  2081  0104FC  D057               	goto	l3005
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  2085  0104FE  C066  FFD9         	movff	sprintf@sp,fsr2l
  2086  010502  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2087  010506  0E2D               	movlw	45
  2088  010508  D04F               	goto	L2
  2089  01050A                     l2995:
  2090                           
  2091                           ; BSR set to: 0
  2092  01050A  0100               	movlb	0	; () banked
  2093  01050C  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2094  01050E  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;doprnt.c: 1195: }
  2098                           ;doprnt.c: 1196: while(c--) {
  2099  010510  D04D               	goto	l3005
  2100  010512                     l2997:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;doprnt.c: 1200: {
  2104                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2105  010512  C082  F013         	movff	sprintf@val,___lldiv@dividend
  2106  010516  C083  F014         	movff	sprintf@val+1,___lldiv@dividend+1
  2107  01051A  C084  F015         	movff	sprintf@val+2,___lldiv@dividend+2
  2108  01051E  C085  F016         	movff	sprintf@val+3,___lldiv@dividend+3
  2109  010522  0100               	movlb	0	; () banked
  2110  010524  518B               	movf	sprintf@c& (0+255),w,b
  2111  010526  0D04               	mullw	4
  2112  010528  0EE7               	movlw	low _dpowers
  2113  01052A  24F3               	addwf	prodl,w,c
  2114  01052C  6EF6               	movwf	tblptrl,c
  2115  01052E  0EFE               	movlw	high _dpowers
  2116  010530  20F4               	addwfc	prodh,w,c
  2117  010532  6EF7               	movwf	tblptrh,c
  2118  010534                     	if	1	;There are 3 active tblptr bytes
  2119  010534  6AF8               	clrf	tblptru,c
  2120  010536  0E00               	movlw	low (__mediumconst shr (0+16))
  2121  010538  22F8               	addwfc	tblptru,f,c
  2122  01053A                     	endif
  2123  01053A  0009               	tblrd		*+
  2124  01053C  CFF5 F017          	movff	tablat,___lldiv@divisor
  2125  010540  0009               	tblrd		*+
  2126  010542  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  2127  010546  0009               	tblrd		*+
  2128  010548  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  2129  01054C  000A               	tblrd		*-
  2130  01054E  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  2131  010552  EC5F  F08D         	call	___lldiv	;wreg free
  2132  010556  C013  F07E         	movff	?___lldiv,sprintf@tmpval
  2133  01055A  C014  F07F         	movff	?___lldiv+1,sprintf@tmpval+1
  2134  01055E  C015  F080         	movff	?___lldiv+2,sprintf@tmpval+2
  2135  010562  C016  F081         	movff	?___lldiv+3,sprintf@tmpval+3
  2136                           
  2137                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2138  010566  C07E  F020         	movff	sprintf@tmpval,___llmod@dividend
  2139  01056A  C07F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2140  01056E  C080  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2141  010572  C081  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2142  010576  0E0A               	movlw	10
  2143  010578  6E24               	movwf	___llmod@divisor,c
  2144  01057A  0E00               	movlw	0
  2145  01057C  6E25               	movwf	___llmod@divisor+1,c
  2146  01057E  0E00               	movlw	0
  2147  010580  6E26               	movwf	___llmod@divisor+2,c
  2148  010582  0E00               	movlw	0
  2149  010584  6E27               	movwf	___llmod@divisor+3,c
  2150  010586  EC65  F08E         	call	___llmod	;wreg free
  2151  01058A  C020  F07E         	movff	?___llmod,sprintf@tmpval
  2152  01058E  C021  F07F         	movff	?___llmod+1,sprintf@tmpval+1
  2153  010592  C022  F080         	movff	?___llmod+2,sprintf@tmpval+2
  2154  010596  C023  F081         	movff	?___llmod+3,sprintf@tmpval+3
  2155                           
  2156                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2157  01059A  0100               	movlb	0	; () banked
  2158  01059C  517E               	movf	sprintf@tmpval& (0+255),w,b
  2159  01059E  0F30               	addlw	48
  2160  0105A0  C066  FFD9         	movff	sprintf@sp,fsr2l
  2161  0105A4  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2162  0105A8                     L2:
  2163  0105A8  6EDF               	movwf	indf2,c
  2164  0105AA  D7AF               	goto	l2995
  2165  0105AC                     l3005:
  2166                           
  2167                           ; BSR set to: 0
  2168  0105AC  0100               	movlb	0	; () banked
  2169  0105AE  078B               	decf	sprintf@c& (0+255),f,b
  2170  0105B0  0100               	movlb	0	; () banked
  2171  0105B2  298B               	incf	sprintf@c& (0+255),w,b
  2172  0105B4  B4D8               	btfsc	status,2,c
  2173  0105B6  D010               	goto	l3013
  2174  0105B8  D7AC               	goto	l2997
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;doprnt.c: 1204: }
  2178                           ;doprnt.c: 1206: }
  2179                           ;doprnt.c: 1207: while(exp > 0) {
  2180  0105BA  D00E               	goto	l3013
  2181  0105BC                     l3007:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2185  0105BC  C066  FFD9         	movff	sprintf@sp,fsr2l
  2186  0105C0  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2187  0105C4  0E30               	movlw	48
  2188  0105C6  6EDF               	movwf	indf2,c
  2189                           
  2190                           ; BSR set to: 0
  2191  0105C8  0100               	movlb	0	; () banked
  2192  0105CA  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2193  0105CC  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;doprnt.c: 1209: exp--;
  2197  0105CE  0100               	movlb	0	; () banked
  2198  0105D0  077C               	decf	sprintf@exp& (0+255),f,b
  2199  0105D2  A0D8               	btfss	status,0,c
  2200  0105D4  077D               	decf	(sprintf@exp+1)& (0+255),f,b
  2201  0105D6  D000               	goto	l3013
  2202  0105D8                     l3013:
  2203                           
  2204                           ; BSR set to: 0
  2205  0105D8  0100               	movlb	0	; () banked
  2206  0105DA  BF7D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2207  0105DC  D007               	goto	l3015
  2208  0105DE  0100               	movlb	0	; () banked
  2209  0105E0  517D               	movf	(sprintf@exp+1)& (0+255),w,b
  2210  0105E2  E1EC               	bnz	l3007
  2211  0105E4  0100               	movlb	0	; () banked
  2212  0105E6  057C               	decf	sprintf@exp& (0+255),w,b
  2213  0105E8  B0D8               	btfsc	status,0,c
  2214  0105EA  D7E8               	goto	l3007
  2215  0105EC                     l3015:
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;doprnt.c: 1210: }
  2219                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2220  0105EC  0100               	movlb	0	; () banked
  2221  0105EE  BF87               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2222  0105F0  D00C               	goto	l231
  2223  0105F2  0100               	movlb	0	; () banked
  2224  0105F4  5187               	movf	(sprintf@prec+1)& (0+255),w,b
  2225  0105F6  E105               	bnz	u2940
  2226  0105F8  0E09               	movlw	9
  2227  0105FA  0100               	movlb	0	; () banked
  2228  0105FC  5D86               	subwf	sprintf@prec& (0+255),w,b
  2229  0105FE  A0D8               	btfss	status,0,c
  2230  010600  D004               	goto	l231
  2231  010602                     u2940:
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2235  010602  0E08               	movlw	8
  2236  010604  0100               	movlb	0	; () banked
  2237  010606  6F8B               	movwf	sprintf@c& (0+255),b
  2238  010608  D003               	goto	l3019
  2239  01060A                     l231:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;doprnt.c: 1213: else
  2243                           ;doprnt.c: 1214: c = prec;
  2244  01060A  C086  F08B         	movff	sprintf@prec,sprintf@c
  2245  01060E  D000               	goto	l3019
  2246  010610                     l3019:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;doprnt.c: 1215: prec -= c;
  2250  010610  0100               	movlb	0	; () banked
  2251  010612  518B               	movf	sprintf@c& (0+255),w,b
  2252  010614  0100               	movlb	0	; () banked
  2253  010616  5F86               	subwf	sprintf@prec& (0+255),f,b
  2254  010618  0E00               	movlw	0
  2255  01061A  0100               	movlb	0	; () banked
  2256  01061C  BF8B               	btfsc	sprintf@c& (0+255),7,b
  2257  01061E  0EFF               	movlw	255
  2258  010620  0100               	movlb	0	; () banked
  2259  010622  5B87               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;doprnt.c: 1219: if(c)
  2263  010624  0100               	movlb	0	; () banked
  2264  010626  518B               	movf	sprintf@c& (0+255),w,b
  2265  010628  0100               	movlb	0	; () banked
  2266  01062A  B4D8               	btfsc	status,2,c
  2267  01062C  D00A               	goto	l3027
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2271  01062E  C066  FFD9         	movff	sprintf@sp,fsr2l
  2272  010632  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2273  010636  0E2E               	movlw	46
  2274  010638  6EDF               	movwf	indf2,c
  2275                           
  2276                           ; BSR set to: 0
  2277  01063A  0100               	movlb	0	; () banked
  2278  01063C  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2279  01063E  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2280  010640  D000               	goto	l3027
  2281  010642                     l3027:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2285  010642  0100               	movlb	0	; () banked
  2286  010644  518B               	movf	sprintf@c& (0+255),w,b
  2287  010646  ECFF  F084         	call	_scale
  2288  01064A  C036  F075         	movff	?_scale,_sprintf$2000
  2289  01064E  C037  F076         	movff	?_scale+1,_sprintf$2000+1
  2290  010652  C038  F077         	movff	?_scale+2,_sprintf$2000+2
  2291                           
  2292                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2293  010656  C088  F02A         	movff	sprintf@fval,___ftmul@f2
  2294  01065A  C089  F02B         	movff	sprintf@fval+1,___ftmul@f2+1
  2295  01065E  C08A  F02C         	movff	sprintf@fval+2,___ftmul@f2+2
  2296  010662  C075  F027         	movff	_sprintf$2000,___ftmul@f1
  2297  010666  C076  F028         	movff	_sprintf$2000+1,___ftmul@f1+1
  2298  01066A  C077  F029         	movff	_sprintf$2000+2,___ftmul@f1+2
  2299  01066E  EC1F  F08B         	call	___ftmul	;wreg free
  2300  010672  C027  F036         	movff	?___ftmul,___fttol@f1
  2301  010676  C028  F037         	movff	?___ftmul+1,___fttol@f1+1
  2302  01067A  C029  F038         	movff	?___ftmul+2,___fttol@f1+2
  2303  01067E  EC9B  F08B         	call	___fttol	;wreg free
  2304  010682  C036  F082         	movff	?___fttol,sprintf@val
  2305  010686  C037  F083         	movff	?___fttol+1,sprintf@val+1
  2306  01068A  C038  F084         	movff	?___fttol+2,sprintf@val+2
  2307  01068E  C039  F085         	movff	?___fttol+3,sprintf@val+3
  2308                           
  2309                           ;doprnt.c: 1228: while(c--) {
  2310  010692  D07A               	goto	l3041
  2311  010694                     l3031:
  2312                           
  2313                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2314  010694  C082  F013         	movff	sprintf@val,___lldiv@dividend
  2315  010698  C083  F014         	movff	sprintf@val+1,___lldiv@dividend+1
  2316  01069C  C084  F015         	movff	sprintf@val+2,___lldiv@dividend+2
  2317  0106A0  C085  F016         	movff	sprintf@val+3,___lldiv@dividend+3
  2318  0106A4  0100               	movlb	0	; () banked
  2319  0106A6  518B               	movf	sprintf@c& (0+255),w,b
  2320  0106A8  0D04               	mullw	4
  2321  0106AA  0EE7               	movlw	low _dpowers
  2322  0106AC  24F3               	addwf	prodl,w,c
  2323  0106AE  6EF6               	movwf	tblptrl,c
  2324  0106B0  0EFE               	movlw	high _dpowers
  2325  0106B2  20F4               	addwfc	prodh,w,c
  2326  0106B4  6EF7               	movwf	tblptrh,c
  2327  0106B6                     	if	1	;There are 3 active tblptr bytes
  2328  0106B6  6AF8               	clrf	tblptru,c
  2329  0106B8  0E00               	movlw	low (__mediumconst shr (0+16))
  2330  0106BA  22F8               	addwfc	tblptru,f,c
  2331  0106BC                     	endif
  2332  0106BC  0009               	tblrd		*+
  2333  0106BE  CFF5 F017          	movff	tablat,___lldiv@divisor
  2334  0106C2  0009               	tblrd		*+
  2335  0106C4  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  2336  0106C8  0009               	tblrd		*+
  2337  0106CA  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  2338  0106CE  000A               	tblrd		*-
  2339  0106D0  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  2340  0106D4  EC5F  F08D         	call	___lldiv	;wreg free
  2341  0106D8  C013  F07E         	movff	?___lldiv,sprintf@tmpval
  2342  0106DC  C014  F07F         	movff	?___lldiv+1,sprintf@tmpval+1
  2343  0106E0  C015  F080         	movff	?___lldiv+2,sprintf@tmpval+2
  2344  0106E4  C016  F081         	movff	?___lldiv+3,sprintf@tmpval+3
  2345                           
  2346                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2347  0106E8  C07E  F020         	movff	sprintf@tmpval,___llmod@dividend
  2348  0106EC  C07F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2349  0106F0  C080  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2350  0106F4  C081  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2351  0106F8  0E0A               	movlw	10
  2352  0106FA  6E24               	movwf	___llmod@divisor,c
  2353  0106FC  0E00               	movlw	0
  2354  0106FE  6E25               	movwf	___llmod@divisor+1,c
  2355  010700  0E00               	movlw	0
  2356  010702  6E26               	movwf	___llmod@divisor+2,c
  2357  010704  0E00               	movlw	0
  2358  010706  6E27               	movwf	___llmod@divisor+3,c
  2359  010708  EC65  F08E         	call	___llmod	;wreg free
  2360  01070C  C020  F07E         	movff	?___llmod,sprintf@tmpval
  2361  010710  C021  F07F         	movff	?___llmod+1,sprintf@tmpval+1
  2362  010714  C022  F080         	movff	?___llmod+2,sprintf@tmpval+2
  2363  010718  C023  F081         	movff	?___llmod+3,sprintf@tmpval+3
  2364                           
  2365                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2366  01071C  0100               	movlb	0	; () banked
  2367  01071E  517E               	movf	sprintf@tmpval& (0+255),w,b
  2368  010720  0F30               	addlw	48
  2369  010722  C066  FFD9         	movff	sprintf@sp,fsr2l
  2370  010726  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2371  01072A  6EDF               	movwf	indf2,c
  2372                           
  2373                           ; BSR set to: 0
  2374  01072C  0100               	movlb	0	; () banked
  2375  01072E  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2376  010730  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;doprnt.c: 1232: val %= dpowers[c];
  2380  010732  C082  F020         	movff	sprintf@val,___llmod@dividend
  2381  010736  C083  F021         	movff	sprintf@val+1,___llmod@dividend+1
  2382  01073A  C084  F022         	movff	sprintf@val+2,___llmod@dividend+2
  2383  01073E  C085  F023         	movff	sprintf@val+3,___llmod@dividend+3
  2384  010742  0100               	movlb	0	; () banked
  2385  010744  518B               	movf	sprintf@c& (0+255),w,b
  2386  010746  0D04               	mullw	4
  2387  010748  0EE7               	movlw	low _dpowers
  2388  01074A  24F3               	addwf	prodl,w,c
  2389  01074C  6EF6               	movwf	tblptrl,c
  2390  01074E  0EFE               	movlw	high _dpowers
  2391  010750  20F4               	addwfc	prodh,w,c
  2392  010752  6EF7               	movwf	tblptrh,c
  2393  010754                     	if	1	;There are 3 active tblptr bytes
  2394  010754  6AF8               	clrf	tblptru,c
  2395  010756  0E00               	movlw	low (__mediumconst shr (0+16))
  2396  010758  22F8               	addwfc	tblptru,f,c
  2397  01075A                     	endif
  2398  01075A  0009               	tblrd		*+
  2399  01075C  CFF5 F024          	movff	tablat,___llmod@divisor
  2400  010760  0009               	tblrd		*+
  2401  010762  CFF5 F025          	movff	tablat,___llmod@divisor+1
  2402  010766  0009               	tblrd		*+
  2403  010768  CFF5 F026          	movff	tablat,___llmod@divisor+2
  2404  01076C  000A               	tblrd		*-
  2405  01076E  CFF5 F027          	movff	tablat,___llmod@divisor+3
  2406  010772  EC65  F08E         	call	___llmod	;wreg free
  2407  010776  C020  F082         	movff	?___llmod,sprintf@val
  2408  01077A  C021  F083         	movff	?___llmod+1,sprintf@val+1
  2409  01077E  C022  F084         	movff	?___llmod+2,sprintf@val+2
  2410  010782  C023  F085         	movff	?___llmod+3,sprintf@val+3
  2411  010786  D000               	goto	l3041
  2412  010788                     l3041:
  2413  010788  0100               	movlb	0	; () banked
  2414  01078A  078B               	decf	sprintf@c& (0+255),f,b
  2415  01078C  0100               	movlb	0	; () banked
  2416  01078E  298B               	incf	sprintf@c& (0+255),w,b
  2417  010790  B4D8               	btfsc	status,2,c
  2418  010792  D010               	goto	l3049
  2419  010794  D77F               	goto	l3031
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;doprnt.c: 1233: }
  2423                           ;doprnt.c: 1235: while(prec) {
  2424  010796  D00E               	goto	l3049
  2425  010798                     l3043:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2429  010798  C066  FFD9         	movff	sprintf@sp,fsr2l
  2430  01079C  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2431  0107A0  0E30               	movlw	48
  2432  0107A2  6EDF               	movwf	indf2,c
  2433                           
  2434                           ; BSR set to: 0
  2435  0107A4  0100               	movlb	0	; () banked
  2436  0107A6  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2437  0107A8  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;doprnt.c: 1237: prec--;
  2441  0107AA  0100               	movlb	0	; () banked
  2442  0107AC  0786               	decf	sprintf@prec& (0+255),f,b
  2443  0107AE  A0D8               	btfss	status,0,c
  2444  0107B0  0787               	decf	(sprintf@prec+1)& (0+255),f,b
  2445  0107B2  D000               	goto	l3049
  2446  0107B4                     l3049:
  2447                           
  2448                           ; BSR set to: 0
  2449  0107B4  0100               	movlb	0	; () banked
  2450  0107B6  5186               	movf	sprintf@prec& (0+255),w,b
  2451  0107B8  0100               	movlb	0	; () banked
  2452  0107BA  1187               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2453  0107BC  B4D8               	btfsc	status,2,c
  2454  0107BE  D104               	goto	l3103
  2455  0107C0  D7EB               	goto	l3043
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;doprnt.c: 1238: }
  2459                           ;doprnt.c: 1245: continue;
  2460  0107C2  D102               	goto	l3103
  2461  0107C4                     l3051:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;doprnt.c: 1246: }
  2465                           ;doprnt.c: 1253: {
  2466                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2467  0107C4  C078  FFD9         	movff	sprintf@ap,fsr2l
  2468  0107C8  C079  FFDA         	movff	sprintf@ap+1,fsr2h
  2469  0107CC  CFDE F082          	movff	postinc2,sprintf@val
  2470  0107D0  CFDD F083          	movff	postdec2,sprintf@val+1
  2471  0107D4  0100               	movlb	0	; () banked
  2472  0107D6  0E00               	movlw	0
  2473  0107D8  BF83               	btfsc	(sprintf@val+1)& (0+255),7,b
  2474  0107DA  0EFF               	movlw	-1
  2475  0107DC  6F84               	movwf	(sprintf@val+2)& (0+255),b
  2476  0107DE  6F85               	movwf	(sprintf@val+3)& (0+255),b
  2477                           
  2478                           ; BSR set to: 0
  2479  0107E0  0E02               	movlw	2
  2480  0107E2  0100               	movlb	0	; () banked
  2481  0107E4  2778               	addwf	sprintf@ap& (0+255),f,b
  2482  0107E6  0E00               	movlw	0
  2483  0107E8  2379               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;doprnt.c: 1261: if((long)val < 0) {
  2487  0107EA  0100               	movlb	0	; () banked
  2488  0107EC  AF85               	btfss	(sprintf@val+3)& (0+255),7,b
  2489  0107EE  D00D               	goto	l3061
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;doprnt.c: 1262: flag |= 0x03;
  2493  0107F0  0E03               	movlw	3
  2494  0107F2  0100               	movlb	0	; () banked
  2495  0107F4  137A               	iorwf	sprintf@flag& (0+255),f,b
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;doprnt.c: 1263: val = -val;
  2499  0107F6  0100               	movlb	0	; () banked
  2500  0107F8  1F85               	comf	(sprintf@val+3)& (0+255),f,b
  2501  0107FA  1F84               	comf	(sprintf@val+2)& (0+255),f,b
  2502  0107FC  1F83               	comf	(sprintf@val+1)& (0+255),f,b
  2503  0107FE  6D82               	negf	sprintf@val& (0+255),b
  2504  010800  0E00               	movlw	0
  2505  010802  2383               	addwfc	(sprintf@val+1)& (0+255),f,b
  2506  010804  2384               	addwfc	(sprintf@val+2)& (0+255),f,b
  2507  010806  2385               	addwfc	(sprintf@val+3)& (0+255),f,b
  2508  010808  D000               	goto	l3061
  2509  01080A                     l3061:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;doprnt.c: 1264: }
  2513                           ;doprnt.c: 1266: }
  2514                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2515  01080A  0100               	movlb	0	; () banked
  2516  01080C  5186               	movf	sprintf@prec& (0+255),w,b
  2517  01080E  0100               	movlb	0	; () banked
  2518  010810  1187               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2519  010812  A4D8               	btfss	status,2,c
  2520  010814  D00E               	goto	l3067
  2521                           
  2522                           ; BSR set to: 0
  2523  010816  0100               	movlb	0	; () banked
  2524  010818  5182               	movf	sprintf@val& (0+255),w,b
  2525  01081A  0100               	movlb	0	; () banked
  2526  01081C  1183               	iorwf	(sprintf@val+1)& (0+255),w,b
  2527  01081E  0100               	movlb	0	; () banked
  2528  010820  1184               	iorwf	(sprintf@val+2)& (0+255),w,b
  2529  010822  0100               	movlb	0	; () banked
  2530  010824  1185               	iorwf	(sprintf@val+3)& (0+255),w,b
  2531  010826  A4D8               	btfss	status,2,c
  2532  010828  D004               	goto	l3067
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;doprnt.c: 1291: prec++;
  2536  01082A  0100               	movlb	0	; () banked
  2537  01082C  4B86               	infsnz	sprintf@prec& (0+255),f,b
  2538  01082E  2B87               	incf	(sprintf@prec+1)& (0+255),f,b
  2539  010830  D000               	goto	l3067
  2540  010832                     l3067:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2544  010832  0E01               	movlw	1
  2545  010834  0100               	movlb	0	; () banked
  2546  010836  6F8B               	movwf	sprintf@c& (0+255),b
  2547  010838                     l3069:
  2548                           
  2549                           ; BSR set to: 0
  2550  010838  0E0A               	movlw	10
  2551  01083A  0100               	movlb	0	; () banked
  2552  01083C  198B               	xorwf	sprintf@c& (0+255),w,b
  2553  01083E  B4D8               	btfsc	status,2,c
  2554  010840  D025               	goto	l3081
  2555  010842  D001               	goto	l3073
  2556                           
  2557                           ; BSR set to: 0
  2558  010844  D023               	goto	l3081
  2559  010846                     l3073:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;doprnt.c: 1306: if(val < dpowers[c])
  2563  010846  0100               	movlb	0	; () banked
  2564  010848  518B               	movf	sprintf@c& (0+255),w,b
  2565  01084A  0D04               	mullw	4
  2566  01084C  0EE7               	movlw	low _dpowers
  2567  01084E  24F3               	addwf	prodl,w,c
  2568  010850  6EF6               	movwf	tblptrl,c
  2569  010852  0EFE               	movlw	high _dpowers
  2570  010854  20F4               	addwfc	prodh,w,c
  2571  010856  6EF7               	movwf	tblptrh,c
  2572  010858                     	if	1	;There are 3 active tblptr bytes
  2573  010858  6AF8               	clrf	tblptru,c
  2574  01085A  0E00               	movlw	low (__mediumconst shr (0+16))
  2575  01085C  22F8               	addwfc	tblptru,f,c
  2576  01085E                     	endif
  2577  01085E  0009               	tblrd		*+
  2578  010860  50F5               	movf	tablat,w,c
  2579  010862  0100               	movlb	0	; () banked
  2580  010864  5D82               	subwf	sprintf@val& (0+255),w,b
  2581  010866  0009               	tblrd		*+
  2582  010868  50F5               	movf	tablat,w,c
  2583  01086A  0100               	movlb	0	; () banked
  2584  01086C  5983               	subwfb	(sprintf@val+1)& (0+255),w,b
  2585  01086E  0009               	tblrd		*+
  2586  010870  50F5               	movf	tablat,w,c
  2587  010872  0100               	movlb	0	; () banked
  2588  010874  5984               	subwfb	(sprintf@val+2)& (0+255),w,b
  2589  010876  0009               	tblrd		*+
  2590  010878  50F5               	movf	tablat,w,c
  2591  01087A  0100               	movlb	0	; () banked
  2592  01087C  5985               	subwfb	(sprintf@val+3)& (0+255),w,b
  2593  01087E  A0D8               	btfss	status,0,c
  2594  010880  D005               	goto	l3081
  2595  010882  D001               	goto	l3077
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;doprnt.c: 1307: break;
  2599  010884  D003               	goto	l3081
  2600  010886                     l3077:
  2601                           
  2602                           ; BSR set to: 0
  2603  010886  0100               	movlb	0	; () banked
  2604  010888  2B8B               	incf	sprintf@c& (0+255),f,b
  2605  01088A  D7D6               	goto	l3069
  2606  01088C                     l3081:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;doprnt.c: 1339: if(c < prec)
  2610  01088C  0E80               	movlw	128
  2611  01088E  0100               	movlb	0	; () banked
  2612  010890  BF8B               	btfsc	sprintf@c& (0+255),7,b
  2613  010892  0E7F               	movlw	127
  2614  010894  0100               	movlb	0	; () banked
  2615  010896  6F6F               	movwf	??_sprintf& (0+255),b
  2616  010898  0100               	movlb	0	; () banked
  2617  01089A  5186               	movf	sprintf@prec& (0+255),w,b
  2618  01089C  0100               	movlb	0	; () banked
  2619  01089E  5D8B               	subwf	sprintf@c& (0+255),w,b
  2620  0108A0  0100               	movlb	0	; () banked
  2621  0108A2  5187               	movf	(sprintf@prec+1)& (0+255),w,b
  2622  0108A4  0A80               	xorlw	128
  2623  0108A6  0100               	movlb	0	; () banked
  2624  0108A8  596F               	subwfb	??_sprintf& (0+255),w,b
  2625  0108AA  B0D8               	btfsc	status,0,c
  2626  0108AC  D003               	goto	l3085
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;doprnt.c: 1340: c = prec;
  2630  0108AE  C086  F08B         	movff	sprintf@prec,sprintf@c
  2631  0108B2  D019               	goto	l3089
  2632  0108B4                     l3085:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;doprnt.c: 1341: else if(prec < c)
  2636  0108B4  0100               	movlb	0	; () banked
  2637  0108B6  5187               	movf	(sprintf@prec+1)& (0+255),w,b
  2638  0108B8  0A80               	xorlw	128
  2639  0108BA  0100               	movlb	0	; () banked
  2640  0108BC  6F6F               	movwf	??_sprintf& (0+255),b
  2641  0108BE  0100               	movlb	0	; () banked
  2642  0108C0  518B               	movf	sprintf@c& (0+255),w,b
  2643  0108C2  0100               	movlb	0	; () banked
  2644  0108C4  5D86               	subwf	sprintf@prec& (0+255),w,b
  2645  0108C6  0E80               	movlw	128
  2646  0108C8  0100               	movlb	0	; () banked
  2647  0108CA  BF8B               	btfsc	sprintf@c& (0+255),7,b
  2648  0108CC  0E7F               	movlw	127
  2649  0108CE  0100               	movlb	0	; () banked
  2650  0108D0  596F               	subwfb	??_sprintf& (0+255),w,b
  2651  0108D2  B0D8               	btfsc	status,0,c
  2652  0108D4  D008               	goto	l3089
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;doprnt.c: 1342: prec = c;
  2656  0108D6  0100               	movlb	0	; () banked
  2657  0108D8  518B               	movf	sprintf@c& (0+255),w,b
  2658  0108DA  0100               	movlb	0	; () banked
  2659  0108DC  6F86               	movwf	sprintf@prec& (0+255),b
  2660  0108DE  6B87               	clrf	(sprintf@prec+1)& (0+255),b
  2661  0108E0  BF86               	btfsc	sprintf@prec& (0+255),7,b
  2662  0108E2  0787               	decf	(sprintf@prec+1)& (0+255),f,b
  2663                           
  2664                           ; BSR set to: 0
  2665  0108E4  D000               	goto	l3089
  2666  0108E6                     l3089:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;doprnt.c: 1422: {
  2670                           ;doprnt.c: 1438: if(flag & 0x03)
  2671  0108E6  0E03               	movlw	3
  2672  0108E8  0100               	movlb	0	; () banked
  2673  0108EA  157A               	andwf	sprintf@flag& (0+255),w,b
  2674  0108EC  0100               	movlb	0	; () banked
  2675  0108EE  6F6F               	movwf	??_sprintf& (0+255),b
  2676  0108F0  0E00               	movlw	0
  2677  0108F2  0100               	movlb	0	; () banked
  2678  0108F4  157B               	andwf	(sprintf@flag+1)& (0+255),w,b
  2679  0108F6  0100               	movlb	0	; () banked
  2680  0108F8  6F70               	movwf	(??_sprintf+1)& (0+255),b
  2681  0108FA  0100               	movlb	0	; () banked
  2682  0108FC  516F               	movf	??_sprintf& (0+255),w,b
  2683  0108FE  0100               	movlb	0	; () banked
  2684  010900  1170               	iorwf	(??_sprintf+1)& (0+255),w,b
  2685  010902  B4D8               	btfsc	status,2,c
  2686  010904  D054               	goto	l3101
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2690  010906  C066  FFD9         	movff	sprintf@sp,fsr2l
  2691  01090A  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2692  01090E  0E2D               	movlw	45
  2693  010910  6EDF               	movwf	indf2,c
  2694  010912  D049               	goto	l3099
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;doprnt.c: 1469: }
  2698                           ;doprnt.c: 1474: while(prec--) {
  2699                           
  2700                           ; BSR set to: 0
  2701  010914  D04C               	goto	l3101
  2702  010916                     l3095:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;doprnt.c: 1478: {
  2706                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2707  010916  C086  F06F         	movff	sprintf@prec,??_sprintf
  2708  01091A  C087  F070         	movff	sprintf@prec+1,??_sprintf+1
  2709  01091E  0100               	movlb	0	; () banked
  2710  010920  90D8               	bcf	status,0,c
  2711  010922  376F               	rlcf	??_sprintf& (0+255),f,b
  2712  010924  3770               	rlcf	(??_sprintf+1)& (0+255),f,b
  2713  010926  0100               	movlb	0	; () banked
  2714  010928  90D8               	bcf	status,0,c
  2715  01092A  376F               	rlcf	??_sprintf& (0+255),f,b
  2716  01092C  3770               	rlcf	(??_sprintf+1)& (0+255),f,b
  2717  01092E  0EE7               	movlw	low _dpowers
  2718  010930  0100               	movlb	0	; () banked
  2719  010932  256F               	addwf	??_sprintf& (0+255),w,b
  2720  010934  6EF6               	movwf	tblptrl,c
  2721  010936  0EFE               	movlw	high _dpowers
  2722  010938  2170               	addwfc	(??_sprintf+1)& (0+255),w,b
  2723  01093A  6EF7               	movwf	tblptrh,c
  2724  01093C                     	if	1	;There are 3 active tblptr bytes
  2725  01093C  6AF8               	clrf	tblptru,c
  2726  01093E  0E00               	movlw	low (__mediumconst shr (0+16))
  2727  010940  22F8               	addwfc	tblptru,f,c
  2728  010942                     	endif
  2729  010942  0009               	tblrd		*+
  2730  010944  CFF5 F017          	movff	tablat,___lldiv@divisor
  2731  010948  0009               	tblrd		*+
  2732  01094A  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  2733  01094E  0009               	tblrd		*+
  2734  010950  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  2735  010954  000A               	tblrd		*-
  2736  010956  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  2737  01095A  C082  F013         	movff	sprintf@val,___lldiv@dividend
  2738  01095E  C083  F014         	movff	sprintf@val+1,___lldiv@dividend+1
  2739  010962  C084  F015         	movff	sprintf@val+2,___lldiv@dividend+2
  2740  010966  C085  F016         	movff	sprintf@val+3,___lldiv@dividend+3
  2741  01096A  EC5F  F08D         	call	___lldiv	;wreg free
  2742  01096E  C013  F020         	movff	?___lldiv,___llmod@dividend
  2743  010972  C014  F021         	movff	?___lldiv+1,___llmod@dividend+1
  2744  010976  C015  F022         	movff	?___lldiv+2,___llmod@dividend+2
  2745  01097A  C016  F023         	movff	?___lldiv+3,___llmod@dividend+3
  2746  01097E  0E0A               	movlw	10
  2747  010980  6E24               	movwf	___llmod@divisor,c
  2748  010982  0E00               	movlw	0
  2749  010984  6E25               	movwf	___llmod@divisor+1,c
  2750  010986  0E00               	movlw	0
  2751  010988  6E26               	movwf	___llmod@divisor+2,c
  2752  01098A  0E00               	movlw	0
  2753  01098C  6E27               	movwf	___llmod@divisor+3,c
  2754  01098E  EC65  F08E         	call	___llmod	;wreg free
  2755  010992  5020               	movf	?___llmod,w,c
  2756  010994  0F30               	addlw	48
  2757  010996  0100               	movlb	0	; () banked
  2758  010998  6F8B               	movwf	sprintf@c& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;doprnt.c: 1523: }
  2762                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2763  01099A  C066  FFD9         	movff	sprintf@sp,fsr2l
  2764  01099E  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2765  0109A2  C08B  FFDF         	movff	sprintf@c,indf2
  2766  0109A6                     l3099:
  2767                           
  2768                           ; BSR set to: 0
  2769  0109A6  0100               	movlb	0	; () banked
  2770  0109A8  4B66               	infsnz	sprintf@sp& (0+255),f,b
  2771  0109AA  2B67               	incf	(sprintf@sp+1)& (0+255),f,b
  2772  0109AC  D000               	goto	l3101
  2773  0109AE                     l3101:
  2774                           
  2775                           ; BSR set to: 0
  2776  0109AE  0100               	movlb	0	; () banked
  2777  0109B0  0786               	decf	sprintf@prec& (0+255),f,b
  2778  0109B2  A0D8               	btfss	status,0,c
  2779  0109B4  0787               	decf	(sprintf@prec+1)& (0+255),f,b
  2780  0109B6  0100               	movlb	0	; () banked
  2781  0109B8  2986               	incf	sprintf@prec& (0+255),w,b
  2782  0109BA  E1AD               	bnz	l3095
  2783  0109BC  0100               	movlb	0	; () banked
  2784  0109BE  2987               	incf	(sprintf@prec+1)& (0+255),w,b
  2785  0109C0  B4D8               	btfsc	status,2,c
  2786  0109C2  D002               	goto	l3103
  2787  0109C4  D7A8               	goto	l3095
  2788                           
  2789                           ; BSR set to: 0
  2790  0109C6  D000               	goto	l3103
  2791  0109C8                     l3103:
  2792                           
  2793                           ; BSR set to: 0
  2794  0109C8  C068  FFF6         	movff	sprintf@f,tblptrl
  2795  0109CC  C069  FFF7         	movff	sprintf@f+1,tblptrh
  2796  0109D0  0100               	movlb	0	; () banked
  2797  0109D2  4B68               	infsnz	sprintf@f& (0+255),f,b
  2798  0109D4  2B69               	incf	(sprintf@f+1)& (0+255),f,b
  2799  0109D6                     	if	0	;tblptru may be non-zero
  2800  0109D6                     	endif
  2801  0109D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2802  0109D6  0E00               	movlw	low (__mediumconst shr (0+16))
  2803  0109D8  6EF8               	movwf	tblptru,c
  2804  0109DA                     	endif
  2805  0109DA  0008               	tblrd		*
  2806  0109DC  CFF5 F08B          	movff	tablat,sprintf@c
  2807  0109E0  0100               	movlb	0	; () banked
  2808  0109E2  518B               	movf	sprintf@c& (0+255),w,b
  2809  0109E4  B4D8               	btfsc	status,2,c
  2810  0109E6  D003               	goto	l3105
  2811  0109E8  EF08  F080         	goto	l2873
  2812                           
  2813                           ; BSR set to: 0
  2814  0109EC  D000               	goto	l3105
  2815  0109EE                     l3105:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;doprnt.c: 1538: *sp = 0;
  2819  0109EE  C066  FFD9         	movff	sprintf@sp,fsr2l
  2820  0109F2  C067  FFDA         	movff	sprintf@sp+1,fsr2h
  2821  0109F6  0E00               	movlw	0
  2822  0109F8  6EDF               	movwf	indf2,c
  2823  0109FA  D000               	goto	l253
  2824  0109FC                     l253:
  2825                           
  2826                           ; BSR set to: 0
  2827  0109FC  0012               	return		;funcret
  2828  0109FE                     __end_of_sprintf:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           prodh	equ	0xFF4
  2835                           prodl	equ	0xFF3
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _scale *****************
  2846 ;; Defined at:
  2847 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  scl             1    wreg     char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  scl             1   59[COMRAM] char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  3   53[COMRAM] char 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        7 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    4
  2868 ;; This function calls:
  2869 ;;		___awdiv
  2870 ;;		___awmod
  2871 ;;		___ftmul
  2872 ;;		___wmul
  2873 ;; This function is called by:
  2874 ;;		_sprintf
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text2
  2879  0109FE                     __ptext2:
  2880                           	opt stack 0
  2881  0109FE                     _scale:
  2882                           	opt stack 25
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;incstack = 0
  2886                           ;scale@scl stored from wreg
  2887  0109FE  6E3C               	movwf	scale@scl,c
  2888                           
  2889                           ;doprnt.c: 428: if(scl < 0) {
  2890  010A00  AE3C               	btfss	scale@scl,7,c
  2891  010A02  D0FE               	goto	l2511
  2892                           
  2893                           ;doprnt.c: 429: scl = -scl;
  2894  010A04  6C3C               	negf	scale@scl,c
  2895                           
  2896                           ;doprnt.c: 430: if(scl>=110)
  2897  010A06  503C               	movf	scale@scl,w,c
  2898  010A08  0A80               	xorlw	128
  2899  010A0A  0F12               	addlw	-238
  2900  010A0C  A0D8               	btfss	status,0,c
  2901  010A0E  D096               	goto	l2501
  2902                           
  2903                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2904  010A10  0E00               	movlw	0
  2905  010A12  6E24               	movwf	___wmul@multiplicand+1,c
  2906  010A14  0E03               	movlw	3
  2907  010A16  6E23               	movwf	___wmul@multiplicand,c
  2908  010A18  0E00               	movlw	0
  2909  010A1A  6E1C               	movwf	___awdiv@divisor+1,c
  2910  010A1C  0E0A               	movlw	10
  2911  010A1E  6E1B               	movwf	___awdiv@divisor,c
  2912  010A20  0E00               	movlw	0
  2913  010A22  6E16               	movwf	___awmod@divisor+1,c
  2914  010A24  0E64               	movlw	100
  2915  010A26  6E15               	movwf	___awmod@divisor,c
  2916  010A28  503C               	movf	scale@scl,w,c
  2917  010A2A  6E13               	movwf	___awmod@dividend,c
  2918  010A2C  6A14               	clrf	___awmod@dividend+1,c
  2919  010A2E  BE13               	btfsc	___awmod@dividend,7,c
  2920  010A30  0614               	decf	___awmod@dividend+1,f,c
  2921  010A32  ECEB  F08D         	call	___awmod	;wreg free
  2922  010A36  C013  F019         	movff	?___awmod,___awdiv@dividend
  2923  010A3A  C014  F01A         	movff	?___awmod+1,___awdiv@dividend+1
  2924  010A3E  ECC9  F08C         	call	___awdiv	;wreg free
  2925  010A42  0E09               	movlw	9
  2926  010A44  2419               	addwf	?___awdiv,w,c
  2927  010A46  6E21               	movwf	___wmul@multiplier,c
  2928  010A48  0E00               	movlw	0
  2929  010A4A  201A               	addwfc	?___awdiv+1,w,c
  2930  010A4C  6E22               	movwf	___wmul@multiplier+1,c
  2931  010A4E  EC5E  F08F         	call	___wmul	;wreg free
  2932  010A52  0E0F               	movlw	low __npowers_
  2933  010A54  2421               	addwf	?___wmul,w,c
  2934  010A56  6EF6               	movwf	tblptrl,c
  2935  010A58  0EFF               	movlw	high __npowers_
  2936  010A5A  2022               	addwfc	?___wmul+1,w,c
  2937  010A5C  6EF7               	movwf	tblptrh,c
  2938  010A5E                     	if	1	;There are 3 active tblptr bytes
  2939  010A5E  6AF8               	clrf	tblptru,c
  2940  010A60  0E00               	movlw	low (__mediumconst shr (0+16))
  2941  010A62  22F8               	addwfc	tblptru,f,c
  2942  010A64                     	endif
  2943  010A64  0009               	tblrd		*+
  2944  010A66  CFF5 F02A          	movff	tablat,___ftmul@f2
  2945  010A6A  0009               	tblrd		*+
  2946  010A6C  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  2947  010A70  000A               	tblrd		*-
  2948  010A72  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  2949  010A76  0E00               	movlw	0
  2950  010A78  6E1C               	movwf	___awdiv@divisor+1,c
  2951  010A7A  0E64               	movlw	100
  2952  010A7C  6E1B               	movwf	___awdiv@divisor,c
  2953  010A7E  503C               	movf	scale@scl,w,c
  2954  010A80  6E19               	movwf	___awdiv@dividend,c
  2955  010A82  6A1A               	clrf	___awdiv@dividend+1,c
  2956  010A84  BE19               	btfsc	___awdiv@dividend,7,c
  2957  010A86  061A               	decf	___awdiv@dividend+1,f,c
  2958  010A88  ECC9  F08C         	call	___awdiv	;wreg free
  2959  010A8C  0E12               	movlw	18
  2960  010A8E  2419               	addwf	?___awdiv,w,c
  2961  010A90  6E21               	movwf	___wmul@multiplier,c
  2962  010A92  0E00               	movlw	0
  2963  010A94  201A               	addwfc	?___awdiv+1,w,c
  2964  010A96  6E22               	movwf	___wmul@multiplier+1,c
  2965  010A98  0E00               	movlw	0
  2966  010A9A  6E24               	movwf	___wmul@multiplicand+1,c
  2967  010A9C  0E03               	movlw	3
  2968  010A9E  6E23               	movwf	___wmul@multiplicand,c
  2969  010AA0  EC5E  F08F         	call	___wmul	;wreg free
  2970  010AA4  0E0F               	movlw	low __npowers_
  2971  010AA6  2421               	addwf	?___wmul,w,c
  2972  010AA8  6EF6               	movwf	tblptrl,c
  2973  010AAA  0EFF               	movlw	high __npowers_
  2974  010AAC  2022               	addwfc	?___wmul+1,w,c
  2975  010AAE  6EF7               	movwf	tblptrh,c
  2976  010AB0                     	if	1	;There are 3 active tblptr bytes
  2977  010AB0  6AF8               	clrf	tblptru,c
  2978  010AB2  0E00               	movlw	low (__mediumconst shr (0+16))
  2979  010AB4  22F8               	addwfc	tblptru,f,c
  2980  010AB6                     	endif
  2981  010AB6  0009               	tblrd		*+
  2982  010AB8  CFF5 F027          	movff	tablat,___ftmul@f1
  2983  010ABC  0009               	tblrd		*+
  2984  010ABE  CFF5 F028          	movff	tablat,___ftmul@f1+1
  2985  010AC2  000A               	tblrd		*-
  2986  010AC4  CFF5 F029          	movff	tablat,___ftmul@f1+2
  2987  010AC8  EC1F  F08B         	call	___ftmul	;wreg free
  2988  010ACC  C027  F039         	movff	?___ftmul,_scale$1999
  2989  010AD0  C028  F03A         	movff	?___ftmul+1,_scale$1999+1
  2990  010AD4  C029  F03B         	movff	?___ftmul+2,_scale$1999+2
  2991                           
  2992                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2993  010AD8  C039  F027         	movff	_scale$1999,___ftmul@f1
  2994  010ADC  C03A  F028         	movff	_scale$1999+1,___ftmul@f1+1
  2995  010AE0  C03B  F029         	movff	_scale$1999+2,___ftmul@f1+2
  2996  010AE4  0E00               	movlw	0
  2997  010AE6  6E24               	movwf	___wmul@multiplicand+1,c
  2998  010AE8  0E03               	movlw	3
  2999  010AEA  6E23               	movwf	___wmul@multiplicand,c
  3000  010AEC  0E00               	movlw	0
  3001  010AEE  6E16               	movwf	___awmod@divisor+1,c
  3002  010AF0  0E0A               	movlw	10
  3003  010AF2  6E15               	movwf	___awmod@divisor,c
  3004  010AF4  503C               	movf	scale@scl,w,c
  3005  010AF6  6E13               	movwf	___awmod@dividend,c
  3006  010AF8  6A14               	clrf	___awmod@dividend+1,c
  3007  010AFA  BE13               	btfsc	___awmod@dividend,7,c
  3008  010AFC  0614               	decf	___awmod@dividend+1,f,c
  3009  010AFE  ECEB  F08D         	call	___awmod	;wreg free
  3010  010B02  C013  F021         	movff	?___awmod,___wmul@multiplier
  3011  010B06  C014  F022         	movff	?___awmod+1,___wmul@multiplier+1
  3012  010B0A  EC5E  F08F         	call	___wmul	;wreg free
  3013  010B0E  0E0F               	movlw	low __npowers_
  3014  010B10  2421               	addwf	?___wmul,w,c
  3015  010B12  6EF6               	movwf	tblptrl,c
  3016  010B14  0EFF               	movlw	high __npowers_
  3017  010B16  2022               	addwfc	?___wmul+1,w,c
  3018  010B18  6EF7               	movwf	tblptrh,c
  3019  010B1A                     	if	1	;There are 3 active tblptr bytes
  3020  010B1A  6AF8               	clrf	tblptru,c
  3021  010B1C  0E00               	movlw	low (__mediumconst shr (0+16))
  3022  010B1E  22F8               	addwfc	tblptru,f,c
  3023  010B20                     	endif
  3024  010B20  0009               	tblrd		*+
  3025  010B22  CFF5 F02A          	movff	tablat,___ftmul@f2
  3026  010B26  0009               	tblrd		*+
  3027  010B28  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3028  010B2C  000A               	tblrd		*-
  3029  010B2E  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3030  010B32  EC1F  F08B         	call	___ftmul	;wreg free
  3031  010B36  D156               	goto	L6
  3032  010B38  D172               	goto	l178
  3033  010B3A  D05A               	goto	l2507
  3034  010B3C                     l2501:
  3035                           
  3036                           ;doprnt.c: 432: else if(scl > 10)
  3037  010B3C  503C               	movf	scale@scl,w,c
  3038  010B3E  0A80               	xorlw	128
  3039  010B40  0F75               	addlw	-139
  3040  010B42  A0D8               	btfss	status,0,c
  3041  010B44  D055               	goto	l2507
  3042                           
  3043                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3044  010B46  0E00               	movlw	0
  3045  010B48  6E1C               	movwf	___awdiv@divisor+1,c
  3046  010B4A  0E0A               	movlw	10
  3047  010B4C  6E1B               	movwf	___awdiv@divisor,c
  3048  010B4E  503C               	movf	scale@scl,w,c
  3049  010B50  6E19               	movwf	___awdiv@dividend,c
  3050  010B52  6A1A               	clrf	___awdiv@dividend+1,c
  3051  010B54  BE19               	btfsc	___awdiv@dividend,7,c
  3052  010B56  061A               	decf	___awdiv@dividend+1,f,c
  3053  010B58  ECC9  F08C         	call	___awdiv	;wreg free
  3054  010B5C  0E09               	movlw	9
  3055  010B5E  2419               	addwf	?___awdiv,w,c
  3056  010B60  6E21               	movwf	___wmul@multiplier,c
  3057  010B62  0E00               	movlw	0
  3058  010B64  201A               	addwfc	?___awdiv+1,w,c
  3059  010B66  6E22               	movwf	___wmul@multiplier+1,c
  3060  010B68  0E00               	movlw	0
  3061  010B6A  6E24               	movwf	___wmul@multiplicand+1,c
  3062  010B6C  0E03               	movlw	3
  3063  010B6E  6E23               	movwf	___wmul@multiplicand,c
  3064  010B70  EC5E  F08F         	call	___wmul	;wreg free
  3065  010B74  0E0F               	movlw	low __npowers_
  3066  010B76  2421               	addwf	?___wmul,w,c
  3067  010B78  6EF6               	movwf	tblptrl,c
  3068  010B7A  0EFF               	movlw	high __npowers_
  3069  010B7C  2022               	addwfc	?___wmul+1,w,c
  3070  010B7E  6EF7               	movwf	tblptrh,c
  3071  010B80                     	if	1	;There are 3 active tblptr bytes
  3072  010B80  6AF8               	clrf	tblptru,c
  3073  010B82  0E00               	movlw	low (__mediumconst shr (0+16))
  3074  010B84  22F8               	addwfc	tblptru,f,c
  3075  010B86                     	endif
  3076  010B86  0009               	tblrd		*+
  3077  010B88  CFF5 F027          	movff	tablat,___ftmul@f1
  3078  010B8C  0009               	tblrd		*+
  3079  010B8E  CFF5 F028          	movff	tablat,___ftmul@f1+1
  3080  010B92  000A               	tblrd		*-
  3081  010B94  CFF5 F029          	movff	tablat,___ftmul@f1+2
  3082  010B98  0E00               	movlw	0
  3083  010B9A  6E24               	movwf	___wmul@multiplicand+1,c
  3084  010B9C  0E03               	movlw	3
  3085  010B9E  6E23               	movwf	___wmul@multiplicand,c
  3086  010BA0  0E00               	movlw	0
  3087  010BA2  6E16               	movwf	___awmod@divisor+1,c
  3088  010BA4  0E0A               	movlw	10
  3089  010BA6  6E15               	movwf	___awmod@divisor,c
  3090  010BA8  503C               	movf	scale@scl,w,c
  3091  010BAA  6E13               	movwf	___awmod@dividend,c
  3092  010BAC  6A14               	clrf	___awmod@dividend+1,c
  3093  010BAE  BE13               	btfsc	___awmod@dividend,7,c
  3094  010BB0  0614               	decf	___awmod@dividend+1,f,c
  3095  010BB2  ECEB  F08D         	call	___awmod	;wreg free
  3096  010BB6  C013  F021         	movff	?___awmod,___wmul@multiplier
  3097  010BBA  C014  F022         	movff	?___awmod+1,___wmul@multiplier+1
  3098  010BBE  EC5E  F08F         	call	___wmul	;wreg free
  3099  010BC2  0E0F               	movlw	low __npowers_
  3100  010BC4  2421               	addwf	?___wmul,w,c
  3101  010BC6  6EF6               	movwf	tblptrl,c
  3102  010BC8  0EFF               	movlw	high __npowers_
  3103  010BCA  2022               	addwfc	?___wmul+1,w,c
  3104  010BCC  6EF7               	movwf	tblptrh,c
  3105  010BCE                     	if	1	;There are 3 active tblptr bytes
  3106  010BCE  6AF8               	clrf	tblptru,c
  3107  010BD0  0E00               	movlw	low (__mediumconst shr (0+16))
  3108  010BD2  22F8               	addwfc	tblptru,f,c
  3109  010BD4                     	endif
  3110  010BD4  0009               	tblrd		*+
  3111  010BD6  CFF5 F02A          	movff	tablat,___ftmul@f2
  3112  010BDA  0009               	tblrd		*+
  3113  010BDC  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3114  010BE0  000A               	tblrd		*-
  3115  010BE2  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3116  010BE6  EC1F  F08B         	call	___ftmul	;wreg free
  3117  010BEA  D0FC               	goto	L6
  3118  010BEC  D118               	goto	l178
  3119  010BEE  D000               	goto	l2507
  3120  010BF0                     l2507:
  3121                           
  3122                           ;doprnt.c: 434: return _npowers_[scl];
  3123  010BF0  503C               	movf	scale@scl,w,c
  3124  010BF2  0D03               	mullw	3
  3125  010BF4  0E0F               	movlw	low __npowers_
  3126  010BF6  24F3               	addwf	prodl,w,c
  3127  010BF8  6EF6               	movwf	tblptrl,c
  3128  010BFA  0EFF               	movlw	high __npowers_
  3129  010BFC  D101               	goto	L5
  3130  010BFE  D10F               	goto	l178
  3131  010C00                     l2511:
  3132                           
  3133                           ;doprnt.c: 435: }
  3134                           ;doprnt.c: 436: if(scl>=110)
  3135  010C00  503C               	movf	scale@scl,w,c
  3136  010C02  0A80               	xorlw	128
  3137  010C04  0F12               	addlw	-238
  3138  010C06  A0D8               	btfss	status,0,c
  3139  010C08  D096               	goto	l2519
  3140                           
  3141                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3142  010C0A  0E00               	movlw	0
  3143  010C0C  6E24               	movwf	___wmul@multiplicand+1,c
  3144  010C0E  0E03               	movlw	3
  3145  010C10  6E23               	movwf	___wmul@multiplicand,c
  3146  010C12  0E00               	movlw	0
  3147  010C14  6E1C               	movwf	___awdiv@divisor+1,c
  3148  010C16  0E0A               	movlw	10
  3149  010C18  6E1B               	movwf	___awdiv@divisor,c
  3150  010C1A  0E00               	movlw	0
  3151  010C1C  6E16               	movwf	___awmod@divisor+1,c
  3152  010C1E  0E64               	movlw	100
  3153  010C20  6E15               	movwf	___awmod@divisor,c
  3154  010C22  503C               	movf	scale@scl,w,c
  3155  010C24  6E13               	movwf	___awmod@dividend,c
  3156  010C26  6A14               	clrf	___awmod@dividend+1,c
  3157  010C28  BE13               	btfsc	___awmod@dividend,7,c
  3158  010C2A  0614               	decf	___awmod@dividend+1,f,c
  3159  010C2C  ECEB  F08D         	call	___awmod	;wreg free
  3160  010C30  C013  F019         	movff	?___awmod,___awdiv@dividend
  3161  010C34  C014  F01A         	movff	?___awmod+1,___awdiv@dividend+1
  3162  010C38  ECC9  F08C         	call	___awdiv	;wreg free
  3163  010C3C  0E09               	movlw	9
  3164  010C3E  2419               	addwf	?___awdiv,w,c
  3165  010C40  6E21               	movwf	___wmul@multiplier,c
  3166  010C42  0E00               	movlw	0
  3167  010C44  201A               	addwfc	?___awdiv+1,w,c
  3168  010C46  6E22               	movwf	___wmul@multiplier+1,c
  3169  010C48  EC5E  F08F         	call	___wmul	;wreg free
  3170  010C4C  0E36               	movlw	low __powers_
  3171  010C4E  2421               	addwf	?___wmul,w,c
  3172  010C50  6EF6               	movwf	tblptrl,c
  3173  010C52  0EFF               	movlw	high __powers_
  3174  010C54  2022               	addwfc	?___wmul+1,w,c
  3175  010C56  6EF7               	movwf	tblptrh,c
  3176  010C58                     	if	1	;There are 3 active tblptr bytes
  3177  010C58  6AF8               	clrf	tblptru,c
  3178  010C5A  0E00               	movlw	low (__mediumconst shr (0+16))
  3179  010C5C  22F8               	addwfc	tblptru,f,c
  3180  010C5E                     	endif
  3181  010C5E  0009               	tblrd		*+
  3182  010C60  CFF5 F02A          	movff	tablat,___ftmul@f2
  3183  010C64  0009               	tblrd		*+
  3184  010C66  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3185  010C6A  000A               	tblrd		*-
  3186  010C6C  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3187  010C70  0E00               	movlw	0
  3188  010C72  6E1C               	movwf	___awdiv@divisor+1,c
  3189  010C74  0E64               	movlw	100
  3190  010C76  6E1B               	movwf	___awdiv@divisor,c
  3191  010C78  503C               	movf	scale@scl,w,c
  3192  010C7A  6E19               	movwf	___awdiv@dividend,c
  3193  010C7C  6A1A               	clrf	___awdiv@dividend+1,c
  3194  010C7E  BE19               	btfsc	___awdiv@dividend,7,c
  3195  010C80  061A               	decf	___awdiv@dividend+1,f,c
  3196  010C82  ECC9  F08C         	call	___awdiv	;wreg free
  3197  010C86  0E12               	movlw	18
  3198  010C88  2419               	addwf	?___awdiv,w,c
  3199  010C8A  6E21               	movwf	___wmul@multiplier,c
  3200  010C8C  0E00               	movlw	0
  3201  010C8E  201A               	addwfc	?___awdiv+1,w,c
  3202  010C90  6E22               	movwf	___wmul@multiplier+1,c
  3203  010C92  0E00               	movlw	0
  3204  010C94  6E24               	movwf	___wmul@multiplicand+1,c
  3205  010C96  0E03               	movlw	3
  3206  010C98  6E23               	movwf	___wmul@multiplicand,c
  3207  010C9A  EC5E  F08F         	call	___wmul	;wreg free
  3208  010C9E  0E36               	movlw	low __powers_
  3209  010CA0  2421               	addwf	?___wmul,w,c
  3210  010CA2  6EF6               	movwf	tblptrl,c
  3211  010CA4  0EFF               	movlw	high __powers_
  3212  010CA6  2022               	addwfc	?___wmul+1,w,c
  3213  010CA8  6EF7               	movwf	tblptrh,c
  3214  010CAA                     	if	1	;There are 3 active tblptr bytes
  3215  010CAA  6AF8               	clrf	tblptru,c
  3216  010CAC  0E00               	movlw	low (__mediumconst shr (0+16))
  3217  010CAE  22F8               	addwfc	tblptru,f,c
  3218  010CB0                     	endif
  3219  010CB0  0009               	tblrd		*+
  3220  010CB2  CFF5 F027          	movff	tablat,___ftmul@f1
  3221  010CB6  0009               	tblrd		*+
  3222  010CB8  CFF5 F028          	movff	tablat,___ftmul@f1+1
  3223  010CBC  000A               	tblrd		*-
  3224  010CBE  CFF5 F029          	movff	tablat,___ftmul@f1+2
  3225  010CC2  EC1F  F08B         	call	___ftmul	;wreg free
  3226  010CC6  C027  F039         	movff	?___ftmul,_scale$1999
  3227  010CCA  C028  F03A         	movff	?___ftmul+1,_scale$1999+1
  3228  010CCE  C029  F03B         	movff	?___ftmul+2,_scale$1999+2
  3229                           
  3230                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3231  010CD2  C039  F027         	movff	_scale$1999,___ftmul@f1
  3232  010CD6  C03A  F028         	movff	_scale$1999+1,___ftmul@f1+1
  3233  010CDA  C03B  F029         	movff	_scale$1999+2,___ftmul@f1+2
  3234  010CDE  0E00               	movlw	0
  3235  010CE0  6E24               	movwf	___wmul@multiplicand+1,c
  3236  010CE2  0E03               	movlw	3
  3237  010CE4  6E23               	movwf	___wmul@multiplicand,c
  3238  010CE6  0E00               	movlw	0
  3239  010CE8  6E16               	movwf	___awmod@divisor+1,c
  3240  010CEA  0E0A               	movlw	10
  3241  010CEC  6E15               	movwf	___awmod@divisor,c
  3242  010CEE  503C               	movf	scale@scl,w,c
  3243  010CF0  6E13               	movwf	___awmod@dividend,c
  3244  010CF2  6A14               	clrf	___awmod@dividend+1,c
  3245  010CF4  BE13               	btfsc	___awmod@dividend,7,c
  3246  010CF6  0614               	decf	___awmod@dividend+1,f,c
  3247  010CF8  ECEB  F08D         	call	___awmod	;wreg free
  3248  010CFC  C013  F021         	movff	?___awmod,___wmul@multiplier
  3249  010D00  C014  F022         	movff	?___awmod+1,___wmul@multiplier+1
  3250  010D04  EC5E  F08F         	call	___wmul	;wreg free
  3251  010D08  0E36               	movlw	low __powers_
  3252  010D0A  2421               	addwf	?___wmul,w,c
  3253  010D0C  6EF6               	movwf	tblptrl,c
  3254  010D0E  0EFF               	movlw	high __powers_
  3255  010D10  2022               	addwfc	?___wmul+1,w,c
  3256  010D12  6EF7               	movwf	tblptrh,c
  3257  010D14                     	if	1	;There are 3 active tblptr bytes
  3258  010D14  6AF8               	clrf	tblptru,c
  3259  010D16  0E00               	movlw	low (__mediumconst shr (0+16))
  3260  010D18  22F8               	addwfc	tblptru,f,c
  3261  010D1A                     	endif
  3262  010D1A  0009               	tblrd		*+
  3263  010D1C  CFF5 F02A          	movff	tablat,___ftmul@f2
  3264  010D20  0009               	tblrd		*+
  3265  010D22  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3266  010D26  000A               	tblrd		*-
  3267  010D28  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3268  010D2C  EC1F  F08B         	call	___ftmul	;wreg free
  3269  010D30  D059               	goto	L6
  3270  010D32  D075               	goto	l178
  3271  010D34  D05F               	goto	l2525
  3272  010D36                     l2519:
  3273                           
  3274                           ;doprnt.c: 438: else if(scl > 10)
  3275  010D36  503C               	movf	scale@scl,w,c
  3276  010D38  0A80               	xorlw	128
  3277  010D3A  0F75               	addlw	-139
  3278  010D3C  A0D8               	btfss	status,0,c
  3279  010D3E  D05A               	goto	l2525
  3280                           
  3281                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3282  010D40  0E00               	movlw	0
  3283  010D42  6E1C               	movwf	___awdiv@divisor+1,c
  3284  010D44  0E0A               	movlw	10
  3285  010D46  6E1B               	movwf	___awdiv@divisor,c
  3286  010D48  503C               	movf	scale@scl,w,c
  3287  010D4A  6E19               	movwf	___awdiv@dividend,c
  3288  010D4C  6A1A               	clrf	___awdiv@dividend+1,c
  3289  010D4E  BE19               	btfsc	___awdiv@dividend,7,c
  3290  010D50  061A               	decf	___awdiv@dividend+1,f,c
  3291  010D52  ECC9  F08C         	call	___awdiv	;wreg free
  3292  010D56  0E09               	movlw	9
  3293  010D58  2419               	addwf	?___awdiv,w,c
  3294  010D5A  6E21               	movwf	___wmul@multiplier,c
  3295  010D5C  0E00               	movlw	0
  3296  010D5E  201A               	addwfc	?___awdiv+1,w,c
  3297  010D60  6E22               	movwf	___wmul@multiplier+1,c
  3298  010D62  0E00               	movlw	0
  3299  010D64  6E24               	movwf	___wmul@multiplicand+1,c
  3300  010D66  0E03               	movlw	3
  3301  010D68  6E23               	movwf	___wmul@multiplicand,c
  3302  010D6A  EC5E  F08F         	call	___wmul	;wreg free
  3303  010D6E  0E36               	movlw	low __powers_
  3304  010D70  2421               	addwf	?___wmul,w,c
  3305  010D72  6EF6               	movwf	tblptrl,c
  3306  010D74  0EFF               	movlw	high __powers_
  3307  010D76  2022               	addwfc	?___wmul+1,w,c
  3308  010D78  6EF7               	movwf	tblptrh,c
  3309  010D7A                     	if	1	;There are 3 active tblptr bytes
  3310  010D7A  6AF8               	clrf	tblptru,c
  3311  010D7C  0E00               	movlw	low (__mediumconst shr (0+16))
  3312  010D7E  22F8               	addwfc	tblptru,f,c
  3313  010D80                     	endif
  3314  010D80  0009               	tblrd		*+
  3315  010D82  CFF5 F027          	movff	tablat,___ftmul@f1
  3316  010D86  0009               	tblrd		*+
  3317  010D88  CFF5 F028          	movff	tablat,___ftmul@f1+1
  3318  010D8C  000A               	tblrd		*-
  3319  010D8E  CFF5 F029          	movff	tablat,___ftmul@f1+2
  3320  010D92  0E00               	movlw	0
  3321  010D94  6E24               	movwf	___wmul@multiplicand+1,c
  3322  010D96  0E03               	movlw	3
  3323  010D98  6E23               	movwf	___wmul@multiplicand,c
  3324  010D9A  0E00               	movlw	0
  3325  010D9C  6E16               	movwf	___awmod@divisor+1,c
  3326  010D9E  0E0A               	movlw	10
  3327  010DA0  6E15               	movwf	___awmod@divisor,c
  3328  010DA2  503C               	movf	scale@scl,w,c
  3329  010DA4  6E13               	movwf	___awmod@dividend,c
  3330  010DA6  6A14               	clrf	___awmod@dividend+1,c
  3331  010DA8  BE13               	btfsc	___awmod@dividend,7,c
  3332  010DAA  0614               	decf	___awmod@dividend+1,f,c
  3333  010DAC  ECEB  F08D         	call	___awmod	;wreg free
  3334  010DB0  C013  F021         	movff	?___awmod,___wmul@multiplier
  3335  010DB4  C014  F022         	movff	?___awmod+1,___wmul@multiplier+1
  3336  010DB8  EC5E  F08F         	call	___wmul	;wreg free
  3337  010DBC  0E36               	movlw	low __powers_
  3338  010DBE  2421               	addwf	?___wmul,w,c
  3339  010DC0  6EF6               	movwf	tblptrl,c
  3340  010DC2  0EFF               	movlw	high __powers_
  3341  010DC4  2022               	addwfc	?___wmul+1,w,c
  3342  010DC6  6EF7               	movwf	tblptrh,c
  3343  010DC8                     	if	1	;There are 3 active tblptr bytes
  3344  010DC8  6AF8               	clrf	tblptru,c
  3345  010DCA  0E00               	movlw	low (__mediumconst shr (0+16))
  3346  010DCC  22F8               	addwfc	tblptru,f,c
  3347  010DCE                     	endif
  3348  010DCE  0009               	tblrd		*+
  3349  010DD0  CFF5 F02A          	movff	tablat,___ftmul@f2
  3350  010DD4  0009               	tblrd		*+
  3351  010DD6  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3352  010DDA  000A               	tblrd		*-
  3353  010DDC  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3354  010DE0  EC1F  F08B         	call	___ftmul	;wreg free
  3355  010DE4                     L6:
  3356  010DE4  C027  F036         	movff	?___ftmul,?_scale
  3357  010DE8  C028  F037         	movff	?___ftmul+1,?_scale+1
  3358  010DEC  C029  F038         	movff	?___ftmul+2,?_scale+2
  3359  010DF0  D016               	goto	l178
  3360  010DF2  D000               	goto	l2525
  3361  010DF4                     l2525:
  3362                           
  3363                           ;doprnt.c: 440: return _powers_[scl];
  3364  010DF4  503C               	movf	scale@scl,w,c
  3365  010DF6  0D03               	mullw	3
  3366  010DF8  0E36               	movlw	low __powers_
  3367  010DFA  24F3               	addwf	prodl,w,c
  3368  010DFC  6EF6               	movwf	tblptrl,c
  3369  010DFE  0EFF               	movlw	high __powers_
  3370  010E00                     L5:
  3371  010E00  20F4               	addwfc	prodh,w,c
  3372  010E02  6EF7               	movwf	tblptrh,c
  3373  010E04                     	if	1	;There are 3 active tblptr bytes
  3374  010E04  6AF8               	clrf	tblptru,c
  3375  010E06  0E00               	movlw	low (__mediumconst shr (0+16))
  3376  010E08  22F8               	addwfc	tblptru,f,c
  3377  010E0A                     	endif
  3378  010E0A  0009               	tblrd		*+
  3379  010E0C  CFF5 F036          	movff	tablat,?_scale
  3380  010E10  0009               	tblrd		*+
  3381  010E12  CFF5 F037          	movff	tablat,?_scale+1
  3382  010E16  000A               	tblrd		*-
  3383  010E18  CFF5 F038          	movff	tablat,?_scale+2
  3384  010E1C  D000               	goto	l178
  3385  010E1E                     l178:
  3386  010E1E  0012               	return		;funcret
  3387  010E20                     __end_of_scale:
  3388                           	opt stack 0
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           prodh	equ	0xFF4
  3394                           prodl	equ	0xFF3
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf2	equ	0xFDF
  3398                           postinc2	equ	0xFDE
  3399                           postdec2	equ	0xFDD
  3400                           fsr2h	equ	0xFDA
  3401                           fsr2l	equ	0xFD9
  3402                           status	equ	0xFD8
  3403                           
  3404 ;; *************** function _isdigit *****************
  3405 ;; Defined at:
  3406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  c               1    wreg     unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  c               1   20[COMRAM] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;		None               void
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;Total ram usage:        3 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    2
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_sprintf
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text3
  3435  011F7E                     __ptext3:
  3436                           	opt stack 0
  3437  011F7E                     _isdigit:
  3438                           	opt stack 27
  3439                           
  3440                           ;incstack = 0
  3441                           ;isdigit@c stored from wreg
  3442  011F7E  6E15               	movwf	isdigit@c,c
  3443  011F80  0E00               	movlw	0
  3444  011F82  6E14               	movwf	_isdigit$1742,c
  3445  011F84  0E3A               	movlw	58
  3446  011F86  6015               	cpfslt	isdigit@c,c
  3447  011F88  D006               	goto	l2537
  3448  011F8A  0E2F               	movlw	47
  3449  011F8C  6415               	cpfsgt	isdigit@c,c
  3450  011F8E  D003               	goto	l2537
  3451  011F90  0E01               	movlw	1
  3452  011F92  6E14               	movwf	_isdigit$1742,c
  3453  011F94  D000               	goto	l2537
  3454  011F96                     l2537:
  3455  011F96  C014  F013         	movff	_isdigit$1742,??_isdigit
  3456  011F9A  3013               	rrcf	??_isdigit,w,c
  3457  011F9C  D000               	goto	l862
  3458  011F9E                     l862:
  3459  011F9E  0012               	return		;funcret
  3460  011FA0                     __end_of_isdigit:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           postinc0	equ	0xFEE
  3469                           wreg	equ	0xFE8
  3470                           indf2	equ	0xFDF
  3471                           postinc2	equ	0xFDE
  3472                           postdec2	equ	0xFDD
  3473                           fsr2h	equ	0xFDA
  3474                           fsr2l	equ	0xFD9
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _fround *****************
  3478 ;; Defined at:
  3479 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  prec            1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  prec            1   62[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  3   53[COMRAM] unsigned char 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3493 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;Total ram usage:       10 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    4
  3500 ;; This function calls:
  3501 ;;		___awdiv
  3502 ;;		___awmod
  3503 ;;		___ftmul
  3504 ;;		___wmul
  3505 ;; This function is called by:
  3506 ;;		_sprintf
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text4
  3511  010E20                     __ptext4:
  3512                           	opt stack 0
  3513  010E20                     _fround:
  3514                           	opt stack 25
  3515                           
  3516                           ;incstack = 0
  3517                           ;fround@prec stored from wreg
  3518  010E20  6E3F               	movwf	fround@prec,c
  3519                           
  3520                           ;doprnt.c: 413: if(prec>=110)
  3521  010E22  0E6D               	movlw	109
  3522  010E24  643F               	cpfsgt	fround@prec,c
  3523  010E26  D0A4               	goto	l2479
  3524                           
  3525                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3526  010E28  0E00               	movlw	0
  3527  010E2A  6E24               	movwf	___wmul@multiplicand+1,c
  3528  010E2C  0E03               	movlw	3
  3529  010E2E  6E23               	movwf	___wmul@multiplicand,c
  3530  010E30  0E00               	movlw	0
  3531  010E32  6E1C               	movwf	___awdiv@divisor+1,c
  3532  010E34  0E0A               	movlw	10
  3533  010E36  6E1B               	movwf	___awdiv@divisor,c
  3534  010E38  0E00               	movlw	0
  3535  010E3A  6E16               	movwf	___awmod@divisor+1,c
  3536  010E3C  0E64               	movlw	100
  3537  010E3E  6E15               	movwf	___awmod@divisor,c
  3538  010E40  C03F  F013         	movff	fround@prec,___awmod@dividend
  3539  010E44  6A14               	clrf	___awmod@dividend+1,c
  3540  010E46  ECEB  F08D         	call	___awmod	;wreg free
  3541  010E4A  C013  F019         	movff	?___awmod,___awdiv@dividend
  3542  010E4E  C014  F01A         	movff	?___awmod+1,___awdiv@dividend+1
  3543  010E52  ECC9  F08C         	call	___awdiv	;wreg free
  3544  010E56  0E09               	movlw	9
  3545  010E58  2419               	addwf	?___awdiv,w,c
  3546  010E5A  6E21               	movwf	___wmul@multiplier,c
  3547  010E5C  0E00               	movlw	0
  3548  010E5E  201A               	addwfc	?___awdiv+1,w,c
  3549  010E60  6E22               	movwf	___wmul@multiplier+1,c
  3550  010E62  EC5E  F08F         	call	___wmul	;wreg free
  3551  010E66  0E0F               	movlw	low __npowers_
  3552  010E68  2421               	addwf	?___wmul,w,c
  3553  010E6A  6EF6               	movwf	tblptrl,c
  3554  010E6C  0EFF               	movlw	high __npowers_
  3555  010E6E  2022               	addwfc	?___wmul+1,w,c
  3556  010E70  6EF7               	movwf	tblptrh,c
  3557  010E72                     	if	1	;There are 3 active tblptr bytes
  3558  010E72  6AF8               	clrf	tblptru,c
  3559  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
  3560  010E76  22F8               	addwfc	tblptru,f,c
  3561  010E78                     	endif
  3562  010E78  0009               	tblrd		*+
  3563  010E7A  CFF5 F02A          	movff	tablat,___ftmul@f2
  3564  010E7E  0009               	tblrd		*+
  3565  010E80  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3566  010E84  000A               	tblrd		*-
  3567  010E86  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3568  010E8A  0E00               	movlw	0
  3569  010E8C  6E1C               	movwf	___awdiv@divisor+1,c
  3570  010E8E  0E64               	movlw	100
  3571  010E90  6E1B               	movwf	___awdiv@divisor,c
  3572  010E92  C03F  F019         	movff	fround@prec,___awdiv@dividend
  3573  010E96  6A1A               	clrf	___awdiv@dividend+1,c
  3574  010E98  ECC9  F08C         	call	___awdiv	;wreg free
  3575  010E9C  0E12               	movlw	18
  3576  010E9E  2419               	addwf	?___awdiv,w,c
  3577  010EA0  6E21               	movwf	___wmul@multiplier,c
  3578  010EA2  0E00               	movlw	0
  3579  010EA4  201A               	addwfc	?___awdiv+1,w,c
  3580  010EA6  6E22               	movwf	___wmul@multiplier+1,c
  3581  010EA8  0E00               	movlw	0
  3582  010EAA  6E24               	movwf	___wmul@multiplicand+1,c
  3583  010EAC  0E03               	movlw	3
  3584  010EAE  6E23               	movwf	___wmul@multiplicand,c
  3585  010EB0  EC5E  F08F         	call	___wmul	;wreg free
  3586  010EB4  0E0F               	movlw	low __npowers_
  3587  010EB6  2421               	addwf	?___wmul,w,c
  3588  010EB8  6EF6               	movwf	tblptrl,c
  3589  010EBA  0EFF               	movlw	high __npowers_
  3590  010EBC  2022               	addwfc	?___wmul+1,w,c
  3591  010EBE  6EF7               	movwf	tblptrh,c
  3592  010EC0                     	if	1	;There are 3 active tblptr bytes
  3593  010EC0  6AF8               	clrf	tblptru,c
  3594  010EC2  0E00               	movlw	low (__mediumconst shr (0+16))
  3595  010EC4  22F8               	addwfc	tblptru,f,c
  3596  010EC6                     	endif
  3597  010EC6  0009               	tblrd		*+
  3598  010EC8  CFF5 F027          	movff	tablat,___ftmul@f1
  3599  010ECC  0009               	tblrd		*+
  3600  010ECE  CFF5 F028          	movff	tablat,___ftmul@f1+1
  3601  010ED2  000A               	tblrd		*-
  3602  010ED4  CFF5 F029          	movff	tablat,___ftmul@f1+2
  3603  010ED8  EC1F  F08B         	call	___ftmul	;wreg free
  3604  010EDC  C027  F03C         	movff	?___ftmul,_fround$1997
  3605  010EE0  C028  F03D         	movff	?___ftmul+1,_fround$1997+1
  3606  010EE4  C029  F03E         	movff	?___ftmul+2,_fround$1997+2
  3607                           
  3608                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3609  010EE8  0E00               	movlw	0
  3610  010EEA  6E24               	movwf	___wmul@multiplicand+1,c
  3611  010EEC  0E03               	movlw	3
  3612  010EEE  6E23               	movwf	___wmul@multiplicand,c
  3613  010EF0  0E00               	movlw	0
  3614  010EF2  6E16               	movwf	___awmod@divisor+1,c
  3615  010EF4  0E0A               	movlw	10
  3616  010EF6  6E15               	movwf	___awmod@divisor,c
  3617  010EF8  C03F  F013         	movff	fround@prec,___awmod@dividend
  3618  010EFC  6A14               	clrf	___awmod@dividend+1,c
  3619  010EFE  ECEB  F08D         	call	___awmod	;wreg free
  3620  010F02  C013  F021         	movff	?___awmod,___wmul@multiplier
  3621  010F06  C014  F022         	movff	?___awmod+1,___wmul@multiplier+1
  3622  010F0A  EC5E  F08F         	call	___wmul	;wreg free
  3623  010F0E  0E0F               	movlw	low __npowers_
  3624  010F10  2421               	addwf	?___wmul,w,c
  3625  010F12  6EF6               	movwf	tblptrl,c
  3626  010F14  0EFF               	movlw	high __npowers_
  3627  010F16  2022               	addwfc	?___wmul+1,w,c
  3628  010F18  6EF7               	movwf	tblptrh,c
  3629  010F1A                     	if	1	;There are 3 active tblptr bytes
  3630  010F1A  6AF8               	clrf	tblptru,c
  3631  010F1C  0E00               	movlw	low (__mediumconst shr (0+16))
  3632  010F1E  22F8               	addwfc	tblptru,f,c
  3633  010F20                     	endif
  3634  010F20  0009               	tblrd		*+
  3635  010F22  CFF5 F02A          	movff	tablat,___ftmul@f2
  3636  010F26  0009               	tblrd		*+
  3637  010F28  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3638  010F2C  000A               	tblrd		*-
  3639  010F2E  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3640  010F32  C03C  F027         	movff	_fround$1997,___ftmul@f1
  3641  010F36  C03D  F028         	movff	_fround$1997+1,___ftmul@f1+1
  3642  010F3A  C03E  F029         	movff	_fround$1997+2,___ftmul@f1+2
  3643  010F3E  EC1F  F08B         	call	___ftmul	;wreg free
  3644  010F42  C027  F039         	movff	?___ftmul,_fround$1998
  3645  010F46  C028  F03A         	movff	?___ftmul+1,_fround$1998+1
  3646  010F4A  C029  F03B         	movff	?___ftmul+2,_fround$1998+2
  3647                           
  3648                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3649  010F4E  C039  F027         	movff	_fround$1998,___ftmul@f1
  3650  010F52  C03A  F028         	movff	_fround$1998+1,___ftmul@f1+1
  3651  010F56  C03B  F029         	movff	_fround$1998+2,___ftmul@f1+2
  3652  010F5A  0E00               	movlw	0
  3653  010F5C  6E2A               	movwf	___ftmul@f2,c
  3654  010F5E  0E00               	movlw	0
  3655  010F60  6E2B               	movwf	___ftmul@f2+1,c
  3656  010F62  0E3F               	movlw	63
  3657  010F64  6E2C               	movwf	___ftmul@f2+2,c
  3658  010F66  EC1F  F08B         	call	___ftmul	;wreg free
  3659  010F6A  D086               	goto	L8
  3660  010F6C  D08C               	goto	l171
  3661  010F6E  D068               	goto	l2487
  3662  010F70                     l2479:
  3663                           
  3664                           ;doprnt.c: 415: else if(prec > 10)
  3665  010F70  0E0A               	movlw	10
  3666  010F72  643F               	cpfsgt	fround@prec,c
  3667  010F74  D065               	goto	l2487
  3668                           
  3669                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3670  010F76  0E00               	movlw	0
  3671  010F78  6E24               	movwf	___wmul@multiplicand+1,c
  3672  010F7A  0E03               	movlw	3
  3673  010F7C  6E23               	movwf	___wmul@multiplicand,c
  3674  010F7E  0E00               	movlw	0
  3675  010F80  6E16               	movwf	___awmod@divisor+1,c
  3676  010F82  0E0A               	movlw	10
  3677  010F84  6E15               	movwf	___awmod@divisor,c
  3678  010F86  C03F  F013         	movff	fround@prec,___awmod@dividend
  3679  010F8A  6A14               	clrf	___awmod@dividend+1,c
  3680  010F8C  ECEB  F08D         	call	___awmod	;wreg free
  3681  010F90  C013  F021         	movff	?___awmod,___wmul@multiplier
  3682  010F94  C014  F022         	movff	?___awmod+1,___wmul@multiplier+1
  3683  010F98  EC5E  F08F         	call	___wmul	;wreg free
  3684  010F9C  0E0F               	movlw	low __npowers_
  3685  010F9E  2421               	addwf	?___wmul,w,c
  3686  010FA0  6EF6               	movwf	tblptrl,c
  3687  010FA2  0EFF               	movlw	high __npowers_
  3688  010FA4  2022               	addwfc	?___wmul+1,w,c
  3689  010FA6  6EF7               	movwf	tblptrh,c
  3690  010FA8                     	if	1	;There are 3 active tblptr bytes
  3691  010FA8  6AF8               	clrf	tblptru,c
  3692  010FAA  0E00               	movlw	low (__mediumconst shr (0+16))
  3693  010FAC  22F8               	addwfc	tblptru,f,c
  3694  010FAE                     	endif
  3695  010FAE  0009               	tblrd		*+
  3696  010FB0  CFF5 F02A          	movff	tablat,___ftmul@f2
  3697  010FB4  0009               	tblrd		*+
  3698  010FB6  CFF5 F02B          	movff	tablat,___ftmul@f2+1
  3699  010FBA  000A               	tblrd		*-
  3700  010FBC  CFF5 F02C          	movff	tablat,___ftmul@f2+2
  3701  010FC0  0E00               	movlw	0
  3702  010FC2  6E1C               	movwf	___awdiv@divisor+1,c
  3703  010FC4  0E0A               	movlw	10
  3704  010FC6  6E1B               	movwf	___awdiv@divisor,c
  3705  010FC8  C03F  F019         	movff	fround@prec,___awdiv@dividend
  3706  010FCC  6A1A               	clrf	___awdiv@dividend+1,c
  3707  010FCE  ECC9  F08C         	call	___awdiv	;wreg free
  3708  010FD2  0E09               	movlw	9
  3709  010FD4  2419               	addwf	?___awdiv,w,c
  3710  010FD6  6E21               	movwf	___wmul@multiplier,c
  3711  010FD8  0E00               	movlw	0
  3712  010FDA  201A               	addwfc	?___awdiv+1,w,c
  3713  010FDC  6E22               	movwf	___wmul@multiplier+1,c
  3714  010FDE  0E00               	movlw	0
  3715  010FE0  6E24               	movwf	___wmul@multiplicand+1,c
  3716  010FE2  0E03               	movlw	3
  3717  010FE4  6E23               	movwf	___wmul@multiplicand,c
  3718  010FE6  EC5E  F08F         	call	___wmul	;wreg free
  3719  010FEA  0E0F               	movlw	low __npowers_
  3720  010FEC  2421               	addwf	?___wmul,w,c
  3721  010FEE  6EF6               	movwf	tblptrl,c
  3722  010FF0  0EFF               	movlw	high __npowers_
  3723  010FF2  2022               	addwfc	?___wmul+1,w,c
  3724  010FF4  6EF7               	movwf	tblptrh,c
  3725  010FF6                     	if	1	;There are 3 active tblptr bytes
  3726  010FF6  6AF8               	clrf	tblptru,c
  3727  010FF8  0E00               	movlw	low (__mediumconst shr (0+16))
  3728  010FFA  22F8               	addwfc	tblptru,f,c
  3729  010FFC                     	endif
  3730  010FFC  0009               	tblrd		*+
  3731  010FFE  CFF5 F027          	movff	tablat,___ftmul@f1
  3732  011002  0009               	tblrd		*+
  3733  011004  CFF5 F028          	movff	tablat,___ftmul@f1+1
  3734  011008  000A               	tblrd		*-
  3735  01100A  CFF5 F029          	movff	tablat,___ftmul@f1+2
  3736  01100E  EC1F  F08B         	call	___ftmul	;wreg free
  3737  011012  C027  F03C         	movff	?___ftmul,_fround$1997
  3738  011016  C028  F03D         	movff	?___ftmul+1,_fround$1997+1
  3739  01101A  C029  F03E         	movff	?___ftmul+2,_fround$1997+2
  3740                           
  3741                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3742  01101E  C03C  F027         	movff	_fround$1997,___ftmul@f1
  3743  011022  C03D  F028         	movff	_fround$1997+1,___ftmul@f1+1
  3744  011026  C03E  F029         	movff	_fround$1997+2,___ftmul@f1+2
  3745  01102A  0E00               	movlw	0
  3746  01102C  6E2A               	movwf	___ftmul@f2,c
  3747  01102E  0E00               	movlw	0
  3748  011030  6E2B               	movwf	___ftmul@f2+1,c
  3749  011032  0E3F               	movlw	63
  3750  011034  6E2C               	movwf	___ftmul@f2+2,c
  3751  011036  EC1F  F08B         	call	___ftmul	;wreg free
  3752  01103A  D01E               	goto	L8
  3753  01103C  D024               	goto	l171
  3754  01103E  D000               	goto	l2487
  3755  011040                     l2487:
  3756                           
  3757                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3758  011040  503F               	movf	fround@prec,w,c
  3759  011042  0D03               	mullw	3
  3760  011044  0E0F               	movlw	low __npowers_
  3761  011046  24F3               	addwf	prodl,w,c
  3762  011048  6EF6               	movwf	tblptrl,c
  3763  01104A  0EFF               	movlw	high __npowers_
  3764  01104C  20F4               	addwfc	prodh,w,c
  3765  01104E  6EF7               	movwf	tblptrh,c
  3766  011050                     	if	1	;There are 3 active tblptr bytes
  3767  011050  6AF8               	clrf	tblptru,c
  3768  011052  0E00               	movlw	low (__mediumconst shr (0+16))
  3769  011054  22F8               	addwfc	tblptru,f,c
  3770  011056                     	endif
  3771  011056  0009               	tblrd		*+
  3772  011058  CFF5 F027          	movff	tablat,___ftmul@f1
  3773  01105C  0009               	tblrd		*+
  3774  01105E  CFF5 F028          	movff	tablat,___ftmul@f1+1
  3775  011062  000A               	tblrd		*-
  3776  011064  CFF5 F029          	movff	tablat,___ftmul@f1+2
  3777  011068  0E00               	movlw	0
  3778  01106A  6E2A               	movwf	___ftmul@f2,c
  3779  01106C  0E00               	movlw	0
  3780  01106E  6E2B               	movwf	___ftmul@f2+1,c
  3781  011070  0E3F               	movlw	63
  3782  011072  6E2C               	movwf	___ftmul@f2+2,c
  3783  011074  EC1F  F08B         	call	___ftmul	;wreg free
  3784  011078                     L8:
  3785  011078  C027  F036         	movff	?___ftmul,?_fround
  3786  01107C  C028  F037         	movff	?___ftmul+1,?_fround+1
  3787  011080  C029  F038         	movff	?___ftmul+2,?_fround+2
  3788  011084  D000               	goto	l171
  3789  011086                     l171:
  3790  011086  0012               	return		;funcret
  3791  011088                     __end_of_fround:
  3792                           	opt stack 0
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           indf2	equ	0xFDF
  3802                           postinc2	equ	0xFDE
  3803                           postdec2	equ	0xFDD
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           
  3808 ;; *************** function ___wmul *****************
  3809 ;; Defined at:
  3810 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  multiplier      2   32[COMRAM] unsigned int 
  3813 ;;  multiplicand    2   34[COMRAM] unsigned int 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  product         2   36[COMRAM] unsigned int 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   32[COMRAM] unsigned int 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, prodl, prodh
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        6 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    2
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_fround
  3836 ;;		_scale
  3837 ;;		_sprintf
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text5
  3842  011EBC                     __ptext5:
  3843                           	opt stack 0
  3844  011EBC                     ___wmul:
  3845                           	opt stack 26
  3846                           
  3847                           ;incstack = 0
  3848  011EBC  5021               	movf	___wmul@multiplier,w,c
  3849  011EBE  0223               	mulwf	___wmul@multiplicand,c
  3850  011EC0  CFF3 F025          	movff	prodl,___wmul@product
  3851  011EC4  CFF4 F026          	movff	prodh,___wmul@product+1
  3852  011EC8  5021               	movf	___wmul@multiplier,w,c
  3853  011ECA  0224               	mulwf	___wmul@multiplicand+1,c
  3854  011ECC  50F3               	movf	prodl,w,c
  3855  011ECE  2626               	addwf	___wmul@product+1,f,c
  3856  011ED0  5022               	movf	___wmul@multiplier+1,w,c
  3857  011ED2  0223               	mulwf	___wmul@multiplicand,c
  3858  011ED4  50F3               	movf	prodl,w,c
  3859  011ED6  2626               	addwf	___wmul@product+1,f,c
  3860  011ED8  C025  F021         	movff	___wmul@product,?___wmul
  3861  011EDC  C026  F022         	movff	___wmul@product+1,?___wmul+1
  3862  011EE0  D000               	goto	l376
  3863  011EE2                     l376:
  3864  011EE2  0012               	return		;funcret
  3865  011EE4                     __end_of___wmul:
  3866                           	opt stack 0
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           indf2	equ	0xFDF
  3876                           postinc2	equ	0xFDE
  3877                           postdec2	equ	0xFDD
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           
  3882 ;; *************** function ___ftmul *****************
  3883 ;; Defined at:
  3884 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  f1              3   38[COMRAM] float 
  3887 ;;  f2              3   41[COMRAM] float 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  f3_as_produc    3   48[COMRAM] unsigned um
  3890 ;;  sign            1   52[COMRAM] unsigned char 
  3891 ;;  cntr            1   51[COMRAM] unsigned char 
  3892 ;;  exp             1   47[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  3   38[COMRAM] float 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:       15 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    3
  3909 ;; This function calls:
  3910 ;;		___ftpack
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;;		_fround
  3914 ;;		_scale
  3915 ;;		_sprintf
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text6
  3920  01163E                     __ptext6:
  3921                           	opt stack 0
  3922  01163E                     ___ftmul:
  3923                           	opt stack 25
  3924                           
  3925                           ;incstack = 0
  3926  01163E  C029  F02D         	movff	___ftmul@f1+2,??___ftmul
  3927  011642  6A2E               	clrf	(??___ftmul+1)& (0+255),c
  3928  011644  6A2F               	clrf	(??___ftmul+2)& (0+255),c
  3929  011646  3428               	rlcf	___ftmul@f1+1,w,c
  3930  011648  362D               	rlcf	??___ftmul& (0+255),f,c
  3931  01164A  E301               	bnc	u1931
  3932  01164C  802E               	bsf	(??___ftmul+1)& (0+255),0,c
  3933  01164E                     u1931:
  3934  01164E  502D               	movf	??___ftmul,w,c
  3935  011650  6E30               	movwf	___ftmul@exp,c
  3936  011652  5030               	movf	___ftmul@exp,w,c
  3937  011654  A4D8               	btfss	status,2,c
  3938  011656  D002               	goto	l2261
  3939  011658  D00E               	goto	l2263
  3940  01165A  D06C               	goto	l826
  3941  01165C                     l2261:
  3942  01165C  C02C  F02D         	movff	___ftmul@f2+2,??___ftmul
  3943  011660  6A2E               	clrf	(??___ftmul+1)& (0+255),c
  3944  011662  6A2F               	clrf	(??___ftmul+2)& (0+255),c
  3945  011664  342B               	rlcf	___ftmul@f2+1,w,c
  3946  011666  362D               	rlcf	??___ftmul& (0+255),f,c
  3947  011668  E301               	bnc	u1951
  3948  01166A  802E               	bsf	(??___ftmul+1)& (0+255),0,c
  3949  01166C                     u1951:
  3950  01166C  502D               	movf	??___ftmul,w,c
  3951  01166E  6E35               	movwf	___ftmul@sign,c
  3952  011670  5035               	movf	___ftmul@sign,w,c
  3953  011672  A4D8               	btfss	status,2,c
  3954  011674  D007               	goto	l2267
  3955  011676                     l2263:
  3956  011676  0E00               	movlw	0
  3957  011678  6E27               	movwf	?___ftmul,c
  3958  01167A  0E00               	movlw	0
  3959  01167C  6E28               	movwf	?___ftmul+1,c
  3960  01167E  0E00               	movlw	0
  3961  011680  6E29               	movwf	?___ftmul+2,c
  3962  011682  D058               	goto	l826
  3963  011684                     l2267:
  3964  011684  5035               	movf	___ftmul@sign,w,c
  3965  011686  0F7B               	addlw	123
  3966  011688  2630               	addwf	___ftmul@exp,f,c
  3967  01168A  C029  F035         	movff	___ftmul@f1+2,___ftmul@sign
  3968  01168E  502C               	movf	___ftmul@f2+2,w,c
  3969  011690  1A35               	xorwf	___ftmul@sign,f,c
  3970  011692  0E80               	movlw	128
  3971  011694  1635               	andwf	___ftmul@sign,f,c
  3972  011696  8E28               	bsf	___ftmul@f1+1,7,c
  3973  011698  8E2B               	bsf	___ftmul@f2+1,7,c
  3974  01169A  0EFF               	movlw	255
  3975  01169C  162A               	andwf	___ftmul@f2,f,c
  3976  01169E  0EFF               	movlw	255
  3977  0116A0  162B               	andwf	___ftmul@f2+1,f,c
  3978  0116A2  0E00               	movlw	0
  3979  0116A4  162C               	andwf	___ftmul@f2+2,f,c
  3980  0116A6  0E00               	movlw	0
  3981  0116A8  6E31               	movwf	___ftmul@f3_as_product,c
  3982  0116AA  0E00               	movlw	0
  3983  0116AC  6E32               	movwf	___ftmul@f3_as_product+1,c
  3984  0116AE  0E00               	movlw	0
  3985  0116B0  6E33               	movwf	___ftmul@f3_as_product+2,c
  3986  0116B2  0E07               	movlw	7
  3987  0116B4  6E34               	movwf	___ftmul@cntr,c
  3988  0116B6  D000               	goto	l2281
  3989  0116B8                     l2281:
  3990  0116B8  A027               	btfss	___ftmul@f1,0,c
  3991  0116BA  D007               	goto	l2285
  3992  0116BC  502A               	movf	___ftmul@f2,w,c
  3993  0116BE  2631               	addwf	___ftmul@f3_as_product,f,c
  3994  0116C0  502B               	movf	___ftmul@f2+1,w,c
  3995  0116C2  2232               	addwfc	___ftmul@f3_as_product+1,f,c
  3996  0116C4  502C               	movf	___ftmul@f2+2,w,c
  3997  0116C6  2233               	addwfc	___ftmul@f3_as_product+2,f,c
  3998  0116C8  D000               	goto	l2285
  3999  0116CA                     l2285:
  4000  0116CA  90D8               	bcf	status,0,c
  4001  0116CC  3229               	rrcf	___ftmul@f1+2,f,c
  4002  0116CE  3228               	rrcf	___ftmul@f1+1,f,c
  4003  0116D0  3227               	rrcf	___ftmul@f1,f,c
  4004  0116D2  90D8               	bcf	status,0,c
  4005  0116D4  362A               	rlcf	___ftmul@f2,f,c
  4006  0116D6  362B               	rlcf	___ftmul@f2+1,f,c
  4007  0116D8  362C               	rlcf	___ftmul@f2+2,f,c
  4008  0116DA  2E34               	decfsz	___ftmul@cntr,f,c
  4009  0116DC  D7ED               	goto	l2281
  4010  0116DE  D000               	goto	l2289
  4011  0116E0                     l2289:
  4012  0116E0  0E09               	movlw	9
  4013  0116E2  6E34               	movwf	___ftmul@cntr,c
  4014  0116E4  D000               	goto	l2291
  4015  0116E6                     l2291:
  4016  0116E6  A027               	btfss	___ftmul@f1,0,c
  4017  0116E8  D007               	goto	l2295
  4018  0116EA  502A               	movf	___ftmul@f2,w,c
  4019  0116EC  2631               	addwf	___ftmul@f3_as_product,f,c
  4020  0116EE  502B               	movf	___ftmul@f2+1,w,c
  4021  0116F0  2232               	addwfc	___ftmul@f3_as_product+1,f,c
  4022  0116F2  502C               	movf	___ftmul@f2+2,w,c
  4023  0116F4  2233               	addwfc	___ftmul@f3_as_product+2,f,c
  4024  0116F6  D000               	goto	l2295
  4025  0116F8                     l2295:
  4026  0116F8  90D8               	bcf	status,0,c
  4027  0116FA  3229               	rrcf	___ftmul@f1+2,f,c
  4028  0116FC  3228               	rrcf	___ftmul@f1+1,f,c
  4029  0116FE  3227               	rrcf	___ftmul@f1,f,c
  4030  011700  90D8               	bcf	status,0,c
  4031  011702  3233               	rrcf	___ftmul@f3_as_product+2,f,c
  4032  011704  3232               	rrcf	___ftmul@f3_as_product+1,f,c
  4033  011706  3231               	rrcf	___ftmul@f3_as_product,f,c
  4034  011708  2E34               	decfsz	___ftmul@cntr,f,c
  4035  01170A  D7ED               	goto	l2291
  4036  01170C  D000               	goto	l2299
  4037  01170E                     l2299:
  4038  01170E  C031  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  4039  011712  C032  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4040  011716  C033  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4041  01171A  C030  F016         	movff	___ftmul@exp,___ftpack@exp
  4042  01171E  C035  F017         	movff	___ftmul@sign,___ftpack@sign
  4043  011722  EC0E  F08C         	call	___ftpack	;wreg free
  4044  011726  C013  F027         	movff	?___ftpack,?___ftmul
  4045  01172A  C014  F028         	movff	?___ftpack+1,?___ftmul+1
  4046  01172E  C015  F029         	movff	?___ftpack+2,?___ftmul+2
  4047  011732  D000               	goto	l826
  4048  011734                     l826:
  4049  011734  0012               	return		;funcret
  4050  011736                     __end_of___ftmul:
  4051                           	opt stack 0
  4052                           tblptru	equ	0xFF8
  4053                           tblptrh	equ	0xFF7
  4054                           tblptrl	equ	0xFF6
  4055                           tablat	equ	0xFF5
  4056                           prodh	equ	0xFF4
  4057                           prodl	equ	0xFF3
  4058                           postinc0	equ	0xFEE
  4059                           wreg	equ	0xFE8
  4060                           indf2	equ	0xFDF
  4061                           postinc2	equ	0xFDE
  4062                           postdec2	equ	0xFDD
  4063                           fsr2h	equ	0xFDA
  4064                           fsr2l	equ	0xFD9
  4065                           status	equ	0xFD8
  4066                           
  4067 ;; *************** function ___awmod *****************
  4068 ;; Defined at:
  4069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  dividend        2   18[COMRAM] int 
  4072 ;;  divisor         2   20[COMRAM] int 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  sign            1   23[COMRAM] unsigned char 
  4075 ;;  counter         1   22[COMRAM] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2   18[COMRAM] int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    2
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_fround
  4096 ;;		_scale
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text7
  4101  011BD6                     __ptext7:
  4102                           	opt stack 0
  4103  011BD6                     ___awmod:
  4104                           	opt stack 26
  4105                           
  4106                           ;incstack = 0
  4107  011BD6  0E00               	movlw	0
  4108  011BD8  6E18               	movwf	___awmod@sign,c
  4109  011BDA  AE14               	btfss	___awmod@dividend+1,7,c
  4110  011BDC  D007               	goto	l2355
  4111  011BDE  6C13               	negf	___awmod@dividend,c
  4112  011BE0  1E14               	comf	___awmod@dividend+1,f,c
  4113  011BE2  B0D8               	btfsc	status,0,c
  4114  011BE4  2A14               	incf	___awmod@dividend+1,f,c
  4115  011BE6  0E01               	movlw	1
  4116  011BE8  6E18               	movwf	___awmod@sign,c
  4117  011BEA  D000               	goto	l2355
  4118  011BEC                     l2355:
  4119  011BEC  AE16               	btfss	___awmod@divisor+1,7,c
  4120  011BEE  D005               	goto	l2359
  4121  011BF0  6C15               	negf	___awmod@divisor,c
  4122  011BF2  1E16               	comf	___awmod@divisor+1,f,c
  4123  011BF4  B0D8               	btfsc	status,0,c
  4124  011BF6  2A16               	incf	___awmod@divisor+1,f,c
  4125  011BF8  D000               	goto	l2359
  4126  011BFA                     l2359:
  4127  011BFA  5015               	movf	___awmod@divisor,w,c
  4128  011BFC  1016               	iorwf	___awmod@divisor+1,w,c
  4129  011BFE  B4D8               	btfsc	status,2,c
  4130  011C00  D01D               	goto	l2375
  4131  011C02  0E01               	movlw	1
  4132  011C04  6E17               	movwf	___awmod@counter,c
  4133  011C06  D005               	goto	l2365
  4134  011C08                     l2363:
  4135  011C08  90D8               	bcf	status,0,c
  4136  011C0A  3615               	rlcf	___awmod@divisor,f,c
  4137  011C0C  3616               	rlcf	___awmod@divisor+1,f,c
  4138  011C0E  2A17               	incf	___awmod@counter,f,c
  4139  011C10  D000               	goto	l2365
  4140  011C12                     l2365:
  4141  011C12  BE16               	btfsc	___awmod@divisor+1,7,c
  4142  011C14  D002               	goto	l2367
  4143  011C16  D7F8               	goto	l2363
  4144  011C18  D000               	goto	l2367
  4145  011C1A                     l2367:
  4146  011C1A  5015               	movf	___awmod@divisor,w,c
  4147  011C1C  5C13               	subwf	___awmod@dividend,w,c
  4148  011C1E  5016               	movf	___awmod@divisor+1,w,c
  4149  011C20  5814               	subwfb	___awmod@dividend+1,w,c
  4150  011C22  A0D8               	btfss	status,0,c
  4151  011C24  D005               	goto	l2371
  4152  011C26  5015               	movf	___awmod@divisor,w,c
  4153  011C28  5E13               	subwf	___awmod@dividend,f,c
  4154  011C2A  5016               	movf	___awmod@divisor+1,w,c
  4155  011C2C  5A14               	subwfb	___awmod@dividend+1,f,c
  4156  011C2E  D000               	goto	l2371
  4157  011C30                     l2371:
  4158  011C30  90D8               	bcf	status,0,c
  4159  011C32  3216               	rrcf	___awmod@divisor+1,f,c
  4160  011C34  3215               	rrcf	___awmod@divisor,f,c
  4161  011C36  2E17               	decfsz	___awmod@counter,f,c
  4162  011C38  D7F0               	goto	l2367
  4163  011C3A  D000               	goto	l2375
  4164  011C3C                     l2375:
  4165  011C3C  5018               	movf	___awmod@sign,w,c
  4166  011C3E  B4D8               	btfsc	status,2,c
  4167  011C40  D005               	goto	l2379
  4168  011C42  6C13               	negf	___awmod@dividend,c
  4169  011C44  1E14               	comf	___awmod@dividend+1,f,c
  4170  011C46  B0D8               	btfsc	status,0,c
  4171  011C48  2A14               	incf	___awmod@dividend+1,f,c
  4172  011C4A  D000               	goto	l2379
  4173  011C4C                     l2379:
  4174  011C4C  C013  F013         	movff	___awmod@dividend,?___awmod
  4175  011C50  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  4176  011C54  D000               	goto	l582
  4177  011C56                     l582:
  4178  011C56  0012               	return		;funcret
  4179  011C58                     __end_of___awmod:
  4180                           	opt stack 0
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodh	equ	0xFF4
  4186                           prodl	equ	0xFF3
  4187                           postinc0	equ	0xFEE
  4188                           wreg	equ	0xFE8
  4189                           indf2	equ	0xFDF
  4190                           postinc2	equ	0xFDE
  4191                           postdec2	equ	0xFDD
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function ___awdiv *****************
  4197 ;; Defined at:
  4198 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  dividend        2   24[COMRAM] int 
  4201 ;;  divisor         2   26[COMRAM] int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  quotient        2   30[COMRAM] int 
  4204 ;;  sign            1   29[COMRAM] unsigned char 
  4205 ;;  counter         1   28[COMRAM] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  2   24[COMRAM] int 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;Total ram usage:        8 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    2
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_fround
  4226 ;;		_scale
  4227 ;;		_sprintf
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text8
  4232  011992                     __ptext8:
  4233                           	opt stack 0
  4234  011992                     ___awdiv:
  4235                           	opt stack 26
  4236                           
  4237                           ;incstack = 0
  4238  011992  0E00               	movlw	0
  4239  011994  6E1E               	movwf	___awdiv@sign,c
  4240  011996  AE1C               	btfss	___awdiv@divisor+1,7,c
  4241  011998  D007               	goto	l2311
  4242  01199A  6C1B               	negf	___awdiv@divisor,c
  4243  01199C  1E1C               	comf	___awdiv@divisor+1,f,c
  4244  01199E  B0D8               	btfsc	status,0,c
  4245  0119A0  2A1C               	incf	___awdiv@divisor+1,f,c
  4246  0119A2  0E01               	movlw	1
  4247  0119A4  6E1E               	movwf	___awdiv@sign,c
  4248  0119A6  D000               	goto	l2311
  4249  0119A8                     l2311:
  4250  0119A8  AE1A               	btfss	___awdiv@dividend+1,7,c
  4251  0119AA  D007               	goto	l2317
  4252  0119AC  6C19               	negf	___awdiv@dividend,c
  4253  0119AE  1E1A               	comf	___awdiv@dividend+1,f,c
  4254  0119B0  B0D8               	btfsc	status,0,c
  4255  0119B2  2A1A               	incf	___awdiv@dividend+1,f,c
  4256  0119B4  0E01               	movlw	1
  4257  0119B6  1A1E               	xorwf	___awdiv@sign,f,c
  4258  0119B8  D000               	goto	l2317
  4259  0119BA                     l2317:
  4260  0119BA  0E00               	movlw	0
  4261  0119BC  6E20               	movwf	___awdiv@quotient+1,c
  4262  0119BE  0E00               	movlw	0
  4263  0119C0  6E1F               	movwf	___awdiv@quotient,c
  4264  0119C2  501B               	movf	___awdiv@divisor,w,c
  4265  0119C4  101C               	iorwf	___awdiv@divisor+1,w,c
  4266  0119C6  B4D8               	btfsc	status,2,c
  4267  0119C8  D021               	goto	l2339
  4268  0119CA  0E01               	movlw	1
  4269  0119CC  6E1D               	movwf	___awdiv@counter,c
  4270  0119CE  D005               	goto	l2325
  4271  0119D0                     l2323:
  4272  0119D0  90D8               	bcf	status,0,c
  4273  0119D2  361B               	rlcf	___awdiv@divisor,f,c
  4274  0119D4  361C               	rlcf	___awdiv@divisor+1,f,c
  4275  0119D6  2A1D               	incf	___awdiv@counter,f,c
  4276  0119D8  D000               	goto	l2325
  4277  0119DA                     l2325:
  4278  0119DA  BE1C               	btfsc	___awdiv@divisor+1,7,c
  4279  0119DC  D002               	goto	l2327
  4280  0119DE  D7F8               	goto	l2323
  4281  0119E0  D000               	goto	l2327
  4282  0119E2                     l2327:
  4283  0119E2  90D8               	bcf	status,0,c
  4284  0119E4  361F               	rlcf	___awdiv@quotient,f,c
  4285  0119E6  3620               	rlcf	___awdiv@quotient+1,f,c
  4286  0119E8  501B               	movf	___awdiv@divisor,w,c
  4287  0119EA  5C19               	subwf	___awdiv@dividend,w,c
  4288  0119EC  501C               	movf	___awdiv@divisor+1,w,c
  4289  0119EE  581A               	subwfb	___awdiv@dividend+1,w,c
  4290  0119F0  A0D8               	btfss	status,0,c
  4291  0119F2  D006               	goto	l2335
  4292  0119F4  501B               	movf	___awdiv@divisor,w,c
  4293  0119F6  5E19               	subwf	___awdiv@dividend,f,c
  4294  0119F8  501C               	movf	___awdiv@divisor+1,w,c
  4295  0119FA  5A1A               	subwfb	___awdiv@dividend+1,f,c
  4296  0119FC  801F               	bsf	___awdiv@quotient,0,c
  4297  0119FE  D000               	goto	l2335
  4298  011A00                     l2335:
  4299  011A00  90D8               	bcf	status,0,c
  4300  011A02  321C               	rrcf	___awdiv@divisor+1,f,c
  4301  011A04  321B               	rrcf	___awdiv@divisor,f,c
  4302  011A06  2E1D               	decfsz	___awdiv@counter,f,c
  4303  011A08  D7EC               	goto	l2327
  4304  011A0A  D000               	goto	l2339
  4305  011A0C                     l2339:
  4306  011A0C  501E               	movf	___awdiv@sign,w,c
  4307  011A0E  B4D8               	btfsc	status,2,c
  4308  011A10  D005               	goto	l2343
  4309  011A12  6C1F               	negf	___awdiv@quotient,c
  4310  011A14  1E20               	comf	___awdiv@quotient+1,f,c
  4311  011A16  B0D8               	btfsc	status,0,c
  4312  011A18  2A20               	incf	___awdiv@quotient+1,f,c
  4313  011A1A  D000               	goto	l2343
  4314  011A1C                     l2343:
  4315  011A1C  C01F  F019         	movff	___awdiv@quotient,?___awdiv
  4316  011A20  C020  F01A         	movff	___awdiv@quotient+1,?___awdiv+1
  4317  011A24  D000               	goto	l569
  4318  011A26                     l569:
  4319  011A26  0012               	return		;funcret
  4320  011A28                     __end_of___awdiv:
  4321                           	opt stack 0
  4322                           tblptru	equ	0xFF8
  4323                           tblptrh	equ	0xFF7
  4324                           tblptrl	equ	0xFF6
  4325                           tablat	equ	0xFF5
  4326                           prodh	equ	0xFF4
  4327                           prodl	equ	0xFF3
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           indf2	equ	0xFDF
  4331                           postinc2	equ	0xFDE
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function __tdiv_to_l_ *****************
  4338 ;; Defined at:
  4339 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  f1              3   18[COMRAM] float 
  4342 ;;  f2              3   21[COMRAM] float 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  quot            4   27[COMRAM] unsigned long 
  4345 ;;  exp1            1   32[COMRAM] unsigned char 
  4346 ;;  cntr            1   31[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  4   18[COMRAM] unsigned long 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4356 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;Total ram usage:       15 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    2
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_sprintf
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text9
  4371  011424                     __ptext9:
  4372                           	opt stack 0
  4373  011424                     __tdiv_to_l_:
  4374                           	opt stack 27
  4375                           
  4376                           ;incstack = 0
  4377  011424  C015  F019         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4378  011428  6A1A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4379  01142A  6A1B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4380  01142C  3414               	rlcf	__tdiv_to_l_@f1+1,w,c
  4381  01142E  3619               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4382  011430  E301               	bnc	u2341
  4383  011432  801A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4384  011434                     u2341:
  4385  011434  5019               	movf	??__tdiv_to_l_,w,c
  4386  011436  6E21               	movwf	__tdiv_to_l_@exp1,c
  4387  011438  5021               	movf	__tdiv_to_l_@exp1,w,c
  4388  01143A  A4D8               	btfss	status,2,c
  4389  01143C  D002               	goto	l2547
  4390  01143E  D05D               	goto	l2589
  4391  011440  D078               	goto	l802
  4392  011442                     l2547:
  4393  011442  C018  F019         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4394  011446  6A1A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4395  011448  6A1B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4396  01144A  3417               	rlcf	__tdiv_to_l_@f2+1,w,c
  4397  01144C  3619               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4398  01144E  E301               	bnc	u2361
  4399  011450  801A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4400  011452                     u2361:
  4401  011452  5019               	movf	??__tdiv_to_l_,w,c
  4402  011454  6E20               	movwf	__tdiv_to_l_@cntr,c
  4403  011456  5020               	movf	__tdiv_to_l_@cntr,w,c
  4404  011458  A4D8               	btfss	status,2,c
  4405  01145A  D002               	goto	l2553
  4406  01145C  D04E               	goto	l2589
  4407  01145E  D069               	goto	l802
  4408  011460                     l2553:
  4409  011460  8E14               	bsf	__tdiv_to_l_@f1+1,7,c
  4410  011462  0EFF               	movlw	255
  4411  011464  1613               	andwf	__tdiv_to_l_@f1,f,c
  4412  011466  0EFF               	movlw	255
  4413  011468  1614               	andwf	__tdiv_to_l_@f1+1,f,c
  4414  01146A  0E00               	movlw	0
  4415  01146C  1615               	andwf	__tdiv_to_l_@f1+2,f,c
  4416  01146E  8E17               	bsf	__tdiv_to_l_@f2+1,7,c
  4417  011470  0EFF               	movlw	255
  4418  011472  1616               	andwf	__tdiv_to_l_@f2,f,c
  4419  011474  0EFF               	movlw	255
  4420  011476  1617               	andwf	__tdiv_to_l_@f2+1,f,c
  4421  011478  0E00               	movlw	0
  4422  01147A  1618               	andwf	__tdiv_to_l_@f2+2,f,c
  4423  01147C  0E00               	movlw	0
  4424  01147E  6E1C               	movwf	__tdiv_to_l_@quot,c
  4425  011480  0E00               	movlw	0
  4426  011482  6E1D               	movwf	__tdiv_to_l_@quot+1,c
  4427  011484  0E00               	movlw	0
  4428  011486  6E1E               	movwf	__tdiv_to_l_@quot+2,c
  4429  011488  0E00               	movlw	0
  4430  01148A  6E1F               	movwf	__tdiv_to_l_@quot+3,c
  4431  01148C  0E7F               	movlw	127
  4432  01148E  5E21               	subwf	__tdiv_to_l_@exp1,f,c
  4433  011490  5020               	movf	__tdiv_to_l_@cntr,w,c
  4434  011492  0F98               	addlw	152
  4435  011494  5E21               	subwf	__tdiv_to_l_@exp1,f,c
  4436  011496  0E18               	movlw	24
  4437  011498  6E20               	movwf	__tdiv_to_l_@cntr,c
  4438  01149A                     l804:
  4439  01149A  90D8               	bcf	status,0,c
  4440  01149C  361C               	rlcf	__tdiv_to_l_@quot,f,c
  4441  01149E  361D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4442  0114A0  361E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4443  0114A2  361F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4444  0114A4  5016               	movf	__tdiv_to_l_@f2,w,c
  4445  0114A6  5C13               	subwf	__tdiv_to_l_@f1,w,c
  4446  0114A8  5017               	movf	__tdiv_to_l_@f2+1,w,c
  4447  0114AA  5814               	subwfb	__tdiv_to_l_@f1+1,w,c
  4448  0114AC  5018               	movf	__tdiv_to_l_@f2+2,w,c
  4449  0114AE  5815               	subwfb	__tdiv_to_l_@f1+2,w,c
  4450  0114B0  A0D8               	btfss	status,0,c
  4451  0114B2  D007               	goto	l805
  4452  0114B4  5016               	movf	__tdiv_to_l_@f2,w,c
  4453  0114B6  5E13               	subwf	__tdiv_to_l_@f1,f,c
  4454  0114B8  5017               	movf	__tdiv_to_l_@f2+1,w,c
  4455  0114BA  5A14               	subwfb	__tdiv_to_l_@f1+1,f,c
  4456  0114BC  5018               	movf	__tdiv_to_l_@f2+2,w,c
  4457  0114BE  5A15               	subwfb	__tdiv_to_l_@f1+2,f,c
  4458  0114C0  801C               	bsf	__tdiv_to_l_@quot,0,c
  4459  0114C2                     l805:
  4460  0114C2  90D8               	bcf	status,0,c
  4461  0114C4  3613               	rlcf	__tdiv_to_l_@f1,f,c
  4462  0114C6  3614               	rlcf	__tdiv_to_l_@f1+1,f,c
  4463  0114C8  3615               	rlcf	__tdiv_to_l_@f1+2,f,c
  4464  0114CA  2E20               	decfsz	__tdiv_to_l_@cntr,f,c
  4465  0114CC  D7E6               	goto	l804
  4466  0114CE  D000               	goto	l2575
  4467  0114D0                     l2575:
  4468  0114D0  AE21               	btfss	__tdiv_to_l_@exp1,7,c
  4469  0114D2  D010               	goto	l2587
  4470  0114D4  5021               	movf	__tdiv_to_l_@exp1,w,c
  4471  0114D6  0A80               	xorlw	128
  4472  0114D8  0F97               	addlw	151
  4473  0114DA  B0D8               	btfsc	status,0,c
  4474  0114DC  D003               	goto	l2583
  4475  0114DE  D00D               	goto	l2589
  4476  0114E0  D028               	goto	l802
  4477  0114E2  D000               	goto	l2583
  4478  0114E4                     l2583:
  4479  0114E4  90D8               	bcf	status,0,c
  4480  0114E6  321F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4481  0114E8  321E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4482  0114EA  321D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4483  0114EC  321C               	rrcf	__tdiv_to_l_@quot,f,c
  4484  0114EE  3E21               	incfsz	__tdiv_to_l_@exp1,f,c
  4485  0114F0  D7F9               	goto	l2583
  4486  0114F2  D017               	goto	l811
  4487  0114F4                     l2587:
  4488  0114F4  0E17               	movlw	23
  4489  0114F6  6421               	cpfsgt	__tdiv_to_l_@exp1,c
  4490  0114F8  D011               	goto	l2595
  4491  0114FA                     l2589:
  4492  0114FA  0E00               	movlw	0
  4493  0114FC  6E13               	movwf	?__tdiv_to_l_,c
  4494  0114FE  0E00               	movlw	0
  4495  011500  6E14               	movwf	?__tdiv_to_l_+1,c
  4496  011502  0E00               	movlw	0
  4497  011504  6E15               	movwf	?__tdiv_to_l_+2,c
  4498  011506  0E00               	movlw	0
  4499  011508  6E16               	movwf	?__tdiv_to_l_+3,c
  4500  01150A  D013               	goto	l802
  4501  01150C  D007               	goto	l2595
  4502  01150E                     l2593:
  4503  01150E  90D8               	bcf	status,0,c
  4504  011510  361C               	rlcf	__tdiv_to_l_@quot,f,c
  4505  011512  361D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4506  011514  361E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4507  011516  361F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4508  011518  0621               	decf	__tdiv_to_l_@exp1,f,c
  4509  01151A  D000               	goto	l2595
  4510  01151C                     l2595:
  4511  01151C  5021               	movf	__tdiv_to_l_@exp1,w,c
  4512  01151E  A4D8               	btfss	status,2,c
  4513  011520  D7F6               	goto	l2593
  4514  011522                     l811:
  4515  011522  C01C  F013         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4516  011526  C01D  F014         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4517  01152A  C01E  F015         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4518  01152E  C01F  F016         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4519  011532                     l802:
  4520  011532  0012               	return		;funcret
  4521  011534                     __end_of__tdiv_to_l_:
  4522                           	opt stack 0
  4523                           tblptru	equ	0xFF8
  4524                           tblptrh	equ	0xFF7
  4525                           tblptrl	equ	0xFF6
  4526                           tablat	equ	0xFF5
  4527                           prodh	equ	0xFF4
  4528                           prodl	equ	0xFF3
  4529                           postinc0	equ	0xFEE
  4530                           wreg	equ	0xFE8
  4531                           indf2	equ	0xFDF
  4532                           postinc2	equ	0xFDE
  4533                           postdec2	equ	0xFDD
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538 ;; *************** function __div_to_l_ *****************
  4539 ;; Defined at:
  4540 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  f1              3   18[COMRAM] unsigned long 
  4543 ;;  f2              3   21[COMRAM] unsigned long 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  quot            4   24[COMRAM] unsigned long 
  4546 ;;  exp1            1   29[COMRAM] unsigned char 
  4547 ;;  cntr            1   28[COMRAM] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  4   18[COMRAM] unsigned long 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;Total ram usage:       12 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    2
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_sprintf
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text10
  4572  011534                     __ptext10:
  4573                           	opt stack 0
  4574  011534                     __div_to_l_:
  4575                           	opt stack 27
  4576                           
  4577                           ;incstack = 0
  4578  011534  3415               	rlcf	__div_to_l_@f1+2,w,c
  4579  011536  3416               	rlcf	__div_to_l_@f1+3,w,c
  4580  011538  6E1E               	movwf	__div_to_l_@exp1,c
  4581  01153A  501E               	movf	__div_to_l_@exp1,w,c
  4582  01153C  A4D8               	btfss	status,2,c
  4583  01153E  D002               	goto	l2603
  4584  011540  D061               	goto	l2649
  4585  011542  D07C               	goto	l681
  4586  011544                     l2603:
  4587  011544  3418               	rlcf	__div_to_l_@f2+2,w,c
  4588  011546  3419               	rlcf	__div_to_l_@f2+3,w,c
  4589  011548  6E1D               	movwf	__div_to_l_@cntr,c
  4590  01154A  501D               	movf	__div_to_l_@cntr,w,c
  4591  01154C  A4D8               	btfss	status,2,c
  4592  01154E  D002               	goto	l2609
  4593  011550  D059               	goto	l2649
  4594  011552  D074               	goto	l681
  4595  011554                     l2609:
  4596  011554  8E15               	bsf	__div_to_l_@f1+2,7,c
  4597  011556  0EFF               	movlw	255
  4598  011558  1613               	andwf	__div_to_l_@f1,f,c
  4599  01155A  0EFF               	movlw	255
  4600  01155C  1614               	andwf	__div_to_l_@f1+1,f,c
  4601  01155E  0EFF               	movlw	255
  4602  011560  1615               	andwf	__div_to_l_@f1+2,f,c
  4603  011562  0E00               	movlw	0
  4604  011564  1616               	andwf	__div_to_l_@f1+3,f,c
  4605  011566  8E18               	bsf	__div_to_l_@f2+2,7,c
  4606  011568  0EFF               	movlw	255
  4607  01156A  1616               	andwf	__div_to_l_@f2,f,c
  4608  01156C  0EFF               	movlw	255
  4609  01156E  1617               	andwf	__div_to_l_@f2+1,f,c
  4610  011570  0EFF               	movlw	255
  4611  011572  1618               	andwf	__div_to_l_@f2+2,f,c
  4612  011574  0E00               	movlw	0
  4613  011576  1619               	andwf	__div_to_l_@f2+3,f,c
  4614  011578  0E00               	movlw	0
  4615  01157A  6E19               	movwf	__div_to_l_@quot,c
  4616  01157C  0E00               	movlw	0
  4617  01157E  6E1A               	movwf	__div_to_l_@quot+1,c
  4618  011580  0E00               	movlw	0
  4619  011582  6E1B               	movwf	__div_to_l_@quot+2,c
  4620  011584  0E00               	movlw	0
  4621  011586  6E1C               	movwf	__div_to_l_@quot+3,c
  4622  011588  0E7F               	movlw	127
  4623  01158A  5E1E               	subwf	__div_to_l_@exp1,f,c
  4624  01158C  501D               	movf	__div_to_l_@cntr,w,c
  4625  01158E  0FA0               	addlw	160
  4626  011590  5E1E               	subwf	__div_to_l_@exp1,f,c
  4627  011592  0E20               	movlw	32
  4628  011594  6E1D               	movwf	__div_to_l_@cntr,c
  4629  011596  D000               	goto	l2623
  4630  011598                     l2623:
  4631  011598  90D8               	bcf	status,0,c
  4632  01159A  3619               	rlcf	__div_to_l_@quot,f,c
  4633  01159C  361A               	rlcf	__div_to_l_@quot+1,f,c
  4634  01159E  361B               	rlcf	__div_to_l_@quot+2,f,c
  4635  0115A0  361C               	rlcf	__div_to_l_@quot+3,f,c
  4636  0115A2  5016               	movf	__div_to_l_@f2,w,c
  4637  0115A4  5C13               	subwf	__div_to_l_@f1,w,c
  4638  0115A6  5017               	movf	__div_to_l_@f2+1,w,c
  4639  0115A8  5814               	subwfb	__div_to_l_@f1+1,w,c
  4640  0115AA  5018               	movf	__div_to_l_@f2+2,w,c
  4641  0115AC  5815               	subwfb	__div_to_l_@f1+2,w,c
  4642  0115AE  5019               	movf	__div_to_l_@f2+3,w,c
  4643  0115B0  5816               	subwfb	__div_to_l_@f1+3,w,c
  4644  0115B2  A0D8               	btfss	status,0,c
  4645  0115B4  D00A               	goto	l2631
  4646  0115B6  5016               	movf	__div_to_l_@f2,w,c
  4647  0115B8  5E13               	subwf	__div_to_l_@f1,f,c
  4648  0115BA  5017               	movf	__div_to_l_@f2+1,w,c
  4649  0115BC  5A14               	subwfb	__div_to_l_@f1+1,f,c
  4650  0115BE  5018               	movf	__div_to_l_@f2+2,w,c
  4651  0115C0  5A15               	subwfb	__div_to_l_@f1+2,f,c
  4652  0115C2  5019               	movf	__div_to_l_@f2+3,w,c
  4653  0115C4  5A16               	subwfb	__div_to_l_@f1+3,f,c
  4654  0115C6  8019               	bsf	__div_to_l_@quot,0,c
  4655  0115C8  D000               	goto	l2631
  4656  0115CA                     l2631:
  4657  0115CA  90D8               	bcf	status,0,c
  4658  0115CC  3613               	rlcf	__div_to_l_@f1,f,c
  4659  0115CE  3614               	rlcf	__div_to_l_@f1+1,f,c
  4660  0115D0  3615               	rlcf	__div_to_l_@f1+2,f,c
  4661  0115D2  3616               	rlcf	__div_to_l_@f1+3,f,c
  4662  0115D4  2E1D               	decfsz	__div_to_l_@cntr,f,c
  4663  0115D6  D7E0               	goto	l2623
  4664  0115D8  D000               	goto	l2635
  4665  0115DA                     l2635:
  4666  0115DA  AE1E               	btfss	__div_to_l_@exp1,7,c
  4667  0115DC  D010               	goto	l2647
  4668  0115DE  501E               	movf	__div_to_l_@exp1,w,c
  4669  0115E0  0A80               	xorlw	128
  4670  0115E2  0F9F               	addlw	159
  4671  0115E4  B0D8               	btfsc	status,0,c
  4672  0115E6  D003               	goto	l2643
  4673  0115E8  D00D               	goto	l2649
  4674  0115EA  D028               	goto	l681
  4675  0115EC  D000               	goto	l2643
  4676  0115EE                     l2643:
  4677  0115EE  90D8               	bcf	status,0,c
  4678  0115F0  321C               	rrcf	__div_to_l_@quot+3,f,c
  4679  0115F2  321B               	rrcf	__div_to_l_@quot+2,f,c
  4680  0115F4  321A               	rrcf	__div_to_l_@quot+1,f,c
  4681  0115F6  3219               	rrcf	__div_to_l_@quot,f,c
  4682  0115F8  3E1E               	incfsz	__div_to_l_@exp1,f,c
  4683  0115FA  D7F9               	goto	l2643
  4684  0115FC  D017               	goto	l690
  4685  0115FE                     l2647:
  4686  0115FE  0E1F               	movlw	31
  4687  011600  641E               	cpfsgt	__div_to_l_@exp1,c
  4688  011602  D011               	goto	l2655
  4689  011604                     l2649:
  4690  011604  0E00               	movlw	0
  4691  011606  6E13               	movwf	?__div_to_l_,c
  4692  011608  0E00               	movlw	0
  4693  01160A  6E14               	movwf	?__div_to_l_+1,c
  4694  01160C  0E00               	movlw	0
  4695  01160E  6E15               	movwf	?__div_to_l_+2,c
  4696  011610  0E00               	movlw	0
  4697  011612  6E16               	movwf	?__div_to_l_+3,c
  4698  011614  D013               	goto	l681
  4699  011616  D007               	goto	l2655
  4700  011618                     l2653:
  4701  011618  90D8               	bcf	status,0,c
  4702  01161A  3619               	rlcf	__div_to_l_@quot,f,c
  4703  01161C  361A               	rlcf	__div_to_l_@quot+1,f,c
  4704  01161E  361B               	rlcf	__div_to_l_@quot+2,f,c
  4705  011620  361C               	rlcf	__div_to_l_@quot+3,f,c
  4706  011622  061E               	decf	__div_to_l_@exp1,f,c
  4707  011624  D000               	goto	l2655
  4708  011626                     l2655:
  4709  011626  501E               	movf	__div_to_l_@exp1,w,c
  4710  011628  A4D8               	btfss	status,2,c
  4711  01162A  D7F6               	goto	l2653
  4712  01162C                     l690:
  4713  01162C  C019  F013         	movff	__div_to_l_@quot,?__div_to_l_
  4714  011630  C01A  F014         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4715  011634  C01B  F015         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4716  011638  C01C  F016         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4717  01163C                     l681:
  4718  01163C  0012               	return		;funcret
  4719  01163E                     __end_of__div_to_l_:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           postinc0	equ	0xFEE
  4728                           wreg	equ	0xFE8
  4729                           indf2	equ	0xFDF
  4730                           postinc2	equ	0xFDE
  4731                           postdec2	equ	0xFDD
  4732                           fsr2h	equ	0xFDA
  4733                           fsr2l	equ	0xFD9
  4734                           status	equ	0xFD8
  4735                           
  4736 ;; *************** function ___lltoft *****************
  4737 ;; Defined at:
  4738 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  c               4   26[COMRAM] unsigned long 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  exp             1   34[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  3   26[COMRAM] float 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;Total ram usage:        9 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    3
  4759 ;; This function calls:
  4760 ;;		___ftpack
  4761 ;; This function is called by:
  4762 ;;		_sprintf
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text11
  4767  011D3A                     __ptext11:
  4768                           	opt stack 0
  4769  011D3A                     ___lltoft:
  4770                           	opt stack 26
  4771                           
  4772                           ;incstack = 0
  4773  011D3A  0E8E               	movlw	142
  4774  011D3C  6E23               	movwf	___lltoft@exp,c
  4775  011D3E  D007               	goto	l2775
  4776  011D40                     l2773:
  4777  011D40  90D8               	bcf	status,0,c
  4778  011D42  321E               	rrcf	___lltoft@c+3,f,c
  4779  011D44  321D               	rrcf	___lltoft@c+2,f,c
  4780  011D46  321C               	rrcf	___lltoft@c+1,f,c
  4781  011D48  321B               	rrcf	___lltoft@c,f,c
  4782  011D4A  2A23               	incf	___lltoft@exp,f,c
  4783  011D4C  D000               	goto	l2775
  4784  011D4E                     l2775:
  4785  011D4E  0E00               	movlw	0
  4786  011D50  141B               	andwf	___lltoft@c,w,c
  4787  011D52  6E1F               	movwf	??___lltoft& (0+255),c
  4788  011D54  0E00               	movlw	0
  4789  011D56  141C               	andwf	___lltoft@c+1,w,c
  4790  011D58  6E20               	movwf	(??___lltoft+1)& (0+255),c
  4791  011D5A  0E00               	movlw	0
  4792  011D5C  141D               	andwf	___lltoft@c+2,w,c
  4793  011D5E  6E21               	movwf	(??___lltoft+2)& (0+255),c
  4794  011D60  0EFF               	movlw	255
  4795  011D62  141E               	andwf	___lltoft@c+3,w,c
  4796  011D64  6E22               	movwf	(??___lltoft+3)& (0+255),c
  4797  011D66  501F               	movf	??___lltoft,w,c
  4798  011D68  1020               	iorwf	??___lltoft+1,w,c
  4799  011D6A  1021               	iorwf	??___lltoft+2,w,c
  4800  011D6C  1022               	iorwf	??___lltoft+3,w,c
  4801  011D6E  A4D8               	btfss	status,2,c
  4802  011D70  D7E7               	goto	l2773
  4803  011D72  C01B  F013         	movff	___lltoft@c,___ftpack@arg
  4804  011D76  C01C  F014         	movff	___lltoft@c+1,___ftpack@arg+1
  4805  011D7A  C01D  F015         	movff	___lltoft@c+2,___ftpack@arg+2
  4806  011D7E  C023  F016         	movff	___lltoft@exp,___ftpack@exp
  4807  011D82  0E00               	movlw	0
  4808  011D84  6E17               	movwf	___ftpack@sign,c
  4809  011D86  EC0E  F08C         	call	___ftpack	;wreg free
  4810  011D8A  C013  F01B         	movff	?___ftpack,?___lltoft
  4811  011D8E  C014  F01C         	movff	?___ftpack+1,?___lltoft+1
  4812  011D92  C015  F01D         	movff	?___ftpack+2,?___lltoft+2
  4813  011D96  D000               	goto	l921
  4814  011D98                     l921:
  4815  011D98  0012               	return		;funcret
  4816  011D9A                     __end_of___lltoft:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           postinc0	equ	0xFEE
  4825                           wreg	equ	0xFE8
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function ___llmod *****************
  4834 ;; Defined at:
  4835 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  dividend        4   31[COMRAM] unsigned long 
  4838 ;;  divisor         4   35[COMRAM] unsigned long 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  counter         1   39[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  4   31[COMRAM] unsigned long 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4850 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;Total ram usage:        9 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    2
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_sprintf
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text12
  4865  011CCA                     __ptext12:
  4866                           	opt stack 0
  4867  011CCA                     ___llmod:
  4868                           	opt stack 27
  4869                           
  4870                           ;incstack = 0
  4871  011CCA  5024               	movf	___llmod@divisor,w,c
  4872  011CCC  1025               	iorwf	___llmod@divisor+1,w,c
  4873  011CCE  1026               	iorwf	___llmod@divisor+2,w,c
  4874  011CD0  1027               	iorwf	___llmod@divisor+3,w,c
  4875  011CD2  B4D8               	btfsc	status,2,c
  4876  011CD4  D029               	goto	l901
  4877  011CD6  0E01               	movlw	1
  4878  011CD8  6E28               	movwf	___llmod@counter,c
  4879  011CDA  D007               	goto	l2761
  4880  011CDC                     l2759:
  4881  011CDC  90D8               	bcf	status,0,c
  4882  011CDE  3624               	rlcf	___llmod@divisor,f,c
  4883  011CE0  3625               	rlcf	___llmod@divisor+1,f,c
  4884  011CE2  3626               	rlcf	___llmod@divisor+2,f,c
  4885  011CE4  3627               	rlcf	___llmod@divisor+3,f,c
  4886  011CE6  2A28               	incf	___llmod@counter,f,c
  4887  011CE8  D000               	goto	l2761
  4888  011CEA                     l2761:
  4889  011CEA  BE27               	btfsc	___llmod@divisor+3,7,c
  4890  011CEC  D002               	goto	l2763
  4891  011CEE  D7F6               	goto	l2759
  4892  011CF0  D000               	goto	l2763
  4893  011CF2                     l2763:
  4894  011CF2  5024               	movf	___llmod@divisor,w,c
  4895  011CF4  5C20               	subwf	___llmod@dividend,w,c
  4896  011CF6  5025               	movf	___llmod@divisor+1,w,c
  4897  011CF8  5821               	subwfb	___llmod@dividend+1,w,c
  4898  011CFA  5026               	movf	___llmod@divisor+2,w,c
  4899  011CFC  5822               	subwfb	___llmod@dividend+2,w,c
  4900  011CFE  5027               	movf	___llmod@divisor+3,w,c
  4901  011D00  5823               	subwfb	___llmod@dividend+3,w,c
  4902  011D02  A0D8               	btfss	status,0,c
  4903  011D04  D009               	goto	l2767
  4904  011D06  5024               	movf	___llmod@divisor,w,c
  4905  011D08  5E20               	subwf	___llmod@dividend,f,c
  4906  011D0A  5025               	movf	___llmod@divisor+1,w,c
  4907  011D0C  5A21               	subwfb	___llmod@dividend+1,f,c
  4908  011D0E  5026               	movf	___llmod@divisor+2,w,c
  4909  011D10  5A22               	subwfb	___llmod@dividend+2,f,c
  4910  011D12  5027               	movf	___llmod@divisor+3,w,c
  4911  011D14  5A23               	subwfb	___llmod@dividend+3,f,c
  4912  011D16  D000               	goto	l2767
  4913  011D18                     l2767:
  4914  011D18  90D8               	bcf	status,0,c
  4915  011D1A  3227               	rrcf	___llmod@divisor+3,f,c
  4916  011D1C  3226               	rrcf	___llmod@divisor+2,f,c
  4917  011D1E  3225               	rrcf	___llmod@divisor+1,f,c
  4918  011D20  3224               	rrcf	___llmod@divisor,f,c
  4919  011D22  2E28               	decfsz	___llmod@counter,f,c
  4920  011D24  D7E6               	goto	l2763
  4921  011D26  D000               	goto	l901
  4922  011D28                     l901:
  4923  011D28  C020  F020         	movff	___llmod@dividend,?___llmod
  4924  011D2C  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  4925  011D30  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  4926  011D34  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  4927  011D38  0012               	return		;funcret
  4928  011D3A                     __end_of___llmod:
  4929                           	opt stack 0
  4930                           tblptru	equ	0xFF8
  4931                           tblptrh	equ	0xFF7
  4932                           tblptrl	equ	0xFF6
  4933                           tablat	equ	0xFF5
  4934                           prodh	equ	0xFF4
  4935                           prodl	equ	0xFF3
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           postdec2	equ	0xFDD
  4941                           fsr2h	equ	0xFDA
  4942                           fsr2l	equ	0xFD9
  4943                           status	equ	0xFD8
  4944                           
  4945 ;; *************** function ___lldiv *****************
  4946 ;; Defined at:
  4947 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  dividend        4   18[COMRAM] unsigned long 
  4950 ;;  divisor         4   22[COMRAM] unsigned long 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  quotient        4   26[COMRAM] unsigned long 
  4953 ;;  counter         1   30[COMRAM] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  4   18[COMRAM] unsigned long 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;Total ram usage:       13 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    2
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_sprintf
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text13
  4978  011ABE                     __ptext13:
  4979                           	opt stack 0
  4980  011ABE                     ___lldiv:
  4981                           	opt stack 27
  4982                           
  4983                           ;incstack = 0
  4984  011ABE  0E00               	movlw	0
  4985  011AC0  6E1B               	movwf	___lldiv@quotient,c
  4986  011AC2  0E00               	movlw	0
  4987  011AC4  6E1C               	movwf	___lldiv@quotient+1,c
  4988  011AC6  0E00               	movlw	0
  4989  011AC8  6E1D               	movwf	___lldiv@quotient+2,c
  4990  011ACA  0E00               	movlw	0
  4991  011ACC  6E1E               	movwf	___lldiv@quotient+3,c
  4992  011ACE  5017               	movf	___lldiv@divisor,w,c
  4993  011AD0  1018               	iorwf	___lldiv@divisor+1,w,c
  4994  011AD2  1019               	iorwf	___lldiv@divisor+2,w,c
  4995  011AD4  101A               	iorwf	___lldiv@divisor+3,w,c
  4996  011AD6  B4D8               	btfsc	status,2,c
  4997  011AD8  D02F               	goto	l891
  4998  011ADA  0E01               	movlw	1
  4999  011ADC  6E1F               	movwf	___lldiv@counter,c
  5000  011ADE  D007               	goto	l2741
  5001  011AE0                     l2739:
  5002  011AE0  90D8               	bcf	status,0,c
  5003  011AE2  3617               	rlcf	___lldiv@divisor,f,c
  5004  011AE4  3618               	rlcf	___lldiv@divisor+1,f,c
  5005  011AE6  3619               	rlcf	___lldiv@divisor+2,f,c
  5006  011AE8  361A               	rlcf	___lldiv@divisor+3,f,c
  5007  011AEA  2A1F               	incf	___lldiv@counter,f,c
  5008  011AEC  D000               	goto	l2741
  5009  011AEE                     l2741:
  5010  011AEE  BE1A               	btfsc	___lldiv@divisor+3,7,c
  5011  011AF0  D002               	goto	l2743
  5012  011AF2  D7F6               	goto	l2739
  5013  011AF4  D000               	goto	l2743
  5014  011AF6                     l2743:
  5015  011AF6  90D8               	bcf	status,0,c
  5016  011AF8  361B               	rlcf	___lldiv@quotient,f,c
  5017  011AFA  361C               	rlcf	___lldiv@quotient+1,f,c
  5018  011AFC  361D               	rlcf	___lldiv@quotient+2,f,c
  5019  011AFE  361E               	rlcf	___lldiv@quotient+3,f,c
  5020  011B00  5017               	movf	___lldiv@divisor,w,c
  5021  011B02  5C13               	subwf	___lldiv@dividend,w,c
  5022  011B04  5018               	movf	___lldiv@divisor+1,w,c
  5023  011B06  5814               	subwfb	___lldiv@dividend+1,w,c
  5024  011B08  5019               	movf	___lldiv@divisor+2,w,c
  5025  011B0A  5815               	subwfb	___lldiv@dividend+2,w,c
  5026  011B0C  501A               	movf	___lldiv@divisor+3,w,c
  5027  011B0E  5816               	subwfb	___lldiv@dividend+3,w,c
  5028  011B10  A0D8               	btfss	status,0,c
  5029  011B12  D00A               	goto	l2751
  5030  011B14  5017               	movf	___lldiv@divisor,w,c
  5031  011B16  5E13               	subwf	___lldiv@dividend,f,c
  5032  011B18  5018               	movf	___lldiv@divisor+1,w,c
  5033  011B1A  5A14               	subwfb	___lldiv@dividend+1,f,c
  5034  011B1C  5019               	movf	___lldiv@divisor+2,w,c
  5035  011B1E  5A15               	subwfb	___lldiv@dividend+2,f,c
  5036  011B20  501A               	movf	___lldiv@divisor+3,w,c
  5037  011B22  5A16               	subwfb	___lldiv@dividend+3,f,c
  5038  011B24  801B               	bsf	___lldiv@quotient,0,c
  5039  011B26  D000               	goto	l2751
  5040  011B28                     l2751:
  5041  011B28  90D8               	bcf	status,0,c
  5042  011B2A  321A               	rrcf	___lldiv@divisor+3,f,c
  5043  011B2C  3219               	rrcf	___lldiv@divisor+2,f,c
  5044  011B2E  3218               	rrcf	___lldiv@divisor+1,f,c
  5045  011B30  3217               	rrcf	___lldiv@divisor,f,c
  5046  011B32  2E1F               	decfsz	___lldiv@counter,f,c
  5047  011B34  D7E0               	goto	l2743
  5048  011B36  D000               	goto	l891
  5049  011B38                     l891:
  5050  011B38  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5051  011B3C  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5052  011B40  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5053  011B44  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5054  011B48  0012               	return		;funcret
  5055  011B4A                     __end_of___lldiv:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           indf2	equ	0xFDF
  5066                           postinc2	equ	0xFDE
  5067                           postdec2	equ	0xFDD
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function ___fttol *****************
  5073 ;; Defined at:
  5074 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  f1              3   53[COMRAM] float 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  lval            4   63[COMRAM] unsigned long 
  5079 ;;  exp1            1   67[COMRAM] unsigned char 
  5080 ;;  sign1           1   62[COMRAM] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  4   53[COMRAM] long 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;Total ram usage:       15 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    2
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_sprintf
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text14
  5105  011736                     __ptext14:
  5106                           	opt stack 0
  5107  011736                     ___fttol:
  5108                           	opt stack 27
  5109                           
  5110                           ;incstack = 0
  5111  011736  C038  F03A         	movff	___fttol@f1+2,??___fttol
  5112  01173A  6A3B               	clrf	(??___fttol+1)& (0+255),c
  5113  01173C  6A3C               	clrf	(??___fttol+2)& (0+255),c
  5114  01173E  3437               	rlcf	___fttol@f1+1,w,c
  5115  011740  363A               	rlcf	??___fttol& (0+255),f,c
  5116  011742  E301               	bnc	u2551
  5117  011744  803B               	bsf	(??___fttol+1)& (0+255),0,c
  5118  011746                     u2551:
  5119  011746  503A               	movf	??___fttol,w,c
  5120  011748  6E44               	movwf	___fttol@exp1,c
  5121  01174A  5044               	movf	___fttol@exp1,w,c
  5122  01174C  A4D8               	btfss	status,2,c
  5123  01174E  D002               	goto	l2693
  5124  011750  D039               	goto	l2717
  5125  011752  D063               	goto	l847
  5126  011754                     l2693:
  5127  011754  0E17               	movlw	23
  5128  011756  6E3A               	movwf	??___fttol& (0+255),c
  5129  011758  C036  F03B         	movff	___fttol@f1,??___fttol+1
  5130  01175C  C037  F03C         	movff	___fttol@f1+1,??___fttol+2
  5131  011760  C038  F03D         	movff	___fttol@f1+2,??___fttol+3
  5132  011764  283A               	incf	??___fttol,w,c
  5133  011766  6E3E               	movwf	(??___fttol+4)& (0+255),c
  5134  011768  D004               	goto	u2570
  5135  01176A                     u2575:
  5136  01176A  90D8               	bcf	status,0,c
  5137  01176C  323D               	rrcf	??___fttol+3,f,c
  5138  01176E  323C               	rrcf	??___fttol+2,f,c
  5139  011770  323B               	rrcf	??___fttol+1,f,c
  5140  011772                     u2570:
  5141  011772  2E3E               	decfsz	(??___fttol+4)& (0+255),f,c
  5142  011774  D7FA               	goto	u2575
  5143  011776  503B               	movf	??___fttol+1,w,c
  5144  011778  6E3F               	movwf	___fttol@sign1,c
  5145  01177A  8E37               	bsf	___fttol@f1+1,7,c
  5146  01177C  0EFF               	movlw	255
  5147  01177E  1636               	andwf	___fttol@f1,f,c
  5148  011780  0EFF               	movlw	255
  5149  011782  1637               	andwf	___fttol@f1+1,f,c
  5150  011784  0E00               	movlw	0
  5151  011786  1638               	andwf	___fttol@f1+2,f,c
  5152  011788  5036               	movf	___fttol@f1,w,c
  5153  01178A  6E40               	movwf	___fttol@lval,c
  5154  01178C  5037               	movf	___fttol@f1+1,w,c
  5155  01178E  6E41               	movwf	___fttol@lval+1,c
  5156  011790  5038               	movf	___fttol@f1+2,w,c
  5157  011792  6E42               	movwf	___fttol@lval+2,c
  5158  011794  6A43               	clrf	___fttol@lval+3,c
  5159  011796  0E8E               	movlw	142
  5160  011798  5E44               	subwf	___fttol@exp1,f,c
  5161  01179A  AE44               	btfss	___fttol@exp1,7,c
  5162  01179C  D010               	goto	l2715
  5163  01179E  5044               	movf	___fttol@exp1,w,c
  5164  0117A0  0A80               	xorlw	128
  5165  0117A2  0F8F               	addlw	143
  5166  0117A4  B0D8               	btfsc	status,0,c
  5167  0117A6  D003               	goto	l2711
  5168  0117A8  D00D               	goto	l2717
  5169  0117AA  D037               	goto	l847
  5170  0117AC  D000               	goto	l2711
  5171  0117AE                     l2711:
  5172  0117AE  90D8               	bcf	status,0,c
  5173  0117B0  3243               	rrcf	___fttol@lval+3,f,c
  5174  0117B2  3242               	rrcf	___fttol@lval+2,f,c
  5175  0117B4  3241               	rrcf	___fttol@lval+1,f,c
  5176  0117B6  3240               	rrcf	___fttol@lval,f,c
  5177  0117B8  3E44               	incfsz	___fttol@exp1,f,c
  5178  0117BA  D7F9               	goto	l2711
  5179  0117BC  D019               	goto	l2725
  5180  0117BE                     l2715:
  5181  0117BE  0E17               	movlw	23
  5182  0117C0  6444               	cpfsgt	___fttol@exp1,c
  5183  0117C2  D011               	goto	l2723
  5184  0117C4                     l2717:
  5185  0117C4  0E00               	movlw	0
  5186  0117C6  6E36               	movwf	?___fttol,c
  5187  0117C8  0E00               	movlw	0
  5188  0117CA  6E37               	movwf	?___fttol+1,c
  5189  0117CC  0E00               	movlw	0
  5190  0117CE  6E38               	movwf	?___fttol+2,c
  5191  0117D0  0E00               	movlw	0
  5192  0117D2  6E39               	movwf	?___fttol+3,c
  5193  0117D4  D022               	goto	l847
  5194  0117D6  D007               	goto	l2723
  5195  0117D8                     l2721:
  5196  0117D8  90D8               	bcf	status,0,c
  5197  0117DA  3640               	rlcf	___fttol@lval,f,c
  5198  0117DC  3641               	rlcf	___fttol@lval+1,f,c
  5199  0117DE  3642               	rlcf	___fttol@lval+2,f,c
  5200  0117E0  3643               	rlcf	___fttol@lval+3,f,c
  5201  0117E2  0644               	decf	___fttol@exp1,f,c
  5202  0117E4  D000               	goto	l2723
  5203  0117E6                     l2723:
  5204  0117E6  5044               	movf	___fttol@exp1,w,c
  5205  0117E8  B4D8               	btfsc	status,2,c
  5206  0117EA  D002               	goto	l2725
  5207  0117EC  D7F5               	goto	l2721
  5208  0117EE  D000               	goto	l2725
  5209  0117F0                     l2725:
  5210  0117F0  503F               	movf	___fttol@sign1,w,c
  5211  0117F2  B4D8               	btfsc	status,2,c
  5212  0117F4  D009               	goto	l2729
  5213  0117F6  1E43               	comf	___fttol@lval+3,f,c
  5214  0117F8  1E42               	comf	___fttol@lval+2,f,c
  5215  0117FA  1E41               	comf	___fttol@lval+1,f,c
  5216  0117FC  6C40               	negf	___fttol@lval,c
  5217  0117FE  0E00               	movlw	0
  5218  011800  2241               	addwfc	___fttol@lval+1,f,c
  5219  011802  2242               	addwfc	___fttol@lval+2,f,c
  5220  011804  2243               	addwfc	___fttol@lval+3,f,c
  5221  011806  D000               	goto	l2729
  5222  011808                     l2729:
  5223  011808  C040  F036         	movff	___fttol@lval,?___fttol
  5224  01180C  C041  F037         	movff	___fttol@lval+1,?___fttol+1
  5225  011810  C042  F038         	movff	___fttol@lval+2,?___fttol+2
  5226  011814  C043  F039         	movff	___fttol@lval+3,?___fttol+3
  5227  011818  D000               	goto	l847
  5228  01181A                     l847:
  5229  01181A  0012               	return		;funcret
  5230  01181C                     __end_of___fttol:
  5231                           	opt stack 0
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           prodh	equ	0xFF4
  5237                           prodl	equ	0xFF3
  5238                           postinc0	equ	0xFEE
  5239                           wreg	equ	0xFE8
  5240                           indf2	equ	0xFDF
  5241                           postinc2	equ	0xFDE
  5242                           postdec2	equ	0xFDD
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function ___ftsub *****************
  5248 ;; Defined at:
  5249 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  f1              3    0[BANK0 ] float 
  5252 ;;  f2              3    3[BANK0 ] float 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  3    0[BANK0 ] float 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        6 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    4
  5271 ;; This function calls:
  5272 ;;		___ftadd
  5273 ;; This function is called by:
  5274 ;;		_sprintf
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text15
  5279  011DF8                     __ptext15:
  5280                           	opt stack 0
  5281  011DF8                     ___ftsub:
  5282                           	opt stack 25
  5283                           
  5284                           ;incstack = 0
  5285  011DF8  0100               	movlb	0	; () banked
  5286  011DFA  5163               	movf	___ftsub@f2& (0+255),w,b
  5287  011DFC  0100               	movlb	0	; () banked
  5288  011DFE  1164               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  5289  011E00  0100               	movlb	0	; () banked
  5290  011E02  1165               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  5291  011E04  B4D8               	btfsc	status,2,c
  5292  011E06  D00A               	goto	l2661
  5293                           
  5294                           ; BSR set to: 0
  5295  011E08  0E00               	movlw	0
  5296  011E0A  0100               	movlb	0	; () banked
  5297  011E0C  1B63               	xorwf	___ftsub@f2& (0+255),f,b
  5298  011E0E  0E00               	movlw	0
  5299  011E10  0100               	movlb	0	; () banked
  5300  011E12  1B64               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  5301  011E14  0E80               	movlw	128
  5302  011E16  0100               	movlb	0	; () banked
  5303  011E18  1B65               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  5304  011E1A  D000               	goto	l2661
  5305  011E1C                     l2661:
  5306                           
  5307                           ; BSR set to: 0
  5308  011E1C  C060  F040         	movff	___ftsub@f1,___ftadd@f1
  5309  011E20  C061  F041         	movff	___ftsub@f1+1,___ftadd@f1+1
  5310  011E24  C062  F042         	movff	___ftsub@f1+2,___ftadd@f1+2
  5311  011E28  C063  F043         	movff	___ftsub@f2,___ftadd@f2
  5312  011E2C  C064  F044         	movff	___ftsub@f2+1,___ftadd@f2+1
  5313  011E30  C065  F045         	movff	___ftsub@f2+2,___ftadd@f2+2
  5314  011E34  EC30  F089         	call	___ftadd	;wreg free
  5315  011E38  C040  F060         	movff	?___ftadd,?___ftsub
  5316  011E3C  C041  F061         	movff	?___ftadd+1,?___ftsub+1
  5317  011E40  C042  F062         	movff	?___ftadd+2,?___ftsub+2
  5318  011E44  D000               	goto	l843
  5319  011E46                     l843:
  5320  011E46  0012               	return		;funcret
  5321  011E48                     __end_of___ftsub:
  5322                           	opt stack 0
  5323                           tblptru	equ	0xFF8
  5324                           tblptrh	equ	0xFF7
  5325                           tblptrl	equ	0xFF6
  5326                           tablat	equ	0xFF5
  5327                           prodh	equ	0xFF4
  5328                           prodl	equ	0xFF3
  5329                           postinc0	equ	0xFEE
  5330                           wreg	equ	0xFE8
  5331                           indf2	equ	0xFDF
  5332                           postinc2	equ	0xFDE
  5333                           postdec2	equ	0xFDD
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function ___ftadd *****************
  5339 ;; Defined at:
  5340 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  f1              3   63[COMRAM] float 
  5343 ;;  f2              3   66[COMRAM] float 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  exp1            1   74[COMRAM] unsigned char 
  5346 ;;  exp2            1   73[COMRAM] unsigned char 
  5347 ;;  sign            1   72[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  3   63[COMRAM] float 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5357 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;Total ram usage:       12 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    3
  5364 ;; This function calls:
  5365 ;;		___ftpack
  5366 ;; This function is called by:
  5367 ;;		_sprintf
  5368 ;;		___ftsub
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text16
  5373  011260                     __ptext16:
  5374                           	opt stack 0
  5375  011260                     ___ftadd:
  5376                           	opt stack 25
  5377                           
  5378                           ;incstack = 0
  5379  011260  C042  F046         	movff	___ftadd@f1+2,??___ftadd
  5380  011264  6A47               	clrf	(??___ftadd+1)& (0+255),c
  5381  011266  6A48               	clrf	(??___ftadd+2)& (0+255),c
  5382  011268  3441               	rlcf	___ftadd@f1+1,w,c
  5383  01126A  3646               	rlcf	??___ftadd& (0+255),f,c
  5384  01126C  E301               	bnc	u1721
  5385  01126E  8047               	bsf	(??___ftadd+1)& (0+255),0,c
  5386  011270                     u1721:
  5387  011270  5046               	movf	??___ftadd,w,c
  5388  011272  6E4B               	movwf	___ftadd@exp1,c
  5389  011274  C045  F046         	movff	___ftadd@f2+2,??___ftadd
  5390  011278  6A47               	clrf	(??___ftadd+1)& (0+255),c
  5391  01127A  6A48               	clrf	(??___ftadd+2)& (0+255),c
  5392  01127C  3444               	rlcf	___ftadd@f2+1,w,c
  5393  01127E  3646               	rlcf	??___ftadd& (0+255),f,c
  5394  011280  E301               	bnc	u1731
  5395  011282  8047               	bsf	(??___ftadd+1)& (0+255),0,c
  5396  011284                     u1731:
  5397  011284  5046               	movf	??___ftadd,w,c
  5398  011286  6E4A               	movwf	___ftadd@exp2,c
  5399  011288  504B               	movf	___ftadd@exp1,w,c
  5400  01128A  B4D8               	btfsc	status,2,c
  5401  01128C  D00B               	goto	l762
  5402  01128E  504A               	movf	___ftadd@exp2,w,c
  5403  011290  5C4B               	subwf	___ftadd@exp1,w,c
  5404  011292  B0D8               	btfsc	status,0,c
  5405  011294  D00E               	goto	l2193
  5406  011296  504B               	movf	___ftadd@exp1,w,c
  5407  011298  0800               	sublw	0
  5408  01129A  244A               	addwf	___ftadd@exp2,w,c
  5409  01129C  6E46               	movwf	??___ftadd& (0+255),c
  5410  01129E  0E18               	movlw	24
  5411  0112A0  6446               	cpfsgt	??___ftadd,c
  5412  0112A2  D007               	goto	l2193
  5413  0112A4                     l762:
  5414  0112A4  C043  F040         	movff	___ftadd@f2,?___ftadd
  5415  0112A8  C044  F041         	movff	___ftadd@f2+1,?___ftadd+1
  5416  0112AC  C045  F042         	movff	___ftadd@f2+2,?___ftadd+2
  5417  0112B0  D0B8               	goto	l763
  5418  0112B2                     l2193:
  5419  0112B2  504A               	movf	___ftadd@exp2,w,c
  5420  0112B4  B4D8               	btfsc	status,2,c
  5421  0112B6  D00B               	goto	l766
  5422  0112B8  504B               	movf	___ftadd@exp1,w,c
  5423  0112BA  5C4A               	subwf	___ftadd@exp2,w,c
  5424  0112BC  B0D8               	btfsc	status,0,c
  5425  0112BE  D00E               	goto	l2199
  5426  0112C0  504A               	movf	___ftadd@exp2,w,c
  5427  0112C2  0800               	sublw	0
  5428  0112C4  244B               	addwf	___ftadd@exp1,w,c
  5429  0112C6  6E46               	movwf	??___ftadd& (0+255),c
  5430  0112C8  0E18               	movlw	24
  5431  0112CA  6446               	cpfsgt	??___ftadd,c
  5432  0112CC  D007               	goto	l2199
  5433  0112CE                     l766:
  5434  0112CE  C040  F040         	movff	___ftadd@f1,?___ftadd
  5435  0112D2  C041  F041         	movff	___ftadd@f1+1,?___ftadd+1
  5436  0112D6  C042  F042         	movff	___ftadd@f1+2,?___ftadd+2
  5437  0112DA  D0A3               	goto	l763
  5438  0112DC                     l2199:
  5439  0112DC  0E06               	movlw	6
  5440  0112DE  6E49               	movwf	___ftadd@sign,c
  5441  0112E0  AE42               	btfss	___ftadd@f1+2,7,c
  5442  0112E2  D002               	goto	l2205
  5443  0112E4  8E49               	bsf	___ftadd@sign,7,c
  5444  0112E6  D000               	goto	l2205
  5445  0112E8                     l2205:
  5446  0112E8  BE45               	btfsc	___ftadd@f2+2,7,c
  5447  0112EA  8C49               	bsf	___ftadd@sign,6,c
  5448  0112EC  8E41               	bsf	___ftadd@f1+1,7,c
  5449  0112EE  0EFF               	movlw	255
  5450  0112F0  1640               	andwf	___ftadd@f1,f,c
  5451  0112F2  0EFF               	movlw	255
  5452  0112F4  1641               	andwf	___ftadd@f1+1,f,c
  5453  0112F6  0E00               	movlw	0
  5454  0112F8  1642               	andwf	___ftadd@f1+2,f,c
  5455  0112FA  8E44               	bsf	___ftadd@f2+1,7,c
  5456  0112FC  0EFF               	movlw	255
  5457  0112FE  1643               	andwf	___ftadd@f2,f,c
  5458  011300  0EFF               	movlw	255
  5459  011302  1644               	andwf	___ftadd@f2+1,f,c
  5460  011304  0E00               	movlw	0
  5461  011306  1645               	andwf	___ftadd@f2+2,f,c
  5462  011308  504A               	movf	___ftadd@exp2,w,c
  5463  01130A  5C4B               	subwf	___ftadd@exp1,w,c
  5464  01130C  B0D8               	btfsc	status,0,c
  5465  01130E  D01E               	goto	l2225
  5466  011310                     l2215:
  5467  011310  90D8               	bcf	status,0,c
  5468  011312  3643               	rlcf	___ftadd@f2,f,c
  5469  011314  3644               	rlcf	___ftadd@f2+1,f,c
  5470  011316  3645               	rlcf	___ftadd@f2+2,f,c
  5471  011318  064A               	decf	___ftadd@exp2,f,c
  5472  01131A  504B               	movf	___ftadd@exp1,w,c
  5473  01131C  184A               	xorwf	___ftadd@exp2,w,c
  5474  01131E  B4D8               	btfsc	status,2,c
  5475  011320  D00F               	goto	l2223
  5476  011322  0649               	decf	___ftadd@sign,f,c
  5477  011324  C049  F046         	movff	___ftadd@sign,??___ftadd
  5478  011328  0E07               	movlw	7
  5479  01132A  1646               	andwf	??___ftadd,f,c
  5480  01132C  B4D8               	btfsc	status,2,c
  5481  01132E  D008               	goto	l2223
  5482  011330  D7EF               	goto	l2215
  5483  011332  D006               	goto	l2223
  5484  011334                     l2221:
  5485  011334  90D8               	bcf	status,0,c
  5486  011336  3242               	rrcf	___ftadd@f1+2,f,c
  5487  011338  3241               	rrcf	___ftadd@f1+1,f,c
  5488  01133A  3240               	rrcf	___ftadd@f1,f,c
  5489  01133C  2A4B               	incf	___ftadd@exp1,f,c
  5490  01133E  D000               	goto	l2223
  5491  011340                     l2223:
  5492  011340  504A               	movf	___ftadd@exp2,w,c
  5493  011342  184B               	xorwf	___ftadd@exp1,w,c
  5494  011344  B4D8               	btfsc	status,2,c
  5495  011346  D024               	goto	l777
  5496  011348  D7F5               	goto	l2221
  5497  01134A  D022               	goto	l777
  5498  01134C                     l2225:
  5499  01134C  504B               	movf	___ftadd@exp1,w,c
  5500  01134E  5C4A               	subwf	___ftadd@exp2,w,c
  5501  011350  B0D8               	btfsc	status,0,c
  5502  011352  D01E               	goto	l777
  5503  011354                     l2227:
  5504  011354  90D8               	bcf	status,0,c
  5505  011356  3640               	rlcf	___ftadd@f1,f,c
  5506  011358  3641               	rlcf	___ftadd@f1+1,f,c
  5507  01135A  3642               	rlcf	___ftadd@f1+2,f,c
  5508  01135C  064B               	decf	___ftadd@exp1,f,c
  5509  01135E  504B               	movf	___ftadd@exp1,w,c
  5510  011360  184A               	xorwf	___ftadd@exp2,w,c
  5511  011362  B4D8               	btfsc	status,2,c
  5512  011364  D00F               	goto	l2235
  5513  011366  0649               	decf	___ftadd@sign,f,c
  5514  011368  C049  F046         	movff	___ftadd@sign,??___ftadd
  5515  01136C  0E07               	movlw	7
  5516  01136E  1646               	andwf	??___ftadd,f,c
  5517  011370  B4D8               	btfsc	status,2,c
  5518  011372  D008               	goto	l2235
  5519  011374  D7EF               	goto	l2227
  5520  011376  D006               	goto	l2235
  5521  011378                     l2233:
  5522  011378  90D8               	bcf	status,0,c
  5523  01137A  3245               	rrcf	___ftadd@f2+2,f,c
  5524  01137C  3244               	rrcf	___ftadd@f2+1,f,c
  5525  01137E  3243               	rrcf	___ftadd@f2,f,c
  5526  011380  2A4A               	incf	___ftadd@exp2,f,c
  5527  011382  D000               	goto	l2235
  5528  011384                     l2235:
  5529  011384  504A               	movf	___ftadd@exp2,w,c
  5530  011386  184B               	xorwf	___ftadd@exp1,w,c
  5531  011388  B4D8               	btfsc	status,2,c
  5532  01138A  D002               	goto	l777
  5533  01138C  D7F5               	goto	l2233
  5534  01138E  D000               	goto	l777
  5535  011390                     l777:
  5536  011390  AE49               	btfss	___ftadd@sign,7,c
  5537  011392  D00C               	goto	l786
  5538  011394  0EFF               	movlw	255
  5539  011396  1A40               	xorwf	___ftadd@f1,f,c
  5540  011398  0EFF               	movlw	255
  5541  01139A  1A41               	xorwf	___ftadd@f1+1,f,c
  5542  01139C  0EFF               	movlw	255
  5543  01139E  1A42               	xorwf	___ftadd@f1+2,f,c
  5544  0113A0  0E01               	movlw	1
  5545  0113A2  2640               	addwf	___ftadd@f1,f,c
  5546  0113A4  0E00               	movlw	0
  5547  0113A6  2241               	addwfc	___ftadd@f1+1,f,c
  5548  0113A8  0E00               	movlw	0
  5549  0113AA  2242               	addwfc	___ftadd@f1+2,f,c
  5550  0113AC                     l786:
  5551  0113AC  AC49               	btfss	___ftadd@sign,6,c
  5552  0113AE  D00D               	goto	l2241
  5553  0113B0  0EFF               	movlw	255
  5554  0113B2  1A43               	xorwf	___ftadd@f2,f,c
  5555  0113B4  0EFF               	movlw	255
  5556  0113B6  1A44               	xorwf	___ftadd@f2+1,f,c
  5557  0113B8  0EFF               	movlw	255
  5558  0113BA  1A45               	xorwf	___ftadd@f2+2,f,c
  5559  0113BC  0E01               	movlw	1
  5560  0113BE  2643               	addwf	___ftadd@f2,f,c
  5561  0113C0  0E00               	movlw	0
  5562  0113C2  2244               	addwfc	___ftadd@f2+1,f,c
  5563  0113C4  0E00               	movlw	0
  5564  0113C6  2245               	addwfc	___ftadd@f2+2,f,c
  5565  0113C8  D000               	goto	l2241
  5566  0113CA                     l2241:
  5567  0113CA  0E00               	movlw	0
  5568  0113CC  6E49               	movwf	___ftadd@sign,c
  5569  0113CE  5040               	movf	___ftadd@f1,w,c
  5570  0113D0  2643               	addwf	___ftadd@f2,f,c
  5571  0113D2  5041               	movf	___ftadd@f1+1,w,c
  5572  0113D4  2244               	addwfc	___ftadd@f2+1,f,c
  5573  0113D6  5042               	movf	___ftadd@f1+2,w,c
  5574  0113D8  2245               	addwfc	___ftadd@f2+2,f,c
  5575  0113DA  AE45               	btfss	___ftadd@f2+2,7,c
  5576  0113DC  D00F               	goto	l2251
  5577  0113DE  0EFF               	movlw	255
  5578  0113E0  1A43               	xorwf	___ftadd@f2,f,c
  5579  0113E2  0EFF               	movlw	255
  5580  0113E4  1A44               	xorwf	___ftadd@f2+1,f,c
  5581  0113E6  0EFF               	movlw	255
  5582  0113E8  1A45               	xorwf	___ftadd@f2+2,f,c
  5583  0113EA  0E01               	movlw	1
  5584  0113EC  2643               	addwf	___ftadd@f2,f,c
  5585  0113EE  0E00               	movlw	0
  5586  0113F0  2244               	addwfc	___ftadd@f2+1,f,c
  5587  0113F2  0E00               	movlw	0
  5588  0113F4  2245               	addwfc	___ftadd@f2+2,f,c
  5589  0113F6  0E01               	movlw	1
  5590  0113F8  6E49               	movwf	___ftadd@sign,c
  5591  0113FA  D000               	goto	l2251
  5592  0113FC                     l2251:
  5593  0113FC  C043  F013         	movff	___ftadd@f2,___ftpack@arg
  5594  011400  C044  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  5595  011404  C045  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  5596  011408  C04B  F016         	movff	___ftadd@exp1,___ftpack@exp
  5597  01140C  C049  F017         	movff	___ftadd@sign,___ftpack@sign
  5598  011410  EC0E  F08C         	call	___ftpack	;wreg free
  5599  011414  C013  F040         	movff	?___ftpack,?___ftadd
  5600  011418  C014  F041         	movff	?___ftpack+1,?___ftadd+1
  5601  01141C  C015  F042         	movff	?___ftpack+2,?___ftadd+2
  5602  011420  D000               	goto	l763
  5603  011422                     l763:
  5604  011422  0012               	return		;funcret
  5605  011424                     __end_of___ftadd:
  5606                           	opt stack 0
  5607                           tblptru	equ	0xFF8
  5608                           tblptrh	equ	0xFF7
  5609                           tblptrl	equ	0xFF6
  5610                           tablat	equ	0xFF5
  5611                           prodh	equ	0xFF4
  5612                           prodl	equ	0xFF3
  5613                           postinc0	equ	0xFEE
  5614                           wreg	equ	0xFE8
  5615                           indf2	equ	0xFDF
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           fsr2h	equ	0xFDA
  5619                           fsr2l	equ	0xFD9
  5620                           status	equ	0xFD8
  5621                           
  5622 ;; *************** function ___ftneg *****************
  5623 ;; Defined at:
  5624 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  f1              3   18[COMRAM] float 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  3   18[COMRAM] float 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5638 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;Total ram usage:        3 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    2
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_sprintf
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text17
  5653  011F5A                     __ptext17:
  5654                           	opt stack 0
  5655  011F5A                     ___ftneg:
  5656                           	opt stack 27
  5657                           
  5658                           ;incstack = 0
  5659  011F5A  5013               	movf	___ftneg@f1,w,c
  5660  011F5C  1014               	iorwf	___ftneg@f1+1,w,c
  5661  011F5E  1015               	iorwf	___ftneg@f1+2,w,c
  5662  011F60  B4D8               	btfsc	status,2,c
  5663  011F62  D006               	goto	l836
  5664  011F64  0E00               	movlw	0
  5665  011F66  1A13               	xorwf	___ftneg@f1,f,c
  5666  011F68  0E00               	movlw	0
  5667  011F6A  1A14               	xorwf	___ftneg@f1+1,f,c
  5668  011F6C  0E80               	movlw	128
  5669  011F6E  1A15               	xorwf	___ftneg@f1+2,f,c
  5670  011F70                     l836:
  5671  011F70  C013  F013         	movff	___ftneg@f1,?___ftneg
  5672  011F74  C014  F014         	movff	___ftneg@f1+1,?___ftneg+1
  5673  011F78  C015  F015         	movff	___ftneg@f1+2,?___ftneg+2
  5674  011F7C  0012               	return		;funcret
  5675  011F7E                     __end_of___ftneg:
  5676                           	opt stack 0
  5677                           tblptru	equ	0xFF8
  5678                           tblptrh	equ	0xFF7
  5679                           tblptrl	equ	0xFF6
  5680                           tablat	equ	0xFF5
  5681                           prodh	equ	0xFF4
  5682                           prodl	equ	0xFF3
  5683                           postinc0	equ	0xFEE
  5684                           wreg	equ	0xFE8
  5685                           indf2	equ	0xFDF
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function ___ftge *****************
  5693 ;; Defined at:
  5694 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  ff1             3   18[COMRAM] float 
  5697 ;;  ff2             3   21[COMRAM] float 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;		None               void
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5709 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;Total ram usage:        9 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    2
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_sprintf
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text18
  5724  011A28                     __ptext18:
  5725                           	opt stack 0
  5726  011A28                     ___ftge:
  5727                           	opt stack 27
  5728                           
  5729                           ;incstack = 0
  5730  011A28  AE15               	btfss	___ftge@ff1+2,7,c
  5731  011A2A  D017               	goto	l2669
  5732  011A2C  C013  F019         	movff	___ftge@ff1,??___ftge
  5733  011A30  C014  F01A         	movff	___ftge@ff1+1,??___ftge+1
  5734  011A34  C015  F01B         	movff	___ftge@ff1+2,??___ftge+2
  5735  011A38  1E19               	comf	??___ftge,f,c
  5736  011A3A  1E1A               	comf	??___ftge+1,f,c
  5737  011A3C  1E1B               	comf	??___ftge+2,f,c
  5738  011A3E  2A19               	incf	??___ftge,f,c
  5739  011A40  0E00               	movlw	0
  5740  011A42  221A               	addwfc	??___ftge+1,f,c
  5741  011A44  221B               	addwfc	??___ftge+2,f,c
  5742  011A46  0E00               	movlw	0
  5743  011A48  2419               	addwf	??___ftge,w,c
  5744  011A4A  6E13               	movwf	___ftge@ff1,c
  5745  011A4C  0E00               	movlw	0
  5746  011A4E  201A               	addwfc	??___ftge+1,w,c
  5747  011A50  6E14               	movwf	___ftge@ff1+1,c
  5748  011A52  0E80               	movlw	128
  5749  011A54  201B               	addwfc	??___ftge+2,w,c
  5750  011A56  6E15               	movwf	___ftge@ff1+2,c
  5751  011A58  D000               	goto	l2669
  5752  011A5A                     l2669:
  5753  011A5A  AE18               	btfss	___ftge@ff2+2,7,c
  5754  011A5C  D017               	goto	l2673
  5755  011A5E  C016  F019         	movff	___ftge@ff2,??___ftge
  5756  011A62  C017  F01A         	movff	___ftge@ff2+1,??___ftge+1
  5757  011A66  C018  F01B         	movff	___ftge@ff2+2,??___ftge+2
  5758  011A6A  1E19               	comf	??___ftge,f,c
  5759  011A6C  1E1A               	comf	??___ftge+1,f,c
  5760  011A6E  1E1B               	comf	??___ftge+2,f,c
  5761  011A70  2A19               	incf	??___ftge,f,c
  5762  011A72  0E00               	movlw	0
  5763  011A74  221A               	addwfc	??___ftge+1,f,c
  5764  011A76  221B               	addwfc	??___ftge+2,f,c
  5765  011A78  0E00               	movlw	0
  5766  011A7A  2419               	addwf	??___ftge,w,c
  5767  011A7C  6E16               	movwf	___ftge@ff2,c
  5768  011A7E  0E00               	movlw	0
  5769  011A80  201A               	addwfc	??___ftge+1,w,c
  5770  011A82  6E17               	movwf	___ftge@ff2+1,c
  5771  011A84  0E80               	movlw	128
  5772  011A86  201B               	addwfc	??___ftge+2,w,c
  5773  011A88  6E18               	movwf	___ftge@ff2+2,c
  5774  011A8A  D000               	goto	l2673
  5775  011A8C                     l2673:
  5776  011A8C  0E00               	movlw	0
  5777  011A8E  1A13               	xorwf	___ftge@ff1,f,c
  5778  011A90  0E00               	movlw	0
  5779  011A92  1A14               	xorwf	___ftge@ff1+1,f,c
  5780  011A94  0E80               	movlw	128
  5781  011A96  1A15               	xorwf	___ftge@ff1+2,f,c
  5782  011A98  0E00               	movlw	0
  5783  011A9A  1A16               	xorwf	___ftge@ff2,f,c
  5784  011A9C  0E00               	movlw	0
  5785  011A9E  1A17               	xorwf	___ftge@ff2+1,f,c
  5786  011AA0  0E80               	movlw	128
  5787  011AA2  1A18               	xorwf	___ftge@ff2+2,f,c
  5788  011AA4  5016               	movf	___ftge@ff2,w,c
  5789  011AA6  5C13               	subwf	___ftge@ff1,w,c
  5790  011AA8  5017               	movf	___ftge@ff2+1,w,c
  5791  011AAA  5814               	subwfb	___ftge@ff1+1,w,c
  5792  011AAC  5018               	movf	___ftge@ff2+2,w,c
  5793  011AAE  5815               	subwfb	___ftge@ff1+2,w,c
  5794  011AB0  B0D8               	btfsc	status,0,c
  5795  011AB2  D002               	goto	l2679
  5796  011AB4  90D8               	bcf	status,0,c
  5797  011AB6  D002               	goto	l820
  5798  011AB8                     l2679:
  5799  011AB8  80D8               	bsf	status,0,c
  5800  011ABA  D000               	goto	l820
  5801  011ABC                     l820:
  5802  011ABC  0012               	return		;funcret
  5803  011ABE                     __end_of___ftge:
  5804                           	opt stack 0
  5805                           tblptru	equ	0xFF8
  5806                           tblptrh	equ	0xFF7
  5807                           tblptrl	equ	0xFF6
  5808                           tablat	equ	0xFF5
  5809                           prodh	equ	0xFF4
  5810                           prodl	equ	0xFF3
  5811                           postinc0	equ	0xFEE
  5812                           wreg	equ	0xFE8
  5813                           indf2	equ	0xFDF
  5814                           postinc2	equ	0xFDE
  5815                           postdec2	equ	0xFDD
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function _puts1USART *****************
  5821 ;; Defined at:
  5822 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1puts.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  data            2   19[COMRAM] PTR unsigned char 
  5825 ;;		 -> buffer(16), 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;		None
  5828 ;; Return value:  Size  Location     Type
  5829 ;;		None               void
  5830 ;; Registers used:
  5831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;Total ram usage:        2 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    3
  5844 ;; This function calls:
  5845 ;;		_Write1USART
  5846 ;; This function is called by:
  5847 ;;		_main
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text19
  5852  011EE4                     __ptext19:
  5853                           	opt stack 0
  5854  011EE4                     _puts1USART:
  5855                           	opt stack 27
  5856                           
  5857                           ;incstack = 0
  5858  011EE4  D000               	goto	l358
  5859  011EE6                     l358:
  5860  011EE6  A2AC               	btfss	4012,1,c	;volatile
  5861  011EE8  D7FE               	goto	l358
  5862  011EEA  C014  FFD9         	movff	puts1USART@data,fsr2l
  5863  011EEE  C015  FFDA         	movff	puts1USART@data+1,fsr2h
  5864  011EF2  50DF               	movf	indf2,w,c
  5865  011EF4  ECF5  F08F         	call	_Write1USART
  5866  011EF8  C014  FFD9         	movff	puts1USART@data,fsr2l
  5867  011EFC  C015  FFDA         	movff	puts1USART@data+1,fsr2h
  5868  011F00  4A14               	infsnz	puts1USART@data,f,c
  5869  011F02  2A15               	incf	puts1USART@data+1,f,c
  5870  011F04  50DF               	movf	indf2,w,c
  5871  011F06  A4D8               	btfss	status,2,c
  5872  011F08  D7EE               	goto	l358
  5873  011F0A  0012               	return		;funcret
  5874  011F0C                     __end_of_puts1USART:
  5875                           	opt stack 0
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           postinc0	equ	0xFEE
  5883                           wreg	equ	0xFE8
  5884                           indf2	equ	0xFDF
  5885                           postinc2	equ	0xFDE
  5886                           postdec2	equ	0xFDD
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function ___lwtoft *****************
  5892 ;; Defined at:
  5893 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  c               2   26[COMRAM] unsigned int 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  3   26[COMRAM] float 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5907 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;Total ram usage:        3 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    3
  5914 ;; This function calls:
  5915 ;;		___ftpack
  5916 ;; This function is called by:
  5917 ;;		_main
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text20
  5922  011F34                     __ptext20:
  5923                           	opt stack 0
  5924  011F34                     ___lwtoft:
  5925                           	opt stack 27
  5926                           
  5927                           ;incstack = 0
  5928  011F34  C01B  F013         	movff	___lwtoft@c,___ftpack@arg
  5929  011F38  C01C  F014         	movff	___lwtoft@c+1,___ftpack@arg+1
  5930  011F3C  6A15               	clrf	___ftpack@arg+2,c
  5931  011F3E  0E8E               	movlw	142
  5932  011F40  6E16               	movwf	___ftpack@exp,c
  5933  011F42  0E00               	movlw	0
  5934  011F44  6E17               	movwf	___ftpack@sign,c
  5935  011F46  EC0E  F08C         	call	___ftpack	;wreg free
  5936  011F4A  C013  F01B         	movff	?___ftpack,?___lwtoft
  5937  011F4E  C014  F01C         	movff	?___ftpack+1,?___lwtoft+1
  5938  011F52  C015  F01D         	movff	?___ftpack+2,?___lwtoft+2
  5939  011F56  D000               	goto	l981
  5940  011F58                     l981:
  5941  011F58  0012               	return		;funcret
  5942  011F5A                     __end_of___lwtoft:
  5943                           	opt stack 0
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           postinc0	equ	0xFEE
  5951                           wreg	equ	0xFE8
  5952                           indf2	equ	0xFDF
  5953                           postinc2	equ	0xFDE
  5954                           postdec2	equ	0xFDD
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function ___ftpack *****************
  5960 ;; Defined at:
  5961 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  arg             3   18[COMRAM] unsigned um
  5964 ;;  exp             1   21[COMRAM] unsigned char 
  5965 ;;  sign            1   22[COMRAM] unsigned char 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  3   18[COMRAM] float 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5977 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;Total ram usage:        8 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    2
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		___ftadd
  5988 ;;		___ftmul
  5989 ;;		___lltoft
  5990 ;;		___lwtoft
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text21
  5995  01181C                     __ptext21:
  5996                           	opt stack 0
  5997  01181C                     ___ftpack:
  5998                           	opt stack 25
  5999                           
  6000                           ;incstack = 0
  6001  01181C  5016               	movf	___ftpack@exp,w,c
  6002  01181E  B4D8               	btfsc	status,2,c
  6003  011820  D005               	goto	l2139
  6004  011822  5013               	movf	___ftpack@arg,w,c
  6005  011824  1014               	iorwf	___ftpack@arg+1,w,c
  6006  011826  1015               	iorwf	___ftpack@arg+2,w,c
  6007  011828  A4D8               	btfss	status,2,c
  6008  01182A  D00E               	goto	l2145
  6009  01182C                     l2139:
  6010  01182C  0E00               	movlw	0
  6011  01182E  6E13               	movwf	?___ftpack,c
  6012  011830  0E00               	movlw	0
  6013  011832  6E14               	movwf	?___ftpack+1,c
  6014  011834  0E00               	movlw	0
  6015  011836  6E15               	movwf	?___ftpack+2,c
  6016  011838  D053               	goto	l722
  6017  01183A  D006               	goto	l2145
  6018  01183C                     l2143:
  6019  01183C  2A16               	incf	___ftpack@exp,f,c
  6020  01183E  90D8               	bcf	status,0,c
  6021  011840  3215               	rrcf	___ftpack@arg+2,f,c
  6022  011842  3214               	rrcf	___ftpack@arg+1,f,c
  6023  011844  3213               	rrcf	___ftpack@arg,f,c
  6024  011846  D000               	goto	l2145
  6025  011848                     l2145:
  6026  011848  0E00               	movlw	0
  6027  01184A  1413               	andwf	___ftpack@arg,w,c
  6028  01184C  6E18               	movwf	??___ftpack& (0+255),c
  6029  01184E  0E00               	movlw	0
  6030  011850  1414               	andwf	___ftpack@arg+1,w,c
  6031  011852  6E19               	movwf	(??___ftpack+1)& (0+255),c
  6032  011854  0EFE               	movlw	254
  6033  011856  1415               	andwf	___ftpack@arg+2,w,c
  6034  011858  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  6035  01185A  5018               	movf	??___ftpack,w,c
  6036  01185C  1019               	iorwf	??___ftpack+1,w,c
  6037  01185E  101A               	iorwf	??___ftpack+2,w,c
  6038  011860  B4D8               	btfsc	status,2,c
  6039  011862  D00E               	goto	l2151
  6040  011864  D7EB               	goto	l2143
  6041  011866  D00C               	goto	l2151
  6042  011868                     l2147:
  6043  011868  2A16               	incf	___ftpack@exp,f,c
  6044  01186A  0E01               	movlw	1
  6045  01186C  2613               	addwf	___ftpack@arg,f,c
  6046  01186E  0E00               	movlw	0
  6047  011870  2214               	addwfc	___ftpack@arg+1,f,c
  6048  011872  0E00               	movlw	0
  6049  011874  2215               	addwfc	___ftpack@arg+2,f,c
  6050  011876  90D8               	bcf	status,0,c
  6051  011878  3215               	rrcf	___ftpack@arg+2,f,c
  6052  01187A  3214               	rrcf	___ftpack@arg+1,f,c
  6053  01187C  3213               	rrcf	___ftpack@arg,f,c
  6054  01187E  D000               	goto	l2151
  6055  011880                     l2151:
  6056  011880  0E00               	movlw	0
  6057  011882  1413               	andwf	___ftpack@arg,w,c
  6058  011884  6E18               	movwf	??___ftpack& (0+255),c
  6059  011886  0E00               	movlw	0
  6060  011888  1414               	andwf	___ftpack@arg+1,w,c
  6061  01188A  6E19               	movwf	(??___ftpack+1)& (0+255),c
  6062  01188C  0EFF               	movlw	255
  6063  01188E  1415               	andwf	___ftpack@arg+2,w,c
  6064  011890  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  6065  011892  5018               	movf	??___ftpack,w,c
  6066  011894  1019               	iorwf	??___ftpack+1,w,c
  6067  011896  101A               	iorwf	??___ftpack+2,w,c
  6068  011898  B4D8               	btfsc	status,2,c
  6069  01189A  D008               	goto	l2155
  6070  01189C  D7E5               	goto	l2147
  6071  01189E  D006               	goto	l2155
  6072  0118A0                     l2153:
  6073  0118A0  0616               	decf	___ftpack@exp,f,c
  6074  0118A2  90D8               	bcf	status,0,c
  6075  0118A4  3613               	rlcf	___ftpack@arg,f,c
  6076  0118A6  3614               	rlcf	___ftpack@arg+1,f,c
  6077  0118A8  3615               	rlcf	___ftpack@arg+2,f,c
  6078  0118AA  D000               	goto	l2155
  6079  0118AC                     l2155:
  6080  0118AC  BE14               	btfsc	___ftpack@arg+1,7,c
  6081  0118AE  D004               	goto	l733
  6082  0118B0  0E02               	movlw	2
  6083  0118B2  6016               	cpfslt	___ftpack@exp,c
  6084  0118B4  D7F5               	goto	l2153
  6085  0118B6  D000               	goto	l733
  6086  0118B8                     l733:
  6087  0118B8  B016               	btfsc	___ftpack@exp,0,c
  6088  0118BA  D002               	goto	l2161
  6089  0118BC  9E14               	bcf	___ftpack@arg+1,7,c
  6090  0118BE  D000               	goto	l2161
  6091  0118C0                     l2161:
  6092  0118C0  90D8               	bcf	status,0,c
  6093  0118C2  3216               	rrcf	___ftpack@exp,f,c
  6094  0118C4  5016               	movf	___ftpack@exp,w,c
  6095  0118C6  1215               	iorwf	___ftpack@arg+2,f,c
  6096  0118C8  5017               	movf	___ftpack@sign,w,c
  6097  0118CA  B4D8               	btfsc	status,2,c
  6098  0118CC  D002               	goto	l2167
  6099  0118CE  8E15               	bsf	___ftpack@arg+2,7,c
  6100  0118D0  D000               	goto	l2167
  6101  0118D2                     l2167:
  6102  0118D2  C013  F013         	movff	___ftpack@arg,?___ftpack
  6103  0118D6  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  6104  0118DA  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  6105  0118DE  D000               	goto	l722
  6106  0118E0                     l722:
  6107  0118E0  0012               	return		;funcret
  6108  0118E2                     __end_of___ftpack:
  6109                           	opt stack 0
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           indf2	equ	0xFDF
  6119                           postinc2	equ	0xFDE
  6120                           postdec2	equ	0xFDD
  6121                           fsr2h	equ	0xFDA
  6122                           fsr2l	equ	0xFD9
  6123                           status	equ	0xFD8
  6124                           
  6125 ;; *************** function _IlluminateLED *****************
  6126 ;; Defined at:
  6127 ;;		line 147 in file "TechDemo3_Test_Routine.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  sel             1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  sel             1   18[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;		None               void
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;Total ram usage:        1 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    2
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_main
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text22
  6156  011E48                     __ptext22:
  6157                           	opt stack 0
  6158  011E48                     _IlluminateLED:
  6159                           	opt stack 28
  6160                           
  6161                           ;incstack = 0
  6162                           ;IlluminateLED@sel stored from wreg
  6163  011E48  6E13               	movwf	IlluminateLED@sel,c
  6164                           
  6165                           ;TechDemo3_Test_Routine.c: 148: switch (sel) {
  6166  011E4A  D00B               	goto	l2845
  6167  011E4C                     l2833:
  6168                           
  6169                           ;TechDemo3_Test_Routine.c: 150: LATJ = 0x01;
  6170  011E4C  0E01               	movlw	1
  6171  011E4E  D007               	goto	L12
  6172  011E50                     l2835:
  6173                           
  6174                           ;TechDemo3_Test_Routine.c: 153: LATJ = 0x02;
  6175  011E50  0E02               	movlw	2
  6176  011E52  D005               	goto	L12
  6177  011E54                     l2837:
  6178                           
  6179                           ;TechDemo3_Test_Routine.c: 156: LATJ = 0x04;
  6180  011E54  0E04               	movlw	4
  6181  011E56  D003               	goto	L12
  6182  011E58                     l2839:
  6183                           
  6184                           ;TechDemo3_Test_Routine.c: 159: LATJ = 0x08;
  6185  011E58  0E08               	movlw	8
  6186  011E5A  D001               	goto	L12
  6187  011E5C                     l2841:
  6188                           
  6189                           ;TechDemo3_Test_Routine.c: 162: LATJ = 0x10;
  6190  011E5C  0E10               	movlw	16
  6191  011E5E                     L12:
  6192  011E5E  6E91               	movwf	3985,c	;volatile
  6193                           
  6194                           ;TechDemo3_Test_Routine.c: 164: }
  6195                           
  6196                           ;TechDemo3_Test_Routine.c: 163: break;
  6197  011E60  D011               	goto	l123
  6198  011E62                     l2845:
  6199  011E62  5013               	movf	IlluminateLED@sel,w,c
  6200                           
  6201                           ; Switch size 1, requested type "space"
  6202                           ; Number of cases is 5, Range of values is 0 to 4
  6203                           ; switch strategies available:
  6204                           ; Name         Instructions Cycles
  6205                           ; simple_byte           16     9 (average)
  6206                           ;	Chosen strategy is simple_byte
  6207  011E64  0A00               	xorlw	0	; case 0
  6208  011E66  B4D8               	btfsc	status,2,c
  6209  011E68  D7F1               	goto	l2833
  6210  011E6A  0A01               	xorlw	1	; case 1
  6211  011E6C  B4D8               	btfsc	status,2,c
  6212  011E6E  D7F0               	goto	l2835
  6213  011E70  0A03               	xorlw	3	; case 2
  6214  011E72  B4D8               	btfsc	status,2,c
  6215  011E74  D7EF               	goto	l2837
  6216  011E76  0A01               	xorlw	1	; case 3
  6217  011E78  B4D8               	btfsc	status,2,c
  6218  011E7A  D7EE               	goto	l2839
  6219  011E7C  0A07               	xorlw	7	; case 4
  6220  011E7E  B4D8               	btfsc	status,2,c
  6221  011E80  D7ED               	goto	l2841
  6222  011E82  D000               	goto	l123
  6223  011E84                     l123:
  6224  011E84  0012               	return		;funcret
  6225  011E86                     __end_of_IlluminateLED:
  6226                           	opt stack 0
  6227                           tblptru	equ	0xFF8
  6228                           tblptrh	equ	0xFF7
  6229                           tblptrl	equ	0xFF6
  6230                           tablat	equ	0xFF5
  6231                           prodh	equ	0xFF4
  6232                           prodl	equ	0xFF3
  6233                           postinc0	equ	0xFEE
  6234                           wreg	equ	0xFE8
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _GetDistance *****************
  6243 ;; Defined at:
  6244 ;;		line 168 in file "TechDemo3_Test_Routine.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    3
  6265 ;; This function calls:
  6266 ;;		_Delay1TCYx
  6267 ;; This function is called by:
  6268 ;;		_main
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text23
  6273  01202A                     __ptext23:
  6274                           	opt stack 0
  6275  01202A                     _GetDistance:
  6276                           	opt stack 27
  6277                           
  6278                           ;TechDemo3_Test_Routine.c: 169: LATEbits.LATE5 = 1;
  6279                           
  6280                           ;incstack = 0
  6281  01202A  8A8D               	bsf	3981,5,c	;volatile
  6282                           
  6283                           ;TechDemo3_Test_Routine.c: 170: Delay1TCYx(25);
  6284  01202C  0E19               	movlw	25
  6285  01202E  EC6B  F090         	call	_Delay1TCYx
  6286                           
  6287                           ;TechDemo3_Test_Routine.c: 171: LATEbits.LATE5 = 0;
  6288  012032  9A8D               	bcf	3981,5,c	;volatile
  6289                           
  6290                           ;TechDemo3_Test_Routine.c: 172: INTCONbits.RBIE = 1;
  6291  012034  86F2               	bsf	intcon,3,c	;volatile
  6292                           
  6293                           ;TechDemo3_Test_Routine.c: 173: echo_ready = 0;
  6294  012036  0E00               	movlw	0
  6295  012038  0100               	movlb	0	; () banked
  6296  01203A  6F9D               	movwf	_echo_ready& (0+255),b	;volatile
  6297                           
  6298                           ; BSR set to: 0
  6299  01203C  0012               	return		;funcret
  6300  01203E                     __end_of_GetDistance:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           prodh	equ	0xFF4
  6307                           prodl	equ	0xFF3
  6308                           intcon	equ	0xFF2
  6309                           postinc0	equ	0xFEE
  6310                           wreg	equ	0xFE8
  6311                           indf2	equ	0xFDF
  6312                           postinc2	equ	0xFDE
  6313                           postdec2	equ	0xFDD
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function _Delay1TCYx *****************
  6319 ;; Defined at:
  6320 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  unit            1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  unit            1   18[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;Total ram usage:        1 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    2
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_GetDistance
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text24
  6349  0120D6                     __ptext24:
  6350                           	opt stack 0
  6351  0120D6                     _Delay1TCYx:
  6352                           	opt stack 27
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;incstack = 0
  6356                           ;Delay1TCYx@unit stored from wreg
  6357  0120D6  6E13               	movwf	Delay1TCYx@unit,c
  6358  0120D8                     l613:
  6359  0120D8  F000               	nop	
  6360  0120DA  2E13               	decfsz	Delay1TCYx@unit,f,c
  6361  0120DC  D7FD               	goto	l613
  6362  0120DE  D000               	goto	l615
  6363  0120E0                     l615:
  6364  0120E0  0012               	return		;funcret
  6365  0120E2                     __end_of_Delay1TCYx:
  6366                           	opt stack 0
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           postinc0	equ	0xFEE
  6375                           wreg	equ	0xFE8
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function _GetADCReading *****************
  6384 ;; Defined at:
  6385 ;;		line 116 in file "TechDemo3_Test_Routine.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  channel         1    wreg     unsigned char 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  channel         1   24[COMRAM] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  2   22[COMRAM] unsigned int 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        3 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    3
  6406 ;; This function calls:
  6407 ;;		_BusyADC
  6408 ;;		_ConvertADC
  6409 ;;		_ReadADC
  6410 ;;		_SetChanADC
  6411 ;; This function is called by:
  6412 ;;		_main
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text25
  6417  011B4A                     __ptext25:
  6418                           	opt stack 0
  6419  011B4A                     _GetADCReading:
  6420                           	opt stack 27
  6421                           
  6422                           ;incstack = 0
  6423                           ;GetADCReading@channel stored from wreg
  6424  011B4A  6E19               	movwf	GetADCReading@channel,c
  6425                           
  6426                           ;TechDemo3_Test_Routine.c: 117: switch (channel) {
  6427  011B4C  D01E               	goto	l2821
  6428  011B4E                     l2803:
  6429                           
  6430                           ;TechDemo3_Test_Routine.c: 119: SetChanADC(0b10000111);
  6431  011B4E  0E87               	movlw	135
  6432  011B50  ECEA  F08F         	call	_SetChanADC
  6433                           
  6434                           ;TechDemo3_Test_Routine.c: 120: break;
  6435  011B54  D02E               	goto	l2823
  6436  011B56                     l2805:
  6437                           
  6438                           ;TechDemo3_Test_Routine.c: 122: SetChanADC(0b10001111);
  6439  011B56  0E8F               	movlw	143
  6440  011B58  ECEA  F08F         	call	_SetChanADC
  6441                           
  6442                           ;TechDemo3_Test_Routine.c: 123: break;
  6443  011B5C  D02A               	goto	l2823
  6444  011B5E                     l2807:
  6445                           
  6446                           ;TechDemo3_Test_Routine.c: 125: SetChanADC(0b10010111);
  6447  011B5E  0E97               	movlw	151
  6448  011B60  ECEA  F08F         	call	_SetChanADC
  6449                           
  6450                           ;TechDemo3_Test_Routine.c: 126: break;
  6451  011B64  D026               	goto	l2823
  6452  011B66                     l2809:
  6453                           
  6454                           ;TechDemo3_Test_Routine.c: 128: SetChanADC(0b10011111);
  6455  011B66  0E9F               	movlw	159
  6456  011B68  ECEA  F08F         	call	_SetChanADC
  6457                           
  6458                           ;TechDemo3_Test_Routine.c: 129: break;
  6459  011B6C  D022               	goto	l2823
  6460  011B6E                     l2811:
  6461                           
  6462                           ;TechDemo3_Test_Routine.c: 131: SetChanADC(0b10100111);
  6463  011B6E  0EA7               	movlw	167
  6464  011B70  ECEA  F08F         	call	_SetChanADC
  6465                           
  6466                           ;TechDemo3_Test_Routine.c: 132: break;
  6467  011B74  D01E               	goto	l2823
  6468  011B76                     l2813:
  6469                           
  6470                           ;TechDemo3_Test_Routine.c: 134: SetChanADC(0b10101111);
  6471  011B76  0EAF               	movlw	175
  6472  011B78  ECEA  F08F         	call	_SetChanADC
  6473                           
  6474                           ;TechDemo3_Test_Routine.c: 135: break;
  6475  011B7C  D01A               	goto	l2823
  6476  011B7E                     l2815:
  6477                           
  6478                           ;TechDemo3_Test_Routine.c: 137: return 0;
  6479  011B7E  0E00               	movlw	0
  6480  011B80  6E18               	movwf	?_GetADCReading+1,c
  6481  011B82  0E00               	movlw	0
  6482  011B84  6E17               	movwf	?_GetADCReading,c
  6483  011B86  D026               	goto	l110
  6484                           
  6485                           ;TechDemo3_Test_Routine.c: 138: }
  6486  011B88  D014               	goto	l2823
  6487  011B8A                     l2821:
  6488  011B8A  5019               	movf	GetADCReading@channel,w,c
  6489                           
  6490                           ; Switch size 1, requested type "space"
  6491                           ; Number of cases is 6, Range of values is 0 to 5
  6492                           ; switch strategies available:
  6493                           ; Name         Instructions Cycles
  6494                           ; simple_byte           19    10 (average)
  6495                           ;	Chosen strategy is simple_byte
  6496  011B8C  0A00               	xorlw	0	; case 0
  6497  011B8E  B4D8               	btfsc	status,2,c
  6498  011B90  D7DE               	goto	l2803
  6499  011B92  0A01               	xorlw	1	; case 1
  6500  011B94  B4D8               	btfsc	status,2,c
  6501  011B96  D7DF               	goto	l2805
  6502  011B98  0A03               	xorlw	3	; case 2
  6503  011B9A  B4D8               	btfsc	status,2,c
  6504  011B9C  D7E0               	goto	l2807
  6505  011B9E  0A01               	xorlw	1	; case 3
  6506  011BA0  B4D8               	btfsc	status,2,c
  6507  011BA2  D7E1               	goto	l2809
  6508  011BA4  0A07               	xorlw	7	; case 4
  6509  011BA6  B4D8               	btfsc	status,2,c
  6510  011BA8  D7E2               	goto	l2811
  6511  011BAA  0A01               	xorlw	1	; case 5
  6512  011BAC  B4D8               	btfsc	status,2,c
  6513  011BAE  D7E3               	goto	l2813
  6514  011BB0  D7E6               	goto	l2815
  6515  011BB2                     l2823:
  6516                           
  6517                           ;TechDemo3_Test_Routine.c: 140: ConvertADC();
  6518  011BB2  EC71  F090         	call	_ConvertADC	;wreg free
  6519                           
  6520                           ;TechDemo3_Test_Routine.c: 142: while (BusyADC());
  6521  011BB6  D000               	goto	l2825
  6522  011BB8                     l2825:
  6523  011BB8  EC64  F090         	call	_BusyADC	;wreg free
  6524  011BBC  0900               	iorlw	0
  6525  011BBE  A4D8               	btfss	status,2,c
  6526  011BC0  D7FB               	goto	l2825
  6527                           
  6528                           ;TechDemo3_Test_Routine.c: 143: return ReadADC() & 0x03FF;
  6529  011BC2  EC4C  F090         	call	_ReadADC	;wreg free
  6530  011BC6  0EFF               	movlw	255
  6531  011BC8  1413               	andwf	?_ReadADC,w,c
  6532  011BCA  6E17               	movwf	?_GetADCReading,c
  6533  011BCC  0E03               	movlw	3
  6534  011BCE  1414               	andwf	?_ReadADC+1,w,c
  6535  011BD0  6E18               	movwf	?_GetADCReading+1,c
  6536  011BD2  D000               	goto	l110
  6537  011BD4                     l110:
  6538  011BD4  0012               	return		;funcret
  6539  011BD6                     __end_of_GetADCReading:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           postinc0	equ	0xFEE
  6549                           wreg	equ	0xFE8
  6550                           indf2	equ	0xFDF
  6551                           postinc2	equ	0xFDE
  6552                           postdec2	equ	0xFDD
  6553                           fsr2h	equ	0xFDA
  6554                           fsr2l	equ	0xFD9
  6555                           status	equ	0xFD8
  6556                           
  6557 ;; *************** function _SetChanADC *****************
  6558 ;; Defined at:
  6559 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  channel         1    wreg     unsigned char 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  channel         1   19[COMRAM] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;		None               void
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;Total ram usage:        2 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    2
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_GetADCReading
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text26
  6588  011FD4                     __ptext26:
  6589                           	opt stack 0
  6590  011FD4                     _SetChanADC:
  6591                           	opt stack 27
  6592                           
  6593                           ;incstack = 0
  6594                           ;SetChanADC@channel stored from wreg
  6595  011FD4  6E14               	movwf	SetChanADC@channel,c
  6596  011FD6  CFC2 F013          	movff	4034,??_SetChanADC	;volatile
  6597  011FDA  0EC3               	movlw	195
  6598  011FDC  1613               	andwf	??_SetChanADC,f,c
  6599  011FDE  90D8               	bcf	status,0,c
  6600  011FE0  3014               	rrcf	SetChanADC@channel,w,c
  6601  011FE2  0B3C               	andlw	60
  6602  011FE4  1013               	iorwf	??_SetChanADC,w,c
  6603  011FE6  6EC2               	movwf	4034,c	;volatile
  6604  011FE8  0012               	return		;funcret
  6605  011FEA                     __end_of_SetChanADC:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           prodh	equ	0xFF4
  6612                           prodl	equ	0xFF3
  6613                           intcon	equ	0xFF2
  6614                           postinc0	equ	0xFEE
  6615                           wreg	equ	0xFE8
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function _ReadADC *****************
  6624 ;; Defined at:
  6625 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  2   18[COMRAM] int 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;Total ram usage:        4 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    2
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_GetADCReading
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text27
  6654  012098                     __ptext27:
  6655                           	opt stack 0
  6656  012098                     _ReadADC:
  6657                           	opt stack 27
  6658                           
  6659                           ;incstack = 0
  6660  012098  50C4               	movf	4036,w,c	;volatile
  6661  01209A  6E15               	movwf	??_ReadADC& (0+255),c
  6662  01209C  50C3               	movf	4035,w,c	;volatile
  6663  01209E  6E13               	movwf	?_ReadADC,c
  6664  0120A0  C015  F014         	movff	??_ReadADC,?_ReadADC+1
  6665  0120A4  D000               	goto	l288
  6666  0120A6                     l288:
  6667  0120A6  0012               	return		;funcret
  6668  0120A8                     __end_of_ReadADC:
  6669                           	opt stack 0
  6670                           tblptru	equ	0xFF8
  6671                           tblptrh	equ	0xFF7
  6672                           tblptrl	equ	0xFF6
  6673                           tablat	equ	0xFF5
  6674                           prodh	equ	0xFF4
  6675                           prodl	equ	0xFF3
  6676                           intcon	equ	0xFF2
  6677                           postinc0	equ	0xFEE
  6678                           wreg	equ	0xFE8
  6679                           indf2	equ	0xFDF
  6680                           postinc2	equ	0xFDE
  6681                           postdec2	equ	0xFDD
  6682                           fsr2h	equ	0xFDA
  6683                           fsr2l	equ	0xFD9
  6684                           status	equ	0xFD8
  6685                           
  6686 ;; *************** function _ConvertADC *****************
  6687 ;; Defined at:
  6688 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;		None               void
  6695 ;; Registers used:
  6696 ;;		None
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;Total ram usage:        0 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; Hardware stack levels required when called:    2
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_GetADCReading
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text28
  6717  0120E2                     __ptext28:
  6718                           	opt stack 0
  6719  0120E2                     _ConvertADC:
  6720                           	opt stack 27
  6721                           
  6722                           ;incstack = 0
  6723  0120E2  82C2               	bsf	4034,1,c	;volatile
  6724  0120E4  0012               	return		;funcret
  6725  0120E6                     __end_of_ConvertADC:
  6726                           	opt stack 0
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           indf2	equ	0xFDF
  6737                           postinc2	equ	0xFDE
  6738                           postdec2	equ	0xFDD
  6739                           fsr2h	equ	0xFDA
  6740                           fsr2l	equ	0xFD9
  6741                           status	equ	0xFD8
  6742                           
  6743 ;; *************** function _BusyADC *****************
  6744 ;; Defined at:
  6745 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      unsigned char 
  6752 ;; Registers used:
  6753 ;;		wreg
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    2
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_GetADCReading
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text29
  6774  0120C8                     __ptext29:
  6775                           	opt stack 0
  6776  0120C8                     _BusyADC:
  6777                           	opt stack 27
  6778                           
  6779                           ;incstack = 0
  6780  0120C8  A2C2               	btfss	4034,1,c	;volatile
  6781  0120CA  D002               	goto	u2240
  6782  0120CC  0E01               	movlw	1
  6783  0120CE  D002               	goto	l258
  6784  0120D0                     u2240:
  6785  0120D0  0E00               	movlw	0
  6786  0120D2  D000               	goto	l258
  6787  0120D4                     l258:
  6788  0120D4  0012               	return		;funcret
  6789  0120D6                     __end_of_BusyADC:
  6790                           	opt stack 0
  6791                           tblptru	equ	0xFF8
  6792                           tblptrh	equ	0xFF7
  6793                           tblptrl	equ	0xFF6
  6794                           tablat	equ	0xFF5
  6795                           prodh	equ	0xFF4
  6796                           prodl	equ	0xFF3
  6797                           intcon	equ	0xFF2
  6798                           postinc0	equ	0xFEE
  6799                           wreg	equ	0xFE8
  6800                           indf2	equ	0xFDF
  6801                           postinc2	equ	0xFDE
  6802                           postdec2	equ	0xFDD
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8
  6806                           
  6807 ;; *************** function _Delay1KTCYx *****************
  6808 ;; Defined at:
  6809 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  unit            1    wreg     unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  unit            1   18[COMRAM] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;		None               void
  6816 ;; Registers used:
  6817 ;;		wreg
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;Total ram usage:        1 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    2
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_main
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text30
  6838  01203E                     __ptext30:
  6839                           	opt stack 0
  6840  01203E                     _Delay1KTCYx:
  6841                           	opt stack 28
  6842                           
  6843                           ;incstack = 0
  6844                           ;Delay1KTCYx@unit stored from wreg
  6845  01203E  6E13               	movwf	Delay1KTCYx@unit,c
  6846  012040  0EFA               	movlw	250
  6847  012042                     u3317:
  6848  012042  F000               	nop	
  6849  012044  2EE8               	decfsz	wreg,f,c
  6850  012046  D7FD               	goto	u3317
  6851  012048  2E13               	decfsz	Delay1KTCYx@unit,f,c
  6852  01204A  D7FA               	goto	l2867
  6853  01204C  D000               	goto	l608
  6854  01204E                     l608:
  6855  01204E  0012               	return		;funcret
  6856  012050                     __end_of_Delay1KTCYx:
  6857                           	opt stack 0
  6858                           tblptru	equ	0xFF8
  6859                           tblptrh	equ	0xFF7
  6860                           tblptrl	equ	0xFF6
  6861                           tablat	equ	0xFF5
  6862                           prodh	equ	0xFF4
  6863                           prodl	equ	0xFF3
  6864                           intcon	equ	0xFF2
  6865                           postinc0	equ	0xFEE
  6866                           wreg	equ	0xFE8
  6867                           indf2	equ	0xFDF
  6868                           postinc2	equ	0xFDE
  6869                           postdec2	equ	0xFDD
  6870                           fsr2h	equ	0xFDA
  6871                           fsr2l	equ	0xFD9
  6872                           status	equ	0xFD8
  6873                           
  6874 ;; *************** function _ConfigUSART *****************
  6875 ;; Defined at:
  6876 ;;		line 102 in file "TechDemo3_Test_Routine.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;		None
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;		None               void
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;Total ram usage:        0 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    4
  6897 ;; This function calls:
  6898 ;;		_Open1USART
  6899 ;;		_putrs1USART
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text31
  6906  011FA0                     __ptext31:
  6907                           	opt stack 0
  6908  011FA0                     _ConfigUSART:
  6909                           	opt stack 26
  6910                           
  6911                           ;TechDemo3_Test_Routine.c: 103: Open1USART(0b01111111
  6912                           ;TechDemo3_Test_Routine.c: 104: & 0b10111111
  6913                           ;TechDemo3_Test_Routine.c: 105: & 0b11111110
  6914                           ;TechDemo3_Test_Routine.c: 106: & 0b11111101
  6915                           ;TechDemo3_Test_Routine.c: 107: & 0b11111111
  6916                           ;TechDemo3_Test_Routine.c: 108: & 0b11111111,
  6917                           ;TechDemo3_Test_Routine.c: 109: 64);
  6918                           
  6919                           ;incstack = 0
  6920  011FA0  0E00               	movlw	0
  6921  011FA2  6E14               	movwf	Open1USART@spbrg+1,c
  6922  011FA4  0E40               	movlw	64
  6923  011FA6  6E13               	movwf	Open1USART@spbrg,c
  6924  011FA8  0E3C               	movlw	60
  6925  011FAA  EC2C  F08E         	call	_Open1USART
  6926                           
  6927                           ;TechDemo3_Test_Routine.c: 111: putrs1USART("USART Configured\r\n");
  6928  011FAE  0ED2               	movlw	low STR_1
  6929  011FB0  6E14               	movwf	putrs1USART@data,c
  6930  011FB2  0EFF               	movlw	high STR_1
  6931  011FB4  6E15               	movwf	putrs1USART@data+1,c
  6932  011FB6  EC43  F08F         	call	_putrs1USART	;wreg free
  6933  011FBA  0012               	return		;funcret
  6934  011FBC                     __end_of_ConfigUSART:
  6935                           	opt stack 0
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           intcon	equ	0xFF2
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           indf2	equ	0xFDF
  6946                           postinc2	equ	0xFDE
  6947                           postdec2	equ	0xFDD
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952 ;; *************** function _putrs1USART *****************
  6953 ;; Defined at:
  6954 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1putrs.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  data            2   19[COMRAM] PTR const unsigned char 
  6957 ;;		 -> STR_7(27), STR_6(28), STR_4(12), STR_3(21), 
  6958 ;;		 -> STR_2(41), STR_1(19), 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;		None               void
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;Total ram usage:        2 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    3
  6977 ;; This function calls:
  6978 ;;		_Write1USART
  6979 ;; This function is called by:
  6980 ;;		_ConfigUSART
  6981 ;;		_main
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text32
  6986  011E86                     __ptext32:
  6987                           	opt stack 0
  6988  011E86                     _putrs1USART:
  6989                           	opt stack 27
  6990                           
  6991                           ;incstack = 0
  6992  011E86  D000               	goto	l346
  6993  011E88                     l346:
  6994  011E88  A2AC               	btfss	4012,1,c	;volatile
  6995  011E8A  D7FE               	goto	l346
  6996  011E8C  C014  FFF6         	movff	putrs1USART@data,tblptrl
  6997  011E90  C015  FFF7         	movff	putrs1USART@data+1,tblptrh
  6998  011E94                     	if	0	;tblptru may be non-zero
  6999  011E94                     	endif
  7000  011E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7001  011E94  0E00               	movlw	low (__mediumconst shr (0+16))
  7002  011E96  6EF8               	movwf	tblptru,c
  7003  011E98                     	endif
  7004  011E98  0008               	tblrd		*
  7005  011E9A  50F5               	movf	tablat,w,c
  7006  011E9C  ECF5  F08F         	call	_Write1USART
  7007  011EA0  C014  FFF6         	movff	putrs1USART@data,tblptrl
  7008  011EA4  C015  FFF7         	movff	putrs1USART@data+1,tblptrh
  7009  011EA8  4A14               	infsnz	putrs1USART@data,f,c
  7010  011EAA  2A15               	incf	putrs1USART@data+1,f,c
  7011  011EAC                     	if	0	;tblptru may be non-zero
  7012  011EAC                     	endif
  7013  011EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7014  011EAC  0E00               	movlw	low (__mediumconst shr (0+16))
  7015  011EAE  6EF8               	movwf	tblptru,c
  7016  011EB0                     	endif
  7017  011EB0  0008               	tblrd		*
  7018  011EB2  50F5               	movf	tablat,w,c
  7019  011EB4  0900               	iorlw	0
  7020  011EB6  A4D8               	btfss	status,2,c
  7021  011EB8  D7E7               	goto	l346
  7022  011EBA  0012               	return		;funcret
  7023  011EBC                     __end_of_putrs1USART:
  7024                           	opt stack 0
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           prodh	equ	0xFF4
  7030                           prodl	equ	0xFF3
  7031                           intcon	equ	0xFF2
  7032                           postinc0	equ	0xFEE
  7033                           wreg	equ	0xFE8
  7034                           indf2	equ	0xFDF
  7035                           postinc2	equ	0xFDE
  7036                           postdec2	equ	0xFDD
  7037                           fsr2h	equ	0xFDA
  7038                           fsr2l	equ	0xFD9
  7039                           status	equ	0xFD8
  7040                           
  7041 ;; *************** function _Write1USART *****************
  7042 ;; Defined at:
  7043 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  data            1    wreg     unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  data            1   18[COMRAM] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;Total ram usage:        1 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    2
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_putrs1USART
  7068 ;;		_puts1USART
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text33
  7073  011FEA                     __ptext33:
  7074                           	opt stack 0
  7075  011FEA                     _Write1USART:
  7076                           	opt stack 27
  7077                           
  7078                           ;incstack = 0
  7079                           ;Write1USART@data stored from wreg
  7080  011FEA  6E13               	movwf	Write1USART@data,c
  7081  011FEC  ACAC               	btfss	4012,6,c	;volatile
  7082  011FEE  D005               	goto	l2177
  7083  011FF0  90AC               	bcf	4012,0,c	;volatile
  7084  011FF2  A24C               	btfss	_USART1_Status,1,c
  7085  011FF4  D002               	goto	l2177
  7086  011FF6  80AC               	bsf	4012,0,c	;volatile
  7087  011FF8  D000               	goto	l2177
  7088  011FFA                     l2177:
  7089  011FFA  C013  FFAD         	movff	Write1USART@data,4013	;volatile
  7090  011FFE  0012               	return		;funcret
  7091  012000                     __end_of_Write1USART:
  7092                           	opt stack 0
  7093                           tblptru	equ	0xFF8
  7094                           tblptrh	equ	0xFF7
  7095                           tblptrl	equ	0xFF6
  7096                           tablat	equ	0xFF5
  7097                           prodh	equ	0xFF4
  7098                           prodl	equ	0xFF3
  7099                           intcon	equ	0xFF2
  7100                           postinc0	equ	0xFEE
  7101                           wreg	equ	0xFE8
  7102                           indf2	equ	0xFDF
  7103                           postinc2	equ	0xFDE
  7104                           postdec2	equ	0xFDD
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8
  7108                           
  7109 ;; *************** function _Open1USART *****************
  7110 ;; Defined at:
  7111 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  config          1    wreg     unsigned char 
  7114 ;;  spbrg           2   18[COMRAM] unsigned int 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  config          1   20[COMRAM] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;		None               void
  7119 ;; Registers used:
  7120 ;;		wreg, status,2
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;Total ram usage:        3 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    2
  7133 ;; This function calls:
  7134 ;;		Nothing
  7135 ;; This function is called by:
  7136 ;;		_ConfigUSART
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text34
  7141  011C58                     __ptext34:
  7142                           	opt stack 0
  7143  011C58                     _Open1USART:
  7144                           	opt stack 27
  7145                           
  7146                           ;incstack = 0
  7147                           ;Open1USART@config stored from wreg
  7148  011C58  6E15               	movwf	Open1USART@config,c
  7149  011C5A  0E00               	movlw	0
  7150  011C5C  6EAC               	movwf	4012,c	;volatile
  7151  011C5E  0E00               	movlw	0
  7152  011C60  6EAB               	movwf	4011,c	;volatile
  7153  011C62  A015               	btfss	Open1USART@config,0,c
  7154  011C64  D002               	goto	l2403
  7155  011C66  88AC               	bsf	4012,4,c	;volatile
  7156  011C68  D000               	goto	l2403
  7157  011C6A                     l2403:
  7158  011C6A  A215               	btfss	Open1USART@config,1,c
  7159  011C6C  D003               	goto	l2407
  7160  011C6E  8CAC               	bsf	4012,6,c	;volatile
  7161  011C70  8CAB               	bsf	4011,6,c	;volatile
  7162  011C72  D000               	goto	l2407
  7163  011C74                     l2407:
  7164  011C74  A415               	btfss	Open1USART@config,2,c
  7165  011C76  D002               	goto	l2411
  7166  011C78  8EAC               	bsf	4012,7,c	;volatile
  7167  011C7A  D000               	goto	l2411
  7168  011C7C                     l2411:
  7169  011C7C  A615               	btfss	Open1USART@config,3,c
  7170  011C7E  D002               	goto	l329
  7171  011C80  88AB               	bsf	4011,4,c	;volatile
  7172  011C82  D002               	goto	l2415
  7173  011C84                     l329:
  7174  011C84  8AAB               	bsf	4011,5,c	;volatile
  7175  011C86  D000               	goto	l2415
  7176  011C88                     l2415:
  7177  011C88  A815               	btfss	Open1USART@config,4,c
  7178  011C8A  D002               	goto	l2419
  7179  011C8C  84AC               	bsf	4012,2,c	;volatile
  7180  011C8E  D000               	goto	l2419
  7181  011C90                     l2419:
  7182  011C90  AA15               	btfss	Open1USART@config,5,c
  7183  011C92  D002               	goto	l2423
  7184  011C94  86AB               	bsf	4011,3,c	;volatile
  7185  011C96  D000               	goto	l2423
  7186  011C98                     l2423:
  7187  011C98  AC15               	btfss	Open1USART@config,6,c
  7188  011C9A  D002               	goto	l333
  7189  011C9C  8A9D               	bsf	3997,5,c	;volatile
  7190  011C9E  D002               	goto	l2427
  7191  011CA0                     l333:
  7192  011CA0  9A9D               	bcf	3997,5,c	;volatile
  7193  011CA2  D000               	goto	l2427
  7194  011CA4                     l2427:
  7195  011CA4  AE15               	btfss	Open1USART@config,7,c
  7196  011CA6  D002               	goto	l335
  7197  011CA8  889D               	bsf	3997,4,c	;volatile
  7198  011CAA  D001               	goto	l336
  7199  011CAC                     l335:
  7200  011CAC  989D               	bcf	3997,4,c	;volatile
  7201  011CAE                     l336:
  7202  011CAE  C013  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  7203  011CB2  5014               	movf	Open1USART@spbrg+1,w,c
  7204  011CB4  6E7F               	movwf	3967,c	;volatile
  7205  011CB6  8AAC               	bsf	4012,5,c	;volatile
  7206  011CB8  8EAB               	bsf	4011,7,c	;volatile
  7207  011CBA  9C94               	bcf	3988,6,c	;volatile
  7208  011CBC  8E94               	bsf	3988,7,c	;volatile
  7209  011CBE  B8AC               	btfsc	4012,4,c	;volatile
  7210  011CC0  BEAC               	btfsc	4012,7,c	;volatile
  7211  011CC2  D002               	goto	l338
  7212  011CC4  8C94               	bsf	3988,6,c	;volatile
  7213  011CC6  D000               	goto	l338
  7214  011CC8                     l338:
  7215  011CC8  0012               	return		;funcret
  7216  011CCA                     __end_of_Open1USART:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           postinc0	equ	0xFEE
  7226                           wreg	equ	0xFE8
  7227                           indf2	equ	0xFDF
  7228                           postinc2	equ	0xFDE
  7229                           postdec2	equ	0xFDD
  7230                           fsr2h	equ	0xFDA
  7231                           fsr2l	equ	0xFD9
  7232                           status	equ	0xFD8
  7233                           
  7234 ;; *************** function _ConfigTimer0 *****************
  7235 ;; Defined at:
  7236 ;;		line 84 in file "TechDemo3_Test_Routine.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;		None
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;		None               void
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;Total ram usage:        0 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    3
  7257 ;; This function calls:
  7258 ;;		_WriteTimer0
  7259 ;; This function is called by:
  7260 ;;		_main
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text35
  7265  012050                     __ptext35:
  7266                           	opt stack 0
  7267  012050                     _ConfigTimer0:
  7268                           	opt stack 27
  7269                           
  7270                           ;TechDemo3_Test_Routine.c: 85: T0CON = 0x00;
  7271                           
  7272                           ;incstack = 0
  7273  012050  0E00               	movlw	0
  7274  012052  6ED5               	movwf	4053,c	;volatile
  7275                           
  7276                           ;TechDemo3_Test_Routine.c: 86: WriteTimer0(0);
  7277  012054  0E00               	movlw	0
  7278  012056  6E14               	movwf	WriteTimer0@timer0+1,c
  7279  012058  0E00               	movlw	0
  7280  01205A  6E13               	movwf	WriteTimer0@timer0,c
  7281  01205C  EC31  F090         	call	_WriteTimer0	;wreg free
  7282  012060  0012               	return		;funcret
  7283  012062                     __end_of_ConfigTimer0:
  7284                           	opt stack 0
  7285                           tblptru	equ	0xFF8
  7286                           tblptrh	equ	0xFF7
  7287                           tblptrl	equ	0xFF6
  7288                           tablat	equ	0xFF5
  7289                           prodh	equ	0xFF4
  7290                           prodl	equ	0xFF3
  7291                           intcon	equ	0xFF2
  7292                           postinc0	equ	0xFEE
  7293                           wreg	equ	0xFE8
  7294                           indf2	equ	0xFDF
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           fsr2h	equ	0xFDA
  7298                           fsr2l	equ	0xFD9
  7299                           status	equ	0xFD8
  7300                           
  7301 ;; *************** function _WriteTimer0 *****************
  7302 ;; Defined at:
  7303 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  timer0          2   18[COMRAM] unsigned int 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;  timer           2   20[COMRAM] struct Timers
  7308 ;; Return value:  Size  Location     Type
  7309 ;;		None               void
  7310 ;; Registers used:
  7311 ;;		None
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;Total ram usage:        4 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    2
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_ConfigTimer0
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text36
  7332  012062                     __ptext36:
  7333                           	opt stack 0
  7334  012062                     _WriteTimer0:
  7335                           	opt stack 27
  7336                           
  7337                           ;incstack = 0
  7338  012062  C013  F015         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7339  012066  C014  F016         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7340  01206A  C016  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7341  01206E  C015  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7342  012072  0012               	return		;funcret
  7343  012074                     __end_of_WriteTimer0:
  7344                           	opt stack 0
  7345                           tblptru	equ	0xFF8
  7346                           tblptrh	equ	0xFF7
  7347                           tblptrl	equ	0xFF6
  7348                           tablat	equ	0xFF5
  7349                           prodh	equ	0xFF4
  7350                           prodl	equ	0xFF3
  7351                           intcon	equ	0xFF2
  7352                           postinc0	equ	0xFEE
  7353                           wreg	equ	0xFE8
  7354                           indf2	equ	0xFDF
  7355                           postinc2	equ	0xFDE
  7356                           postdec2	equ	0xFDD
  7357                           fsr2h	equ	0xFDA
  7358                           fsr2l	equ	0xFD9
  7359                           status	equ	0xFD8
  7360                           
  7361 ;; *************** function _ConfigInterrupts *****************
  7362 ;; Defined at:
  7363 ;;		line 90 in file "TechDemo3_Test_Routine.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;		None
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;		None               void
  7370 ;; Registers used:
  7371 ;;		None
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;Total ram usage:        0 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    2
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_main
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text37
  7392  0120A8                     __ptext37:
  7393                           	opt stack 0
  7394  0120A8                     _ConfigInterrupts:
  7395                           	opt stack 28
  7396                           
  7397                           ;TechDemo3_Test_Routine.c: 91: RCONbits.IPEN = 0;
  7398                           
  7399                           ;incstack = 0
  7400  0120A8  9ED0               	bcf	4048,7,c	;volatile
  7401                           
  7402                           ;TechDemo3_Test_Routine.c: 92: INTCONbits.GIE = 1;
  7403  0120AA  8EF2               	bsf	intcon,7,c	;volatile
  7404                           
  7405                           ;TechDemo3_Test_Routine.c: 93: INTCONbits.RBIE = 0;
  7406  0120AC  96F2               	bcf	intcon,3,c	;volatile
  7407                           
  7408                           ;TechDemo3_Test_Routine.c: 94: INTCON3bits.INT1IE = 1;
  7409  0120AE  86F0               	bsf	intcon3,3,c	;volatile
  7410                           
  7411                           ;TechDemo3_Test_Routine.c: 95: INTCON2bits.INTEDG1 = 1;
  7412  0120B0  8AF1               	bsf	intcon2,5,c	;volatile
  7413                           
  7414                           ;TechDemo3_Test_Routine.c: 96: INTCON3bits.INT1IF = 0;
  7415  0120B2  90F0               	bcf	intcon3,0,c	;volatile
  7416                           
  7417                           ;TechDemo3_Test_Routine.c: 97: INTCONbits.RBIF = 0;
  7418  0120B4  90F2               	bcf	intcon,0,c	;volatile
  7419  0120B6  0012               	return		;funcret
  7420  0120B8                     __end_of_ConfigInterrupts:
  7421                           	opt stack 0
  7422                           tblptru	equ	0xFF8
  7423                           tblptrh	equ	0xFF7
  7424                           tblptrl	equ	0xFF6
  7425                           tablat	equ	0xFF5
  7426                           prodh	equ	0xFF4
  7427                           prodl	equ	0xFF3
  7428                           intcon	equ	0xFF2
  7429                           intcon2	equ	0xFF1
  7430                           intcon3	equ	0xFF0
  7431                           postinc0	equ	0xFEE
  7432                           wreg	equ	0xFE8
  7433                           indf2	equ	0xFDF
  7434                           postinc2	equ	0xFDE
  7435                           postdec2	equ	0xFDD
  7436                           fsr2h	equ	0xFDA
  7437                           fsr2l	equ	0xFD9
  7438                           status	equ	0xFD8
  7439                           
  7440 ;; *************** function _ConfigIO *****************
  7441 ;; Defined at:
  7442 ;;		line 58 in file "TechDemo3_Test_Routine.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;		None
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;		None
  7447 ;; Return value:  Size  Location     Type
  7448 ;;		None               void
  7449 ;; Registers used:
  7450 ;;		wreg, status,2
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;Total ram usage:        0 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:    2
  7463 ;; This function calls:
  7464 ;;		Nothing
  7465 ;; This function is called by:
  7466 ;;		_main
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text38
  7471  012000                     __ptext38:
  7472                           	opt stack 0
  7473  012000                     _ConfigIO:
  7474                           	opt stack 28
  7475                           
  7476                           ;TechDemo3_Test_Routine.c: 59: TRISE = 0xC0;
  7477                           
  7478                           ;incstack = 0
  7479  012000  0EC0               	movlw	192
  7480  012002  6E96               	movwf	3990,c	;volatile
  7481                           
  7482                           ;TechDemo3_Test_Routine.c: 60: LATE = 0x00;
  7483  012004  0E00               	movlw	0
  7484  012006  6E8D               	movwf	3981,c	;volatile
  7485                           
  7486                           ;TechDemo3_Test_Routine.c: 62: TRISA = 0xFF;
  7487  012008  6892               	setf	3986,c	;volatile
  7488                           
  7489                           ;TechDemo3_Test_Routine.c: 64: TRISB = 0xFF;
  7490  01200A  6893               	setf	3987,c	;volatile
  7491                           
  7492                           ;TechDemo3_Test_Routine.c: 66: TRISJ = 0x00;
  7493  01200C  0E00               	movlw	0
  7494  01200E  6E9A               	movwf	3994,c	;volatile
  7495                           
  7496                           ;TechDemo3_Test_Routine.c: 67: LATJ = 0x00;
  7497  012010  0E00               	movlw	0
  7498  012012  6E91               	movwf	3985,c	;volatile
  7499  012014  0012               	return		;funcret
  7500  012016                     __end_of_ConfigIO:
  7501                           	opt stack 0
  7502                           tblptru	equ	0xFF8
  7503                           tblptrh	equ	0xFF7
  7504                           tblptrl	equ	0xFF6
  7505                           tablat	equ	0xFF5
  7506                           prodh	equ	0xFF4
  7507                           prodl	equ	0xFF3
  7508                           intcon	equ	0xFF2
  7509                           intcon2	equ	0xFF1
  7510                           intcon3	equ	0xFF0
  7511                           postinc0	equ	0xFEE
  7512                           wreg	equ	0xFE8
  7513                           indf2	equ	0xFDF
  7514                           postinc2	equ	0xFDE
  7515                           postdec2	equ	0xFDD
  7516                           fsr2h	equ	0xFDA
  7517                           fsr2l	equ	0xFD9
  7518                           status	equ	0xFD8
  7519                           
  7520 ;; *************** function _ConfigADC *****************
  7521 ;; Defined at:
  7522 ;;		line 72 in file "TechDemo3_Test_Routine.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;		None               void
  7529 ;; Registers used:
  7530 ;;		wreg, status,2, status,0, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;Total ram usage:        0 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    3
  7543 ;; This function calls:
  7544 ;;		_OpenADC
  7545 ;; This function is called by:
  7546 ;;		_main
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text39
  7551  0120B8                     __ptext39:
  7552                           	opt stack 0
  7553  0120B8                     _ConfigADC:
  7554                           	opt stack 27
  7555                           
  7556                           ;TechDemo3_Test_Routine.c: 73: OpenADC(0b11011111
  7557                           ;TechDemo3_Test_Routine.c: 74: & 0b11111111
  7558                           ;TechDemo3_Test_Routine.c: 75: & 0b11111011,
  7559                           ;TechDemo3_Test_Routine.c: 76: 0b10000111
  7560                           ;TechDemo3_Test_Routine.c: 77: & 0b01111111
  7561                           ;TechDemo3_Test_Routine.c: 78: & 0b11111110
  7562                           ;TechDemo3_Test_Routine.c: 79: & 0b11111101,
  7563                           ;TechDemo3_Test_Routine.c: 80: 10);
  7564                           
  7565                           ;incstack = 0
  7566  0120B8  0E04               	movlw	4
  7567  0120BA  6E13               	movwf	OpenADC@config2,c
  7568  0120BC  0E0A               	movlw	10
  7569  0120BE  6E14               	movwf	OpenADC@portconfig,c
  7570  0120C0  0EDB               	movlw	219
  7571  0120C2  ECCD  F08E         	call	_OpenADC
  7572  0120C6  0012               	return		;funcret
  7573  0120C8                     __end_of_ConfigADC:
  7574                           	opt stack 0
  7575                           tblptru	equ	0xFF8
  7576                           tblptrh	equ	0xFF7
  7577                           tblptrl	equ	0xFF6
  7578                           tablat	equ	0xFF5
  7579                           prodh	equ	0xFF4
  7580                           prodl	equ	0xFF3
  7581                           intcon	equ	0xFF2
  7582                           intcon2	equ	0xFF1
  7583                           intcon3	equ	0xFF0
  7584                           postinc0	equ	0xFEE
  7585                           wreg	equ	0xFE8
  7586                           indf2	equ	0xFDF
  7587                           postinc2	equ	0xFDE
  7588                           postdec2	equ	0xFDD
  7589                           fsr2h	equ	0xFDA
  7590                           fsr2l	equ	0xFD9
  7591                           status	equ	0xFD8
  7592                           
  7593 ;; *************** function _OpenADC *****************
  7594 ;; Defined at:
  7595 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  config          1    wreg     unsigned char 
  7598 ;;  config2         1   18[COMRAM] unsigned char 
  7599 ;;  portconfig      1   19[COMRAM] unsigned char 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  config          1   22[COMRAM] unsigned char 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;		None               void
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7614 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;Total ram usage:        5 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    2
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_ConfigADC
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text40
  7626  011D9A                     __ptext40:
  7627                           	opt stack 0
  7628  011D9A                     _OpenADC:
  7629                           	opt stack 27
  7630                           
  7631                           ;incstack = 0
  7632                           ;OpenADC@config stored from wreg
  7633  011D9A  6E17               	movwf	OpenADC@config,c
  7634  011D9C  0E00               	movlw	0
  7635  011D9E  6EC2               	movwf	4034,c	;volatile
  7636  011DA0  0E00               	movlw	0
  7637  011DA2  6EC0               	movwf	4032,c	;volatile
  7638  011DA4  90D8               	bcf	status,0,c
  7639  011DA6  3013               	rrcf	OpenADC@config2,w,c
  7640  011DA8  0B3C               	andlw	60
  7641  011DAA  6EC2               	movwf	4034,c	;volatile
  7642  011DAC  C013  F015         	movff	OpenADC@config2,??_OpenADC
  7643  011DB0  3A15               	swapf	??_OpenADC,f,c
  7644  011DB2  0EF0               	movlw	240
  7645  011DB4  1615               	andwf	??_OpenADC,f,c
  7646  011DB6  0E30               	movlw	48
  7647  011DB8  1615               	andwf	??_OpenADC,f,c
  7648  011DBA  5014               	movf	OpenADC@portconfig,w,c
  7649  011DBC  0B0F               	andlw	15
  7650  011DBE  1015               	iorwf	??_OpenADC,w,c
  7651  011DC0  6EC1               	movwf	4033,c	;volatile
  7652  011DC2  C017  F015         	movff	OpenADC@config,??_OpenADC
  7653  011DC6  90D8               	bcf	status,0,c
  7654  011DC8  3615               	rlcf	??_OpenADC,f,c
  7655  011DCA  90D8               	bcf	status,0,c
  7656  011DCC  3615               	rlcf	??_OpenADC,f,c
  7657  011DCE  0E38               	movlw	56
  7658  011DD0  1615               	andwf	??_OpenADC,f,c
  7659  011DD2  C017  F016         	movff	OpenADC@config,??_OpenADC+1
  7660  011DD6  3A16               	swapf	??_OpenADC+1,f,c
  7661  011DD8  0E0F               	movlw	15
  7662  011DDA  1616               	andwf	??_OpenADC+1,f,c
  7663  011DDC  0E07               	movlw	7
  7664  011DDE  1616               	andwf	??_OpenADC+1,f,c
  7665  011DE0  5017               	movf	OpenADC@config,w,c
  7666  011DE2  0B80               	andlw	128
  7667  011DE4  1016               	iorwf	??_OpenADC+1,w,c
  7668  011DE6  1015               	iorwf	??_OpenADC,w,c
  7669  011DE8  6EC0               	movwf	4032,c	;volatile
  7670  011DEA  AE13               	btfss	OpenADC@config2,7,c
  7671  011DEC  D003               	goto	l280
  7672  011DEE  9C9E               	bcf	3998,6,c	;volatile
  7673  011DF0  8C9D               	bsf	3997,6,c	;volatile
  7674  011DF2  8CF2               	bsf	intcon,6,c	;volatile
  7675  011DF4                     l280:
  7676  011DF4  80C2               	bsf	4034,0,c	;volatile
  7677  011DF6  0012               	return		;funcret
  7678  011DF8                     __end_of_OpenADC:
  7679                           	opt stack 0
  7680                           tblptru	equ	0xFF8
  7681                           tblptrh	equ	0xFF7
  7682                           tblptrl	equ	0xFF6
  7683                           tablat	equ	0xFF5
  7684                           prodh	equ	0xFF4
  7685                           prodl	equ	0xFF3
  7686                           intcon	equ	0xFF2
  7687                           intcon2	equ	0xFF1
  7688                           intcon3	equ	0xFF0
  7689                           postinc0	equ	0xFEE
  7690                           wreg	equ	0xFE8
  7691                           indf2	equ	0xFDF
  7692                           postinc2	equ	0xFDE
  7693                           postdec2	equ	0xFDD
  7694                           fsr2h	equ	0xFDA
  7695                           fsr2l	equ	0xFD9
  7696                           status	equ	0xFD8
  7697                           
  7698 ;; *************** function _ChangeMode *****************
  7699 ;; Defined at:
  7700 ;;		line 177 in file "TechDemo3_Test_Routine.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;		None               void
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    3
  7721 ;; This function calls:
  7722 ;;		_Delay10KTCYx
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text41
  7729  011F0C                     __ptext41:
  7730                           	opt stack 0
  7731  011F0C                     _ChangeMode:
  7732                           	opt stack 27
  7733                           
  7734                           ;TechDemo3_Test_Routine.c: 178: LATJ = 0x00;
  7735                           
  7736                           ;incstack = 0
  7737  011F0C  0E00               	movlw	0
  7738  011F0E  6E91               	movwf	3985,c	;volatile
  7739                           
  7740                           ;TechDemo3_Test_Routine.c: 179: LATJ = 0x1F;
  7741  011F10  0E1F               	movlw	31
  7742  011F12  6E91               	movwf	3985,c	;volatile
  7743                           
  7744                           ;TechDemo3_Test_Routine.c: 180: Delay10KTCYx(125);
  7745  011F14  0E7D               	movlw	125
  7746  011F16  ECDE  F08F         	call	_Delay10KTCYx
  7747                           
  7748                           ;TechDemo3_Test_Routine.c: 181: LATJ = 0x00;
  7749  011F1A  0E00               	movlw	0
  7750  011F1C  6E91               	movwf	3985,c	;volatile
  7751                           
  7752                           ;TechDemo3_Test_Routine.c: 182: Delay10KTCYx(125);
  7753  011F1E  0E7D               	movlw	125
  7754  011F20  ECDE  F08F         	call	_Delay10KTCYx
  7755                           
  7756                           ;TechDemo3_Test_Routine.c: 183: LATJ = 0x1F;
  7757  011F24  0E1F               	movlw	31
  7758  011F26  6E91               	movwf	3985,c	;volatile
  7759                           
  7760                           ;TechDemo3_Test_Routine.c: 184: Delay10KTCYx(125);
  7761  011F28  0E7D               	movlw	125
  7762  011F2A  ECDE  F08F         	call	_Delay10KTCYx
  7763                           
  7764                           ;TechDemo3_Test_Routine.c: 185: LATJ = 0x00;
  7765  011F2E  0E00               	movlw	0
  7766  011F30  6E91               	movwf	3985,c	;volatile
  7767  011F32  0012               	return		;funcret
  7768  011F34                     __end_of_ChangeMode:
  7769                           	opt stack 0
  7770                           tblptru	equ	0xFF8
  7771                           tblptrh	equ	0xFF7
  7772                           tblptrl	equ	0xFF6
  7773                           tablat	equ	0xFF5
  7774                           prodh	equ	0xFF4
  7775                           prodl	equ	0xFF3
  7776                           intcon	equ	0xFF2
  7777                           intcon2	equ	0xFF1
  7778                           intcon3	equ	0xFF0
  7779                           postinc0	equ	0xFEE
  7780                           wreg	equ	0xFE8
  7781                           indf2	equ	0xFDF
  7782                           postinc2	equ	0xFDE
  7783                           postdec2	equ	0xFDD
  7784                           fsr2h	equ	0xFDA
  7785                           fsr2l	equ	0xFD9
  7786                           status	equ	0xFD8
  7787                           
  7788 ;; *************** function _Delay10KTCYx *****************
  7789 ;; Defined at:
  7790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  unit            1    wreg     unsigned char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  unit            1   19[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;		None               void
  7797 ;; Registers used:
  7798 ;;		wreg
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;Total ram usage:        2 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    2
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_ChangeMode
  7815 ;;		_main
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text42
  7820  011FBC                     __ptext42:
  7821                           	opt stack 0
  7822  011FBC                     _Delay10KTCYx:
  7823                           	opt stack 28
  7824                           
  7825                           ;incstack = 0
  7826                           ;Delay10KTCYx@unit stored from wreg
  7827  011FBC  6E14               	movwf	Delay10KTCYx@unit,c
  7828  011FBE  0E0D               	movlw	13
  7829  011FC0  6E13               	movwf	??_Delay10KTCYx& (0+255),c
  7830  011FC2  0EFC               	movlw	252
  7831  011FC4                     u3327:
  7832  011FC4  2EE8               	decfsz	wreg,f,c
  7833  011FC6  D7FE               	goto	u3327
  7834  011FC8  2E13               	decfsz	??_Delay10KTCYx& (0+255),f,c
  7835  011FCA  D7FC               	goto	u3327
  7836  011FCC  2E14               	decfsz	Delay10KTCYx@unit,f,c
  7837  011FCE  D7F7               	goto	l2465
  7838  011FD0  D000               	goto	l601
  7839  011FD2                     l601:
  7840  011FD2  0012               	return		;funcret
  7841  011FD4                     __end_of_Delay10KTCYx:
  7842                           	opt stack 0
  7843                           tblptru	equ	0xFF8
  7844                           tblptrh	equ	0xFF7
  7845                           tblptrl	equ	0xFF6
  7846                           tablat	equ	0xFF5
  7847                           prodh	equ	0xFF4
  7848                           prodl	equ	0xFF3
  7849                           intcon	equ	0xFF2
  7850                           intcon2	equ	0xFF1
  7851                           intcon3	equ	0xFF0
  7852                           postinc0	equ	0xFEE
  7853                           wreg	equ	0xFE8
  7854                           indf2	equ	0xFDF
  7855                           postinc2	equ	0xFDE
  7856                           postdec2	equ	0xFDD
  7857                           fsr2h	equ	0xFDA
  7858                           fsr2l	equ	0xFD9
  7859                           status	equ	0xFD8
  7860                           
  7861 ;; *************** function _isr *****************
  7862 ;; Defined at:
  7863 ;;		line 35 in file "TechDemo3_Test_Routine.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;		None               void
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;Total ram usage:       14 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    1
  7884 ;; This function calls:
  7885 ;;		_ReadTimer0
  7886 ;;		i2_WriteTimer0
  7887 ;; This function is called by:
  7888 ;;		Interrupt level 2
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	intcode
  7893  000008                     __pintcode:
  7894                           	opt stack 0
  7895  000008                     _isr:
  7896                           	opt stack 25
  7897                           
  7898                           ;incstack = 0
  7899  000008  CFFA F005          	movff	pclath,??_isr
  7900  00000C  CFFB F006          	movff	pclatu,??_isr+1
  7901  000010  CFE9 F007          	movff	fsr0l,??_isr+2
  7902  000014  ED71  F08C         	call	int_func,f	;refresh shadow registers
  7903                           pclatu	equ	0xFFB
  7904                           pclath	equ	0xFFA
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           prodh	equ	0xFF4
  7910                           prodl	equ	0xFF3
  7911                           intcon	equ	0xFF2
  7912                           intcon2	equ	0xFF1
  7913                           intcon3	equ	0xFF0
  7914                           postinc0	equ	0xFEE
  7915                           fsr0l	equ	0xFE9
  7916                           wreg	equ	0xFE8
  7917                           indf2	equ	0xFDF
  7918                           postinc2	equ	0xFDE
  7919                           postdec2	equ	0xFDD
  7920                           fsr2h	equ	0xFDA
  7921                           fsr2l	equ	0xFD9
  7922                           status	equ	0xFD8
  7923                           
  7924                           	psect	intcode_body
  7925  0118E2                     __pintcode_body:
  7926                           	opt stack 25
  7927  0118E2                     int_func:
  7928                           	opt stack 25
  7929  0118E2  0006               	pop		; remove dummy address from shadow register refresh
  7930  0118E4  CFEA F008          	movff	fsr0h,??_isr+3
  7931  0118E8  CFE1 F009          	movff	fsr1l,??_isr+4
  7932  0118EC  CFE2 F00A          	movff	fsr1h,??_isr+5
  7933  0118F0  CFD9 F00B          	movff	fsr2l,??_isr+6
  7934  0118F4  CFDA F00C          	movff	fsr2h,??_isr+7
  7935  0118F8  CFF3 F00D          	movff	prodl,??_isr+8
  7936  0118FC  CFF4 F00E          	movff	prodh,??_isr+9
  7937  011900  CFF6 F00F          	movff	tblptrl,??_isr+10
  7938  011904  CFF7 F010          	movff	tblptrh,??_isr+11
  7939  011908  CFF8 F011          	movff	tblptru,??_isr+12
  7940  01190C  CFF5 F012          	movff	tablat,??_isr+13
  7941                           
  7942                           ;TechDemo3_Test_Routine.c: 36: if (INTCON3bits.INT1IF == 1) {
  7943  011910  A0F0               	btfss	intcon3,0,c	;volatile
  7944  011912  D005               	goto	i2l3125
  7945                           
  7946                           ;TechDemo3_Test_Routine.c: 37: INTCON3bits.INT1IF = 0;
  7947  011914  90F0               	bcf	intcon3,0,c	;volatile
  7948                           
  7949                           ;TechDemo3_Test_Routine.c: 38: mode ^= 0x01;
  7950  011916  0E01               	movlw	1
  7951  011918  0100               	movlb	0	; () banked
  7952  01191A  1BA0               	xorwf	_mode& (0+255),f,b	;volatile
  7953  01191C  D000               	goto	i2l3125
  7954  01191E                     i2l3125:
  7955                           
  7956                           ;TechDemo3_Test_Routine.c: 39: }
  7957                           ;TechDemo3_Test_Routine.c: 41: if (INTCONbits.RBIF == 1) {
  7958  01191E  A0F2               	btfss	intcon,0,c	;volatile
  7959  011920  D01B               	goto	i2l83
  7960                           
  7961                           ;TechDemo3_Test_Routine.c: 42: INTCONbits.RBIE = 0;
  7962  011922  96F2               	bcf	intcon,3,c	;volatile
  7963                           
  7964                           ;TechDemo3_Test_Routine.c: 43: if (PORTBbits.RB4 == 1) {
  7965  011924  A881               	btfss	3969,4,c	;volatile
  7966  011926  D008               	goto	i2l3133
  7967                           
  7968                           ;TechDemo3_Test_Routine.c: 44: T0CONbits.TMR0ON = 1;
  7969  011928  8ED5               	bsf	4053,7,c	;volatile
  7970                           
  7971                           ;TechDemo3_Test_Routine.c: 45: WriteTimer0(0);
  7972  01192A  0E00               	movlw	0
  7973  01192C  6E02               	movwf	i2WriteTimer0@timer0+1,c
  7974  01192E  0E00               	movlw	0
  7975  011930  6E01               	movwf	i2WriteTimer0@timer0,c
  7976  011932  EC3A  F090         	call	i2_WriteTimer0	;wreg free
  7977  011936  D000               	goto	i2l3133
  7978  011938                     i2l3133:
  7979                           
  7980                           ;TechDemo3_Test_Routine.c: 46: }
  7981                           ;TechDemo3_Test_Routine.c: 47: if (PORTBbits.RB4 == 0) {
  7982  011938  B881               	btfsc	3969,4,c	;volatile
  7983  01193A  D00B               	goto	i2l3141
  7984                           
  7985                           ;TechDemo3_Test_Routine.c: 48: T0CONbits.TMR0ON = 0;
  7986  01193C  9ED5               	bcf	4053,7,c	;volatile
  7987                           
  7988                           ;TechDemo3_Test_Routine.c: 49: echo_time = ReadTimer0();
  7989  01193E  EC43  F090         	call	_ReadTimer0	;wreg free
  7990  011942  C001  F0B1         	movff	?_ReadTimer0,_echo_time	;volatile
  7991  011946  C002  F0B2         	movff	?_ReadTimer0+1,_echo_time+1	;volatile
  7992                           
  7993                           ;TechDemo3_Test_Routine.c: 50: echo_ready = 1;
  7994  01194A  0E01               	movlw	1
  7995  01194C  0100               	movlb	0	; () banked
  7996  01194E  6F9D               	movwf	_echo_ready& (0+255),b	;volatile
  7997  011950  D000               	goto	i2l3141
  7998  011952                     i2l3141:
  7999                           
  8000                           ;TechDemo3_Test_Routine.c: 51: }
  8001                           ;TechDemo3_Test_Routine.c: 52: INTCONbits.RBIE = 1;
  8002  011952  86F2               	bsf	intcon,3,c	;volatile
  8003                           
  8004                           ;TechDemo3_Test_Routine.c: 53: INTCONbits.RBIF = 0;
  8005  011954  90F2               	bcf	intcon,0,c	;volatile
  8006  011956  D000               	goto	i2l83
  8007  011958                     i2l83:
  8008  011958  C012  FFF5         	movff	??_isr+13,tablat
  8009  01195C  C011  FFF8         	movff	??_isr+12,tblptru
  8010  011960  C010  FFF7         	movff	??_isr+11,tblptrh
  8011  011964  C00F  FFF6         	movff	??_isr+10,tblptrl
  8012  011968  C00E  FFF4         	movff	??_isr+9,prodh
  8013  01196C  C00D  FFF3         	movff	??_isr+8,prodl
  8014  011970  C00C  FFDA         	movff	??_isr+7,fsr2h
  8015  011974  C00B  FFD9         	movff	??_isr+6,fsr2l
  8016  011978  C00A  FFE2         	movff	??_isr+5,fsr1h
  8017  01197C  C009  FFE1         	movff	??_isr+4,fsr1l
  8018  011980  C008  FFEA         	movff	??_isr+3,fsr0h
  8019  011984  C007  FFE9         	movff	??_isr+2,fsr0l
  8020  011988  C006  FFFB         	movff	??_isr+1,pclatu
  8021  01198C  C005  FFFA         	movff	??_isr,pclath
  8022  011990  0011               	retfie		f
  8023  011992                     __end_of_isr:
  8024                           	opt stack 0
  8025                           pclatu	equ	0xFFB
  8026                           pclath	equ	0xFFA
  8027                           tblptru	equ	0xFF8
  8028                           tblptrh	equ	0xFF7
  8029                           tblptrl	equ	0xFF6
  8030                           tablat	equ	0xFF5
  8031                           prodh	equ	0xFF4
  8032                           prodl	equ	0xFF3
  8033                           intcon	equ	0xFF2
  8034                           intcon2	equ	0xFF1
  8035                           intcon3	equ	0xFF0
  8036                           postinc0	equ	0xFEE
  8037                           fsr0h	equ	0xFEA
  8038                           fsr0l	equ	0xFE9
  8039                           wreg	equ	0xFE8
  8040                           fsr1h	equ	0xFE2
  8041                           fsr1l	equ	0xFE1
  8042                           indf2	equ	0xFDF
  8043                           postinc2	equ	0xFDE
  8044                           postdec2	equ	0xFDD
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function i2_WriteTimer0 *****************
  8050 ;; Defined at:
  8051 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  timer0          2    0[COMRAM] unsigned int 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  8056 ;; Return value:  Size  Location     Type
  8057 ;;		None               void
  8058 ;; Registers used:
  8059 ;;		None
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;Total ram usage:        4 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_isr
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text44
  8079  012074                     __ptext44:
  8080                           	opt stack 0
  8081  012074                     i2_WriteTimer0:
  8082                           	opt stack 25
  8083                           
  8084                           ;incstack = 0
  8085  012074  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  8086  012078  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  8087  01207C  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  8088  012080  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  8089  012084  0012               	return		;funcret
  8090  012086                     __end_ofi2_WriteTimer0:
  8091                           	opt stack 0
  8092                           pclatu	equ	0xFFB
  8093                           pclath	equ	0xFFA
  8094                           tblptru	equ	0xFF8
  8095                           tblptrh	equ	0xFF7
  8096                           tblptrl	equ	0xFF6
  8097                           tablat	equ	0xFF5
  8098                           prodh	equ	0xFF4
  8099                           prodl	equ	0xFF3
  8100                           intcon	equ	0xFF2
  8101                           intcon2	equ	0xFF1
  8102                           intcon3	equ	0xFF0
  8103                           postinc0	equ	0xFEE
  8104                           fsr0h	equ	0xFEA
  8105                           fsr0l	equ	0xFE9
  8106                           wreg	equ	0xFE8
  8107                           fsr1h	equ	0xFE2
  8108                           fsr1l	equ	0xFE1
  8109                           indf2	equ	0xFDF
  8110                           postinc2	equ	0xFDE
  8111                           postdec2	equ	0xFDD
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function _ReadTimer0 *****************
  8117 ;; Defined at:
  8118 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0read.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  timer           2    2[COMRAM] struct Timers
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  2    0[COMRAM] unsigned int 
  8125 ;; Registers used:
  8126 ;;		None
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;Total ram usage:        4 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_isr
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text45
  8146  012086                     __ptext45:
  8147                           	opt stack 0
  8148  012086                     _ReadTimer0:
  8149                           	opt stack 25
  8150                           
  8151                           ;incstack = 0
  8152  012086  CFD6 F003          	movff	4054,ReadTimer0@timer	;volatile
  8153  01208A  CFD7 F004          	movff	4055,ReadTimer0@timer+1	;volatile
  8154  01208E  C003  F001         	movff	ReadTimer0@timer,?_ReadTimer0
  8155  012092  C004  F002         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  8156  012096  0012               	return		;funcret
  8157  012098                     __end_of_ReadTimer0:
  8158                           	opt stack 0
  8159                           pclatu	equ	0xFFB
  8160                           pclath	equ	0xFFA
  8161                           tblptru	equ	0xFF8
  8162                           tblptrh	equ	0xFF7
  8163                           tblptrl	equ	0xFF6
  8164                           tablat	equ	0xFF5
  8165                           prodh	equ	0xFF4
  8166                           prodl	equ	0xFF3
  8167                           intcon	equ	0xFF2
  8168                           intcon2	equ	0xFF1
  8169                           intcon3	equ	0xFF0
  8170                           postinc0	equ	0xFEE
  8171                           fsr0h	equ	0xFEA
  8172                           fsr0l	equ	0xFE9
  8173                           wreg	equ	0xFE8
  8174                           fsr1h	equ	0xFE2
  8175                           fsr1l	equ	0xFE1
  8176                           indf2	equ	0xFDF
  8177                           postinc2	equ	0xFDE
  8178                           postdec2	equ	0xFDD
  8179                           fsr2h	equ	0xFDA
  8180                           fsr2l	equ	0xFD9
  8181                           status	equ	0xFD8
  8182                           pclatu	equ	0xFFB
  8183                           pclath	equ	0xFFA
  8184                           tblptru	equ	0xFF8
  8185                           tblptrh	equ	0xFF7
  8186                           tblptrl	equ	0xFF6
  8187                           tablat	equ	0xFF5
  8188                           prodh	equ	0xFF4
  8189                           prodl	equ	0xFF3
  8190                           intcon	equ	0xFF2
  8191                           intcon2	equ	0xFF1
  8192                           intcon3	equ	0xFF0
  8193                           postinc0	equ	0xFEE
  8194                           fsr0h	equ	0xFEA
  8195                           fsr0l	equ	0xFE9
  8196                           wreg	equ	0xFE8
  8197                           fsr1h	equ	0xFE2
  8198                           fsr1l	equ	0xFE1
  8199                           indf2	equ	0xFDF
  8200                           postinc2	equ	0xFDE
  8201                           postdec2	equ	0xFDD
  8202                           fsr2h	equ	0xFDA
  8203                           fsr2l	equ	0xFD9
  8204                           status	equ	0xFD8
  8205                           
  8206                           	psect	rparam
  8207  0000                     pclatu	equ	0xFFB
  8208                           pclath	equ	0xFFA
  8209                           tblptru	equ	0xFF8
  8210                           tblptrh	equ	0xFF7
  8211                           tblptrl	equ	0xFF6
  8212                           tablat	equ	0xFF5
  8213                           prodh	equ	0xFF4
  8214                           prodl	equ	0xFF3
  8215                           intcon	equ	0xFF2
  8216                           intcon2	equ	0xFF1
  8217                           intcon3	equ	0xFF0
  8218                           postinc0	equ	0xFEE
  8219                           fsr0h	equ	0xFEA
  8220                           fsr0l	equ	0xFE9
  8221                           wreg	equ	0xFE8
  8222                           fsr1h	equ	0xFE2
  8223                           fsr1l	equ	0xFE1
  8224                           indf2	equ	0xFDF
  8225                           postinc2	equ	0xFDE
  8226                           postdec2	equ	0xFDD
  8227                           fsr2h	equ	0xFDA
  8228                           fsr2l	equ	0xFD9
  8229                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    118
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     75      76
    BANK0           160     46      83
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    puts1USART@data	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[16]), 

    putrs1USART@data	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_7(CODE[27]), STR_6(CODE[28]), STR_4(CODE[12]), STR_3(CODE[21]), 
		 -> STR_2(CODE[41]), STR_1(CODE[19]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_8(CODE[13]), STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->___ftadd
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    _puts1USART->_Write1USART
    ___lwtoft->___ftpack
    _GetDistance->_Delay1TCYx
    _GetADCReading->_ReadADC
    _ConfigUSART->_Open1USART
    _ConfigUSART->_putrs1USART
    _putrs1USART->_Write1USART
    _ConfigTimer0->_WriteTimer0
    _ConfigADC->_OpenADC
    _ChangeMode->_Delay10KTCYx

Critical Paths under _isr in COMRAM

    _isr->_ReadTimer0
    _isr->i2_WriteTimer0

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   44801
                                             44 BANK0      2     2      0
                         _ChangeMode
                          _ConfigADC
                           _ConfigIO
                   _ConfigInterrupts
                       _ConfigTimer0
                        _ConfigUSART
                       _Delay10KTCYx
                        _Delay1KTCYx
                      _GetADCReading
                        _GetDistance
                      _IlluminateLED
                            ___ftmul
                           ___lwtoft
                        _putrs1USART
                         _puts1USART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   37540
                                              6 BANK0     38    29      9
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8763
                                             53 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8565
                                             53 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1961
                                             32 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3703
                                             38 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1250
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                             24 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                             18 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                             18 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1829
                                             26 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             31 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     411
                                             53 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3092
                                              0 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2839
                                             63 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _puts1USART                                           2     0      2     172
                                             19 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1782
                                             26 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _IlluminateLED                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      22
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetADCReading                                        3     1      2      44
                                             22 COMRAM     3     1      2
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      22
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay1KTCYx                                          1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          0     0      0     657
                         _Open1USART
                        _putrs1USART
 ---------------------------------------------------------------------------------
 (1) _putrs1USART                                          2     0      2     384
                                             19 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (2) _Write1USART                                          1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     273
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ConfigTimer0                                         0     0      0     149
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     149
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigADC                                            0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ChangeMode                                           0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      22
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 14    14      0     140
                                              4 COMRAM    14    14      0
                         _ReadTimer0
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _ReadTimer0                                           4     2      2      47
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeMode
     _Delay10KTCYx
   _ConfigADC
     _OpenADC
   _ConfigIO
   _ConfigInterrupts
   _ConfigTimer0
     _WriteTimer0
   _ConfigUSART
     _Open1USART
     _putrs1USART
       _Write1USART
   _Delay10KTCYx
   _Delay1KTCYx
   _GetADCReading
     _BusyADC
     _ConvertADC
     _ReadADC
     _SetChanADC
   _GetDistance
     _Delay1TCYx
   _IlluminateLED
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
   _putrs1USART
     _Write1USART
   _puts1USART
     _Write1USART
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _isr (ROOT)
   _ReadTimer0
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      53       5       51.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4B      4C       1       80.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      32        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 10 18:30:33 2017

                        _i 009E                         _i2 009F               ___awdiv@sign 001E  
      ___wmul@multiplicand 0023                __CFG_BORV$0 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000               __CFG_CP4$OFF 000000               __CFG_CP5$OFF 000000  
      __end_of_GetDistance 203E               ___ftadd@exp1 004B               ___ftadd@exp2 004A  
             __CFG_CP6$OFF 000000               __CFG_CP7$OFF 000000               ___ftadd@sign 0049  
                      l110 1BD4                        l123 1E84                        l141 1190  
                      l231 060A                        l171 1086                        l333 1CA0  
                      l253 09FC                        l335 1CAC                        l280 1DF4  
                      l336 1CAE                        l601 1FD2                        l329 1C84  
                      l338 1CC8                        l346 1E88                        l258 20D4  
                      l178 0E1E                        l613 20D8                        l358 1EE6  
                      l615 20E0                        l608 204E                        l288 20A6  
                      l376 1EE2                        l722 18E0                        l802 1532  
                      l811 1522                        l820 1ABC                        l804 149A  
                      l733 18B8                        l901 1D28                        l805 14C2  
                      l582 1C56                        l921 1D98                        l681 163C  
                      l569 1A26                        l762 12A4                        l690 162C  
                      l826 1734                        l763 1422                        l843 1E46  
                      l836 1F70                        l766 12CE                        l862 1F9E  
                      l847 181A                        l777 1390                        l786 13AC  
                      l891 1B38                        l981 1F58               __CFG_CPB$OFF 000000  
             __CFG_CPD$OFF 000000       __size_of_WriteTimer0 0012                _putrs1USART 1E86  
                      _isr 0008               ___awmod@sign 0018                        prod 000FF3  
                      wreg 000FE8                 _TXSTA1bits 000FAC               __CFG_MODE$MC 000000  
          ReadTimer0@timer 0003               __CFG_LVP$OFF 000000                 _Delay1TCYx 20D6  
             __CFG_WDT$OFF 000000                 _ChangeMode 1F0C                       l2221 1334  
                     l2205 12E8                       l3101 09AE                       l3013 05D8  
                     l3005 05AC                       l2151 1880                       l2143 183C  
                     l2223 1340                       l2215 1310                       l2311 19A8  
                     l3031 0694                       l3015 05EC                       l3007 05BC  
                     l3103 09C8                       l2161 18C0                       l2153 18A0  
                     l2145 1848                       l2241 13CA                       l2233 1378  
                     l2225 134C                       l3041 0788                       l3105 09EE  
                     l2411 1C7C                       l2403 1C6A                       l2155 18AC  
                     l2147 1868                       l2139 182C                       l2251 13FC  
                     l2235 1384                       l2227 1354                       l2323 19D0  
                     l3043 0798                       l3027 0642                       l3019 0610  
                     l3051 07C4                       l2325 19DA                       l2317 19BA  
                     l2261 165C                       l2501 0B3C                       l3061 080A  
                     l3301 124E                       l2423 1C98                       l2415 1C88  
                     l2407 1C74                       l2167 18D2                       l2343 1A1C  
                     l2335 1A00                       l2327 19E2                       l2263 1676  
                     l2511 0C00                       l2177 1FFA                       l2193 12B2  
                     l2281 16B8                       l3081 088C                       l3073 0846  
                     l3049 07B4                       l2427 1CA4                       l2419 1C90  
                     l2603 1544                       l2339 1A0C                       l2371 1C30  
                     l2363 1C08                       l2355 1BEC                       l2291 16E6  
                     l2267 1684                       l2507 0BF0                       l3067 0832  
                     l3251 10E0                       l3243 10CA                       l2365 1C12  
                     l2285 16CA                       l2525 0DF4                       l3085 08B4  
                     l3077 0886                       l3069 0838                       l3261 1146  
                     l3237 10AA                       l2199 12DC                       l2711 17AE  
                     l2631 15CA                       l2623 1598                       l2367 1C1A  
                     l2375 1C3C                       l2359 1BFA                       l2295 16F8  
                     l2519 0D36                       l3095 0916                       l3271 118C  
                     l3247 10D6                       l2465 1FBE                       l2721 17D8  
                     l2609 1554                       l2553 1460                       l2289 16E0  
                     l2537 1F96                       l3089 08E6                       l2811 1B6E  
                     l2803 1B4E                       l2723 17E6                       l2715 17BE  
                     l2643 15EE                       l2635 15DA                       l2547 1442  
                     l2379 1C4C                       l2299 170E                       l3099 09A6  
                     l3291 11CE                       l3283 11BE                       l3259 1136  
                     l3275 1198                       l2813 1B76                       l2805 1B56  
                     l2821 1B8A                       l2661 1E1C                       l2717 17C4  
                     l2725 17F0                       l2741 1AEE                       l2653 1618  
                     l2901 00E4                       l2815 1B7E                       l2807 1B5E  
                     l2823 1BB2                       l2751 1B28                       l2743 1AF6  
                     l2655 1626                       l2647 15FE                       l2583 14E4  
                     l2575 14D0                       l2487 1040                       l2479 0F70  
                     l2903 011C                       l2825 1BB8                       l2809 1B66  
                     l2841 1E5C                       l2833 1E4C                       l2673 1A8C  
                     l2729 1808                       l2761 1CEA                       l2649 1604  
                     l2593 150E                       l2835 1E50                       l2739 1AE0  
                     l2763 1CF2                       l2595 151C                       l2587 14F4  
                     l2837 1E54                       l2845 1E62                       l2669 1A5A  
                     l2693 1754                       l2773 1D40                       l2589 14FA  
                     l2909 0138                       l2839 1E58                       l2679 1AB8  
                     l2767 1D18                       l2759 1CDC                       l2775 1D4E  
                     l2951 0308                       l2943 0298                       l2935 0230  
                     l2919 0180                       l2953 031E                       l2873 0010  
                     l2867 2040                       l2971 0408                       l2963 038A  
                     l2947 02C0                       l2891 00A8                       l2965 0396  
                     l2973 041C                       l2949 02D6                       l2893 00C4  
                     l2991 04DE                       l2983 0498                       l2959 0364  
                     l2887 0066                       l2879 0030                       l2977 0484  
                     l2969 03DA                       l2897 00D8                       l2995 050A  
                     l2987 04D8                       l2979 048A                       l2997 0512  
                     ?_isr 0001                       STR_1 FFD2                       STR_2 FF5D  
                     STR_3 FFBD                       STR_4 FFF2                       STR_5 FFED  
                     STR_6 FF86                       STR_7 FFA2                       STR_8 FFE5  
                     u2240 20D0                       _LATE 000F8D                       u2341 1434  
                     _LATJ 000F91                       u1721 1270                       u2361 1452  
                     u1731 1284                       u3317 2042                       u3327 1FC4  
                     u2551 1746                       u2570 1772                       u1931 164E  
                     u2575 176A                       u1951 166C                       u2940 0602  
                     u2780 01C6                       u2785 01BA                       i2l83 1958  
                     _main 1088               ___ftpack@arg 0013                       _mode 00A0  
             ___ftpack@exp 0016                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr0l 000FE9                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9     __size_ofi2_WriteTimer0 0012  
                     pclat 000FFA                       prodh 000FF4                       prodl 000FF3  
                     start 0018              __CFG_IESO$OFF 000000        __end_of_ConfigUSART 1FBC  
             _sprintf$2000 0075              __CFG_MCLRE$ON 000000               ___ftmul@cntr 0034  
             ___param_bank 000010               ___ftmul@sign 0035            __end_of_BusyADC 20D6  
          __end_of_ReadADC 20A8            __end_of_OpenADC 1DF8               ___fttol@exp1 0044  
             ___fttol@lval 0040                      ??_isr 0005                _Delay1KTCYx 203E  
            __CFG_WAIT$OFF 000000                      ?_main 0001            __end_of___awdiv 1A28  
          __end_of___ftadd 1424            __end_of___awmod 1C58            __end_of___ftneg 1F7E  
          __end_of___lldiv 1B4A            __end_of___ftmul 1736                      _T0CON 000FD5  
          ___awdiv@divisor 001B            __end_of___llmod 1D3A            __end_of___ftsub 1E48  
          __end_of___fttol 181C     __size_of_IlluminateLED 003E            ___awdiv@counter 001D  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISE 000F96                      _TRISJ 000F9A  
    __size_of_Delay10KTCYx 0018              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
            __CFG_WRT4$OFF 000000              __CFG_WRT5$OFF 000000               ___lltoft@exp 0023  
            __CFG_WRT6$OFF 000000              __CFG_WRT7$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000             __CFG_EBTR4$OFF 000000             __CFG_EBTR5$OFF 000000  
           __CFG_EBTR6$OFF 000000             __CFG_EBTR7$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
          __end_of_dpowers FF0F                      _scale 09FE            __end_of_isdigit 1FA0  
            ___ftpack@sign 0017                 _ConvertADC 20E2             __CFG_BOREN$OFF 000000  
                    tablat 000FF5                      status 000FD8            __end_of_sprintf 09FE  
   __size_of_GetADCReading 008C           __end_of_ConfigIO 2016            __initialization 2016  
              _GetDistance 202A       __end_of_ConfigTimer0 2062               __end_of_main 1260  
           puts1USART@data 0014                 _ReadTimer0 2086               _Delay10KTCYx 1FBC  
               _Open1USART 1C58                     ??_main 008C              ___fttol@sign1 003F  
            i2_WriteTimer0 2074              __activetblptr 000003                 _SetChanADC 1FD4  
     __size_of__tdiv_to_l_ 0110         __size_of_ConfigADC 0010           IlluminateLED@sel 0013  
 __end_of_ConfigInterrupts 20B8                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0           ___llmod@dividend 0020                     ?_scale 0036  
                   _ADRESH 000FC4                     _ADRESL 000FC3                ?_Delay1TCYx 0001  
         ___awdiv@dividend 0019                ?_ChangeMode 0001           __end_of___ftpack 18E2  
         __end_of___lltoft 1D9A            __CFG_BBSIZ$BB2K 000000                     i2l3141 1952  
                   i2l3133 1938                     i2l3125 191E                _ConfigUSART 1FA0  
         __end_of___lwtoft 1F5A                     _RCSTA1 000FAB                     _SPBRG1 000FAF  
            _IlluminateLED 1E48                  ??_BusyADC 0013                     _TXREG1 000FAD  
                ??_ReadADC 0015                     _TXSTA1 000FAC                  ??_OpenADC 0015  
           __CFG_XINST$OFF 000000           __end_of__powers_ FF5D                     ___ftge 1A28  
                   ___wmul 1EBC                  ??___awdiv 001D                  ??___ftadd 0046  
                ??___awmod 0017                  ??___ftneg 0016                  ??___lldiv 001B  
                ??___ftmul 002D                  ??___llmod 0028                  ??___ftsub 004C  
                ??___fttol 003A                     _buffer 00A1                     _fround 0E20  
                   clear_0 201C           ___awdiv@quotient 001F            ___awmod@divisor 0015  
           ?i2_WriteTimer0 0001            ___awmod@counter 0017      ___ftmul@f3_as_product 0031  
                ??_isdigit 0013              _GetADCReading 1B4A               __mediumconst FEE6  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_sprintf 006F                ?_ConvertADC 0001                 __accesstop 0060  
           ?_IlluminateLED 0001    __end_of__initialization 2024                 ___ftadd@f1 0040  
               ___ftadd@f2 0043                 ___ftge@ff1 0013                 ___ftge@ff2 0016  
            ___rparam_used 000001                 ___ftneg@f1 0013          __end_of_ConfigADC 20C8  
               ___ftmul@f1 0027                 ___ftmul@f2 002A                 ___ftsub@f1 0060  
               ___ftsub@f2 0063                 ___fttol@f1 0036             __pcstackCOMRAM 0001  
              ?_ReadTimer0 0001                 ___lltoft@c 001B              __end_of_scale 0E20  
      __size_of_Delay1TCYx 000C        __size_of_ChangeMode 0028                ?_Open1USART 0013  
               ___lwtoft@c 001B             ?_GetADCReading 0017                 __div_to_l_ 1534  
             ?_putrs1USART 0014                ?_SetChanADC 0001                  ?_ConfigIO 0001  
          __div_to_l_@exp1 001E            __div_to_l_@cntr 001D                    ??_scale 0039  
          __div_to_l_@quot 0019                 __pbssBANK0 008E              ??_Write1USART 0013  
    __size_of_ConfigTimer0 0012              __div_to_l_@f1 0013              __div_to_l_@f2 0016  
               _echo_ready 009D                    ?___ftge 0013                    ?___wmul 0021  
          ??i2_WriteTimer0 0003               ?_Delay1KTCYx 0001           WriteTimer0@timer 0015  
            ??_WriteTimer0 0015                    ?_fround 0036        __size_of_ConvertADC 0004  
                ?___ftpack 0013                  ?___lltoft 001B                  ?___lwtoft 001B  
         Open1USART@config 0015                    _SPBRGH1 000F7F                 ??_ConfigIO 0013  
             _ConfigTimer0 2050            ??_IlluminateLED 0013        __size_of_ReadTimer0 0012  
      __size_of_Open1USART 0072                    _BusyADC 20C8                    _ReadADC 2098  
      i2WriteTimer0@timer0 0001                    _OpenADC 1D9A          __end_of__npowers_ FF36  
                  __Hparam 0000        __size_of_SetChanADC 0016                 _scale$1999 0039  
                  __Lparam 0000        __end_of_Write1USART 2000               ?_GetDistance 0001  
          __size_of___ftge 0096                    ___awdiv 1992                    ___ftadd 1260  
                  ___awmod 1BD6                    ___ftneg 1F5A                    ___lldiv 1ABE  
          __size_of___wmul 0028                    ___ftmul 163E                    ___llmod 1CCA  
                  ___ftsub 1DF8                    ___fttol 1736            __CFG_STVREN$OFF 000000  
                  __pcinit 2016                 ??___ftpack 0018            __size_of_fround 0268  
                  __ramtop 1000            ??_GetADCReading 0019                 ??___lltoft 001F  
                  __ptext0 1088                    __ptext1 0000                    __ptext2 09FE  
                  __ptext3 1F7E                    __ptext4 0E20                    __ptext5 1EBC  
                  __ptext6 163E                    __ptext7 1BD6                    __ptext8 1992  
                  __ptext9 1424                    _dist_cm 0098                 ??___lwtoft 001E  
                _T0CONbits 000FD5                ?__div_to_l_ 0013                    _dpowers FEE7  
                  _isdigit 1F7E               __size_of_isr 198A           ___awmod@dividend 0013  
      __end_of_WriteTimer0 2074                    _sensors 008E          ?_ConfigInterrupts 0001  
             ??_Delay1TCYx 0013             OpenADC@config2 0013                    _sprintf 0000  
             ??_ChangeMode 0015             __pintcode_body 18E2       end_of_initialization 2024  
       ??_ConfigInterrupts 0013               ?_ConfigUSART 0001                    int_func 18E2  
          ___lldiv@divisor 0017            ___lldiv@counter 001F                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE             __tdiv_to_l_@f1 0013  
           __tdiv_to_l_@f2 0016              ??__tdiv_to_l_ 0019         __end_of_Delay1TCYx 20E2  
       __end_of_ChangeMode 1F34                  _PORTBbits 000F81                 _puts1USART 1EE4  
                _TRISCbits 000F94       __size_of_putrs1USART 0036               ??_ConvertADC 0013  
              _Write1USART 1FEA        __size_of__div_to_l_ 010A                ___ftmul@exp 0030  
             ??_ReadTimer0 0003                  _ConfigADC 20B8             __end_of___ftge 1ABE  
           __end_of___wmul 1EE4               ??_Open1USART 0015                _WriteTimer0 2062  
       __end_of_ConvertADC 20E6             __end_of_fround 1088       __size_of_Delay1KTCYx 0012  
             ??_SetChanADC 0013        start_initialization 2016        __end_of__tdiv_to_l_ 1534  
              __end_of_isr 1992         __end_of_ReadTimer0 2098          __size_of_ConfigIO 0016  
          ___llmod@divisor 0024            ___llmod@counter 0028         __end_of_Open1USART 1CCA  
       __end_of_SetChanADC 1FEA                   ??___ftge 0019                   ??___wmul 0025  
               ?_ConfigADC 0001           __CFG_LPT1OSC$OFF 000000       __size_of_GetDistance 0014  
                 ??_fround 0039              sprintf@tmpval 007E                ?_puts1USART 0014  
               fround@prec 003F          __size_of___ftpack 00C6          __size_of___lltoft 0060  
              __pbssCOMRAM 004C          __size_of___lwtoft 0026              __pcstackBANK0 0060  
             _isdigit$1742 0014            Delay1KTCYx@unit 0013                sprintf@flag 007A  
              sprintf@fval 0088                sprintf@prec 0086                   ?_BusyADC 0001  
     __size_of_ConfigUSART 001C                   ?_ReadADC 0013          OpenADC@portconfig 0014  
                 ?_OpenADC 0013                  _echo_time 00B1          __CFG_CCP2MX$PORTC 000000  
                __pintcode 0008              __pmediumconst FEE6                   ?___awdiv 0019  
                 ?___ftadd 0040                   ?___awmod 0013                   ?___ftneg 0013  
                 ?___lldiv 0013                   ?___ftmul 0027                   ?___llmod 0020  
                 ?___ftsub 0060                  __npowers_ FF0F                   ?___fttol 0036  
            ?_Delay10KTCYx 0001            Open1USART@spbrg 0013      __end_ofi2_WriteTimer0 2086  
              __tdiv_to_l_ 1424               ??__div_to_l_ 0019          WriteTimer0@timer0 0013  
                 ?_isdigit 0001         i2WriteTimer0@timer 0003                   ?_sprintf 0066  
          Write1USART@data 0013             __size_of_scale 0422      __end_of_IlluminateLED 1E86  
           ___wmul@product 0025              OpenADC@config 0017                   _LATEbits 000F8D  
                 _LATJbits 000F91                   _PIE1bits 000F9D        __size_of_puts1USART 0028  
                 _PIR1bits 000F9E         __end_of__div_to_l_ 163E      __CFG_DATABW$DATA16BIT 000000  
__size_of_ConfigInterrupts 0010                   _RCONbits 000FD0           __CFG_WDTPS$32768 000000  
           ??_Delay10KTCYx 0013                ??_ConfigADC 0018                  _threshold 009B  
        __CFG_ECCPMX$PORTH 000000                 _ADCON0bits 000FC2          ___wmul@multiplier 0021  
    __end_of_GetADCReading 1BD6           Delay10KTCYx@unit 0014                   _ConfigIO 2000  
              _INTCON2bits 000FF1                _INTCON3bits 000FF0               ?_Write1USART 0001  
         __size_of_BusyADC 000E           __size_of_ReadADC 0010                   __Hrparam 0000  
         __size_of_OpenADC 005E                   __Lrparam 0000           __size_of___awdiv 0096  
         __size_of___ftadd 01C4           __size_of___awmod 0082           __size_of___ftneg 0024  
         __size_of___lldiv 008C           __size_of___ftmul 00F8           __size_of___llmod 0070  
         __size_of___ftsub 0050           __size_of___fttol 00E6               ?_WriteTimer0 0013  
                 ___ftpack 181C                _fround$1997 003C                _fround$1998 0039  
                 ___lltoft 1D3A                   ___lwtoft 1F34              ??_putrs1USART 0016  
               sprintf@exp 007C                 sprintf@val 0082           __size_of_isdigit 0022  
                 __ptext10 1534                   __ptext11 1D3A                   __ptext20 1F34  
                 __ptext12 1CCA                   __ptext21 181C                   __ptext13 1ABE  
                 __ptext30 203E                   __ptext22 1E48                   __ptext14 1736  
                 __ptext31 1FA0                   __ptext23 202A                   __ptext15 1DF8  
                 __ptext40 1D9A                   __ptext32 1E86                   __ptext24 20D6  
                 __ptext16 1260                   __ptext41 1F0C                   __ptext33 1FEA  
                 __ptext25 1B4A                   __ptext17 1F5A                   __ptext42 1FBC  
                 __ptext34 1C58                   __ptext26 1FD4                   __ptext18 1A28  
                 __ptext35 2050                   __ptext27 2098                   __ptext19 1EE4  
                 __ptext44 2074                   __ptext36 2062                   __ptext28 20E2  
                 __ptext45 2086                   __ptext37 20A8                   __ptext29 20C8  
                 __ptext38 2000                   __ptext39 20B8                   __powers_ FF36  
         __size_of_sprintf 09FE              __size_of_main 01D8             Delay1TCYx@unit 0013  
     GetADCReading@channel 0019              ??_Delay1KTCYx 0013               ??_puts1USART 0016  
            _USART1_Status 004C            putrs1USART@data 0014      __CFG_ADDRBW$ADDR20BIT 000000  
               _INTCONbits 000FF2                   isdigit@c 0015              ?_ConfigTimer0 0001  
                 scale@scl 003C        __end_of_putrs1USART 1EBC       __end_of_Delay10KTCYx 1FD4  
                 intlevel2 0000                  sprintf@ap 0078           __tdiv_to_l_@exp1 0021  
         __tdiv_to_l_@cntr 0020                  sprintf@sp 0066           __tdiv_to_l_@quot 001C  
         ___lldiv@dividend 0013          SetChanADC@channel 0014                 _RCSTA1bits 000FAB  
       __end_of_puts1USART 1F0C           _ConfigInterrupts 20A8              ??_GetDistance 0014  
             ?__tdiv_to_l_ 0013                   sprintf@c 008B                   sprintf@f 0068  
         ___lldiv@quotient 001B        __end_of_Delay1KTCYx 2050             ??_ConfigTimer0 0017  
            ??_ConfigUSART 0016       __size_of_Write1USART 0016  
