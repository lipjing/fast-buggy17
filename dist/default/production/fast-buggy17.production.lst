

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 28 11:50:38 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1
   116                           	psect	text104,global,reloc=2,class=CODE,delta=1
   117                           	psect	text105,global,reloc=2,class=CODE,delta=1
   118                           	psect	text106,global,reloc=2,class=CODE,delta=1
   119                           	psect	text107,global,reloc=2,class=CODE,delta=1
   120                           	psect	text108,global,reloc=2,class=CODE,delta=1
   121                           	psect	text109,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   124                           	psect	text111,global,reloc=2,class=CODE,delta=1
   125                           	psect	text112,global,reloc=2,class=CODE,delta=1
   126                           	psect	text113,global,reloc=2,class=CODE,delta=1
   127                           	psect	text114,global,reloc=2,class=CODE,delta=1
   128                           	psect	text115,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           	psect	nvBANK0
   133  0000E6                     __pnvBANK0:
   134                           	opt stack 0
   135  0000E6                     _convert_cm:
   136                           	opt stack 0
   137  0000E6                     	ds	3
   138  0000E9                     _convert_in:
   139                           	opt stack 0
   140  0000E9                     	ds	3
   141  0000                     _ADCON0	set	4034
   142  0000                     _ADCON0bits	set	4034
   143  0000                     _ADCON1	set	4033
   144  0000                     _ADCON2	set	4032
   145  0000                     _ADRESH	set	4036
   146  0000                     _ADRESL	set	4035
   147  0000                     _CCP4CON	set	3955
   148  0000                     _CCP5CON	set	3952
   149  0000                     _CCPR4L	set	3956
   150  0000                     _CCPR5L	set	3953
   151  0000                     _EEADR	set	4009
   152  0000                     _EEADRH	set	4010
   153  0000                     _EECON1bits	set	4006
   154  0000                     _EECON2	set	4007
   155  0000                     _EEDATA	set	4008
   156  0000                     _INTCON2bits	set	4081
   157  0000                     _INTCON3bits	set	4080
   158  0000                     _INTCONbits	set	4082
   159  0000                     _IPR1bits	set	3999
   160  0000                     _LATDbits	set	3980
   161  0000                     _LATE	set	3981
   162  0000                     _LATEbits	set	3981
   163  0000                     _LATHbits	set	3984
   164  0000                     _LATJ	set	3985
   165  0000                     _PIE1bits	set	3997
   166  0000                     _PIE2bits	set	4000
   167  0000                     _PIR1bits	set	3998
   168  0000                     _PIR2bits	set	4001
   169  0000                     _PORTBbits	set	3969
   170  0000                     _PORTHbits	set	3975
   171  0000                     _PR2	set	4043
   172  0000                     _PR4	set	3959
   173  0000                     _RCONbits	set	4048
   174  0000                     _RCREG1	set	4014
   175  0000                     _RCSTA1	set	4011
   176  0000                     _RCSTA1bits	set	4011
   177  0000                     _SPBRG1	set	4015
   178  0000                     _SPBRGH1	set	3967
   179  0000                     _T0CON	set	4053
   180  0000                     _T0CONbits	set	4053
   181  0000                     _T1CON	set	4045
   182  0000                     _T1CONbits	set	4045
   183  0000                     _T2CONbits	set	4042
   184  0000                     _T3CON	set	4017
   185  0000                     _T3CONbits	set	4017
   186  0000                     _T4CONbits	set	3958
   187  0000                     _TMR0H	set	4055
   188  0000                     _TMR0L	set	4054
   189  0000                     _TMR1H	set	4047
   190  0000                     _TMR1L	set	4046
   191  0000                     _TMR3H	set	4019
   192  0000                     _TMR3L	set	4018
   193  0000                     _TRISA	set	3986
   194  0000                     _TRISB	set	3987
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISCbits	set	3988
   197  0000                     _TRISD	set	3989
   198  0000                     _TRISE	set	3990
   199  0000                     _TRISG	set	3992
   200  0000                     _TRISGbits	set	3992
   201  0000                     _TRISHbits	set	3993
   202  0000                     _TRISJ	set	3994
   203  0000                     _TXREG1	set	4013
   204  0000                     _TXSTA1	set	4012
   205  0000                     _TXSTA1bits	set	4012
   206                           
   207                           ; #config settings
   208  0000                     
   209                           	psect	cinit
   210  0021BE                     __pcinit:
   211                           	opt stack 0
   212  0021BE                     start_initialization:
   213                           	opt stack 0
   214  0021BE                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to BANK0 (94 bytes)
   218  0021BE  EE00  F060         	lfsr	0,__pbssBANK0
   219  0021C2  0E5E               	movlw	94
   220  0021C4                     clear_0:
   221  0021C4  6AEE               	clrf	postinc0,c
   222  0021C6  06E8               	decf	wreg,f,c
   223  0021C8  E1FD               	bnz	clear_0
   224                           
   225                           ; Clear objects allocated to COMRAM (42 bytes)
   226  0021CA  EE00  F001         	lfsr	0,__pbssCOMRAM
   227  0021CE  0E2A               	movlw	42
   228  0021D0                     clear_1:
   229  0021D0  6AEE               	clrf	postinc0,c
   230  0021D2  06E8               	decf	wreg,f,c
   231  0021D4  E1FD               	bnz	clear_1
   232  0021D6                     end_of_initialization:
   233                           	opt stack 0
   234  0021D6                     __end_of__initialization:
   235                           	opt stack 0
   236  0021D6  0100               	movlb	0
   237  0021D8  EF78  F000         	goto	_main	;jump to C main() function
   238                           postinc0	equ	0xFEE
   239                           wreg	equ	0xFE8
   240                           
   241                           	psect	bssCOMRAM
   242  000001                     __pbssCOMRAM:
   243                           	opt stack 0
   244  000001                     _SystemClock:
   245                           	opt stack 0
   246  000001                     	ds	6
   247  000007                     _DCmotorL:
   248                           	opt stack 0
   249  000007                     	ds	2
   250  000009                     _DCmotorR:
   251                           	opt stack 0
   252  000009                     	ds	2
   253  00000B                     _echo_time:
   254                           	opt stack 0
   255  00000B                     	ds	2
   256  00000D                     _millisecond_COUNT0:
   257                           	opt stack 0
   258  00000D                     	ds	2
   259  00000F                     _millisecond_COUNT1:
   260                           	opt stack 0
   261  00000F                     	ds	2
   262  000011                     _millisecond_COUNT2:
   263                           	opt stack 0
   264  000011                     	ds	2
   265  000013                     _millisecond_COUNT3:
   266                           	opt stack 0
   267  000013                     	ds	2
   268  000015                     _RxCharacter:
   269                           	opt stack 0
   270  000015                     	ds	1
   271  000016                     _Rx_chars_received:
   272                           	opt stack 0
   273  000016                     	ds	1
   274  000017                     _Rx_complete:
   275                           	opt stack 0
   276  000017                     	ds	1
   277  000018                     _Rx_msg_length:
   278                           	opt stack 0
   279  000018                     	ds	1
   280  000019                     _TxCharacter:
   281                           	opt stack 0
   282  000019                     	ds	1
   283  00001A                     _Tx_complete:
   284                           	opt stack 0
   285  00001A                     	ds	1
   286  00001B                     _USART1_Status:
   287                           	opt stack 0
   288  00001B                     	ds	1
   289  00001C                     _echo_acq_done:
   290                           	opt stack 0
   291  00001C                     	ds	1
   292  00001D                     _get_Rx_index:
   293                           	opt stack 0
   294  00001D                     	ds	1
   295  00001E                     _get_Tx_index:
   296                           	opt stack 0
   297  00001E                     	ds	1
   298  00001F                     _put_Rx_index:
   299                           	opt stack 0
   300  00001F                     	ds	1
   301  000020                     _put_Tx_index:
   302                           	opt stack 0
   303  000020                     	ds	1
   304  000021                     _second_rollover_flag:
   305                           	opt stack 0
   306  000021                     	ds	1
   307  000022                     _sensor_acq_done:
   308                           	opt stack 0
   309  000022                     	ds	1
   310  000023                     _sensor_acq_index:
   311                           	opt stack 0
   312  000023                     	ds	1
   313  000024                     _system_clock_enable:
   314                           	opt stack 0
   315  000024                     	ds	1
   316  000025                     _sensor_statuses:
   317                           	opt stack 0
   318  000025                     	ds	5
   319  00002A                     _line_mode:
   320                           	opt stack 0
   321  00002A                     	ds	1
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt stack 0
   328  000060                     _Rx_buffer:
   329                           	opt stack 0
   330  000060                     	ds	25
   331  000079                     _Tx_buffer:
   332                           	opt stack 0
   333  000079                     	ds	25
   334  000092                     _PID_Kd:
   335                           	opt stack 0
   336  000092                     	ds	2
   337  000094                     _PID_Ki:
   338                           	opt stack 0
   339  000094                     	ds	2
   340  000096                     _PID_Kp:
   341                           	opt stack 0
   342  000096                     	ds	2
   343  000098                     _PID_output:
   344                           	opt stack 0
   345  000098                     	ds	2
   346  00009A                     _sensor_offsets:
   347                           	opt stack 0
   348  00009A                     	ds	10
   349  0000A4                     _sensor_readings_normalised:
   350                           	opt stack 0
   351  0000A4                     	ds	10
   352  0000AE                     _sensor_readings_raw:
   353                           	opt stack 0
   354  0000AE                     	ds	10
   355  0000B8                     _PID_error:
   356                           	opt stack 0
   357  0000B8                     	ds	2
   358  0000BA                     _PID_set_point:
   359                           	opt stack 0
   360  0000BA                     	ds	2
   361  0000BC                     _sensor_threshold:
   362                           	opt stack 0
   363  0000BC                     	ds	2
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           
   367                           	psect	cstackBANK1
   368  000100                     __pcstackBANK1:
   369                           	opt stack 0
   370  000100                     main@sensor_sum_ptr:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374  000100                     	ds	2
   375  000102                     main@PID_error_ptr:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379  000102                     	ds	2
   380  000104                     main@battery_current_ptr:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4
   384  000104                     	ds	2
   385  000106                     main@battery_current_acc_ptr:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x6
   389  000106                     	ds	2
   390  000108                     main@find_line_flag:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x8
   394  000108                     	ds	1
   395  000109                     main@line_end_flag:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x9
   399  000109                     	ds	1
   400  00010A                     main@send_battery_stats_flag:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0xA
   404  00010A                     	ds	1
   405  00010B                     main@battery_current_acc:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0xB
   409  00010B                     	ds	4
   410  00010F                     main@battery_current:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xF
   414  00010F                     	ds	2
   415  000111                     main@line_mode_ptr:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x11
   419  000111                     	ds	2
   420  000113                     main@PID_set_point_ptr:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x13
   424  000113                     	ds	2
   425  000115                     main@battery_voltage_ptr:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x15
   429  000115                     	ds	2
   430  000117                     main@command_msg:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x17
   434  000117                     	ds	1
   435  000118                     main@wall_detected_flag:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x18
   439  000118                     	ds	1
   440  000119                     main@battery_voltage:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x19
   444  000119                     	ds	2
   445  00011B                     main@D_temp:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x1B
   449  00011B                     	ds	2
   450  00011D                     main@I_temp:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x1D
   454  00011D                     	ds	2
   455  00011F                     main@stop_flag:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x1F
   459  00011F                     	ds	1
   460  000120                     main@sensor_sum:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x20
   464  000120                     	ds	2
   465  000122                     main@Kp_stored:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x22
   469  000122                     	ds	2
   470  000124                     main@Kd_stored:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x24
   474  000124                     	ds	2
   475  000126                     main@Ki_stored:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x26
   479  000126                     	ds	2
   480  000128                     main@sensor_sum_discrete:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x28
   484  000128                     	ds	1
   485  000129                     main@sensor_threshold_ptr:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x29
   489  000129                     	ds	2
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           
   493                           	psect	cstackBANK0
   494  0000BE                     __pcstackBANK0:
   495                           	opt stack 0
   496  0000BE                     ReadTimer1@timer:
   497                           	opt stack 0
   498  0000BE                     i2WriteTimer0@timer:
   499                           	opt stack 0
   500  0000BE                     i2WriteTimer1@timer:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x0
   504  0000BE                     	ds	2
   505  0000C0                     ??_isrHP:
   506                           
   507                           ; 0 bytes @ 0x2
   508  0000C0                     	ds	14
   509  0000CE                     ??_SetChanADC:
   510  0000CE                     ??_Delay10KTCYx:
   511  0000CE                     ?_ReadADC:
   512                           	opt stack 0
   513  0000CE                     ?_ReadEchoLength:
   514                           	opt stack 0
   515  0000CE                     ?_ReadMillis0:
   516                           	opt stack 0
   517  0000CE                     ?_ReadMillis1:
   518                           	opt stack 0
   519  0000CE                     ?_ReadMillis2:
   520                           	opt stack 0
   521  0000CE                     ?___wmul:
   522                           	opt stack 0
   523  0000CE                     ?___awdiv:
   524                           	opt stack 0
   525  0000CE                     ?___awmod:
   526                           	opt stack 0
   527  0000CE                     FlushTxBuf@index:
   528                           	opt stack 0
   529  0000CE                     FlushRxBuf@index:
   530                           	opt stack 0
   531  0000CE                     OWReset@result:
   532                           	opt stack 0
   533  0000CE                     OWWriteBit@b:
   534                           	opt stack 0
   535  0000CE                     OWReadBit@result:
   536                           	opt stack 0
   537  0000CE                     OpenADC@config2:
   538                           	opt stack 0
   539  0000CE                     OpenPWM4@period:
   540                           	opt stack 0
   541  0000CE                     OpenPWM5@period:
   542                           	opt stack 0
   543  0000CE                     OpenTimer0@config:
   544                           	opt stack 0
   545  0000CE                     OpenTimer1@config:
   546                           	opt stack 0
   547  0000CE                     OpenTimer3@config:
   548                           	opt stack 0
   549  0000CE                     Read1USART@data:
   550                           	opt stack 0
   551  0000CE                     Delay1TCYx@unit:
   552                           	opt stack 0
   553  0000CE                     WriteEEPROM@address:
   554                           	opt stack 0
   555  0000CE                     ReadEEPROM@address:
   556                           	opt stack 0
   557  0000CE                     NormaliseSensorReadings@sensor_readings_raw:
   558                           	opt stack 0
   559  0000CE                     CalculateSensorStatuses@sensor_readings_normalised:
   560                           	opt stack 0
   561  0000CE                     CalculateSensorSumDiscrete@sensor_statuses:
   562                           	opt stack 0
   563  0000CE                     DisplaySensorStatuses@sensor_statuses:
   564                           	opt stack 0
   565  0000CE                     SetDCPWM4@dutycycle:
   566                           	opt stack 0
   567  0000CE                     SetDCPWM5@dutycycle:
   568                           	opt stack 0
   569  0000CE                     WriteTimer0@timer0:
   570                           	opt stack 0
   571  0000CE                     WriteTimer1@timer1:
   572                           	opt stack 0
   573  0000CE                     Open1USART@spbrg:
   574                           	opt stack 0
   575  0000CE                     ___wmul@multiplier:
   576                           	opt stack 0
   577  0000CE                     ___awdiv@dividend:
   578                           	opt stack 0
   579  0000CE                     ___awmod@dividend:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x10
   583  0000CE                     	ds	1
   584  0000CF                     OWWriteByte@byte:
   585                           	opt stack 0
   586  0000CF                     OWReadByte@result:
   587                           	opt stack 0
   588  0000CF                     OpenADC@portconfig:
   589                           	opt stack 0
   590  0000CF                     SetChanADC@channel:
   591                           	opt stack 0
   592  0000CF                     Delay10KTCYx@unit:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x11
   596  0000CF                     	ds	1
   597  0000D0                     ??_SetDCPWM5:
   598  0000D0                     ??_SetDCPWM4:
   599  0000D0                     ??_OpenADC:
   600  0000D0                     ??_ReadADC:
   601  0000D0                     ??_DisplaySensorStatuses:
   602  0000D0                     ?_ReadIntEEPROM:
   603                           	opt stack 0
   604  0000D0                     WriteEEPROM@data:
   605                           	opt stack 0
   606  0000D0                     OWWriteByte@i:
   607                           	opt stack 0
   608  0000D0                     OWReadByte@i:
   609                           	opt stack 0
   610  0000D0                     SetADCChannel@channel:
   611                           	opt stack 0
   612  0000D0                     CalculateSensorSumDiscrete@sum:
   613                           	opt stack 0
   614  0000D0                     Open1USART@config:
   615                           	opt stack 0
   616  0000D0                     ReadIntEEPROM@address:
   617                           	opt stack 0
   618  0000D0                     ReadCharEEPROM@address:
   619                           	opt stack 0
   620  0000D0                     NormaliseSensorReadings@sensor_offsets:
   621                           	opt stack 0
   622  0000D0                     CalculateSensorStatuses@sensor_threshold:
   623                           	opt stack 0
   624  0000D0                     WriteTimer0@timer:
   625                           	opt stack 0
   626  0000D0                     WriteTimer1@timer:
   627                           	opt stack 0
   628  0000D0                     ___wmul@multiplicand:
   629                           	opt stack 0
   630  0000D0                     ___awdiv@divisor:
   631                           	opt stack 0
   632  0000D0                     ___awmod@divisor:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x12
   636  0000D0                     	ds	1
   637  0000D1                     ?_ReadVoltage:
   638                           	opt stack 0
   639  0000D1                     CalculateSensorSumDiscrete@index:
   640                           	opt stack 0
   641  0000D1                     WriteIntEEPROM@address:
   642                           	opt stack 0
   643  0000D1                     WriteCharEEPROM@address:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x13
   647  0000D1                     	ds	1
   648  0000D2                     ??_ReadIntEEPROM:
   649  0000D2                     ??_NormaliseSensorReadings:
   650  0000D2                     ??_CalculateSensorStatuses:
   651  0000D2                     DisplaySensorStatuses@index:
   652                           	opt stack 0
   653  0000D2                     OpenADC@config:
   654                           	opt stack 0
   655  0000D2                     ___awdiv@counter:
   656                           	opt stack 0
   657  0000D2                     ___awmod@counter:
   658                           	opt stack 0
   659  0000D2                     SetDCPWM4@DCycle:
   660                           	opt stack 0
   661  0000D2                     SetDCPWM5@DCycle:
   662                           	opt stack 0
   663  0000D2                     ___wmul@product:
   664                           	opt stack 0
   665  0000D2                     ConfigureUltrasound@echo_to_cm:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x14
   669  0000D2                     	ds	1
   670  0000D3                     ??_ReadVoltage:
   671  0000D3                     WriteCharEEPROM@data:
   672                           	opt stack 0
   673  0000D3                     ___awdiv@sign:
   674                           	opt stack 0
   675  0000D3                     ___awmod@sign:
   676                           	opt stack 0
   677  0000D3                     WriteIntEEPROM@data:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x15
   681  0000D3                     	ds	1
   682  0000D4                     ??_PutCharTxBuf:
   683  0000D4                     ??_PutCharRxBuf:
   684  0000D4                     ??_GetCharRxBuf:
   685  0000D4                     ?_CalculateSensorSum:
   686                           	opt stack 0
   687  0000D4                     SetDCMotorL@duty_cycle:
   688                           	opt stack 0
   689  0000D4                     SetDCMotorR@duty_cycle:
   690                           	opt stack 0
   691  0000D4                     CalculateSensorSum@sensor_readings_normalised:
   692                           	opt stack 0
   693  0000D4                     ___awdiv@quotient:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x16
   697  0000D4                     	ds	1
   698  0000D5                     PutCharTxBuf@ch:
   699                           	opt stack 0
   700  0000D5                     PutCharRxBuf@ch:
   701                           	opt stack 0
   702  0000D5                     GetCharRxBuf@ch:
   703                           	opt stack 0
   704  0000D5                     ReadIntEEPROM@data:
   705                           	opt stack 0
   706  0000D5                     ConfigureUltrasound@echo_to_in:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x17
   710  0000D5                     	ds	1
   711  0000D6                     ??_CalculateSensorSum:
   712  0000D6                     SendStatus@status_code:
   713                           	opt stack 0
   714  0000D6                     NormaliseSensorReadings@index:
   715                           	opt stack 0
   716  0000D6                     SetDCMotorPID@PIDoutput:
   717                           	opt stack 0
   718  0000D6                     SendLineMode@line_mode:
   719                           	opt stack 0
   720  0000D6                     SendOffsets@offsets_array:
   721                           	opt stack 0
   722  0000D6                     SendThreshold@sensor_threshold:
   723                           	opt stack 0
   724  0000D6                     SendDefaultPIDValues@Kp:
   725                           	opt stack 0
   726  0000D6                     SendStoredPIDValues@Kp:
   727                           	opt stack 0
   728  0000D6                     SendCurrentPIDValues@Kp:
   729                           	opt stack 0
   730  0000D6                     SendBattVoltageInitial@reading:
   731                           	opt stack 0
   732  0000D6                     SendPIDSetPointOnLine@set_point:
   733                           	opt stack 0
   734  0000D6                     ReadVoltage@result:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x18
   738  0000D6                     	ds	1
   739  0000D7                     ??_CalibrateOffsets:
   740  0000D7                     ??_SetPIDValues:
   741  0000D7                     CalculateSensorStatuses@index:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x19
   745  0000D7                     	ds	1
   746  0000D8                     ??_SetDCMotorPID:
   747  0000D8                     ??_SendOffsets:
   748  0000D8                     ??_SendThreshold:
   749  0000D8                     ??_SendBattVoltageInitial:
   750  0000D8                     ??_SendPIDSetPointOnLine:
   751  0000D8                     SendDefaultPIDValues@Kd:
   752                           	opt stack 0
   753  0000D8                     SendStoredPIDValues@Kd:
   754                           	opt stack 0
   755  0000D8                     SendCurrentPIDValues@Kd:
   756                           	opt stack 0
   757  0000D8                     CalculateSensorSum@sum:
   758                           	opt stack 0
   759  0000D8                     CalibrateThreshold@sensor_threshold_temp_ptr:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x1A
   763  0000D8                     	ds	1
   764  0000D9                     CalibrateOffsets@index:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x1B
   768  0000D9                     	ds	1
   769  0000DA                     SendOffsets@index:
   770                           	opt stack 0
   771  0000DA                     SetPIDValues@char_index:
   772                           	opt stack 0
   773  0000DA                     SendDefaultPIDValues@Ki:
   774                           	opt stack 0
   775  0000DA                     SendStoredPIDValues@Ki:
   776                           	opt stack 0
   777  0000DA                     SendCurrentPIDValues@Ki:
   778                           	opt stack 0
   779  0000DA                     CalibrateThreshold@sensor_threshold_temp:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x1C
   783  0000DA                     	ds	1
   784  0000DB                     
   785                           ; 0 bytes @ 0x1D
   786  0000DB                     	ds	1
   787  0000DC                     ??_GenerateCalibration:
   788                           
   789                           ; 0 bytes @ 0x1E
   790  0000DC                     	ds	2
   791  0000DE                     GenerateCalibration@index:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x20
   795  0000DE                     	ds	1
   796  0000DF                     ??_LoadCalibration:
   797                           
   798                           ; 0 bytes @ 0x21
   799  0000DF                     	ds	2
   800  0000E1                     LoadCalibration@index:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x23
   804  0000E1                     	ds	1
   805  0000E2                     ??_main:
   806                           
   807                           ; 0 bytes @ 0x24
   808  0000E2                     	ds	4
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           
   812                           	psect	cstackCOMRAM
   813  00002B                     __pcstackCOMRAM:
   814                           	opt stack 0
   815  00002B                     ??i1_SetChanADC:
   816  00002B                     ?i1_ReadADC:
   817                           	opt stack 0
   818  00002B                     ?i1___awmod:
   819                           	opt stack 0
   820  00002B                     Write1USART@data:
   821                           	opt stack 0
   822  00002B                     i1___awmod@dividend:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x0
   826  00002B                     	ds	1
   827  00002C                     i1SetChanADC@channel:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x1
   831  00002C                     	ds	1
   832  00002D                     ??i1_ReadADC:
   833  00002D                     i1SetADCChannel@channel:
   834                           	opt stack 0
   835  00002D                     i1___awmod@divisor:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x2
   839  00002D                     	ds	2
   840  00002F                     i1___awmod@counter:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x4
   844  00002F                     	ds	1
   845  000030                     i1___awmod@sign:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x5
   849  000030                     	ds	1
   850  000031                     ??_GetCharTxBuf:
   851                           
   852                           ; 0 bytes @ 0x6
   853  000031                     	ds	1
   854  000032                     GetCharTxBuf@ch:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x7
   858  000032                     	ds	1
   859  000033                     ??_isrLP:
   860                           
   861                           ; 0 bytes @ 0x8
   862  000033                     	ds	17
   863  000044                     ?_ReadTimer1:
   864                           	opt stack 0
   865  000044                     i2WriteTimer0@timer0:
   866                           	opt stack 0
   867  000044                     i2WriteTimer1@timer1:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x19
   871  000044                     	ds	2
   872  000046                     postinc0	equ	0xFEE
   873                           wreg	equ	0xFE8
   874                           
   875                           ; 0 bytes @ 0x1B
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 686 in file "FastBuggy17_Main_Code_TUNING.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  battery_curr    4   11[BANK1 ] unsigned long 
   886 ;;  sensor_thres    2   41[BANK1 ] PTR int 
   887 ;;		 -> sensor_threshold(2), 
   888 ;;  Ki_stored       2   38[BANK1 ] int 
   889 ;;  Kd_stored       2   36[BANK1 ] int 
   890 ;;  Kp_stored       2   34[BANK1 ] int 
   891 ;;  sensor_sum      2   32[BANK1 ] int 
   892 ;;  I_temp          2   29[BANK1 ] int 
   893 ;;  D_temp          2   27[BANK1 ] int 
   894 ;;  battery_volt    2   25[BANK1 ] unsigned int 
   895 ;;  battery_volt    2   21[BANK1 ] PTR unsigned int 
   896 ;;		 -> main@battery_voltage(2), 
   897 ;;  PID_set_poin    2   19[BANK1 ] PTR int 
   898 ;;		 -> PID_set_point(2), 
   899 ;;  line_mode_pt    2   17[BANK1 ] PTR unsigned char 
   900 ;;		 -> line_mode(1), 
   901 ;;  battery_curr    2   15[BANK1 ] unsigned int 
   902 ;;  battery_curr    2    6[BANK1 ] PTR unsigned long 
   903 ;;		 -> main@battery_current_acc(4), 
   904 ;;  battery_curr    2    4[BANK1 ] PTR unsigned int 
   905 ;;		 -> main@battery_current(2), 
   906 ;;  PID_error_pt    2    2[BANK1 ] PTR int 
   907 ;;		 -> PID_error(2), 
   908 ;;  sensor_sum_p    2    0[BANK1 ] PTR int 
   909 ;;		 -> main@sensor_sum(2), 
   910 ;;  I_min           2    0        int 
   911 ;;  I_max           2    0        int 
   912 ;;  echo_length     2    0        unsigned int 
   913 ;;  sensor_sum_d    1   40[BANK1 ] unsigned char 
   914 ;;  stop_flag       1   31[BANK1 ] unsigned char 
   915 ;;  wall_detecte    1   24[BANK1 ] unsigned char 
   916 ;;  command_msg     1   23[BANK1 ] unsigned char 
   917 ;;  send_battery    1   10[BANK1 ] unsigned char 
   918 ;;  line_end_fla    1    9[BANK1 ] unsigned char 
   919 ;;  find_line_fl    1    8[BANK1 ] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;		None               void
   922 ;; Registers used:
   923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         0       4      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:       47 bytes
   934 ;; Hardware stack levels required when called:   13
   935 ;; This function calls:
   936 ;;		_BusyDistanceAcq
   937 ;;		_BusySensorAcq
   938 ;;		_CalculateSensorStatuses
   939 ;;		_CalculateSensorSum
   940 ;;		_CalculateSensorSumDiscrete
   941 ;;		_CommandAvailable
   942 ;;		_ConfigureADC
   943 ;;		_ConfigureBuggyIO
   944 ;;		_ConfigureInterrupts
   945 ;;		_ConfigurePWM
   946 ;;		_ConfigureTimer0
   947 ;;		_ConfigureTimer1
   948 ;;		_ConfigureTimer2
   949 ;;		_ConfigureUltrasound
   950 ;;		_ConfigureWireless
   951 ;;		_Delay10KTCYx
   952 ;;		_DisableMotors
   953 ;;		_DisplaySensorStatuses
   954 ;;		_EnableMotors
   955 ;;		_EnableSensorLEDS
   956 ;;		_FlashLEDS
   957 ;;		_GenerateCalibration
   958 ;;		_GetCommand
   959 ;;		_GetDistance
   960 ;;		_GetSensorReadings
   961 ;;		_LoadCalibration
   962 ;;		_LoadPIDValues
   963 ;;		_NormaliseSensorReadings
   964 ;;		_PB1pressed
   965 ;;		_PB2pressed
   966 ;;		_ReadEchoLength
   967 ;;		_ReadIntEEPROM
   968 ;;		_ReadMillis0
   969 ;;		_ReadMillis1
   970 ;;		_ReadMillis2
   971 ;;		_ReadVoltage
   972 ;;		_ResetAccumulatedCurrent
   973 ;;		_ResetMillis0
   974 ;;		_ResetMillis1
   975 ;;		_ResetMillis2
   976 ;;		_ResetMillis3
   977 ;;		_SendBattVoltageInitial
   978 ;;		_SendCurrentPIDValues
   979 ;;		_SendDefaultPIDValues
   980 ;;		_SendLineMode
   981 ;;		_SendOffsets
   982 ;;		_SendPIDSetPointOnLine
   983 ;;		_SendStatus
   984 ;;		_SendStoredPIDValues
   985 ;;		_SendThreshold
   986 ;;		_SetDCMotorL
   987 ;;		_SetDCMotorPID
   988 ;;		_SetDCMotorR
   989 ;;		_SetDirectionForward
   990 ;;		_SetForwardsMotorR
   991 ;;		_SetPIDValues
   992 ;;		_SetReverseMotorL
   993 ;;		_SetUnipolar
   994 ;;		_StopMotors
   995 ;;		___awdiv
   996 ;;		___wmul
   997 ;; This function is called by:
   998 ;;		Startup code after reset
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text0
  1003  0000F0                     __ptext0:
  1004                           	opt stack 0
  1005  0000F0                     _main:
  1006                           	opt stack 18
  1007                           
  1008                           ;FastBuggy17_Main_Code_TUNING.c: 689: unsigned char stop_flag, find_line_flag, line_end_
      +                          flag, wall_detected_flag, send_battery_stats_flag, command_msg, sensor_sum_discrete;
  1009                           ;FastBuggy17_Main_Code_TUNING.c: 690: unsigned int echo_length, battery_voltage, battery
      +                          _current;
  1010                           ;FastBuggy17_Main_Code_TUNING.c: 691: unsigned long int battery_current_acc;
  1011                           ;FastBuggy17_Main_Code_TUNING.c: 692: int sensor_sum, D_temp, I_temp, I_max, I_min, Kp_s
      +                          tored, Kd_stored, Ki_stored;
  1012                           ;FastBuggy17_Main_Code_TUNING.c: 695: unsigned char *line_mode_ptr;
  1013                           
  1014                           ;incstack = 0
  1015  0000F0  0E2A               	movlw	low _line_mode
  1016  0000F2  0101               	movlb	1	; () banked
  1017  0000F4  6F11               	movwf	main@line_mode_ptr& (0+255),b
  1018  0000F6  0E00               	movlw	high _line_mode
  1019  0000F8  0101               	movlb	1	; () banked
  1020  0000FA  6F12               	movwf	(main@line_mode_ptr+1)& (0+255),b
  1021                           
  1022                           ;FastBuggy17_Main_Code_TUNING.c: 699: sensor_threshold_ptr = &sensor_threshold;
  1023  0000FC  0EBC               	movlw	low _sensor_threshold
  1024  0000FE  0101               	movlb	1	; () banked
  1025  000100  6F29               	movwf	main@sensor_threshold_ptr& (0+255),b
  1026  000102  0E00               	movlw	high _sensor_threshold
  1027  000104  0101               	movlb	1	; () banked
  1028  000106  6F2A               	movwf	(main@sensor_threshold_ptr+1)& (0+255),b
  1029                           
  1030                           ;FastBuggy17_Main_Code_TUNING.c: 700: sensor_sum_ptr = &sensor_sum;
  1031  000108  0E20               	movlw	low main@sensor_sum
  1032  00010A  0101               	movlb	1	; () banked
  1033  00010C  6F00               	movwf	main@sensor_sum_ptr& (0+255),b
  1034  00010E  0E01               	movlw	high main@sensor_sum
  1035  000110  0101               	movlb	1	; () banked
  1036  000112  6F01               	movwf	(main@sensor_sum_ptr+1)& (0+255),b
  1037                           
  1038                           ;FastBuggy17_Main_Code_TUNING.c: 701: PID_error_ptr = &PID_error;
  1039  000114  0EB8               	movlw	low _PID_error
  1040  000116  0101               	movlb	1	; () banked
  1041  000118  6F02               	movwf	main@PID_error_ptr& (0+255),b
  1042  00011A  0E00               	movlw	high _PID_error
  1043  00011C  0101               	movlb	1	; () banked
  1044  00011E  6F03               	movwf	(main@PID_error_ptr+1)& (0+255),b
  1045                           
  1046                           ;FastBuggy17_Main_Code_TUNING.c: 702: PID_set_point_ptr = &PID_set_point;
  1047  000120  0EBA               	movlw	low _PID_set_point
  1048  000122  0101               	movlb	1	; () banked
  1049  000124  6F13               	movwf	main@PID_set_point_ptr& (0+255),b
  1050  000126  0E00               	movlw	high _PID_set_point
  1051  000128  0101               	movlb	1	; () banked
  1052  00012A  6F14               	movwf	(main@PID_set_point_ptr+1)& (0+255),b
  1053                           
  1054                           ;FastBuggy17_Main_Code_TUNING.c: 704: unsigned int *battery_voltage_ptr, *battery_curren
      +                          t_ptr;
  1055                           ;FastBuggy17_Main_Code_TUNING.c: 705: unsigned long int *battery_current_acc_ptr;
  1056                           ;FastBuggy17_Main_Code_TUNING.c: 707: battery_voltage_ptr = &battery_voltage;
  1057  00012C  0E19               	movlw	low main@battery_voltage
  1058  00012E  0101               	movlb	1	; () banked
  1059  000130  6F15               	movwf	main@battery_voltage_ptr& (0+255),b
  1060  000132  0E01               	movlw	high main@battery_voltage
  1061  000134  0101               	movlb	1	; () banked
  1062  000136  6F16               	movwf	(main@battery_voltage_ptr+1)& (0+255),b
  1063                           
  1064                           ;FastBuggy17_Main_Code_TUNING.c: 708: battery_current_ptr = &battery_current;
  1065  000138  0E0F               	movlw	low main@battery_current
  1066  00013A  0101               	movlb	1	; () banked
  1067  00013C  6F04               	movwf	main@battery_current_ptr& (0+255),b
  1068  00013E  0E01               	movlw	high main@battery_current
  1069  000140  0101               	movlb	1	; () banked
  1070  000142  6F05               	movwf	(main@battery_current_ptr+1)& (0+255),b
  1071                           
  1072                           ;FastBuggy17_Main_Code_TUNING.c: 709: battery_current_acc_ptr = &battery_current_acc;
  1073  000144  0E0B               	movlw	low main@battery_current_acc
  1074  000146  0101               	movlb	1	; () banked
  1075  000148  6F06               	movwf	main@battery_current_acc_ptr& (0+255),b
  1076  00014A  0E01               	movlw	high main@battery_current_acc
  1077  00014C  0101               	movlb	1	; () banked
  1078  00014E  6F07               	movwf	(main@battery_current_acc_ptr+1)& (0+255),b
  1079                           
  1080                           ; BSR set to: 1
  1081                           ;FastBuggy17_Main_Code_TUNING.c: 712: ConfigureUltrasound(0.0137, 0.054);
  1082  000150  0E76               	movlw	118
  1083  000152  0100               	movlb	0	; () banked
  1084  000154  6FD2               	movwf	ConfigureUltrasound@echo_to_cm& (0+255),b
  1085  000156  0E60               	movlw	96
  1086  000158  0100               	movlb	0	; () banked
  1087  00015A  6FD3               	movwf	(ConfigureUltrasound@echo_to_cm+1)& (0+255),b
  1088  00015C  0E3C               	movlw	60
  1089  00015E  0100               	movlb	0	; () banked
  1090  000160  6FD4               	movwf	(ConfigureUltrasound@echo_to_cm+2)& (0+255),b
  1091  000162  0E2F               	movlw	47
  1092  000164  0100               	movlb	0	; () banked
  1093  000166  6FD5               	movwf	ConfigureUltrasound@echo_to_in& (0+255),b
  1094  000168  0E5D               	movlw	93
  1095  00016A  0100               	movlb	0	; () banked
  1096  00016C  6FD6               	movwf	(ConfigureUltrasound@echo_to_in+1)& (0+255),b
  1097  00016E  0E3D               	movlw	61
  1098  000170  0100               	movlb	0	; () banked
  1099  000172  6FD7               	movwf	(ConfigureUltrasound@echo_to_in+2)& (0+255),b
  1100  000174  EC58  F010         	call	_ConfigureUltrasound	;wreg free
  1101                           
  1102                           ;FastBuggy17_Main_Code_TUNING.c: 713: ConfigureBuggyIO();
  1103  000178  EC39  F011         	call	_ConfigureBuggyIO	;wreg free
  1104                           
  1105                           ;FastBuggy17_Main_Code_TUNING.c: 714: ConfigureInterrupts();
  1106  00017C  EC6C  F010         	call	_ConfigureInterrupts	;wreg free
  1107                           
  1108                           ;FastBuggy17_Main_Code_TUNING.c: 715: ConfigureTimer0();
  1109  000180  EC68  F011         	call	_ConfigureTimer0	;wreg free
  1110                           
  1111                           ;FastBuggy17_Main_Code_TUNING.c: 716: ConfigureTimer1();
  1112  000184  EC46  F011         	call	_ConfigureTimer1	;wreg free
  1113                           
  1114                           ;FastBuggy17_Main_Code_TUNING.c: 717: ConfigureTimer2();
  1115  000188  EC56  F012         	call	_ConfigureTimer2	;wreg free
  1116                           
  1117                           ;FastBuggy17_Main_Code_TUNING.c: 718: ConfigurePWM();
  1118  00018C  EC1F  F012         	call	_ConfigurePWM	;wreg free
  1119                           
  1120                           ;FastBuggy17_Main_Code_TUNING.c: 719: ConfigureADC();
  1121  000190  EC93  F011         	call	_ConfigureADC	;wreg free
  1122                           
  1123                           ;FastBuggy17_Main_Code_TUNING.c: 720: ConfigureWireless();
  1124  000194  EC1B  F011         	call	_ConfigureWireless	;wreg free
  1125                           
  1126                           ;FastBuggy17_Main_Code_TUNING.c: 722: DisableMotors();
  1127  000198  EC6B  F012         	call	_DisableMotors	;wreg free
  1128                           
  1129                           ;FastBuggy17_Main_Code_TUNING.c: 724: Delay10KTCYx(100);
  1130  00019C  0E64               	movlw	100
  1131  00019E  ECFD  F010         	call	_Delay10KTCYx
  1132                           
  1133                           ;FastBuggy17_Main_Code_TUNING.c: 726: battery_voltage = ReadVoltage();
  1134  0001A2  EC4B  F00C         	call	_ReadVoltage	;wreg free
  1135  0001A6  C0D1  F119         	movff	?_ReadVoltage,main@battery_voltage
  1136  0001AA  C0D2  F11A         	movff	?_ReadVoltage+1,main@battery_voltage+1
  1137                           
  1138                           ;FastBuggy17_Main_Code_TUNING.c: 728: SendStatus(0x00);
  1139  0001AE  0E00               	movlw	0
  1140  0001B0  ECC1  F00E         	call	_SendStatus
  1141                           
  1142                           ;FastBuggy17_Main_Code_TUNING.c: 730: SendBattVoltageInitial(battery_voltage_ptr);
  1143  0001B4  C115  F0D6         	movff	main@battery_voltage_ptr,SendBattVoltageInitial@reading
  1144  0001B8  C116  F0D7         	movff	main@battery_voltage_ptr+1,SendBattVoltageInitial@reading+1
  1145  0001BC  EC80  F00C         	call	_SendBattVoltageInitial	;wreg free
  1146                           
  1147                           ;FastBuggy17_Main_Code_TUNING.c: 733: LATJ = 0x1F;
  1148  0001C0  0E1F               	movlw	31
  1149  0001C2  6E91               	movwf	3985,c	;volatile
  1150                           
  1151                           ;FastBuggy17_Main_Code_TUNING.c: 734: SendStatus(0x01);
  1152  0001C4  0E01               	movlw	1
  1153  0001C6  ECC1  F00E         	call	_SendStatus
  1154  0001CA  D000               	goto	l6775
  1155  0001CC                     l6775:
  1156                           
  1157                           ;FastBuggy17_Main_Code_TUNING.c: 737: if(PB1pressed() == 1) {
  1158  0001CC  EC44  F00D         	call	_PB1pressed	;wreg free
  1159  0001D0  06E8               	decf	wreg,f,c
  1160  0001D2  A4D8               	btfss	status,2,c
  1161  0001D4  D003               	goto	l6781
  1162                           
  1163                           ;FastBuggy17_Main_Code_TUNING.c: 738: line_mode = 0;
  1164  0001D6  0E00               	movlw	0
  1165  0001D8  D007               	goto	L1
  1166                           
  1167                           ;FastBuggy17_Main_Code_TUNING.c: 740: }
  1168                           
  1169                           ;FastBuggy17_Main_Code_TUNING.c: 739: break;
  1170  0001DA  D7F8               	goto	l6775
  1171  0001DC                     l6781:
  1172                           
  1173                           ;FastBuggy17_Main_Code_TUNING.c: 741: else if(PB2pressed() == 1) {
  1174  0001DC  ECE6  F00C         	call	_PB2pressed	;wreg free
  1175  0001E0  06E8               	decf	wreg,f,c
  1176  0001E2  A4D8               	btfss	status,2,c
  1177  0001E4  D7F3               	goto	l6775
  1178                           
  1179                           ;FastBuggy17_Main_Code_TUNING.c: 742: line_mode = 1;
  1180  0001E6  0E01               	movlw	1
  1181  0001E8                     L1:
  1182  0001E8  6E2A               	movwf	_line_mode,c
  1183                           
  1184                           ;FastBuggy17_Main_Code_TUNING.c: 743: break;
  1185  0001EA  D001               	goto	l6785
  1186  0001EC  D7EF               	goto	l6775
  1187  0001EE                     l6785:
  1188                           
  1189                           ;FastBuggy17_Main_Code_TUNING.c: 744: }
  1190                           ;FastBuggy17_Main_Code_TUNING.c: 745: }
  1191                           ;FastBuggy17_Main_Code_TUNING.c: 747: SendLineMode(line_mode_ptr);
  1192  0001EE  C111  F0D6         	movff	main@line_mode_ptr,SendLineMode@line_mode
  1193  0001F2  C112  F0D7         	movff	main@line_mode_ptr+1,SendLineMode@line_mode+1
  1194  0001F6  EC86  F00E         	call	_SendLineMode	;wreg free
  1195                           
  1196                           ;FastBuggy17_Main_Code_TUNING.c: 748: FlashLEDS();
  1197  0001FA  EC44  F010         	call	_FlashLEDS	;wreg free
  1198                           
  1199                           ;FastBuggy17_Main_Code_TUNING.c: 750: EnableSensorLEDS();
  1200  0001FE  EC60  F012         	call	_EnableSensorLEDS	;wreg free
  1201                           
  1202                           ;FastBuggy17_Main_Code_TUNING.c: 753: LATJ = 0x0F;
  1203  000202  0E0F               	movlw	15
  1204  000204  6E91               	movwf	3985,c	;volatile
  1205                           
  1206                           ;FastBuggy17_Main_Code_TUNING.c: 754: SendStatus(0x02);
  1207  000206  0E02               	movlw	2
  1208  000208  ECC1  F00E         	call	_SendStatus
  1209  00020C  D000               	goto	l6795
  1210  00020E                     l6795:
  1211                           
  1212                           ;FastBuggy17_Main_Code_TUNING.c: 757: if(PB1pressed() == 1) {
  1213  00020E  EC44  F00D         	call	_PB1pressed	;wreg free
  1214  000212  06E8               	decf	wreg,f,c
  1215  000214  A4D8               	btfss	status,2,c
  1216  000216  D006               	goto	l6803
  1217                           
  1218                           ;FastBuggy17_Main_Code_TUNING.c: 758: FlashLEDS();
  1219  000218  EC44  F010         	call	_FlashLEDS	;wreg free
  1220                           
  1221                           ;FastBuggy17_Main_Code_TUNING.c: 759: GenerateCalibration();
  1222  00021C  EC6A  F008         	call	_GenerateCalibration	;wreg free
  1223                           
  1224                           ;FastBuggy17_Main_Code_TUNING.c: 760: break;
  1225  000220  D00C               	goto	l6809
  1226                           
  1227                           ;FastBuggy17_Main_Code_TUNING.c: 761: }
  1228  000222  D7F5               	goto	l6795
  1229  000224                     l6803:
  1230                           
  1231                           ;FastBuggy17_Main_Code_TUNING.c: 762: else if(PB2pressed() == 1) {
  1232  000224  ECE6  F00C         	call	_PB2pressed	;wreg free
  1233  000228  06E8               	decf	wreg,f,c
  1234  00022A  A4D8               	btfss	status,2,c
  1235  00022C  D7F0               	goto	l6795
  1236                           
  1237                           ;FastBuggy17_Main_Code_TUNING.c: 763: FlashLEDS();
  1238  00022E  EC44  F010         	call	_FlashLEDS	;wreg free
  1239                           
  1240                           ;FastBuggy17_Main_Code_TUNING.c: 764: LoadCalibration();
  1241  000232  ECB2  F007         	call	_LoadCalibration	;wreg free
  1242                           
  1243                           ;FastBuggy17_Main_Code_TUNING.c: 765: break;
  1244  000236  D001               	goto	l6809
  1245  000238  D7EA               	goto	l6795
  1246  00023A                     l6809:
  1247                           
  1248                           ;FastBuggy17_Main_Code_TUNING.c: 766: }
  1249                           ;FastBuggy17_Main_Code_TUNING.c: 768: }
  1250                           ;FastBuggy17_Main_Code_TUNING.c: 770: SendOffsets(sensor_offsets);
  1251  00023A  0E9A               	movlw	low _sensor_offsets
  1252  00023C  0100               	movlb	0	; () banked
  1253  00023E  6FD6               	movwf	SendOffsets@offsets_array& (0+255),b
  1254  000240  0E00               	movlw	high _sensor_offsets
  1255  000242  0100               	movlb	0	; () banked
  1256  000244  6FD7               	movwf	(SendOffsets@offsets_array+1)& (0+255),b
  1257  000246  EC68  F009         	call	_SendOffsets	;wreg free
  1258                           
  1259                           ;FastBuggy17_Main_Code_TUNING.c: 771: SendThreshold(sensor_threshold_ptr);
  1260  00024A  C129  F0D6         	movff	main@sensor_threshold_ptr,SendThreshold@sensor_threshold
  1261  00024E  C12A  F0D7         	movff	main@sensor_threshold_ptr+1,SendThreshold@sensor_threshold+1
  1262  000252  EC40  F00B         	call	_SendThreshold	;wreg free
  1263                           
  1264                           ;FastBuggy17_Main_Code_TUNING.c: 772: SendPIDSetPointOnLine(PID_set_point_ptr);
  1265  000256  C113  F0D6         	movff	main@PID_set_point_ptr,SendPIDSetPointOnLine@set_point
  1266  00025A  C114  F0D7         	movff	main@PID_set_point_ptr+1,SendPIDSetPointOnLine@set_point+1
  1267  00025E  EC76  F00B         	call	_SendPIDSetPointOnLine	;wreg free
  1268                           
  1269                           ;FastBuggy17_Main_Code_TUNING.c: 774: FlashLEDS();
  1270  000262  EC44  F010         	call	_FlashLEDS	;wreg free
  1271                           
  1272                           ;FastBuggy17_Main_Code_TUNING.c: 777: LATJ = 0x03;
  1273  000266  0E03               	movlw	3
  1274  000268  6E91               	movwf	3985,c	;volatile
  1275                           
  1276                           ;FastBuggy17_Main_Code_TUNING.c: 778: SendStatus(0x06);
  1277  00026A  0E06               	movlw	6
  1278  00026C  ECC1  F00E         	call	_SendStatus
  1279                           
  1280                           ;FastBuggy17_Main_Code_TUNING.c: 780: SendDefaultPIDValues(20, 0, 0);
  1281  000270  0E00               	movlw	0
  1282  000272  0100               	movlb	0	; () banked
  1283  000274  6FD7               	movwf	(SendDefaultPIDValues@Kp+1)& (0+255),b
  1284  000276  0E14               	movlw	20
  1285  000278  6FD6               	movwf	SendDefaultPIDValues@Kp& (0+255),b
  1286  00027A  0E00               	movlw	0
  1287  00027C  0100               	movlb	0	; () banked
  1288  00027E  6FD9               	movwf	(SendDefaultPIDValues@Kd+1)& (0+255),b
  1289  000280  0E00               	movlw	0
  1290  000282  6FD8               	movwf	SendDefaultPIDValues@Kd& (0+255),b
  1291  000284  0E00               	movlw	0
  1292  000286  0100               	movlb	0	; () banked
  1293  000288  6FDB               	movwf	(SendDefaultPIDValues@Ki+1)& (0+255),b
  1294  00028A  0E00               	movlw	0
  1295  00028C  6FDA               	movwf	SendDefaultPIDValues@Ki& (0+255),b
  1296  00028E  ECE1  F00B         	call	_SendDefaultPIDValues	;wreg free
  1297                           
  1298                           ;FastBuggy17_Main_Code_TUNING.c: 782: Kp_stored = ReadIntEEPROM(0x0010);
  1299  000292  0E00               	movlw	0
  1300  000294  0100               	movlb	0	; () banked
  1301  000296  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1302  000298  0E10               	movlw	16
  1303  00029A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1304  00029C  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  1305  0002A0  C0D0  F122         	movff	?_ReadIntEEPROM,main@Kp_stored
  1306  0002A4  C0D1  F123         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  1307                           
  1308                           ;FastBuggy17_Main_Code_TUNING.c: 783: Kd_stored = ReadIntEEPROM(0x0012);
  1309  0002A8  0E00               	movlw	0
  1310  0002AA  0100               	movlb	0	; () banked
  1311  0002AC  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1312  0002AE  0E12               	movlw	18
  1313  0002B0  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1314  0002B2  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  1315  0002B6  C0D0  F124         	movff	?_ReadIntEEPROM,main@Kd_stored
  1316  0002BA  C0D1  F125         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  1317                           
  1318                           ;FastBuggy17_Main_Code_TUNING.c: 784: Ki_stored = ReadIntEEPROM(0x0014);
  1319  0002BE  0E00               	movlw	0
  1320  0002C0  0100               	movlb	0	; () banked
  1321  0002C2  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  1322  0002C4  0E14               	movlw	20
  1323  0002C6  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  1324  0002C8  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  1325  0002CC  C0D0  F126         	movff	?_ReadIntEEPROM,main@Ki_stored
  1326  0002D0  C0D1  F127         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  1327                           
  1328                           ;FastBuggy17_Main_Code_TUNING.c: 786: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_store
      +                          d);
  1329  0002D4  C122  F0D6         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  1330  0002D8  C123  F0D7         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  1331  0002DC  C124  F0D8         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  1332  0002E0  C125  F0D9         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  1333  0002E4  C126  F0DA         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  1334  0002E8  C127  F0DB         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  1335  0002EC  ECAC  F00B         	call	_SendStoredPIDValues	;wreg free
  1336  0002F0  D000               	goto	l6827
  1337  0002F2                     l6827:
  1338                           
  1339                           ;FastBuggy17_Main_Code_TUNING.c: 789: if(PB1pressed() == 1) {
  1340  0002F2  EC44  F00D         	call	_PB1pressed	;wreg free
  1341  0002F6  06E8               	decf	wreg,f,c
  1342  0002F8  A4D8               	btfss	status,2,c
  1343  0002FA  D008               	goto	l6837
  1344                           
  1345                           ;FastBuggy17_Main_Code_TUNING.c: 790: FlashLEDS();
  1346  0002FC  EC44  F010         	call	_FlashLEDS	;wreg free
  1347                           
  1348                           ;FastBuggy17_Main_Code_TUNING.c: 791: LATJ = 0x03;
  1349  000300  0E03               	movlw	3
  1350  000302  6E91               	movwf	3985,c	;volatile
  1351                           
  1352                           ;FastBuggy17_Main_Code_TUNING.c: 792: SetPIDValues();
  1353  000304  EC40  F004         	call	_SetPIDValues	;wreg free
  1354                           
  1355                           ;FastBuggy17_Main_Code_TUNING.c: 793: break;
  1356  000308  D00E               	goto	l6845
  1357                           
  1358                           ;FastBuggy17_Main_Code_TUNING.c: 794: }
  1359  00030A  D7F3               	goto	l6827
  1360  00030C                     l6837:
  1361                           
  1362                           ;FastBuggy17_Main_Code_TUNING.c: 795: else if(PB2pressed() == 1) {
  1363  00030C  ECE6  F00C         	call	_PB2pressed	;wreg free
  1364  000310  06E8               	decf	wreg,f,c
  1365  000312  A4D8               	btfss	status,2,c
  1366  000314  D7EE               	goto	l6827
  1367                           
  1368                           ;FastBuggy17_Main_Code_TUNING.c: 796: FlashLEDS();
  1369  000316  EC44  F010         	call	_FlashLEDS	;wreg free
  1370                           
  1371                           ;FastBuggy17_Main_Code_TUNING.c: 797: LATJ = 0x03;
  1372  00031A  0E03               	movlw	3
  1373  00031C  6E91               	movwf	3985,c	;volatile
  1374                           
  1375                           ;FastBuggy17_Main_Code_TUNING.c: 798: LoadPIDValues();
  1376  00031E  ECE3  F005         	call	_LoadPIDValues	;wreg free
  1377                           
  1378                           ;FastBuggy17_Main_Code_TUNING.c: 799: break;
  1379  000322  D001               	goto	l6845
  1380  000324  D7E6               	goto	l6827
  1381  000326                     l6845:
  1382                           
  1383                           ;FastBuggy17_Main_Code_TUNING.c: 800: }
  1384                           ;FastBuggy17_Main_Code_TUNING.c: 801: }
  1385                           ;FastBuggy17_Main_Code_TUNING.c: 803: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  1386  000326  C096  F0D6         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  1387  00032A  C097  F0D7         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  1388  00032E  C092  F0D8         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  1389  000332  C093  F0D9         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  1390  000336  C094  F0DA         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  1391  00033A  C095  F0DB         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  1392  00033E  EC16  F00C         	call	_SendCurrentPIDValues	;wreg free
  1393  000342  D000               	goto	l6847
  1394  000344                     l6847:
  1395                           
  1396                           ;FastBuggy17_Main_Code_TUNING.c: 809: FlashLEDS();
  1397  000344  EC44  F010         	call	_FlashLEDS	;wreg free
  1398                           
  1399                           ;FastBuggy17_Main_Code_TUNING.c: 811: LATJ = 0x01;
  1400  000348  0E01               	movlw	1
  1401  00034A  6E91               	movwf	3985,c	;volatile
  1402                           
  1403                           ;FastBuggy17_Main_Code_TUNING.c: 812: SendStatus(0x09);
  1404  00034C  0E09               	movlw	9
  1405  00034E  ECC1  F00E         	call	_SendStatus
  1406  000352  D000               	goto	l6853
  1407  000354                     l6853:
  1408                           
  1409                           ;FastBuggy17_Main_Code_TUNING.c: 815: if(PB1pressed() == 1) {
  1410  000354  EC44  F00D         	call	_PB1pressed	;wreg free
  1411  000358  06E8               	decf	wreg,f,c
  1412  00035A  B4D8               	btfsc	status,2,c
  1413  00035C  D00F               	goto	l6863
  1414  00035E  D001               	goto	l6857
  1415                           
  1416                           ;FastBuggy17_Main_Code_TUNING.c: 816: break;
  1417  000360  D00D               	goto	l6863
  1418  000362                     l6857:
  1419                           
  1420                           ;FastBuggy17_Main_Code_TUNING.c: 817: }
  1421                           ;FastBuggy17_Main_Code_TUNING.c: 818: if(CommandAvailable() == 1 && GetCommand() == 0x02
      +                          ) {
  1422  000362  EC18  F012         	call	_CommandAvailable	;wreg free
  1423  000366  06E8               	decf	wreg,f,c
  1424  000368  A4D8               	btfss	status,2,c
  1425  00036A  D7F4               	goto	l6853
  1426  00036C  EC52  F012         	call	_GetCommand	;wreg free
  1427  000370  0A02               	xorlw	2
  1428  000372  B4D8               	btfsc	status,2,c
  1429  000374  D003               	goto	l6863
  1430  000376  D7EE               	goto	l6853
  1431                           
  1432                           ;FastBuggy17_Main_Code_TUNING.c: 819: break;
  1433  000378  D001               	goto	l6863
  1434  00037A  D7EC               	goto	l6853
  1435  00037C                     l6863:
  1436                           
  1437                           ;FastBuggy17_Main_Code_TUNING.c: 820: }
  1438                           ;FastBuggy17_Main_Code_TUNING.c: 821: }
  1439                           ;FastBuggy17_Main_Code_TUNING.c: 824: PID_error = 0;
  1440  00037C  0E00               	movlw	0
  1441  00037E  0100               	movlb	0	; () banked
  1442  000380  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1443  000382  0E00               	movlw	0
  1444  000384  6FB8               	movwf	_PID_error& (0+255),b
  1445                           
  1446                           ;FastBuggy17_Main_Code_TUNING.c: 825: PID_output = 0;
  1447  000386  0E00               	movlw	0
  1448  000388  0100               	movlb	0	; () banked
  1449  00038A  6F99               	movwf	(_PID_output+1)& (0+255),b
  1450  00038C  0E00               	movlw	0
  1451  00038E  6F98               	movwf	_PID_output& (0+255),b
  1452                           
  1453                           ;FastBuggy17_Main_Code_TUNING.c: 826: D_temp = 0;
  1454  000390  0E00               	movlw	0
  1455  000392  0101               	movlb	1	; () banked
  1456  000394  6F1C               	movwf	(main@D_temp+1)& (0+255),b
  1457  000396  0E00               	movlw	0
  1458  000398  6F1B               	movwf	main@D_temp& (0+255),b
  1459                           
  1460                           ;FastBuggy17_Main_Code_TUNING.c: 827: I_temp = 0;
  1461  00039A  0E00               	movlw	0
  1462  00039C  0101               	movlb	1	; () banked
  1463  00039E  6F1E               	movwf	(main@I_temp+1)& (0+255),b
  1464  0003A0  0E00               	movlw	0
  1465  0003A2  6F1D               	movwf	main@I_temp& (0+255),b
  1466                           
  1467                           ;FastBuggy17_Main_Code_TUNING.c: 829: stop_flag = 0;
  1468  0003A4  0E00               	movlw	0
  1469  0003A6  0101               	movlb	1	; () banked
  1470  0003A8  6F1F               	movwf	main@stop_flag& (0+255),b
  1471                           
  1472                           ;FastBuggy17_Main_Code_TUNING.c: 830: find_line_flag = 0;
  1473  0003AA  0E00               	movlw	0
  1474  0003AC  0101               	movlb	1	; () banked
  1475  0003AE  6F08               	movwf	main@find_line_flag& (0+255),b
  1476                           
  1477                           ;FastBuggy17_Main_Code_TUNING.c: 831: line_end_flag = 0;
  1478  0003B0  0E00               	movlw	0
  1479  0003B2  0101               	movlb	1	; () banked
  1480  0003B4  6F09               	movwf	main@line_end_flag& (0+255),b
  1481                           
  1482                           ;FastBuggy17_Main_Code_TUNING.c: 832: wall_detected_flag = 0;
  1483  0003B6  0E00               	movlw	0
  1484  0003B8  0101               	movlb	1	; () banked
  1485  0003BA  6F18               	movwf	main@wall_detected_flag& (0+255),b
  1486                           
  1487                           ;FastBuggy17_Main_Code_TUNING.c: 833: send_battery_stats_flag = 0;
  1488  0003BC  0E00               	movlw	0
  1489  0003BE  0101               	movlb	1	; () banked
  1490  0003C0  6F0A               	movwf	main@send_battery_stats_flag& (0+255),b
  1491                           
  1492                           ;FastBuggy17_Main_Code_TUNING.c: 835: LATJ = 0x00;
  1493  0003C2  0E00               	movlw	0
  1494  0003C4  6E91               	movwf	3985,c	;volatile
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;FastBuggy17_Main_Code_TUNING.c: 837: FlashLEDS();
  1498  0003C6  EC44  F010         	call	_FlashLEDS	;wreg free
  1499                           
  1500                           ;FastBuggy17_Main_Code_TUNING.c: 838: SendStatus(0x0A);
  1501  0003CA  0E0A               	movlw	10
  1502  0003CC  ECC1  F00E         	call	_SendStatus
  1503                           
  1504                           ;FastBuggy17_Main_Code_TUNING.c: 840: ResetAccumulatedCurrent();
  1505  0003D0  EC02  F010         	call	_ResetAccumulatedCurrent	;wreg free
  1506                           
  1507                           ;FastBuggy17_Main_Code_TUNING.c: 842: ResetMillis0();
  1508  0003D4  EC30  F012         	call	_ResetMillis0	;wreg free
  1509                           
  1510                           ;FastBuggy17_Main_Code_TUNING.c: 843: ResetMillis1();
  1511  0003D8  EC2B  F012         	call	_ResetMillis1	;wreg free
  1512                           
  1513                           ;FastBuggy17_Main_Code_TUNING.c: 844: ResetMillis2();
  1514  0003DC  EC44  F012         	call	_ResetMillis2	;wreg free
  1515                           
  1516                           ;FastBuggy17_Main_Code_TUNING.c: 845: ResetMillis3();
  1517  0003E0  EC26  F012         	call	_ResetMillis3	;wreg free
  1518                           
  1519                           ;FastBuggy17_Main_Code_TUNING.c: 847: GetDistance();
  1520  0003E4  EC5D  F011         	call	_GetDistance	;wreg free
  1521                           
  1522                           ;FastBuggy17_Main_Code_TUNING.c: 849: SetUnipolar();
  1523  0003E8  EC5A  F012         	call	_SetUnipolar	;wreg free
  1524                           
  1525                           ;FastBuggy17_Main_Code_TUNING.c: 850: StopMotors();
  1526  0003EC  ECEE  F010         	call	_StopMotors	;wreg free
  1527                           
  1528                           ;FastBuggy17_Main_Code_TUNING.c: 851: SetDirectionForward();
  1529  0003F0  EC5D  F012         	call	_SetDirectionForward	;wreg free
  1530                           
  1531                           ;FastBuggy17_Main_Code_TUNING.c: 852: EnableMotors();
  1532  0003F4  EC69  F012         	call	_EnableMotors	;wreg free
  1533  0003F8  D000               	goto	l6889
  1534  0003FA                     l6889:
  1535                           
  1536                           ;FastBuggy17_Main_Code_TUNING.c: 857: ResetMillis1();
  1537  0003FA  EC2B  F012         	call	_ResetMillis1	;wreg free
  1538                           
  1539                           ;FastBuggy17_Main_Code_TUNING.c: 860: GetSensorReadings();
  1540  0003FE  EC52  F011         	call	_GetSensorReadings	;wreg free
  1541                           
  1542                           ;FastBuggy17_Main_Code_TUNING.c: 862: while(BusySensorAcq());
  1543  000402  D000               	goto	l6893
  1544  000404                     l6893:
  1545  000404  ECE3  F011         	call	_BusySensorAcq	;wreg free
  1546  000408  0900               	iorlw	0
  1547  00040A  A4D8               	btfss	status,2,c
  1548  00040C  D7FB               	goto	l6893
  1549                           
  1550                           ;FastBuggy17_Main_Code_TUNING.c: 863: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1551  00040E  0EAE               	movlw	low _sensor_readings_raw
  1552  000410  0100               	movlb	0	; () banked
  1553  000412  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1554  000414  0E00               	movlw	high _sensor_readings_raw
  1555  000416  0100               	movlb	0	; () banked
  1556  000418  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1557  00041A  0E9A               	movlw	low _sensor_offsets
  1558  00041C  0100               	movlb	0	; () banked
  1559  00041E  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1560  000420  0E00               	movlw	high _sensor_offsets
  1561  000422  0100               	movlb	0	; () banked
  1562  000424  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1563  000426  ECC3  F00A         	call	_NormaliseSensorReadings	;wreg free
  1564                           
  1565                           ;FastBuggy17_Main_Code_TUNING.c: 864: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1566  00042A  0EA4               	movlw	low _sensor_readings_normalised
  1567  00042C  0100               	movlb	0	; () banked
  1568  00042E  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1569  000430  0E00               	movlw	high _sensor_readings_normalised
  1570  000432  0100               	movlb	0	; () banked
  1571  000434  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1572  000436  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1573  00043A  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1574  00043E  ECE4  F004         	call	_CalculateSensorStatuses	;wreg free
  1575                           
  1576                           ;FastBuggy17_Main_Code_TUNING.c: 866: sensor_sum = CalculateSensorSum(sensor_readings_no
      +                          rmalised);
  1577  000442  0EA4               	movlw	low _sensor_readings_normalised
  1578  000444  0100               	movlb	0	; () banked
  1579  000446  6FD4               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  1580  000448  0E00               	movlw	high _sensor_readings_normalised
  1581  00044A  0100               	movlb	0	; () banked
  1582  00044C  6FD5               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  1583  00044E  EC67  F005         	call	_CalculateSensorSum	;wreg free
  1584  000452  C0D4  F120         	movff	?_CalculateSensorSum,main@sensor_sum
  1585  000456  C0D5  F121         	movff	?_CalculateSensorSum+1,main@sensor_sum+1
  1586                           
  1587                           ;FastBuggy17_Main_Code_TUNING.c: 867: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  1588  00045A  0E25               	movlw	low _sensor_statuses
  1589  00045C  0100               	movlb	0	; () banked
  1590  00045E  6FCE               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  1591  000460  0E00               	movlw	high _sensor_statuses
  1592  000462  0100               	movlb	0	; () banked
  1593  000464  6FCF               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  1594  000466  EC66  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  1595  00046A  0101               	movlb	1	; () banked
  1596  00046C  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  1597                           
  1598                           ; BSR set to: 1
  1599                           ;FastBuggy17_Main_Code_TUNING.c: 870: PID_error = (PID_set_point - sensor_sum) / 100;
  1600  00046E  C120  F0E2         	movff	main@sensor_sum,??_main
  1601  000472  C121  F0E3         	movff	main@sensor_sum+1,??_main+1
  1602  000476  0100               	movlb	0	; () banked
  1603  000478  1FE2               	comf	??_main& (0+255),f,b
  1604  00047A  1FE3               	comf	(??_main+1)& (0+255),f,b
  1605  00047C  4BE2               	infsnz	??_main& (0+255),f,b
  1606  00047E  2BE3               	incf	(??_main+1)& (0+255),f,b
  1607  000480  0100               	movlb	0	; () banked
  1608  000482  51BA               	movf	_PID_set_point& (0+255),w,b
  1609  000484  0100               	movlb	0	; () banked
  1610  000486  25E2               	addwf	??_main& (0+255),w,b
  1611  000488  0100               	movlb	0	; () banked
  1612  00048A  6FCE               	movwf	___awdiv@dividend& (0+255),b
  1613  00048C  0100               	movlb	0	; () banked
  1614  00048E  51BB               	movf	(_PID_set_point+1)& (0+255),w,b
  1615  000490  0100               	movlb	0	; () banked
  1616  000492  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1617  000494  0100               	movlb	0	; () banked
  1618  000496  6FCF               	movwf	(___awdiv@dividend+1)& (0+255),b
  1619  000498  0E00               	movlw	0
  1620  00049A  0100               	movlb	0	; () banked
  1621  00049C  6FD1               	movwf	(___awdiv@divisor+1)& (0+255),b
  1622  00049E  0E64               	movlw	100
  1623  0004A0  6FD0               	movwf	___awdiv@divisor& (0+255),b
  1624  0004A2  EC4A  F007         	call	___awdiv	;wreg free
  1625  0004A6  C0CE  F0B8         	movff	?___awdiv,_PID_error
  1626  0004AA  C0CF  F0B9         	movff	?___awdiv+1,_PID_error+1
  1627                           
  1628                           ;FastBuggy17_Main_Code_TUNING.c: 871: PID_output = PID_Kp * PID_error + PID_Kd * (D_temp
      +                           - PID_error) + PID_Ki * I_temp;
  1629  0004AE  C096  F0CE         	movff	_PID_Kp,___wmul@multiplier
  1630  0004B2  C097  F0CF         	movff	_PID_Kp+1,___wmul@multiplier+1
  1631  0004B6  C0B8  F0D0         	movff	_PID_error,___wmul@multiplicand
  1632  0004BA  C0B9  F0D1         	movff	_PID_error+1,___wmul@multiplicand+1
  1633  0004BE  EC16  F00F         	call	___wmul	;wreg free
  1634  0004C2  C0CE  F0E2         	movff	?___wmul,??_main
  1635  0004C6  C0CF  F0E3         	movff	?___wmul+1,??_main+1
  1636  0004CA  C0B8  F0E4         	movff	_PID_error,??_main+2
  1637  0004CE  C0B9  F0E5         	movff	_PID_error+1,??_main+3
  1638  0004D2  0100               	movlb	0	; () banked
  1639  0004D4  1FE4               	comf	(??_main+2)& (0+255),f,b
  1640  0004D6  1FE5               	comf	(??_main+3)& (0+255),f,b
  1641  0004D8  4BE4               	infsnz	(??_main+2)& (0+255),f,b
  1642  0004DA  2BE5               	incf	(??_main+3)& (0+255),f,b
  1643  0004DC  0101               	movlb	1	; () banked
  1644  0004DE  511B               	movf	main@D_temp& (0+255),w,b
  1645  0004E0  0100               	movlb	0	; () banked
  1646  0004E2  25E4               	addwf	(??_main+2)& (0+255),w,b
  1647  0004E4  0100               	movlb	0	; () banked
  1648  0004E6  6FCE               	movwf	___wmul@multiplier& (0+255),b
  1649  0004E8  0101               	movlb	1	; () banked
  1650  0004EA  511C               	movf	(main@D_temp+1)& (0+255),w,b
  1651  0004EC  0100               	movlb	0	; () banked
  1652  0004EE  21E5               	addwfc	(??_main+3)& (0+255),w,b
  1653  0004F0  0100               	movlb	0	; () banked
  1654  0004F2  6FCF               	movwf	(___wmul@multiplier+1)& (0+255),b
  1655  0004F4  C092  F0D0         	movff	_PID_Kd,___wmul@multiplicand
  1656  0004F8  C093  F0D1         	movff	_PID_Kd+1,___wmul@multiplicand+1
  1657  0004FC  EC16  F00F         	call	___wmul	;wreg free
  1658  000500  0100               	movlb	0	; () banked
  1659  000502  51CE               	movf	?___wmul& (0+255),w,b
  1660  000504  0100               	movlb	0	; () banked
  1661  000506  27E2               	addwf	??_main& (0+255),f,b
  1662  000508  0100               	movlb	0	; () banked
  1663  00050A  51CF               	movf	(?___wmul+1)& (0+255),w,b
  1664  00050C  0100               	movlb	0	; () banked
  1665  00050E  23E3               	addwfc	(??_main+1)& (0+255),f,b
  1666  000510  C094  F0CE         	movff	_PID_Ki,___wmul@multiplier
  1667  000514  C095  F0CF         	movff	_PID_Ki+1,___wmul@multiplier+1
  1668  000518  C11D  F0D0         	movff	main@I_temp,___wmul@multiplicand
  1669  00051C  C11E  F0D1         	movff	main@I_temp+1,___wmul@multiplicand+1
  1670  000520  EC16  F00F         	call	___wmul	;wreg free
  1671  000524  0100               	movlb	0	; () banked
  1672  000526  51CE               	movf	?___wmul& (0+255),w,b
  1673  000528  0100               	movlb	0	; () banked
  1674  00052A  25E2               	addwf	??_main& (0+255),w,b
  1675  00052C  0100               	movlb	0	; () banked
  1676  00052E  6F98               	movwf	_PID_output& (0+255),b
  1677  000530  0100               	movlb	0	; () banked
  1678  000532  51CF               	movf	(?___wmul+1)& (0+255),w,b
  1679  000534  0100               	movlb	0	; () banked
  1680  000536  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1681  000538  0100               	movlb	0	; () banked
  1682  00053A  6F99               	movwf	(_PID_output+1)& (0+255),b
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;FastBuggy17_Main_Code_TUNING.c: 872: D_temp = PID_error;
  1686  00053C  C0B8  F11B         	movff	_PID_error,main@D_temp
  1687  000540  C0B9  F11C         	movff	_PID_error+1,main@D_temp+1
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;FastBuggy17_Main_Code_TUNING.c: 873: I_temp += PID_error;
  1691  000544  0100               	movlb	0	; () banked
  1692  000546  51B8               	movf	_PID_error& (0+255),w,b
  1693  000548  0101               	movlb	1	; () banked
  1694  00054A  271D               	addwf	main@I_temp& (0+255),f,b
  1695  00054C  0100               	movlb	0	; () banked
  1696  00054E  51B9               	movf	(_PID_error+1)& (0+255),w,b
  1697  000550  0101               	movlb	1	; () banked
  1698  000552  231E               	addwfc	(main@I_temp+1)& (0+255),f,b
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;FastBuggy17_Main_Code_TUNING.c: 875: SetDCMotorPID(PID_output);
  1702  000554  C098  F0D6         	movff	_PID_output,SetDCMotorPID@PIDoutput
  1703  000558  C099  F0D7         	movff	_PID_output+1,SetDCMotorPID@PIDoutput+1
  1704  00055C  ECC2  F008         	call	_SetDCMotorPID	;wreg free
  1705                           
  1706                           ;FastBuggy17_Main_Code_TUNING.c: 876: DisplaySensorStatuses(sensor_statuses);
  1707  000560  0E25               	movlw	low _sensor_statuses
  1708  000562  0100               	movlb	0	; () banked
  1709  000564  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1710  000566  0E00               	movlw	high _sensor_statuses
  1711  000568  0100               	movlb	0	; () banked
  1712  00056A  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1713  00056C  EC73  F00D         	call	_DisplaySensorStatuses	;wreg free
  1714                           
  1715                           ;FastBuggy17_Main_Code_TUNING.c: 879: if((ReadMillis0() > 50) && (BusyDistanceAcq() == 0
      +                          ) && (wall_detected_flag == 0)) {
  1716  000570  EC3A  F012         	call	_ReadMillis0	;wreg free
  1717  000574  0100               	movlb	0	; () banked
  1718  000576  51CF               	movf	(?_ReadMillis0+1)& (0+255),w,b
  1719  000578  E105               	bnz	u6110
  1720  00057A  0E33               	movlw	51
  1721  00057C  0100               	movlb	0	; () banked
  1722  00057E  5DCE               	subwf	?_ReadMillis0& (0+255),w,b
  1723  000580  A0D8               	btfss	status,0,c
  1724  000582  D0C6               	goto	l6985
  1725  000584                     u6110:
  1726                           
  1727                           ; BSR set to: 0
  1728  000584  ECF3  F011         	call	_BusyDistanceAcq	;wreg free
  1729  000588  0900               	iorlw	0
  1730  00058A  A4D8               	btfss	status,2,c
  1731  00058C  D0C1               	goto	l6985
  1732  00058E  0101               	movlb	1	; () banked
  1733  000590  5118               	movf	main@wall_detected_flag& (0+255),w,b
  1734  000592  0101               	movlb	1	; () banked
  1735  000594  A4D8               	btfss	status,2,c
  1736  000596  D0BC               	goto	l6985
  1737                           
  1738                           ; BSR set to: 1
  1739                           ;FastBuggy17_Main_Code_TUNING.c: 880: ResetMillis0();
  1740  000598  EC30  F012         	call	_ResetMillis0	;wreg free
  1741                           
  1742                           ;FastBuggy17_Main_Code_TUNING.c: 882: if(ReadEchoLength() < 600) {
  1743  00059C  EC3F  F012         	call	_ReadEchoLength	;wreg free
  1744  0005A0  0E58               	movlw	88
  1745  0005A2  0100               	movlb	0	; () banked
  1746  0005A4  5DCE               	subwf	?_ReadEchoLength& (0+255),w,b
  1747  0005A6  0E02               	movlw	2
  1748  0005A8  0100               	movlb	0	; () banked
  1749  0005AA  59CF               	subwfb	(?_ReadEchoLength+1)& (0+255),w,b
  1750  0005AC  B0D8               	btfsc	status,0,c
  1751  0005AE  D0AD               	goto	l6983
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;FastBuggy17_Main_Code_TUNING.c: 883: wall_detected_flag = 1;
  1755  0005B0  0E01               	movlw	1
  1756  0005B2  0101               	movlb	1	; () banked
  1757  0005B4  6F18               	movwf	main@wall_detected_flag& (0+255),b
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;FastBuggy17_Main_Code_TUNING.c: 886: DisableMotors();
  1761  0005B6  EC6B  F012         	call	_DisableMotors	;wreg free
  1762                           
  1763                           ;FastBuggy17_Main_Code_TUNING.c: 887: SetDCMotorL(526);
  1764  0005BA  0E02               	movlw	2
  1765  0005BC  0100               	movlb	0	; () banked
  1766  0005BE  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1767  0005C0  0E0E               	movlw	14
  1768  0005C2  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1769  0005C4  EC0A  F012         	call	_SetDCMotorL	;wreg free
  1770                           
  1771                           ;FastBuggy17_Main_Code_TUNING.c: 888: SetDCMotorR(526);
  1772  0005C8  0E02               	movlw	2
  1773  0005CA  0100               	movlb	0	; () banked
  1774  0005CC  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1775  0005CE  0E0E               	movlw	14
  1776  0005D0  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1777  0005D2  EC03  F012         	call	_SetDCMotorR	;wreg free
  1778                           
  1779                           ;FastBuggy17_Main_Code_TUNING.c: 890: Delay10KTCYx(200);
  1780  0005D6  0EC8               	movlw	200
  1781  0005D8  ECFD  F010         	call	_Delay10KTCYx
  1782                           
  1783                           ;FastBuggy17_Main_Code_TUNING.c: 895: PID_error = 0;
  1784  0005DC  0E00               	movlw	0
  1785  0005DE  0100               	movlb	0	; () banked
  1786  0005E0  6FB9               	movwf	(_PID_error+1)& (0+255),b
  1787  0005E2  0E00               	movlw	0
  1788  0005E4  6FB8               	movwf	_PID_error& (0+255),b
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;FastBuggy17_Main_Code_TUNING.c: 896: PID_output = 0;
  1792  0005E6  0E00               	movlw	0
  1793  0005E8  0100               	movlb	0	; () banked
  1794  0005EA  6F99               	movwf	(_PID_output+1)& (0+255),b
  1795  0005EC  0E00               	movlw	0
  1796  0005EE  6F98               	movwf	_PID_output& (0+255),b
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;FastBuggy17_Main_Code_TUNING.c: 897: D_temp = 0;
  1800  0005F0  0E00               	movlw	0
  1801  0005F2  0101               	movlb	1	; () banked
  1802  0005F4  6F1C               	movwf	(main@D_temp+1)& (0+255),b
  1803  0005F6  0E00               	movlw	0
  1804  0005F8  6F1B               	movwf	main@D_temp& (0+255),b
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;FastBuggy17_Main_Code_TUNING.c: 898: I_temp = 0;
  1808  0005FA  0E00               	movlw	0
  1809  0005FC  0101               	movlb	1	; () banked
  1810  0005FE  6F1E               	movwf	(main@I_temp+1)& (0+255),b
  1811  000600  0E00               	movlw	0
  1812  000602  6F1D               	movwf	main@I_temp& (0+255),b
  1813                           
  1814                           ; BSR set to: 1
  1815                           ;FastBuggy17_Main_Code_TUNING.c: 900: SetForwardsMotorR();
  1816  000604  EC65  F012         	call	_SetForwardsMotorR	;wreg free
  1817                           
  1818                           ;FastBuggy17_Main_Code_TUNING.c: 901: SetReverseMotorL();
  1819  000608  EC63  F012         	call	_SetReverseMotorL	;wreg free
  1820                           
  1821                           ;FastBuggy17_Main_Code_TUNING.c: 903: SetDCMotorL(270);
  1822  00060C  0E01               	movlw	1
  1823  00060E  0100               	movlb	0	; () banked
  1824  000610  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1825  000612  0E0E               	movlw	14
  1826  000614  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1827  000616  EC0A  F012         	call	_SetDCMotorL	;wreg free
  1828                           
  1829                           ;FastBuggy17_Main_Code_TUNING.c: 904: SetDCMotorR(380);
  1830  00061A  0E01               	movlw	1
  1831  00061C  0100               	movlb	0	; () banked
  1832  00061E  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1833  000620  0E7C               	movlw	124
  1834  000622  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1835  000624  EC03  F012         	call	_SetDCMotorR	;wreg free
  1836                           
  1837                           ;FastBuggy17_Main_Code_TUNING.c: 906: EnableMotors();
  1838  000628  EC69  F012         	call	_EnableMotors	;wreg free
  1839                           
  1840                           ;FastBuggy17_Main_Code_TUNING.c: 908: sensor_sum_discrete = 0;
  1841  00062C  0E00               	movlw	0
  1842  00062E  0101               	movlb	1	; () banked
  1843  000630  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  1844                           
  1845                           ;FastBuggy17_Main_Code_TUNING.c: 910: Delay10KTCYx(150);
  1846  000632  0E96               	movlw	150
  1847  000634  ECFD  F010         	call	_Delay10KTCYx
  1848                           
  1849                           ;FastBuggy17_Main_Code_TUNING.c: 914: GetSensorReadings();
  1850  000638  EC52  F011         	call	_GetSensorReadings	;wreg free
  1851                           
  1852                           ;FastBuggy17_Main_Code_TUNING.c: 915: while(BusySensorAcq());
  1853  00063C  D000               	goto	l6957
  1854  00063E                     l6957:
  1855  00063E  ECE3  F011         	call	_BusySensorAcq	;wreg free
  1856  000642  0900               	iorlw	0
  1857  000644  A4D8               	btfss	status,2,c
  1858  000646  D7FB               	goto	l6957
  1859                           
  1860                           ;FastBuggy17_Main_Code_TUNING.c: 916: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1861  000648  0EAE               	movlw	low _sensor_readings_raw
  1862  00064A  0100               	movlb	0	; () banked
  1863  00064C  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1864  00064E  0E00               	movlw	high _sensor_readings_raw
  1865  000650  0100               	movlb	0	; () banked
  1866  000652  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1867  000654  0E9A               	movlw	low _sensor_offsets
  1868  000656  0100               	movlb	0	; () banked
  1869  000658  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1870  00065A  0E00               	movlw	high _sensor_offsets
  1871  00065C  0100               	movlb	0	; () banked
  1872  00065E  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1873  000660  ECC3  F00A         	call	_NormaliseSensorReadings	;wreg free
  1874                           
  1875                           ;FastBuggy17_Main_Code_TUNING.c: 917: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1876  000664  0EA4               	movlw	low _sensor_readings_normalised
  1877  000666  0100               	movlb	0	; () banked
  1878  000668  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1879  00066A  0E00               	movlw	high _sensor_readings_normalised
  1880  00066C  0100               	movlb	0	; () banked
  1881  00066E  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1882  000670  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1883  000674  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1884  000678  ECE4  F004         	call	_CalculateSensorStatuses	;wreg free
  1885                           
  1886                           ;FastBuggy17_Main_Code_TUNING.c: 919: while(sensor_statuses[2] != 1) {
  1887  00067C  D02B               	goto	l6973
  1888  00067E                     l6963:
  1889                           
  1890                           ;FastBuggy17_Main_Code_TUNING.c: 921: GetSensorReadings();
  1891  00067E  EC52  F011         	call	_GetSensorReadings	;wreg free
  1892                           
  1893                           ;FastBuggy17_Main_Code_TUNING.c: 922: while(BusySensorAcq());
  1894  000682  D000               	goto	l6965
  1895  000684                     l6965:
  1896  000684  ECE3  F011         	call	_BusySensorAcq	;wreg free
  1897  000688  0900               	iorlw	0
  1898  00068A  A4D8               	btfss	status,2,c
  1899  00068C  D7FB               	goto	l6965
  1900                           
  1901                           ;FastBuggy17_Main_Code_TUNING.c: 923: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  1902  00068E  0EAE               	movlw	low _sensor_readings_raw
  1903  000690  0100               	movlb	0	; () banked
  1904  000692  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  1905  000694  0E00               	movlw	high _sensor_readings_raw
  1906  000696  0100               	movlb	0	; () banked
  1907  000698  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  1908  00069A  0E9A               	movlw	low _sensor_offsets
  1909  00069C  0100               	movlb	0	; () banked
  1910  00069E  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  1911  0006A0  0E00               	movlw	high _sensor_offsets
  1912  0006A2  0100               	movlb	0	; () banked
  1913  0006A4  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  1914  0006A6  ECC3  F00A         	call	_NormaliseSensorReadings	;wreg free
  1915                           
  1916                           ;FastBuggy17_Main_Code_TUNING.c: 924: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  1917  0006AA  0EA4               	movlw	low _sensor_readings_normalised
  1918  0006AC  0100               	movlb	0	; () banked
  1919  0006AE  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  1920  0006B0  0E00               	movlw	high _sensor_readings_normalised
  1921  0006B2  0100               	movlb	0	; () banked
  1922  0006B4  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  1923  0006B6  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  1924  0006BA  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  1925  0006BE  ECE4  F004         	call	_CalculateSensorStatuses	;wreg free
  1926                           
  1927                           ;FastBuggy17_Main_Code_TUNING.c: 928: DisplaySensorStatuses(sensor_statuses);
  1928  0006C2  0E25               	movlw	low _sensor_statuses
  1929  0006C4  0100               	movlb	0	; () banked
  1930  0006C6  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  1931  0006C8  0E00               	movlw	high _sensor_statuses
  1932  0006CA  0100               	movlb	0	; () banked
  1933  0006CC  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  1934  0006CE  EC73  F00D         	call	_DisplaySensorStatuses	;wreg free
  1935  0006D2  D000               	goto	l6973
  1936  0006D4                     l6973:
  1937  0006D4  0427               	decf	_sensor_statuses+2,w,c
  1938  0006D6  A4D8               	btfss	status,2,c
  1939  0006D8  D7D2               	goto	l6963
  1940                           
  1941                           ;FastBuggy17_Main_Code_TUNING.c: 929: }
  1942                           ;FastBuggy17_Main_Code_TUNING.c: 931: DisableMotors();
  1943  0006DA  EC6B  F012         	call	_DisableMotors	;wreg free
  1944                           
  1945                           ;FastBuggy17_Main_Code_TUNING.c: 932: SetDCMotorL(526);
  1946  0006DE  0E02               	movlw	2
  1947  0006E0  0100               	movlb	0	; () banked
  1948  0006E2  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  1949  0006E4  0E0E               	movlw	14
  1950  0006E6  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  1951  0006E8  EC0A  F012         	call	_SetDCMotorL	;wreg free
  1952                           
  1953                           ;FastBuggy17_Main_Code_TUNING.c: 933: SetDCMotorR(526);
  1954  0006EC  0E02               	movlw	2
  1955  0006EE  0100               	movlb	0	; () banked
  1956  0006F0  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  1957  0006F2  0E0E               	movlw	14
  1958  0006F4  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  1959  0006F6  EC03  F012         	call	_SetDCMotorR	;wreg free
  1960                           
  1961                           ;FastBuggy17_Main_Code_TUNING.c: 934: SetDirectionForward();
  1962  0006FA  EC5D  F012         	call	_SetDirectionForward	;wreg free
  1963                           
  1964                           ;FastBuggy17_Main_Code_TUNING.c: 935: EnableMotors();
  1965  0006FE  EC69  F012         	call	_EnableMotors	;wreg free
  1966                           
  1967                           ;FastBuggy17_Main_Code_TUNING.c: 937: Delay10KTCYx(200);
  1968  000702  0EC8               	movlw	200
  1969  000704  ECFD  F010         	call	_Delay10KTCYx
  1970                           
  1971                           ;FastBuggy17_Main_Code_TUNING.c: 941: }
  1972  000708  D062               	goto	l7017
  1973  00070A                     l6983:
  1974                           
  1975                           ;FastBuggy17_Main_Code_TUNING.c: 942: else {
  1976                           ;FastBuggy17_Main_Code_TUNING.c: 943: GetDistance();
  1977  00070A  EC5D  F011         	call	_GetDistance	;wreg free
  1978                           
  1979                           ;FastBuggy17_Main_Code_TUNING.c: 944: }
  1980                           ;FastBuggy17_Main_Code_TUNING.c: 945: }
  1981  00070E  D05F               	goto	l7017
  1982  000710                     l6985:
  1983                           
  1984                           ;FastBuggy17_Main_Code_TUNING.c: 949: else if(sensor_sum_discrete == 0) {
  1985  000710  0101               	movlb	1	; () banked
  1986  000712  5128               	movf	main@sensor_sum_discrete& (0+255),w,b
  1987  000714  0101               	movlb	1	; () banked
  1988  000716  A4D8               	btfss	status,2,c
  1989  000718  D03C               	goto	l7003
  1990                           
  1991                           ; BSR set to: 1
  1992                           ;FastBuggy17_Main_Code_TUNING.c: 950: ResetMillis2();
  1993  00071A  EC44  F012         	call	_ResetMillis2	;wreg free
  1994                           
  1995                           ;FastBuggy17_Main_Code_TUNING.c: 951: while(ReadMillis2() < 180) {
  1996  00071E  D02D               	goto	l6999
  1997  000720                     l6989:
  1998                           
  1999                           ;FastBuggy17_Main_Code_TUNING.c: 953: GetSensorReadings();
  2000  000720  EC52  F011         	call	_GetSensorReadings	;wreg free
  2001                           
  2002                           ;FastBuggy17_Main_Code_TUNING.c: 954: while(BusySensorAcq());
  2003  000724  D000               	goto	l6991
  2004  000726                     l6991:
  2005  000726  ECE3  F011         	call	_BusySensorAcq	;wreg free
  2006  00072A  0900               	iorlw	0
  2007  00072C  A4D8               	btfss	status,2,c
  2008  00072E  D7FB               	goto	l6991
  2009                           
  2010                           ;FastBuggy17_Main_Code_TUNING.c: 955: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  2011  000730  0EAE               	movlw	low _sensor_readings_raw
  2012  000732  0100               	movlb	0	; () banked
  2013  000734  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  2014  000736  0E00               	movlw	high _sensor_readings_raw
  2015  000738  0100               	movlb	0	; () banked
  2016  00073A  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  2017  00073C  0E9A               	movlw	low _sensor_offsets
  2018  00073E  0100               	movlb	0	; () banked
  2019  000740  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  2020  000742  0E00               	movlw	high _sensor_offsets
  2021  000744  0100               	movlb	0	; () banked
  2022  000746  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  2023  000748  ECC3  F00A         	call	_NormaliseSensorReadings	;wreg free
  2024                           
  2025                           ;FastBuggy17_Main_Code_TUNING.c: 956: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_ptr);
  2026  00074C  0EA4               	movlw	low _sensor_readings_normalised
  2027  00074E  0100               	movlb	0	; () banked
  2028  000750  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  2029  000752  0E00               	movlw	high _sensor_readings_normalised
  2030  000754  0100               	movlb	0	; () banked
  2031  000756  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  2032  000758  C129  F0D0         	movff	main@sensor_threshold_ptr,CalculateSensorStatuses@sensor_threshold
  2033  00075C  C12A  F0D1         	movff	main@sensor_threshold_ptr+1,CalculateSensorStatuses@sensor_threshold+1
  2034  000760  ECE4  F004         	call	_CalculateSensorStatuses	;wreg free
  2035                           
  2036                           ;FastBuggy17_Main_Code_TUNING.c: 958: sensor_sum_discrete = CalculateSensorSumDiscrete(s
      +                          ensor_statuses);
  2037  000764  0E25               	movlw	low _sensor_statuses
  2038  000766  0100               	movlb	0	; () banked
  2039  000768  6FCE               	movwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),b
  2040  00076A  0E00               	movlw	high _sensor_statuses
  2041  00076C  0100               	movlb	0	; () banked
  2042  00076E  6FCF               	movwf	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),b
  2043  000770  EC66  F00E         	call	_CalculateSensorSumDiscrete	;wreg free
  2044  000774  0101               	movlb	1	; () banked
  2045  000776  6F28               	movwf	main@sensor_sum_discrete& (0+255),b
  2046  000778  D000               	goto	l6999
  2047  00077A                     l6999:
  2048  00077A  EC49  F012         	call	_ReadMillis2	;wreg free
  2049  00077E  0100               	movlb	0	; () banked
  2050  000780  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  2051  000782  E125               	bnz	l7017
  2052  000784  0EB4               	movlw	180
  2053  000786  0100               	movlb	0	; () banked
  2054  000788  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  2055  00078A  B0D8               	btfsc	status,0,c
  2056  00078C  D020               	goto	l7017
  2057  00078E  D7C8               	goto	l6989
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;FastBuggy17_Main_Code_TUNING.c: 964: }
  2061                           ;FastBuggy17_Main_Code_TUNING.c: 966: }
  2062                           
  2063                           ; BSR set to: 0
  2064                           
  2065                           ; BSR set to: 0
  2066  000790  D01E               	goto	l7017
  2067  000792                     l7003:
  2068                           
  2069                           ;FastBuggy17_Main_Code_TUNING.c: 969: else if(CommandAvailable() == 1) {
  2070  000792  EC18  F012         	call	_CommandAvailable	;wreg free
  2071  000796  06E8               	decf	wreg,f,c
  2072  000798  A4D8               	btfss	status,2,c
  2073  00079A  D00B               	goto	l7011
  2074                           
  2075                           ;FastBuggy17_Main_Code_TUNING.c: 970: command_msg = GetCommand();
  2076  00079C  EC52  F012         	call	_GetCommand	;wreg free
  2077  0007A0  0101               	movlb	1	; () banked
  2078  0007A2  6F17               	movwf	main@command_msg& (0+255),b
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;FastBuggy17_Main_Code_TUNING.c: 971: if(command_msg == 0x04) {
  2082  0007A4  0E04               	movlw	4
  2083  0007A6  0101               	movlb	1	; () banked
  2084  0007A8  1917               	xorwf	main@command_msg& (0+255),w,b
  2085  0007AA  A4D8               	btfss	status,2,c
  2086  0007AC  D010               	goto	l7017
  2087  0007AE  D00B               	goto	l7015
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;FastBuggy17_Main_Code_TUNING.c: 973: }
  2091                           ;FastBuggy17_Main_Code_TUNING.c: 975: }
  2092                           
  2093                           ; BSR set to: 1
  2094                           ;FastBuggy17_Main_Code_TUNING.c: 972: stop_flag = 1;
  2095  0007B0  D00E               	goto	l7017
  2096  0007B2                     l7011:
  2097                           
  2098                           ;FastBuggy17_Main_Code_TUNING.c: 978: else if(PB1pressed() == 1 || PB2pressed() == 1) {
  2099  0007B2  EC44  F00D         	call	_PB1pressed	;wreg free
  2100  0007B6  06E8               	decf	wreg,f,c
  2101  0007B8  B4D8               	btfsc	status,2,c
  2102  0007BA  D005               	goto	l7015
  2103  0007BC  ECE6  F00C         	call	_PB2pressed	;wreg free
  2104  0007C0  06E8               	decf	wreg,f,c
  2105  0007C2  A4D8               	btfss	status,2,c
  2106  0007C4  D004               	goto	l7017
  2107  0007C6                     l7015:
  2108                           
  2109                           ;FastBuggy17_Main_Code_TUNING.c: 979: stop_flag = 1;
  2110  0007C6  0E01               	movlw	1
  2111  0007C8  0101               	movlb	1	; () banked
  2112  0007CA  6F1F               	movwf	main@stop_flag& (0+255),b
  2113                           
  2114                           ; BSR set to: 1
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;FastBuggy17_Main_Code_TUNING.c: 980: }
  2118                           ;FastBuggy17_Main_Code_TUNING.c: 1012: while(ReadMillis1() <= 0);
  2119                           
  2120                           ; BSR set to: 1
  2121                           
  2122                           ; BSR set to: 1
  2123                           
  2124                           ; BSR set to: 1
  2125  0007CC  D000               	goto	l7017
  2126  0007CE                     l7017:
  2127  0007CE  EC35  F012         	call	_ReadMillis1	;wreg free
  2128  0007D2  0100               	movlb	0	; () banked
  2129  0007D4  51CE               	movf	?_ReadMillis1& (0+255),w,b
  2130  0007D6  0100               	movlb	0	; () banked
  2131  0007D8  11CF               	iorwf	(?_ReadMillis1+1)& (0+255),w,b
  2132  0007DA  B4D8               	btfsc	status,2,c
  2133  0007DC  D7F8               	goto	l7017
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;FastBuggy17_Main_Code_TUNING.c: 1014: if(stop_flag == 1) {
  2137                           
  2138                           ; BSR set to: 0
  2139  0007DE  0101               	movlb	1	; () banked
  2140  0007E0  051F               	decf	main@stop_flag& (0+255),w,b
  2141  0007E2  A4D8               	btfss	status,2,c
  2142  0007E4  D60A               	goto	l6889
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;FastBuggy17_Main_Code_TUNING.c: 1015: StopMotors();
  2146  0007E6  ECEE  F010         	call	_StopMotors	;wreg free
  2147                           
  2148                           ;FastBuggy17_Main_Code_TUNING.c: 1016: break;
  2149  0007EA  D001               	goto	l7023
  2150  0007EC  D606               	goto	l6889
  2151  0007EE                     l7023:
  2152                           
  2153                           ;FastBuggy17_Main_Code_TUNING.c: 1017: }
  2154                           ;FastBuggy17_Main_Code_TUNING.c: 1019: }
  2155                           ;FastBuggy17_Main_Code_TUNING.c: 1022: FlashLEDS();
  2156  0007EE  EC44  F010         	call	_FlashLEDS	;wreg free
  2157                           
  2158                           ;FastBuggy17_Main_Code_TUNING.c: 1023: LATJ = 0x03;
  2159  0007F2  0E03               	movlw	3
  2160  0007F4  6E91               	movwf	3985,c	;volatile
  2161                           
  2162                           ;FastBuggy17_Main_Code_TUNING.c: 1024: SendStatus(0x05);
  2163  0007F6  0E05               	movlw	5
  2164  0007F8  ECC1  F00E         	call	_SendStatus
  2165                           
  2166                           ;FastBuggy17_Main_Code_TUNING.c: 1026: Kp_stored = ReadIntEEPROM(0x0010);
  2167  0007FC  0E00               	movlw	0
  2168  0007FE  0100               	movlb	0	; () banked
  2169  000800  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2170  000802  0E10               	movlw	16
  2171  000804  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2172  000806  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  2173  00080A  C0D0  F122         	movff	?_ReadIntEEPROM,main@Kp_stored
  2174  00080E  C0D1  F123         	movff	?_ReadIntEEPROM+1,main@Kp_stored+1
  2175                           
  2176                           ;FastBuggy17_Main_Code_TUNING.c: 1027: Kd_stored = ReadIntEEPROM(0x0012);
  2177  000812  0E00               	movlw	0
  2178  000814  0100               	movlb	0	; () banked
  2179  000816  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2180  000818  0E12               	movlw	18
  2181  00081A  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2182  00081C  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  2183  000820  C0D0  F124         	movff	?_ReadIntEEPROM,main@Kd_stored
  2184  000824  C0D1  F125         	movff	?_ReadIntEEPROM+1,main@Kd_stored+1
  2185                           
  2186                           ;FastBuggy17_Main_Code_TUNING.c: 1028: Ki_stored = ReadIntEEPROM(0x0014);
  2187  000828  0E00               	movlw	0
  2188  00082A  0100               	movlb	0	; () banked
  2189  00082C  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  2190  00082E  0E14               	movlw	20
  2191  000830  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  2192  000832  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  2193  000836  C0D0  F126         	movff	?_ReadIntEEPROM,main@Ki_stored
  2194  00083A  C0D1  F127         	movff	?_ReadIntEEPROM+1,main@Ki_stored+1
  2195                           
  2196                           ;FastBuggy17_Main_Code_TUNING.c: 1030: SendStoredPIDValues(Kp_stored, Kd_stored, Ki_stor
      +                          ed);
  2197  00083E  C122  F0D6         	movff	main@Kp_stored,SendStoredPIDValues@Kp
  2198  000842  C123  F0D7         	movff	main@Kp_stored+1,SendStoredPIDValues@Kp+1
  2199  000846  C124  F0D8         	movff	main@Kd_stored,SendStoredPIDValues@Kd
  2200  00084A  C125  F0D9         	movff	main@Kd_stored+1,SendStoredPIDValues@Kd+1
  2201  00084E  C126  F0DA         	movff	main@Ki_stored,SendStoredPIDValues@Ki
  2202  000852  C127  F0DB         	movff	main@Ki_stored+1,SendStoredPIDValues@Ki+1
  2203  000856  ECAC  F00B         	call	_SendStoredPIDValues	;wreg free
  2204                           
  2205                           ;FastBuggy17_Main_Code_TUNING.c: 1032: SetPIDValues();
  2206  00085A  EC40  F004         	call	_SetPIDValues	;wreg free
  2207                           
  2208                           ;FastBuggy17_Main_Code_TUNING.c: 1034: SendCurrentPIDValues(PID_Kp, PID_Kd, PID_Ki);
  2209  00085E  C096  F0D6         	movff	_PID_Kp,SendCurrentPIDValues@Kp
  2210  000862  C097  F0D7         	movff	_PID_Kp+1,SendCurrentPIDValues@Kp+1
  2211  000866  C092  F0D8         	movff	_PID_Kd,SendCurrentPIDValues@Kd
  2212  00086A  C093  F0D9         	movff	_PID_Kd+1,SendCurrentPIDValues@Kd+1
  2213  00086E  C094  F0DA         	movff	_PID_Ki,SendCurrentPIDValues@Ki
  2214  000872  C095  F0DB         	movff	_PID_Ki+1,SendCurrentPIDValues@Ki+1
  2215  000876  EC16  F00C         	call	_SendCurrentPIDValues	;wreg free
  2216  00087A  D564               	goto	l6847
  2217  00087C  EF76  F000         	goto	start
  2218  000880                     __end_of_main:
  2219                           	opt stack 0
  2220                           postinc0	equ	0xFEE
  2221                           wreg	equ	0xFE8
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function ___awdiv *****************
  2225 ;; Defined at:
  2226 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  dividend        2   16[BANK0 ] int 
  2229 ;;  divisor         2   18[BANK0 ] int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  quotient        2   22[BANK0 ] int 
  2232 ;;  sign            1   21[BANK0 ] unsigned char 
  2233 ;;  counter         1   20[BANK0 ] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2   16[BANK0 ] int 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:        8 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    7
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text1
  2258  000E94                     __ptext1:
  2259                           	opt stack 0
  2260  000E94                     ___awdiv:
  2261                           	opt stack 23
  2262                           
  2263                           ;incstack = 0
  2264  000E94  0E00               	movlw	0
  2265  000E96  0100               	movlb	0	; () banked
  2266  000E98  6FD3               	movwf	___awdiv@sign& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269  000E9A  0100               	movlb	0	; () banked
  2270  000E9C  AFD1               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2271  000E9E  D009               	goto	l6541
  2272                           
  2273                           ; BSR set to: 0
  2274  000EA0  0100               	movlb	0	; () banked
  2275  000EA2  6DD0               	negf	___awdiv@divisor& (0+255),b
  2276  000EA4  1FD1               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2277  000EA6  B0D8               	btfsc	status,0,c
  2278  000EA8  2BD1               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2279                           
  2280                           ; BSR set to: 0
  2281  000EAA  0E01               	movlw	1
  2282  000EAC  0100               	movlb	0	; () banked
  2283  000EAE  6FD3               	movwf	___awdiv@sign& (0+255),b
  2284  000EB0  D000               	goto	l6541
  2285  000EB2                     l6541:
  2286                           
  2287                           ; BSR set to: 0
  2288  000EB2  0100               	movlb	0	; () banked
  2289  000EB4  AFCF               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2290  000EB6  D009               	goto	l6547
  2291                           
  2292                           ; BSR set to: 0
  2293  000EB8  0100               	movlb	0	; () banked
  2294  000EBA  6DCE               	negf	___awdiv@dividend& (0+255),b
  2295  000EBC  1FCF               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2296  000EBE  B0D8               	btfsc	status,0,c
  2297  000EC0  2BCF               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2298                           
  2299                           ; BSR set to: 0
  2300  000EC2  0E01               	movlw	1
  2301  000EC4  0100               	movlb	0	; () banked
  2302  000EC6  1BD3               	xorwf	___awdiv@sign& (0+255),f,b
  2303  000EC8  D000               	goto	l6547
  2304  000ECA                     l6547:
  2305                           
  2306                           ; BSR set to: 0
  2307  000ECA  0E00               	movlw	0
  2308  000ECC  0100               	movlb	0	; () banked
  2309  000ECE  6FD5               	movwf	(___awdiv@quotient+1)& (0+255),b
  2310  000ED0  0E00               	movlw	0
  2311  000ED2  6FD4               	movwf	___awdiv@quotient& (0+255),b
  2312                           
  2313                           ; BSR set to: 0
  2314  000ED4  0100               	movlb	0	; () banked
  2315  000ED6  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2316  000ED8  0100               	movlb	0	; () banked
  2317  000EDA  11D1               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2318  000EDC  B4D8               	btfsc	status,2,c
  2319  000EDE  D031               	goto	l6569
  2320                           
  2321                           ; BSR set to: 0
  2322  000EE0  0E01               	movlw	1
  2323  000EE2  0100               	movlb	0	; () banked
  2324  000EE4  6FD2               	movwf	___awdiv@counter& (0+255),b
  2325  000EE6  D007               	goto	l6555
  2326  000EE8                     l6553:
  2327                           
  2328                           ; BSR set to: 0
  2329  000EE8  0100               	movlb	0	; () banked
  2330  000EEA  90D8               	bcf	status,0,c
  2331  000EEC  37D0               	rlcf	___awdiv@divisor& (0+255),f,b
  2332  000EEE  37D1               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2333  000EF0  0100               	movlb	0	; () banked
  2334  000EF2  2BD2               	incf	___awdiv@counter& (0+255),f,b
  2335  000EF4  D000               	goto	l6555
  2336  000EF6                     l6555:
  2337                           
  2338                           ; BSR set to: 0
  2339  000EF6  0100               	movlb	0	; () banked
  2340  000EF8  BFD1               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2341  000EFA  D002               	goto	l6557
  2342  000EFC  D7F5               	goto	l6553
  2343                           
  2344                           ; BSR set to: 0
  2345  000EFE  D000               	goto	l6557
  2346  000F00                     l6557:
  2347                           
  2348                           ; BSR set to: 0
  2349  000F00  0100               	movlb	0	; () banked
  2350  000F02  90D8               	bcf	status,0,c
  2351  000F04  37D4               	rlcf	___awdiv@quotient& (0+255),f,b
  2352  000F06  37D5               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2353                           
  2354                           ; BSR set to: 0
  2355  000F08  0100               	movlb	0	; () banked
  2356  000F0A  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2357  000F0C  0100               	movlb	0	; () banked
  2358  000F0E  5DCE               	subwf	___awdiv@dividend& (0+255),w,b
  2359  000F10  0100               	movlb	0	; () banked
  2360  000F12  51D1               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2361  000F14  0100               	movlb	0	; () banked
  2362  000F16  59CF               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2363  000F18  A0D8               	btfss	status,0,c
  2364  000F1A  D00B               	goto	l6565
  2365                           
  2366                           ; BSR set to: 0
  2367  000F1C  0100               	movlb	0	; () banked
  2368  000F1E  51D0               	movf	___awdiv@divisor& (0+255),w,b
  2369  000F20  0100               	movlb	0	; () banked
  2370  000F22  5FCE               	subwf	___awdiv@dividend& (0+255),f,b
  2371  000F24  0100               	movlb	0	; () banked
  2372  000F26  51D1               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2373  000F28  0100               	movlb	0	; () banked
  2374  000F2A  5BCF               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2375                           
  2376                           ; BSR set to: 0
  2377  000F2C  0100               	movlb	0	; () banked
  2378  000F2E  81D4               	bsf	___awdiv@quotient& (0+255),0,b
  2379  000F30  D000               	goto	l6565
  2380  000F32                     l6565:
  2381                           
  2382                           ; BSR set to: 0
  2383  000F32  0100               	movlb	0	; () banked
  2384  000F34  90D8               	bcf	status,0,c
  2385  000F36  33D1               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2386  000F38  33D0               	rrcf	___awdiv@divisor& (0+255),f,b
  2387                           
  2388                           ; BSR set to: 0
  2389  000F3A  0100               	movlb	0	; () banked
  2390  000F3C  2FD2               	decfsz	___awdiv@counter& (0+255),f,b
  2391  000F3E  D7E0               	goto	l6557
  2392                           
  2393                           ; BSR set to: 0
  2394  000F40  D000               	goto	l6569
  2395  000F42                     l6569:
  2396                           
  2397                           ; BSR set to: 0
  2398  000F42  0100               	movlb	0	; () banked
  2399  000F44  51D3               	movf	___awdiv@sign& (0+255),w,b
  2400  000F46  0100               	movlb	0	; () banked
  2401  000F48  B4D8               	btfsc	status,2,c
  2402  000F4A  D006               	goto	l6573
  2403                           
  2404                           ; BSR set to: 0
  2405  000F4C  0100               	movlb	0	; () banked
  2406  000F4E  6DD4               	negf	___awdiv@quotient& (0+255),b
  2407  000F50  1FD5               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2408  000F52  B0D8               	btfsc	status,0,c
  2409  000F54  2BD5               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2410  000F56  D000               	goto	l6573
  2411  000F58                     l6573:
  2412                           
  2413                           ; BSR set to: 0
  2414  000F58  C0D4  F0CE         	movff	___awdiv@quotient,?___awdiv
  2415  000F5C  C0D5  F0CF         	movff	___awdiv@quotient+1,?___awdiv+1
  2416  000F60  D000               	goto	l1441
  2417  000F62                     l1441:
  2418                           
  2419                           ; BSR set to: 0
  2420  000F62  0012               	return		;funcret
  2421  000F64                     __end_of___awdiv:
  2422                           	opt stack 0
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _StopMotors *****************
  2428 ;; Defined at:
  2429 ;;		line 128 in file "Motors.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    9
  2450 ;; This function calls:
  2451 ;;		_SetDCMotorL
  2452 ;;		_SetDCMotorR
  2453 ;; This function is called by:
  2454 ;;		_main
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text2
  2459  0021DC                     __ptext2:
  2460                           	opt stack 0
  2461  0021DC                     _StopMotors:
  2462                           	opt stack 21
  2463                           
  2464                           ;Motors.c: 130: SetDCMotorR(526);
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;incstack = 0
  2468  0021DC  0E02               	movlw	2
  2469  0021DE  0100               	movlb	0	; () banked
  2470  0021E0  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2471  0021E2  0E0E               	movlw	14
  2472  0021E4  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2473  0021E6  EC03  F012         	call	_SetDCMotorR	;wreg free
  2474                           
  2475                           ;Motors.c: 131: SetDCMotorL(526);
  2476  0021EA  0E02               	movlw	2
  2477  0021EC  0100               	movlb	0	; () banked
  2478  0021EE  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2479  0021F0  0E0E               	movlw	14
  2480  0021F2  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2481  0021F4  EC0A  F012         	call	_SetDCMotorL	;wreg free
  2482  0021F8  0012               	return		;funcret
  2483  0021FA                     __end_of_StopMotors:
  2484                           	opt stack 0
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _SetUnipolar *****************
  2490 ;; Defined at:
  2491 ;;		line 121 in file "Motors.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		None
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    7
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text3
  2520  0024B4                     __ptext3:
  2521                           	opt stack 0
  2522  0024B4                     _SetUnipolar:
  2523                           	opt stack 23
  2524                           
  2525                           ;Motors.c: 123: LATDbits.LATD0 = 0;
  2526                           
  2527                           ;incstack = 0
  2528  0024B4  908C               	bcf	3980,0,c	;volatile
  2529                           
  2530                           ;Motors.c: 124: LATDbits.LATD2 = 0;
  2531  0024B6  948C               	bcf	3980,2,c	;volatile
  2532  0024B8  0012               	return		;funcret
  2533  0024BA                     __end_of_SetUnipolar:
  2534                           	opt stack 0
  2535                           postinc0	equ	0xFEE
  2536                           wreg	equ	0xFE8
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _SetReverseMotorL *****************
  2540 ;; Defined at:
  2541 ;;		line 96 in file "Motors.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		None
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    7
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text4
  2570  0024C6                     __ptext4:
  2571                           	opt stack 0
  2572  0024C6                     _SetReverseMotorL:
  2573                           	opt stack 23
  2574                           
  2575                           ;Motors.c: 98: LATDbits.LATD3 = 0;
  2576                           
  2577                           ;incstack = 0
  2578  0024C6  968C               	bcf	3980,3,c	;volatile
  2579  0024C8  0012               	return		;funcret
  2580  0024CA                     __end_of_SetReverseMotorL:
  2581                           	opt stack 0
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _SetForwardsMotorR *****************
  2587 ;; Defined at:
  2588 ;;		line 78 in file "Motors.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		None
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    7
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text5
  2617  0024CA                     __ptext5:
  2618                           	opt stack 0
  2619  0024CA                     _SetForwardsMotorR:
  2620                           	opt stack 23
  2621                           
  2622                           ;Motors.c: 80: LATDbits.LATD1 = 1;
  2623                           
  2624                           ;incstack = 0
  2625  0024CA  828C               	bsf	3980,1,c	;volatile
  2626  0024CC  0012               	return		;funcret
  2627  0024CE                     __end_of_SetForwardsMotorR:
  2628                           	opt stack 0
  2629                           postinc0	equ	0xFEE
  2630                           wreg	equ	0xFE8
  2631                           status	equ	0xFD8
  2632                           
  2633 ;; *************** function _SetDirectionForward *****************
  2634 ;; Defined at:
  2635 ;;		line 64 in file "Motors.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		None
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    7
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text6
  2664  0024BA                     __ptext6:
  2665                           	opt stack 0
  2666  0024BA                     _SetDirectionForward:
  2667                           	opt stack 23
  2668                           
  2669                           ;Motors.c: 66: LATDbits.LATD3 = 1;
  2670                           
  2671                           ;incstack = 0
  2672  0024BA  868C               	bsf	3980,3,c	;volatile
  2673                           
  2674                           ;Motors.c: 67: LATDbits.LATD1 = 1;
  2675  0024BC  828C               	bsf	3980,1,c	;volatile
  2676  0024BE  0012               	return		;funcret
  2677  0024C0                     __end_of_SetDirectionForward:
  2678                           	opt stack 0
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _SetDCMotorPID *****************
  2684 ;; Defined at:
  2685 ;;		line 47 in file "Motors.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  PIDoutput       2   24[BANK0 ] int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:        4 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    9
  2706 ;; This function calls:
  2707 ;;		_SetDCMotorL
  2708 ;;		_SetDCMotorR
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text7
  2715  001184                     __ptext7:
  2716                           	opt stack 0
  2717  001184                     _SetDCMotorPID:
  2718                           	opt stack 21
  2719                           
  2720                           ;Motors.c: 49: if(PIDoutput < 0) {
  2721                           
  2722                           ;incstack = 0
  2723  001184  0100               	movlb	0	; () banked
  2724  001186  AFD7               	btfss	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2725  001188  D01D               	goto	l6289
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;Motors.c: 50: SetDCMotorL(280 - PIDoutput);
  2729  00118A  C0D6  F0D8         	movff	SetDCMotorPID@PIDoutput,??_SetDCMotorPID
  2730  00118E  C0D7  F0D9         	movff	SetDCMotorPID@PIDoutput+1,??_SetDCMotorPID+1
  2731  001192  0100               	movlb	0	; () banked
  2732  001194  1FD8               	comf	??_SetDCMotorPID& (0+255),f,b
  2733  001196  1FD9               	comf	(??_SetDCMotorPID+1)& (0+255),f,b
  2734  001198  4BD8               	infsnz	??_SetDCMotorPID& (0+255),f,b
  2735  00119A  2BD9               	incf	(??_SetDCMotorPID+1)& (0+255),f,b
  2736  00119C  0E18               	movlw	24
  2737  00119E  0100               	movlb	0	; () banked
  2738  0011A0  25D8               	addwf	??_SetDCMotorPID& (0+255),w,b
  2739  0011A2  0100               	movlb	0	; () banked
  2740  0011A4  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2741  0011A6  0E01               	movlw	1
  2742  0011A8  0100               	movlb	0	; () banked
  2743  0011AA  21D9               	addwfc	(??_SetDCMotorPID+1)& (0+255),w,b
  2744  0011AC  0100               	movlb	0	; () banked
  2745  0011AE  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2746  0011B0  EC0A  F012         	call	_SetDCMotorL	;wreg free
  2747                           
  2748                           ;Motors.c: 51: SetDCMotorR(280);
  2749  0011B4  0E01               	movlw	1
  2750  0011B6  0100               	movlb	0	; () banked
  2751  0011B8  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2752  0011BA  0E18               	movlw	24
  2753  0011BC  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2754  0011BE  EC03  F012         	call	_SetDCMotorR	;wreg free
  2755                           
  2756                           ;Motors.c: 52: }
  2757  0011C2  D033               	goto	l128
  2758  0011C4                     l6289:
  2759                           
  2760                           ;Motors.c: 53: else if(PIDoutput > 0) {
  2761  0011C4  0100               	movlb	0	; () banked
  2762  0011C6  BFD7               	btfsc	(SetDCMotorPID@PIDoutput+1)& (0+255),7,b
  2763  0011C8  D01B               	goto	l6293
  2764  0011CA  0100               	movlb	0	; () banked
  2765  0011CC  51D7               	movf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2766  0011CE  E104               	bnz	u5340
  2767  0011D0  0100               	movlb	0	; () banked
  2768  0011D2  05D6               	decf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2769  0011D4  A0D8               	btfss	status,0,c
  2770  0011D6  D014               	goto	l6293
  2771  0011D8                     u5340:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;Motors.c: 54: SetDCMotorL(280);
  2775  0011D8  0E01               	movlw	1
  2776  0011DA  0100               	movlb	0	; () banked
  2777  0011DC  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2778  0011DE  0E18               	movlw	24
  2779  0011E0  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2780  0011E2  EC0A  F012         	call	_SetDCMotorL	;wreg free
  2781                           
  2782                           ;Motors.c: 55: SetDCMotorR(280 + PIDoutput);
  2783  0011E6  0E18               	movlw	24
  2784  0011E8  0100               	movlb	0	; () banked
  2785  0011EA  25D6               	addwf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2786  0011EC  0100               	movlb	0	; () banked
  2787  0011EE  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2788  0011F0  0E01               	movlw	1
  2789  0011F2  0100               	movlb	0	; () banked
  2790  0011F4  21D7               	addwfc	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2791  0011F6  0100               	movlb	0	; () banked
  2792  0011F8  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2793  0011FA  EC03  F012         	call	_SetDCMotorR	;wreg free
  2794                           
  2795                           ;Motors.c: 56: }
  2796  0011FE  D015               	goto	l128
  2797  001200                     l6293:
  2798                           
  2799                           ;Motors.c: 57: else if(PIDoutput == 0) {
  2800  001200  0100               	movlb	0	; () banked
  2801  001202  51D6               	movf	SetDCMotorPID@PIDoutput& (0+255),w,b
  2802  001204  0100               	movlb	0	; () banked
  2803  001206  11D7               	iorwf	(SetDCMotorPID@PIDoutput+1)& (0+255),w,b
  2804  001208  A4D8               	btfss	status,2,c
  2805  00120A  D00F               	goto	l128
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;Motors.c: 58: SetDCMotorL(280);
  2809  00120C  0E01               	movlw	1
  2810  00120E  0100               	movlb	0	; () banked
  2811  001210  6FD5               	movwf	(SetDCMotorL@duty_cycle+1)& (0+255),b
  2812  001212  0E18               	movlw	24
  2813  001214  6FD4               	movwf	SetDCMotorL@duty_cycle& (0+255),b
  2814  001216  EC0A  F012         	call	_SetDCMotorL	;wreg free
  2815                           
  2816                           ;Motors.c: 59: SetDCMotorR(280);
  2817  00121A  0E01               	movlw	1
  2818  00121C  0100               	movlb	0	; () banked
  2819  00121E  6FD5               	movwf	(SetDCMotorR@duty_cycle+1)& (0+255),b
  2820  001220  0E18               	movlw	24
  2821  001222  6FD4               	movwf	SetDCMotorR@duty_cycle& (0+255),b
  2822  001224  EC03  F012         	call	_SetDCMotorR	;wreg free
  2823  001228  D000               	goto	l128
  2824  00122A                     l128:
  2825  00122A  0012               	return		;funcret
  2826  00122C                     __end_of_SetDCMotorPID:
  2827                           	opt stack 0
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function _SetDCMotorR *****************
  2833 ;; Defined at:
  2834 ;;		line 19 in file "Motors.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;		None               void
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    8
  2855 ;; This function calls:
  2856 ;;		_SetDCPWM4
  2857 ;; This function is called by:
  2858 ;;		_SetDCMotorPID
  2859 ;;		_StopMotors
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text8
  2865  002406                     __ptext8:
  2866                           	opt stack 0
  2867  002406                     _SetDCMotorR:
  2868                           	opt stack 21
  2869                           
  2870                           ;Motors.c: 21: SetDCPWM4(duty_cycle);
  2871                           
  2872                           ;incstack = 0
  2873  002406  C0D4  F0CE         	movff	SetDCMotorR@duty_cycle,SetDCPWM4@dutycycle
  2874  00240A  C0D5  F0CF         	movff	SetDCMotorR@duty_cycle+1,SetDCPWM4@dutycycle+1
  2875  00240E  ECC0  F00D         	call	_SetDCPWM4	;wreg free
  2876  002412  0012               	return		;funcret
  2877  002414                     __end_of_SetDCMotorR:
  2878                           	opt stack 0
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           status	equ	0xFD8
  2882                           
  2883 ;; *************** function _SetDCPWM4 *****************
  2884 ;; Defined at:
  2885 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4setdc.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  2890 ;; Return value:  Size  Location     Type
  2891 ;;		None               void
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;Total ram usage:        6 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    7
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_SetDCMotorR
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text9
  2914  001B80                     __ptext9:
  2915                           	opt stack 0
  2916  001B80                     _SetDCPWM4:
  2917                           	opt stack 21
  2918                           
  2919                           ;incstack = 0
  2920  001B80  C0CE  F0D0         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
  2921  001B84  C0CF  F0D1         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
  2922  001B88  0E06               	movlw	6
  2923  001B8A                     u4755:
  2924  001B8A  90D8               	bcf	status,0,c
  2925  001B8C  0100               	movlb	0	; () banked
  2926  001B8E  37D0               	rlcf	??_SetDCPWM4& (0+255),f,b
  2927  001B90  37D1               	rlcf	(??_SetDCPWM4+1)& (0+255),f,b
  2928  001B92  2EE8               	decfsz	wreg,f,c
  2929  001B94  D7FA               	goto	u4755
  2930  001B96  C0D0  F0D2         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
  2931  001B9A  C0D1  F0D3         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
  2932                           
  2933                           ; BSR set to: 0
  2934  001B9E  C0D3  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
  2935  001BA2  C0D2  F0D0         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
  2936  001BA6  0100               	movlb	0	; () banked
  2937  001BA8  90D8               	bcf	status,0,c
  2938  001BAA  33D0               	rrcf	??_SetDCPWM4& (0+255),f,b
  2939  001BAC  0100               	movlb	0	; () banked
  2940  001BAE  90D8               	bcf	status,0,c
  2941  001BB0  33D0               	rrcf	??_SetDCPWM4& (0+255),f,b
  2942  001BB2  0E30               	movlw	48
  2943  001BB4  0100               	movlb	0	; () banked
  2944  001BB6  17D0               	andwf	??_SetDCPWM4& (0+255),f,b
  2945  001BB8  5073               	movf	3955,w,c	;volatile
  2946  001BBA  0BCF               	andlw	207
  2947  001BBC  0100               	movlb	0	; () banked
  2948  001BBE  11D0               	iorwf	??_SetDCPWM4& (0+255),w,b
  2949  001BC0  6E73               	movwf	3955,c	;volatile
  2950                           
  2951                           ; BSR set to: 0
  2952  001BC2  0012               	return		;funcret
  2953  001BC4                     __end_of_SetDCPWM4:
  2954                           	opt stack 0
  2955                           postinc0	equ	0xFEE
  2956                           wreg	equ	0xFE8
  2957                           status	equ	0xFD8
  2958                           
  2959 ;; *************** function _SetDCMotorL *****************
  2960 ;; Defined at:
  2961 ;;		line 6 in file "Motors.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  duty_cycle      2   22[BANK0 ] unsigned int 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    8
  2982 ;; This function calls:
  2983 ;;		_SetDCPWM5
  2984 ;; This function is called by:
  2985 ;;		_SetDCMotorPID
  2986 ;;		_StopMotors
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text10
  2992  002414                     __ptext10:
  2993                           	opt stack 0
  2994  002414                     _SetDCMotorL:
  2995                           	opt stack 21
  2996                           
  2997                           ;Motors.c: 8: SetDCPWM5(duty_cycle);
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;incstack = 0
  3001  002414  C0D4  F0CE         	movff	SetDCMotorL@duty_cycle,SetDCPWM5@dutycycle
  3002  002418  C0D5  F0CF         	movff	SetDCMotorL@duty_cycle+1,SetDCPWM5@dutycycle+1
  3003  00241C  ECE2  F00D         	call	_SetDCPWM5	;wreg free
  3004  002420  0012               	return		;funcret
  3005  002422                     __end_of_SetDCMotorL:
  3006                           	opt stack 0
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _SetDCPWM5 *****************
  3012 ;; Defined at:
  3013 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5setdc.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  dutycycle       2   16[BANK0 ] unsigned int 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  DCycle          2   20[BANK0 ] struct PWMDC
  3018 ;; Return value:  Size  Location     Type
  3019 ;;		None               void
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        6 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    7
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_SetDCMotorL
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text11
  3042  001BC4                     __ptext11:
  3043                           	opt stack 0
  3044  001BC4                     _SetDCPWM5:
  3045                           	opt stack 21
  3046                           
  3047                           ;incstack = 0
  3048  001BC4  C0CE  F0D0         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  3049  001BC8  C0CF  F0D1         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  3050  001BCC  0E06               	movlw	6
  3051  001BCE                     u4745:
  3052  001BCE  90D8               	bcf	status,0,c
  3053  001BD0  0100               	movlb	0	; () banked
  3054  001BD2  37D0               	rlcf	??_SetDCPWM5& (0+255),f,b
  3055  001BD4  37D1               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  3056  001BD6  2EE8               	decfsz	wreg,f,c
  3057  001BD8  D7FA               	goto	u4745
  3058  001BDA  C0D0  F0D2         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  3059  001BDE  C0D1  F0D3         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  3060                           
  3061                           ; BSR set to: 0
  3062  001BE2  C0D3  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
  3063  001BE6  C0D2  F0D0         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  3064  001BEA  0100               	movlb	0	; () banked
  3065  001BEC  90D8               	bcf	status,0,c
  3066  001BEE  33D0               	rrcf	??_SetDCPWM5& (0+255),f,b
  3067  001BF0  0100               	movlb	0	; () banked
  3068  001BF2  90D8               	bcf	status,0,c
  3069  001BF4  33D0               	rrcf	??_SetDCPWM5& (0+255),f,b
  3070  001BF6  0E30               	movlw	48
  3071  001BF8  0100               	movlb	0	; () banked
  3072  001BFA  17D0               	andwf	??_SetDCPWM5& (0+255),f,b
  3073  001BFC  5070               	movf	3952,w,c	;volatile
  3074  001BFE  0BCF               	andlw	207
  3075  001C00  0100               	movlb	0	; () banked
  3076  001C02  11D0               	iorwf	??_SetDCPWM5& (0+255),w,b
  3077  001C04  6E70               	movwf	3952,c	;volatile
  3078                           
  3079                           ; BSR set to: 0
  3080  001C06  0012               	return		;funcret
  3081  001C08                     __end_of_SetDCPWM5:
  3082                           	opt stack 0
  3083                           postinc0	equ	0xFEE
  3084                           wreg	equ	0xFE8
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _SendThreshold *****************
  3088 ;; Defined at:
  3089 ;;		line 186 in file "Wireless.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  sensor_thres    2   24[BANK0 ] PTR const int 
  3092 ;;		 -> sensor_threshold(2), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        4 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    9
  3111 ;; This function calls:
  3112 ;;		_BusyTx
  3113 ;;		_FlushTxBuf
  3114 ;;		_PutCharTxBuf
  3115 ;;		_StartTx
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text12
  3122  001680                     __ptext12:
  3123                           	opt stack 0
  3124  001680                     _SendThreshold:
  3125                           	opt stack 21
  3126                           
  3127                           ;Wireless.c: 187: while(BusyTx());
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;incstack = 0
  3131  001680  D000               	goto	l6373
  3132  001682                     l6373:
  3133  001682  ECDB  F011         	call	_BusyTx	;wreg free
  3134  001686  0900               	iorlw	0
  3135  001688  A4D8               	btfss	status,2,c
  3136  00168A  D7FB               	goto	l6373
  3137                           
  3138                           ;Wireless.c: 188: FlushTxBuf();
  3139  00168C  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3140                           
  3141                           ;Wireless.c: 190: PutCharTxBuf(0xAA);
  3142  001690  0EAA               	movlw	170
  3143  001692  EC25  F00E         	call	_PutCharTxBuf
  3144                           
  3145                           ;Wireless.c: 191: PutCharTxBuf(0x31);
  3146  001696  0E31               	movlw	49
  3147  001698  EC25  F00E         	call	_PutCharTxBuf
  3148                           
  3149                           ;Wireless.c: 193: PutCharTxBuf((unsigned char)(*sensor_threshold >> 8 & 0x00FF));
  3150  00169C  C0D6  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3151  0016A0  C0D7  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3152  0016A4  CFDE F0D8          	movff	postinc2,??_SendThreshold
  3153  0016A8  CFDD F0D9          	movff	postdec2,??_SendThreshold+1
  3154  0016AC  C0D9  F0D8         	movff	??_SendThreshold+1,??_SendThreshold
  3155  0016B0  0100               	movlb	0	; () banked
  3156  0016B2  6BD9               	clrf	(??_SendThreshold+1)& (0+255),b
  3157  0016B4  BFD8               	btfsc	??_SendThreshold& (0+255),7,b
  3158  0016B6  69D9               	setf	(??_SendThreshold+1)& (0+255),b
  3159  0016B8  0100               	movlb	0	; () banked
  3160  0016BA  51D8               	movf	??_SendThreshold& (0+255),w,b
  3161  0016BC  EC25  F00E         	call	_PutCharTxBuf
  3162                           
  3163                           ;Wireless.c: 194: PutCharTxBuf((unsigned char)(*sensor_threshold & 0x00FF));
  3164  0016C0  C0D6  FFD9         	movff	SendThreshold@sensor_threshold,fsr2l
  3165  0016C4  C0D7  FFDA         	movff	SendThreshold@sensor_threshold+1,fsr2h
  3166  0016C8  50DF               	movf	indf2,w,c
  3167  0016CA  EC25  F00E         	call	_PutCharTxBuf
  3168                           
  3169                           ;Wireless.c: 196: PutCharTxBuf('\r');
  3170  0016CE  0E0D               	movlw	13
  3171  0016D0  EC25  F00E         	call	_PutCharTxBuf
  3172                           
  3173                           ;Wireless.c: 197: PutCharTxBuf('\n');
  3174  0016D4  0E0A               	movlw	10
  3175  0016D6  EC25  F00E         	call	_PutCharTxBuf
  3176                           
  3177                           ;Wireless.c: 198: while (BusyTx());
  3178  0016DA  D000               	goto	l6377
  3179  0016DC                     l6377:
  3180  0016DC  ECDB  F011         	call	_BusyTx	;wreg free
  3181  0016E0  0900               	iorlw	0
  3182  0016E2  A4D8               	btfss	status,2,c
  3183  0016E4  D7FB               	goto	l6377
  3184                           
  3185                           ;Wireless.c: 199: StartTx();
  3186  0016E6  EC4E  F012         	call	_StartTx	;wreg free
  3187  0016EA  0012               	return		;funcret
  3188  0016EC                     __end_of_SendThreshold:
  3189                           	opt stack 0
  3190                           postinc0	equ	0xFEE
  3191                           wreg	equ	0xFE8
  3192                           indf2	equ	0xFDF
  3193                           postinc2	equ	0xFDE
  3194                           postdec2	equ	0xFDD
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8
  3198                           
  3199 ;; *************** function _SendStoredPIDValues *****************
  3200 ;; Defined at:
  3201 ;;		line 223 in file "Wireless.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  Kp              2   24[BANK0 ] int 
  3204 ;;  Kd              2   26[BANK0 ] int 
  3205 ;;  Ki              2   28[BANK0 ] int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:        6 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    9
  3224 ;; This function calls:
  3225 ;;		_BusyTx
  3226 ;;		_FlushTxBuf
  3227 ;;		_PutCharTxBuf
  3228 ;;		_StartTx
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text13
  3235  001758                     __ptext13:
  3236                           	opt stack 0
  3237  001758                     _SendStoredPIDValues:
  3238                           	opt stack 21
  3239                           
  3240                           ;Wireless.c: 224: while(BusyTx());
  3241                           
  3242                           ;incstack = 0
  3243  001758  D000               	goto	l6393
  3244  00175A                     l6393:
  3245  00175A  ECDB  F011         	call	_BusyTx	;wreg free
  3246  00175E  0900               	iorlw	0
  3247  001760  A4D8               	btfss	status,2,c
  3248  001762  D7FB               	goto	l6393
  3249                           
  3250                           ;Wireless.c: 225: FlushTxBuf();
  3251  001764  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3252                           
  3253                           ;Wireless.c: 227: PutCharTxBuf(0xAA);
  3254  001768  0EAA               	movlw	170
  3255  00176A  EC25  F00E         	call	_PutCharTxBuf
  3256                           
  3257                           ;Wireless.c: 228: PutCharTxBuf(0x42);
  3258  00176E  0E42               	movlw	66
  3259  001770  EC25  F00E         	call	_PutCharTxBuf
  3260                           
  3261                           ;Wireless.c: 230: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3262  001774  0100               	movlb	0	; () banked
  3263  001776  51D7               	movf	(SendStoredPIDValues@Kp+1)& (0+255),w,b
  3264  001778  EC25  F00E         	call	_PutCharTxBuf
  3265                           
  3266                           ;Wireless.c: 231: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3267  00177C  0100               	movlb	0	; () banked
  3268  00177E  51D6               	movf	SendStoredPIDValues@Kp& (0+255),w,b
  3269  001780  EC25  F00E         	call	_PutCharTxBuf
  3270                           
  3271                           ;Wireless.c: 232: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3272  001784  0100               	movlb	0	; () banked
  3273  001786  51D9               	movf	(SendStoredPIDValues@Kd+1)& (0+255),w,b
  3274  001788  EC25  F00E         	call	_PutCharTxBuf
  3275                           
  3276                           ;Wireless.c: 233: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3277  00178C  0100               	movlb	0	; () banked
  3278  00178E  51D8               	movf	SendStoredPIDValues@Kd& (0+255),w,b
  3279  001790  EC25  F00E         	call	_PutCharTxBuf
  3280                           
  3281                           ;Wireless.c: 234: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3282  001794  0100               	movlb	0	; () banked
  3283  001796  51DB               	movf	(SendStoredPIDValues@Ki+1)& (0+255),w,b
  3284  001798  EC25  F00E         	call	_PutCharTxBuf
  3285                           
  3286                           ;Wireless.c: 235: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3287  00179C  0100               	movlb	0	; () banked
  3288  00179E  51DA               	movf	SendStoredPIDValues@Ki& (0+255),w,b
  3289  0017A0  EC25  F00E         	call	_PutCharTxBuf
  3290                           
  3291                           ;Wireless.c: 237: PutCharTxBuf('\r');
  3292  0017A4  0E0D               	movlw	13
  3293  0017A6  EC25  F00E         	call	_PutCharTxBuf
  3294                           
  3295                           ;Wireless.c: 238: PutCharTxBuf('\n');
  3296  0017AA  0E0A               	movlw	10
  3297  0017AC  EC25  F00E         	call	_PutCharTxBuf
  3298                           
  3299                           ;Wireless.c: 239: while (BusyTx());
  3300  0017B0  D000               	goto	l6397
  3301  0017B2                     l6397:
  3302  0017B2  ECDB  F011         	call	_BusyTx	;wreg free
  3303  0017B6  0900               	iorlw	0
  3304  0017B8  A4D8               	btfss	status,2,c
  3305  0017BA  D7FB               	goto	l6397
  3306                           
  3307                           ;Wireless.c: 240: StartTx();
  3308  0017BC  EC4E  F012         	call	_StartTx	;wreg free
  3309  0017C0  0012               	return		;funcret
  3310  0017C2                     __end_of_SendStoredPIDValues:
  3311                           	opt stack 0
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           postdec2	equ	0xFDD
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function _SendPIDSetPointOnLine *****************
  3322 ;; Defined at:
  3323 ;;		line 335 in file "Wireless.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  set_point       2   24[BANK0 ] PTR const int 
  3326 ;;		 -> PID_set_point(2), 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;Total ram usage:        4 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    9
  3345 ;; This function calls:
  3346 ;;		_BusyTx
  3347 ;;		_FlushTxBuf
  3348 ;;		_PutCharTxBuf
  3349 ;;		_StartTx
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text14
  3356  0016EC                     __ptext14:
  3357                           	opt stack 0
  3358  0016EC                     _SendPIDSetPointOnLine:
  3359                           	opt stack 21
  3360                           
  3361                           ;Wireless.c: 336: while(BusyTx());
  3362                           
  3363                           ;incstack = 0
  3364  0016EC  D000               	goto	l6423
  3365  0016EE                     l6423:
  3366  0016EE  ECDB  F011         	call	_BusyTx	;wreg free
  3367  0016F2  0900               	iorlw	0
  3368  0016F4  A4D8               	btfss	status,2,c
  3369  0016F6  D7FB               	goto	l6423
  3370                           
  3371                           ;Wireless.c: 337: FlushTxBuf();
  3372  0016F8  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3373                           
  3374                           ;Wireless.c: 339: PutCharTxBuf(0xAA);
  3375  0016FC  0EAA               	movlw	170
  3376  0016FE  EC25  F00E         	call	_PutCharTxBuf
  3377                           
  3378                           ;Wireless.c: 340: PutCharTxBuf(0x07);
  3379  001702  0E07               	movlw	7
  3380  001704  EC25  F00E         	call	_PutCharTxBuf
  3381                           
  3382                           ;Wireless.c: 342: PutCharTxBuf((unsigned char)(*set_point >> 8 & 0x00FF));
  3383  001708  C0D6  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3384  00170C  C0D7  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3385  001710  CFDE F0D8          	movff	postinc2,??_SendPIDSetPointOnLine
  3386  001714  CFDD F0D9          	movff	postdec2,??_SendPIDSetPointOnLine+1
  3387  001718  C0D9  F0D8         	movff	??_SendPIDSetPointOnLine+1,??_SendPIDSetPointOnLine
  3388  00171C  0100               	movlb	0	; () banked
  3389  00171E  6BD9               	clrf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3390  001720  BFD8               	btfsc	??_SendPIDSetPointOnLine& (0+255),7,b
  3391  001722  69D9               	setf	(??_SendPIDSetPointOnLine+1)& (0+255),b
  3392  001724  0100               	movlb	0	; () banked
  3393  001726  51D8               	movf	??_SendPIDSetPointOnLine& (0+255),w,b
  3394  001728  EC25  F00E         	call	_PutCharTxBuf
  3395                           
  3396                           ;Wireless.c: 343: PutCharTxBuf((unsigned char)(*set_point & 0x00FF));
  3397  00172C  C0D6  FFD9         	movff	SendPIDSetPointOnLine@set_point,fsr2l
  3398  001730  C0D7  FFDA         	movff	SendPIDSetPointOnLine@set_point+1,fsr2h
  3399  001734  50DF               	movf	indf2,w,c
  3400  001736  EC25  F00E         	call	_PutCharTxBuf
  3401                           
  3402                           ;Wireless.c: 345: PutCharTxBuf('\r');
  3403  00173A  0E0D               	movlw	13
  3404  00173C  EC25  F00E         	call	_PutCharTxBuf
  3405                           
  3406                           ;Wireless.c: 346: PutCharTxBuf('\n');
  3407  001740  0E0A               	movlw	10
  3408  001742  EC25  F00E         	call	_PutCharTxBuf
  3409                           
  3410                           ;Wireless.c: 347: while (BusyTx());
  3411  001746  D000               	goto	l6427
  3412  001748                     l6427:
  3413  001748  ECDB  F011         	call	_BusyTx	;wreg free
  3414  00174C  0900               	iorlw	0
  3415  00174E  A4D8               	btfss	status,2,c
  3416  001750  D7FB               	goto	l6427
  3417                           
  3418                           ;Wireless.c: 348: StartTx();
  3419  001752  EC4E  F012         	call	_StartTx	;wreg free
  3420  001756  0012               	return		;funcret
  3421  001758                     __end_of_SendPIDSetPointOnLine:
  3422                           	opt stack 0
  3423                           postinc0	equ	0xFEE
  3424                           wreg	equ	0xFE8
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _SendOffsets *****************
  3433 ;; Defined at:
  3434 ;;		line 165 in file "Wireless.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  offsets_arra    2   24[BANK0 ] PTR const int 
  3437 ;;		 -> sensor_offsets(10), 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  index           1   28[BANK0 ] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:        5 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    9
  3456 ;; This function calls:
  3457 ;;		_BusyTx
  3458 ;;		_FlushTxBuf
  3459 ;;		_PutCharTxBuf
  3460 ;;		_StartTx
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text15
  3467  0012D0                     __ptext15:
  3468                           	opt stack 0
  3469  0012D0                     _SendOffsets:
  3470                           	opt stack 21
  3471                           
  3472                           ;Wireless.c: 166: unsigned char index;
  3473                           ;Wireless.c: 168: while(BusyTx());
  3474                           
  3475                           ;incstack = 0
  3476  0012D0  D000               	goto	l6349
  3477  0012D2                     l6349:
  3478  0012D2  ECDB  F011         	call	_BusyTx	;wreg free
  3479  0012D6  0900               	iorlw	0
  3480  0012D8  A4D8               	btfss	status,2,c
  3481  0012DA  D7FB               	goto	l6349
  3482                           
  3483                           ;Wireless.c: 169: FlushTxBuf();
  3484  0012DC  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3485                           
  3486                           ;Wireless.c: 171: PutCharTxBuf(0xAA);
  3487  0012E0  0EAA               	movlw	170
  3488  0012E2  EC25  F00E         	call	_PutCharTxBuf
  3489                           
  3490                           ;Wireless.c: 172: PutCharTxBuf(0x21);
  3491  0012E6  0E21               	movlw	33
  3492  0012E8  EC25  F00E         	call	_PutCharTxBuf
  3493                           
  3494                           ;Wireless.c: 174: for(index = 0; index < 5; index++) {
  3495  0012EC  0E00               	movlw	0
  3496  0012EE  0100               	movlb	0	; () banked
  3497  0012F0  6FDA               	movwf	SendOffsets@index& (0+255),b
  3498  0012F2                     l6355:
  3499                           
  3500                           ; BSR set to: 0
  3501  0012F2  0E04               	movlw	4
  3502  0012F4  0100               	movlb	0	; () banked
  3503  0012F6  65DA               	cpfsgt	SendOffsets@index& (0+255),b
  3504  0012F8  D001               	goto	l6359
  3505                           
  3506                           ; BSR set to: 0
  3507  0012FA  D02C               	goto	l6365
  3508  0012FC                     l6359:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;Wireless.c: 175: PutCharTxBuf((unsigned char)(*(offsets_array + index) >> 8 & 0x00FF));
  3512  0012FC  0100               	movlb	0	; () banked
  3513  0012FE  51DA               	movf	SendOffsets@index& (0+255),w,b
  3514  001300  0D02               	mullw	2
  3515  001302  50F3               	movf	prodl,w,c
  3516  001304  0100               	movlb	0	; () banked
  3517  001306  25D6               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3518  001308  6ED9               	movwf	fsr2l,c
  3519  00130A  50F4               	movf	prodh,w,c
  3520  00130C  0100               	movlb	0	; () banked
  3521  00130E  21D7               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3522  001310  6EDA               	movwf	fsr2h,c
  3523  001312  CFDE F0D8          	movff	postinc2,??_SendOffsets
  3524  001316  CFDD F0D9          	movff	postdec2,??_SendOffsets+1
  3525  00131A  C0D9  F0D8         	movff	??_SendOffsets+1,??_SendOffsets
  3526  00131E  0100               	movlb	0	; () banked
  3527  001320  6BD9               	clrf	(??_SendOffsets+1)& (0+255),b
  3528  001322  BFD8               	btfsc	??_SendOffsets& (0+255),7,b
  3529  001324  69D9               	setf	(??_SendOffsets+1)& (0+255),b
  3530  001326  0100               	movlb	0	; () banked
  3531  001328  51D8               	movf	??_SendOffsets& (0+255),w,b
  3532  00132A  EC25  F00E         	call	_PutCharTxBuf
  3533                           
  3534                           ;Wireless.c: 176: PutCharTxBuf((unsigned char)(*(offsets_array + index) * 0x00FF));
  3535  00132E  0100               	movlb	0	; () banked
  3536  001330  51DA               	movf	SendOffsets@index& (0+255),w,b
  3537  001332  0D02               	mullw	2
  3538  001334  50F3               	movf	prodl,w,c
  3539  001336  0100               	movlb	0	; () banked
  3540  001338  25D6               	addwf	SendOffsets@offsets_array& (0+255),w,b
  3541  00133A  6ED9               	movwf	fsr2l,c
  3542  00133C  50F4               	movf	prodh,w,c
  3543  00133E  0100               	movlb	0	; () banked
  3544  001340  21D7               	addwfc	(SendOffsets@offsets_array+1)& (0+255),w,b
  3545  001342  6EDA               	movwf	fsr2h,c
  3546  001344  50DF               	movf	indf2,w,c
  3547  001346  0DFF               	mullw	255
  3548  001348  50F3               	movf	prodl,w,c
  3549  00134A  EC25  F00E         	call	_PutCharTxBuf
  3550  00134E  0100               	movlb	0	; () banked
  3551  001350  2BDA               	incf	SendOffsets@index& (0+255),f,b
  3552  001352  D7CF               	goto	l6355
  3553  001354                     l6365:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;Wireless.c: 177: }
  3557                           ;Wireless.c: 179: PutCharTxBuf('\r');
  3558  001354  0E0D               	movlw	13
  3559  001356  EC25  F00E         	call	_PutCharTxBuf
  3560                           
  3561                           ;Wireless.c: 180: PutCharTxBuf('\n');
  3562  00135A  0E0A               	movlw	10
  3563  00135C  EC25  F00E         	call	_PutCharTxBuf
  3564                           
  3565                           ;Wireless.c: 181: while(BusyTx());
  3566  001360  D000               	goto	l6367
  3567  001362                     l6367:
  3568  001362  ECDB  F011         	call	_BusyTx	;wreg free
  3569  001366  0900               	iorlw	0
  3570  001368  A4D8               	btfss	status,2,c
  3571  00136A  D7FB               	goto	l6367
  3572                           
  3573                           ;Wireless.c: 182: StartTx();
  3574  00136C  EC4E  F012         	call	_StartTx	;wreg free
  3575  001370  0012               	return		;funcret
  3576  001372                     __end_of_SendOffsets:
  3577                           	opt stack 0
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           indf2	equ	0xFDF
  3583                           postinc2	equ	0xFDE
  3584                           postdec2	equ	0xFDD
  3585                           fsr2h	equ	0xFDA
  3586                           fsr2l	equ	0xFD9
  3587                           status	equ	0xFD8
  3588                           
  3589 ;; *************** function _SendLineMode *****************
  3590 ;; Defined at:
  3591 ;;		line 152 in file "Wireless.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  line_mode       2   24[BANK0 ] PTR const unsigned char 
  3594 ;;		 -> line_mode(1), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;		None               void
  3599 ;; Registers used:
  3600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;Total ram usage:        2 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    9
  3613 ;; This function calls:
  3614 ;;		_BusyTx
  3615 ;;		_FlushTxBuf
  3616 ;;		_PutCharTxBuf
  3617 ;;		_StartTx
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text16
  3624  001D0C                     __ptext16:
  3625                           	opt stack 0
  3626  001D0C                     _SendLineMode:
  3627                           	opt stack 21
  3628                           
  3629                           ;Wireless.c: 153: while(BusyTx());
  3630                           
  3631                           ;incstack = 0
  3632  001D0C  D000               	goto	l6341
  3633  001D0E                     l6341:
  3634  001D0E  ECDB  F011         	call	_BusyTx	;wreg free
  3635  001D12  0900               	iorlw	0
  3636  001D14  A4D8               	btfss	status,2,c
  3637  001D16  D7FB               	goto	l6341
  3638                           
  3639                           ;Wireless.c: 154: FlushTxBuf();
  3640  001D18  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3641                           
  3642                           ;Wireless.c: 156: PutCharTxBuf(0xAA);
  3643  001D1C  0EAA               	movlw	170
  3644  001D1E  EC25  F00E         	call	_PutCharTxBuf
  3645                           
  3646                           ;Wireless.c: 157: PutCharTxBuf(0x11);
  3647  001D22  0E11               	movlw	17
  3648  001D24  EC25  F00E         	call	_PutCharTxBuf
  3649                           
  3650                           ;Wireless.c: 158: PutCharTxBuf((unsigned char)*line_mode);
  3651  001D28  C0D6  FFD9         	movff	SendLineMode@line_mode,fsr2l
  3652  001D2C  C0D7  FFDA         	movff	SendLineMode@line_mode+1,fsr2h
  3653  001D30  50DF               	movf	indf2,w,c
  3654  001D32  EC25  F00E         	call	_PutCharTxBuf
  3655                           
  3656                           ;Wireless.c: 159: PutCharTxBuf('\r');
  3657  001D36  0E0D               	movlw	13
  3658  001D38  EC25  F00E         	call	_PutCharTxBuf
  3659                           
  3660                           ;Wireless.c: 160: PutCharTxBuf('\n');
  3661  001D3C  0E0A               	movlw	10
  3662  001D3E  EC25  F00E         	call	_PutCharTxBuf
  3663                           
  3664                           ;Wireless.c: 162: StartTx();
  3665  001D42  EC4E  F012         	call	_StartTx	;wreg free
  3666  001D46  0012               	return		;funcret
  3667  001D48                     __end_of_SendLineMode:
  3668                           	opt stack 0
  3669                           prodh	equ	0xFF4
  3670                           prodl	equ	0xFF3
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           indf2	equ	0xFDF
  3674                           postinc2	equ	0xFDE
  3675                           postdec2	equ	0xFDD
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _SendDefaultPIDValues *****************
  3681 ;; Defined at:
  3682 ;;		line 203 in file "Wireless.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  Kp              2   24[BANK0 ] int 
  3685 ;;  Kd              2   26[BANK0 ] int 
  3686 ;;  Ki              2   28[BANK0 ] int 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;		None               void
  3691 ;; Registers used:
  3692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3698 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;Total ram usage:        6 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    9
  3705 ;; This function calls:
  3706 ;;		_BusyTx
  3707 ;;		_FlushTxBuf
  3708 ;;		_PutCharTxBuf
  3709 ;;		_StartTx
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text17
  3716  0017C2                     __ptext17:
  3717                           	opt stack 0
  3718  0017C2                     _SendDefaultPIDValues:
  3719                           	opt stack 21
  3720                           
  3721                           ;Wireless.c: 204: while(BusyTx());
  3722                           
  3723                           ;incstack = 0
  3724  0017C2  D000               	goto	l6383
  3725  0017C4                     l6383:
  3726  0017C4  ECDB  F011         	call	_BusyTx	;wreg free
  3727  0017C8  0900               	iorlw	0
  3728  0017CA  A4D8               	btfss	status,2,c
  3729  0017CC  D7FB               	goto	l6383
  3730                           
  3731                           ;Wireless.c: 205: FlushTxBuf();
  3732  0017CE  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3733                           
  3734                           ;Wireless.c: 207: PutCharTxBuf(0xAA);
  3735  0017D2  0EAA               	movlw	170
  3736  0017D4  EC25  F00E         	call	_PutCharTxBuf
  3737                           
  3738                           ;Wireless.c: 208: PutCharTxBuf(0x41);
  3739  0017D8  0E41               	movlw	65
  3740  0017DA  EC25  F00E         	call	_PutCharTxBuf
  3741                           
  3742                           ;Wireless.c: 210: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3743  0017DE  0100               	movlb	0	; () banked
  3744  0017E0  51D7               	movf	(SendDefaultPIDValues@Kp+1)& (0+255),w,b
  3745  0017E2  EC25  F00E         	call	_PutCharTxBuf
  3746                           
  3747                           ;Wireless.c: 211: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3748  0017E6  0100               	movlb	0	; () banked
  3749  0017E8  51D6               	movf	SendDefaultPIDValues@Kp& (0+255),w,b
  3750  0017EA  EC25  F00E         	call	_PutCharTxBuf
  3751                           
  3752                           ;Wireless.c: 212: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3753  0017EE  0100               	movlb	0	; () banked
  3754  0017F0  51D9               	movf	(SendDefaultPIDValues@Kd+1)& (0+255),w,b
  3755  0017F2  EC25  F00E         	call	_PutCharTxBuf
  3756                           
  3757                           ;Wireless.c: 213: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3758  0017F6  0100               	movlb	0	; () banked
  3759  0017F8  51D8               	movf	SendDefaultPIDValues@Kd& (0+255),w,b
  3760  0017FA  EC25  F00E         	call	_PutCharTxBuf
  3761                           
  3762                           ;Wireless.c: 214: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3763  0017FE  0100               	movlb	0	; () banked
  3764  001800  51DB               	movf	(SendDefaultPIDValues@Ki+1)& (0+255),w,b
  3765  001802  EC25  F00E         	call	_PutCharTxBuf
  3766                           
  3767                           ;Wireless.c: 215: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3768  001806  0100               	movlb	0	; () banked
  3769  001808  51DA               	movf	SendDefaultPIDValues@Ki& (0+255),w,b
  3770  00180A  EC25  F00E         	call	_PutCharTxBuf
  3771                           
  3772                           ;Wireless.c: 217: PutCharTxBuf('\r');
  3773  00180E  0E0D               	movlw	13
  3774  001810  EC25  F00E         	call	_PutCharTxBuf
  3775                           
  3776                           ;Wireless.c: 218: PutCharTxBuf('\n');
  3777  001814  0E0A               	movlw	10
  3778  001816  EC25  F00E         	call	_PutCharTxBuf
  3779                           
  3780                           ;Wireless.c: 219: while (BusyTx());
  3781  00181A  D000               	goto	l6387
  3782  00181C                     l6387:
  3783  00181C  ECDB  F011         	call	_BusyTx	;wreg free
  3784  001820  0900               	iorlw	0
  3785  001822  A4D8               	btfss	status,2,c
  3786  001824  D7FB               	goto	l6387
  3787                           
  3788                           ;Wireless.c: 220: StartTx();
  3789  001826  EC4E  F012         	call	_StartTx	;wreg free
  3790  00182A  0012               	return		;funcret
  3791  00182C                     __end_of_SendDefaultPIDValues:
  3792                           	opt stack 0
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           indf2	equ	0xFDF
  3798                           postinc2	equ	0xFDE
  3799                           postdec2	equ	0xFDD
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           
  3804 ;; *************** function _SendCurrentPIDValues *****************
  3805 ;; Defined at:
  3806 ;;		line 243 in file "Wireless.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  Kp              2   24[BANK0 ] int 
  3809 ;;  Kd              2   26[BANK0 ] int 
  3810 ;;  Ki              2   28[BANK0 ] int 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:        6 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    9
  3829 ;; This function calls:
  3830 ;;		_BusyTx
  3831 ;;		_FlushTxBuf
  3832 ;;		_PutCharTxBuf
  3833 ;;		_StartTx
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text18
  3840  00182C                     __ptext18:
  3841                           	opt stack 0
  3842  00182C                     _SendCurrentPIDValues:
  3843                           	opt stack 21
  3844                           
  3845                           ;Wireless.c: 244: while(BusyTx());
  3846                           
  3847                           ;incstack = 0
  3848  00182C  D000               	goto	l6403
  3849  00182E                     l6403:
  3850  00182E  ECDB  F011         	call	_BusyTx	;wreg free
  3851  001832  0900               	iorlw	0
  3852  001834  A4D8               	btfss	status,2,c
  3853  001836  D7FB               	goto	l6403
  3854                           
  3855                           ;Wireless.c: 245: FlushTxBuf();
  3856  001838  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3857                           
  3858                           ;Wireless.c: 247: PutCharTxBuf(0xAA);
  3859  00183C  0EAA               	movlw	170
  3860  00183E  EC25  F00E         	call	_PutCharTxBuf
  3861                           
  3862                           ;Wireless.c: 248: PutCharTxBuf(0x43);
  3863  001842  0E43               	movlw	67
  3864  001844  EC25  F00E         	call	_PutCharTxBuf
  3865                           
  3866                           ;Wireless.c: 250: PutCharTxBuf((unsigned char)(Kp >> 8 & 0x00FF));
  3867  001848  0100               	movlb	0	; () banked
  3868  00184A  51D7               	movf	(SendCurrentPIDValues@Kp+1)& (0+255),w,b
  3869  00184C  EC25  F00E         	call	_PutCharTxBuf
  3870                           
  3871                           ;Wireless.c: 251: PutCharTxBuf((unsigned char)(Kp & 0x00FF));
  3872  001850  0100               	movlb	0	; () banked
  3873  001852  51D6               	movf	SendCurrentPIDValues@Kp& (0+255),w,b
  3874  001854  EC25  F00E         	call	_PutCharTxBuf
  3875                           
  3876                           ;Wireless.c: 252: PutCharTxBuf((unsigned char)(Kd >> 8 & 0x00FF));
  3877  001858  0100               	movlb	0	; () banked
  3878  00185A  51D9               	movf	(SendCurrentPIDValues@Kd+1)& (0+255),w,b
  3879  00185C  EC25  F00E         	call	_PutCharTxBuf
  3880                           
  3881                           ;Wireless.c: 253: PutCharTxBuf((unsigned char)(Kd & 0x00FF));
  3882  001860  0100               	movlb	0	; () banked
  3883  001862  51D8               	movf	SendCurrentPIDValues@Kd& (0+255),w,b
  3884  001864  EC25  F00E         	call	_PutCharTxBuf
  3885                           
  3886                           ;Wireless.c: 254: PutCharTxBuf((unsigned char)(Ki >> 8 & 0x00FF));
  3887  001868  0100               	movlb	0	; () banked
  3888  00186A  51DB               	movf	(SendCurrentPIDValues@Ki+1)& (0+255),w,b
  3889  00186C  EC25  F00E         	call	_PutCharTxBuf
  3890                           
  3891                           ;Wireless.c: 255: PutCharTxBuf((unsigned char)(Ki & 0x00FF));
  3892  001870  0100               	movlb	0	; () banked
  3893  001872  51DA               	movf	SendCurrentPIDValues@Ki& (0+255),w,b
  3894  001874  EC25  F00E         	call	_PutCharTxBuf
  3895                           
  3896                           ;Wireless.c: 257: PutCharTxBuf('\r');
  3897  001878  0E0D               	movlw	13
  3898  00187A  EC25  F00E         	call	_PutCharTxBuf
  3899                           
  3900                           ;Wireless.c: 258: PutCharTxBuf('\n');
  3901  00187E  0E0A               	movlw	10
  3902  001880  EC25  F00E         	call	_PutCharTxBuf
  3903                           
  3904                           ;Wireless.c: 259: while (BusyTx());
  3905  001884  D000               	goto	l6407
  3906  001886                     l6407:
  3907  001886  ECDB  F011         	call	_BusyTx	;wreg free
  3908  00188A  0900               	iorlw	0
  3909  00188C  A4D8               	btfss	status,2,c
  3910  00188E  D7FB               	goto	l6407
  3911                           
  3912                           ;Wireless.c: 260: StartTx();
  3913  001890  EC4E  F012         	call	_StartTx	;wreg free
  3914  001894  0012               	return		;funcret
  3915  001896                     __end_of_SendCurrentPIDValues:
  3916                           	opt stack 0
  3917                           prodh	equ	0xFF4
  3918                           prodl	equ	0xFF3
  3919                           postinc0	equ	0xFEE
  3920                           wreg	equ	0xFE8
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _SendBattVoltageInitial *****************
  3929 ;; Defined at:
  3930 ;;		line 263 in file "Wireless.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  reading         2   24[BANK0 ] PTR const unsigned int 
  3933 ;;		 -> main@battery_voltage(2), 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;		None               void
  3938 ;; Registers used:
  3939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;Total ram usage:        4 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    9
  3952 ;; This function calls:
  3953 ;;		_BusyTx
  3954 ;;		_FlushTxBuf
  3955 ;;		_PutCharTxBuf
  3956 ;;		_StartTx
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text19
  3963  001900                     __ptext19:
  3964                           	opt stack 0
  3965  001900                     _SendBattVoltageInitial:
  3966                           	opt stack 21
  3967                           
  3968                           ;Wireless.c: 264: while(BusyTx());
  3969                           
  3970                           ;incstack = 0
  3971  001900  D000               	goto	l6413
  3972  001902                     l6413:
  3973  001902  ECDB  F011         	call	_BusyTx	;wreg free
  3974  001906  0900               	iorlw	0
  3975  001908  A4D8               	btfss	status,2,c
  3976  00190A  D7FB               	goto	l6413
  3977                           
  3978                           ;Wireless.c: 265: FlushTxBuf();
  3979  00190C  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  3980                           
  3981                           ;Wireless.c: 267: PutCharTxBuf(0xAA);
  3982  001910  0EAA               	movlw	170
  3983  001912  EC25  F00E         	call	_PutCharTxBuf
  3984                           
  3985                           ;Wireless.c: 268: PutCharTxBuf(0x06);
  3986  001916  0E06               	movlw	6
  3987  001918  EC25  F00E         	call	_PutCharTxBuf
  3988                           
  3989                           ;Wireless.c: 270: PutCharTxBuf((unsigned char)(*reading >> 8 & 0x00FF));
  3990  00191C  C0D6  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  3991  001920  C0D7  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  3992  001924  CFDE F0D8          	movff	postinc2,??_SendBattVoltageInitial
  3993  001928  CFDD F0D9          	movff	postdec2,??_SendBattVoltageInitial+1
  3994  00192C  C0D9  F0D8         	movff	??_SendBattVoltageInitial+1,??_SendBattVoltageInitial
  3995  001930  0100               	movlb	0	; () banked
  3996  001932  6BD9               	clrf	(??_SendBattVoltageInitial+1)& (0+255),b
  3997  001934  0100               	movlb	0	; () banked
  3998  001936  51D8               	movf	??_SendBattVoltageInitial& (0+255),w,b
  3999  001938  EC25  F00E         	call	_PutCharTxBuf
  4000                           
  4001                           ;Wireless.c: 271: PutCharTxBuf((unsigned char)(*reading & 0x00FF));
  4002  00193C  C0D6  FFD9         	movff	SendBattVoltageInitial@reading,fsr2l
  4003  001940  C0D7  FFDA         	movff	SendBattVoltageInitial@reading+1,fsr2h
  4004  001944  50DF               	movf	indf2,w,c
  4005  001946  EC25  F00E         	call	_PutCharTxBuf
  4006                           
  4007                           ;Wireless.c: 273: PutCharTxBuf('\r');
  4008  00194A  0E0D               	movlw	13
  4009  00194C  EC25  F00E         	call	_PutCharTxBuf
  4010                           
  4011                           ;Wireless.c: 274: PutCharTxBuf('\n');
  4012  001950  0E0A               	movlw	10
  4013  001952  EC25  F00E         	call	_PutCharTxBuf
  4014                           
  4015                           ;Wireless.c: 275: while (BusyTx());
  4016  001956  D000               	goto	l6417
  4017  001958                     l6417:
  4018  001958  ECDB  F011         	call	_BusyTx	;wreg free
  4019  00195C  0900               	iorlw	0
  4020  00195E  A4D8               	btfss	status,2,c
  4021  001960  D7FB               	goto	l6417
  4022                           
  4023                           ;Wireless.c: 276: StartTx();
  4024  001962  EC4E  F012         	call	_StartTx	;wreg free
  4025  001966  0012               	return		;funcret
  4026  001968                     __end_of_SendBattVoltageInitial:
  4027                           	opt stack 0
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           postinc0	equ	0xFEE
  4031                           wreg	equ	0xFE8
  4032                           indf2	equ	0xFDF
  4033                           postinc2	equ	0xFDE
  4034                           postdec2	equ	0xFDD
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _ResetMillis3 *****************
  4040 ;; Defined at:
  4041 ;;		line 50 in file "MillisecondTimer.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;		None               void
  4048 ;; Registers used:
  4049 ;;		wreg, status,2
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    7
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text20
  4070  00244C                     __ptext20:
  4071                           	opt stack 0
  4072  00244C                     _ResetMillis3:
  4073                           	opt stack 23
  4074                           
  4075                           ;MillisecondTimer.c: 52: millisecond_COUNT3 = 0;
  4076                           
  4077                           ;incstack = 0
  4078  00244C  0E00               	movlw	0
  4079  00244E  6E14               	movwf	_millisecond_COUNT3+1,c	;volatile
  4080  002450  0E00               	movlw	0
  4081  002452  6E13               	movwf	_millisecond_COUNT3,c	;volatile
  4082  002454  0012               	return		;funcret
  4083  002456                     __end_of_ResetMillis3:
  4084                           	opt stack 0
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           postinc0	equ	0xFEE
  4088                           wreg	equ	0xFE8
  4089                           indf2	equ	0xFDF
  4090                           postinc2	equ	0xFDE
  4091                           postdec2	equ	0xFDD
  4092                           fsr2h	equ	0xFDA
  4093                           fsr2l	equ	0xFD9
  4094                           status	equ	0xFD8
  4095                           
  4096 ;; *************** function _ResetMillis1 *****************
  4097 ;; Defined at:
  4098 ;;		line 39 in file "MillisecondTimer.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, status,2
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    7
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_main
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text21
  4127  002456                     __ptext21:
  4128                           	opt stack 0
  4129  002456                     _ResetMillis1:
  4130                           	opt stack 23
  4131                           
  4132                           ;MillisecondTimer.c: 41: millisecond_COUNT1 = 0;
  4133                           
  4134                           ;incstack = 0
  4135  002456  0E00               	movlw	0
  4136  002458  6E10               	movwf	_millisecond_COUNT1+1,c	;volatile
  4137  00245A  0E00               	movlw	0
  4138  00245C  6E0F               	movwf	_millisecond_COUNT1,c	;volatile
  4139  00245E  0012               	return		;funcret
  4140  002460                     __end_of_ResetMillis1:
  4141                           	opt stack 0
  4142                           prodh	equ	0xFF4
  4143                           prodl	equ	0xFF3
  4144                           postinc0	equ	0xFEE
  4145                           wreg	equ	0xFE8
  4146                           indf2	equ	0xFDF
  4147                           postinc2	equ	0xFDE
  4148                           postdec2	equ	0xFDD
  4149                           fsr2h	equ	0xFDA
  4150                           fsr2l	equ	0xFD9
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function _ResetMillis0 *****************
  4154 ;; Defined at:
  4155 ;;		line 33 in file "MillisecondTimer.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    7
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text22
  4184  002460                     __ptext22:
  4185                           	opt stack 0
  4186  002460                     _ResetMillis0:
  4187                           	opt stack 23
  4188                           
  4189                           ;MillisecondTimer.c: 35: millisecond_COUNT0 = 0;
  4190                           
  4191                           ;incstack = 0
  4192  002460  0E00               	movlw	0
  4193  002462  6E0E               	movwf	_millisecond_COUNT0+1,c	;volatile
  4194  002464  0E00               	movlw	0
  4195  002466  6E0D               	movwf	_millisecond_COUNT0,c	;volatile
  4196  002468  0012               	return		;funcret
  4197  00246A                     __end_of_ResetMillis0:
  4198                           	opt stack 0
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           postinc0	equ	0xFEE
  4202                           wreg	equ	0xFE8
  4203                           indf2	equ	0xFDF
  4204                           postinc2	equ	0xFDE
  4205                           postdec2	equ	0xFDD
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function _ResetAccumulatedCurrent *****************
  4211 ;; Defined at:
  4212 ;;		line 103 in file "BatteryLib/ds2781.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;		None               void
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    9
  4233 ;; This function calls:
  4234 ;;		_OWReset
  4235 ;;		_OWWriteByte
  4236 ;; This function is called by:
  4237 ;;		_main
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text23
  4242  002004                     __ptext23:
  4243                           	opt stack 0
  4244  002004                     _ResetAccumulatedCurrent:
  4245                           	opt stack 21
  4246                           
  4247                           ;ds2781.c: 105: if( OWReset() == TRUE)
  4248                           
  4249                           ;incstack = 0
  4250  002004  ECDE  F00E         	call	_OWReset	;wreg free
  4251  002008  06E8               	decf	wreg,f,c
  4252  00200A  A4D8               	btfss	status,2,c
  4253  00200C  D010               	goto	l487
  4254                           
  4255                           ;ds2781.c: 106: {
  4256                           ;ds2781.c: 107: OWWriteByte( 0xCC );
  4257  00200E  0ECC               	movlw	204
  4258  002010  EC18  F010         	call	_OWWriteByte
  4259                           
  4260                           ;ds2781.c: 108: OWWriteByte( 0x6C );
  4261  002014  0E6C               	movlw	108
  4262  002016  EC18  F010         	call	_OWWriteByte
  4263                           
  4264                           ;ds2781.c: 109: OWWriteByte( 0x10 );
  4265  00201A  0E10               	movlw	16
  4266  00201C  EC18  F010         	call	_OWWriteByte
  4267                           
  4268                           ;ds2781.c: 110: OWWriteByte( 0x00 );
  4269  002020  0E00               	movlw	0
  4270  002022  EC18  F010         	call	_OWWriteByte
  4271                           
  4272                           ;ds2781.c: 111: OWWriteByte( 0x00 );
  4273  002026  0E00               	movlw	0
  4274  002028  EC18  F010         	call	_OWWriteByte
  4275  00202C  D000               	goto	l487
  4276  00202E                     l487:
  4277  00202E  0012               	return		;funcret
  4278  002030                     __end_of_ResetAccumulatedCurrent:
  4279                           	opt stack 0
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           indf2	equ	0xFDF
  4285                           postinc2	equ	0xFDE
  4286                           postdec2	equ	0xFDD
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function _ReadVoltage *****************
  4292 ;; Defined at:
  4293 ;;		line 33 in file "BatteryLib/ds2781.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  result          2   24[BANK0 ] unsigned short 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  2   19[BANK0 ] unsigned short 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;Total ram usage:        7 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    9
  4314 ;; This function calls:
  4315 ;;		_OWReadByte
  4316 ;;		_OWReset
  4317 ;;		_OWWriteByte
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text24
  4324  001896                     __ptext24:
  4325                           	opt stack 0
  4326  001896                     _ReadVoltage:
  4327                           	opt stack 21
  4328                           
  4329                           ;ds2781.c: 35: WORD result = 0;
  4330                           
  4331                           ;incstack = 0
  4332  001896  0E00               	movlw	0
  4333  001898  0100               	movlb	0	; () banked
  4334  00189A  6FD7               	movwf	(ReadVoltage@result+1)& (0+255),b
  4335  00189C  0E00               	movlw	0
  4336  00189E  6FD6               	movwf	ReadVoltage@result& (0+255),b
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;ds2781.c: 36: if( OWReset() == TRUE)
  4340  0018A0  ECDE  F00E         	call	_OWReset	;wreg free
  4341  0018A4  06E8               	decf	wreg,f,c
  4342  0018A6  A4D8               	btfss	status,2,c
  4343  0018A8  D017               	goto	l6437
  4344                           
  4345                           ;ds2781.c: 37: {
  4346                           ;ds2781.c: 38: OWWriteByte( 0xCC );
  4347  0018AA  0ECC               	movlw	204
  4348  0018AC  EC18  F010         	call	_OWWriteByte
  4349                           
  4350                           ;ds2781.c: 39: OWWriteByte( 0x69 );
  4351  0018B0  0E69               	movlw	105
  4352  0018B2  EC18  F010         	call	_OWWriteByte
  4353                           
  4354                           ;ds2781.c: 40: OWWriteByte( 0x0C );
  4355  0018B6  0E0C               	movlw	12
  4356  0018B8  EC18  F010         	call	_OWWriteByte
  4357                           
  4358                           ;ds2781.c: 41: result = ((WORD)OWReadByte() ) << 8;
  4359  0018BC  ECFA  F00E         	call	_OWReadByte	;wreg free
  4360  0018C0  0100               	movlb	0	; () banked
  4361  0018C2  6FD7               	movwf	(ReadVoltage@result+1)& (0+255),b
  4362  0018C4  6BD6               	clrf	ReadVoltage@result& (0+255),b
  4363                           
  4364                           ;ds2781.c: 42: result |= ((WORD)OWReadByte() );
  4365  0018C6  ECFA  F00E         	call	_OWReadByte	;wreg free
  4366  0018CA  0100               	movlb	0	; () banked
  4367  0018CC  6FD3               	movwf	??_ReadVoltage& (0+255),b
  4368  0018CE  0100               	movlb	0	; () banked
  4369  0018D0  51D3               	movf	??_ReadVoltage& (0+255),w,b
  4370  0018D2  0100               	movlb	0	; () banked
  4371  0018D4  13D6               	iorwf	ReadVoltage@result& (0+255),f,b
  4372  0018D6  D000               	goto	l6437
  4373  0018D8                     l6437:
  4374                           
  4375                           ;ds2781.c: 43: }
  4376                           ;ds2781.c: 44: return (result >> 5);
  4377  0018D8  C0D6  F0D3         	movff	ReadVoltage@result,??_ReadVoltage
  4378  0018DC  C0D7  F0D4         	movff	ReadVoltage@result+1,??_ReadVoltage+1
  4379  0018E0  0E05               	movlw	5
  4380  0018E2  0100               	movlb	0	; () banked
  4381  0018E4  6FD5               	movwf	(??_ReadVoltage+2)& (0+255),b
  4382  0018E6                     u5545:
  4383  0018E6  0100               	movlb	0	; () banked
  4384  0018E8  90D8               	bcf	status,0,c
  4385  0018EA  33D4               	rrcf	(??_ReadVoltage+1)& (0+255),f,b
  4386  0018EC  33D3               	rrcf	??_ReadVoltage& (0+255),f,b
  4387  0018EE  0100               	movlb	0	; () banked
  4388  0018F0  2FD5               	decfsz	(??_ReadVoltage+2)& (0+255),f,b
  4389  0018F2  D7F9               	goto	u5545
  4390  0018F4  C0D3  F0D1         	movff	??_ReadVoltage,?_ReadVoltage
  4391  0018F8  C0D4  F0D2         	movff	??_ReadVoltage+1,?_ReadVoltage+1
  4392  0018FC  D000               	goto	l475
  4393  0018FE                     l475:
  4394                           
  4395                           ; BSR set to: 0
  4396  0018FE  0012               	return		;funcret
  4397  001900                     __end_of_ReadVoltage:
  4398                           	opt stack 0
  4399                           prodh	equ	0xFF4
  4400                           prodl	equ	0xFF3
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           indf2	equ	0xFDF
  4404                           postinc2	equ	0xFDE
  4405                           postdec2	equ	0xFDD
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _OWWriteByte *****************
  4411 ;; Defined at:
  4412 ;;		line 143 in file "BatteryLib/OneWire.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  byte            1    wreg     unsigned char 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  byte            1   17[BANK0 ] unsigned char 
  4417 ;;  i               1   18[BANK0 ] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;Total ram usage:        2 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    8
  4434 ;; This function calls:
  4435 ;;		_OWWriteBit
  4436 ;; This function is called by:
  4437 ;;		_ReadVoltage
  4438 ;;		_ResetAccumulatedCurrent
  4439 ;;		_ReadCurrent
  4440 ;;		_ReadAccumulatedCurrent
  4441 ;;		_ReadNetAddress
  4442 ;;		_ReadTemperature
  4443 ;;		_ReadCurrentOffset
  4444 ;;		_WriteCurrentOffset
  4445 ;;		_AdjustCurrentOffset
  4446 ;;		_UpdateControlRegister
  4447 ;;		_ReadRAM
  4448 ;;		_WriteRAM
  4449 ;;		_CopyEEPROM
  4450 ;;		_RecallEEPROM
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text25
  4455  002030                     __ptext25:
  4456                           	opt stack 0
  4457  002030                     _OWWriteByte:
  4458                           	opt stack 21
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;incstack = 0
  4462                           ;OWWriteByte@byte stored from wreg
  4463  002030  0100               	movlb	0	; () banked
  4464  002032  6FCF               	movwf	OWWriteByte@byte& (0+255),b
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;OneWire.c: 145: BYTE i;
  4468                           ;OneWire.c: 147: for (i = 0; i < 8; i++)
  4469  002034  0E00               	movlw	0
  4470  002036  0100               	movlb	0	; () banked
  4471  002038  6FD0               	movwf	OWWriteByte@i& (0+255),b
  4472  00203A                     l6027:
  4473                           
  4474                           ; BSR set to: 0
  4475  00203A  0E07               	movlw	7
  4476  00203C  0100               	movlb	0	; () banked
  4477  00203E  65D0               	cpfsgt	OWWriteByte@i& (0+255),b
  4478  002040  D001               	goto	l6031
  4479                           
  4480                           ; BSR set to: 0
  4481  002042  D00B               	goto	l562
  4482  002044                     l6031:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;OneWire.c: 148: {
  4486                           ;OneWire.c: 149: OWWriteBit(byte & 0x01);
  4487  002044  0100               	movlb	0	; () banked
  4488  002046  51CF               	movf	OWWriteByte@byte& (0+255),w,b
  4489  002048  0B01               	andlw	1
  4490  00204A  ECA4  F00E         	call	_OWWriteBit
  4491                           
  4492                           ;OneWire.c: 150: byte >>= 1;
  4493  00204E  0100               	movlb	0	; () banked
  4494  002050  90D8               	bcf	status,0,c
  4495  002052  33CF               	rrcf	OWWriteByte@byte& (0+255),f,b
  4496                           
  4497                           ; BSR set to: 0
  4498  002054  0100               	movlb	0	; () banked
  4499  002056  2BD0               	incf	OWWriteByte@i& (0+255),f,b
  4500  002058  D7F0               	goto	l6027
  4501  00205A                     l562:
  4502                           
  4503                           ; BSR set to: 0
  4504  00205A  0012               	return		;funcret
  4505  00205C                     __end_of_OWWriteByte:
  4506                           	opt stack 0
  4507                           prodh	equ	0xFF4
  4508                           prodl	equ	0xFF3
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           indf2	equ	0xFDF
  4512                           postinc2	equ	0xFDE
  4513                           postdec2	equ	0xFDD
  4514                           fsr2h	equ	0xFDA
  4515                           fsr2l	equ	0xFD9
  4516                           status	equ	0xFD8
  4517                           
  4518 ;; *************** function _OWWriteBit *****************
  4519 ;; Defined at:
  4520 ;;		line 72 in file "BatteryLib/OneWire.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  b               1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  b               1   16[BANK0 ] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;		None               void
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;Total ram usage:        1 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    7
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_OWWriteByte
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text26
  4549  001D48                     __ptext26:
  4550                           	opt stack 0
  4551  001D48                     _OWWriteBit:
  4552                           	opt stack 21
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;incstack = 0
  4556                           ;OWWriteBit@b stored from wreg
  4557  001D48  0100               	movlb	0	; () banked
  4558  001D4A  6FCE               	movwf	OWWriteBit@b& (0+255),b
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;OneWire.c: 74: if (b)
  4562  001D4C  0100               	movlb	0	; () banked
  4563  001D4E  51CE               	movf	OWWriteBit@b& (0+255),w,b
  4564  001D50  0100               	movlb	0	; () banked
  4565  001D52  B4D8               	btfsc	status,2,c
  4566  001D54  D00A               	goto	l552
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;OneWire.c: 75: {
  4570                           ;OneWire.c: 77: LATHbits.LATH3 = 0;
  4571  001D56  9690               	bcf	3984,3,c	;volatile
  4572                           
  4573                           ;OneWire.c: 78: TRISHbits.TRISH3 = 0;
  4574  001D58  9699               	bcf	3993,3,c	;volatile
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;OneWire.c: 80: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4578  001D5A  0E04               	movlw	4
  4579  001D5C                     u6277:
  4580  001D5C  2EE8               	decfsz	wreg,f,c
  4581  001D5E  D7FE               	goto	u6277
  4582                           
  4583                           ;OneWire.c: 83: TRISHbits.TRISH3 = 1;
  4584  001D60  8699               	bsf	3993,3,c	;volatile
  4585                           
  4586                           ;OneWire.c: 84: _delay((unsigned long)((64)*(10000000/4000000.0)));;
  4587  001D62  0E35               	movlw	53
  4588  001D64                     u6287:
  4589  001D64  2EE8               	decfsz	wreg,f,c
  4590  001D66  D7FE               	goto	u6287
  4591  001D68  D009               	goto	L2
  4592  001D6A                     l552:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;OneWire.c: 87: else
  4596                           ;OneWire.c: 88: {
  4597                           ;OneWire.c: 90: LATHbits.LATH3 = 0;
  4598  001D6A  9690               	bcf	3984,3,c	;volatile
  4599                           
  4600                           ;OneWire.c: 91: TRISHbits.TRISH3 = 0;
  4601  001D6C  9699               	bcf	3993,3,c	;volatile
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;OneWire.c: 93: _delay((unsigned long)((60)*(10000000/4000000.0)));;
  4605  001D6E  0E32               	movlw	50
  4606  001D70                     u6297:
  4607  001D70  2EE8               	decfsz	wreg,f,c
  4608  001D72  D7FE               	goto	u6297
  4609                           
  4610                           ;OneWire.c: 96: TRISHbits.TRISH3 = 1;
  4611  001D74  8699               	bsf	3993,3,c	;volatile
  4612                           
  4613                           ;OneWire.c: 97: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4614  001D76  0E08               	movlw	8
  4615  001D78                     u6307:
  4616  001D78  2EE8               	decfsz	wreg,f,c
  4617  001D7A  D7FE               	goto	u6307
  4618  001D7C                     L2:
  4619  001D7C  F000               	nop	
  4620  001D7E  D000               	goto	l554
  4621  001D80                     l554:
  4622  001D80  0012               	return		;funcret
  4623  001D82                     __end_of_OWWriteBit:
  4624                           	opt stack 0
  4625                           prodh	equ	0xFF4
  4626                           prodl	equ	0xFF3
  4627                           postinc0	equ	0xFEE
  4628                           wreg	equ	0xFE8
  4629                           indf2	equ	0xFDF
  4630                           postinc2	equ	0xFDE
  4631                           postdec2	equ	0xFDD
  4632                           fsr2h	equ	0xFDA
  4633                           fsr2l	equ	0xFD9
  4634                           status	equ	0xFD8
  4635                           
  4636 ;; *************** function _OWReset *****************
  4637 ;; Defined at:
  4638 ;;		line 41 in file "BatteryLib/OneWire.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  result          1   16[BANK0 ] enum E6350
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      enum E6350
  4645 ;; Registers used:
  4646 ;;		wreg, status,2
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        1 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    7
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_ReadVoltage
  4663 ;;		_ResetAccumulatedCurrent
  4664 ;;		_ReadCurrent
  4665 ;;		_ReadAccumulatedCurrent
  4666 ;;		_ReadNetAddress
  4667 ;;		_ReadTemperature
  4668 ;;		_ReadCurrentOffset
  4669 ;;		_WriteCurrentOffset
  4670 ;;		_AdjustCurrentOffset
  4671 ;;		_UpdateControlRegister
  4672 ;;		_ReadRAM
  4673 ;;		_WriteRAM
  4674 ;;		_CopyEEPROM
  4675 ;;		_RecallEEPROM
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text27
  4680  001DBC                     __ptext27:
  4681                           	opt stack 0
  4682  001DBC                     _OWReset:
  4683                           	opt stack 22
  4684                           
  4685                           ;OneWire.c: 43: BOOL result = FALSE;
  4686                           
  4687                           ;incstack = 0
  4688  001DBC  0E00               	movlw	0
  4689  001DBE  0100               	movlb	0	; () banked
  4690  001DC0  6FCE               	movwf	OWReset@result& (0+255),b
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;OneWire.c: 45: LATHbits.LATH3 = 0;
  4694  001DC2  9690               	bcf	3984,3,c	;volatile
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;OneWire.c: 46: TRISHbits.TRISH3 = 0;
  4698  001DC4  9699               	bcf	3993,3,c	;volatile
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;OneWire.c: 48: _delay((unsigned long)((480)*(10000000/4000000.0)));;
  4702  001DC6  0EF0               	movlw	240
  4703  001DC8                     u6317:
  4704  001DC8  D000               	nop2	
  4705  001DCA  2EE8               	decfsz	wreg,f,c
  4706  001DCC  D7FD               	goto	u6317
  4707                           
  4708                           ;OneWire.c: 50: TRISHbits.TRISH3 = 1;
  4709  001DCE  8699               	bsf	3993,3,c	;volatile
  4710                           
  4711                           ;OneWire.c: 51: _delay((unsigned long)((68)*(10000000/4000000.0)));;
  4712  001DD0  0E38               	movlw	56
  4713  001DD2                     u6327:
  4714  001DD2  2EE8               	decfsz	wreg,f,c
  4715  001DD4  D7FE               	goto	u6327
  4716  001DD6  D000               	nop2		;nop
  4717                           
  4718                           ;OneWire.c: 53: if(LATHbits.LATH3 == 0)
  4719  001DD8  B690               	btfsc	3984,3,c	;volatile
  4720  001DDA  D004               	goto	l6019
  4721                           
  4722                           ;OneWire.c: 54: {
  4723                           ;OneWire.c: 55: result = TRUE;
  4724  001DDC  0E01               	movlw	1
  4725  001DDE  0100               	movlb	0	; () banked
  4726  001DE0  6FCE               	movwf	OWReset@result& (0+255),b
  4727  001DE2  D000               	goto	l6019
  4728  001DE4                     l6019:
  4729                           
  4730                           ;OneWire.c: 56: }
  4731                           ;OneWire.c: 57: _delay((unsigned long)((405)*(10000000/4000000.0)));;
  4732  001DE4  0EFD               	movlw	253
  4733  001DE6                     u6337:
  4734  001DE6  F000               	nop	
  4735  001DE8  2EE8               	decfsz	wreg,f,c
  4736  001DEA  D7FD               	goto	u6337
  4737                           
  4738                           ;OneWire.c: 59: return result;
  4739  001DEC  0100               	movlb	0	; () banked
  4740  001DEE  51CE               	movf	OWReset@result& (0+255),w,b
  4741  001DF0  D000               	goto	l549
  4742  001DF2                     l549:
  4743                           
  4744                           ; BSR set to: 0
  4745  001DF2  0012               	return		;funcret
  4746  001DF4                     __end_of_OWReset:
  4747                           	opt stack 0
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           postinc0	equ	0xFEE
  4751                           wreg	equ	0xFE8
  4752                           indf2	equ	0xFDF
  4753                           postinc2	equ	0xFDE
  4754                           postdec2	equ	0xFDD
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _OWReadByte *****************
  4760 ;; Defined at:
  4761 ;;		line 163 in file "BatteryLib/OneWire.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  i               1   18[BANK0 ] unsigned char 
  4766 ;;  result          1   17[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      unsigned char 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;Total ram usage:        2 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    8
  4783 ;; This function calls:
  4784 ;;		_OWReadBit
  4785 ;; This function is called by:
  4786 ;;		_ReadVoltage
  4787 ;;		_ReadCurrent
  4788 ;;		_ReadAccumulatedCurrent
  4789 ;;		_ReadTemperature
  4790 ;;		_ReadCurrentOffset
  4791 ;;		_AdjustCurrentOffset
  4792 ;;		_ReadRAM
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text28
  4797  001DF4                     __ptext28:
  4798                           	opt stack 0
  4799  001DF4                     _OWReadByte:
  4800                           	opt stack 21
  4801                           
  4802                           ;OneWire.c: 165: BYTE i, result=0;
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;incstack = 0
  4806  001DF4  0E00               	movlw	0
  4807  001DF6  0100               	movlb	0	; () banked
  4808  001DF8  6FCF               	movwf	OWReadByte@result& (0+255),b
  4809                           
  4810                           ;OneWire.c: 167: for (i = 0; i < 8; i++)
  4811  001DFA  0E00               	movlw	0
  4812  001DFC  0100               	movlb	0	; () banked
  4813  001DFE  6FD0               	movwf	OWReadByte@i& (0+255),b
  4814  001E00                     l6041:
  4815                           
  4816                           ; BSR set to: 0
  4817  001E00  0E07               	movlw	7
  4818  001E02  0100               	movlb	0	; () banked
  4819  001E04  65D0               	cpfsgt	OWReadByte@i& (0+255),b
  4820  001E06  D001               	goto	l6045
  4821                           
  4822                           ; BSR set to: 0
  4823  001E08  D00D               	goto	l6053
  4824  001E0A                     l6045:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;OneWire.c: 168: {
  4828                           ;OneWire.c: 169: result >>= 1;
  4829  001E0A  0100               	movlb	0	; () banked
  4830  001E0C  90D8               	bcf	status,0,c
  4831  001E0E  33CF               	rrcf	OWReadByte@result& (0+255),f,b
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;OneWire.c: 171: if (OWReadBit())
  4835  001E10  ECEA  F00F         	call	_OWReadBit	;wreg free
  4836  001E14  0900               	iorlw	0
  4837  001E16  B4D8               	btfsc	status,2,c
  4838  001E18  D002               	goto	l567
  4839                           
  4840                           ;OneWire.c: 172: result |= 0x80;
  4841  001E1A  0100               	movlb	0	; () banked
  4842  001E1C  8FCF               	bsf	OWReadByte@result& (0+255),7,b
  4843  001E1E                     l567:
  4844  001E1E  0100               	movlb	0	; () banked
  4845  001E20  2BD0               	incf	OWReadByte@i& (0+255),f,b
  4846  001E22  D7EE               	goto	l6041
  4847  001E24                     l6053:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;OneWire.c: 173: }
  4851                           ;OneWire.c: 174: return result;
  4852  001E24  0100               	movlb	0	; () banked
  4853  001E26  51CF               	movf	OWReadByte@result& (0+255),w,b
  4854  001E28  D000               	goto	l568
  4855  001E2A                     l568:
  4856                           
  4857                           ; BSR set to: 0
  4858  001E2A  0012               	return		;funcret
  4859  001E2C                     __end_of_OWReadByte:
  4860                           	opt stack 0
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           postinc0	equ	0xFEE
  4864                           wreg	equ	0xFE8
  4865                           indf2	equ	0xFDF
  4866                           postinc2	equ	0xFDE
  4867                           postdec2	equ	0xFDD
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function _OWReadBit *****************
  4873 ;; Defined at:
  4874 ;;		line 112 in file "BatteryLib/OneWire.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  result          1   16[BANK0 ] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      unsigned char 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;Total ram usage:        1 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    7
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_OWReadByte
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text29
  4903  001FD4                     __ptext29:
  4904                           	opt stack 0
  4905  001FD4                     _OWReadBit:
  4906                           	opt stack 21
  4907                           
  4908                           ;OneWire.c: 114: BYTE result;
  4909                           ;OneWire.c: 116: LATHbits.LATH3 = 0;
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;incstack = 0
  4913  001FD4  9690               	bcf	3984,3,c	;volatile
  4914                           
  4915                           ;OneWire.c: 117: TRISHbits.TRISH3 = 0;
  4916  001FD6  9699               	bcf	3993,3,c	;volatile
  4917                           
  4918                           ;OneWire.c: 119: _delay((unsigned long)((5)*(10000000/4000000.0)));;
  4919  001FD8  0E04               	movlw	4
  4920  001FDA                     u6347:
  4921  001FDA  2EE8               	decfsz	wreg,f,c
  4922  001FDC  D7FE               	goto	u6347
  4923                           
  4924                           ;OneWire.c: 123: TRISHbits.TRISH3 = 1;
  4925  001FDE  8699               	bsf	3993,3,c	;volatile
  4926                           
  4927                           ;OneWire.c: 124: _delay((unsigned long)((10)*(10000000/4000000.0)));;
  4928  001FE0  0E08               	movlw	8
  4929  001FE2                     u6357:
  4930  001FE2  2EE8               	decfsz	wreg,f,c
  4931  001FE4  D7FE               	goto	u6357
  4932  001FE6  F000               	nop	
  4933                           
  4934                           ;OneWire.c: 127: result = PORTHbits.RH3;
  4935  001FE8  0E00               	movlw	0
  4936  001FEA  B687               	btfsc	3975,3,c	;volatile
  4937  001FEC  0E01               	movlw	1
  4938  001FEE  0100               	movlb	0	; () banked
  4939  001FF0  6FCE               	movwf	OWReadBit@result& (0+255),b
  4940                           
  4941                           ;OneWire.c: 128: _delay((unsigned long)((55)*(10000000/4000000.0)));;
  4942  001FF2  0E2D               	movlw	45
  4943  001FF4                     u6367:
  4944  001FF4  2EE8               	decfsz	wreg,f,c
  4945  001FF6  D7FE               	goto	u6367
  4946  001FF8  D000               	nop2		;nop
  4947                           
  4948                           ;OneWire.c: 131: return result & 0x01;
  4949  001FFA  0100               	movlb	0	; () banked
  4950  001FFC  51CE               	movf	OWReadBit@result& (0+255),w,b
  4951  001FFE  0B01               	andlw	1
  4952  002000  D000               	goto	l557
  4953  002002                     l557:
  4954                           
  4955                           ; BSR set to: 0
  4956  002002  0012               	return		;funcret
  4957  002004                     __end_of_OWReadBit:
  4958                           	opt stack 0
  4959                           prodh	equ	0xFF4
  4960                           prodl	equ	0xFF3
  4961                           postinc0	equ	0xFEE
  4962                           wreg	equ	0xFE8
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _ReadMillis1 *****************
  4971 ;; Defined at:
  4972 ;;		line 13 in file "MillisecondTimer.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  2   16[BANK0 ] unsigned int 
  4979 ;; Registers used:
  4980 ;;		None
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;Total ram usage:        2 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    7
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_main
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text30
  5001  00246A                     __ptext30:
  5002                           	opt stack 0
  5003  00246A                     _ReadMillis1:
  5004                           	opt stack 23
  5005                           
  5006                           ;MillisecondTimer.c: 15: return (millisecond_COUNT1);
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;incstack = 0
  5010  00246A  C00F  F0CE         	movff	_millisecond_COUNT1,?_ReadMillis1	;volatile
  5011  00246E  C010  F0CF         	movff	_millisecond_COUNT1+1,?_ReadMillis1+1	;volatile
  5012  002472  0012               	return		;funcret
  5013  002474                     __end_of_ReadMillis1:
  5014                           	opt stack 0
  5015                           prodh	equ	0xFF4
  5016                           prodl	equ	0xFF3
  5017                           postinc0	equ	0xFEE
  5018                           wreg	equ	0xFE8
  5019                           indf2	equ	0xFDF
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _ReadMillis0 *****************
  5027 ;; Defined at:
  5028 ;;		line 7 in file "MillisecondTimer.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  2   16[BANK0 ] unsigned int 
  5035 ;; Registers used:
  5036 ;;		None
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;Total ram usage:        2 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    7
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text31
  5057  002474                     __ptext31:
  5058                           	opt stack 0
  5059  002474                     _ReadMillis0:
  5060                           	opt stack 23
  5061                           
  5062                           ;MillisecondTimer.c: 9: return (millisecond_COUNT0);
  5063                           
  5064                           ;incstack = 0
  5065  002474  C00D  F0CE         	movff	_millisecond_COUNT0,?_ReadMillis0	;volatile
  5066  002478  C00E  F0CF         	movff	_millisecond_COUNT0+1,?_ReadMillis0+1	;volatile
  5067  00247C  0012               	return		;funcret
  5068  00247E                     __end_of_ReadMillis0:
  5069                           	opt stack 0
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           postinc0	equ	0xFEE
  5073                           wreg	equ	0xFE8
  5074                           indf2	equ	0xFDF
  5075                           postinc2	equ	0xFDE
  5076                           postdec2	equ	0xFDD
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081 ;; *************** function _ReadEchoLength *****************
  5082 ;; Defined at:
  5083 ;;		line 71 in file "Ultrasound.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  2   16[BANK0 ] unsigned int 
  5090 ;; Registers used:
  5091 ;;		None
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;Total ram usage:        2 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    7
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text32
  5112  00247E                     __ptext32:
  5113                           	opt stack 0
  5114  00247E                     _ReadEchoLength:
  5115                           	opt stack 23
  5116                           
  5117                           ;Ultrasound.c: 73: return (echo_time);
  5118                           
  5119                           ;incstack = 0
  5120  00247E  C00B  F0CE         	movff	_echo_time,?_ReadEchoLength	;volatile
  5121  002482  C00C  F0CF         	movff	_echo_time+1,?_ReadEchoLength+1	;volatile
  5122  002486  0012               	return		;funcret
  5123  002488                     __end_of_ReadEchoLength:
  5124                           	opt stack 0
  5125                           prodh	equ	0xFF4
  5126                           prodl	equ	0xFF3
  5127                           postinc0	equ	0xFEE
  5128                           wreg	equ	0xFE8
  5129                           indf2	equ	0xFDF
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function _LoadPIDValues *****************
  5137 ;; Defined at:
  5138 ;;		line 609 in file "FastBuggy17_Main_Code_TUNING.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;		None               void
  5145 ;; Registers used:
  5146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:   11
  5159 ;; This function calls:
  5160 ;;		_PB1pressed
  5161 ;;		_PB2pressed
  5162 ;;		_ReadCharEEPROM
  5163 ;;		_ReadIntEEPROM
  5164 ;;		_SendStatus
  5165 ;;		_SetPIDValues
  5166 ;;		_WriteCharEEPROM
  5167 ;;		_WriteIntEEPROM
  5168 ;; This function is called by:
  5169 ;;		_main
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text33
  5174  000BC6                     __ptext33:
  5175                           	opt stack 0
  5176  000BC6                     _LoadPIDValues:
  5177                           	opt stack 19
  5178                           
  5179                           ;FastBuggy17_Main_Code_TUNING.c: 610: SendStatus(0x07);
  5180                           
  5181                           ;incstack = 0
  5182  000BC6  0E07               	movlw	7
  5183  000BC8  ECC1  F00E         	call	_SendStatus
  5184  000BCC  D000               	goto	l6511
  5185  000BCE                     l6511:
  5186                           
  5187                           ;FastBuggy17_Main_Code_TUNING.c: 613: if(PB1pressed() == 1) {
  5188  000BCE  EC44  F00D         	call	_PB1pressed	;wreg free
  5189  000BD2  06E8               	decf	wreg,f,c
  5190  000BD4  A4D8               	btfss	status,2,c
  5191  000BD6  D03C               	goto	l6525
  5192                           
  5193                           ;FastBuggy17_Main_Code_TUNING.c: 614: PID_Kp = 20;
  5194  000BD8  0E00               	movlw	0
  5195  000BDA  0100               	movlb	0	; () banked
  5196  000BDC  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5197  000BDE  0E14               	movlw	20
  5198  000BE0  6F96               	movwf	_PID_Kp& (0+255),b
  5199                           
  5200                           ;FastBuggy17_Main_Code_TUNING.c: 615: PID_Kd = 0;
  5201  000BE2  0E00               	movlw	0
  5202  000BE4  0100               	movlb	0	; () banked
  5203  000BE6  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5204  000BE8  0E00               	movlw	0
  5205  000BEA  6F92               	movwf	_PID_Kd& (0+255),b
  5206                           
  5207                           ;FastBuggy17_Main_Code_TUNING.c: 616: PID_Ki = 0;
  5208  000BEC  0E00               	movlw	0
  5209  000BEE  0100               	movlb	0	; () banked
  5210  000BF0  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5211  000BF2  0E00               	movlw	0
  5212  000BF4  6F94               	movwf	_PID_Ki& (0+255),b
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;FastBuggy17_Main_Code_TUNING.c: 617: WriteIntEEPROM(0x0010, PID_Kp);
  5216  000BF6  0E00               	movlw	0
  5217  000BF8  0100               	movlb	0	; () banked
  5218  000BFA  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5219  000BFC  0E10               	movlw	16
  5220  000BFE  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5221  000C00  C096  F0D3         	movff	_PID_Kp,WriteIntEEPROM@data
  5222  000C04  C097  F0D4         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5223  000C08  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  5224                           
  5225                           ;FastBuggy17_Main_Code_TUNING.c: 618: WriteIntEEPROM(0x0012, PID_Kd);
  5226  000C0C  0E00               	movlw	0
  5227  000C0E  0100               	movlb	0	; () banked
  5228  000C10  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5229  000C12  0E12               	movlw	18
  5230  000C14  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5231  000C16  C092  F0D3         	movff	_PID_Kd,WriteIntEEPROM@data
  5232  000C1A  C093  F0D4         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5233  000C1E  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  5234                           
  5235                           ;FastBuggy17_Main_Code_TUNING.c: 619: WriteIntEEPROM(0x0014, PID_Ki);
  5236  000C22  0E00               	movlw	0
  5237  000C24  0100               	movlb	0	; () banked
  5238  000C26  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5239  000C28  0E14               	movlw	20
  5240  000C2A  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5241  000C2C  C094  F0D3         	movff	_PID_Ki,WriteIntEEPROM@data
  5242  000C30  C095  F0D4         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5243  000C34  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  5244                           
  5245                           ;FastBuggy17_Main_Code_TUNING.c: 621: WriteCharEEPROM(0x000D, 1);
  5246  000C38  0E00               	movlw	0
  5247  000C3A  0100               	movlb	0	; () banked
  5248  000C3C  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5249  000C3E  0E0D               	movlw	13
  5250  000C40  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  5251  000C42  0E01               	movlw	1
  5252  000C44  0100               	movlb	0	; () banked
  5253  000C46  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  5254  000C48  EC9D  F011         	call	_WriteCharEEPROM	;wreg free
  5255                           
  5256                           ;FastBuggy17_Main_Code_TUNING.c: 622: break;
  5257  000C4C  D036               	goto	l943
  5258                           
  5259                           ;FastBuggy17_Main_Code_TUNING.c: 623: }
  5260  000C4E  D7BF               	goto	l6511
  5261  000C50                     l6525:
  5262                           
  5263                           ;FastBuggy17_Main_Code_TUNING.c: 624: else if(PB2pressed() == 1) {
  5264  000C50  ECE6  F00C         	call	_PB2pressed	;wreg free
  5265  000C54  06E8               	decf	wreg,f,c
  5266  000C56  A4D8               	btfss	status,2,c
  5267  000C58  D7BA               	goto	l6511
  5268                           
  5269                           ;FastBuggy17_Main_Code_TUNING.c: 625: if(ReadCharEEPROM(0x000D) == 0xFF) {
  5270  000C5A  0E00               	movlw	0
  5271  000C5C  0100               	movlb	0	; () banked
  5272  000C5E  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5273  000C60  0E0D               	movlw	13
  5274  000C62  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  5275  000C64  ECD3  F011         	call	_ReadCharEEPROM	;wreg free
  5276  000C68  0AFF               	xorlw	255
  5277  000C6A  A4D8               	btfss	status,2,c
  5278  000C6C  D003               	goto	l6531
  5279                           
  5280                           ;FastBuggy17_Main_Code_TUNING.c: 626: SetPIDValues();
  5281  000C6E  EC40  F004         	call	_SetPIDValues	;wreg free
  5282                           
  5283                           ;FastBuggy17_Main_Code_TUNING.c: 627: }
  5284  000C72  D023               	goto	l943
  5285  000C74                     l6531:
  5286                           
  5287                           ;FastBuggy17_Main_Code_TUNING.c: 628: else {
  5288                           ;FastBuggy17_Main_Code_TUNING.c: 629: PID_Kp = ReadIntEEPROM(0x0010);
  5289  000C74  0E00               	movlw	0
  5290  000C76  0100               	movlb	0	; () banked
  5291  000C78  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5292  000C7A  0E10               	movlw	16
  5293  000C7C  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5294  000C7E  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  5295  000C82  C0D0  F096         	movff	?_ReadIntEEPROM,_PID_Kp
  5296  000C86  C0D1  F097         	movff	?_ReadIntEEPROM+1,_PID_Kp+1
  5297                           
  5298                           ;FastBuggy17_Main_Code_TUNING.c: 630: PID_Kd = ReadIntEEPROM(0x0012);
  5299  000C8A  0E00               	movlw	0
  5300  000C8C  0100               	movlb	0	; () banked
  5301  000C8E  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5302  000C90  0E12               	movlw	18
  5303  000C92  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5304  000C94  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  5305  000C98  C0D0  F092         	movff	?_ReadIntEEPROM,_PID_Kd
  5306  000C9C  C0D1  F093         	movff	?_ReadIntEEPROM+1,_PID_Kd+1
  5307                           
  5308                           ;FastBuggy17_Main_Code_TUNING.c: 631: PID_Ki = ReadIntEEPROM(0x0014);
  5309  000CA0  0E00               	movlw	0
  5310  000CA2  0100               	movlb	0	; () banked
  5311  000CA4  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  5312  000CA6  0E14               	movlw	20
  5313  000CA8  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  5314  000CAA  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  5315  000CAE  C0D0  F094         	movff	?_ReadIntEEPROM,_PID_Ki
  5316  000CB2  C0D1  F095         	movff	?_ReadIntEEPROM+1,_PID_Ki+1
  5317                           
  5318                           ;FastBuggy17_Main_Code_TUNING.c: 632: }
  5319                           ;FastBuggy17_Main_Code_TUNING.c: 633: break;
  5320  000CB6  D001               	goto	l943
  5321  000CB8  D78A               	goto	l6511
  5322  000CBA                     l943:
  5323  000CBA  0012               	return		;funcret
  5324  000CBC                     __end_of_LoadPIDValues:
  5325                           	opt stack 0
  5326                           prodh	equ	0xFF4
  5327                           prodl	equ	0xFF3
  5328                           postinc0	equ	0xFEE
  5329                           wreg	equ	0xFE8
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _SetPIDValues *****************
  5338 ;; Defined at:
  5339 ;;		line 573 in file "FastBuggy17_Main_Code_TUNING.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  char_index      1   28[BANK0 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        4 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:   10
  5360 ;; This function calls:
  5361 ;;		_FlushRxBuf
  5362 ;;		_GetCharRxBuf
  5363 ;;		_PutCharRxBuf
  5364 ;;		_Read1USART
  5365 ;;		_SendStatus
  5366 ;;		_WriteCharEEPROM
  5367 ;;		_WriteIntEEPROM
  5368 ;; This function is called by:
  5369 ;;		_LoadPIDValues
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text34
  5375  000880                     __ptext34:
  5376                           	opt stack 0
  5377  000880                     _SetPIDValues:
  5378                           	opt stack 20
  5379                           
  5380                           ;FastBuggy17_Main_Code_TUNING.c: 574: SendStatus(0x08);
  5381                           
  5382                           ;incstack = 0
  5383  000880  0E08               	movlw	8
  5384  000882  ECC1  F00E         	call	_SendStatus
  5385                           
  5386                           ;FastBuggy17_Main_Code_TUNING.c: 576: unsigned char char_index;
  5387                           ;FastBuggy17_Main_Code_TUNING.c: 578: FlushRxBuf();
  5388  000886  EC69  F00F         	call	_FlushRxBuf	;wreg free
  5389                           
  5390                           ;FastBuggy17_Main_Code_TUNING.c: 580: while((PIR1bits.RCIF) == 0);
  5391  00088A  D000               	goto	l918
  5392  00088C                     l918:
  5393  00088C  AA9E               	btfss	3998,5,c	;volatile
  5394  00088E  D7FE               	goto	l918
  5395                           
  5396                           ;FastBuggy17_Main_Code_TUNING.c: 582: for(char_index = 0; char_index <= 8; char_index++)
      +                           {
  5397  000890  0E00               	movlw	0
  5398  000892  0100               	movlb	0	; () banked
  5399  000894  6FDA               	movwf	SetPIDValues@char_index& (0+255),b
  5400  000896                     l6215:
  5401                           
  5402                           ; BSR set to: 0
  5403  000896  0E08               	movlw	8
  5404  000898  0100               	movlb	0	; () banked
  5405  00089A  65DA               	cpfsgt	SetPIDValues@char_index& (0+255),b
  5406  00089C  D002               	goto	l923
  5407                           
  5408                           ; BSR set to: 0
  5409  00089E  D00B               	goto	l6225
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;FastBuggy17_Main_Code_TUNING.c: 583: while(!(PIR1bits.RCIF));
  5413  0008A0  D000               	goto	l923
  5414  0008A2                     l923:
  5415  0008A2  AA9E               	btfss	3998,5,c	;volatile
  5416  0008A4  D7FE               	goto	l923
  5417                           
  5418                           ;FastBuggy17_Main_Code_TUNING.c: 585: PutCharRxBuf(Read1USART());
  5419  0008A6  EC80  F010         	call	_Read1USART	;wreg free
  5420  0008AA  EC04  F00E         	call	_PutCharRxBuf
  5421  0008AE  0100               	movlb	0	; () banked
  5422  0008B0  2BDA               	incf	SetPIDValues@char_index& (0+255),f,b
  5423  0008B2  D7F1               	goto	l6215
  5424                           
  5425                           ; BSR set to: 0
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;FastBuggy17_Main_Code_TUNING.c: 586: }
  5429                           ;FastBuggy17_Main_Code_TUNING.c: 588: while(GetCharRxBuf() != 0xAA);
  5430                           
  5431                           ; BSR set to: 0
  5432  0008B4  D000               	goto	l6225
  5433  0008B6                     l6225:
  5434  0008B6  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5435  0008BA  0AAA               	xorlw	170
  5436  0008BC  B4D8               	btfsc	status,2,c
  5437  0008BE  D002               	goto	l6227
  5438  0008C0  D7FA               	goto	l6225
  5439                           
  5440                           ;FastBuggy17_Main_Code_TUNING.c: 589: while(GetCharRxBuf() != 0x01);
  5441  0008C2  D000               	goto	l6227
  5442  0008C4                     l6227:
  5443  0008C4  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5444  0008C8  06E8               	decf	wreg,f,c
  5445  0008CA  A4D8               	btfss	status,2,c
  5446  0008CC  D7FB               	goto	l6227
  5447                           
  5448                           ;FastBuggy17_Main_Code_TUNING.c: 591: PID_Kp = (GetCharRxBuf() << 8) & 0xFF00;
  5449  0008CE  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5450  0008D2  0100               	movlb	0	; () banked
  5451  0008D4  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5452  0008D6  0100               	movlb	0	; () banked
  5453  0008D8  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5454  0008DA  0100               	movlb	0	; () banked
  5455  0008DC  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5456  0008DE  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5457  0008E0  0E00               	movlw	0
  5458  0008E2  0100               	movlb	0	; () banked
  5459  0008E4  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5460  0008E6  0100               	movlb	0	; () banked
  5461  0008E8  6F96               	movwf	_PID_Kp& (0+255),b
  5462  0008EA  0EFF               	movlw	255
  5463  0008EC  0100               	movlb	0	; () banked
  5464  0008EE  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5465  0008F0  0100               	movlb	0	; () banked
  5466  0008F2  6F97               	movwf	(_PID_Kp+1)& (0+255),b
  5467                           
  5468                           ;FastBuggy17_Main_Code_TUNING.c: 592: PID_Kp |= (GetCharRxBuf() & 0x00FF);
  5469  0008F4  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5470  0008F8  0100               	movlb	0	; () banked
  5471  0008FA  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5472  0008FC  0100               	movlb	0	; () banked
  5473  0008FE  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5474  000900  0100               	movlb	0	; () banked
  5475  000902  1396               	iorwf	_PID_Kp& (0+255),f,b
  5476                           
  5477                           ;FastBuggy17_Main_Code_TUNING.c: 594: PID_Kd = (GetCharRxBuf() << 8) & 0xFF00;
  5478  000904  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5479  000908  0100               	movlb	0	; () banked
  5480  00090A  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5481  00090C  0100               	movlb	0	; () banked
  5482  00090E  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5483  000910  0100               	movlb	0	; () banked
  5484  000912  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5485  000914  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5486  000916  0E00               	movlw	0
  5487  000918  0100               	movlb	0	; () banked
  5488  00091A  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5489  00091C  0100               	movlb	0	; () banked
  5490  00091E  6F92               	movwf	_PID_Kd& (0+255),b
  5491  000920  0EFF               	movlw	255
  5492  000922  0100               	movlb	0	; () banked
  5493  000924  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5494  000926  0100               	movlb	0	; () banked
  5495  000928  6F93               	movwf	(_PID_Kd+1)& (0+255),b
  5496                           
  5497                           ;FastBuggy17_Main_Code_TUNING.c: 595: PID_Kd |= (GetCharRxBuf() & 0x00FF);
  5498  00092A  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5499  00092E  0100               	movlb	0	; () banked
  5500  000930  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5501  000932  0100               	movlb	0	; () banked
  5502  000934  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5503  000936  0100               	movlb	0	; () banked
  5504  000938  1392               	iorwf	_PID_Kd& (0+255),f,b
  5505                           
  5506                           ;FastBuggy17_Main_Code_TUNING.c: 597: PID_Ki = (GetCharRxBuf() << 8) & 0xFF00;
  5507  00093A  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5508  00093E  0100               	movlb	0	; () banked
  5509  000940  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5510  000942  0100               	movlb	0	; () banked
  5511  000944  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5512  000946  0100               	movlb	0	; () banked
  5513  000948  6FD9               	movwf	(??_SetPIDValues+2)& (0+255),b
  5514  00094A  6BD8               	clrf	(??_SetPIDValues+1)& (0+255),b
  5515  00094C  0E00               	movlw	0
  5516  00094E  0100               	movlb	0	; () banked
  5517  000950  15D8               	andwf	(??_SetPIDValues+1)& (0+255),w,b
  5518  000952  0100               	movlb	0	; () banked
  5519  000954  6F94               	movwf	_PID_Ki& (0+255),b
  5520  000956  0EFF               	movlw	255
  5521  000958  0100               	movlb	0	; () banked
  5522  00095A  15D9               	andwf	(??_SetPIDValues+2)& (0+255),w,b
  5523  00095C  0100               	movlb	0	; () banked
  5524  00095E  6F95               	movwf	(_PID_Ki+1)& (0+255),b
  5525                           
  5526                           ;FastBuggy17_Main_Code_TUNING.c: 598: PID_Ki |= (GetCharRxBuf() & 0x00FF);
  5527  000960  EC9D  F00D         	call	_GetCharRxBuf	;wreg free
  5528  000964  0100               	movlb	0	; () banked
  5529  000966  6FD7               	movwf	??_SetPIDValues& (0+255),b
  5530  000968  0100               	movlb	0	; () banked
  5531  00096A  51D7               	movf	??_SetPIDValues& (0+255),w,b
  5532  00096C  0100               	movlb	0	; () banked
  5533  00096E  1394               	iorwf	_PID_Ki& (0+255),f,b
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;FastBuggy17_Main_Code_TUNING.c: 600: WriteIntEEPROM(0x0010, PID_Kp);
  5537  000970  0E00               	movlw	0
  5538  000972  0100               	movlb	0	; () banked
  5539  000974  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5540  000976  0E10               	movlw	16
  5541  000978  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5542  00097A  C096  F0D3         	movff	_PID_Kp,WriteIntEEPROM@data
  5543  00097E  C097  F0D4         	movff	_PID_Kp+1,WriteIntEEPROM@data+1
  5544  000982  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  5545                           
  5546                           ;FastBuggy17_Main_Code_TUNING.c: 601: WriteIntEEPROM(0x0012, PID_Kd);
  5547  000986  0E00               	movlw	0
  5548  000988  0100               	movlb	0	; () banked
  5549  00098A  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5550  00098C  0E12               	movlw	18
  5551  00098E  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5552  000990  C092  F0D3         	movff	_PID_Kd,WriteIntEEPROM@data
  5553  000994  C093  F0D4         	movff	_PID_Kd+1,WriteIntEEPROM@data+1
  5554  000998  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  5555                           
  5556                           ;FastBuggy17_Main_Code_TUNING.c: 602: WriteIntEEPROM(0x0014, PID_Ki);
  5557  00099C  0E00               	movlw	0
  5558  00099E  0100               	movlb	0	; () banked
  5559  0009A0  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  5560  0009A2  0E14               	movlw	20
  5561  0009A4  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  5562  0009A6  C094  F0D3         	movff	_PID_Ki,WriteIntEEPROM@data
  5563  0009AA  C095  F0D4         	movff	_PID_Ki+1,WriteIntEEPROM@data+1
  5564  0009AE  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  5565                           
  5566                           ;FastBuggy17_Main_Code_TUNING.c: 604: WriteCharEEPROM(0x000D, 1);
  5567  0009B2  0E00               	movlw	0
  5568  0009B4  0100               	movlb	0	; () banked
  5569  0009B6  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  5570  0009B8  0E0D               	movlw	13
  5571  0009BA  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  5572  0009BC  0E01               	movlw	1
  5573  0009BE  0100               	movlb	0	; () banked
  5574  0009C0  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  5575  0009C2  EC9D  F011         	call	_WriteCharEEPROM	;wreg free
  5576  0009C6  0012               	return		;funcret
  5577  0009C8                     __end_of_SetPIDValues:
  5578                           	opt stack 0
  5579                           prodh	equ	0xFF4
  5580                           prodl	equ	0xFF3
  5581                           postinc0	equ	0xFEE
  5582                           wreg	equ	0xFE8
  5583                           indf2	equ	0xFDF
  5584                           postinc2	equ	0xFDE
  5585                           postdec2	equ	0xFDD
  5586                           fsr2h	equ	0xFDA
  5587                           fsr2l	equ	0xFD9
  5588                           status	equ	0xFD8
  5589                           
  5590 ;; *************** function _PutCharRxBuf *****************
  5591 ;; Defined at:
  5592 ;;		line 25 in file "Wireless.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  ch              1    wreg     unsigned char 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  ch              1   23[BANK0 ] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;		None               void
  5599 ;; Registers used:
  5600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;Total ram usage:        2 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    8
  5613 ;; This function calls:
  5614 ;;		___awmod
  5615 ;; This function is called by:
  5616 ;;		_SetPIDValues
  5617 ;;		_WirelessRx_ISR
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text35
  5622  001C08                     __ptext35:
  5623                           	opt stack 0
  5624  001C08                     _PutCharRxBuf:
  5625                           	opt stack 21
  5626                           
  5627                           ;incstack = 0
  5628                           ;PutCharRxBuf@ch stored from wreg
  5629  001C08  0100               	movlb	0	; () banked
  5630  001C0A  6FD5               	movwf	PutCharRxBuf@ch& (0+255),b
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;Wireless.c: 26: Rx_buffer[put_Rx_index] = ch;
  5634  001C0C  501F               	movf	_put_Rx_index,w,c
  5635  001C0E  0D01               	mullw	1
  5636  001C10  0E60               	movlw	low _Rx_buffer
  5637  001C12  24F3               	addwf	prodl,w,c
  5638  001C14  6ED9               	movwf	fsr2l,c
  5639  001C16  0E00               	movlw	high _Rx_buffer
  5640  001C18  20F4               	addwfc	prodh,w,c
  5641  001C1A  6EDA               	movwf	fsr2h,c
  5642  001C1C  C0D5  FFDF         	movff	PutCharRxBuf@ch,indf2
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;Wireless.c: 27: put_Rx_index = (unsigned char)(put_Rx_index + 1) % 25;
  5646  001C20  C01F  F0D4         	movff	_put_Rx_index,??_PutCharRxBuf
  5647  001C24  0E01               	movlw	1
  5648  001C26  0100               	movlb	0	; () banked
  5649  001C28  27D4               	addwf	??_PutCharRxBuf& (0+255),f,b
  5650  001C2A  0100               	movlb	0	; () banked
  5651  001C2C  51D4               	movf	??_PutCharRxBuf& (0+255),w,b
  5652  001C2E  0100               	movlb	0	; () banked
  5653  001C30  6FCE               	movwf	___awmod@dividend& (0+255),b
  5654  001C32  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  5655  001C34  0E00               	movlw	0
  5656  001C36  0100               	movlb	0	; () banked
  5657  001C38  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  5658  001C3A  0E19               	movlw	25
  5659  001C3C  6FD0               	movwf	___awmod@divisor& (0+255),b
  5660  001C3E  EC10  F008         	call	___awmod	;wreg free
  5661  001C42  0100               	movlb	0	; () banked
  5662  001C44  51CE               	movf	?___awmod& (0+255),w,b
  5663  001C46  6E1F               	movwf	_put_Rx_index,c
  5664                           
  5665                           ; BSR set to: 0
  5666  001C48  0012               	return		;funcret
  5667  001C4A                     __end_of_PutCharRxBuf:
  5668                           	opt stack 0
  5669                           prodh	equ	0xFF4
  5670                           prodl	equ	0xFF3
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           indf2	equ	0xFDF
  5674                           postinc2	equ	0xFDE
  5675                           postdec2	equ	0xFDD
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _GetCharRxBuf *****************
  5681 ;; Defined at:
  5682 ;;		line 31 in file "Wireless.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  ch              1   23[BANK0 ] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      unsigned char 
  5689 ;; Registers used:
  5690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;Total ram usage:        2 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    8
  5703 ;; This function calls:
  5704 ;;		___awmod
  5705 ;; This function is called by:
  5706 ;;		_SetPIDValues
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text36
  5711  001B3A                     __ptext36:
  5712                           	opt stack 0
  5713  001B3A                     _GetCharRxBuf:
  5714                           	opt stack 21
  5715                           
  5716                           ;Wireless.c: 32: unsigned char ch;
  5717                           ;Wireless.c: 34: ch = Rx_buffer[get_Rx_index];
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;incstack = 0
  5721  001B3A  501D               	movf	_get_Rx_index,w,c
  5722  001B3C  0D01               	mullw	1
  5723  001B3E  0E60               	movlw	low _Rx_buffer
  5724  001B40  24F3               	addwf	prodl,w,c
  5725  001B42  6ED9               	movwf	fsr2l,c
  5726  001B44  0E00               	movlw	high _Rx_buffer
  5727  001B46  20F4               	addwfc	prodh,w,c
  5728  001B48  6EDA               	movwf	fsr2h,c
  5729  001B4A  50DF               	movf	indf2,w,c
  5730  001B4C  0100               	movlb	0	; () banked
  5731  001B4E  6FD5               	movwf	GetCharRxBuf@ch& (0+255),b
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;Wireless.c: 35: get_Rx_index = (unsigned char)(get_Rx_index + 1) % 25;
  5735  001B50  C01D  F0D4         	movff	_get_Rx_index,??_GetCharRxBuf
  5736  001B54  0E01               	movlw	1
  5737  001B56  0100               	movlb	0	; () banked
  5738  001B58  27D4               	addwf	??_GetCharRxBuf& (0+255),f,b
  5739  001B5A  0100               	movlb	0	; () banked
  5740  001B5C  51D4               	movf	??_GetCharRxBuf& (0+255),w,b
  5741  001B5E  0100               	movlb	0	; () banked
  5742  001B60  6FCE               	movwf	___awmod@dividend& (0+255),b
  5743  001B62  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  5744  001B64  0E00               	movlw	0
  5745  001B66  0100               	movlb	0	; () banked
  5746  001B68  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  5747  001B6A  0E19               	movlw	25
  5748  001B6C  6FD0               	movwf	___awmod@divisor& (0+255),b
  5749  001B6E  EC10  F008         	call	___awmod	;wreg free
  5750  001B72  0100               	movlb	0	; () banked
  5751  001B74  51CE               	movf	?___awmod& (0+255),w,b
  5752  001B76  6E1D               	movwf	_get_Rx_index,c
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;Wireless.c: 37: return(ch);
  5756  001B78  0100               	movlb	0	; () banked
  5757  001B7A  51D5               	movf	GetCharRxBuf@ch& (0+255),w,b
  5758  001B7C  D000               	goto	l286
  5759  001B7E                     l286:
  5760                           
  5761                           ; BSR set to: 0
  5762  001B7E  0012               	return		;funcret
  5763  001B80                     __end_of_GetCharRxBuf:
  5764                           	opt stack 0
  5765                           prodh	equ	0xFF4
  5766                           prodl	equ	0xFF3
  5767                           postinc0	equ	0xFEE
  5768                           wreg	equ	0xFE8
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           postdec2	equ	0xFDD
  5772                           fsr2h	equ	0xFDA
  5773                           fsr2l	equ	0xFD9
  5774                           status	equ	0xFD8
  5775                           
  5776 ;; *************** function _PB2pressed *****************
  5777 ;; Defined at:
  5778 ;;		line 435 in file "FastBuggy17_Main_Code_TUNING.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;		None
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      unsigned char 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;Total ram usage:        0 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    9
  5799 ;; This function calls:
  5800 ;;		_CommandAvailable
  5801 ;;		_GetCommand
  5802 ;;		_ReadMillis2
  5803 ;;		_ResetMillis2
  5804 ;; This function is called by:
  5805 ;;		_LoadPIDValues
  5806 ;;		_main
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text37
  5811  0019CC                     __ptext37:
  5812                           	opt stack 0
  5813  0019CC                     _PB2pressed:
  5814                           	opt stack 21
  5815                           
  5816                           ;FastBuggy17_Main_Code_TUNING.c: 436: if(CommandAvailable() == 1) {
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;incstack = 0
  5820  0019CC  EC18  F012         	call	_CommandAvailable	;wreg free
  5821  0019D0  06E8               	decf	wreg,f,c
  5822  0019D2  A4D8               	btfss	status,2,c
  5823  0019D4  D00B               	goto	l858
  5824                           
  5825                           ;FastBuggy17_Main_Code_TUNING.c: 437: if(GetCommand() == 0x06) {
  5826  0019D6  EC52  F012         	call	_GetCommand	;wreg free
  5827  0019DA  0A06               	xorlw	6
  5828  0019DC  A4D8               	btfss	status,2,c
  5829  0019DE  D01F               	goto	l6175
  5830  0019E0  D01B               	goto	l6169
  5831                           
  5832                           ;FastBuggy17_Main_Code_TUNING.c: 438: return(1);
  5833  0019E2  D022               	goto	l860
  5834                           
  5835                           ;FastBuggy17_Main_Code_TUNING.c: 439: }
  5836  0019E4  D01F               	goto	l6179
  5837  0019E6  D01B               	goto	l6175
  5838                           
  5839                           ;FastBuggy17_Main_Code_TUNING.c: 440: else {
  5840                           ;FastBuggy17_Main_Code_TUNING.c: 441: return(0);
  5841  0019E8  D01F               	goto	l860
  5842                           
  5843                           ;FastBuggy17_Main_Code_TUNING.c: 442: }
  5844                           ;FastBuggy17_Main_Code_TUNING.c: 443: }
  5845  0019EA  D01C               	goto	l6179
  5846  0019EC                     l858:
  5847                           
  5848                           ;FastBuggy17_Main_Code_TUNING.c: 444: else if(PORTBbits.RB2 == 0) {
  5849  0019EC  B481               	btfsc	3969,2,c	;volatile
  5850  0019EE  D003               	goto	l863
  5851  0019F0  D016               	goto	l6175
  5852                           
  5853                           ;FastBuggy17_Main_Code_TUNING.c: 445: return(0);
  5854  0019F2  D01A               	goto	l860
  5855                           
  5856                           ;FastBuggy17_Main_Code_TUNING.c: 446: }
  5857  0019F4  D017               	goto	l6179
  5858  0019F6                     l863:
  5859                           
  5860                           ;FastBuggy17_Main_Code_TUNING.c: 447: else if(PORTBbits.RB2 == 1) {
  5861  0019F6  A481               	btfss	3969,2,c	;volatile
  5862  0019F8  D015               	goto	l6179
  5863                           
  5864                           ;FastBuggy17_Main_Code_TUNING.c: 448: ResetMillis2();
  5865  0019FA  EC44  F012         	call	_ResetMillis2	;wreg free
  5866                           
  5867                           ;FastBuggy17_Main_Code_TUNING.c: 449: while(ReadMillis2() < 10);
  5868  0019FE  D000               	goto	l6167
  5869  001A00                     l6167:
  5870  001A00  EC49  F012         	call	_ReadMillis2	;wreg free
  5871  001A04  0100               	movlb	0	; () banked
  5872  001A06  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  5873  001A08  E105               	bnz	u5200
  5874  001A0A  0E0A               	movlw	10
  5875  001A0C  0100               	movlb	0	; () banked
  5876  001A0E  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  5877  001A10  A0D8               	btfss	status,0,c
  5878  001A12  D7F6               	goto	l6167
  5879  001A14                     u5200:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;FastBuggy17_Main_Code_TUNING.c: 450: if(PORTBbits.RB2 == 1) {
  5883  001A14  A481               	btfss	3969,2,c	;volatile
  5884  001A16  D003               	goto	l6175
  5885  001A18                     l6169:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;FastBuggy17_Main_Code_TUNING.c: 451: return(1);
  5889  001A18  0E01               	movlw	1
  5890                           
  5891                           ; BSR set to: 0
  5892  001A1A  D006               	goto	l860
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;FastBuggy17_Main_Code_TUNING.c: 452: }
  5896  001A1C  D003               	goto	l6179
  5897  001A1E                     l6175:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;FastBuggy17_Main_Code_TUNING.c: 453: else {
  5901                           ;FastBuggy17_Main_Code_TUNING.c: 454: return(0);
  5902  001A1E  0E00               	movlw	0
  5903                           
  5904                           ; BSR set to: 0
  5905  001A20  D003               	goto	l860
  5906                           
  5907                           ; BSR set to: 0
  5908                           
  5909                           ; BSR set to: 0
  5910                           
  5911                           ; BSR set to: 0
  5912  001A22  D000               	goto	l6179
  5913  001A24                     l6179:
  5914                           
  5915                           ;FastBuggy17_Main_Code_TUNING.c: 455: }
  5916                           ;FastBuggy17_Main_Code_TUNING.c: 456: }
  5917                           ;FastBuggy17_Main_Code_TUNING.c: 458: return(0);
  5918  001A24  0E00               	movlw	0
  5919  001A26  D000               	goto	l860
  5920  001A28                     l860:
  5921  001A28  0012               	return		;funcret
  5922  001A2A                     __end_of_PB2pressed:
  5923                           	opt stack 0
  5924                           prodh	equ	0xFF4
  5925                           prodl	equ	0xFF3
  5926                           postinc0	equ	0xFEE
  5927                           wreg	equ	0xFE8
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935 ;; *************** function _LoadCalibration *****************
  5936 ;; Defined at:
  5937 ;;		line 553 in file "FastBuggy17_Main_Code_TUNING.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  index           1   35[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;		None               void
  5944 ;; Registers used:
  5945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;Total ram usage:        3 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:   12
  5958 ;; This function calls:
  5959 ;;		_GenerateCalibration
  5960 ;;		_ReadCharEEPROM
  5961 ;;		_ReadIntEEPROM
  5962 ;; This function is called by:
  5963 ;;		_main
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text38
  5968  000F64                     __ptext38:
  5969                           	opt stack 0
  5970  000F64                     _LoadCalibration:
  5971                           	opt stack 18
  5972                           
  5973                           ;FastBuggy17_Main_Code_TUNING.c: 554: unsigned char index;
  5974                           ;FastBuggy17_Main_Code_TUNING.c: 556: if(ReadCharEEPROM(0x0000) == 0xFF) {
  5975                           
  5976                           ;incstack = 0
  5977  000F64  0E00               	movlw	0
  5978  000F66  0100               	movlb	0	; () banked
  5979  000F68  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5980  000F6A  0E00               	movlw	0
  5981  000F6C  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  5982  000F6E  ECD3  F011         	call	_ReadCharEEPROM	;wreg free
  5983  000F72  0AFF               	xorlw	255
  5984  000F74  A4D8               	btfss	status,2,c
  5985  000F76  D003               	goto	l6493
  5986                           
  5987                           ;FastBuggy17_Main_Code_TUNING.c: 557: GenerateCalibration();
  5988  000F78  EC6A  F008         	call	_GenerateCalibration	;wreg free
  5989                           
  5990                           ;FastBuggy17_Main_Code_TUNING.c: 558: }
  5991  000F7C  D050               	goto	l915
  5992  000F7E                     l6493:
  5993                           
  5994                           ;FastBuggy17_Main_Code_TUNING.c: 560: else if(ReadCharEEPROM(0x0000) == 1) {
  5995  000F7E  0E00               	movlw	0
  5996  000F80  0100               	movlb	0	; () banked
  5997  000F82  6FD1               	movwf	(ReadCharEEPROM@address+1)& (0+255),b
  5998  000F84  0E00               	movlw	0
  5999  000F86  6FD0               	movwf	ReadCharEEPROM@address& (0+255),b
  6000  000F88  ECD3  F011         	call	_ReadCharEEPROM	;wreg free
  6001  000F8C  06E8               	decf	wreg,f,c
  6002  000F8E  A4D8               	btfss	status,2,c
  6003  000F90  D046               	goto	l915
  6004                           
  6005                           ;FastBuggy17_Main_Code_TUNING.c: 561: for(index = 0; index < 5; index++) {
  6006  000F92  0E00               	movlw	0
  6007  000F94  0100               	movlb	0	; () banked
  6008  000F96  6FE1               	movwf	LoadCalibration@index& (0+255),b
  6009  000F98                     l6497:
  6010                           
  6011                           ; BSR set to: 0
  6012  000F98  0E04               	movlw	4
  6013  000F9A  0100               	movlb	0	; () banked
  6014  000F9C  65E1               	cpfsgt	LoadCalibration@index& (0+255),b
  6015  000F9E  D001               	goto	l6501
  6016                           
  6017                           ; BSR set to: 0
  6018  000FA0  D027               	goto	l6507
  6019  000FA2                     l6501:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;FastBuggy17_Main_Code_TUNING.c: 562: sensor_offsets[index] = ReadIntEEPROM(0x0003 + (2 
      +                          * index));
  6023  000FA2  0100               	movlb	0	; () banked
  6024  000FA4  51E1               	movf	LoadCalibration@index& (0+255),w,b
  6025  000FA6  0100               	movlb	0	; () banked
  6026  000FA8  6FDF               	movwf	??_LoadCalibration& (0+255),b
  6027  000FAA  6BE0               	clrf	(??_LoadCalibration+1)& (0+255),b
  6028  000FAC  90D8               	bcf	status,0,c
  6029  000FAE  0100               	movlb	0	; () banked
  6030  000FB0  37DF               	rlcf	??_LoadCalibration& (0+255),f,b
  6031  000FB2  37E0               	rlcf	(??_LoadCalibration+1)& (0+255),f,b
  6032  000FB4  0E03               	movlw	3
  6033  000FB6  0100               	movlb	0	; () banked
  6034  000FB8  25DF               	addwf	??_LoadCalibration& (0+255),w,b
  6035  000FBA  0100               	movlb	0	; () banked
  6036  000FBC  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6037  000FBE  0E00               	movlw	0
  6038  000FC0  0100               	movlb	0	; () banked
  6039  000FC2  21E0               	addwfc	(??_LoadCalibration+1)& (0+255),w,b
  6040  000FC4  0100               	movlb	0	; () banked
  6041  000FC6  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6042  000FC8  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  6043  000FCC  0100               	movlb	0	; () banked
  6044  000FCE  51E1               	movf	LoadCalibration@index& (0+255),w,b
  6045  000FD0  0D02               	mullw	2
  6046  000FD2  0E9A               	movlw	low _sensor_offsets
  6047  000FD4  24F3               	addwf	prodl,w,c
  6048  000FD6  6ED9               	movwf	fsr2l,c
  6049  000FD8  0E00               	movlw	high _sensor_offsets
  6050  000FDA  20F4               	addwfc	prodh,w,c
  6051  000FDC  6EDA               	movwf	fsr2h,c
  6052  000FDE  0100               	movlb	0	; () banked
  6053  000FE0  C0D0  FFDE         	movff	?_ReadIntEEPROM,postinc2
  6054  000FE4  0100               	movlb	0	; () banked
  6055  000FE6  C0D1  FFDD         	movff	?_ReadIntEEPROM+1,postdec2
  6056                           
  6057                           ; BSR set to: 0
  6058  000FEA  0100               	movlb	0	; () banked
  6059  000FEC  2BE1               	incf	LoadCalibration@index& (0+255),f,b
  6060  000FEE  D7D4               	goto	l6497
  6061  000FF0                     l6507:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;FastBuggy17_Main_Code_TUNING.c: 563: }
  6065                           ;FastBuggy17_Main_Code_TUNING.c: 565: PID_set_point = ReadIntEEPROM(0x000E);
  6066  000FF0  0E00               	movlw	0
  6067  000FF2  0100               	movlb	0	; () banked
  6068  000FF4  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6069  000FF6  0E0E               	movlw	14
  6070  000FF8  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6071  000FFA  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  6072  000FFE  C0D0  F0BA         	movff	?_ReadIntEEPROM,_PID_set_point
  6073  001002  C0D1  F0BB         	movff	?_ReadIntEEPROM+1,_PID_set_point+1
  6074                           
  6075                           ;FastBuggy17_Main_Code_TUNING.c: 567: sensor_threshold = ReadIntEEPROM(0x0001);
  6076  001006  0E00               	movlw	0
  6077  001008  0100               	movlb	0	; () banked
  6078  00100A  6FD1               	movwf	(ReadIntEEPROM@address+1)& (0+255),b
  6079  00100C  0E01               	movlw	1
  6080  00100E  6FD0               	movwf	ReadIntEEPROM@address& (0+255),b
  6081  001010  EC15  F00D         	call	_ReadIntEEPROM	;wreg free
  6082  001014  C0D0  F0BC         	movff	?_ReadIntEEPROM,_sensor_threshold
  6083  001018  C0D1  F0BD         	movff	?_ReadIntEEPROM+1,_sensor_threshold+1
  6084  00101C  D000               	goto	l915
  6085  00101E                     l915:
  6086  00101E  0012               	return		;funcret
  6087  001020                     __end_of_LoadCalibration:
  6088                           	opt stack 0
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           postinc0	equ	0xFEE
  6092                           wreg	equ	0xFE8
  6093                           indf2	equ	0xFDF
  6094                           postinc2	equ	0xFDE
  6095                           postdec2	equ	0xFDD
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function _ReadIntEEPROM *****************
  6101 ;; Defined at:
  6102 ;;		line 84 in file "eeprom.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  address         2   18[BANK0 ] unsigned int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  data            2   23[BANK0 ] unsigned int 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  2   18[BANK0 ] unsigned int 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        7 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    8
  6123 ;; This function calls:
  6124 ;;		_ReadEEPROM
  6125 ;; This function is called by:
  6126 ;;		_LoadCalibration
  6127 ;;		_LoadPIDValues
  6128 ;;		_main
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text39
  6133  001A2A                     __ptext39:
  6134                           	opt stack 0
  6135  001A2A                     _ReadIntEEPROM:
  6136                           	opt stack 22
  6137                           
  6138                           ;eeprom.c: 85: unsigned int data;
  6139                           ;eeprom.c: 87: data = (ReadEEPROM(address) << 8) & 0xFF00;
  6140                           
  6141                           ;incstack = 0
  6142  001A2A  C0D0  F0CE         	movff	ReadIntEEPROM@address,ReadEEPROM@address
  6143  001A2E  C0D1  F0CF         	movff	ReadIntEEPROM@address+1,ReadEEPROM@address+1
  6144  001A32  EC2E  F010         	call	_ReadEEPROM	;wreg free
  6145  001A36  0100               	movlb	0	; () banked
  6146  001A38  6FD2               	movwf	??_ReadIntEEPROM& (0+255),b
  6147  001A3A  0100               	movlb	0	; () banked
  6148  001A3C  51D2               	movf	??_ReadIntEEPROM& (0+255),w,b
  6149  001A3E  0100               	movlb	0	; () banked
  6150  001A40  6FD4               	movwf	(??_ReadIntEEPROM+2)& (0+255),b
  6151  001A42  6BD3               	clrf	(??_ReadIntEEPROM+1)& (0+255),b
  6152  001A44  0E00               	movlw	0
  6153  001A46  0100               	movlb	0	; () banked
  6154  001A48  15D3               	andwf	(??_ReadIntEEPROM+1)& (0+255),w,b
  6155  001A4A  0100               	movlb	0	; () banked
  6156  001A4C  6FD5               	movwf	ReadIntEEPROM@data& (0+255),b
  6157  001A4E  0EFF               	movlw	255
  6158  001A50  0100               	movlb	0	; () banked
  6159  001A52  15D4               	andwf	(??_ReadIntEEPROM+2)& (0+255),w,b
  6160  001A54  0100               	movlb	0	; () banked
  6161  001A56  6FD6               	movwf	(ReadIntEEPROM@data+1)& (0+255),b
  6162                           
  6163                           ;eeprom.c: 88: data |= ReadEEPROM(address + 1) & 0x00FF;
  6164  001A58  0E01               	movlw	1
  6165  001A5A  0100               	movlb	0	; () banked
  6166  001A5C  25D0               	addwf	ReadIntEEPROM@address& (0+255),w,b
  6167  001A5E  0100               	movlb	0	; () banked
  6168  001A60  6FCE               	movwf	ReadEEPROM@address& (0+255),b
  6169  001A62  0E00               	movlw	0
  6170  001A64  0100               	movlb	0	; () banked
  6171  001A66  21D1               	addwfc	(ReadIntEEPROM@address+1)& (0+255),w,b
  6172  001A68  0100               	movlb	0	; () banked
  6173  001A6A  6FCF               	movwf	(ReadEEPROM@address+1)& (0+255),b
  6174  001A6C  EC2E  F010         	call	_ReadEEPROM	;wreg free
  6175  001A70  0100               	movlb	0	; () banked
  6176  001A72  6FD2               	movwf	??_ReadIntEEPROM& (0+255),b
  6177  001A74  0100               	movlb	0	; () banked
  6178  001A76  51D2               	movf	??_ReadIntEEPROM& (0+255),w,b
  6179  001A78  0100               	movlb	0	; () banked
  6180  001A7A  13D5               	iorwf	ReadIntEEPROM@data& (0+255),f,b
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;eeprom.c: 90: return(data);
  6184  001A7C  C0D5  F0D0         	movff	ReadIntEEPROM@data,?_ReadIntEEPROM
  6185  001A80  C0D6  F0D1         	movff	ReadIntEEPROM@data+1,?_ReadIntEEPROM+1
  6186  001A84  D000               	goto	l237
  6187  001A86                     l237:
  6188                           
  6189                           ; BSR set to: 0
  6190  001A86  0012               	return		;funcret
  6191  001A88                     __end_of_ReadIntEEPROM:
  6192                           	opt stack 0
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           postinc0	equ	0xFEE
  6196                           wreg	equ	0xFE8
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           fsr2h	equ	0xFDA
  6201                           fsr2l	equ	0xFD9
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function _ReadCharEEPROM *****************
  6205 ;; Defined at:
  6206 ;;		line 94 in file "eeprom.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  address         2   18[BANK0 ] unsigned int 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      unsigned char 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;Total ram usage:        2 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    8
  6227 ;; This function calls:
  6228 ;;		_ReadEEPROM
  6229 ;; This function is called by:
  6230 ;;		_LoadCalibration
  6231 ;;		_LoadPIDValues
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text40
  6236  0023A6                     __ptext40:
  6237                           	opt stack 0
  6238  0023A6                     _ReadCharEEPROM:
  6239                           	opt stack 21
  6240                           
  6241                           ;eeprom.c: 95: return(ReadEEPROM(address));
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;incstack = 0
  6245  0023A6  C0D0  F0CE         	movff	ReadCharEEPROM@address,ReadEEPROM@address
  6246  0023AA  C0D1  F0CF         	movff	ReadCharEEPROM@address+1,ReadEEPROM@address+1
  6247  0023AE  EC2E  F010         	call	_ReadEEPROM	;wreg free
  6248  0023B2  D000               	goto	l240
  6249  0023B4                     l240:
  6250  0023B4  0012               	return		;funcret
  6251  0023B6                     __end_of_ReadCharEEPROM:
  6252                           	opt stack 0
  6253                           prodh	equ	0xFF4
  6254                           prodl	equ	0xFF3
  6255                           postinc0	equ	0xFEE
  6256                           wreg	equ	0xFE8
  6257                           indf2	equ	0xFDF
  6258                           postinc2	equ	0xFDE
  6259                           postdec2	equ	0xFDD
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function _ReadEEPROM *****************
  6265 ;; Defined at:
  6266 ;;		line 37 in file "eeprom.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  address         2   16[BANK0 ] unsigned int 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      unsigned char 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6280 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    7
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_ReadIntEEPROM
  6291 ;;		_ReadCharEEPROM
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text41
  6296  00205C                     __ptext41:
  6297                           	opt stack 0
  6298  00205C                     _ReadEEPROM:
  6299                           	opt stack 22
  6300                           
  6301                           ;eeprom.c: 38: if(address > 0x03FF) {
  6302                           
  6303                           ;incstack = 0
  6304  00205C  0E04               	movlw	4
  6305  00205E  0100               	movlb	0	; () banked
  6306  002060  5DCF               	subwf	(ReadEEPROM@address+1)& (0+255),w,b
  6307  002062  A0D8               	btfss	status,0,c
  6308  002064  D002               	goto	l223
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;eeprom.c: 39: return(0);
  6312  002066  0E00               	movlw	0
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;eeprom.c: 40: }
  6316                           
  6317                           ; BSR set to: 0
  6318  002068  D00E               	goto	l224
  6319  00206A                     l223:
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;eeprom.c: 41: else {
  6323                           ;eeprom.c: 42: EEADR = address & 0x00FF;
  6324  00206A  C0CE  FFA9         	movff	ReadEEPROM@address,4009	;volatile
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;eeprom.c: 43: EEADRH = (address >> 8) & 0x0003;
  6328  00206E  0100               	movlb	0	; () banked
  6329  002070  51CF               	movf	(ReadEEPROM@address+1)& (0+255),w,b
  6330  002072  0B03               	andlw	3
  6331  002074  6EAA               	movwf	4010,c	;volatile
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;eeprom.c: 44: EECON1bits.EEPGD = 0;
  6335  002076  9EA6               	bcf	4006,7,c	;volatile
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;eeprom.c: 45: EECON1bits.CFGS = 0;
  6339  002078  9CA6               	bcf	4006,6,c	;volatile
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;eeprom.c: 46: EECON1bits.RD = 1;
  6343  00207A  80A6               	bsf	4006,0,c	;volatile
  6344                           
  6345                           ;eeprom.c: 48: while(EECON1bits.RD == 1);
  6346  00207C  D000               	goto	l226
  6347  00207E                     l226:
  6348  00207E  B0A6               	btfsc	4006,0,c	;volatile
  6349  002080  D7FE               	goto	l226
  6350                           
  6351                           ;eeprom.c: 50: return(EEDATA);
  6352  002082  50A8               	movf	4008,w,c	;volatile
  6353  002084  D000               	goto	l224
  6354  002086                     l224:
  6355  002086  0012               	return		;funcret
  6356  002088                     __end_of_ReadEEPROM:
  6357                           	opt stack 0
  6358                           prodh	equ	0xFF4
  6359                           prodl	equ	0xFF3
  6360                           postinc0	equ	0xFEE
  6361                           wreg	equ	0xFE8
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function _GenerateCalibration *****************
  6370 ;; Defined at:
  6371 ;;		line 528 in file "FastBuggy17_Main_Code_TUNING.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  index           1   32[BANK0 ] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;		None               void
  6378 ;; Registers used:
  6379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;Total ram usage:        3 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:   11
  6392 ;; This function calls:
  6393 ;;		_CalibrateOffsets
  6394 ;;		_CalibrateOnLine
  6395 ;;		_CalibrateThreshold
  6396 ;;		_FlashLEDS
  6397 ;;		_WriteCharEEPROM
  6398 ;;		_WriteIntEEPROM
  6399 ;; This function is called by:
  6400 ;;		_LoadCalibration
  6401 ;;		_main
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text42
  6406  0010D4                     __ptext42:
  6407                           	opt stack 0
  6408  0010D4                     _GenerateCalibration:
  6409                           	opt stack 18
  6410                           
  6411                           ;FastBuggy17_Main_Code_TUNING.c: 529: unsigned char index;
  6412                           ;FastBuggy17_Main_Code_TUNING.c: 531: CalibrateOffsets();
  6413                           
  6414                           ;incstack = 0
  6415  0010D4  ECB9  F009         	call	_CalibrateOffsets	;wreg free
  6416                           
  6417                           ;FastBuggy17_Main_Code_TUNING.c: 533: for(index = 0; index < 5; index++) {
  6418  0010D8  0E00               	movlw	0
  6419  0010DA  0100               	movlb	0	; () banked
  6420  0010DC  6FDE               	movwf	GenerateCalibration@index& (0+255),b
  6421  0010DE                     l6187:
  6422                           
  6423                           ; BSR set to: 0
  6424  0010DE  0E04               	movlw	4
  6425  0010E0  0100               	movlb	0	; () banked
  6426  0010E2  65DE               	cpfsgt	GenerateCalibration@index& (0+255),b
  6427  0010E4  D001               	goto	l6191
  6428                           
  6429                           ; BSR set to: 0
  6430  0010E6  D025               	goto	l6197
  6431  0010E8                     l6191:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;FastBuggy17_Main_Code_TUNING.c: 534: WriteIntEEPROM(0x0003 + (2* index), sensor_offsets
      +                          [index]);
  6435  0010E8  0100               	movlb	0	; () banked
  6436  0010EA  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6437  0010EC  0100               	movlb	0	; () banked
  6438  0010EE  6FDC               	movwf	??_GenerateCalibration& (0+255),b
  6439  0010F0  6BDD               	clrf	(??_GenerateCalibration+1)& (0+255),b
  6440  0010F2  90D8               	bcf	status,0,c
  6441  0010F4  0100               	movlb	0	; () banked
  6442  0010F6  37DC               	rlcf	??_GenerateCalibration& (0+255),f,b
  6443  0010F8  37DD               	rlcf	(??_GenerateCalibration+1)& (0+255),f,b
  6444  0010FA  0E03               	movlw	3
  6445  0010FC  0100               	movlb	0	; () banked
  6446  0010FE  25DC               	addwf	??_GenerateCalibration& (0+255),w,b
  6447  001100  0100               	movlb	0	; () banked
  6448  001102  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6449  001104  0E00               	movlw	0
  6450  001106  0100               	movlb	0	; () banked
  6451  001108  21DD               	addwfc	(??_GenerateCalibration+1)& (0+255),w,b
  6452  00110A  0100               	movlb	0	; () banked
  6453  00110C  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6454  00110E  0100               	movlb	0	; () banked
  6455  001110  51DE               	movf	GenerateCalibration@index& (0+255),w,b
  6456  001112  0D02               	mullw	2
  6457  001114  0E9A               	movlw	low _sensor_offsets
  6458  001116  24F3               	addwf	prodl,w,c
  6459  001118  6ED9               	movwf	fsr2l,c
  6460  00111A  0E00               	movlw	high _sensor_offsets
  6461  00111C  20F4               	addwfc	prodh,w,c
  6462  00111E  6EDA               	movwf	fsr2h,c
  6463  001120  CFDE F0D3          	movff	postinc2,WriteIntEEPROM@data
  6464  001124  CFDD F0D4          	movff	postdec2,WriteIntEEPROM@data+1
  6465  001128  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  6466  00112C  0100               	movlb	0	; () banked
  6467  00112E  2BDE               	incf	GenerateCalibration@index& (0+255),f,b
  6468  001130  D7D6               	goto	l6187
  6469  001132                     l6197:
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;FastBuggy17_Main_Code_TUNING.c: 535: }
  6473                           ;FastBuggy17_Main_Code_TUNING.c: 537: FlashLEDS();
  6474  001132  EC44  F010         	call	_FlashLEDS	;wreg free
  6475                           
  6476                           ;FastBuggy17_Main_Code_TUNING.c: 539: CalibrateOnLine();
  6477  001136  ECB4  F00C         	call	_CalibrateOnLine	;wreg free
  6478                           
  6479                           ;FastBuggy17_Main_Code_TUNING.c: 541: WriteIntEEPROM(0x000E, PID_set_point);
  6480  00113A  0E00               	movlw	0
  6481  00113C  0100               	movlb	0	; () banked
  6482  00113E  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6483  001140  0E0E               	movlw	14
  6484  001142  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6485  001144  C0BA  F0D3         	movff	_PID_set_point,WriteIntEEPROM@data
  6486  001148  C0BB  F0D4         	movff	_PID_set_point+1,WriteIntEEPROM@data+1
  6487  00114C  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  6488                           
  6489                           ;FastBuggy17_Main_Code_TUNING.c: 543: FlashLEDS();
  6490  001150  EC44  F010         	call	_FlashLEDS	;wreg free
  6491                           
  6492                           ;FastBuggy17_Main_Code_TUNING.c: 545: CalibrateThreshold();
  6493  001154  EC16  F009         	call	_CalibrateThreshold	;wreg free
  6494                           
  6495                           ;FastBuggy17_Main_Code_TUNING.c: 547: WriteIntEEPROM(0x0001, sensor_threshold);
  6496  001158  0E00               	movlw	0
  6497  00115A  0100               	movlb	0	; () banked
  6498  00115C  6FD2               	movwf	(WriteIntEEPROM@address+1)& (0+255),b
  6499  00115E  0E01               	movlw	1
  6500  001160  6FD1               	movwf	WriteIntEEPROM@address& (0+255),b
  6501  001162  C0BC  F0D3         	movff	_sensor_threshold,WriteIntEEPROM@data
  6502  001166  C0BD  F0D4         	movff	_sensor_threshold+1,WriteIntEEPROM@data+1
  6503  00116A  ECB8  F00F         	call	_WriteIntEEPROM	;wreg free
  6504                           
  6505                           ;FastBuggy17_Main_Code_TUNING.c: 548: WriteCharEEPROM(0x0000, 1);
  6506  00116E  0E00               	movlw	0
  6507  001170  0100               	movlb	0	; () banked
  6508  001172  6FD2               	movwf	(WriteCharEEPROM@address+1)& (0+255),b
  6509  001174  0E00               	movlw	0
  6510  001176  6FD1               	movwf	WriteCharEEPROM@address& (0+255),b
  6511  001178  0E01               	movlw	1
  6512  00117A  0100               	movlb	0	; () banked
  6513  00117C  6FD3               	movwf	WriteCharEEPROM@data& (0+255),b
  6514  00117E  EC9D  F011         	call	_WriteCharEEPROM	;wreg free
  6515  001182  0012               	return		;funcret
  6516  001184                     __end_of_GenerateCalibration:
  6517                           	opt stack 0
  6518                           prodh	equ	0xFF4
  6519                           prodl	equ	0xFF3
  6520                           postinc0	equ	0xFEE
  6521                           wreg	equ	0xFE8
  6522                           indf2	equ	0xFDF
  6523                           postinc2	equ	0xFDE
  6524                           postdec2	equ	0xFDD
  6525                           fsr2h	equ	0xFDA
  6526                           fsr2l	equ	0xFD9
  6527                           status	equ	0xFD8
  6528                           
  6529 ;; *************** function _WriteIntEEPROM *****************
  6530 ;; Defined at:
  6531 ;;		line 63 in file "eeprom.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  address         2   19[BANK0 ] unsigned int 
  6534 ;;  data            2   21[BANK0 ] unsigned int 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;		None
  6537 ;; Return value:  Size  Location     Type
  6538 ;;		None               void
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;Total ram usage:        4 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    8
  6553 ;; This function calls:
  6554 ;;		_WriteEEPROM
  6555 ;; This function is called by:
  6556 ;;		_GenerateCalibration
  6557 ;;		_SetPIDValues
  6558 ;;		_LoadPIDValues
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text43
  6563  001F70                     __ptext43:
  6564                           	opt stack 0
  6565  001F70                     _WriteIntEEPROM:
  6566                           	opt stack 21
  6567                           
  6568                           ;eeprom.c: 64: WriteEEPROM(address, ((data >> 8) & 0x00FF));
  6569                           
  6570                           ;incstack = 0
  6571  001F70  C0D1  F0CE         	movff	WriteIntEEPROM@address,WriteEEPROM@address
  6572  001F74  C0D2  F0CF         	movff	WriteIntEEPROM@address+1,WriteEEPROM@address+1
  6573  001F78  0100               	movlb	0	; () banked
  6574  001F7A  51D4               	movf	(WriteIntEEPROM@data+1)& (0+255),w,b
  6575  001F7C  0100               	movlb	0	; () banked
  6576  001F7E  6FD0               	movwf	WriteEEPROM@data& (0+255),b
  6577  001F80  EC46  F00E         	call	_WriteEEPROM	;wreg free
  6578                           
  6579                           ;eeprom.c: 65: WriteEEPROM(address + 1, (data & 0x00FF));
  6580  001F84  0E01               	movlw	1
  6581  001F86  0100               	movlb	0	; () banked
  6582  001F88  25D1               	addwf	WriteIntEEPROM@address& (0+255),w,b
  6583  001F8A  0100               	movlb	0	; () banked
  6584  001F8C  6FCE               	movwf	WriteEEPROM@address& (0+255),b
  6585  001F8E  0E00               	movlw	0
  6586  001F90  0100               	movlb	0	; () banked
  6587  001F92  21D2               	addwfc	(WriteIntEEPROM@address+1)& (0+255),w,b
  6588  001F94  0100               	movlb	0	; () banked
  6589  001F96  6FCF               	movwf	(WriteEEPROM@address+1)& (0+255),b
  6590  001F98  C0D3  F0D0         	movff	WriteIntEEPROM@data,WriteEEPROM@data
  6591  001F9C  EC46  F00E         	call	_WriteEEPROM	;wreg free
  6592  001FA0  0012               	return		;funcret
  6593  001FA2                     __end_of_WriteIntEEPROM:
  6594                           	opt stack 0
  6595                           prodh	equ	0xFF4
  6596                           prodl	equ	0xFF3
  6597                           postinc0	equ	0xFEE
  6598                           wreg	equ	0xFE8
  6599                           indf2	equ	0xFDF
  6600                           postinc2	equ	0xFDE
  6601                           postdec2	equ	0xFDD
  6602                           fsr2h	equ	0xFDA
  6603                           fsr2l	equ	0xFD9
  6604                           status	equ	0xFD8
  6605                           
  6606 ;; *************** function _WriteCharEEPROM *****************
  6607 ;; Defined at:
  6608 ;;		line 69 in file "eeprom.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  address         2   19[BANK0 ] unsigned int 
  6611 ;;  data            1   21[BANK0 ] unsigned char 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;		None               void
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6623 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;Total ram usage:        3 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    8
  6630 ;; This function calls:
  6631 ;;		_WriteEEPROM
  6632 ;; This function is called by:
  6633 ;;		_GenerateCalibration
  6634 ;;		_SetPIDValues
  6635 ;;		_LoadPIDValues
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text44
  6640  00233A                     __ptext44:
  6641                           	opt stack 0
  6642  00233A                     _WriteCharEEPROM:
  6643                           	opt stack 21
  6644                           
  6645                           ;eeprom.c: 70: WriteEEPROM(address, data);
  6646                           
  6647                           ;incstack = 0
  6648  00233A  C0D1  F0CE         	movff	WriteCharEEPROM@address,WriteEEPROM@address
  6649  00233E  C0D2  F0CF         	movff	WriteCharEEPROM@address+1,WriteEEPROM@address+1
  6650  002342  C0D3  F0D0         	movff	WriteCharEEPROM@data,WriteEEPROM@data
  6651  002346  EC46  F00E         	call	_WriteEEPROM	;wreg free
  6652  00234A  0012               	return		;funcret
  6653  00234C                     __end_of_WriteCharEEPROM:
  6654                           	opt stack 0
  6655                           prodh	equ	0xFF4
  6656                           prodl	equ	0xFF3
  6657                           postinc0	equ	0xFEE
  6658                           wreg	equ	0xFE8
  6659                           indf2	equ	0xFDF
  6660                           postinc2	equ	0xFDE
  6661                           postdec2	equ	0xFDD
  6662                           fsr2h	equ	0xFDA
  6663                           fsr2l	equ	0xFD9
  6664                           status	equ	0xFD8
  6665                           
  6666 ;; *************** function _WriteEEPROM *****************
  6667 ;; Defined at:
  6668 ;;		line 3 in file "eeprom.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  address         2   16[BANK0 ] unsigned int 
  6671 ;;  data            1   18[BANK0 ] unsigned char 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      unsigned char 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6683 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;Total ram usage:        3 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    7
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_WriteIntEEPROM
  6694 ;;		_WriteCharEEPROM
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text45
  6699  001C8C                     __ptext45:
  6700                           	opt stack 0
  6701  001C8C                     _WriteEEPROM:
  6702                           	opt stack 21
  6703                           
  6704                           ;eeprom.c: 4: if(address > 0x03FF) {
  6705                           
  6706                           ;incstack = 0
  6707  001C8C  0E04               	movlw	4
  6708  001C8E  0100               	movlb	0	; () banked
  6709  001C90  5DCF               	subwf	(WriteEEPROM@address+1)& (0+255),w,b
  6710  001C92  B0D8               	btfsc	status,0,c
  6711  001C94  D01A               	goto	l214
  6712  001C96  D001               	goto	l213
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;eeprom.c: 6: }
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;eeprom.c: 5: return(1);
  6719                           ;	Return value of _WriteEEPROM is never used
  6720  001C98  D018               	goto	l214
  6721  001C9A                     l213:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;eeprom.c: 7: else {
  6725                           ;eeprom.c: 8: EEADR = (address & 0x00FF);
  6726  001C9A  C0CE  FFA9         	movff	WriteEEPROM@address,4009	;volatile
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;eeprom.c: 9: EEADRH = ((address >> 8) & 0x0003);
  6730  001C9E  0100               	movlb	0	; () banked
  6731  001CA0  51CF               	movf	(WriteEEPROM@address+1)& (0+255),w,b
  6732  001CA2  0B03               	andlw	3
  6733  001CA4  6EAA               	movwf	4010,c	;volatile
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;eeprom.c: 10: EEDATA = data;
  6737  001CA6  C0D0  FFA8         	movff	WriteEEPROM@data,4008	;volatile
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  6741  001CAA  9EA6               	bcf	4006,7,c	;volatile
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;eeprom.c: 13: EECON1bits.CFGS = 0;
  6745  001CAC  9CA6               	bcf	4006,6,c	;volatile
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;eeprom.c: 14: EECON1bits.WREN = 1;
  6749  001CAE  84A6               	bsf	4006,2,c	;volatile
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  6753  001CB0  9EF2               	bcf	intcon,7,c	;volatile
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;eeprom.c: 17: EECON2 = 0x55;
  6757  001CB2  0E55               	movlw	85
  6758  001CB4  6EA7               	movwf	4007,c	;volatile
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;eeprom.c: 18: EECON2 = 0x0AA;
  6762  001CB6  0EAA               	movlw	170
  6763  001CB8  6EA7               	movwf	4007,c	;volatile
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;eeprom.c: 19: EECON1bits.WR = 1;
  6767  001CBA  82A6               	bsf	4006,1,c	;volatile
  6768                           
  6769                           ;eeprom.c: 21: while(EECON1bits.WR == 1);
  6770  001CBC  D000               	goto	l216
  6771  001CBE                     l216:
  6772  001CBE  B2A6               	btfsc	4006,1,c	;volatile
  6773  001CC0  D7FE               	goto	l216
  6774                           
  6775                           ;eeprom.c: 23: EECON1bits.WREN = 0;
  6776  001CC2  94A6               	bcf	4006,2,c	;volatile
  6777                           
  6778                           ;eeprom.c: 24: INTCONbits.GIE = 1;
  6779  001CC4  8EF2               	bsf	intcon,7,c	;volatile
  6780                           
  6781                           ;eeprom.c: 26: if(EECON1bits.WRERR == 0) {
  6782  001CC6  50A6               	movf	4006,w,c	;volatile
  6783                           
  6784                           ;eeprom.c: 29: else {
  6785                           ;eeprom.c: 30: return(1);
  6786                           ;	Return value of _WriteEEPROM is never used
  6787                           
  6788                           ;eeprom.c: 28: }
  6789                           
  6790                           ;eeprom.c: 27: return(0);
  6791                           ;	Return value of _WriteEEPROM is never used
  6792  001CC8  D000               	goto	l214
  6793  001CCA                     l214:
  6794  001CCA  0012               	return		;funcret
  6795  001CCC                     __end_of_WriteEEPROM:
  6796                           	opt stack 0
  6797                           prodh	equ	0xFF4
  6798                           prodl	equ	0xFF3
  6799                           intcon	equ	0xFF2
  6800                           postinc0	equ	0xFEE
  6801                           wreg	equ	0xFE8
  6802                           indf2	equ	0xFDF
  6803                           postinc2	equ	0xFDE
  6804                           postdec2	equ	0xFDD
  6805                           fsr2h	equ	0xFDA
  6806                           fsr2l	equ	0xFD9
  6807                           status	equ	0xFD8
  6808                           
  6809 ;; *************** function _FlashLEDS *****************
  6810 ;; Defined at:
  6811 ;;		line 395 in file "FastBuggy17_Main_Code_TUNING.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;		None
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;		None               void
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;Total ram usage:        0 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    8
  6832 ;; This function calls:
  6833 ;;		_Delay10KTCYx
  6834 ;; This function is called by:
  6835 ;;		_GenerateCalibration
  6836 ;;		_main
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text46
  6841  002088                     __ptext46:
  6842                           	opt stack 0
  6843  002088                     _FlashLEDS:
  6844                           	opt stack 20
  6845                           
  6846                           ;FastBuggy17_Main_Code_TUNING.c: 396: LATJ = 0x00;
  6847                           
  6848                           ;incstack = 0
  6849  002088  0E00               	movlw	0
  6850  00208A  6E91               	movwf	3985,c	;volatile
  6851                           
  6852                           ;FastBuggy17_Main_Code_TUNING.c: 397: LATJ = 0x1F;
  6853  00208C  0E1F               	movlw	31
  6854  00208E  6E91               	movwf	3985,c	;volatile
  6855                           
  6856                           ;FastBuggy17_Main_Code_TUNING.c: 398: Delay10KTCYx(75);
  6857  002090  0E4B               	movlw	75
  6858  002092  ECFD  F010         	call	_Delay10KTCYx
  6859                           
  6860                           ;FastBuggy17_Main_Code_TUNING.c: 399: LATJ = 0x00;
  6861  002096  0E00               	movlw	0
  6862  002098  6E91               	movwf	3985,c	;volatile
  6863                           
  6864                           ;FastBuggy17_Main_Code_TUNING.c: 400: Delay10KTCYx(75);
  6865  00209A  0E4B               	movlw	75
  6866  00209C  ECFD  F010         	call	_Delay10KTCYx
  6867                           
  6868                           ;FastBuggy17_Main_Code_TUNING.c: 401: LATJ = 0x1F;
  6869  0020A0  0E1F               	movlw	31
  6870  0020A2  6E91               	movwf	3985,c	;volatile
  6871                           
  6872                           ;FastBuggy17_Main_Code_TUNING.c: 402: Delay10KTCYx(75);
  6873  0020A4  0E4B               	movlw	75
  6874  0020A6  ECFD  F010         	call	_Delay10KTCYx
  6875                           
  6876                           ;FastBuggy17_Main_Code_TUNING.c: 403: LATJ = 0x00;
  6877  0020AA  0E00               	movlw	0
  6878  0020AC  6E91               	movwf	3985,c	;volatile
  6879  0020AE  0012               	return		;funcret
  6880  0020B0                     __end_of_FlashLEDS:
  6881                           	opt stack 0
  6882                           prodh	equ	0xFF4
  6883                           prodl	equ	0xFF3
  6884                           intcon	equ	0xFF2
  6885                           postinc0	equ	0xFEE
  6886                           wreg	equ	0xFE8
  6887                           indf2	equ	0xFDF
  6888                           postinc2	equ	0xFDE
  6889                           postdec2	equ	0xFDD
  6890                           fsr2h	equ	0xFDA
  6891                           fsr2l	equ	0xFD9
  6892                           status	equ	0xFD8
  6893                           
  6894 ;; *************** function _Delay10KTCYx *****************
  6895 ;; Defined at:
  6896 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  unit            1    wreg     unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  unit            1   17[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;		None               void
  6903 ;; Registers used:
  6904 ;;		wreg
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;Total ram usage:        2 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    7
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_FlashLEDS
  6921 ;;		_main
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text47
  6926  0021FA                     __ptext47:
  6927                           	opt stack 0
  6928  0021FA                     _Delay10KTCYx:
  6929                           	opt stack 20
  6930                           
  6931                           ;incstack = 0
  6932                           ;Delay10KTCYx@unit stored from wreg
  6933  0021FA  0100               	movlb	0	; () banked
  6934  0021FC  6FCF               	movwf	Delay10KTCYx@unit& (0+255),b
  6935  0021FE                     
  6936                           ; BSR set to: 0
  6937  0021FE  0E0D               	movlw	13
  6938  002200  0100               	movlb	0	; () banked
  6939  002202  6FCE               	movwf	??_Delay10KTCYx& (0+255),b
  6940  002204  0EFC               	movlw	252
  6941  002206                     u6377:
  6942  002206  2EE8               	decfsz	wreg,f,c
  6943  002208  D7FE               	goto	u6377
  6944  00220A  2FCE               	decfsz	??_Delay10KTCYx& (0+255),f,b
  6945  00220C  D7FC               	goto	u6377
  6946  00220E  0100               	movlb	0	; () banked
  6947  002210  2FCF               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  6948  002212  D7F5               	goto	l5729
  6949  002214  D000               	goto	l1473
  6950  002216                     l1473:
  6951                           
  6952                           ; BSR set to: 0
  6953  002216  0012               	return		;funcret
  6954  002218                     __end_of_Delay10KTCYx:
  6955                           	opt stack 0
  6956                           prodh	equ	0xFF4
  6957                           prodl	equ	0xFF3
  6958                           intcon	equ	0xFF2
  6959                           postinc0	equ	0xFEE
  6960                           wreg	equ	0xFE8
  6961                           indf2	equ	0xFDF
  6962                           postinc2	equ	0xFDE
  6963                           postdec2	equ	0xFDD
  6964                           fsr2h	equ	0xFDA
  6965                           fsr2l	equ	0xFD9
  6966                           status	equ	0xFD8
  6967                           
  6968 ;; *************** function _CalibrateThreshold *****************
  6969 ;; Defined at:
  6970 ;;		line 498 in file "FastBuggy17_Main_Code_TUNING.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  sensor_thres    2   28[BANK0 ] int 
  6975 ;;  sensor_thres    2   26[BANK0 ] PTR int 
  6976 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;		None               void
  6979 ;; Registers used:
  6980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:        4 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:   10
  6993 ;; This function calls:
  6994 ;;		_BusyADC
  6995 ;;		_BusySensorAcq
  6996 ;;		_CalculateSensorStatuses
  6997 ;;		_ConvertADC
  6998 ;;		_DisplaySensorStatuses
  6999 ;;		_GetSensorReadings
  7000 ;;		_NormaliseSensorReadings
  7001 ;;		_PB1pressed
  7002 ;;		_ReadADC
  7003 ;;		_SendStatus
  7004 ;;		_SetADCChannel
  7005 ;; This function is called by:
  7006 ;;		_GenerateCalibration
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text48
  7011  00122C                     __ptext48:
  7012                           	opt stack 0
  7013  00122C                     _CalibrateThreshold:
  7014                           	opt stack 18
  7015                           
  7016                           ;FastBuggy17_Main_Code_TUNING.c: 499: int sensor_threshold_temp;
  7017                           ;FastBuggy17_Main_Code_TUNING.c: 500: int *sensor_threshold_temp_ptr;
  7018                           ;FastBuggy17_Main_Code_TUNING.c: 502: sensor_threshold_temp_ptr = &sensor_threshold_temp
      +                          ;
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;incstack = 0
  7022  00122C  0EDA               	movlw	low CalibrateThreshold@sensor_threshold_temp
  7023  00122E  0100               	movlb	0	; () banked
  7024  001230  6FD8               	movwf	CalibrateThreshold@sensor_threshold_temp_ptr& (0+255),b
  7025  001232  0E00               	movlw	high CalibrateThreshold@sensor_threshold_temp
  7026  001234  0100               	movlb	0	; () banked
  7027  001236  6FD9               	movwf	(CalibrateThreshold@sensor_threshold_temp_ptr+1)& (0+255),b
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;FastBuggy17_Main_Code_TUNING.c: 504: SendStatus(0x05);
  7031  001238  0E05               	movlw	5
  7032  00123A  ECC1  F00E         	call	_SendStatus
  7033                           
  7034                           ;FastBuggy17_Main_Code_TUNING.c: 505: LATJ = 0x07;
  7035  00123E  0E07               	movlw	7
  7036  001240  6E91               	movwf	3985,c	;volatile
  7037                           
  7038                           ;FastBuggy17_Main_Code_TUNING.c: 507: while(PB1pressed() == 0) {
  7039  001242  D03C               	goto	l5929
  7040  001244                     l5911:
  7041                           
  7042                           ;FastBuggy17_Main_Code_TUNING.c: 509: SetADCChannel(5);
  7043  001244  0E05               	movlw	5
  7044  001246  EC5E  F006         	call	_SetADCChannel
  7045                           
  7046                           ;FastBuggy17_Main_Code_TUNING.c: 510: ConvertADC();
  7047  00124A  EC67  F012         	call	_ConvertADC	;wreg free
  7048                           
  7049                           ;FastBuggy17_Main_Code_TUNING.c: 511: while(BusyADC());
  7050  00124E  D000               	goto	l5915
  7051  001250                     l5915:
  7052  001250  EC11  F012         	call	_BusyADC	;wreg free
  7053  001254  0900               	iorlw	0
  7054  001256  A4D8               	btfss	status,2,c
  7055  001258  D7FB               	goto	l5915
  7056                           
  7057                           ;FastBuggy17_Main_Code_TUNING.c: 512: sensor_threshold_temp = ReadADC();
  7058  00125A  EC89  F011         	call	_ReadADC	;wreg free
  7059  00125E  C0CE  F0DA         	movff	?_ReadADC,CalibrateThreshold@sensor_threshold_temp
  7060  001262  C0CF  F0DB         	movff	?_ReadADC+1,CalibrateThreshold@sensor_threshold_temp+1
  7061                           
  7062                           ;FastBuggy17_Main_Code_TUNING.c: 514: GetSensorReadings();
  7063  001266  EC52  F011         	call	_GetSensorReadings	;wreg free
  7064                           
  7065                           ;FastBuggy17_Main_Code_TUNING.c: 515: while(BusySensorAcq() == 1);
  7066  00126A  D000               	goto	l5921
  7067  00126C                     l5921:
  7068  00126C  ECE3  F011         	call	_BusySensorAcq	;wreg free
  7069  001270  06E8               	decf	wreg,f,c
  7070  001272  B4D8               	btfsc	status,2,c
  7071  001274  D7FB               	goto	l5921
  7072                           
  7073                           ;FastBuggy17_Main_Code_TUNING.c: 516: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7074  001276  0EAE               	movlw	low _sensor_readings_raw
  7075  001278  0100               	movlb	0	; () banked
  7076  00127A  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7077  00127C  0E00               	movlw	high _sensor_readings_raw
  7078  00127E  0100               	movlb	0	; () banked
  7079  001280  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7080  001282  0E9A               	movlw	low _sensor_offsets
  7081  001284  0100               	movlb	0	; () banked
  7082  001286  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7083  001288  0E00               	movlw	high _sensor_offsets
  7084  00128A  0100               	movlb	0	; () banked
  7085  00128C  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7086  00128E  ECC3  F00A         	call	_NormaliseSensorReadings	;wreg free
  7087                           
  7088                           ;FastBuggy17_Main_Code_TUNING.c: 517: CalculateSensorStatuses(sensor_readings_normalised
      +                          , sensor_threshold_temp_ptr);
  7089  001292  0EA4               	movlw	low _sensor_readings_normalised
  7090  001294  0100               	movlb	0	; () banked
  7091  001296  6FCE               	movwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),b
  7092  001298  0E00               	movlw	high _sensor_readings_normalised
  7093  00129A  0100               	movlb	0	; () banked
  7094  00129C  6FCF               	movwf	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),b
  7095  00129E  C0D8  F0D0         	movff	CalibrateThreshold@sensor_threshold_temp_ptr,CalculateSensorStatuses@sensor_thres
      +                          hold
  7096  0012A2  C0D9  F0D1         	movff	CalibrateThreshold@sensor_threshold_temp_ptr+1,CalculateSensorStatuses@sensor_thr
      +                          eshold+1
  7097  0012A6  ECE4  F004         	call	_CalculateSensorStatuses	;wreg free
  7098                           
  7099                           ;FastBuggy17_Main_Code_TUNING.c: 519: DisplaySensorStatuses(sensor_statuses);
  7100  0012AA  0E25               	movlw	low _sensor_statuses
  7101  0012AC  0100               	movlb	0	; () banked
  7102  0012AE  6FCE               	movwf	DisplaySensorStatuses@sensor_statuses& (0+255),b
  7103  0012B0  0E00               	movlw	high _sensor_statuses
  7104  0012B2  0100               	movlb	0	; () banked
  7105  0012B4  6FCF               	movwf	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),b
  7106  0012B6  EC73  F00D         	call	_DisplaySensorStatuses	;wreg free
  7107  0012BA  D000               	goto	l5929
  7108  0012BC                     l5929:
  7109  0012BC  EC44  F00D         	call	_PB1pressed	;wreg free
  7110  0012C0  0900               	iorlw	0
  7111  0012C2  B4D8               	btfsc	status,2,c
  7112  0012C4  D7BF               	goto	l5911
  7113                           
  7114                           ;FastBuggy17_Main_Code_TUNING.c: 521: }
  7115                           ;FastBuggy17_Main_Code_TUNING.c: 523: sensor_threshold = sensor_threshold_temp;
  7116  0012C6  C0DA  F0BC         	movff	CalibrateThreshold@sensor_threshold_temp,_sensor_threshold
  7117  0012CA  C0DB  F0BD         	movff	CalibrateThreshold@sensor_threshold_temp+1,_sensor_threshold+1
  7118  0012CE  0012               	return		;funcret
  7119  0012D0                     __end_of_CalibrateThreshold:
  7120                           	opt stack 0
  7121                           prodh	equ	0xFF4
  7122                           prodl	equ	0xFF3
  7123                           intcon	equ	0xFF2
  7124                           postinc0	equ	0xFEE
  7125                           wreg	equ	0xFE8
  7126                           indf2	equ	0xFDF
  7127                           postinc2	equ	0xFDE
  7128                           postdec2	equ	0xFDD
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function _ReadADC *****************
  7134 ;; Defined at:
  7135 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2   16[BANK0 ] int 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;Total ram usage:        4 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    7
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_CalibrateThreshold
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text49
  7164  002312                     __ptext49:
  7165                           	opt stack 0
  7166  002312                     _ReadADC:
  7167                           	opt stack 20
  7168                           
  7169                           ;incstack = 0
  7170  002312  50C4               	movf	4036,w,c	;volatile
  7171  002314  0100               	movlb	0	; () banked
  7172  002316  6FD0               	movwf	??_ReadADC& (0+255),b
  7173  002318  50C3               	movf	4035,w,c	;volatile
  7174  00231A  0100               	movlb	0	; () banked
  7175  00231C  6FCE               	movwf	?_ReadADC& (0+255),b
  7176  00231E  C0D0  F0CF         	movff	??_ReadADC,?_ReadADC+1
  7177  002322  D000               	goto	l1059
  7178  002324                     l1059:
  7179                           
  7180                           ; BSR set to: 0
  7181  002324  0012               	return		;funcret
  7182  002326                     __end_of_ReadADC:
  7183                           	opt stack 0
  7184                           prodh	equ	0xFF4
  7185                           prodl	equ	0xFF3
  7186                           intcon	equ	0xFF2
  7187                           postinc0	equ	0xFEE
  7188                           wreg	equ	0xFE8
  7189                           indf2	equ	0xFDF
  7190                           postinc2	equ	0xFDE
  7191                           postdec2	equ	0xFDD
  7192                           fsr2h	equ	0xFDA
  7193                           fsr2l	equ	0xFD9
  7194                           status	equ	0xFD8
  7195                           
  7196 ;; *************** function _DisplaySensorStatuses *****************
  7197 ;; Defined at:
  7198 ;;		line 370 in file "FastBuggy17_Main_Code_TUNING.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
  7201 ;;		 -> sensor_statuses(5), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  index           1   20[BANK0 ] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;		None               void
  7206 ;; Registers used:
  7207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7216 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7217 ;;Total ram usage:        5 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    7
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_CalibrateThreshold
  7224 ;;		_main
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text50
  7229  001AE6                     __ptext50:
  7230                           	opt stack 0
  7231  001AE6                     _DisplaySensorStatuses:
  7232                           	opt stack 20
  7233                           
  7234                           ;FastBuggy17_Main_Code_TUNING.c: 371: unsigned char index;
  7235                           ;FastBuggy17_Main_Code_TUNING.c: 373: LATJ = 0x00;
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;incstack = 0
  7239  001AE6  0E00               	movlw	0
  7240  001AE8  6E91               	movwf	3985,c	;volatile
  7241                           
  7242                           ;FastBuggy17_Main_Code_TUNING.c: 375: for(index = 0; index < 5; index++) {
  7243  001AEA  0E00               	movlw	0
  7244  001AEC  0100               	movlb	0	; () banked
  7245  001AEE  6FD2               	movwf	DisplaySensorStatuses@index& (0+255),b
  7246  001AF0                     l5719:
  7247                           
  7248                           ; BSR set to: 0
  7249  001AF0  0E04               	movlw	4
  7250  001AF2  0100               	movlb	0	; () banked
  7251  001AF4  65D2               	cpfsgt	DisplaySensorStatuses@index& (0+255),b
  7252  001AF6  D001               	goto	l5723
  7253                           
  7254                           ; BSR set to: 0
  7255  001AF8  D01F               	goto	l831
  7256  001AFA                     l5723:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;FastBuggy17_Main_Code_TUNING.c: 376: LATJ ^= *(sensor_statuses + index) << index;
  7260  001AFA  C0D2  F0D0         	movff	DisplaySensorStatuses@index,??_DisplaySensorStatuses
  7261  001AFE  0100               	movlb	0	; () banked
  7262  001B00  51D2               	movf	DisplaySensorStatuses@index& (0+255),w,b
  7263  001B02  0D01               	mullw	1
  7264  001B04  50F3               	movf	prodl,w,c
  7265  001B06  0100               	movlb	0	; () banked
  7266  001B08  25CE               	addwf	DisplaySensorStatuses@sensor_statuses& (0+255),w,b
  7267  001B0A  6ED9               	movwf	fsr2l,c
  7268  001B0C  50F4               	movf	prodh,w,c
  7269  001B0E  0100               	movlb	0	; () banked
  7270  001B10  21CF               	addwfc	(DisplaySensorStatuses@sensor_statuses+1)& (0+255),w,b
  7271  001B12  6EDA               	movwf	fsr2h,c
  7272  001B14  50DF               	movf	indf2,w,c
  7273  001B16  0100               	movlb	0	; () banked
  7274  001B18  6FD1               	movwf	(??_DisplaySensorStatuses+1)& (0+255),b
  7275  001B1A  0100               	movlb	0	; () banked
  7276  001B1C  2BD0               	incf	??_DisplaySensorStatuses& (0+255),f,b
  7277  001B1E  D003               	goto	u4654
  7278  001B20                     u4655:
  7279  001B20  0100               	movlb	0	; () banked
  7280  001B22  90D8               	bcf	status,0,c
  7281  001B24  37D1               	rlcf	(??_DisplaySensorStatuses+1)& (0+255),f,b
  7282  001B26                     u4654:
  7283  001B26  0100               	movlb	0	; () banked
  7284  001B28  2FD0               	decfsz	??_DisplaySensorStatuses& (0+255),f,b
  7285  001B2A  D7FA               	goto	u4655
  7286  001B2C  0100               	movlb	0	; () banked
  7287  001B2E  51D1               	movf	(??_DisplaySensorStatuses+1)& (0+255),w,b
  7288  001B30  1A91               	xorwf	3985,f,c	;volatile
  7289                           
  7290                           ; BSR set to: 0
  7291  001B32  0100               	movlb	0	; () banked
  7292  001B34  2BD2               	incf	DisplaySensorStatuses@index& (0+255),f,b
  7293  001B36  D7DC               	goto	l5719
  7294  001B38                     l831:
  7295                           
  7296                           ; BSR set to: 0
  7297  001B38  0012               	return		;funcret
  7298  001B3A                     __end_of_DisplaySensorStatuses:
  7299                           	opt stack 0
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           intcon	equ	0xFF2
  7303                           postinc0	equ	0xFEE
  7304                           wreg	equ	0xFE8
  7305                           indf2	equ	0xFDF
  7306                           postinc2	equ	0xFDE
  7307                           postdec2	equ	0xFDD
  7308                           fsr2h	equ	0xFDA
  7309                           fsr2l	equ	0xFD9
  7310                           status	equ	0xFD8
  7311                           
  7312 ;; *************** function _CalculateSensorStatuses *****************
  7313 ;; Defined at:
  7314 ;;		line 314 in file "FastBuggy17_Main_Code_TUNING.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  sensor_readi    2   16[BANK0 ] PTR const int 
  7317 ;;		 -> sensor_readings_normalised(10), 
  7318 ;;  sensor_thres    2   18[BANK0 ] PTR const int 
  7319 ;;		 -> CalibrateThreshold@sensor_threshold_temp(2), sensor_threshold(2), 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  index           1   25[BANK0 ] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;		None               void
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;Total ram usage:       10 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    7
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_CalibrateThreshold
  7342 ;;		_main
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text51
  7347  0009C8                     __ptext51:
  7348                           	opt stack 0
  7349  0009C8                     _CalculateSensorStatuses:
  7350                           	opt stack 20
  7351                           
  7352                           ;FastBuggy17_Main_Code_TUNING.c: 315: unsigned char index;
  7353                           ;FastBuggy17_Main_Code_TUNING.c: 317: if(line_mode == 0) {
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;incstack = 0
  7357  0009C8  502A               	movf	_line_mode,w,c
  7358  0009CA  A4D8               	btfss	status,2,c
  7359  0009CC  D03E               	goto	l5683
  7360                           
  7361                           ;FastBuggy17_Main_Code_TUNING.c: 318: for(index = 0; index < 5; index++) {
  7362  0009CE  0E00               	movlw	0
  7363  0009D0  0100               	movlb	0	; () banked
  7364  0009D2  6FD7               	movwf	CalculateSensorStatuses@index& (0+255),b
  7365  0009D4                     l5669:
  7366                           
  7367                           ; BSR set to: 0
  7368  0009D4  0E04               	movlw	4
  7369  0009D6  0100               	movlb	0	; () banked
  7370  0009D8  65D7               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7371  0009DA  D001               	goto	l5673
  7372                           
  7373                           ; BSR set to: 0
  7374  0009DC  D077               	goto	l818
  7375  0009DE                     l5673:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;FastBuggy17_Main_Code_TUNING.c: 319: if(*(sensor_readings_normalised + index) < *sensor
      +                          _threshold) {
  7379  0009DE  C0D0  FFD9         	movff	CalculateSensorStatuses@sensor_threshold,fsr2l
  7380  0009E2  C0D1  FFDA         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr2h
  7381  0009E6  0100               	movlb	0	; () banked
  7382  0009E8  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7383  0009EA  0D02               	mullw	2
  7384  0009EC  50F3               	movf	prodl,w,c
  7385  0009EE  0100               	movlb	0	; () banked
  7386  0009F0  25CE               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7387  0009F2  6EE1               	movwf	fsr1l,c
  7388  0009F4  50F4               	movf	prodh,w,c
  7389  0009F6  0100               	movlb	0	; () banked
  7390  0009F8  21CF               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7391  0009FA  6EE2               	movwf	fsr1h,c
  7392  0009FC  50DE               	movf	postinc2,w,c
  7393  0009FE  5CE6               	subwf	postinc1,w,c
  7394  000A00  50E6               	movf	postinc1,w,c
  7395  000A02  0A80               	xorlw	128
  7396  000A04  0100               	movlb	0	; () banked
  7397  000A06  6FD6               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7398  000A08  50DE               	movf	postinc2,w,c
  7399  000A0A  0A80               	xorlw	128
  7400  000A0C  0100               	movlb	0	; () banked
  7401  000A0E  59D6               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7402  000A10  B0D8               	btfsc	status,0,c
  7403  000A12  D00B               	goto	l5677
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;FastBuggy17_Main_Code_TUNING.c: 320: sensor_statuses[index] = 1;
  7407  000A14  0100               	movlb	0	; () banked
  7408  000A16  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7409  000A18  0D01               	mullw	1
  7410  000A1A  0E25               	movlw	low _sensor_statuses
  7411  000A1C  24F3               	addwf	prodl,w,c
  7412  000A1E  6ED9               	movwf	fsr2l,c
  7413  000A20  0E00               	movlw	high _sensor_statuses
  7414  000A22  20F4               	addwfc	prodh,w,c
  7415  000A24  6EDA               	movwf	fsr2h,c
  7416  000A26  0E01               	movlw	1
  7417  000A28  D00A               	goto	L3
  7418  000A2A                     l5677:
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;FastBuggy17_Main_Code_TUNING.c: 322: else {
  7422                           ;FastBuggy17_Main_Code_TUNING.c: 323: sensor_statuses[index] = 0;
  7423  000A2A  0100               	movlb	0	; () banked
  7424  000A2C  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7425  000A2E  0D01               	mullw	1
  7426  000A30  0E25               	movlw	low _sensor_statuses
  7427  000A32  24F3               	addwf	prodl,w,c
  7428  000A34  6ED9               	movwf	fsr2l,c
  7429  000A36  0E00               	movlw	high _sensor_statuses
  7430  000A38  20F4               	addwfc	prodh,w,c
  7431  000A3A  6EDA               	movwf	fsr2h,c
  7432  000A3C  0E00               	movlw	0
  7433  000A3E                     L3:
  7434  000A3E  6EDF               	movwf	indf2,c
  7435  000A40  D000               	goto	l5679
  7436  000A42                     l5679:
  7437                           
  7438                           ; BSR set to: 0
  7439  000A42  0100               	movlb	0	; () banked
  7440  000A44  2BD7               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7441  000A46  D7C6               	goto	l5669
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;FastBuggy17_Main_Code_TUNING.c: 324: }
  7445                           ;FastBuggy17_Main_Code_TUNING.c: 325: }
  7446                           ;FastBuggy17_Main_Code_TUNING.c: 326: }
  7447                           
  7448                           ; BSR set to: 0
  7449  000A48  D041               	goto	l818
  7450  000A4A                     l5683:
  7451                           
  7452                           ;FastBuggy17_Main_Code_TUNING.c: 327: else if(line_mode == 1) {
  7453  000A4A  042A               	decf	_line_mode,w,c
  7454  000A4C  A4D8               	btfss	status,2,c
  7455  000A4E  D03E               	goto	l818
  7456                           
  7457                           ;FastBuggy17_Main_Code_TUNING.c: 328: for(index = 0; index < 5; index++) {
  7458  000A50  0E00               	movlw	0
  7459  000A52  0100               	movlb	0	; () banked
  7460  000A54  6FD7               	movwf	CalculateSensorStatuses@index& (0+255),b
  7461  000A56                     l5687:
  7462                           
  7463                           ; BSR set to: 0
  7464  000A56  0E04               	movlw	4
  7465  000A58  0100               	movlb	0	; () banked
  7466  000A5A  65D7               	cpfsgt	CalculateSensorStatuses@index& (0+255),b
  7467  000A5C  D001               	goto	l5691
  7468                           
  7469                           ; BSR set to: 0
  7470  000A5E  D036               	goto	l818
  7471  000A60                     l5691:
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;FastBuggy17_Main_Code_TUNING.c: 329: if(*(sensor_readings_normalised + index) > *sensor
      +                          _threshold) {
  7475  000A60  0100               	movlb	0	; () banked
  7476  000A62  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7477  000A64  0D02               	mullw	2
  7478  000A66  50F3               	movf	prodl,w,c
  7479  000A68  0100               	movlb	0	; () banked
  7480  000A6A  25CE               	addwf	CalculateSensorStatuses@sensor_readings_normalised& (0+255),w,b
  7481  000A6C  6ED9               	movwf	fsr2l,c
  7482  000A6E  50F4               	movf	prodh,w,c
  7483  000A70  0100               	movlb	0	; () banked
  7484  000A72  21CF               	addwfc	(CalculateSensorStatuses@sensor_readings_normalised+1)& (0+255),w,b
  7485  000A74  6EDA               	movwf	fsr2h,c
  7486  000A76  C0D0  FFE1         	movff	CalculateSensorStatuses@sensor_threshold,fsr1l
  7487  000A7A  C0D1  FFE2         	movff	CalculateSensorStatuses@sensor_threshold+1,fsr1h
  7488  000A7E  50DE               	movf	postinc2,w,c
  7489  000A80  5CE6               	subwf	postinc1,w,c
  7490  000A82  50E6               	movf	postinc1,w,c
  7491  000A84  0A80               	xorlw	128
  7492  000A86  0100               	movlb	0	; () banked
  7493  000A88  6FD6               	movwf	(??_CalculateSensorStatuses+4)& (0+255),b
  7494  000A8A  50DE               	movf	postinc2,w,c
  7495  000A8C  0A80               	xorlw	128
  7496  000A8E  0100               	movlb	0	; () banked
  7497  000A90  59D6               	subwfb	(??_CalculateSensorStatuses+4)& (0+255),w,b
  7498  000A92  B0D8               	btfsc	status,0,c
  7499  000A94  D00B               	goto	l5695
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;FastBuggy17_Main_Code_TUNING.c: 330: sensor_statuses[index] = 1;
  7503  000A96  0100               	movlb	0	; () banked
  7504  000A98  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7505  000A9A  0D01               	mullw	1
  7506  000A9C  0E25               	movlw	low _sensor_statuses
  7507  000A9E  24F3               	addwf	prodl,w,c
  7508  000AA0  6ED9               	movwf	fsr2l,c
  7509  000AA2  0E00               	movlw	high _sensor_statuses
  7510  000AA4  20F4               	addwfc	prodh,w,c
  7511  000AA6  6EDA               	movwf	fsr2h,c
  7512  000AA8  0E01               	movlw	1
  7513  000AAA  D00A               	goto	L4
  7514  000AAC                     l5695:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;FastBuggy17_Main_Code_TUNING.c: 332: else {
  7518                           ;FastBuggy17_Main_Code_TUNING.c: 333: sensor_statuses[index] = 0;
  7519  000AAC  0100               	movlb	0	; () banked
  7520  000AAE  51D7               	movf	CalculateSensorStatuses@index& (0+255),w,b
  7521  000AB0  0D01               	mullw	1
  7522  000AB2  0E25               	movlw	low _sensor_statuses
  7523  000AB4  24F3               	addwf	prodl,w,c
  7524  000AB6  6ED9               	movwf	fsr2l,c
  7525  000AB8  0E00               	movlw	high _sensor_statuses
  7526  000ABA  20F4               	addwfc	prodh,w,c
  7527  000ABC  6EDA               	movwf	fsr2h,c
  7528  000ABE  0E00               	movlw	0
  7529  000AC0                     L4:
  7530  000AC0  6EDF               	movwf	indf2,c
  7531  000AC2  D000               	goto	l5697
  7532  000AC4                     l5697:
  7533                           
  7534                           ; BSR set to: 0
  7535  000AC4  0100               	movlb	0	; () banked
  7536  000AC6  2BD7               	incf	CalculateSensorStatuses@index& (0+255),f,b
  7537  000AC8  D7C6               	goto	l5687
  7538                           
  7539                           ; BSR set to: 0
  7540                           
  7541                           ; BSR set to: 0
  7542                           
  7543                           ; BSR set to: 0
  7544  000ACA  D000               	goto	l818
  7545  000ACC                     l818:
  7546  000ACC  0012               	return		;funcret
  7547  000ACE                     __end_of_CalculateSensorStatuses:
  7548                           	opt stack 0
  7549                           prodh	equ	0xFF4
  7550                           prodl	equ	0xFF3
  7551                           intcon	equ	0xFF2
  7552                           postinc0	equ	0xFEE
  7553                           wreg	equ	0xFE8
  7554                           postinc1	equ	0xFE6
  7555                           fsr1h	equ	0xFE2
  7556                           fsr1l	equ	0xFE1
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564 ;; *************** function _BusyADC *****************
  7565 ;; Defined at:
  7566 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;		None
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      unsigned char 
  7573 ;; Registers used:
  7574 ;;		wreg
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7584 ;;Total ram usage:        0 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    7
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_CalibrateThreshold
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           	psect	text52
  7595  002422                     __ptext52:
  7596                           	opt stack 0
  7597  002422                     _BusyADC:
  7598                           	opt stack 20
  7599                           
  7600                           ;incstack = 0
  7601  002422  A2C2               	btfss	4034,1,c	;volatile
  7602  002424  D002               	goto	u4730
  7603  002426  0E01               	movlw	1
  7604  002428  D002               	goto	l1029
  7605  00242A                     u4730:
  7606  00242A  0E00               	movlw	0
  7607  00242C  D000               	goto	l1029
  7608  00242E                     l1029:
  7609  00242E  0012               	return		;funcret
  7610  002430                     __end_of_BusyADC:
  7611                           	opt stack 0
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           postinc0	equ	0xFEE
  7616                           wreg	equ	0xFE8
  7617                           postinc1	equ	0xFE6
  7618                           fsr1h	equ	0xFE2
  7619                           fsr1l	equ	0xFE1
  7620                           indf2	equ	0xFDF
  7621                           postinc2	equ	0xFDE
  7622                           postdec2	equ	0xFDD
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function _CalibrateOnLine *****************
  7628 ;; Defined at:
  7629 ;;		line 482 in file "FastBuggy17_Main_Code_TUNING.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;		None               void
  7636 ;; Registers used:
  7637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:   10
  7650 ;; This function calls:
  7651 ;;		_BusySensorAcq
  7652 ;;		_CalculateSensorSum
  7653 ;;		_GetSensorReadings
  7654 ;;		_NormaliseSensorReadings
  7655 ;;		_PB1pressed
  7656 ;;		_SendStatus
  7657 ;; This function is called by:
  7658 ;;		_GenerateCalibration
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text53
  7663  001968                     __ptext53:
  7664                           	opt stack 0
  7665  001968                     _CalibrateOnLine:
  7666                           	opt stack 18
  7667                           
  7668                           ;FastBuggy17_Main_Code_TUNING.c: 483: SendStatus(0x04);
  7669                           
  7670                           ;incstack = 0
  7671  001968  0E04               	movlw	4
  7672  00196A  ECC1  F00E         	call	_SendStatus
  7673                           
  7674                           ;FastBuggy17_Main_Code_TUNING.c: 484: LATJ = 0x07;
  7675  00196E  0E07               	movlw	7
  7676  001970  6E91               	movwf	3985,c	;volatile
  7677                           
  7678                           ;FastBuggy17_Main_Code_TUNING.c: 486: while(PB1pressed() == 0);
  7679  001972  D000               	goto	l5895
  7680  001974                     l5895:
  7681  001974  EC44  F00D         	call	_PB1pressed	;wreg free
  7682  001978  0900               	iorlw	0
  7683  00197A  B4D8               	btfsc	status,2,c
  7684  00197C  D7FB               	goto	l5895
  7685                           
  7686                           ;FastBuggy17_Main_Code_TUNING.c: 488: GetSensorReadings();
  7687  00197E  EC52  F011         	call	_GetSensorReadings	;wreg free
  7688                           
  7689                           ;FastBuggy17_Main_Code_TUNING.c: 489: while(BusySensorAcq() == 1);
  7690  001982  D000               	goto	l5899
  7691  001984                     l5899:
  7692  001984  ECE3  F011         	call	_BusySensorAcq	;wreg free
  7693  001988  06E8               	decf	wreg,f,c
  7694  00198A  B4D8               	btfsc	status,2,c
  7695  00198C  D7FB               	goto	l5899
  7696                           
  7697                           ;FastBuggy17_Main_Code_TUNING.c: 490: NormaliseSensorReadings(sensor_readings_raw, senso
      +                          r_offsets);
  7698  00198E  0EAE               	movlw	low _sensor_readings_raw
  7699  001990  0100               	movlb	0	; () banked
  7700  001992  6FCE               	movwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),b
  7701  001994  0E00               	movlw	high _sensor_readings_raw
  7702  001996  0100               	movlb	0	; () banked
  7703  001998  6FCF               	movwf	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),b
  7704  00199A  0E9A               	movlw	low _sensor_offsets
  7705  00199C  0100               	movlb	0	; () banked
  7706  00199E  6FD0               	movwf	NormaliseSensorReadings@sensor_offsets& (0+255),b
  7707  0019A0  0E00               	movlw	high _sensor_offsets
  7708  0019A2  0100               	movlb	0	; () banked
  7709  0019A4  6FD1               	movwf	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),b
  7710  0019A6  ECC3  F00A         	call	_NormaliseSensorReadings	;wreg free
  7711                           
  7712                           ;FastBuggy17_Main_Code_TUNING.c: 492: sensor_threshold = sensor_readings_normalised[2];
  7713  0019AA  C0A8  F0BC         	movff	_sensor_readings_normalised+4,_sensor_threshold
  7714  0019AE  C0A9  F0BD         	movff	_sensor_readings_normalised+5,_sensor_threshold+1
  7715                           
  7716                           ;FastBuggy17_Main_Code_TUNING.c: 493: PID_set_point = CalculateSensorSum(sensor_readings
      +                          _normalised);
  7717  0019B2  0EA4               	movlw	low _sensor_readings_normalised
  7718  0019B4  0100               	movlb	0	; () banked
  7719  0019B6  6FD4               	movwf	CalculateSensorSum@sensor_readings_normalised& (0+255),b
  7720  0019B8  0E00               	movlw	high _sensor_readings_normalised
  7721  0019BA  0100               	movlb	0	; () banked
  7722  0019BC  6FD5               	movwf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),b
  7723  0019BE  EC67  F005         	call	_CalculateSensorSum	;wreg free
  7724  0019C2  C0D4  F0BA         	movff	?_CalculateSensorSum,_PID_set_point
  7725  0019C6  C0D5  F0BB         	movff	?_CalculateSensorSum+1,_PID_set_point+1
  7726  0019CA  0012               	return		;funcret
  7727  0019CC                     __end_of_CalibrateOnLine:
  7728                           	opt stack 0
  7729                           prodh	equ	0xFF4
  7730                           prodl	equ	0xFF3
  7731                           intcon	equ	0xFF2
  7732                           postinc0	equ	0xFEE
  7733                           wreg	equ	0xFE8
  7734                           postinc1	equ	0xFE6
  7735                           fsr1h	equ	0xFE2
  7736                           fsr1l	equ	0xFE1
  7737                           indf2	equ	0xFDF
  7738                           postinc2	equ	0xFDE
  7739                           postdec2	equ	0xFDD
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744 ;; *************** function _NormaliseSensorReadings *****************
  7745 ;; Defined at:
  7746 ;;		line 304 in file "FastBuggy17_Main_Code_TUNING.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  sensor_readi    2   16[BANK0 ] PTR  int 
  7749 ;;		 -> sensor_readings_raw(10), 
  7750 ;;  sensor_offse    2   18[BANK0 ] PTR const int 
  7751 ;;		 -> sensor_offsets(10), 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  index           1   24[BANK0 ] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;		None               void
  7756 ;; Registers used:
  7757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;Total ram usage:        9 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    7
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_CalibrateOnLine
  7774 ;;		_CalibrateThreshold
  7775 ;;		_main
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text54
  7780  001586                     __ptext54:
  7781                           	opt stack 0
  7782  001586                     _NormaliseSensorReadings:
  7783                           	opt stack 23
  7784                           
  7785                           ;FastBuggy17_Main_Code_TUNING.c: 305: unsigned char index;
  7786                           ;FastBuggy17_Main_Code_TUNING.c: 307: for(index = 0; index < 5; index++) {
  7787                           
  7788                           ;incstack = 0
  7789  001586  0E00               	movlw	0
  7790  001588  0100               	movlb	0	; () banked
  7791  00158A  6FD6               	movwf	NormaliseSensorReadings@index& (0+255),b
  7792  00158C                     l5655:
  7793                           
  7794                           ; BSR set to: 0
  7795  00158C  0E04               	movlw	4
  7796  00158E  0100               	movlb	0	; () banked
  7797  001590  65D6               	cpfsgt	NormaliseSensorReadings@index& (0+255),b
  7798  001592  D001               	goto	l5659
  7799                           
  7800                           ; BSR set to: 0
  7801  001594  D036               	goto	l804
  7802  001596                     l5659:
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;FastBuggy17_Main_Code_TUNING.c: 308: sensor_readings_normalised[index] = *(sensor_readi
      +                          ngs_raw + index) + *(sensor_offsets + index);
  7806  001596  0100               	movlb	0	; () banked
  7807  001598  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7808  00159A  0D02               	mullw	2
  7809  00159C  50F3               	movf	prodl,w,c
  7810  00159E  0100               	movlb	0	; () banked
  7811  0015A0  25D0               	addwf	NormaliseSensorReadings@sensor_offsets& (0+255),w,b
  7812  0015A2  6ED9               	movwf	fsr2l,c
  7813  0015A4  50F4               	movf	prodh,w,c
  7814  0015A6  0100               	movlb	0	; () banked
  7815  0015A8  21D1               	addwfc	(NormaliseSensorReadings@sensor_offsets+1)& (0+255),w,b
  7816  0015AA  6EDA               	movwf	fsr2h,c
  7817  0015AC  CFDE F0D2          	movff	postinc2,??_NormaliseSensorReadings
  7818  0015B0  CFDD F0D3          	movff	postdec2,??_NormaliseSensorReadings+1
  7819  0015B4  0100               	movlb	0	; () banked
  7820  0015B6  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7821  0015B8  0D02               	mullw	2
  7822  0015BA  50F3               	movf	prodl,w,c
  7823  0015BC  0100               	movlb	0	; () banked
  7824  0015BE  25CE               	addwf	NormaliseSensorReadings@sensor_readings_raw& (0+255),w,b
  7825  0015C0  6ED9               	movwf	fsr2l,c
  7826  0015C2  50F4               	movf	prodh,w,c
  7827  0015C4  0100               	movlb	0	; () banked
  7828  0015C6  21CF               	addwfc	(NormaliseSensorReadings@sensor_readings_raw+1)& (0+255),w,b
  7829  0015C8  6EDA               	movwf	fsr2h,c
  7830  0015CA  CFDE F0D4          	movff	postinc2,??_NormaliseSensorReadings+2
  7831  0015CE  CFDD F0D5          	movff	postdec2,??_NormaliseSensorReadings+3
  7832  0015D2  0100               	movlb	0	; () banked
  7833  0015D4  51D2               	movf	??_NormaliseSensorReadings& (0+255),w,b
  7834  0015D6  0100               	movlb	0	; () banked
  7835  0015D8  27D4               	addwf	(??_NormaliseSensorReadings+2)& (0+255),f,b
  7836  0015DA  0100               	movlb	0	; () banked
  7837  0015DC  51D3               	movf	(??_NormaliseSensorReadings+1)& (0+255),w,b
  7838  0015DE  0100               	movlb	0	; () banked
  7839  0015E0  23D5               	addwfc	(??_NormaliseSensorReadings+3)& (0+255),f,b
  7840  0015E2  0100               	movlb	0	; () banked
  7841  0015E4  51D6               	movf	NormaliseSensorReadings@index& (0+255),w,b
  7842  0015E6  0D02               	mullw	2
  7843  0015E8  0EA4               	movlw	low _sensor_readings_normalised
  7844  0015EA  24F3               	addwf	prodl,w,c
  7845  0015EC  6ED9               	movwf	fsr2l,c
  7846  0015EE  0E00               	movlw	high _sensor_readings_normalised
  7847  0015F0  20F4               	addwfc	prodh,w,c
  7848  0015F2  6EDA               	movwf	fsr2h,c
  7849  0015F4  C0D4  FFDE         	movff	??_NormaliseSensorReadings+2,postinc2
  7850  0015F8  C0D5  FFDD         	movff	??_NormaliseSensorReadings+3,postdec2
  7851                           
  7852                           ; BSR set to: 0
  7853  0015FC  0100               	movlb	0	; () banked
  7854  0015FE  2BD6               	incf	NormaliseSensorReadings@index& (0+255),f,b
  7855  001600  D7C5               	goto	l5655
  7856  001602                     l804:
  7857                           
  7858                           ; BSR set to: 0
  7859  001602  0012               	return		;funcret
  7860  001604                     __end_of_NormaliseSensorReadings:
  7861                           	opt stack 0
  7862                           prodh	equ	0xFF4
  7863                           prodl	equ	0xFF3
  7864                           intcon	equ	0xFF2
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           postinc1	equ	0xFE6
  7868                           fsr1h	equ	0xFE2
  7869                           fsr1l	equ	0xFE1
  7870                           indf2	equ	0xFDF
  7871                           postinc2	equ	0xFDE
  7872                           postdec2	equ	0xFDD
  7873                           fsr2h	equ	0xFDA
  7874                           fsr2l	equ	0xFD9
  7875                           status	equ	0xFD8
  7876                           
  7877 ;; *************** function _CalculateSensorSum *****************
  7878 ;; Defined at:
  7879 ;;		line 341 in file "FastBuggy17_Main_Code_TUNING.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  sensor_readi    2   22[BANK0 ] PTR const int 
  7882 ;;		 -> sensor_readings_normalised(10), 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  sum             2   26[BANK0 ] int 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  2   22[BANK0 ] int 
  7887 ;; Registers used:
  7888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;Total ram usage:        6 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    8
  7901 ;; This function calls:
  7902 ;;		___wmul
  7903 ;; This function is called by:
  7904 ;;		_CalibrateOnLine
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text55
  7910  000ACE                     __ptext55:
  7911                           	opt stack 0
  7912  000ACE                     _CalculateSensorSum:
  7913                           	opt stack 19
  7914                           
  7915                           ;FastBuggy17_Main_Code_TUNING.c: 343: int sum = 0;
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;incstack = 0
  7919  000ACE  0E00               	movlw	0
  7920  000AD0  0100               	movlb	0	; () banked
  7921  000AD2  6FD9               	movwf	(CalculateSensorSum@sum+1)& (0+255),b
  7922  000AD4  0E00               	movlw	0
  7923  000AD6  6FD8               	movwf	CalculateSensorSum@sum& (0+255),b
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;FastBuggy17_Main_Code_TUNING.c: 345: sum += *(sensor_readings_normalised + 0) * 3;
  7927  000AD8  C0D4  FFD9         	movff	CalculateSensorSum@sensor_readings_normalised,fsr2l
  7928  000ADC  C0D5  FFDA         	movff	CalculateSensorSum@sensor_readings_normalised+1,fsr2h
  7929  000AE0  CFDE F0CE          	movff	postinc2,___wmul@multiplier
  7930  000AE4  CFDD F0CF          	movff	postdec2,___wmul@multiplier+1
  7931  000AE8  0E00               	movlw	0
  7932  000AEA  0100               	movlb	0	; () banked
  7933  000AEC  6FD1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7934  000AEE  0E03               	movlw	3
  7935  000AF0  6FD0               	movwf	___wmul@multiplicand& (0+255),b
  7936  000AF2  EC16  F00F         	call	___wmul	;wreg free
  7937  000AF6  0100               	movlb	0	; () banked
  7938  000AF8  51CE               	movf	?___wmul& (0+255),w,b
  7939  000AFA  0100               	movlb	0	; () banked
  7940  000AFC  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7941  000AFE  0100               	movlb	0	; () banked
  7942  000B00  51CF               	movf	(?___wmul+1)& (0+255),w,b
  7943  000B02  0100               	movlb	0	; () banked
  7944  000B04  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;FastBuggy17_Main_Code_TUNING.c: 346: sum += *(sensor_readings_normalised + 1) * 2;
  7948  000B06  0100               	movlb	0	; () banked
  7949  000B08  EE20 F002          	lfsr	2,2
  7950  000B0C  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7951  000B0E  26D9               	addwf	fsr2l,f,c
  7952  000B10  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7953  000B12  22DA               	addwfc	fsr2h,f,c
  7954  000B14  CFDE F0D6          	movff	postinc2,??_CalculateSensorSum
  7955  000B18  CFDD F0D7          	movff	postdec2,??_CalculateSensorSum+1
  7956  000B1C  90D8               	bcf	status,0,c
  7957  000B1E  0100               	movlb	0	; () banked
  7958  000B20  37D6               	rlcf	??_CalculateSensorSum& (0+255),f,b
  7959  000B22  37D7               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  7960  000B24  0100               	movlb	0	; () banked
  7961  000B26  51D6               	movf	??_CalculateSensorSum& (0+255),w,b
  7962  000B28  0100               	movlb	0	; () banked
  7963  000B2A  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7964  000B2C  0100               	movlb	0	; () banked
  7965  000B2E  51D7               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  7966  000B30  0100               	movlb	0	; () banked
  7967  000B32  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;FastBuggy17_Main_Code_TUNING.c: 347: sum += *(sensor_readings_normalised + 2) * 1;
  7971  000B34  0100               	movlb	0	; () banked
  7972  000B36  EE20 F004          	lfsr	2,4
  7973  000B3A  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7974  000B3C  26D9               	addwf	fsr2l,f,c
  7975  000B3E  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7976  000B40  22DA               	addwfc	fsr2h,f,c
  7977  000B42  50DE               	movf	postinc2,w,c
  7978  000B44  0100               	movlb	0	; () banked
  7979  000B46  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  7980  000B48  50DD               	movf	postdec2,w,c
  7981  000B4A  0100               	movlb	0	; () banked
  7982  000B4C  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;FastBuggy17_Main_Code_TUNING.c: 348: sum += *(sensor_readings_normalised + 3) * -2;
  7986  000B4E  0100               	movlb	0	; () banked
  7987  000B50  EE20 F006          	lfsr	2,6
  7988  000B54  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  7989  000B56  26D9               	addwf	fsr2l,f,c
  7990  000B58  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  7991  000B5A  22DA               	addwfc	fsr2h,f,c
  7992  000B5C  CFDE F0D6          	movff	postinc2,??_CalculateSensorSum
  7993  000B60  CFDD F0D7          	movff	postdec2,??_CalculateSensorSum+1
  7994  000B64  90D8               	bcf	status,0,c
  7995  000B66  0100               	movlb	0	; () banked
  7996  000B68  37D6               	rlcf	??_CalculateSensorSum& (0+255),f,b
  7997  000B6A  37D7               	rlcf	(??_CalculateSensorSum+1)& (0+255),f,b
  7998  000B6C  0100               	movlb	0	; () banked
  7999  000B6E  1FD6               	comf	??_CalculateSensorSum& (0+255),f,b
  8000  000B70  1FD7               	comf	(??_CalculateSensorSum+1)& (0+255),f,b
  8001  000B72  4BD6               	infsnz	??_CalculateSensorSum& (0+255),f,b
  8002  000B74  2BD7               	incf	(??_CalculateSensorSum+1)& (0+255),f,b
  8003  000B76  0100               	movlb	0	; () banked
  8004  000B78  51D6               	movf	??_CalculateSensorSum& (0+255),w,b
  8005  000B7A  0100               	movlb	0	; () banked
  8006  000B7C  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8007  000B7E  0100               	movlb	0	; () banked
  8008  000B80  51D7               	movf	(??_CalculateSensorSum+1)& (0+255),w,b
  8009  000B82  0100               	movlb	0	; () banked
  8010  000B84  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;FastBuggy17_Main_Code_TUNING.c: 349: sum += *(sensor_readings_normalised + 4) * -3;
  8014  000B86  0100               	movlb	0	; () banked
  8015  000B88  EE20 F008          	lfsr	2,8
  8016  000B8C  51D4               	movf	CalculateSensorSum@sensor_readings_normalised& (0+255),w,b
  8017  000B8E  26D9               	addwf	fsr2l,f,c
  8018  000B90  51D5               	movf	(CalculateSensorSum@sensor_readings_normalised+1)& (0+255),w,b
  8019  000B92  22DA               	addwfc	fsr2h,f,c
  8020  000B94  CFDE F0CE          	movff	postinc2,___wmul@multiplier
  8021  000B98  CFDD F0CF          	movff	postdec2,___wmul@multiplier+1
  8022  000B9C  0EFF               	movlw	255
  8023  000B9E  0100               	movlb	0	; () banked
  8024  000BA0  6FD1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8025  000BA2  0EFD               	movlw	253
  8026  000BA4  6FD0               	movwf	___wmul@multiplicand& (0+255),b
  8027  000BA6  EC16  F00F         	call	___wmul	;wreg free
  8028  000BAA  0100               	movlb	0	; () banked
  8029  000BAC  51CE               	movf	?___wmul& (0+255),w,b
  8030  000BAE  0100               	movlb	0	; () banked
  8031  000BB0  27D8               	addwf	CalculateSensorSum@sum& (0+255),f,b
  8032  000BB2  0100               	movlb	0	; () banked
  8033  000BB4  51CF               	movf	(?___wmul+1)& (0+255),w,b
  8034  000BB6  0100               	movlb	0	; () banked
  8035  000BB8  23D9               	addwfc	(CalculateSensorSum@sum+1)& (0+255),f,b
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;FastBuggy17_Main_Code_TUNING.c: 351: return(sum);
  8039  000BBA  C0D8  F0D4         	movff	CalculateSensorSum@sum,?_CalculateSensorSum
  8040  000BBE  C0D9  F0D5         	movff	CalculateSensorSum@sum+1,?_CalculateSensorSum+1
  8041  000BC2  D000               	goto	l821
  8042  000BC4                     l821:
  8043                           
  8044                           ; BSR set to: 0
  8045  000BC4  0012               	return		;funcret
  8046  000BC6                     __end_of_CalculateSensorSum:
  8047                           	opt stack 0
  8048                           prodh	equ	0xFF4
  8049                           prodl	equ	0xFF3
  8050                           intcon	equ	0xFF2
  8051                           postinc0	equ	0xFEE
  8052                           wreg	equ	0xFE8
  8053                           postinc1	equ	0xFE6
  8054                           fsr1h	equ	0xFE2
  8055                           fsr1l	equ	0xFE1
  8056                           indf2	equ	0xFDF
  8057                           postinc2	equ	0xFDE
  8058                           postdec2	equ	0xFDD
  8059                           fsr2h	equ	0xFDA
  8060                           fsr2l	equ	0xFD9
  8061                           status	equ	0xFD8
  8062                           
  8063 ;; *************** function ___wmul *****************
  8064 ;; Defined at:
  8065 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  multiplier      2   16[BANK0 ] unsigned int 
  8068 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  product         2   20[BANK0 ] unsigned int 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  2   16[BANK0 ] unsigned int 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, prodl, prodh
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;Total ram usage:        6 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    7
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_CalculateSensorSum
  8091 ;;		_main
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text56
  8096  001E2C                     __ptext56:
  8097                           	opt stack 0
  8098  001E2C                     ___wmul:
  8099                           	opt stack 23
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;incstack = 0
  8103  001E2C  0100               	movlb	0	; () banked
  8104  001E2E  51CE               	movf	___wmul@multiplier& (0+255),w,b
  8105  001E30  0100               	movlb	0	; () banked
  8106  001E32  03D0               	mulwf	___wmul@multiplicand& (0+255),b
  8107  001E34  CFF3 F0D2          	movff	prodl,___wmul@product
  8108  001E38  CFF4 F0D3          	movff	prodh,___wmul@product+1
  8109  001E3C  0100               	movlb	0	; () banked
  8110  001E3E  51CE               	movf	___wmul@multiplier& (0+255),w,b
  8111  001E40  0100               	movlb	0	; () banked
  8112  001E42  03D1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8113  001E44  50F3               	movf	prodl,w,c
  8114  001E46  0100               	movlb	0	; () banked
  8115  001E48  27D3               	addwf	(___wmul@product+1)& (0+255),f,b
  8116  001E4A  0100               	movlb	0	; () banked
  8117  001E4C  51CF               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8118  001E4E  0100               	movlb	0	; () banked
  8119  001E50  03D0               	mulwf	___wmul@multiplicand& (0+255),b
  8120  001E52  50F3               	movf	prodl,w,c
  8121  001E54  0100               	movlb	0	; () banked
  8122  001E56  27D3               	addwf	(___wmul@product+1)& (0+255),f,b
  8123                           
  8124                           ; BSR set to: 0
  8125  001E58  C0D2  F0CE         	movff	___wmul@product,?___wmul
  8126  001E5C  C0D3  F0CF         	movff	___wmul@product+1,?___wmul+1
  8127  001E60  D000               	goto	l1248
  8128  001E62                     l1248:
  8129                           
  8130                           ; BSR set to: 0
  8131  001E62  0012               	return		;funcret
  8132  001E64                     __end_of___wmul:
  8133                           	opt stack 0
  8134                           prodh	equ	0xFF4
  8135                           prodl	equ	0xFF3
  8136                           intcon	equ	0xFF2
  8137                           postinc0	equ	0xFEE
  8138                           wreg	equ	0xFE8
  8139                           postinc1	equ	0xFE6
  8140                           fsr1h	equ	0xFE2
  8141                           fsr1l	equ	0xFE1
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           fsr2h	equ	0xFDA
  8146                           fsr2l	equ	0xFD9
  8147                           status	equ	0xFD8
  8148                           
  8149 ;; *************** function _CalibrateOffsets *****************
  8150 ;; Defined at:
  8151 ;;		line 462 in file "FastBuggy17_Main_Code_TUNING.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  index           1   27[BANK0 ] unsigned char 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;		None               void
  8158 ;; Registers used:
  8159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;Total ram usage:        3 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:   10
  8172 ;; This function calls:
  8173 ;;		_BusySensorAcq
  8174 ;;		_GetSensorReadings
  8175 ;;		_PB1pressed
  8176 ;;		_SendStatus
  8177 ;; This function is called by:
  8178 ;;		_GenerateCalibration
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text57
  8183  001372                     __ptext57:
  8184                           	opt stack 0
  8185  001372                     _CalibrateOffsets:
  8186                           	opt stack 18
  8187                           
  8188                           ;FastBuggy17_Main_Code_TUNING.c: 463: unsigned char index;
  8189                           ;FastBuggy17_Main_Code_TUNING.c: 465: SendStatus(0x03);
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;incstack = 0
  8193  001372  0E03               	movlw	3
  8194  001374  ECC1  F00E         	call	_SendStatus
  8195                           
  8196                           ;FastBuggy17_Main_Code_TUNING.c: 466: LATJ = 0x07;
  8197  001378  0E07               	movlw	7
  8198  00137A  6E91               	movwf	3985,c	;volatile
  8199                           
  8200                           ;FastBuggy17_Main_Code_TUNING.c: 468: while(PB1pressed() == 0);
  8201  00137C  D000               	goto	l5873
  8202  00137E                     l5873:
  8203  00137E  EC44  F00D         	call	_PB1pressed	;wreg free
  8204  001382  0900               	iorlw	0
  8205  001384  B4D8               	btfsc	status,2,c
  8206  001386  D7FB               	goto	l5873
  8207                           
  8208                           ;FastBuggy17_Main_Code_TUNING.c: 470: GetSensorReadings();
  8209  001388  EC52  F011         	call	_GetSensorReadings	;wreg free
  8210                           
  8211                           ;FastBuggy17_Main_Code_TUNING.c: 471: while(BusySensorAcq());
  8212  00138C  D000               	goto	l5877
  8213  00138E                     l5877:
  8214  00138E  ECE3  F011         	call	_BusySensorAcq	;wreg free
  8215  001392  0900               	iorlw	0
  8216  001394  A4D8               	btfss	status,2,c
  8217  001396  D7FB               	goto	l5877
  8218                           
  8219                           ;FastBuggy17_Main_Code_TUNING.c: 473: for(index = 0; index < 5; index++) {
  8220  001398  0E00               	movlw	0
  8221  00139A  0100               	movlb	0	; () banked
  8222  00139C  6FD9               	movwf	CalibrateOffsets@index& (0+255),b
  8223  00139E                     l5881:
  8224                           
  8225                           ; BSR set to: 0
  8226  00139E  0E04               	movlw	4
  8227  0013A0  0100               	movlb	0	; () banked
  8228  0013A2  65D9               	cpfsgt	CalibrateOffsets@index& (0+255),b
  8229  0013A4  D001               	goto	l5885
  8230                           
  8231                           ; BSR set to: 0
  8232  0013A6  D02A               	goto	l881
  8233  0013A8                     l5885:
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;FastBuggy17_Main_Code_TUNING.c: 475: sensor_offsets[index] = sensor_readings_raw[2] - s
      +                          ensor_readings_raw[index];
  8237  0013A8  0100               	movlb	0	; () banked
  8238  0013AA  51D9               	movf	CalibrateOffsets@index& (0+255),w,b
  8239  0013AC  0D02               	mullw	2
  8240  0013AE  0EAE               	movlw	low _sensor_readings_raw
  8241  0013B0  24F3               	addwf	prodl,w,c
  8242  0013B2  6ED9               	movwf	fsr2l,c
  8243  0013B4  0E00               	movlw	high _sensor_readings_raw
  8244  0013B6  20F4               	addwfc	prodh,w,c
  8245  0013B8  6EDA               	movwf	fsr2h,c
  8246  0013BA  CFDE F0D7          	movff	postinc2,??_CalibrateOffsets
  8247  0013BE  CFDD F0D8          	movff	postdec2,??_CalibrateOffsets+1
  8248  0013C2  0100               	movlb	0	; () banked
  8249  0013C4  1FD7               	comf	??_CalibrateOffsets& (0+255),f,b
  8250  0013C6  1FD8               	comf	(??_CalibrateOffsets+1)& (0+255),f,b
  8251  0013C8  4BD7               	infsnz	??_CalibrateOffsets& (0+255),f,b
  8252  0013CA  2BD8               	incf	(??_CalibrateOffsets+1)& (0+255),f,b
  8253  0013CC  0100               	movlb	0	; () banked
  8254  0013CE  51B2               	movf	(_sensor_readings_raw+4)& (0+255),w,b	;volatile
  8255  0013D0  0100               	movlb	0	; () banked
  8256  0013D2  27D7               	addwf	??_CalibrateOffsets& (0+255),f,b
  8257  0013D4  0100               	movlb	0	; () banked
  8258  0013D6  51B3               	movf	(_sensor_readings_raw+5)& (0+255),w,b	;volatile
  8259  0013D8  0100               	movlb	0	; () banked
  8260  0013DA  23D8               	addwfc	(??_CalibrateOffsets+1)& (0+255),f,b
  8261  0013DC  0100               	movlb	0	; () banked
  8262  0013DE  51D9               	movf	CalibrateOffsets@index& (0+255),w,b
  8263  0013E0  0D02               	mullw	2
  8264  0013E2  0E9A               	movlw	low _sensor_offsets
  8265  0013E4  24F3               	addwf	prodl,w,c
  8266  0013E6  6ED9               	movwf	fsr2l,c
  8267  0013E8  0E00               	movlw	high _sensor_offsets
  8268  0013EA  20F4               	addwfc	prodh,w,c
  8269  0013EC  6EDA               	movwf	fsr2h,c
  8270  0013EE  C0D7  FFDE         	movff	??_CalibrateOffsets,postinc2
  8271  0013F2  C0D8  FFDD         	movff	??_CalibrateOffsets+1,postdec2
  8272                           
  8273                           ; BSR set to: 0
  8274  0013F6  0100               	movlb	0	; () banked
  8275  0013F8  2BD9               	incf	CalibrateOffsets@index& (0+255),f,b
  8276  0013FA  D7D1               	goto	l5881
  8277  0013FC                     l881:
  8278                           
  8279                           ; BSR set to: 0
  8280  0013FC  0012               	return		;funcret
  8281  0013FE                     __end_of_CalibrateOffsets:
  8282                           	opt stack 0
  8283                           prodh	equ	0xFF4
  8284                           prodl	equ	0xFF3
  8285                           intcon	equ	0xFF2
  8286                           postinc0	equ	0xFEE
  8287                           wreg	equ	0xFE8
  8288                           postinc1	equ	0xFE6
  8289                           fsr1h	equ	0xFE2
  8290                           fsr1l	equ	0xFE1
  8291                           indf2	equ	0xFDF
  8292                           postinc2	equ	0xFDE
  8293                           postdec2	equ	0xFDD
  8294                           fsr2h	equ	0xFDA
  8295                           fsr2l	equ	0xFD9
  8296                           status	equ	0xFD8
  8297                           
  8298 ;; *************** function _SendStatus *****************
  8299 ;; Defined at:
  8300 ;;		line 139 in file "Wireless.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  status_code     1    wreg     const unsigned char 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  status_code     1   24[BANK0 ] const unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;		None               void
  8307 ;; Registers used:
  8308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;Total ram usage:        1 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    9
  8321 ;; This function calls:
  8322 ;;		_BusyTx
  8323 ;;		_FlushTxBuf
  8324 ;;		_PutCharTxBuf
  8325 ;;		_StartTx
  8326 ;; This function is called by:
  8327 ;;		_CalibrateOffsets
  8328 ;;		_CalibrateOnLine
  8329 ;;		_CalibrateThreshold
  8330 ;;		_SetPIDValues
  8331 ;;		_LoadPIDValues
  8332 ;;		_main
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text58
  8337  001D82                     __ptext58:
  8338                           	opt stack 0
  8339  001D82                     _SendStatus:
  8340                           	opt stack 20
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;incstack = 0
  8344                           ;SendStatus@status_code stored from wreg
  8345  001D82  0100               	movlb	0	; () banked
  8346  001D84  6FD6               	movwf	SendStatus@status_code& (0+255),b
  8347                           
  8348                           ; BSR set to: 0
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;Wireless.c: 140: while(BusyTx());
  8352  001D86  D000               	goto	l5635
  8353  001D88                     l5635:
  8354  001D88  ECDB  F011         	call	_BusyTx	;wreg free
  8355  001D8C  0900               	iorlw	0
  8356  001D8E  A4D8               	btfss	status,2,c
  8357  001D90  D7FB               	goto	l5635
  8358                           
  8359                           ;Wireless.c: 141: FlushTxBuf();
  8360  001D92  EC4E  F00F         	call	_FlushTxBuf	;wreg free
  8361                           
  8362                           ;Wireless.c: 143: PutCharTxBuf(0xAA);
  8363  001D96  0EAA               	movlw	170
  8364  001D98  EC25  F00E         	call	_PutCharTxBuf
  8365                           
  8366                           ;Wireless.c: 144: PutCharTxBuf(0x01);
  8367  001D9C  0E01               	movlw	1
  8368  001D9E  EC25  F00E         	call	_PutCharTxBuf
  8369                           
  8370                           ;Wireless.c: 145: PutCharTxBuf((unsigned char)status_code);
  8371  001DA2  0100               	movlb	0	; () banked
  8372  001DA4  51D6               	movf	SendStatus@status_code& (0+255),w,b
  8373  001DA6  EC25  F00E         	call	_PutCharTxBuf
  8374                           
  8375                           ;Wireless.c: 146: PutCharTxBuf('\r');
  8376  001DAA  0E0D               	movlw	13
  8377  001DAC  EC25  F00E         	call	_PutCharTxBuf
  8378                           
  8379                           ;Wireless.c: 147: PutCharTxBuf('\n');
  8380  001DB0  0E0A               	movlw	10
  8381  001DB2  EC25  F00E         	call	_PutCharTxBuf
  8382                           
  8383                           ;Wireless.c: 149: StartTx();
  8384  001DB6  EC4E  F012         	call	_StartTx	;wreg free
  8385  001DBA  0012               	return		;funcret
  8386  001DBC                     __end_of_SendStatus:
  8387                           	opt stack 0
  8388                           prodh	equ	0xFF4
  8389                           prodl	equ	0xFF3
  8390                           intcon	equ	0xFF2
  8391                           postinc0	equ	0xFEE
  8392                           wreg	equ	0xFE8
  8393                           postinc1	equ	0xFE6
  8394                           fsr1h	equ	0xFE2
  8395                           fsr1l	equ	0xFE1
  8396                           indf2	equ	0xFDF
  8397                           postinc2	equ	0xFDE
  8398                           postdec2	equ	0xFDD
  8399                           fsr2h	equ	0xFDA
  8400                           fsr2l	equ	0xFD9
  8401                           status	equ	0xFD8
  8402                           
  8403 ;; *************** function _StartTx *****************
  8404 ;; Defined at:
  8405 ;;		line 41 in file "Wireless.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;		None               void
  8412 ;; Registers used:
  8413 ;;		wreg, status,2
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8423 ;;Total ram usage:        0 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    7
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_SendStatus
  8430 ;;		_SendLineMode
  8431 ;;		_SendOffsets
  8432 ;;		_SendThreshold
  8433 ;;		_SendDefaultPIDValues
  8434 ;;		_SendStoredPIDValues
  8435 ;;		_SendCurrentPIDValues
  8436 ;;		_SendBattVoltageInitial
  8437 ;;		_SendPIDSetPointOnLine
  8438 ;;		_SendBattVoltage
  8439 ;;		_SendBattCurrent
  8440 ;;		_SendBattCurrentAcc
  8441 ;;		_SendPIDSetPointOffLine
  8442 ;;		_SendPIDError
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text59
  8447  00249C                     __ptext59:
  8448                           	opt stack 0
  8449  00249C                     _StartTx:
  8450                           	opt stack 21
  8451                           
  8452                           ;Wireless.c: 42: Tx_complete = 0;
  8453                           
  8454                           ;incstack = 0
  8455  00249C  0E00               	movlw	0
  8456  00249E  6E1A               	movwf	_Tx_complete,c
  8457                           
  8458                           ;Wireless.c: 43: PIE1bits.TX1IE = 1;
  8459  0024A0  889D               	bsf	3997,4,c	;volatile
  8460  0024A2  0012               	return		;funcret
  8461  0024A4                     __end_of_StartTx:
  8462                           	opt stack 0
  8463                           prodh	equ	0xFF4
  8464                           prodl	equ	0xFF3
  8465                           intcon	equ	0xFF2
  8466                           postinc0	equ	0xFEE
  8467                           wreg	equ	0xFE8
  8468                           postinc1	equ	0xFE6
  8469                           fsr1h	equ	0xFE2
  8470                           fsr1l	equ	0xFE1
  8471                           indf2	equ	0xFDF
  8472                           postinc2	equ	0xFDE
  8473                           postdec2	equ	0xFDD
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function _PutCharTxBuf *****************
  8479 ;; Defined at:
  8480 ;;		line 9 in file "Wireless.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  ch              1    wreg     unsigned char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  ch              1   23[BANK0 ] unsigned char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;		None               void
  8487 ;; Registers used:
  8488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;Total ram usage:        2 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    8
  8501 ;; This function calls:
  8502 ;;		___awmod
  8503 ;; This function is called by:
  8504 ;;		_SendStatus
  8505 ;;		_SendLineMode
  8506 ;;		_SendOffsets
  8507 ;;		_SendThreshold
  8508 ;;		_SendDefaultPIDValues
  8509 ;;		_SendStoredPIDValues
  8510 ;;		_SendCurrentPIDValues
  8511 ;;		_SendBattVoltageInitial
  8512 ;;		_SendPIDSetPointOnLine
  8513 ;;		_SendBattVoltage
  8514 ;;		_SendBattCurrent
  8515 ;;		_SendBattCurrentAcc
  8516 ;;		_SendPIDSetPointOffLine
  8517 ;;		_SendPIDError
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text60
  8522  001C4A                     __ptext60:
  8523                           	opt stack 0
  8524  001C4A                     _PutCharTxBuf:
  8525                           	opt stack 20
  8526                           
  8527                           ;incstack = 0
  8528                           ;PutCharTxBuf@ch stored from wreg
  8529  001C4A  0100               	movlb	0	; () banked
  8530  001C4C  6FD5               	movwf	PutCharTxBuf@ch& (0+255),b
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;Wireless.c: 10: Tx_buffer[put_Tx_index] = ch;
  8534  001C4E  5020               	movf	_put_Tx_index,w,c
  8535  001C50  0D01               	mullw	1
  8536  001C52  0E79               	movlw	low _Tx_buffer
  8537  001C54  24F3               	addwf	prodl,w,c
  8538  001C56  6ED9               	movwf	fsr2l,c
  8539  001C58  0E00               	movlw	high _Tx_buffer
  8540  001C5A  20F4               	addwfc	prodh,w,c
  8541  001C5C  6EDA               	movwf	fsr2h,c
  8542  001C5E  C0D5  FFDF         	movff	PutCharTxBuf@ch,indf2
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;Wireless.c: 11: put_Tx_index = (unsigned char)(put_Tx_index + 1) % 25;
  8546  001C62  C020  F0D4         	movff	_put_Tx_index,??_PutCharTxBuf
  8547  001C66  0E01               	movlw	1
  8548  001C68  0100               	movlb	0	; () banked
  8549  001C6A  27D4               	addwf	??_PutCharTxBuf& (0+255),f,b
  8550  001C6C  0100               	movlb	0	; () banked
  8551  001C6E  51D4               	movf	??_PutCharTxBuf& (0+255),w,b
  8552  001C70  0100               	movlb	0	; () banked
  8553  001C72  6FCE               	movwf	___awmod@dividend& (0+255),b
  8554  001C74  6BCF               	clrf	(___awmod@dividend+1)& (0+255),b
  8555  001C76  0E00               	movlw	0
  8556  001C78  0100               	movlb	0	; () banked
  8557  001C7A  6FD1               	movwf	(___awmod@divisor+1)& (0+255),b
  8558  001C7C  0E19               	movlw	25
  8559  001C7E  6FD0               	movwf	___awmod@divisor& (0+255),b
  8560  001C80  EC10  F008         	call	___awmod	;wreg free
  8561  001C84  0100               	movlb	0	; () banked
  8562  001C86  51CE               	movf	?___awmod& (0+255),w,b
  8563  001C88  6E20               	movwf	_put_Tx_index,c
  8564                           
  8565                           ; BSR set to: 0
  8566  001C8A  0012               	return		;funcret
  8567  001C8C                     __end_of_PutCharTxBuf:
  8568                           	opt stack 0
  8569                           prodh	equ	0xFF4
  8570                           prodl	equ	0xFF3
  8571                           intcon	equ	0xFF2
  8572                           postinc0	equ	0xFEE
  8573                           wreg	equ	0xFE8
  8574                           postinc1	equ	0xFE6
  8575                           fsr1h	equ	0xFE2
  8576                           fsr1l	equ	0xFE1
  8577                           indf2	equ	0xFDF
  8578                           postinc2	equ	0xFDE
  8579                           postdec2	equ	0xFDD
  8580                           fsr2h	equ	0xFDA
  8581                           fsr2l	equ	0xFD9
  8582                           status	equ	0xFD8
  8583                           
  8584 ;; *************** function ___awmod *****************
  8585 ;; Defined at:
  8586 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  dividend        2   16[BANK0 ] int 
  8589 ;;  divisor         2   18[BANK0 ] int 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  sign            1   21[BANK0 ] unsigned char 
  8592 ;;  counter         1   20[BANK0 ] unsigned char 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  2   16[BANK0 ] int 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8602 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;Total ram usage:        6 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    7
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_PutCharTxBuf
  8613 ;;		_PutCharRxBuf
  8614 ;;		_GetCharRxBuf
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text61
  8619  001020                     __ptext61:
  8620                           	opt stack 0
  8621  001020                     ___awmod:
  8622                           	opt stack 20
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;incstack = 0
  8626  001020  0E00               	movlw	0
  8627  001022  0100               	movlb	0	; () banked
  8628  001024  6FD3               	movwf	___awmod@sign& (0+255),b
  8629                           
  8630                           ; BSR set to: 0
  8631  001026  0100               	movlb	0	; () banked
  8632  001028  AFCF               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8633  00102A  D009               	goto	l5493
  8634                           
  8635                           ; BSR set to: 0
  8636  00102C  0100               	movlb	0	; () banked
  8637  00102E  6DCE               	negf	___awmod@dividend& (0+255),b
  8638  001030  1FCF               	comf	(___awmod@dividend+1)& (0+255),f,b
  8639  001032  B0D8               	btfsc	status,0,c
  8640  001034  2BCF               	incf	(___awmod@dividend+1)& (0+255),f,b
  8641                           
  8642                           ; BSR set to: 0
  8643  001036  0E01               	movlw	1
  8644  001038  0100               	movlb	0	; () banked
  8645  00103A  6FD3               	movwf	___awmod@sign& (0+255),b
  8646  00103C  D000               	goto	l5493
  8647  00103E                     l5493:
  8648                           
  8649                           ; BSR set to: 0
  8650  00103E  0100               	movlb	0	; () banked
  8651  001040  AFD1               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8652  001042  D006               	goto	l5497
  8653                           
  8654                           ; BSR set to: 0
  8655  001044  0100               	movlb	0	; () banked
  8656  001046  6DD0               	negf	___awmod@divisor& (0+255),b
  8657  001048  1FD1               	comf	(___awmod@divisor+1)& (0+255),f,b
  8658  00104A  B0D8               	btfsc	status,0,c
  8659  00104C  2BD1               	incf	(___awmod@divisor+1)& (0+255),f,b
  8660  00104E  D000               	goto	l5497
  8661  001050                     l5497:
  8662                           
  8663                           ; BSR set to: 0
  8664  001050  0100               	movlb	0	; () banked
  8665  001052  51D0               	movf	___awmod@divisor& (0+255),w,b
  8666  001054  0100               	movlb	0	; () banked
  8667  001056  11D1               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8668  001058  B4D8               	btfsc	status,2,c
  8669  00105A  D02B               	goto	l5513
  8670                           
  8671                           ; BSR set to: 0
  8672  00105C  0E01               	movlw	1
  8673  00105E  0100               	movlb	0	; () banked
  8674  001060  6FD2               	movwf	___awmod@counter& (0+255),b
  8675  001062  D007               	goto	l5503
  8676  001064                     l5501:
  8677                           
  8678                           ; BSR set to: 0
  8679  001064  0100               	movlb	0	; () banked
  8680  001066  90D8               	bcf	status,0,c
  8681  001068  37D0               	rlcf	___awmod@divisor& (0+255),f,b
  8682  00106A  37D1               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8683  00106C  0100               	movlb	0	; () banked
  8684  00106E  2BD2               	incf	___awmod@counter& (0+255),f,b
  8685  001070  D000               	goto	l5503
  8686  001072                     l5503:
  8687                           
  8688                           ; BSR set to: 0
  8689  001072  0100               	movlb	0	; () banked
  8690  001074  BFD1               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  8691  001076  D002               	goto	l5505
  8692  001078  D7F5               	goto	l5501
  8693                           
  8694                           ; BSR set to: 0
  8695  00107A  D000               	goto	l5505
  8696  00107C                     l5505:
  8697                           
  8698                           ; BSR set to: 0
  8699  00107C  0100               	movlb	0	; () banked
  8700  00107E  51D0               	movf	___awmod@divisor& (0+255),w,b
  8701  001080  0100               	movlb	0	; () banked
  8702  001082  5DCE               	subwf	___awmod@dividend& (0+255),w,b
  8703  001084  0100               	movlb	0	; () banked
  8704  001086  51D1               	movf	(___awmod@divisor+1)& (0+255),w,b
  8705  001088  0100               	movlb	0	; () banked
  8706  00108A  59CF               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8707  00108C  A0D8               	btfss	status,0,c
  8708  00108E  D009               	goto	l5509
  8709                           
  8710                           ; BSR set to: 0
  8711  001090  0100               	movlb	0	; () banked
  8712  001092  51D0               	movf	___awmod@divisor& (0+255),w,b
  8713  001094  0100               	movlb	0	; () banked
  8714  001096  5FCE               	subwf	___awmod@dividend& (0+255),f,b
  8715  001098  0100               	movlb	0	; () banked
  8716  00109A  51D1               	movf	(___awmod@divisor+1)& (0+255),w,b
  8717  00109C  0100               	movlb	0	; () banked
  8718  00109E  5BCF               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8719  0010A0  D000               	goto	l5509
  8720  0010A2                     l5509:
  8721                           
  8722                           ; BSR set to: 0
  8723  0010A2  0100               	movlb	0	; () banked
  8724  0010A4  90D8               	bcf	status,0,c
  8725  0010A6  33D1               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8726  0010A8  33D0               	rrcf	___awmod@divisor& (0+255),f,b
  8727                           
  8728                           ; BSR set to: 0
  8729  0010AA  0100               	movlb	0	; () banked
  8730  0010AC  2FD2               	decfsz	___awmod@counter& (0+255),f,b
  8731  0010AE  D7E6               	goto	l5505
  8732                           
  8733                           ; BSR set to: 0
  8734  0010B0  D000               	goto	l5513
  8735  0010B2                     l5513:
  8736                           
  8737                           ; BSR set to: 0
  8738  0010B2  0100               	movlb	0	; () banked
  8739  0010B4  51D3               	movf	___awmod@sign& (0+255),w,b
  8740  0010B6  0100               	movlb	0	; () banked
  8741  0010B8  B4D8               	btfsc	status,2,c
  8742  0010BA  D006               	goto	l5517
  8743                           
  8744                           ; BSR set to: 0
  8745  0010BC  0100               	movlb	0	; () banked
  8746  0010BE  6DCE               	negf	___awmod@dividend& (0+255),b
  8747  0010C0  1FCF               	comf	(___awmod@dividend+1)& (0+255),f,b
  8748  0010C2  B0D8               	btfsc	status,0,c
  8749  0010C4  2BCF               	incf	(___awmod@dividend+1)& (0+255),f,b
  8750  0010C6  D000               	goto	l5517
  8751  0010C8                     l5517:
  8752                           
  8753                           ; BSR set to: 0
  8754  0010C8  C0CE  F0CE         	movff	___awmod@dividend,?___awmod
  8755  0010CC  C0CF  F0CF         	movff	___awmod@dividend+1,?___awmod+1
  8756  0010D0  D000               	goto	l1454
  8757  0010D2                     l1454:
  8758                           
  8759                           ; BSR set to: 0
  8760  0010D2  0012               	return		;funcret
  8761  0010D4                     __end_of___awmod:
  8762                           	opt stack 0
  8763                           prodh	equ	0xFF4
  8764                           prodl	equ	0xFF3
  8765                           intcon	equ	0xFF2
  8766                           postinc0	equ	0xFEE
  8767                           wreg	equ	0xFE8
  8768                           postinc1	equ	0xFE6
  8769                           fsr1h	equ	0xFE2
  8770                           fsr1l	equ	0xFE1
  8771                           indf2	equ	0xFDF
  8772                           postinc2	equ	0xFDE
  8773                           postdec2	equ	0xFDD
  8774                           fsr2h	equ	0xFDA
  8775                           fsr2l	equ	0xFD9
  8776                           status	equ	0xFD8
  8777                           
  8778 ;; *************** function _BusyTx *****************
  8779 ;; Defined at:
  8780 ;;		line 131 in file "Wireless.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      unsigned char 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    7
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_SendStatus
  8805 ;;		_SendLineMode
  8806 ;;		_SendOffsets
  8807 ;;		_SendThreshold
  8808 ;;		_SendDefaultPIDValues
  8809 ;;		_SendStoredPIDValues
  8810 ;;		_SendCurrentPIDValues
  8811 ;;		_SendBattVoltageInitial
  8812 ;;		_SendPIDSetPointOnLine
  8813 ;;		_SendBattVoltage
  8814 ;;		_SendBattCurrent
  8815 ;;		_SendBattCurrentAcc
  8816 ;;		_SendPIDSetPointOffLine
  8817 ;;		_SendPIDError
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text62
  8822  0023B6                     __ptext62:
  8823                           	opt stack 0
  8824  0023B6                     _BusyTx:
  8825                           	opt stack 21
  8826                           
  8827                           ;Wireless.c: 132: return(!Tx_complete);
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;incstack = 0
  8831  0023B6  501A               	movf	_Tx_complete,w,c
  8832  0023B8  A4D8               	btfss	status,2,c
  8833  0023BA  D002               	goto	u4460
  8834  0023BC  0E01               	movlw	1
  8835  0023BE  D002               	goto	l324
  8836  0023C0                     u4460:
  8837  0023C0  0E00               	movlw	0
  8838  0023C2  D000               	goto	l324
  8839  0023C4                     l324:
  8840  0023C4  0012               	return		;funcret
  8841  0023C6                     __end_of_BusyTx:
  8842                           	opt stack 0
  8843                           prodh	equ	0xFF4
  8844                           prodl	equ	0xFF3
  8845                           intcon	equ	0xFF2
  8846                           postinc0	equ	0xFEE
  8847                           wreg	equ	0xFE8
  8848                           postinc1	equ	0xFE6
  8849                           fsr1h	equ	0xFE2
  8850                           fsr1l	equ	0xFE1
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function _PB1pressed *****************
  8859 ;; Defined at:
  8860 ;;		line 407 in file "FastBuggy17_Main_Code_TUNING.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      unsigned char 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:    9
  8881 ;; This function calls:
  8882 ;;		_CommandAvailable
  8883 ;;		_GetCommand
  8884 ;;		_ReadMillis2
  8885 ;;		_ResetMillis2
  8886 ;; This function is called by:
  8887 ;;		_CalibrateOffsets
  8888 ;;		_CalibrateOnLine
  8889 ;;		_CalibrateThreshold
  8890 ;;		_LoadPIDValues
  8891 ;;		_main
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text63
  8896  001A88                     __ptext63:
  8897                           	opt stack 0
  8898  001A88                     _PB1pressed:
  8899                           	opt stack 21
  8900                           
  8901                           ;FastBuggy17_Main_Code_TUNING.c: 408: if(CommandAvailable() == 1) {
  8902                           
  8903                           ;incstack = 0
  8904  001A88  EC18  F012         	call	_CommandAvailable	;wreg free
  8905  001A8C  06E8               	decf	wreg,f,c
  8906  001A8E  A4D8               	btfss	status,2,c
  8907  001A90  D00B               	goto	l843
  8908                           
  8909                           ;FastBuggy17_Main_Code_TUNING.c: 409: if(GetCommand() == 0x05) {
  8910  001A92  EC52  F012         	call	_GetCommand	;wreg free
  8911  001A96  0A05               	xorlw	5
  8912  001A98  A4D8               	btfss	status,2,c
  8913  001A9A  D01F               	goto	l5763
  8914  001A9C  D01B               	goto	l5757
  8915                           
  8916                           ;FastBuggy17_Main_Code_TUNING.c: 410: return(1);
  8917  001A9E  D022               	goto	l845
  8918                           
  8919                           ;FastBuggy17_Main_Code_TUNING.c: 411: }
  8920  001AA0  D01F               	goto	l5767
  8921  001AA2  D01B               	goto	l5763
  8922                           
  8923                           ;FastBuggy17_Main_Code_TUNING.c: 412: else {
  8924                           ;FastBuggy17_Main_Code_TUNING.c: 413: return(0);
  8925  001AA4  D01F               	goto	l845
  8926                           
  8927                           ;FastBuggy17_Main_Code_TUNING.c: 414: }
  8928                           ;FastBuggy17_Main_Code_TUNING.c: 415: }
  8929  001AA6  D01C               	goto	l5767
  8930  001AA8                     l843:
  8931                           
  8932                           ;FastBuggy17_Main_Code_TUNING.c: 416: else if(PORTBbits.RB1 == 0) {
  8933  001AA8  B281               	btfsc	3969,1,c	;volatile
  8934  001AAA  D003               	goto	l848
  8935  001AAC  D016               	goto	l5763
  8936                           
  8937                           ;FastBuggy17_Main_Code_TUNING.c: 417: return(0);
  8938  001AAE  D01A               	goto	l845
  8939                           
  8940                           ;FastBuggy17_Main_Code_TUNING.c: 418: }
  8941  001AB0  D017               	goto	l5767
  8942  001AB2                     l848:
  8943                           
  8944                           ;FastBuggy17_Main_Code_TUNING.c: 419: else if(PORTBbits.RB1 == 1) {
  8945  001AB2  A281               	btfss	3969,1,c	;volatile
  8946  001AB4  D015               	goto	l5767
  8947                           
  8948                           ;FastBuggy17_Main_Code_TUNING.c: 420: ResetMillis2();
  8949  001AB6  EC44  F012         	call	_ResetMillis2	;wreg free
  8950                           
  8951                           ;FastBuggy17_Main_Code_TUNING.c: 421: while(ReadMillis2() < 10);
  8952  001ABA  D000               	goto	l5755
  8953  001ABC                     l5755:
  8954  001ABC  EC49  F012         	call	_ReadMillis2	;wreg free
  8955  001AC0  0100               	movlb	0	; () banked
  8956  001AC2  51CF               	movf	(?_ReadMillis2+1)& (0+255),w,b
  8957  001AC4  E105               	bnz	u4710
  8958  001AC6  0E0A               	movlw	10
  8959  001AC8  0100               	movlb	0	; () banked
  8960  001ACA  5DCE               	subwf	?_ReadMillis2& (0+255),w,b
  8961  001ACC  A0D8               	btfss	status,0,c
  8962  001ACE  D7F6               	goto	l5755
  8963  001AD0                     u4710:
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;FastBuggy17_Main_Code_TUNING.c: 422: if(PORTBbits.RB1 == 1) {
  8967  001AD0  A281               	btfss	3969,1,c	;volatile
  8968  001AD2  D003               	goto	l5763
  8969  001AD4                     l5757:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;FastBuggy17_Main_Code_TUNING.c: 423: return(1);
  8973  001AD4  0E01               	movlw	1
  8974                           
  8975                           ; BSR set to: 0
  8976  001AD6  D006               	goto	l845
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;FastBuggy17_Main_Code_TUNING.c: 424: }
  8980  001AD8  D003               	goto	l5767
  8981  001ADA                     l5763:
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;FastBuggy17_Main_Code_TUNING.c: 425: else {
  8985                           ;FastBuggy17_Main_Code_TUNING.c: 426: return(0);
  8986  001ADA  0E00               	movlw	0
  8987                           
  8988                           ; BSR set to: 0
  8989  001ADC  D003               	goto	l845
  8990                           
  8991                           ; BSR set to: 0
  8992                           
  8993                           ; BSR set to: 0
  8994                           
  8995                           ; BSR set to: 0
  8996  001ADE  D000               	goto	l5767
  8997  001AE0                     l5767:
  8998                           
  8999                           ;FastBuggy17_Main_Code_TUNING.c: 427: }
  9000                           ;FastBuggy17_Main_Code_TUNING.c: 428: }
  9001                           ;FastBuggy17_Main_Code_TUNING.c: 430: return(0);
  9002  001AE0  0E00               	movlw	0
  9003  001AE2  D000               	goto	l845
  9004  001AE4                     l845:
  9005  001AE4  0012               	return		;funcret
  9006  001AE6                     __end_of_PB1pressed:
  9007                           	opt stack 0
  9008                           prodh	equ	0xFF4
  9009                           prodl	equ	0xFF3
  9010                           intcon	equ	0xFF2
  9011                           postinc0	equ	0xFEE
  9012                           wreg	equ	0xFE8
  9013                           postinc1	equ	0xFE6
  9014                           fsr1h	equ	0xFE2
  9015                           fsr1l	equ	0xFE1
  9016                           indf2	equ	0xFDF
  9017                           postinc2	equ	0xFDE
  9018                           postdec2	equ	0xFDD
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function _ResetMillis2 *****************
  9024 ;; Defined at:
  9025 ;;		line 45 in file "MillisecondTimer.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;		None               void
  9032 ;; Registers used:
  9033 ;;		wreg, status,2
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    7
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_PB1pressed
  9050 ;;		_PB2pressed
  9051 ;;		_main
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text64
  9056  002488                     __ptext64:
  9057                           	opt stack 0
  9058  002488                     _ResetMillis2:
  9059                           	opt stack 23
  9060                           
  9061                           ;MillisecondTimer.c: 47: millisecond_COUNT2 = 0;
  9062                           
  9063                           ;incstack = 0
  9064  002488  0E00               	movlw	0
  9065  00248A  6E12               	movwf	_millisecond_COUNT2+1,c	;volatile
  9066  00248C  0E00               	movlw	0
  9067  00248E  6E11               	movwf	_millisecond_COUNT2,c	;volatile
  9068  002490  0012               	return		;funcret
  9069  002492                     __end_of_ResetMillis2:
  9070                           	opt stack 0
  9071                           prodh	equ	0xFF4
  9072                           prodl	equ	0xFF3
  9073                           intcon	equ	0xFF2
  9074                           postinc0	equ	0xFEE
  9075                           wreg	equ	0xFE8
  9076                           postinc1	equ	0xFE6
  9077                           fsr1h	equ	0xFE2
  9078                           fsr1l	equ	0xFE1
  9079                           indf2	equ	0xFDF
  9080                           postinc2	equ	0xFDE
  9081                           postdec2	equ	0xFDD
  9082                           fsr2h	equ	0xFDA
  9083                           fsr2l	equ	0xFD9
  9084                           status	equ	0xFD8
  9085                           
  9086 ;; *************** function _ReadMillis2 *****************
  9087 ;; Defined at:
  9088 ;;		line 19 in file "MillisecondTimer.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  2   16[BANK0 ] unsigned int 
  9095 ;; Registers used:
  9096 ;;		None
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;Total ram usage:        2 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    7
  9109 ;; This function calls:
  9110 ;;		Nothing
  9111 ;; This function is called by:
  9112 ;;		_PB1pressed
  9113 ;;		_PB2pressed
  9114 ;;		_main
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text65
  9119  002492                     __ptext65:
  9120                           	opt stack 0
  9121  002492                     _ReadMillis2:
  9122                           	opt stack 23
  9123                           
  9124                           ;MillisecondTimer.c: 21: return (millisecond_COUNT2);
  9125                           
  9126                           ;incstack = 0
  9127  002492  C011  F0CE         	movff	_millisecond_COUNT2,?_ReadMillis2	;volatile
  9128  002496  C012  F0CF         	movff	_millisecond_COUNT2+1,?_ReadMillis2+1	;volatile
  9129  00249A  0012               	return		;funcret
  9130  00249C                     __end_of_ReadMillis2:
  9131                           	opt stack 0
  9132                           prodh	equ	0xFF4
  9133                           prodl	equ	0xFF3
  9134                           intcon	equ	0xFF2
  9135                           postinc0	equ	0xFEE
  9136                           wreg	equ	0xFE8
  9137                           postinc1	equ	0xFE6
  9138                           fsr1h	equ	0xFE2
  9139                           fsr1l	equ	0xFE1
  9140                           indf2	equ	0xFDF
  9141                           postinc2	equ	0xFDE
  9142                           postdec2	equ	0xFDD
  9143                           fsr2h	equ	0xFDA
  9144                           fsr2l	equ	0xFD9
  9145                           status	equ	0xFD8
  9146                           
  9147 ;; *************** function _GetCommand *****************
  9148 ;; Defined at:
  9149 ;;		line 405 in file "Wireless.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      unsigned char 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;Total ram usage:        0 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    8
  9170 ;; This function calls:
  9171 ;;		_Read1USART
  9172 ;; This function is called by:
  9173 ;;		_PB1pressed
  9174 ;;		_PB2pressed
  9175 ;;		_main
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text66
  9180  0024A4                     __ptext66:
  9181                           	opt stack 0
  9182  0024A4                     _GetCommand:
  9183                           	opt stack 21
  9184                           
  9185                           ;Wireless.c: 407: return(Read1USART());
  9186                           
  9187                           ;incstack = 0
  9188  0024A4  EC80  F010         	call	_Read1USART	;wreg free
  9189  0024A8  D000               	goto	l461
  9190  0024AA                     l461:
  9191  0024AA  0012               	return		;funcret
  9192  0024AC                     __end_of_GetCommand:
  9193                           	opt stack 0
  9194                           prodh	equ	0xFF4
  9195                           prodl	equ	0xFF3
  9196                           intcon	equ	0xFF2
  9197                           postinc0	equ	0xFEE
  9198                           wreg	equ	0xFE8
  9199                           postinc1	equ	0xFE6
  9200                           fsr1h	equ	0xFE2
  9201                           fsr1l	equ	0xFE1
  9202                           indf2	equ	0xFDF
  9203                           postinc2	equ	0xFDE
  9204                           postdec2	equ	0xFDD
  9205                           fsr2h	equ	0xFDA
  9206                           fsr2l	equ	0xFD9
  9207                           status	equ	0xFD8
  9208                           
  9209 ;; *************** function _Read1USART *****************
  9210 ;; Defined at:
  9211 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1read.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  data            1   16[BANK0 ] unsigned char 
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      unsigned char 
  9218 ;; Registers used:
  9219 ;;		wreg, status,2, status,0
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;Total ram usage:        1 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    7
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_GetCommand
  9236 ;;		_SetPIDValues
  9237 ;;		_WirelessRx_ISR
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text67
  9242  002100                     __ptext67:
  9243                           	opt stack 0
  9244  002100                     _Read1USART:
  9245                           	opt stack 22
  9246                           
  9247                           ;incstack = 0
  9248  002100  0EF2               	movlw	242
  9249  002102  161B               	andwf	_USART1_Status,f,c
  9250  002104  ACAB               	btfss	4011,6,c	;volatile
  9251  002106  D005               	goto	l1230
  9252  002108  901B               	bcf	_USART1_Status,0,c
  9253  00210A  A0AB               	btfss	4011,0,c	;volatile
  9254  00210C  D002               	goto	l1230
  9255  00210E  801B               	bsf	_USART1_Status,0,c
  9256  002110  D000               	goto	l1230
  9257  002112                     l1230:
  9258  002112  B4AB               	btfsc	4011,2,c	;volatile
  9259  002114  841B               	bsf	_USART1_Status,2,c
  9260  002116  B2AB               	btfsc	4011,1,c	;volatile
  9261  002118  861B               	bsf	_USART1_Status,3,c
  9262  00211A  CFAE F0CE          	movff	4014,Read1USART@data	;volatile
  9263  00211E  0100               	movlb	0	; () banked
  9264  002120  51CE               	movf	Read1USART@data& (0+255),w,b
  9265  002122  D000               	goto	l1234
  9266  002124                     l1234:
  9267                           
  9268                           ; BSR set to: 0
  9269  002124  0012               	return		;funcret
  9270  002126                     __end_of_Read1USART:
  9271                           	opt stack 0
  9272                           prodh	equ	0xFF4
  9273                           prodl	equ	0xFF3
  9274                           intcon	equ	0xFF2
  9275                           postinc0	equ	0xFEE
  9276                           wreg	equ	0xFE8
  9277                           postinc1	equ	0xFE6
  9278                           fsr1h	equ	0xFE2
  9279                           fsr1l	equ	0xFE1
  9280                           indf2	equ	0xFDF
  9281                           postinc2	equ	0xFDE
  9282                           postdec2	equ	0xFDD
  9283                           fsr2h	equ	0xFDA
  9284                           fsr2l	equ	0xFD9
  9285                           status	equ	0xFD8
  9286                           
  9287 ;; *************** function _CommandAvailable *****************
  9288 ;; Defined at:
  9289 ;;		line 401 in file "Wireless.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      unsigned char 
  9296 ;; Registers used:
  9297 ;;		wreg
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    7
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_PB1pressed
  9314 ;;		_PB2pressed
  9315 ;;		_main
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text68
  9320  002430                     __ptext68:
  9321                           	opt stack 0
  9322  002430                     _CommandAvailable:
  9323                           	opt stack 22
  9324                           
  9325                           ;Wireless.c: 402: return((PIR1bits.RCIF));
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;incstack = 0
  9329  002430  AA9E               	btfss	3998,5,c	;volatile
  9330  002432  D002               	goto	u4480
  9331  002434  0E01               	movlw	1
  9332  002436  D002               	goto	l458
  9333  002438                     u4480:
  9334  002438  0E00               	movlw	0
  9335  00243A  D000               	goto	l458
  9336  00243C                     l458:
  9337  00243C  0012               	return		;funcret
  9338  00243E                     __end_of_CommandAvailable:
  9339                           	opt stack 0
  9340                           prodh	equ	0xFF4
  9341                           prodl	equ	0xFF3
  9342                           intcon	equ	0xFF2
  9343                           postinc0	equ	0xFEE
  9344                           wreg	equ	0xFE8
  9345                           postinc1	equ	0xFE6
  9346                           fsr1h	equ	0xFE2
  9347                           fsr1l	equ	0xFE1
  9348                           indf2	equ	0xFDF
  9349                           postinc2	equ	0xFDE
  9350                           postdec2	equ	0xFDD
  9351                           fsr2h	equ	0xFDA
  9352                           fsr2l	equ	0xFD9
  9353                           status	equ	0xFD8
  9354                           
  9355 ;; *************** function _GetSensorReadings *****************
  9356 ;; Defined at:
  9357 ;;		line 286 in file "FastBuggy17_Main_Code_TUNING.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;		None               void
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0, cstack
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; Hardware stack levels required when called:    9
  9378 ;; This function calls:
  9379 ;;		_ConvertADC
  9380 ;;		_SetADCChannel
  9381 ;; This function is called by:
  9382 ;;		_CalibrateOffsets
  9383 ;;		_CalibrateOnLine
  9384 ;;		_CalibrateThreshold
  9385 ;;		_main
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text69
  9390  0022A4                     __ptext69:
  9391                           	opt stack 0
  9392  0022A4                     _GetSensorReadings:
  9393                           	opt stack 18
  9394                           
  9395                           ;FastBuggy17_Main_Code_TUNING.c: 288: sensor_acq_index = 0;
  9396                           
  9397                           ;incstack = 0
  9398  0022A4  0E00               	movlw	0
  9399  0022A6  6E23               	movwf	_sensor_acq_index,c	;volatile
  9400                           
  9401                           ;FastBuggy17_Main_Code_TUNING.c: 289: sensor_acq_done = 0;
  9402  0022A8  0E00               	movlw	0
  9403  0022AA  6E22               	movwf	_sensor_acq_done,c	;volatile
  9404                           
  9405                           ;FastBuggy17_Main_Code_TUNING.c: 290: SetADCChannel(sensor_acq_index);
  9406  0022AC  5023               	movf	_sensor_acq_index,w,c	;volatile
  9407  0022AE  EC5E  F006         	call	_SetADCChannel
  9408                           
  9409                           ;FastBuggy17_Main_Code_TUNING.c: 291: ConvertADC();
  9410  0022B2  EC67  F012         	call	_ConvertADC	;wreg free
  9411                           
  9412                           ;FastBuggy17_Main_Code_TUNING.c: 292: PIE1bits.ADIE = 1;
  9413  0022B6  8C9D               	bsf	3997,6,c	;volatile
  9414  0022B8  0012               	return		;funcret
  9415  0022BA                     __end_of_GetSensorReadings:
  9416                           	opt stack 0
  9417                           prodh	equ	0xFF4
  9418                           prodl	equ	0xFF3
  9419                           intcon	equ	0xFF2
  9420                           postinc0	equ	0xFEE
  9421                           wreg	equ	0xFE8
  9422                           postinc1	equ	0xFE6
  9423                           fsr1h	equ	0xFE2
  9424                           fsr1l	equ	0xFE1
  9425                           indf2	equ	0xFDF
  9426                           postinc2	equ	0xFDE
  9427                           postdec2	equ	0xFDD
  9428                           fsr2h	equ	0xFDA
  9429                           fsr2l	equ	0xFD9
  9430                           status	equ	0xFD8
  9431                           
  9432 ;; *************** function _SetADCChannel *****************
  9433 ;; Defined at:
  9434 ;;		line 228 in file "FastBuggy17_Main_Code_TUNING.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  channel         1    wreg     unsigned char 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  channel         1   18[BANK0 ] unsigned char 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;		None               void
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;Total ram usage:        1 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    8
  9455 ;; This function calls:
  9456 ;;		_SetChanADC
  9457 ;; This function is called by:
  9458 ;;		_GetSensorReadings
  9459 ;;		_CalibrateThreshold
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text70
  9464  000CBC                     __ptext70:
  9465                           	opt stack 0
  9466  000CBC                     _SetADCChannel:
  9467                           	opt stack 19
  9468                           
  9469                           ;incstack = 0
  9470                           ;SetADCChannel@channel stored from wreg
  9471  000CBC  0100               	movlb	0	; () banked
  9472  000CBE  6FD0               	movwf	SetADCChannel@channel& (0+255),b
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;FastBuggy17_Main_Code_TUNING.c: 230: switch (channel) {
  9476  000CC0  D040               	goto	l5595
  9477  000CC2                     l5561:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;FastBuggy17_Main_Code_TUNING.c: 232: SetChanADC(0b10000111);
  9481  000CC2  0E87               	movlw	135
  9482  000CC4  EC0C  F011         	call	_SetChanADC
  9483                           
  9484                           ;FastBuggy17_Main_Code_TUNING.c: 233: break;
  9485  000CC8  D06F               	goto	l793
  9486  000CCA                     l5563:
  9487                           
  9488                           ;FastBuggy17_Main_Code_TUNING.c: 235: SetChanADC(0b10001111);
  9489  000CCA  0E8F               	movlw	143
  9490  000CCC  EC0C  F011         	call	_SetChanADC
  9491                           
  9492                           ;FastBuggy17_Main_Code_TUNING.c: 236: break;
  9493  000CD0  D06B               	goto	l793
  9494  000CD2                     l5565:
  9495                           
  9496                           ;FastBuggy17_Main_Code_TUNING.c: 238: SetChanADC(0b10010111);
  9497  000CD2  0E97               	movlw	151
  9498  000CD4  EC0C  F011         	call	_SetChanADC
  9499                           
  9500                           ;FastBuggy17_Main_Code_TUNING.c: 239: break;
  9501  000CD8  D067               	goto	l793
  9502  000CDA                     l5567:
  9503                           
  9504                           ;FastBuggy17_Main_Code_TUNING.c: 241: SetChanADC(0b10011111);
  9505  000CDA  0E9F               	movlw	159
  9506  000CDC  EC0C  F011         	call	_SetChanADC
  9507                           
  9508                           ;FastBuggy17_Main_Code_TUNING.c: 242: break;
  9509  000CE0  D063               	goto	l793
  9510  000CE2                     l5569:
  9511                           
  9512                           ;FastBuggy17_Main_Code_TUNING.c: 244: SetChanADC(0b10100111);
  9513  000CE2  0EA7               	movlw	167
  9514  000CE4  EC0C  F011         	call	_SetChanADC
  9515                           
  9516                           ;FastBuggy17_Main_Code_TUNING.c: 245: break;
  9517  000CE8  D05F               	goto	l793
  9518  000CEA                     l5571:
  9519                           
  9520                           ;FastBuggy17_Main_Code_TUNING.c: 247: SetChanADC(0b10101111);
  9521  000CEA  0EAF               	movlw	175
  9522  000CEC  EC0C  F011         	call	_SetChanADC
  9523                           
  9524                           ;FastBuggy17_Main_Code_TUNING.c: 248: break;
  9525  000CF0  D05B               	goto	l793
  9526  000CF2                     l5573:
  9527                           
  9528                           ;FastBuggy17_Main_Code_TUNING.c: 250: SetChanADC(0b10110111);
  9529  000CF2  0EB7               	movlw	183
  9530  000CF4  EC0C  F011         	call	_SetChanADC
  9531                           
  9532                           ;FastBuggy17_Main_Code_TUNING.c: 251: break;
  9533  000CF8  D057               	goto	l793
  9534  000CFA                     l5575:
  9535                           
  9536                           ;FastBuggy17_Main_Code_TUNING.c: 253: SetChanADC(0b10111111);
  9537  000CFA  0EBF               	movlw	191
  9538  000CFC  EC0C  F011         	call	_SetChanADC
  9539                           
  9540                           ;FastBuggy17_Main_Code_TUNING.c: 254: break;
  9541  000D00  D053               	goto	l793
  9542  000D02                     l5577:
  9543                           
  9544                           ;FastBuggy17_Main_Code_TUNING.c: 256: SetChanADC(0b11000111);
  9545  000D02  0EC7               	movlw	199
  9546  000D04  EC0C  F011         	call	_SetChanADC
  9547                           
  9548                           ;FastBuggy17_Main_Code_TUNING.c: 257: break;
  9549  000D08  D04F               	goto	l793
  9550  000D0A                     l5579:
  9551                           
  9552                           ;FastBuggy17_Main_Code_TUNING.c: 259: SetChanADC(0b11001111);
  9553  000D0A  0ECF               	movlw	207
  9554  000D0C  EC0C  F011         	call	_SetChanADC
  9555                           
  9556                           ;FastBuggy17_Main_Code_TUNING.c: 260: break;
  9557  000D10  D04B               	goto	l793
  9558  000D12                     l5581:
  9559                           
  9560                           ;FastBuggy17_Main_Code_TUNING.c: 262: SetChanADC(0b11010111);
  9561  000D12  0ED7               	movlw	215
  9562  000D14  EC0C  F011         	call	_SetChanADC
  9563                           
  9564                           ;FastBuggy17_Main_Code_TUNING.c: 263: break;
  9565  000D18  D047               	goto	l793
  9566  000D1A                     l5583:
  9567                           
  9568                           ;FastBuggy17_Main_Code_TUNING.c: 265: SetChanADC(0b11011111);
  9569  000D1A  0EDF               	movlw	223
  9570  000D1C  EC0C  F011         	call	_SetChanADC
  9571                           
  9572                           ;FastBuggy17_Main_Code_TUNING.c: 266: break;
  9573  000D20  D043               	goto	l793
  9574  000D22                     l5585:
  9575                           
  9576                           ;FastBuggy17_Main_Code_TUNING.c: 268: SetChanADC(0b11100111);
  9577  000D22  0EE7               	movlw	231
  9578  000D24  EC0C  F011         	call	_SetChanADC
  9579                           
  9580                           ;FastBuggy17_Main_Code_TUNING.c: 269: break;
  9581  000D28  D03F               	goto	l793
  9582  000D2A                     l5587:
  9583                           
  9584                           ;FastBuggy17_Main_Code_TUNING.c: 271: SetChanADC(0b11101111);
  9585  000D2A  0EEF               	movlw	239
  9586  000D2C  EC0C  F011         	call	_SetChanADC
  9587                           
  9588                           ;FastBuggy17_Main_Code_TUNING.c: 272: break;
  9589  000D30  D03B               	goto	l793
  9590  000D32                     l5589:
  9591                           
  9592                           ;FastBuggy17_Main_Code_TUNING.c: 274: SetChanADC(0b11110111);
  9593  000D32  0EF7               	movlw	247
  9594  000D34  EC0C  F011         	call	_SetChanADC
  9595                           
  9596                           ;FastBuggy17_Main_Code_TUNING.c: 275: break;
  9597  000D38  D037               	goto	l793
  9598  000D3A                     l5591:
  9599                           
  9600                           ;FastBuggy17_Main_Code_TUNING.c: 277: SetChanADC(0b11111111);
  9601  000D3A  0EFF               	movlw	255
  9602  000D3C  EC0C  F011         	call	_SetChanADC
  9603                           
  9604                           ;FastBuggy17_Main_Code_TUNING.c: 281: }
  9605                           
  9606                           ;FastBuggy17_Main_Code_TUNING.c: 280: break;
  9607                           
  9608                           ;FastBuggy17_Main_Code_TUNING.c: 279: default:
  9609                           
  9610                           ;FastBuggy17_Main_Code_TUNING.c: 278: break;
  9611  000D40  D033               	goto	l793
  9612  000D42                     l5595:
  9613  000D42  0100               	movlb	0	; () banked
  9614  000D44  51D0               	movf	SetADCChannel@channel& (0+255),w,b
  9615                           
  9616                           ; Switch size 1, requested type "space"
  9617                           ; Number of cases is 16, Range of values is 0 to 15
  9618                           ; switch strategies available:
  9619                           ; Name         Instructions Cycles
  9620                           ; simple_byte           49    25 (average)
  9621                           ;	Chosen strategy is simple_byte
  9622  000D46  0A00               	xorlw	0	; case 0
  9623  000D48  B4D8               	btfsc	status,2,c
  9624  000D4A  D7BB               	goto	l5561
  9625  000D4C  0A01               	xorlw	1	; case 1
  9626  000D4E  B4D8               	btfsc	status,2,c
  9627  000D50  D7BC               	goto	l5563
  9628  000D52  0A03               	xorlw	3	; case 2
  9629  000D54  B4D8               	btfsc	status,2,c
  9630  000D56  D7BD               	goto	l5565
  9631  000D58  0A01               	xorlw	1	; case 3
  9632  000D5A  B4D8               	btfsc	status,2,c
  9633  000D5C  D7BE               	goto	l5567
  9634  000D5E  0A07               	xorlw	7	; case 4
  9635  000D60  B4D8               	btfsc	status,2,c
  9636  000D62  D7BF               	goto	l5569
  9637  000D64  0A01               	xorlw	1	; case 5
  9638  000D66  B4D8               	btfsc	status,2,c
  9639  000D68  D7C0               	goto	l5571
  9640  000D6A  0A03               	xorlw	3	; case 6
  9641  000D6C  B4D8               	btfsc	status,2,c
  9642  000D6E  D7C1               	goto	l5573
  9643  000D70  0A01               	xorlw	1	; case 7
  9644  000D72  B4D8               	btfsc	status,2,c
  9645  000D74  D7C2               	goto	l5575
  9646  000D76  0A0F               	xorlw	15	; case 8
  9647  000D78  B4D8               	btfsc	status,2,c
  9648  000D7A  D7C3               	goto	l5577
  9649  000D7C  0A01               	xorlw	1	; case 9
  9650  000D7E  B4D8               	btfsc	status,2,c
  9651  000D80  D7C4               	goto	l5579
  9652  000D82  0A03               	xorlw	3	; case 10
  9653  000D84  B4D8               	btfsc	status,2,c
  9654  000D86  D7C5               	goto	l5581
  9655  000D88  0A01               	xorlw	1	; case 11
  9656  000D8A  B4D8               	btfsc	status,2,c
  9657  000D8C  D7C6               	goto	l5583
  9658  000D8E  0A07               	xorlw	7	; case 12
  9659  000D90  B4D8               	btfsc	status,2,c
  9660  000D92  D7C7               	goto	l5585
  9661  000D94  0A01               	xorlw	1	; case 13
  9662  000D96  B4D8               	btfsc	status,2,c
  9663  000D98  D7C8               	goto	l5587
  9664  000D9A  0A03               	xorlw	3	; case 14
  9665  000D9C  B4D8               	btfsc	status,2,c
  9666  000D9E  D7C9               	goto	l5589
  9667  000DA0  0A01               	xorlw	1	; case 15
  9668  000DA2  B4D8               	btfsc	status,2,c
  9669  000DA4  D7CA               	goto	l5591
  9670  000DA6  D000               	goto	l793
  9671  000DA8                     l793:
  9672  000DA8  0012               	return		;funcret
  9673  000DAA                     __end_of_SetADCChannel:
  9674                           	opt stack 0
  9675                           prodh	equ	0xFF4
  9676                           prodl	equ	0xFF3
  9677                           intcon	equ	0xFF2
  9678                           postinc0	equ	0xFEE
  9679                           wreg	equ	0xFE8
  9680                           postinc1	equ	0xFE6
  9681                           fsr1h	equ	0xFE2
  9682                           fsr1l	equ	0xFE1
  9683                           indf2	equ	0xFDF
  9684                           postinc2	equ	0xFDE
  9685                           postdec2	equ	0xFDD
  9686                           fsr2h	equ	0xFDA
  9687                           fsr2l	equ	0xFD9
  9688                           status	equ	0xFD8
  9689                           
  9690 ;; *************** function _SetChanADC *****************
  9691 ;; Defined at:
  9692 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  channel         1    wreg     unsigned char 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  channel         1   17[BANK0 ] unsigned char 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;		None               void
  9699 ;; Registers used:
  9700 ;;		wreg, status,2, status,0
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;Total ram usage:        2 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    7
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_SetADCChannel
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text71
  9721  002218                     __ptext71:
  9722                           	opt stack 0
  9723  002218                     _SetChanADC:
  9724                           	opt stack 19
  9725                           
  9726                           ;incstack = 0
  9727                           ;SetChanADC@channel stored from wreg
  9728  002218  0100               	movlb	0	; () banked
  9729  00221A  6FCF               	movwf	SetChanADC@channel& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732  00221C  CFC2 F0CE          	movff	4034,??_SetChanADC	;volatile
  9733  002220  0EC3               	movlw	195
  9734  002222  0100               	movlb	0	; () banked
  9735  002224  17CE               	andwf	??_SetChanADC& (0+255),f,b
  9736  002226  0100               	movlb	0	; () banked
  9737  002228  90D8               	bcf	status,0,c
  9738  00222A  31CF               	rrcf	SetChanADC@channel& (0+255),w,b
  9739  00222C  0B3C               	andlw	60
  9740  00222E  0100               	movlb	0	; () banked
  9741  002230  11CE               	iorwf	??_SetChanADC& (0+255),w,b
  9742  002232  6EC2               	movwf	4034,c	;volatile
  9743                           
  9744                           ; BSR set to: 0
  9745  002234  0012               	return		;funcret
  9746  002236                     __end_of_SetChanADC:
  9747                           	opt stack 0
  9748                           prodh	equ	0xFF4
  9749                           prodl	equ	0xFF3
  9750                           intcon	equ	0xFF2
  9751                           postinc0	equ	0xFEE
  9752                           wreg	equ	0xFE8
  9753                           postinc1	equ	0xFE6
  9754                           fsr1h	equ	0xFE2
  9755                           fsr1l	equ	0xFE1
  9756                           indf2	equ	0xFDF
  9757                           postinc2	equ	0xFDE
  9758                           postdec2	equ	0xFDD
  9759                           fsr2h	equ	0xFDA
  9760                           fsr2l	equ	0xFD9
  9761                           status	equ	0xFD8
  9762                           
  9763 ;; *************** function _ConvertADC *****************
  9764 ;; Defined at:
  9765 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;		None               void
  9772 ;; Registers used:
  9773 ;;		None
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    7
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_GetSensorReadings
  9790 ;;		_CalibrateThreshold
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text72
  9795  0024CE                     __ptext72:
  9796                           	opt stack 0
  9797  0024CE                     _ConvertADC:
  9798                           	opt stack 19
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;incstack = 0
  9802  0024CE  82C2               	bsf	4034,1,c	;volatile
  9803  0024D0  0012               	return		;funcret
  9804  0024D2                     __end_of_ConvertADC:
  9805                           	opt stack 0
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           postinc0	equ	0xFEE
  9810                           wreg	equ	0xFE8
  9811                           postinc1	equ	0xFE6
  9812                           fsr1h	equ	0xFE2
  9813                           fsr1l	equ	0xFE1
  9814                           indf2	equ	0xFDF
  9815                           postinc2	equ	0xFDE
  9816                           postdec2	equ	0xFDD
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8
  9820                           
  9821 ;; *************** function _BusySensorAcq *****************
  9822 ;; Defined at:
  9823 ;;		line 297 in file "FastBuggy17_Main_Code_TUNING.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;		None
  9826 ;; Auto vars:     Size  Location     Type
  9827 ;;		None
  9828 ;; Return value:  Size  Location     Type
  9829 ;;                  1    wreg      unsigned char 
  9830 ;; Registers used:
  9831 ;;		wreg, status,2
  9832 ;; Tracked objects:
  9833 ;;		On entry : 0/0
  9834 ;;		On exit  : 0/0
  9835 ;;		Unchanged: 0/0
  9836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;Total ram usage:        0 bytes
  9842 ;; Hardware stack levels used:    1
  9843 ;; Hardware stack levels required when called:    7
  9844 ;; This function calls:
  9845 ;;		Nothing
  9846 ;; This function is called by:
  9847 ;;		_CalibrateOffsets
  9848 ;;		_CalibrateOnLine
  9849 ;;		_CalibrateThreshold
  9850 ;;		_main
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text73
  9855  0023C6                     __ptext73:
  9856                           	opt stack 0
  9857  0023C6                     _BusySensorAcq:
  9858                           	opt stack 20
  9859                           
  9860                           ;FastBuggy17_Main_Code_TUNING.c: 299: return (!sensor_acq_done);
  9861                           
  9862                           ;incstack = 0
  9863  0023C6  5022               	movf	_sensor_acq_done,w,c	;volatile
  9864  0023C8  A4D8               	btfss	status,2,c
  9865  0023CA  D002               	goto	u4520
  9866  0023CC  0E01               	movlw	1
  9867  0023CE  D002               	goto	l799
  9868  0023D0                     u4520:
  9869  0023D0  0E00               	movlw	0
  9870  0023D2  D000               	goto	l799
  9871  0023D4                     l799:
  9872  0023D4  0012               	return		;funcret
  9873  0023D6                     __end_of_BusySensorAcq:
  9874                           	opt stack 0
  9875                           prodh	equ	0xFF4
  9876                           prodl	equ	0xFF3
  9877                           intcon	equ	0xFF2
  9878                           postinc0	equ	0xFEE
  9879                           wreg	equ	0xFE8
  9880                           postinc1	equ	0xFE6
  9881                           fsr1h	equ	0xFE2
  9882                           fsr1l	equ	0xFE1
  9883                           indf2	equ	0xFDF
  9884                           postinc2	equ	0xFDE
  9885                           postdec2	equ	0xFDD
  9886                           fsr2h	equ	0xFDA
  9887                           fsr2l	equ	0xFD9
  9888                           status	equ	0xFD8
  9889                           
  9890 ;; *************** function _GetDistance *****************
  9891 ;; Defined at:
  9892 ;;		line 50 in file "Ultrasound.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;		None
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;		None
  9897 ;; Return value:  Size  Location     Type
  9898 ;;		None               void
  9899 ;; Registers used:
  9900 ;;		wreg, status,2, cstack
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9910 ;;Total ram usage:        0 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:    8
  9913 ;; This function calls:
  9914 ;;		_Delay1TCYx
  9915 ;; This function is called by:
  9916 ;;		_main
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text74
  9921  0022BA                     __ptext74:
  9922                           	opt stack 0
  9923  0022BA                     _GetDistance:
  9924                           	opt stack 22
  9925                           
  9926                           ;Ultrasound.c: 52: LATEbits.LATE5 = 1;
  9927                           
  9928                           ;incstack = 0
  9929  0022BA  8A8D               	bsf	3981,5,c	;volatile
  9930                           
  9931                           ;Ultrasound.c: 53: Delay1TCYx(25);
  9932  0022BC  0E19               	movlw	25
  9933  0022BE  ECEB  F011         	call	_Delay1TCYx
  9934                           
  9935                           ;Ultrasound.c: 54: LATEbits.LATE5 = 0;
  9936  0022C2  9A8D               	bcf	3981,5,c	;volatile
  9937                           
  9938                           ;Ultrasound.c: 55: INTCON2bits.INTEDG3 = 1;
  9939  0022C4  86F1               	bsf	intcon2,3,c	;volatile
  9940                           
  9941                           ;Ultrasound.c: 56: INTCON3bits.INT3IF = 0;
  9942  0022C6  94F0               	bcf	intcon3,2,c	;volatile
  9943                           
  9944                           ;Ultrasound.c: 57: INTCON3bits.INT3IE = 1;
  9945  0022C8  8AF0               	bsf	intcon3,5,c	;volatile
  9946                           
  9947                           ;Ultrasound.c: 59: echo_acq_done = 0;
  9948  0022CA  0E00               	movlw	0
  9949  0022CC  6E1C               	movwf	_echo_acq_done,c
  9950  0022CE  0012               	return		;funcret
  9951  0022D0                     __end_of_GetDistance:
  9952                           	opt stack 0
  9953                           prodh	equ	0xFF4
  9954                           prodl	equ	0xFF3
  9955                           intcon	equ	0xFF2
  9956                           intcon2	equ	0xFF1
  9957                           intcon3	equ	0xFF0
  9958                           postinc0	equ	0xFEE
  9959                           wreg	equ	0xFE8
  9960                           postinc1	equ	0xFE6
  9961                           fsr1h	equ	0xFE2
  9962                           fsr1l	equ	0xFE1
  9963                           indf2	equ	0xFDF
  9964                           postinc2	equ	0xFDE
  9965                           postdec2	equ	0xFDD
  9966                           fsr2h	equ	0xFDA
  9967                           fsr2l	equ	0xFD9
  9968                           status	equ	0xFD8
  9969                           
  9970 ;; *************** function _Delay1TCYx *****************
  9971 ;; Defined at:
  9972 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1tcyx.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  unit            1    wreg     unsigned char 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  unit            1   16[BANK0 ] unsigned char 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;		None               void
  9979 ;; Registers used:
  9980 ;;		wreg
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;Total ram usage:        1 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:    7
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_GetDistance
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text75
 10001  0023D6                     __ptext75:
 10002                           	opt stack 0
 10003  0023D6                     _Delay1TCYx:
 10004                           	opt stack 22
 10005                           
 10006                           ;incstack = 0
 10007                           ;Delay1TCYx@unit stored from wreg
 10008  0023D6  0100               	movlb	0	; () banked
 10009  0023D8  6FCE               	movwf	Delay1TCYx@unit& (0+255),b
 10010  0023DA                     l1478:
 10011                           
 10012                           ; BSR set to: 0
 10013  0023DA  F000               	nop	
 10014  0023DC  0100               	movlb	0	; () banked
 10015  0023DE  2FCE               	decfsz	Delay1TCYx@unit& (0+255),f,b
 10016  0023E0  D7FC               	goto	l1478
 10017  0023E2  D000               	goto	l1480
 10018  0023E4                     l1480:
 10019                           
 10020                           ; BSR set to: 0
 10021  0023E4  0012               	return		;funcret
 10022  0023E6                     __end_of_Delay1TCYx:
 10023                           	opt stack 0
 10024                           prodh	equ	0xFF4
 10025                           prodl	equ	0xFF3
 10026                           intcon	equ	0xFF2
 10027                           intcon2	equ	0xFF1
 10028                           intcon3	equ	0xFF0
 10029                           postinc0	equ	0xFEE
 10030                           wreg	equ	0xFE8
 10031                           postinc1	equ	0xFE6
 10032                           fsr1h	equ	0xFE2
 10033                           fsr1l	equ	0xFE1
 10034                           indf2	equ	0xFDF
 10035                           postinc2	equ	0xFDE
 10036                           postdec2	equ	0xFDD
 10037                           fsr2h	equ	0xFDA
 10038                           fsr2l	equ	0xFD9
 10039                           status	equ	0xFD8
 10040                           
 10041 ;; *************** function _EnableSensorLEDS *****************
 10042 ;; Defined at:
 10043 ;;		line 381 in file "FastBuggy17_Main_Code_TUNING.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;		None               void
 10050 ;; Registers used:
 10051 ;;		wreg, status,2
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;Total ram usage:        0 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    7
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_main
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text76
 10072  0024C0                     __ptext76:
 10073                           	opt stack 0
 10074  0024C0                     _EnableSensorLEDS:
 10075                           	opt stack 23
 10076                           
 10077                           ;FastBuggy17_Main_Code_TUNING.c: 383: LATE = 0x1F;
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;incstack = 0
 10081  0024C0  0E1F               	movlw	31
 10082  0024C2  6E8D               	movwf	3981,c	;volatile
 10083  0024C4  0012               	return		;funcret
 10084  0024C6                     __end_of_EnableSensorLEDS:
 10085                           	opt stack 0
 10086                           prodh	equ	0xFF4
 10087                           prodl	equ	0xFF3
 10088                           intcon	equ	0xFF2
 10089                           intcon2	equ	0xFF1
 10090                           intcon3	equ	0xFF0
 10091                           postinc0	equ	0xFEE
 10092                           wreg	equ	0xFE8
 10093                           postinc1	equ	0xFE6
 10094                           fsr1h	equ	0xFE2
 10095                           fsr1l	equ	0xFE1
 10096                           indf2	equ	0xFDF
 10097                           postinc2	equ	0xFDE
 10098                           postdec2	equ	0xFDD
 10099                           fsr2h	equ	0xFDA
 10100                           fsr2l	equ	0xFD9
 10101                           status	equ	0xFD8
 10102                           
 10103 ;; *************** function _EnableMotors *****************
 10104 ;; Defined at:
 10105 ;;		line 102 in file "Motors.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;		None
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;		None               void
 10112 ;; Registers used:
 10113 ;;		None
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;Total ram usage:        0 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    7
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_main
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text77
 10134  0024D2                     __ptext77:
 10135                           	opt stack 0
 10136  0024D2                     _EnableMotors:
 10137                           	opt stack 23
 10138                           
 10139                           ;Motors.c: 104: LATDbits.LATD4 = 1;
 10140                           
 10141                           ;incstack = 0
 10142  0024D2  888C               	bsf	3980,4,c	;volatile
 10143  0024D4  0012               	return		;funcret
 10144  0024D6                     __end_of_EnableMotors:
 10145                           	opt stack 0
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           intcon2	equ	0xFF1
 10150                           intcon3	equ	0xFF0
 10151                           postinc0	equ	0xFEE
 10152                           wreg	equ	0xFE8
 10153                           postinc1	equ	0xFE6
 10154                           fsr1h	equ	0xFE2
 10155                           fsr1l	equ	0xFE1
 10156                           indf2	equ	0xFDF
 10157                           postinc2	equ	0xFDE
 10158                           postdec2	equ	0xFDD
 10159                           fsr2h	equ	0xFDA
 10160                           fsr2l	equ	0xFD9
 10161                           status	equ	0xFD8
 10162                           
 10163 ;; *************** function _DisableMotors *****************
 10164 ;; Defined at:
 10165 ;;		line 108 in file "Motors.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;		None               void
 10172 ;; Registers used:
 10173 ;;		None
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:    7
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_main
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text78
 10194  0024D6                     __ptext78:
 10195                           	opt stack 0
 10196  0024D6                     _DisableMotors:
 10197                           	opt stack 23
 10198                           
 10199                           ;Motors.c: 110: LATDbits.LATD4 = 0;
 10200                           
 10201                           ;incstack = 0
 10202  0024D6  988C               	bcf	3980,4,c	;volatile
 10203  0024D8  0012               	return		;funcret
 10204  0024DA                     __end_of_DisableMotors:
 10205                           	opt stack 0
 10206                           prodh	equ	0xFF4
 10207                           prodl	equ	0xFF3
 10208                           intcon	equ	0xFF2
 10209                           intcon2	equ	0xFF1
 10210                           intcon3	equ	0xFF0
 10211                           postinc0	equ	0xFEE
 10212                           wreg	equ	0xFE8
 10213                           postinc1	equ	0xFE6
 10214                           fsr1h	equ	0xFE2
 10215                           fsr1l	equ	0xFE1
 10216                           indf2	equ	0xFDF
 10217                           postinc2	equ	0xFDE
 10218                           postdec2	equ	0xFDD
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8
 10222                           
 10223 ;; *************** function _ConfigureWireless *****************
 10224 ;; Defined at:
 10225 ;;		line 114 in file "Wireless.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;		None               void
 10232 ;; Registers used:
 10233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;Total ram usage:        0 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    8
 10246 ;; This function calls:
 10247 ;;		_FlushRxBuf
 10248 ;;		_FlushTxBuf
 10249 ;;		_Open1USART
 10250 ;; This function is called by:
 10251 ;;		_main
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text79
 10256  002236                     __ptext79:
 10257                           	opt stack 0
 10258  002236                     _ConfigureWireless:
 10259                           	opt stack 22
 10260                           
 10261                           ;Wireless.c: 116: Open1USART(0b01111111
 10262                           ;Wireless.c: 117: & 0b10111111
 10263                           ;Wireless.c: 118: & 0b11111110
 10264                           ;Wireless.c: 119: & 0b11111101
 10265                           ;Wireless.c: 120: & 0b11111111
 10266                           ;Wireless.c: 121: & 0b11111111,
 10267                           ;Wireless.c: 122: 64);
 10268                           
 10269                           ;incstack = 0
 10270  002236  0E00               	movlw	0
 10271  002238  0100               	movlb	0	; () banked
 10272  00223A  6FCF               	movwf	(Open1USART@spbrg+1)& (0+255),b
 10273  00223C  0E40               	movlw	64
 10274  00223E  6FCE               	movwf	Open1USART@spbrg& (0+255),b
 10275  002240  0E3C               	movlw	60
 10276  002242  ECFF  F009         	call	_Open1USART
 10277                           
 10278                           ;Wireless.c: 124: FlushTxBuf();
 10279  002246  EC4E  F00F         	call	_FlushTxBuf	;wreg free
 10280                           
 10281                           ;Wireless.c: 125: FlushRxBuf();
 10282  00224A  EC69  F00F         	call	_FlushRxBuf	;wreg free
 10283                           
 10284                           ;Wireless.c: 127: Tx_complete = 1;
 10285  00224E  0E01               	movlw	1
 10286  002250  6E1A               	movwf	_Tx_complete,c
 10287  002252  0012               	return		;funcret
 10288  002254                     __end_of_ConfigureWireless:
 10289                           	opt stack 0
 10290                           prodh	equ	0xFF4
 10291                           prodl	equ	0xFF3
 10292                           intcon	equ	0xFF2
 10293                           intcon2	equ	0xFF1
 10294                           intcon3	equ	0xFF0
 10295                           postinc0	equ	0xFEE
 10296                           wreg	equ	0xFE8
 10297                           postinc1	equ	0xFE6
 10298                           fsr1h	equ	0xFE2
 10299                           fsr1l	equ	0xFE1
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function _Open1USART *****************
 10308 ;; Defined at:
 10309 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  config          1    wreg     unsigned char 
 10312 ;;  spbrg           2   16[BANK0 ] unsigned int 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  config          1   18[BANK0 ] unsigned char 
 10315 ;; Return value:  Size  Location     Type
 10316 ;;		None               void
 10317 ;; Registers used:
 10318 ;;		wreg, status,2
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;Total ram usage:        3 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:    7
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_ConfigureWireless
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text80
 10339  0013FE                     __ptext80:
 10340                           	opt stack 0
 10341  0013FE                     _Open1USART:
 10342                           	opt stack 22
 10343                           
 10344                           ;incstack = 0
 10345                           ;Open1USART@config stored from wreg
 10346  0013FE  0100               	movlb	0	; () banked
 10347  001400  6FD0               	movwf	Open1USART@config& (0+255),b
 10348                           
 10349                           ; BSR set to: 0
 10350  001402  0E00               	movlw	0
 10351  001404  6EAC               	movwf	4012,c	;volatile
 10352  001406  0E00               	movlw	0
 10353  001408  6EAB               	movwf	4011,c	;volatile
 10354                           
 10355                           ; BSR set to: 0
 10356  00140A  0100               	movlb	0	; () banked
 10357  00140C  A1D0               	btfss	Open1USART@config& (0+255),0,b
 10358  00140E  D002               	goto	l5959
 10359                           
 10360                           ; BSR set to: 0
 10361  001410  88AC               	bsf	4012,4,c	;volatile
 10362  001412  D000               	goto	l5959
 10363  001414                     l5959:
 10364                           
 10365                           ; BSR set to: 0
 10366  001414  0100               	movlb	0	; () banked
 10367  001416  A3D0               	btfss	Open1USART@config& (0+255),1,b
 10368  001418  D003               	goto	l5963
 10369                           
 10370                           ; BSR set to: 0
 10371  00141A  8CAC               	bsf	4012,6,c	;volatile
 10372  00141C  8CAB               	bsf	4011,6,c	;volatile
 10373  00141E  D000               	goto	l5963
 10374  001420                     l5963:
 10375                           
 10376                           ; BSR set to: 0
 10377  001420  0100               	movlb	0	; () banked
 10378  001422  A5D0               	btfss	Open1USART@config& (0+255),2,b
 10379  001424  D002               	goto	l5967
 10380                           
 10381                           ; BSR set to: 0
 10382  001426  8EAC               	bsf	4012,7,c	;volatile
 10383  001428  D000               	goto	l5967
 10384  00142A                     l5967:
 10385                           
 10386                           ; BSR set to: 0
 10387  00142A  0100               	movlb	0	; () banked
 10388  00142C  A7D0               	btfss	Open1USART@config& (0+255),3,b
 10389  00142E  D002               	goto	l1212
 10390                           
 10391                           ; BSR set to: 0
 10392  001430  88AB               	bsf	4011,4,c	;volatile
 10393  001432  D002               	goto	l5971
 10394  001434                     l1212:
 10395                           
 10396                           ; BSR set to: 0
 10397  001434  8AAB               	bsf	4011,5,c	;volatile
 10398  001436  D000               	goto	l5971
 10399  001438                     l5971:
 10400                           
 10401                           ; BSR set to: 0
 10402  001438  0100               	movlb	0	; () banked
 10403  00143A  A9D0               	btfss	Open1USART@config& (0+255),4,b
 10404  00143C  D002               	goto	l5975
 10405                           
 10406                           ; BSR set to: 0
 10407  00143E  84AC               	bsf	4012,2,c	;volatile
 10408  001440  D000               	goto	l5975
 10409  001442                     l5975:
 10410                           
 10411                           ; BSR set to: 0
 10412  001442  0100               	movlb	0	; () banked
 10413  001444  ABD0               	btfss	Open1USART@config& (0+255),5,b
 10414  001446  D002               	goto	l5979
 10415                           
 10416                           ; BSR set to: 0
 10417  001448  86AB               	bsf	4011,3,c	;volatile
 10418  00144A  D000               	goto	l5979
 10419  00144C                     l5979:
 10420                           
 10421                           ; BSR set to: 0
 10422  00144C  0100               	movlb	0	; () banked
 10423  00144E  ADD0               	btfss	Open1USART@config& (0+255),6,b
 10424  001450  D002               	goto	l1216
 10425                           
 10426                           ; BSR set to: 0
 10427  001452  8A9D               	bsf	3997,5,c	;volatile
 10428  001454  D002               	goto	l5983
 10429  001456                     l1216:
 10430                           
 10431                           ; BSR set to: 0
 10432  001456  9A9D               	bcf	3997,5,c	;volatile
 10433  001458  D000               	goto	l5983
 10434  00145A                     l5983:
 10435                           
 10436                           ; BSR set to: 0
 10437  00145A  0100               	movlb	0	; () banked
 10438  00145C  AFD0               	btfss	Open1USART@config& (0+255),7,b
 10439  00145E  D002               	goto	l1218
 10440                           
 10441                           ; BSR set to: 0
 10442  001460  889D               	bsf	3997,4,c	;volatile
 10443  001462  D001               	goto	l1219
 10444  001464                     l1218:
 10445                           
 10446                           ; BSR set to: 0
 10447  001464  989D               	bcf	3997,4,c	;volatile
 10448  001466                     l1219:
 10449                           
 10450                           ; BSR set to: 0
 10451  001466  C0CE  FFAF         	movff	Open1USART@spbrg,4015	;volatile
 10452                           
 10453                           ; BSR set to: 0
 10454  00146A  0100               	movlb	0	; () banked
 10455  00146C  51CF               	movf	(Open1USART@spbrg+1)& (0+255),w,b
 10456  00146E  6E7F               	movwf	3967,c	;volatile
 10457                           
 10458                           ; BSR set to: 0
 10459  001470  8AAC               	bsf	4012,5,c	;volatile
 10460                           
 10461                           ; BSR set to: 0
 10462  001472  8EAB               	bsf	4011,7,c	;volatile
 10463                           
 10464                           ; BSR set to: 0
 10465  001474  9C94               	bcf	3988,6,c	;volatile
 10466                           
 10467                           ; BSR set to: 0
 10468  001476  8E94               	bsf	3988,7,c	;volatile
 10469                           
 10470                           ; BSR set to: 0
 10471  001478  B8AC               	btfsc	4012,4,c	;volatile
 10472                           
 10473                           ; BSR set to: 0
 10474  00147A  BEAC               	btfsc	4012,7,c	;volatile
 10475  00147C  D002               	goto	l1221
 10476                           
 10477                           ; BSR set to: 0
 10478  00147E  8C94               	bsf	3988,6,c	;volatile
 10479  001480  D000               	goto	l1221
 10480  001482                     l1221:
 10481                           
 10482                           ; BSR set to: 0
 10483  001482  0012               	return		;funcret
 10484  001484                     __end_of_Open1USART:
 10485                           	opt stack 0
 10486                           prodh	equ	0xFF4
 10487                           prodl	equ	0xFF3
 10488                           intcon	equ	0xFF2
 10489                           intcon2	equ	0xFF1
 10490                           intcon3	equ	0xFF0
 10491                           postinc0	equ	0xFEE
 10492                           wreg	equ	0xFE8
 10493                           postinc1	equ	0xFE6
 10494                           fsr1h	equ	0xFE2
 10495                           fsr1l	equ	0xFE1
 10496                           indf2	equ	0xFDF
 10497                           postinc2	equ	0xFDE
 10498                           postdec2	equ	0xFDD
 10499                           fsr2h	equ	0xFDA
 10500                           fsr2l	equ	0xFD9
 10501                           status	equ	0xFD8
 10502                           
 10503 ;; *************** function _FlushTxBuf *****************
 10504 ;; Defined at:
 10505 ;;		line 90 in file "Wireless.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;		None
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;  index           1   16[BANK0 ] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;		None               void
 10512 ;; Registers used:
 10513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;Total ram usage:        1 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    7
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_ConfigureWireless
 10530 ;;		_SendStatus
 10531 ;;		_SendLineMode
 10532 ;;		_SendOffsets
 10533 ;;		_SendThreshold
 10534 ;;		_SendDefaultPIDValues
 10535 ;;		_SendStoredPIDValues
 10536 ;;		_SendCurrentPIDValues
 10537 ;;		_SendBattVoltageInitial
 10538 ;;		_SendPIDSetPointOnLine
 10539 ;;		_SendBattVoltage
 10540 ;;		_SendBattCurrent
 10541 ;;		_SendBattCurrentAcc
 10542 ;;		_SendPIDSetPointOffLine
 10543 ;;		_SendPIDError
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text81
 10548  001E9C                     __ptext81:
 10549                           	opt stack 0
 10550  001E9C                     _FlushTxBuf:
 10551                           	opt stack 21
 10552                           
 10553                           ;Wireless.c: 91: unsigned char index;
 10554                           ;Wireless.c: 93: for(index = 0; index < 25; index++) {
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;incstack = 0
 10558  001E9C  0E00               	movlw	0
 10559  001E9E  0100               	movlb	0	; () banked
 10560  001EA0  6FCE               	movwf	FlushTxBuf@index& (0+255),b
 10561  001EA2                     l5535:
 10562                           
 10563                           ; BSR set to: 0
 10564  001EA2  0E18               	movlw	24
 10565  001EA4  0100               	movlb	0	; () banked
 10566  001EA6  65CE               	cpfsgt	FlushTxBuf@index& (0+255),b
 10567  001EA8  D001               	goto	l5539
 10568                           
 10569                           ; BSR set to: 0
 10570  001EAA  D00E               	goto	l5545
 10571  001EAC                     l5539:
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;Wireless.c: 94: Tx_buffer[index] = 0;
 10575  001EAC  0100               	movlb	0	; () banked
 10576  001EAE  51CE               	movf	FlushTxBuf@index& (0+255),w,b
 10577  001EB0  0D01               	mullw	1
 10578  001EB2  0E79               	movlw	low _Tx_buffer
 10579  001EB4  24F3               	addwf	prodl,w,c
 10580  001EB6  6ED9               	movwf	fsr2l,c
 10581  001EB8  0E00               	movlw	high _Tx_buffer
 10582  001EBA  20F4               	addwfc	prodh,w,c
 10583  001EBC  6EDA               	movwf	fsr2h,c
 10584  001EBE  0E00               	movlw	0
 10585  001EC0  6EDF               	movwf	indf2,c
 10586                           
 10587                           ; BSR set to: 0
 10588  001EC2  0100               	movlb	0	; () banked
 10589  001EC4  2BCE               	incf	FlushTxBuf@index& (0+255),f,b
 10590  001EC6  D7ED               	goto	l5535
 10591  001EC8                     l5545:
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;Wireless.c: 95: }
 10595                           ;Wireless.c: 97: put_Tx_index = 0;
 10596  001EC8  0E00               	movlw	0
 10597  001ECA  6E20               	movwf	_put_Tx_index,c
 10598                           
 10599                           ;Wireless.c: 98: get_Tx_index = 0;
 10600  001ECC  0E00               	movlw	0
 10601  001ECE  6E1E               	movwf	_get_Tx_index,c
 10602                           
 10603                           ; BSR set to: 0
 10604  001ED0  0012               	return		;funcret
 10605  001ED2                     __end_of_FlushTxBuf:
 10606                           	opt stack 0
 10607                           prodh	equ	0xFF4
 10608                           prodl	equ	0xFF3
 10609                           intcon	equ	0xFF2
 10610                           intcon2	equ	0xFF1
 10611                           intcon3	equ	0xFF0
 10612                           postinc0	equ	0xFEE
 10613                           wreg	equ	0xFE8
 10614                           postinc1	equ	0xFE6
 10615                           fsr1h	equ	0xFE2
 10616                           fsr1l	equ	0xFE1
 10617                           indf2	equ	0xFDF
 10618                           postinc2	equ	0xFDE
 10619                           postdec2	equ	0xFDD
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function _FlushRxBuf *****************
 10625 ;; Defined at:
 10626 ;;		line 102 in file "Wireless.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;  index           1   16[BANK0 ] unsigned char 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;		None               void
 10633 ;; Registers used:
 10634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;Total ram usage:        1 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    7
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_ConfigureWireless
 10651 ;;		_SetPIDValues
 10652 ;;		_ReceiveCommandsEnable
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text82
 10657  001ED2                     __ptext82:
 10658                           	opt stack 0
 10659  001ED2                     _FlushRxBuf:
 10660                           	opt stack 22
 10661                           
 10662                           ;Wireless.c: 103: unsigned char index;
 10663                           ;Wireless.c: 105: for(index = 0; index < 25; index++) {
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;incstack = 0
 10667  001ED2  0E00               	movlw	0
 10668  001ED4  0100               	movlb	0	; () banked
 10669  001ED6  6FCE               	movwf	FlushRxBuf@index& (0+255),b
 10670  001ED8                     l5825:
 10671                           
 10672                           ; BSR set to: 0
 10673  001ED8  0E18               	movlw	24
 10674  001EDA  0100               	movlb	0	; () banked
 10675  001EDC  65CE               	cpfsgt	FlushRxBuf@index& (0+255),b
 10676  001EDE  D001               	goto	l5829
 10677                           
 10678                           ; BSR set to: 0
 10679  001EE0  D00E               	goto	l5835
 10680  001EE2                     l5829:
 10681                           
 10682                           ; BSR set to: 0
 10683                           ;Wireless.c: 106: Rx_buffer[index] = 0;
 10684  001EE2  0100               	movlb	0	; () banked
 10685  001EE4  51CE               	movf	FlushRxBuf@index& (0+255),w,b
 10686  001EE6  0D01               	mullw	1
 10687  001EE8  0E60               	movlw	low _Rx_buffer
 10688  001EEA  24F3               	addwf	prodl,w,c
 10689  001EEC  6ED9               	movwf	fsr2l,c
 10690  001EEE  0E00               	movlw	high _Rx_buffer
 10691  001EF0  20F4               	addwfc	prodh,w,c
 10692  001EF2  6EDA               	movwf	fsr2h,c
 10693  001EF4  0E00               	movlw	0
 10694  001EF6  6EDF               	movwf	indf2,c
 10695                           
 10696                           ; BSR set to: 0
 10697  001EF8  0100               	movlb	0	; () banked
 10698  001EFA  2BCE               	incf	FlushRxBuf@index& (0+255),f,b
 10699  001EFC  D7ED               	goto	l5825
 10700  001EFE                     l5835:
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;Wireless.c: 107: }
 10704                           ;Wireless.c: 109: put_Rx_index = 0;
 10705  001EFE  0E00               	movlw	0
 10706  001F00  6E1F               	movwf	_put_Rx_index,c
 10707                           
 10708                           ;Wireless.c: 110: get_Rx_index = 0;
 10709  001F02  0E00               	movlw	0
 10710  001F04  6E1D               	movwf	_get_Rx_index,c
 10711                           
 10712                           ; BSR set to: 0
 10713  001F06  0012               	return		;funcret
 10714  001F08                     __end_of_FlushRxBuf:
 10715                           	opt stack 0
 10716                           prodh	equ	0xFF4
 10717                           prodl	equ	0xFF3
 10718                           intcon	equ	0xFF2
 10719                           intcon2	equ	0xFF1
 10720                           intcon3	equ	0xFF0
 10721                           postinc0	equ	0xFEE
 10722                           wreg	equ	0xFE8
 10723                           postinc1	equ	0xFE6
 10724                           fsr1h	equ	0xFE2
 10725                           fsr1l	equ	0xFE1
 10726                           indf2	equ	0xFDF
 10727                           postinc2	equ	0xFDE
 10728                           postdec2	equ	0xFDD
 10729                           fsr2h	equ	0xFDA
 10730                           fsr2l	equ	0xFD9
 10731                           status	equ	0xFD8
 10732                           
 10733 ;; *************** function _ConfigureUltrasound *****************
 10734 ;; Defined at:
 10735 ;;		line 9 in file "Ultrasound.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  echo_to_cm      3   20[BANK0 ] float 
 10738 ;;  echo_to_in      3   23[BANK0 ] float 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;		None
 10741 ;; Return value:  Size  Location     Type
 10742 ;;		None               void
 10743 ;; Registers used:
 10744 ;;		wreg, status,2, cstack
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10750 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;Total ram usage:        6 bytes
 10755 ;; Hardware stack levels used:    1
 10756 ;; Hardware stack levels required when called:    8
 10757 ;; This function calls:
 10758 ;;		_WriteTimer1
 10759 ;; This function is called by:
 10760 ;;		_main
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           	psect	text83
 10765  0020B0                     __ptext83:
 10766                           	opt stack 0
 10767  0020B0                     _ConfigureUltrasound:
 10768                           	opt stack 22
 10769                           
 10770                           ;Ultrasound.c: 10: convert_cm = echo_to_cm;
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;incstack = 0
 10774  0020B0  C0D2  F0E6         	movff	ConfigureUltrasound@echo_to_cm,_convert_cm
 10775  0020B4  C0D3  F0E7         	movff	ConfigureUltrasound@echo_to_cm+1,_convert_cm+1
 10776  0020B8  C0D4  F0E8         	movff	ConfigureUltrasound@echo_to_cm+2,_convert_cm+2
 10777                           
 10778                           ;Ultrasound.c: 11: convert_in = echo_to_in;
 10779  0020BC  C0D5  F0E9         	movff	ConfigureUltrasound@echo_to_in,_convert_in
 10780  0020C0  C0D6  F0EA         	movff	ConfigureUltrasound@echo_to_in+1,_convert_in+1
 10781  0020C4  C0D7  F0EB         	movff	ConfigureUltrasound@echo_to_in+2,_convert_in+2
 10782                           
 10783                           ;Ultrasound.c: 12: WriteTimer1(0);
 10784  0020C8  0E00               	movlw	0
 10785  0020CA  0100               	movlb	0	; () banked
 10786  0020CC  6FCF               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 10787  0020CE  0E00               	movlw	0
 10788  0020D0  6FCE               	movwf	WriteTimer1@timer1& (0+255),b
 10789  0020D2  ECA6  F011         	call	_WriteTimer1	;wreg free
 10790  0020D6  0012               	return		;funcret
 10791  0020D8                     __end_of_ConfigureUltrasound:
 10792                           	opt stack 0
 10793                           prodh	equ	0xFF4
 10794                           prodl	equ	0xFF3
 10795                           intcon	equ	0xFF2
 10796                           intcon2	equ	0xFF1
 10797                           intcon3	equ	0xFF0
 10798                           postinc0	equ	0xFEE
 10799                           wreg	equ	0xFE8
 10800                           postinc1	equ	0xFE6
 10801                           fsr1h	equ	0xFE2
 10802                           fsr1l	equ	0xFE1
 10803                           indf2	equ	0xFDF
 10804                           postinc2	equ	0xFDE
 10805                           postdec2	equ	0xFDD
 10806                           fsr2h	equ	0xFDA
 10807                           fsr2l	equ	0xFD9
 10808                           status	equ	0xFD8
 10809                           
 10810 ;; *************** function _ConfigureTimer2 *****************
 10811 ;; Defined at:
 10812 ;;		line 147 in file "FastBuggy17_Main_Code_TUNING.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;		None
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;		None               void
 10819 ;; Registers used:
 10820 ;;		wreg, status,2, status,0, cstack
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;Total ram usage:        0 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    8
 10833 ;; This function calls:
 10834 ;;		_OpenTimer3
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text84
 10841  0024AC                     __ptext84:
 10842                           	opt stack 0
 10843  0024AC                     _ConfigureTimer2:
 10844                           	opt stack 22
 10845                           
 10846                           ;FastBuggy17_Main_Code_TUNING.c: 149: OpenTimer3(0b01111111
 10847                           ;FastBuggy17_Main_Code_TUNING.c: 150: & 0b11111100
 10848                           ;FastBuggy17_Main_Code_TUNING.c: 151: & 0b10000111
 10849                           ;FastBuggy17_Main_Code_TUNING.c: 152: & 0b10110111);
 10850                           
 10851                           ;incstack = 0
 10852  0024AC  0E04               	movlw	4
 10853  0024AE  ECD1  F00F         	call	_OpenTimer3
 10854  0024B2  0012               	return		;funcret
 10855  0024B4                     __end_of_ConfigureTimer2:
 10856                           	opt stack 0
 10857                           prodh	equ	0xFF4
 10858                           prodl	equ	0xFF3
 10859                           intcon	equ	0xFF2
 10860                           intcon2	equ	0xFF1
 10861                           intcon3	equ	0xFF0
 10862                           postinc0	equ	0xFEE
 10863                           wreg	equ	0xFE8
 10864                           postinc1	equ	0xFE6
 10865                           fsr1h	equ	0xFE2
 10866                           fsr1l	equ	0xFE1
 10867                           indf2	equ	0xFDF
 10868                           postinc2	equ	0xFDE
 10869                           postdec2	equ	0xFDD
 10870                           fsr2h	equ	0xFDA
 10871                           fsr2l	equ	0xFD9
 10872                           status	equ	0xFD8
 10873                           
 10874 ;; *************** function _OpenTimer3 *****************
 10875 ;; Defined at:
 10876 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t3open.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;  config          1    wreg     unsigned char 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;  config          1   16[BANK0 ] unsigned char 
 10881 ;; Return value:  Size  Location     Type
 10882 ;;		None               void
 10883 ;; Registers used:
 10884 ;;		wreg, status,2, status,0
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10893 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;Total ram usage:        1 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; Hardware stack levels required when called:    7
 10897 ;; This function calls:
 10898 ;;		Nothing
 10899 ;; This function is called by:
 10900 ;;		_ConfigureTimer2
 10901 ;; This function uses a non-reentrant model
 10902 ;;
 10903                           
 10904                           	psect	text85
 10905  001FA2                     __ptext85:
 10906                           	opt stack 0
 10907  001FA2                     _OpenTimer3:
 10908                           	opt stack 22
 10909                           
 10910                           ;incstack = 0
 10911                           ;OpenTimer3@config stored from wreg
 10912  001FA2  0100               	movlb	0	; () banked
 10913  001FA4  6FCE               	movwf	OpenTimer3@config& (0+255),b
 10914                           
 10915                           ; BSR set to: 0
 10916  001FA6  0100               	movlb	0	; () banked
 10917  001FA8  51CE               	movf	OpenTimer3@config& (0+255),w,b
 10918  001FAA  0B36               	andlw	54
 10919  001FAC  6EB1               	movwf	4017,c	;volatile
 10920                           
 10921                           ; BSR set to: 0
 10922  001FAE  0E00               	movlw	0
 10923  001FB0  6EB3               	movwf	4019,c	;volatile
 10924                           
 10925                           ; BSR set to: 0
 10926  001FB2  0E00               	movlw	0
 10927  001FB4  6EB2               	movwf	4018,c	;volatile
 10928                           
 10929                           ; BSR set to: 0
 10930  001FB6  92A1               	bcf	4001,1,c	;volatile
 10931                           
 10932                           ; BSR set to: 0
 10933  001FB8  0100               	movlb	0	; () banked
 10934  001FBA  AFCE               	btfss	OpenTimer3@config& (0+255),7,b
 10935  001FBC  D002               	goto	l1186
 10936                           
 10937                           ; BSR set to: 0
 10938  001FBE  82A0               	bsf	4000,1,c	;volatile
 10939  001FC0  D001               	goto	l1187
 10940  001FC2                     l1186:
 10941                           
 10942                           ; BSR set to: 0
 10943  001FC2  92A0               	bcf	4000,1,c	;volatile
 10944  001FC4                     l1187:
 10945                           
 10946                           ; BSR set to: 0
 10947  001FC4  0100               	movlb	0	; () banked
 10948  001FC6  A1CE               	btfss	OpenTimer3@config& (0+255),0,b
 10949  001FC8  D002               	goto	l1188
 10950                           
 10951                           ; BSR set to: 0
 10952  001FCA  8EB1               	bsf	4017,7,c	;volatile
 10953  001FCC  D001               	goto	l1189
 10954  001FCE                     l1188:
 10955                           
 10956                           ; BSR set to: 0
 10957  001FCE  9EB1               	bcf	4017,7,c	;volatile
 10958  001FD0                     l1189:
 10959                           
 10960                           ; BSR set to: 0
 10961  001FD0  80B1               	bsf	4017,0,c	;volatile
 10962                           
 10963                           ; BSR set to: 0
 10964  001FD2  0012               	return		;funcret
 10965  001FD4                     __end_of_OpenTimer3:
 10966                           	opt stack 0
 10967                           prodh	equ	0xFF4
 10968                           prodl	equ	0xFF3
 10969                           intcon	equ	0xFF2
 10970                           intcon2	equ	0xFF1
 10971                           intcon3	equ	0xFF0
 10972                           postinc0	equ	0xFEE
 10973                           wreg	equ	0xFE8
 10974                           postinc1	equ	0xFE6
 10975                           fsr1h	equ	0xFE2
 10976                           fsr1l	equ	0xFE1
 10977                           indf2	equ	0xFDF
 10978                           postinc2	equ	0xFDE
 10979                           postdec2	equ	0xFDD
 10980                           fsr2h	equ	0xFDA
 10981                           fsr2l	equ	0xFD9
 10982                           status	equ	0xFD8
 10983                           
 10984 ;; *************** function _ConfigureTimer1 *****************
 10985 ;; Defined at:
 10986 ;;		line 128 in file "FastBuggy17_Main_Code_TUNING.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;		None               void
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;Total ram usage:        0 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    8
 11007 ;; This function calls:
 11008 ;;		_OpenTimer1
 11009 ;;		_WriteTimer1
 11010 ;; This function is called by:
 11011 ;;		_main
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text86
 11016  00228C                     __ptext86:
 11017                           	opt stack 0
 11018  00228C                     _ConfigureTimer1:
 11019                           	opt stack 22
 11020                           
 11021                           ;FastBuggy17_Main_Code_TUNING.c: 130: OpenTimer1(0b01111111
 11022                           ;FastBuggy17_Main_Code_TUNING.c: 131: & 0b11111111
 11023                           ;FastBuggy17_Main_Code_TUNING.c: 132: & 0b11111101
 11024                           ;FastBuggy17_Main_Code_TUNING.c: 133: & 0b11011111
 11025                           ;FastBuggy17_Main_Code_TUNING.c: 134: & 0b11110111
 11026                           ;FastBuggy17_Main_Code_TUNING.c: 135: & 0b11111111
 11027                           ;FastBuggy17_Main_Code_TUNING.c: 136: & 0b10110111);
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;incstack = 0
 11031  00228C  0E15               	movlw	21
 11032  00228E  EC84  F00F         	call	_OpenTimer1
 11033                           
 11034                           ;FastBuggy17_Main_Code_TUNING.c: 140: T1CONbits.TMR1ON = 0;
 11035  002292  90CD               	bcf	4045,0,c	;volatile
 11036                           
 11037                           ;FastBuggy17_Main_Code_TUNING.c: 142: WriteTimer1(0);
 11038  002294  0E00               	movlw	0
 11039  002296  0100               	movlb	0	; () banked
 11040  002298  6FCF               	movwf	(WriteTimer1@timer1+1)& (0+255),b
 11041  00229A  0E00               	movlw	0
 11042  00229C  6FCE               	movwf	WriteTimer1@timer1& (0+255),b
 11043  00229E  ECA6  F011         	call	_WriteTimer1	;wreg free
 11044  0022A2  0012               	return		;funcret
 11045  0022A4                     __end_of_ConfigureTimer1:
 11046                           	opt stack 0
 11047                           prodh	equ	0xFF4
 11048                           prodl	equ	0xFF3
 11049                           intcon	equ	0xFF2
 11050                           intcon2	equ	0xFF1
 11051                           intcon3	equ	0xFF0
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postinc1	equ	0xFE6
 11055                           fsr1h	equ	0xFE2
 11056                           fsr1l	equ	0xFE1
 11057                           indf2	equ	0xFDF
 11058                           postinc2	equ	0xFDE
 11059                           postdec2	equ	0xFDD
 11060                           fsr2h	equ	0xFDA
 11061                           fsr2l	equ	0xFD9
 11062                           status	equ	0xFD8
 11063                           
 11064 ;; *************** function _WriteTimer1 *****************
 11065 ;; Defined at:
 11066 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  timer1          2   16[BANK0 ] unsigned int 
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;  timer           2   18[BANK0 ] struct Timers
 11071 ;; Return value:  Size  Location     Type
 11072 ;;		None               void
 11073 ;; Registers used:
 11074 ;;		None
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;Total ram usage:        4 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    7
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_ConfigureUltrasound
 11091 ;;		_ConfigureTimer1
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text87
 11096  00234C                     __ptext87:
 11097                           	opt stack 0
 11098  00234C                     _WriteTimer1:
 11099                           	opt stack 22
 11100                           
 11101                           ;incstack = 0
 11102  00234C  C0CE  F0D0         	movff	WriteTimer1@timer1,WriteTimer1@timer
 11103  002350  C0CF  F0D1         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
 11104  002354  C0D1  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
 11105  002358  C0D0  FFCE         	movff	WriteTimer1@timer,4046	;volatile
 11106  00235C  0012               	return		;funcret
 11107  00235E                     __end_of_WriteTimer1:
 11108                           	opt stack 0
 11109                           prodh	equ	0xFF4
 11110                           prodl	equ	0xFF3
 11111                           intcon	equ	0xFF2
 11112                           intcon2	equ	0xFF1
 11113                           intcon3	equ	0xFF0
 11114                           postinc0	equ	0xFEE
 11115                           wreg	equ	0xFE8
 11116                           postinc1	equ	0xFE6
 11117                           fsr1h	equ	0xFE2
 11118                           fsr1l	equ	0xFE1
 11119                           indf2	equ	0xFDF
 11120                           postinc2	equ	0xFDE
 11121                           postdec2	equ	0xFDD
 11122                           fsr2h	equ	0xFDA
 11123                           fsr2l	equ	0xFD9
 11124                           status	equ	0xFD8
 11125                           
 11126 ;; *************** function _OpenTimer1 *****************
 11127 ;; Defined at:
 11128 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  config          1    wreg     unsigned char 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  config          1   16[BANK0 ] unsigned char 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;		None               void
 11135 ;; Registers used:
 11136 ;;		wreg, status,2, status,0
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;Total ram usage:        1 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    7
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_ConfigureTimer1
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           	psect	text88
 11157  001F08                     __ptext88:
 11158                           	opt stack 0
 11159  001F08                     _OpenTimer1:
 11160                           	opt stack 22
 11161                           
 11162                           ;incstack = 0
 11163                           ;OpenTimer1@config stored from wreg
 11164  001F08  0100               	movlb	0	; () banked
 11165  001F0A  6FCE               	movwf	OpenTimer1@config& (0+255),b
 11166                           
 11167                           ; BSR set to: 0
 11168  001F0C  0100               	movlb	0	; () banked
 11169  001F0E  51CE               	movf	OpenTimer1@config& (0+255),w,b
 11170  001F10  0B7E               	andlw	126
 11171  001F12  6ECD               	movwf	4045,c	;volatile
 11172                           
 11173                           ; BSR set to: 0
 11174  001F14  0100               	movlb	0	; () banked
 11175  001F16  ADCE               	btfss	OpenTimer1@config& (0+255),6,b
 11176  001F18  D002               	goto	l1153
 11177                           
 11178                           ; BSR set to: 0
 11179  001F1A  8ECD               	bsf	4045,7,c	;volatile
 11180  001F1C  D002               	goto	l6075
 11181  001F1E                     l1153:
 11182                           
 11183                           ; BSR set to: 0
 11184  001F1E  9ECD               	bcf	4045,7,c	;volatile
 11185  001F20  D000               	goto	l6075
 11186  001F22                     l6075:
 11187                           
 11188                           ; BSR set to: 0
 11189  001F22  0E00               	movlw	0
 11190  001F24  6ECF               	movwf	4047,c	;volatile
 11191  001F26  0E00               	movlw	0
 11192  001F28  6ECE               	movwf	4046,c	;volatile
 11193                           
 11194                           ; BSR set to: 0
 11195  001F2A  909E               	bcf	3998,0,c	;volatile
 11196                           
 11197                           ; BSR set to: 0
 11198  001F2C  0100               	movlb	0	; () banked
 11199  001F2E  AFCE               	btfss	OpenTimer1@config& (0+255),7,b
 11200  001F30  D002               	goto	l1155
 11201                           
 11202                           ; BSR set to: 0
 11203  001F32  809D               	bsf	3997,0,c	;volatile
 11204  001F34  D001               	goto	l1156
 11205  001F36                     l1155:
 11206                           
 11207                           ; BSR set to: 0
 11208  001F36  909D               	bcf	3997,0,c	;volatile
 11209  001F38                     l1156:
 11210                           
 11211                           ; BSR set to: 0
 11212  001F38  80CD               	bsf	4045,0,c	;volatile
 11213                           
 11214                           ; BSR set to: 0
 11215  001F3A  0012               	return		;funcret
 11216  001F3C                     __end_of_OpenTimer1:
 11217                           	opt stack 0
 11218                           prodh	equ	0xFF4
 11219                           prodl	equ	0xFF3
 11220                           intcon	equ	0xFF2
 11221                           intcon2	equ	0xFF1
 11222                           intcon3	equ	0xFF0
 11223                           postinc0	equ	0xFEE
 11224                           wreg	equ	0xFE8
 11225                           postinc1	equ	0xFE6
 11226                           fsr1h	equ	0xFE2
 11227                           fsr1l	equ	0xFE1
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           postdec2	equ	0xFDD
 11231                           fsr2h	equ	0xFDA
 11232                           fsr2l	equ	0xFD9
 11233                           status	equ	0xFD8
 11234                           
 11235 ;; *************** function _ConfigureTimer0 *****************
 11236 ;; Defined at:
 11237 ;;		line 114 in file "FastBuggy17_Main_Code_TUNING.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;		None
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;		None
 11242 ;; Return value:  Size  Location     Type
 11243 ;;		None               void
 11244 ;; Registers used:
 11245 ;;		wreg, status,2, status,0, cstack
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;Total ram usage:        0 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:    8
 11258 ;; This function calls:
 11259 ;;		_OpenTimer0
 11260 ;;		_WriteTimer0
 11261 ;; This function is called by:
 11262 ;;		_main
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text89
 11267  0022D0                     __ptext89:
 11268                           	opt stack 0
 11269  0022D0                     _ConfigureTimer0:
 11270                           	opt stack 22
 11271                           
 11272                           ;FastBuggy17_Main_Code_TUNING.c: 116: OpenTimer0(0b11111111
 11273                           ;FastBuggy17_Main_Code_TUNING.c: 117: & 0b10111111
 11274                           ;FastBuggy17_Main_Code_TUNING.c: 118: & 0b11011111
 11275                           ;FastBuggy17_Main_Code_TUNING.c: 119: & 0b11111111);
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;incstack = 0
 11279  0022D0  0E9F               	movlw	159
 11280  0022D2  EC93  F010         	call	_OpenTimer0
 11281                           
 11282                           ;FastBuggy17_Main_Code_TUNING.c: 123: WriteTimer0(63036);
 11283  0022D6  0EF6               	movlw	246
 11284  0022D8  0100               	movlb	0	; () banked
 11285  0022DA  6FCF               	movwf	(WriteTimer0@timer0+1)& (0+255),b
 11286  0022DC  0E3C               	movlw	60
 11287  0022DE  6FCE               	movwf	WriteTimer0@timer0& (0+255),b
 11288  0022E0  ECAF  F011         	call	_WriteTimer0	;wreg free
 11289  0022E4  0012               	return		;funcret
 11290  0022E6                     __end_of_ConfigureTimer0:
 11291                           	opt stack 0
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           intcon2	equ	0xFF1
 11296                           intcon3	equ	0xFF0
 11297                           postinc0	equ	0xFEE
 11298                           wreg	equ	0xFE8
 11299                           postinc1	equ	0xFE6
 11300                           fsr1h	equ	0xFE2
 11301                           fsr1l	equ	0xFE1
 11302                           indf2	equ	0xFDF
 11303                           postinc2	equ	0xFDE
 11304                           postdec2	equ	0xFDD
 11305                           fsr2h	equ	0xFDA
 11306                           fsr2l	equ	0xFD9
 11307                           status	equ	0xFD8
 11308                           
 11309 ;; *************** function _WriteTimer0 *****************
 11310 ;; Defined at:
 11311 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  timer0          2   16[BANK0 ] unsigned int 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  timer           2   18[BANK0 ] struct Timers
 11316 ;; Return value:  Size  Location     Type
 11317 ;;		None               void
 11318 ;; Registers used:
 11319 ;;		None
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;Total ram usage:        4 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    7
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_ConfigureTimer0
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text90
 11340  00235E                     __ptext90:
 11341                           	opt stack 0
 11342  00235E                     _WriteTimer0:
 11343                           	opt stack 22
 11344                           
 11345                           ;incstack = 0
 11346  00235E  C0CE  F0D0         	movff	WriteTimer0@timer0,WriteTimer0@timer
 11347  002362  C0CF  F0D1         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 11348  002366  C0D1  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 11349  00236A  C0D0  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 11350  00236E  0012               	return		;funcret
 11351  002370                     __end_of_WriteTimer0:
 11352                           	opt stack 0
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           intcon2	equ	0xFF1
 11357                           intcon3	equ	0xFF0
 11358                           postinc0	equ	0xFEE
 11359                           wreg	equ	0xFE8
 11360                           postinc1	equ	0xFE6
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           indf2	equ	0xFDF
 11364                           postinc2	equ	0xFDE
 11365                           postdec2	equ	0xFDD
 11366                           fsr2h	equ	0xFDA
 11367                           fsr2l	equ	0xFD9
 11368                           status	equ	0xFD8
 11369                           
 11370 ;; *************** function _OpenTimer0 *****************
 11371 ;; Defined at:
 11372 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  config          1    wreg     unsigned char 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  config          1   16[BANK0 ] unsigned char 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;		None               void
 11379 ;; Registers used:
 11380 ;;		wreg, status,2, status,0
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;Total ram usage:        1 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; Hardware stack levels required when called:    7
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_ConfigureTimer0
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text91
 11401  002126                     __ptext91:
 11402                           	opt stack 0
 11403  002126                     _OpenTimer0:
 11404                           	opt stack 22
 11405                           
 11406                           ;incstack = 0
 11407                           ;OpenTimer0@config stored from wreg
 11408  002126  0100               	movlb	0	; () banked
 11409  002128  6FCE               	movwf	OpenTimer0@config& (0+255),b
 11410                           
 11411                           ; BSR set to: 0
 11412  00212A  0100               	movlb	0	; () banked
 11413  00212C  51CE               	movf	OpenTimer0@config& (0+255),w,b
 11414  00212E  0B7F               	andlw	127
 11415  002130  6ED5               	movwf	4053,c	;volatile
 11416                           
 11417                           ; BSR set to: 0
 11418  002132  0E00               	movlw	0
 11419  002134  6ED7               	movwf	4055,c	;volatile
 11420                           
 11421                           ; BSR set to: 0
 11422  002136  0E00               	movlw	0
 11423  002138  6ED6               	movwf	4054,c	;volatile
 11424                           
 11425                           ; BSR set to: 0
 11426  00213A  94F2               	bcf	intcon,2,c	;volatile
 11427                           
 11428                           ; BSR set to: 0
 11429  00213C  0100               	movlb	0	; () banked
 11430  00213E  AFCE               	btfss	OpenTimer0@config& (0+255),7,b
 11431  002140  D002               	goto	l1129
 11432                           
 11433                           ; BSR set to: 0
 11434  002142  8AF2               	bsf	intcon,5,c	;volatile
 11435  002144  D001               	goto	l1130
 11436  002146                     l1129:
 11437                           
 11438                           ; BSR set to: 0
 11439  002146  9AF2               	bcf	intcon,5,c	;volatile
 11440  002148                     l1130:
 11441                           
 11442                           ; BSR set to: 0
 11443  002148  8ED5               	bsf	4053,7,c	;volatile
 11444                           
 11445                           ; BSR set to: 0
 11446  00214A  0012               	return		;funcret
 11447  00214C                     __end_of_OpenTimer0:
 11448                           	opt stack 0
 11449                           prodh	equ	0xFF4
 11450                           prodl	equ	0xFF3
 11451                           intcon	equ	0xFF2
 11452                           intcon2	equ	0xFF1
 11453                           intcon3	equ	0xFF0
 11454                           postinc0	equ	0xFEE
 11455                           wreg	equ	0xFE8
 11456                           postinc1	equ	0xFE6
 11457                           fsr1h	equ	0xFE2
 11458                           fsr1l	equ	0xFE1
 11459                           indf2	equ	0xFDF
 11460                           postinc2	equ	0xFDE
 11461                           postdec2	equ	0xFDD
 11462                           fsr2h	equ	0xFDA
 11463                           fsr2l	equ	0xFD9
 11464                           status	equ	0xFD8
 11465                           
 11466 ;; *************** function _ConfigurePWM *****************
 11467 ;; Defined at:
 11468 ;;		line 165 in file "FastBuggy17_Main_Code_TUNING.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;		None
 11473 ;; Return value:  Size  Location     Type
 11474 ;;		None               void
 11475 ;; Registers used:
 11476 ;;		wreg, status,2, cstack
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11486 ;;Total ram usage:        0 bytes
 11487 ;; Hardware stack levels used:    1
 11488 ;; Hardware stack levels required when called:    8
 11489 ;; This function calls:
 11490 ;;		_OpenPWM4
 11491 ;;		_OpenPWM5
 11492 ;; This function is called by:
 11493 ;;		_main
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text92
 11498  00243E                     __ptext92:
 11499                           	opt stack 0
 11500  00243E                     _ConfigurePWM:
 11501                           	opt stack 22
 11502                           
 11503                           ;FastBuggy17_Main_Code_TUNING.c: 167: OpenPWM4(130);
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;incstack = 0
 11507  00243E  0E82               	movlw	130
 11508  002440  ECB9  F010         	call	_OpenPWM4
 11509                           
 11510                           ;FastBuggy17_Main_Code_TUNING.c: 168: OpenPWM5(130);
 11511  002444  0E82               	movlw	130
 11512  002446  ECA6  F010         	call	_OpenPWM5
 11513  00244A  0012               	return		;funcret
 11514  00244C                     __end_of_ConfigurePWM:
 11515                           	opt stack 0
 11516                           prodh	equ	0xFF4
 11517                           prodl	equ	0xFF3
 11518                           intcon	equ	0xFF2
 11519                           intcon2	equ	0xFF1
 11520                           intcon3	equ	0xFF0
 11521                           postinc0	equ	0xFEE
 11522                           wreg	equ	0xFE8
 11523                           postinc1	equ	0xFE6
 11524                           fsr1h	equ	0xFE2
 11525                           fsr1l	equ	0xFE1
 11526                           indf2	equ	0xFDF
 11527                           postinc2	equ	0xFDE
 11528                           postdec2	equ	0xFDD
 11529                           fsr2h	equ	0xFDA
 11530                           fsr2l	equ	0xFD9
 11531                           status	equ	0xFD8
 11532                           
 11533 ;; *************** function _OpenPWM5 *****************
 11534 ;; Defined at:
 11535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw5open.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  period          1    wreg     unsigned char 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  period          1   16[BANK0 ] unsigned char 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;		None               void
 11542 ;; Registers used:
 11543 ;;		wreg, status,2
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;Total ram usage:        1 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    7
 11556 ;; This function calls:
 11557 ;;		Nothing
 11558 ;; This function is called by:
 11559 ;;		_ConfigurePWM
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           	psect	text93
 11564  00214C                     __ptext93:
 11565                           	opt stack 0
 11566  00214C                     _OpenPWM5:
 11567                           	opt stack 22
 11568                           
 11569                           ;incstack = 0
 11570                           ;OpenPWM5@period stored from wreg
 11571  00214C  0100               	movlb	0	; () banked
 11572  00214E  6FCE               	movwf	OpenPWM5@period& (0+255),b
 11573                           
 11574                           ; BSR set to: 0
 11575  002150  0E0C               	movlw	12
 11576  002152  6E70               	movwf	3952,c	;volatile
 11577                           
 11578                           ; BSR set to: 0
 11579  002154  ACB1               	btfss	4017,6,c	;volatile
 11580                           
 11581                           ; BSR set to: 0
 11582  002156  B6B1               	btfsc	4017,3,c	;volatile
 11583  002158  D005               	goto	l1107
 11584                           
 11585                           ; BSR set to: 0
 11586  00215A  94CA               	bcf	4042,2,c	;volatile
 11587                           
 11588                           ; BSR set to: 0
 11589  00215C  C0CE  FFCB         	movff	OpenPWM5@period,4043	;volatile
 11590                           
 11591                           ; BSR set to: 0
 11592  002160  84CA               	bsf	4042,2,c	;volatile
 11593  002162  D005               	goto	l6131
 11594  002164                     l1107:
 11595                           
 11596                           ; BSR set to: 0
 11597  002164  9476               	bcf	3958,2,c	;volatile
 11598                           
 11599                           ; BSR set to: 0
 11600  002166  C0CE  FF77         	movff	OpenPWM5@period,3959	;volatile
 11601                           
 11602                           ; BSR set to: 0
 11603  00216A  8476               	bsf	3958,2,c	;volatile
 11604  00216C  D000               	goto	l6131
 11605  00216E                     l6131:
 11606                           
 11607                           ; BSR set to: 0
 11608  00216E  9898               	bcf	3992,4,c	;volatile
 11609                           
 11610                           ; BSR set to: 0
 11611  002170  0012               	return		;funcret
 11612  002172                     __end_of_OpenPWM5:
 11613                           	opt stack 0
 11614                           prodh	equ	0xFF4
 11615                           prodl	equ	0xFF3
 11616                           intcon	equ	0xFF2
 11617                           intcon2	equ	0xFF1
 11618                           intcon3	equ	0xFF0
 11619                           postinc0	equ	0xFEE
 11620                           wreg	equ	0xFE8
 11621                           postinc1	equ	0xFE6
 11622                           fsr1h	equ	0xFE2
 11623                           fsr1l	equ	0xFE1
 11624                           indf2	equ	0xFDF
 11625                           postinc2	equ	0xFDE
 11626                           postdec2	equ	0xFDD
 11627                           fsr2h	equ	0xFDA
 11628                           fsr2l	equ	0xFD9
 11629                           status	equ	0xFD8
 11630                           
 11631 ;; *************** function _OpenPWM4 *****************
 11632 ;; Defined at:
 11633 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\pw4open.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  period          1    wreg     unsigned char 
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;  period          1   16[BANK0 ] unsigned char 
 11638 ;; Return value:  Size  Location     Type
 11639 ;;		None               void
 11640 ;; Registers used:
 11641 ;;		wreg, status,2
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;Total ram usage:        1 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    7
 11654 ;; This function calls:
 11655 ;;		Nothing
 11656 ;; This function is called by:
 11657 ;;		_ConfigurePWM
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text94
 11662  002172                     __ptext94:
 11663                           	opt stack 0
 11664  002172                     _OpenPWM4:
 11665                           	opt stack 22
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;incstack = 0
 11669                           ;OpenPWM4@period stored from wreg
 11670  002172  0100               	movlb	0	; () banked
 11671  002174  6FCE               	movwf	OpenPWM4@period& (0+255),b
 11672                           
 11673                           ; BSR set to: 0
 11674  002176  0E0C               	movlw	12
 11675  002178  6E73               	movwf	3955,c	;volatile
 11676                           
 11677                           ; BSR set to: 0
 11678  00217A  9698               	bcf	3992,3,c	;volatile
 11679                           
 11680                           ; BSR set to: 0
 11681  00217C  ACB1               	btfss	4017,6,c	;volatile
 11682                           
 11683                           ; BSR set to: 0
 11684  00217E  B6B1               	btfsc	4017,3,c	;volatile
 11685  002180  D005               	goto	l1081
 11686                           
 11687                           ; BSR set to: 0
 11688  002182  94CA               	bcf	4042,2,c	;volatile
 11689                           
 11690                           ; BSR set to: 0
 11691  002184  C0CE  FFCB         	movff	OpenPWM4@period,4043	;volatile
 11692                           
 11693                           ; BSR set to: 0
 11694  002188  84CA               	bsf	4042,2,c	;volatile
 11695  00218A  D005               	goto	l1083
 11696  00218C                     l1081:
 11697                           
 11698                           ; BSR set to: 0
 11699  00218C  9476               	bcf	3958,2,c	;volatile
 11700                           
 11701                           ; BSR set to: 0
 11702  00218E  C0CE  FF77         	movff	OpenPWM4@period,3959	;volatile
 11703                           
 11704                           ; BSR set to: 0
 11705  002192  8476               	bsf	3958,2,c	;volatile
 11706  002194  D000               	goto	l1083
 11707  002196                     l1083:
 11708                           
 11709                           ; BSR set to: 0
 11710  002196  0012               	return		;funcret
 11711  002198                     __end_of_OpenPWM4:
 11712                           	opt stack 0
 11713                           prodh	equ	0xFF4
 11714                           prodl	equ	0xFF3
 11715                           intcon	equ	0xFF2
 11716                           intcon2	equ	0xFF1
 11717                           intcon3	equ	0xFF0
 11718                           postinc0	equ	0xFEE
 11719                           wreg	equ	0xFE8
 11720                           postinc1	equ	0xFE6
 11721                           fsr1h	equ	0xFE2
 11722                           fsr1l	equ	0xFE1
 11723                           indf2	equ	0xFDF
 11724                           postinc2	equ	0xFDE
 11725                           postdec2	equ	0xFDD
 11726                           fsr2h	equ	0xFDA
 11727                           fsr2l	equ	0xFD9
 11728                           status	equ	0xFD8
 11729                           
 11730 ;; *************** function _ConfigureInterrupts *****************
 11731 ;; Defined at:
 11732 ;;		line 57 in file "FastBuggy17_Main_Code_TUNING.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;		None               void
 11739 ;; Registers used:
 11740 ;;		None
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11750 ;;Total ram usage:        0 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:    7
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_main
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text95
 11761  0020D8                     __ptext95:
 11762                           	opt stack 0
 11763  0020D8                     _ConfigureInterrupts:
 11764                           	opt stack 23
 11765                           
 11766                           ;FastBuggy17_Main_Code_TUNING.c: 59: INTCONbits.GIE = 1;
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;incstack = 0
 11770  0020D8  8EF2               	bsf	intcon,7,c	;volatile
 11771                           
 11772                           ;FastBuggy17_Main_Code_TUNING.c: 60: INTCONbits.PEIE = 1;
 11773  0020DA  8CF2               	bsf	intcon,6,c	;volatile
 11774                           
 11775                           ;FastBuggy17_Main_Code_TUNING.c: 61: RCONbits.IPEN = 1;
 11776  0020DC  8ED0               	bsf	4048,7,c	;volatile
 11777                           
 11778                           ;FastBuggy17_Main_Code_TUNING.c: 83: INTCON3bits.INT3IE = 0;
 11779  0020DE  9AF0               	bcf	intcon3,5,c	;volatile
 11780                           
 11781                           ;FastBuggy17_Main_Code_TUNING.c: 84: INTCON3bits.INT3IF = 0;
 11782  0020E0  94F0               	bcf	intcon3,2,c	;volatile
 11783                           
 11784                           ;FastBuggy17_Main_Code_TUNING.c: 85: INTCON2bits.INTEDG3 = 1;
 11785  0020E2  86F1               	bsf	intcon2,3,c	;volatile
 11786                           
 11787                           ;FastBuggy17_Main_Code_TUNING.c: 86: INTCON2bits.INT3IP = 1;
 11788  0020E4  82F1               	bsf	intcon2,1,c	;volatile
 11789                           
 11790                           ;FastBuggy17_Main_Code_TUNING.c: 89: INTCONbits.TMR0IE = 1;
 11791  0020E6  8AF2               	bsf	intcon,5,c	;volatile
 11792                           
 11793                           ;FastBuggy17_Main_Code_TUNING.c: 90: INTCONbits.TMR0IF = 0;
 11794  0020E8  94F2               	bcf	intcon,2,c	;volatile
 11795                           
 11796                           ;FastBuggy17_Main_Code_TUNING.c: 91: INTCON2bits.TMR0IP = 1;
 11797  0020EA  84F1               	bsf	intcon2,2,c	;volatile
 11798                           
 11799                           ;FastBuggy17_Main_Code_TUNING.c: 100: PIE1bits.ADIE = 0;
 11800  0020EC  9C9D               	bcf	3997,6,c	;volatile
 11801                           
 11802                           ;FastBuggy17_Main_Code_TUNING.c: 101: PIR1bits.ADIF = 0;
 11803  0020EE  9C9E               	bcf	3998,6,c	;volatile
 11804                           
 11805                           ;FastBuggy17_Main_Code_TUNING.c: 102: IPR1bits.ADIP = 0;
 11806  0020F0  9C9F               	bcf	3999,6,c	;volatile
 11807                           
 11808                           ;FastBuggy17_Main_Code_TUNING.c: 105: PIE1bits.RC1IE = 0;
 11809  0020F2  9A9D               	bcf	3997,5,c	;volatile
 11810                           
 11811                           ;FastBuggy17_Main_Code_TUNING.c: 106: PIE1bits.TX1IE = 0;
 11812  0020F4  989D               	bcf	3997,4,c	;volatile
 11813                           
 11814                           ;FastBuggy17_Main_Code_TUNING.c: 107: PIR1bits.RC1IF = 0;
 11815  0020F6  9A9E               	bcf	3998,5,c	;volatile
 11816                           
 11817                           ;FastBuggy17_Main_Code_TUNING.c: 108: PIR1bits.TX1IF = 0;
 11818  0020F8  989E               	bcf	3998,4,c	;volatile
 11819                           
 11820                           ;FastBuggy17_Main_Code_TUNING.c: 109: IPR1bits.RC1IP = 0;
 11821  0020FA  9A9F               	bcf	3999,5,c	;volatile
 11822                           
 11823                           ;FastBuggy17_Main_Code_TUNING.c: 110: IPR1bits.TX1IP = 0;
 11824  0020FC  989F               	bcf	3999,4,c	;volatile
 11825  0020FE  0012               	return		;funcret
 11826  002100                     __end_of_ConfigureInterrupts:
 11827                           	opt stack 0
 11828                           prodh	equ	0xFF4
 11829                           prodl	equ	0xFF3
 11830                           intcon	equ	0xFF2
 11831                           intcon2	equ	0xFF1
 11832                           intcon3	equ	0xFF0
 11833                           postinc0	equ	0xFEE
 11834                           wreg	equ	0xFE8
 11835                           postinc1	equ	0xFE6
 11836                           fsr1h	equ	0xFE2
 11837                           fsr1l	equ	0xFE1
 11838                           indf2	equ	0xFDF
 11839                           postinc2	equ	0xFDE
 11840                           postdec2	equ	0xFDD
 11841                           fsr2h	equ	0xFDA
 11842                           fsr2l	equ	0xFD9
 11843                           status	equ	0xFD8
 11844                           
 11845 ;; *************** function _ConfigureBuggyIO *****************
 11846 ;; Defined at:
 11847 ;;		line 188 in file "FastBuggy17_Main_Code_TUNING.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;		None
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;		None
 11852 ;; Return value:  Size  Location     Type
 11853 ;;		None               void
 11854 ;; Registers used:
 11855 ;;		wreg, status,2
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;Total ram usage:        0 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:    7
 11868 ;; This function calls:
 11869 ;;		Nothing
 11870 ;; This function is called by:
 11871 ;;		_main
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text96
 11876  002272                     __ptext96:
 11877                           	opt stack 0
 11878  002272                     _ConfigureBuggyIO:
 11879                           	opt stack 23
 11880                           
 11881                           ;FastBuggy17_Main_Code_TUNING.c: 191: TRISA = 0xFF;
 11882                           
 11883                           ;incstack = 0
 11884  002272  6892               	setf	3986,c	;volatile
 11885                           
 11886                           ;FastBuggy17_Main_Code_TUNING.c: 194: TRISB = 0xFF;
 11887  002274  6893               	setf	3987,c	;volatile
 11888                           
 11889                           ;FastBuggy17_Main_Code_TUNING.c: 197: TRISC = 0x9F;
 11890  002276  0E9F               	movlw	159
 11891  002278  6E94               	movwf	3988,c	;volatile
 11892                           
 11893                           ;FastBuggy17_Main_Code_TUNING.c: 200: TRISD = 0xE0;
 11894  00227A  0EE0               	movlw	224
 11895  00227C  6E95               	movwf	3989,c	;volatile
 11896                           
 11897                           ;FastBuggy17_Main_Code_TUNING.c: 203: TRISE = 0x00;
 11898  00227E  0E00               	movlw	0
 11899  002280  6E96               	movwf	3990,c	;volatile
 11900                           
 11901                           ;FastBuggy17_Main_Code_TUNING.c: 206: TRISG = 0xE7;
 11902  002282  0EE7               	movlw	231
 11903  002284  6E98               	movwf	3992,c	;volatile
 11904                           
 11905                           ;FastBuggy17_Main_Code_TUNING.c: 209: TRISJ = 0x00;
 11906  002286  0E00               	movlw	0
 11907  002288  6E9A               	movwf	3994,c	;volatile
 11908  00228A  0012               	return		;funcret
 11909  00228C                     __end_of_ConfigureBuggyIO:
 11910                           	opt stack 0
 11911                           prodh	equ	0xFF4
 11912                           prodl	equ	0xFF3
 11913                           intcon	equ	0xFF2
 11914                           intcon2	equ	0xFF1
 11915                           intcon3	equ	0xFF0
 11916                           postinc0	equ	0xFEE
 11917                           wreg	equ	0xFE8
 11918                           postinc1	equ	0xFE6
 11919                           fsr1h	equ	0xFE2
 11920                           fsr1l	equ	0xFE1
 11921                           indf2	equ	0xFDF
 11922                           postinc2	equ	0xFDE
 11923                           postdec2	equ	0xFDD
 11924                           fsr2h	equ	0xFDA
 11925                           fsr2l	equ	0xFD9
 11926                           status	equ	0xFD8
 11927                           
 11928 ;; *************** function _ConfigureADC *****************
 11929 ;; Defined at:
 11930 ;;		line 214 in file "FastBuggy17_Main_Code_TUNING.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;		None               void
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    8
 11951 ;; This function calls:
 11952 ;;		_OpenADC
 11953 ;; This function is called by:
 11954 ;;		_main
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text97
 11959  002326                     __ptext97:
 11960                           	opt stack 0
 11961  002326                     _ConfigureADC:
 11962                           	opt stack 22
 11963                           
 11964                           ;FastBuggy17_Main_Code_TUNING.c: 216: OpenADC(0b10011111
 11965                           ;FastBuggy17_Main_Code_TUNING.c: 217: & 0b11111111
 11966                           ;FastBuggy17_Main_Code_TUNING.c: 218: & 0b11110101,
 11967                           ;FastBuggy17_Main_Code_TUNING.c: 219: 0b10000111
 11968                           ;FastBuggy17_Main_Code_TUNING.c: 220: & 0b01111111
 11969                           ;FastBuggy17_Main_Code_TUNING.c: 221: & 0b11111110
 11970                           ;FastBuggy17_Main_Code_TUNING.c: 222: & 0b11111101,
 11971                           ;FastBuggy17_Main_Code_TUNING.c: 223: 9);
 11972                           
 11973                           ;incstack = 0
 11974  002326  0E04               	movlw	4
 11975  002328  0100               	movlb	0	; () banked
 11976  00232A  6FCE               	movwf	OpenADC@config2& (0+255),b
 11977  00232C  0E09               	movlw	9
 11978  00232E  0100               	movlb	0	; () banked
 11979  002330  6FCF               	movwf	OpenADC@portconfig& (0+255),b
 11980  002332  0E95               	movlw	149
 11981  002334  EC02  F00B         	call	_OpenADC
 11982  002338  0012               	return		;funcret
 11983  00233A                     __end_of_ConfigureADC:
 11984                           	opt stack 0
 11985                           prodh	equ	0xFF4
 11986                           prodl	equ	0xFF3
 11987                           intcon	equ	0xFF2
 11988                           intcon2	equ	0xFF1
 11989                           intcon3	equ	0xFF0
 11990                           postinc0	equ	0xFEE
 11991                           wreg	equ	0xFE8
 11992                           postinc1	equ	0xFE6
 11993                           fsr1h	equ	0xFE2
 11994                           fsr1l	equ	0xFE1
 11995                           indf2	equ	0xFDF
 11996                           postinc2	equ	0xFDE
 11997                           postdec2	equ	0xFDD
 11998                           fsr2h	equ	0xFDA
 11999                           fsr2l	equ	0xFD9
 12000                           status	equ	0xFD8
 12001                           
 12002 ;; *************** function _OpenADC *****************
 12003 ;; Defined at:
 12004 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  config          1    wreg     unsigned char 
 12007 ;;  config2         1   16[BANK0 ] unsigned char 
 12008 ;;  portconfig      1   17[BANK0 ] unsigned char 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  config          1   20[BANK0 ] unsigned char 
 12011 ;; Return value:  Size  Location     Type
 12012 ;;		None               void
 12013 ;; Registers used:
 12014 ;;		wreg, status,2, status,0
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12023 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12024 ;;Total ram usage:        5 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    7
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_ConfigureADC
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text98
 12035  001604                     __ptext98:
 12036                           	opt stack 0
 12037  001604                     _OpenADC:
 12038                           	opt stack 22
 12039                           
 12040                           ;incstack = 0
 12041                           ;OpenADC@config stored from wreg
 12042  001604  0100               	movlb	0	; () banked
 12043  001606  6FD2               	movwf	OpenADC@config& (0+255),b
 12044                           
 12045                           ; BSR set to: 0
 12046  001608  0E00               	movlw	0
 12047  00160A  6EC2               	movwf	4034,c	;volatile
 12048  00160C  0E00               	movlw	0
 12049  00160E  6EC0               	movwf	4032,c	;volatile
 12050                           
 12051                           ; BSR set to: 0
 12052  001610  0100               	movlb	0	; () banked
 12053  001612  90D8               	bcf	status,0,c
 12054  001614  31CE               	rrcf	OpenADC@config2& (0+255),w,b
 12055  001616  0B3C               	andlw	60
 12056  001618  6EC2               	movwf	4034,c	;volatile
 12057                           
 12058                           ; BSR set to: 0
 12059  00161A  C0CE  F0D0         	movff	OpenADC@config2,??_OpenADC
 12060  00161E  0100               	movlb	0	; () banked
 12061  001620  3BD0               	swapf	??_OpenADC& (0+255),f,b
 12062  001622  0EF0               	movlw	240
 12063  001624  17D0               	andwf	??_OpenADC& (0+255),f,b
 12064  001626  0E30               	movlw	48
 12065  001628  0100               	movlb	0	; () banked
 12066  00162A  17D0               	andwf	??_OpenADC& (0+255),f,b
 12067  00162C  0100               	movlb	0	; () banked
 12068  00162E  51CF               	movf	OpenADC@portconfig& (0+255),w,b
 12069  001630  0B0F               	andlw	15
 12070  001632  0100               	movlb	0	; () banked
 12071  001634  11D0               	iorwf	??_OpenADC& (0+255),w,b
 12072  001636  6EC1               	movwf	4033,c	;volatile
 12073                           
 12074                           ; BSR set to: 0
 12075  001638  C0D2  F0D0         	movff	OpenADC@config,??_OpenADC
 12076  00163C  0100               	movlb	0	; () banked
 12077  00163E  90D8               	bcf	status,0,c
 12078  001640  37D0               	rlcf	??_OpenADC& (0+255),f,b
 12079  001642  0100               	movlb	0	; () banked
 12080  001644  90D8               	bcf	status,0,c
 12081  001646  37D0               	rlcf	??_OpenADC& (0+255),f,b
 12082  001648  0E38               	movlw	56
 12083  00164A  0100               	movlb	0	; () banked
 12084  00164C  17D0               	andwf	??_OpenADC& (0+255),f,b
 12085  00164E  C0D2  F0D1         	movff	OpenADC@config,??_OpenADC+1
 12086  001652  0100               	movlb	0	; () banked
 12087  001654  3BD1               	swapf	(??_OpenADC+1)& (0+255),f,b
 12088  001656  0E0F               	movlw	15
 12089  001658  17D1               	andwf	(??_OpenADC+1)& (0+255),f,b
 12090  00165A  0E07               	movlw	7
 12091  00165C  0100               	movlb	0	; () banked
 12092  00165E  17D1               	andwf	(??_OpenADC+1)& (0+255),f,b
 12093  001660  0100               	movlb	0	; () banked
 12094  001662  51D2               	movf	OpenADC@config& (0+255),w,b
 12095  001664  0B80               	andlw	128
 12096  001666  0100               	movlb	0	; () banked
 12097  001668  11D1               	iorwf	(??_OpenADC+1)& (0+255),w,b
 12098  00166A  0100               	movlb	0	; () banked
 12099  00166C  11D0               	iorwf	??_OpenADC& (0+255),w,b
 12100  00166E  6EC0               	movwf	4032,c	;volatile
 12101                           
 12102                           ; BSR set to: 0
 12103  001670  0100               	movlb	0	; () banked
 12104  001672  AFCE               	btfss	OpenADC@config2& (0+255),7,b
 12105  001674  D003               	goto	l1051
 12106                           
 12107                           ; BSR set to: 0
 12108  001676  9C9E               	bcf	3998,6,c	;volatile
 12109  001678  8C9D               	bsf	3997,6,c	;volatile
 12110  00167A  8CF2               	bsf	intcon,6,c	;volatile
 12111  00167C                     l1051:
 12112                           
 12113                           ; BSR set to: 0
 12114  00167C  80C2               	bsf	4034,0,c	;volatile
 12115                           
 12116                           ; BSR set to: 0
 12117  00167E  0012               	return		;funcret
 12118  001680                     __end_of_OpenADC:
 12119                           	opt stack 0
 12120                           prodh	equ	0xFF4
 12121                           prodl	equ	0xFF3
 12122                           intcon	equ	0xFF2
 12123                           intcon2	equ	0xFF1
 12124                           intcon3	equ	0xFF0
 12125                           postinc0	equ	0xFEE
 12126                           wreg	equ	0xFE8
 12127                           postinc1	equ	0xFE6
 12128                           fsr1h	equ	0xFE2
 12129                           fsr1l	equ	0xFE1
 12130                           indf2	equ	0xFDF
 12131                           postinc2	equ	0xFDE
 12132                           postdec2	equ	0xFDD
 12133                           fsr2h	equ	0xFDA
 12134                           fsr2l	equ	0xFD9
 12135                           status	equ	0xFD8
 12136                           
 12137 ;; *************** function _CalculateSensorSumDiscrete *****************
 12138 ;; Defined at:
 12139 ;;		line 356 in file "FastBuggy17_Main_Code_TUNING.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  sensor_statu    2   16[BANK0 ] PTR const unsigned char 
 12142 ;;		 -> sensor_statuses(5), 
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  index           1   19[BANK0 ] unsigned char 
 12145 ;;  sum             1   18[BANK0 ] unsigned char 
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      unsigned char 
 12148 ;; Registers used:
 12149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12158 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12159 ;;Total ram usage:        4 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:    7
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_main
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           	psect	text99
 12170  001CCC                     __ptext99:
 12171                           	opt stack 0
 12172  001CCC                     _CalculateSensorSumDiscrete:
 12173                           	opt stack 23
 12174                           
 12175                           ;FastBuggy17_Main_Code_TUNING.c: 357: unsigned char index, sum = 0;
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;incstack = 0
 12179  001CCC  0E00               	movlw	0
 12180  001CCE  0100               	movlb	0	; () banked
 12181  001CD0  6FD0               	movwf	CalculateSensorSumDiscrete@sum& (0+255),b
 12182                           
 12183                           ;FastBuggy17_Main_Code_TUNING.c: 359: for(index = 0; index < 5; index++) {
 12184  001CD2  0E00               	movlw	0
 12185  001CD4  0100               	movlb	0	; () banked
 12186  001CD6  6FD1               	movwf	CalculateSensorSumDiscrete@index& (0+255),b
 12187  001CD8                     l6473:
 12188                           
 12189                           ; BSR set to: 0
 12190  001CD8  0E04               	movlw	4
 12191  001CDA  0100               	movlb	0	; () banked
 12192  001CDC  65D1               	cpfsgt	CalculateSensorSumDiscrete@index& (0+255),b
 12193  001CDE  D001               	goto	l6477
 12194                           
 12195                           ; BSR set to: 0
 12196  001CE0  D011               	goto	l6483
 12197  001CE2                     l6477:
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;FastBuggy17_Main_Code_TUNING.c: 361: sum += *(sensor_statuses + index);
 12201  001CE2  0100               	movlb	0	; () banked
 12202  001CE4  51D1               	movf	CalculateSensorSumDiscrete@index& (0+255),w,b
 12203  001CE6  0D01               	mullw	1
 12204  001CE8  50F3               	movf	prodl,w,c
 12205  001CEA  0100               	movlb	0	; () banked
 12206  001CEC  25CE               	addwf	CalculateSensorSumDiscrete@sensor_statuses& (0+255),w,b
 12207  001CEE  6ED9               	movwf	fsr2l,c
 12208  001CF0  50F4               	movf	prodh,w,c
 12209  001CF2  0100               	movlb	0	; () banked
 12210  001CF4  21CF               	addwfc	(CalculateSensorSumDiscrete@sensor_statuses+1)& (0+255),w,b
 12211  001CF6  6EDA               	movwf	fsr2h,c
 12212  001CF8  50DF               	movf	indf2,w,c
 12213  001CFA  0100               	movlb	0	; () banked
 12214  001CFC  27D0               	addwf	CalculateSensorSumDiscrete@sum& (0+255),f,b
 12215                           
 12216                           ; BSR set to: 0
 12217  001CFE  0100               	movlb	0	; () banked
 12218  001D00  2BD1               	incf	CalculateSensorSumDiscrete@index& (0+255),f,b
 12219  001D02  D7EA               	goto	l6473
 12220  001D04                     l6483:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;FastBuggy17_Main_Code_TUNING.c: 363: }
 12224                           ;FastBuggy17_Main_Code_TUNING.c: 365: return(sum);
 12225  001D04  0100               	movlb	0	; () banked
 12226  001D06  51D0               	movf	CalculateSensorSumDiscrete@sum& (0+255),w,b
 12227  001D08  D000               	goto	l826
 12228  001D0A                     l826:
 12229                           
 12230                           ; BSR set to: 0
 12231  001D0A  0012               	return		;funcret
 12232  001D0C                     __end_of_CalculateSensorSumDiscrete:
 12233                           	opt stack 0
 12234                           prodh	equ	0xFF4
 12235                           prodl	equ	0xFF3
 12236                           intcon	equ	0xFF2
 12237                           intcon2	equ	0xFF1
 12238                           intcon3	equ	0xFF0
 12239                           postinc0	equ	0xFEE
 12240                           wreg	equ	0xFE8
 12241                           postinc1	equ	0xFE6
 12242                           fsr1h	equ	0xFE2
 12243                           fsr1l	equ	0xFE1
 12244                           indf2	equ	0xFDF
 12245                           postinc2	equ	0xFDE
 12246                           postdec2	equ	0xFDD
 12247                           fsr2h	equ	0xFDA
 12248                           fsr2l	equ	0xFD9
 12249                           status	equ	0xFD8
 12250                           
 12251 ;; *************** function _BusyDistanceAcq *****************
 12252 ;; Defined at:
 12253 ;;		line 64 in file "Ultrasound.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      unsigned char 
 12260 ;; Registers used:
 12261 ;;		wreg, status,2
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:    7
 12274 ;; This function calls:
 12275 ;;		Nothing
 12276 ;; This function is called by:
 12277 ;;		_main
 12278 ;; This function uses a non-reentrant model
 12279 ;;
 12280                           
 12281                           	psect	text100
 12282  0023E6                     __ptext100:
 12283                           	opt stack 0
 12284  0023E6                     _BusyDistanceAcq:
 12285                           	opt stack 23
 12286                           
 12287                           ;Ultrasound.c: 66: return (!echo_acq_done);
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;incstack = 0
 12291  0023E6  501C               	movf	_echo_acq_done,w,c
 12292  0023E8  A4D8               	btfss	status,2,c
 12293  0023EA  D002               	goto	u5310
 12294  0023EC  0E01               	movlw	1
 12295  0023EE  D002               	goto	l36
 12296  0023F0                     u5310:
 12297  0023F0  0E00               	movlw	0
 12298  0023F2  D000               	goto	l36
 12299  0023F4                     l36:
 12300  0023F4  0012               	return		;funcret
 12301  0023F6                     __end_of_BusyDistanceAcq:
 12302                           	opt stack 0
 12303                           prodh	equ	0xFF4
 12304                           prodl	equ	0xFF3
 12305                           intcon	equ	0xFF2
 12306                           intcon2	equ	0xFF1
 12307                           intcon3	equ	0xFF0
 12308                           postinc0	equ	0xFEE
 12309                           wreg	equ	0xFE8
 12310                           postinc1	equ	0xFE6
 12311                           fsr1h	equ	0xFE2
 12312                           fsr1l	equ	0xFE1
 12313                           indf2	equ	0xFDF
 12314                           postinc2	equ	0xFDE
 12315                           postdec2	equ	0xFDD
 12316                           fsr2h	equ	0xFDA
 12317                           fsr2l	equ	0xFD9
 12318                           status	equ	0xFD8
 12319                           
 12320 ;; *************** function _isrLP *****************
 12321 ;; Defined at:
 12322 ;;		line 662 in file "FastBuggy17_Main_Code_TUNING.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;		None
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;		None               void
 12329 ;; Registers used:
 12330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;Total ram usage:       17 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:    6
 12343 ;; This function calls:
 12344 ;;		_WirelessTx_ISR
 12345 ;;		i1_ConvertADC
 12346 ;;		i1_ReadADC
 12347 ;;		i1_SetADCChannel
 12348 ;; This function is called by:
 12349 ;;		Interrupt level 1
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	intcodelo
 12354  000018                     __pintcodelo:
 12355                           	opt stack 0
 12356  000018                     _isrLP:
 12357                           	opt stack 18
 12358                           
 12359                           ;incstack = 0
 12360  000018  CFD8 F033          	movff	status,??_isrLP
 12361  00001C  CFE8 F034          	movff	wreg,??_isrLP+1
 12362  000020  CFE0 F035          	movff	bsr,??_isrLP+2
 12363  000024  CFFA F036          	movff	pclath,??_isrLP+3
 12364  000028  CFFB F037          	movff	pclatu,??_isrLP+4
 12365  00002C  CFE9 F038          	movff	fsr0l,??_isrLP+5
 12366  000030  CFEA F039          	movff	fsr0h,??_isrLP+6
 12367  000034  CFE1 F03A          	movff	fsr1l,??_isrLP+7
 12368  000038  CFE2 F03B          	movff	fsr1h,??_isrLP+8
 12369  00003C  CFD9 F03C          	movff	fsr2l,??_isrLP+9
 12370  000040  CFDA F03D          	movff	fsr2h,??_isrLP+10
 12371  000044  CFF3 F03E          	movff	prodl,??_isrLP+11
 12372  000048  CFF4 F03F          	movff	prodh,??_isrLP+12
 12373  00004C  CFF6 F040          	movff	tblptrl,??_isrLP+13
 12374  000050  CFF7 F041          	movff	tblptrh,??_isrLP+14
 12375  000054  CFF8 F042          	movff	tblptru,??_isrLP+15
 12376  000058  CFF5 F043          	movff	tablat,??_isrLP+16
 12377                           
 12378                           ;FastBuggy17_Main_Code_TUNING.c: 665: if (PIR1bits.ADIF == 1) {
 12379  00005C  AC9E               	btfss	3998,6,c	;volatile
 12380  00005E  D01D               	goto	i1l952
 12381                           
 12382                           ;FastBuggy17_Main_Code_TUNING.c: 666: PIR1bits.ADIF = 0;
 12383  000060  9C9E               	bcf	3998,6,c	;volatile
 12384                           
 12385                           ;FastBuggy17_Main_Code_TUNING.c: 667: if (sensor_acq_index < 5) {
 12386  000062  0E05               	movlw	5
 12387  000064  6023               	cpfslt	_sensor_acq_index,c	;volatile
 12388  000066  D015               	goto	i1l5113
 12389                           
 12390                           ;FastBuggy17_Main_Code_TUNING.c: 668: *(sensor_readings_raw + sensor_acq_index) = ReadAD
      +                          C();
 12391  000068  ECFB  F011         	call	i1_ReadADC	;wreg free
 12392  00006C  5023               	movf	_sensor_acq_index,w,c	;volatile
 12393  00006E  0D02               	mullw	2
 12394  000070  0EAE               	movlw	low _sensor_readings_raw
 12395  000072  24F3               	addwf	prodl,w,c
 12396  000074  6ED9               	movwf	fsr2l,c
 12397  000076  0E00               	movlw	high _sensor_readings_raw
 12398  000078  20F4               	addwfc	prodh,w,c
 12399  00007A  6EDA               	movwf	fsr2h,c
 12400  00007C  C02B  FFDE         	movff	?i1_ReadADC,postinc2
 12401  000080  C02C  FFDD         	movff	?i1_ReadADC+1,postdec2
 12402                           
 12403                           ;FastBuggy17_Main_Code_TUNING.c: 669: sensor_acq_index++;
 12404  000084  2A23               	incf	_sensor_acq_index,f,c	;volatile
 12405                           
 12406                           ;FastBuggy17_Main_Code_TUNING.c: 670: SetADCChannel(sensor_acq_index);
 12407  000086  5023               	movf	_sensor_acq_index,w,c	;volatile
 12408  000088  ECD5  F006         	call	i1_SetADCChannel
 12409                           
 12410                           ;FastBuggy17_Main_Code_TUNING.c: 671: ConvertADC();
 12411  00008C  EC6D  F012         	call	i1_ConvertADC	;wreg free
 12412                           
 12413                           ;FastBuggy17_Main_Code_TUNING.c: 672: } else {
 12414  000090  D00A               	goto	i1l957
 12415  000092                     i1l5113:
 12416                           
 12417                           ;FastBuggy17_Main_Code_TUNING.c: 673: sensor_acq_done = 1;
 12418  000092  0E01               	movlw	1
 12419  000094  6E22               	movwf	_sensor_acq_done,c	;volatile
 12420                           
 12421                           ;FastBuggy17_Main_Code_TUNING.c: 674: PIE1bits.ADIE = 0;
 12422  000096  9C9D               	bcf	3997,6,c	;volatile
 12423                           
 12424                           ;FastBuggy17_Main_Code_TUNING.c: 675: }
 12425                           ;FastBuggy17_Main_Code_TUNING.c: 676: }
 12426  000098  D006               	goto	i1l957
 12427  00009A                     i1l952:
 12428                           
 12429                           ;FastBuggy17_Main_Code_TUNING.c: 678: else if(PIR1bits.TX1IF == 1) {
 12430  00009A  A89E               	btfss	3998,4,c	;volatile
 12431  00009C  D004               	goto	i1l957
 12432                           
 12433                           ;FastBuggy17_Main_Code_TUNING.c: 679: PIR1bits.TX1IF = 0;
 12434  00009E  989E               	bcf	3998,4,c	;volatile
 12435                           
 12436                           ;FastBuggy17_Main_Code_TUNING.c: 680: WirelessTx_ISR();
 12437  0000A0  ECCC  F010         	call	_WirelessTx_ISR	;wreg free
 12438  0000A4  D000               	goto	i1l957
 12439  0000A6                     i1l957:
 12440  0000A6  C043  FFF5         	movff	??_isrLP+16,tablat
 12441  0000AA  C042  FFF8         	movff	??_isrLP+15,tblptru
 12442  0000AE  C041  FFF7         	movff	??_isrLP+14,tblptrh
 12443  0000B2  C040  FFF6         	movff	??_isrLP+13,tblptrl
 12444  0000B6  C03F  FFF4         	movff	??_isrLP+12,prodh
 12445  0000BA  C03E  FFF3         	movff	??_isrLP+11,prodl
 12446  0000BE  C03D  FFDA         	movff	??_isrLP+10,fsr2h
 12447  0000C2  C03C  FFD9         	movff	??_isrLP+9,fsr2l
 12448  0000C6  C03B  FFE2         	movff	??_isrLP+8,fsr1h
 12449  0000CA  C03A  FFE1         	movff	??_isrLP+7,fsr1l
 12450  0000CE  C039  FFEA         	movff	??_isrLP+6,fsr0h
 12451  0000D2  C038  FFE9         	movff	??_isrLP+5,fsr0l
 12452  0000D6  C037  FFFB         	movff	??_isrLP+4,pclatu
 12453  0000DA  C036  FFFA         	movff	??_isrLP+3,pclath
 12454  0000DE  C035  FFE0         	movff	??_isrLP+2,bsr
 12455  0000E2  C034  FFE8         	movff	??_isrLP+1,wreg
 12456  0000E6  C033  FFD8         	movff	??_isrLP,status
 12457  0000EA  0010               	retfie	
 12458  0000EC                     __end_of_isrLP:
 12459                           	opt stack 0
 12460                           pclatu	equ	0xFFB
 12461                           pclath	equ	0xFFA
 12462                           tblptru	equ	0xFF8
 12463                           tblptrh	equ	0xFF7
 12464                           tblptrl	equ	0xFF6
 12465                           tablat	equ	0xFF5
 12466                           prodh	equ	0xFF4
 12467                           prodl	equ	0xFF3
 12468                           intcon	equ	0xFF2
 12469                           intcon2	equ	0xFF1
 12470                           intcon3	equ	0xFF0
 12471                           postinc0	equ	0xFEE
 12472                           fsr0h	equ	0xFEA
 12473                           fsr0l	equ	0xFE9
 12474                           wreg	equ	0xFE8
 12475                           postinc1	equ	0xFE6
 12476                           fsr1h	equ	0xFE2
 12477                           fsr1l	equ	0xFE1
 12478                           bsr	equ	0xFE0
 12479                           indf2	equ	0xFDF
 12480                           postinc2	equ	0xFDE
 12481                           postdec2	equ	0xFDD
 12482                           fsr2h	equ	0xFDA
 12483                           fsr2l	equ	0xFD9
 12484                           status	equ	0xFD8
 12485                           
 12486 ;; *************** function i1_SetADCChannel *****************
 12487 ;; Defined at:
 12488 ;;		line 228 in file "FastBuggy17_Main_Code_TUNING.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  channel         1    wreg     unsigned char 
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;  channel         1    2[COMRAM] unsigned char 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;		None               void
 12495 ;; Registers used:
 12496 ;;		wreg, status,2, status,0, cstack
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;Total ram usage:        1 bytes
 12507 ;; Hardware stack levels used:    1
 12508 ;; Hardware stack levels required when called:    4
 12509 ;; This function calls:
 12510 ;;		i1_SetChanADC
 12511 ;; This function is called by:
 12512 ;;		_isrLP
 12513 ;; This function uses a non-reentrant model
 12514 ;;
 12515                           
 12516                           	psect	text102
 12517  000DAA                     __ptext102:
 12518                           	opt stack 0
 12519  000DAA                     i1_SetADCChannel:
 12520                           	opt stack 19
 12521                           
 12522                           ;incstack = 0
 12523                           ;i1SetADCChannel@channel stored from wreg
 12524  000DAA  6E2D               	movwf	i1SetADCChannel@channel,c
 12525                           
 12526                           ;FastBuggy17_Main_Code_TUNING.c: 230: switch (channel) {
 12527  000DAC  D040               	goto	i1l4913
 12528  000DAE                     i1l4879:
 12529                           
 12530                           ;FastBuggy17_Main_Code_TUNING.c: 232: SetChanADC(0b10000111);
 12531  000DAE  0E87               	movlw	135
 12532  000DB0  EC73  F011         	call	i1_SetChanADC
 12533                           
 12534                           ;FastBuggy17_Main_Code_TUNING.c: 233: break;
 12535  000DB4  D06E               	goto	i1l793
 12536  000DB6                     i1l4881:
 12537                           
 12538                           ;FastBuggy17_Main_Code_TUNING.c: 235: SetChanADC(0b10001111);
 12539  000DB6  0E8F               	movlw	143
 12540  000DB8  EC73  F011         	call	i1_SetChanADC
 12541                           
 12542                           ;FastBuggy17_Main_Code_TUNING.c: 236: break;
 12543  000DBC  D06A               	goto	i1l793
 12544  000DBE                     i1l4883:
 12545                           
 12546                           ;FastBuggy17_Main_Code_TUNING.c: 238: SetChanADC(0b10010111);
 12547  000DBE  0E97               	movlw	151
 12548  000DC0  EC73  F011         	call	i1_SetChanADC
 12549                           
 12550                           ;FastBuggy17_Main_Code_TUNING.c: 239: break;
 12551  000DC4  D066               	goto	i1l793
 12552  000DC6                     i1l4885:
 12553                           
 12554                           ;FastBuggy17_Main_Code_TUNING.c: 241: SetChanADC(0b10011111);
 12555  000DC6  0E9F               	movlw	159
 12556  000DC8  EC73  F011         	call	i1_SetChanADC
 12557                           
 12558                           ;FastBuggy17_Main_Code_TUNING.c: 242: break;
 12559  000DCC  D062               	goto	i1l793
 12560  000DCE                     i1l4887:
 12561                           
 12562                           ;FastBuggy17_Main_Code_TUNING.c: 244: SetChanADC(0b10100111);
 12563  000DCE  0EA7               	movlw	167
 12564  000DD0  EC73  F011         	call	i1_SetChanADC
 12565                           
 12566                           ;FastBuggy17_Main_Code_TUNING.c: 245: break;
 12567  000DD4  D05E               	goto	i1l793
 12568  000DD6                     i1l4889:
 12569                           
 12570                           ;FastBuggy17_Main_Code_TUNING.c: 247: SetChanADC(0b10101111);
 12571  000DD6  0EAF               	movlw	175
 12572  000DD8  EC73  F011         	call	i1_SetChanADC
 12573                           
 12574                           ;FastBuggy17_Main_Code_TUNING.c: 248: break;
 12575  000DDC  D05A               	goto	i1l793
 12576  000DDE                     i1l4891:
 12577                           
 12578                           ;FastBuggy17_Main_Code_TUNING.c: 250: SetChanADC(0b10110111);
 12579  000DDE  0EB7               	movlw	183
 12580  000DE0  EC73  F011         	call	i1_SetChanADC
 12581                           
 12582                           ;FastBuggy17_Main_Code_TUNING.c: 251: break;
 12583  000DE4  D056               	goto	i1l793
 12584  000DE6                     i1l4893:
 12585                           
 12586                           ;FastBuggy17_Main_Code_TUNING.c: 253: SetChanADC(0b10111111);
 12587  000DE6  0EBF               	movlw	191
 12588  000DE8  EC73  F011         	call	i1_SetChanADC
 12589                           
 12590                           ;FastBuggy17_Main_Code_TUNING.c: 254: break;
 12591  000DEC  D052               	goto	i1l793
 12592  000DEE                     i1l4895:
 12593                           
 12594                           ;FastBuggy17_Main_Code_TUNING.c: 256: SetChanADC(0b11000111);
 12595  000DEE  0EC7               	movlw	199
 12596  000DF0  EC73  F011         	call	i1_SetChanADC
 12597                           
 12598                           ;FastBuggy17_Main_Code_TUNING.c: 257: break;
 12599  000DF4  D04E               	goto	i1l793
 12600  000DF6                     i1l4897:
 12601                           
 12602                           ;FastBuggy17_Main_Code_TUNING.c: 259: SetChanADC(0b11001111);
 12603  000DF6  0ECF               	movlw	207
 12604  000DF8  EC73  F011         	call	i1_SetChanADC
 12605                           
 12606                           ;FastBuggy17_Main_Code_TUNING.c: 260: break;
 12607  000DFC  D04A               	goto	i1l793
 12608  000DFE                     i1l4899:
 12609                           
 12610                           ;FastBuggy17_Main_Code_TUNING.c: 262: SetChanADC(0b11010111);
 12611  000DFE  0ED7               	movlw	215
 12612  000E00  EC73  F011         	call	i1_SetChanADC
 12613                           
 12614                           ;FastBuggy17_Main_Code_TUNING.c: 263: break;
 12615  000E04  D046               	goto	i1l793
 12616  000E06                     i1l4901:
 12617                           
 12618                           ;FastBuggy17_Main_Code_TUNING.c: 265: SetChanADC(0b11011111);
 12619  000E06  0EDF               	movlw	223
 12620  000E08  EC73  F011         	call	i1_SetChanADC
 12621                           
 12622                           ;FastBuggy17_Main_Code_TUNING.c: 266: break;
 12623  000E0C  D042               	goto	i1l793
 12624  000E0E                     i1l4903:
 12625                           
 12626                           ;FastBuggy17_Main_Code_TUNING.c: 268: SetChanADC(0b11100111);
 12627  000E0E  0EE7               	movlw	231
 12628  000E10  EC73  F011         	call	i1_SetChanADC
 12629                           
 12630                           ;FastBuggy17_Main_Code_TUNING.c: 269: break;
 12631  000E14  D03E               	goto	i1l793
 12632  000E16                     i1l4905:
 12633                           
 12634                           ;FastBuggy17_Main_Code_TUNING.c: 271: SetChanADC(0b11101111);
 12635  000E16  0EEF               	movlw	239
 12636  000E18  EC73  F011         	call	i1_SetChanADC
 12637                           
 12638                           ;FastBuggy17_Main_Code_TUNING.c: 272: break;
 12639  000E1C  D03A               	goto	i1l793
 12640  000E1E                     i1l4907:
 12641                           
 12642                           ;FastBuggy17_Main_Code_TUNING.c: 274: SetChanADC(0b11110111);
 12643  000E1E  0EF7               	movlw	247
 12644  000E20  EC73  F011         	call	i1_SetChanADC
 12645                           
 12646                           ;FastBuggy17_Main_Code_TUNING.c: 275: break;
 12647  000E24  D036               	goto	i1l793
 12648  000E26                     i1l4909:
 12649                           
 12650                           ;FastBuggy17_Main_Code_TUNING.c: 277: SetChanADC(0b11111111);
 12651  000E26  0EFF               	movlw	255
 12652  000E28  EC73  F011         	call	i1_SetChanADC
 12653                           
 12654                           ;FastBuggy17_Main_Code_TUNING.c: 281: }
 12655                           
 12656                           ;FastBuggy17_Main_Code_TUNING.c: 280: break;
 12657                           
 12658                           ;FastBuggy17_Main_Code_TUNING.c: 279: default:
 12659                           
 12660                           ;FastBuggy17_Main_Code_TUNING.c: 278: break;
 12661  000E2C  D032               	goto	i1l793
 12662  000E2E                     i1l4913:
 12663  000E2E  502D               	movf	i1SetADCChannel@channel,w,c
 12664                           
 12665                           ; Switch size 1, requested type "space"
 12666                           ; Number of cases is 16, Range of values is 0 to 15
 12667                           ; switch strategies available:
 12668                           ; Name         Instructions Cycles
 12669                           ; simple_byte           49    25 (average)
 12670                           ;	Chosen strategy is simple_byte
 12671  000E30  0A00               	xorlw	0	; case 0
 12672  000E32  B4D8               	btfsc	status,2,c
 12673  000E34  D7BC               	goto	i1l4879
 12674  000E36  0A01               	xorlw	1	; case 1
 12675  000E38  B4D8               	btfsc	status,2,c
 12676  000E3A  D7BD               	goto	i1l4881
 12677  000E3C  0A03               	xorlw	3	; case 2
 12678  000E3E  B4D8               	btfsc	status,2,c
 12679  000E40  D7BE               	goto	i1l4883
 12680  000E42  0A01               	xorlw	1	; case 3
 12681  000E44  B4D8               	btfsc	status,2,c
 12682  000E46  D7BF               	goto	i1l4885
 12683  000E48  0A07               	xorlw	7	; case 4
 12684  000E4A  B4D8               	btfsc	status,2,c
 12685  000E4C  D7C0               	goto	i1l4887
 12686  000E4E  0A01               	xorlw	1	; case 5
 12687  000E50  B4D8               	btfsc	status,2,c
 12688  000E52  D7C1               	goto	i1l4889
 12689  000E54  0A03               	xorlw	3	; case 6
 12690  000E56  B4D8               	btfsc	status,2,c
 12691  000E58  D7C2               	goto	i1l4891
 12692  000E5A  0A01               	xorlw	1	; case 7
 12693  000E5C  B4D8               	btfsc	status,2,c
 12694  000E5E  D7C3               	goto	i1l4893
 12695  000E60  0A0F               	xorlw	15	; case 8
 12696  000E62  B4D8               	btfsc	status,2,c
 12697  000E64  D7C4               	goto	i1l4895
 12698  000E66  0A01               	xorlw	1	; case 9
 12699  000E68  B4D8               	btfsc	status,2,c
 12700  000E6A  D7C5               	goto	i1l4897
 12701  000E6C  0A03               	xorlw	3	; case 10
 12702  000E6E  B4D8               	btfsc	status,2,c
 12703  000E70  D7C6               	goto	i1l4899
 12704  000E72  0A01               	xorlw	1	; case 11
 12705  000E74  B4D8               	btfsc	status,2,c
 12706  000E76  D7C7               	goto	i1l4901
 12707  000E78  0A07               	xorlw	7	; case 12
 12708  000E7A  B4D8               	btfsc	status,2,c
 12709  000E7C  D7C8               	goto	i1l4903
 12710  000E7E  0A01               	xorlw	1	; case 13
 12711  000E80  B4D8               	btfsc	status,2,c
 12712  000E82  D7C9               	goto	i1l4905
 12713  000E84  0A03               	xorlw	3	; case 14
 12714  000E86  B4D8               	btfsc	status,2,c
 12715  000E88  D7CA               	goto	i1l4907
 12716  000E8A  0A01               	xorlw	1	; case 15
 12717  000E8C  B4D8               	btfsc	status,2,c
 12718  000E8E  D7CB               	goto	i1l4909
 12719  000E90  D000               	goto	i1l793
 12720  000E92                     i1l793:
 12721  000E92  0012               	return		;funcret
 12722  000E94                     __end_ofi1_SetADCChannel:
 12723                           	opt stack 0
 12724                           pclatu	equ	0xFFB
 12725                           pclath	equ	0xFFA
 12726                           tblptru	equ	0xFF8
 12727                           tblptrh	equ	0xFF7
 12728                           tblptrl	equ	0xFF6
 12729                           tablat	equ	0xFF5
 12730                           prodh	equ	0xFF4
 12731                           prodl	equ	0xFF3
 12732                           intcon	equ	0xFF2
 12733                           intcon2	equ	0xFF1
 12734                           intcon3	equ	0xFF0
 12735                           postinc0	equ	0xFEE
 12736                           fsr0h	equ	0xFEA
 12737                           fsr0l	equ	0xFE9
 12738                           wreg	equ	0xFE8
 12739                           postinc1	equ	0xFE6
 12740                           fsr1h	equ	0xFE2
 12741                           fsr1l	equ	0xFE1
 12742                           bsr	equ	0xFE0
 12743                           indf2	equ	0xFDF
 12744                           postinc2	equ	0xFDE
 12745                           postdec2	equ	0xFDD
 12746                           fsr2h	equ	0xFDA
 12747                           fsr2l	equ	0xFD9
 12748                           status	equ	0xFD8
 12749                           
 12750 ;; *************** function i1_SetChanADC *****************
 12751 ;; Defined at:
 12752 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  channel         1    wreg     unsigned char 
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  channel         1    1[COMRAM] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;		None               void
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;Total ram usage:        2 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:    3
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		i1_SetADCChannel
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text103
 12781  0022E6                     __ptext103:
 12782                           	opt stack 0
 12783  0022E6                     i1_SetChanADC:
 12784                           	opt stack 19
 12785                           
 12786                           ;incstack = 0
 12787                           ;i1SetChanADC@channel stored from wreg
 12788  0022E6  6E2C               	movwf	i1SetChanADC@channel,c
 12789  0022E8  CFC2 F02B          	movff	4034,??i1_SetChanADC	;volatile
 12790  0022EC  0EC3               	movlw	195
 12791  0022EE  162B               	andwf	??i1_SetChanADC,f,c
 12792  0022F0  90D8               	bcf	status,0,c
 12793  0022F2  302C               	rrcf	i1SetChanADC@channel,w,c
 12794  0022F4  0B3C               	andlw	60
 12795  0022F6  102B               	iorwf	??i1_SetChanADC,w,c
 12796  0022F8  6EC2               	movwf	4034,c	;volatile
 12797  0022FA  0012               	return		;funcret
 12798  0022FC                     __end_ofi1_SetChanADC:
 12799                           	opt stack 0
 12800                           pclatu	equ	0xFFB
 12801                           pclath	equ	0xFFA
 12802                           tblptru	equ	0xFF8
 12803                           tblptrh	equ	0xFF7
 12804                           tblptrl	equ	0xFF6
 12805                           tablat	equ	0xFF5
 12806                           prodh	equ	0xFF4
 12807                           prodl	equ	0xFF3
 12808                           intcon	equ	0xFF2
 12809                           intcon2	equ	0xFF1
 12810                           intcon3	equ	0xFF0
 12811                           postinc0	equ	0xFEE
 12812                           fsr0h	equ	0xFEA
 12813                           fsr0l	equ	0xFE9
 12814                           wreg	equ	0xFE8
 12815                           postinc1	equ	0xFE6
 12816                           fsr1h	equ	0xFE2
 12817                           fsr1l	equ	0xFE1
 12818                           bsr	equ	0xFE0
 12819                           indf2	equ	0xFDF
 12820                           postinc2	equ	0xFDE
 12821                           postdec2	equ	0xFDD
 12822                           fsr2h	equ	0xFDA
 12823                           fsr2l	equ	0xFD9
 12824                           status	equ	0xFD8
 12825                           
 12826 ;; *************** function i1_ReadADC *****************
 12827 ;; Defined at:
 12828 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  2    0[COMRAM] int 
 12835 ;; Registers used:
 12836 ;;		wreg, status,2
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12846 ;;Total ram usage:        4 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    3
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		_isrLP
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           	psect	text104
 12857  0023F6                     __ptext104:
 12858                           	opt stack 0
 12859  0023F6                     i1_ReadADC:
 12860                           	opt stack 20
 12861                           
 12862                           ;incstack = 0
 12863  0023F6  50C4               	movf	4036,w,c	;volatile
 12864  0023F8  6E2D               	movwf	??i1_ReadADC& (0+255),c
 12865  0023FA  50C3               	movf	4035,w,c	;volatile
 12866  0023FC  6E2B               	movwf	?i1_ReadADC,c
 12867  0023FE  C02D  F02C         	movff	??i1_ReadADC,?i1_ReadADC+1
 12868  002402  D000               	goto	i1l1059
 12869  002404                     i1l1059:
 12870  002404  0012               	return		;funcret
 12871  002406                     __end_ofi1_ReadADC:
 12872                           	opt stack 0
 12873                           pclatu	equ	0xFFB
 12874                           pclath	equ	0xFFA
 12875                           tblptru	equ	0xFF8
 12876                           tblptrh	equ	0xFF7
 12877                           tblptrl	equ	0xFF6
 12878                           tablat	equ	0xFF5
 12879                           prodh	equ	0xFF4
 12880                           prodl	equ	0xFF3
 12881                           intcon	equ	0xFF2
 12882                           intcon2	equ	0xFF1
 12883                           intcon3	equ	0xFF0
 12884                           postinc0	equ	0xFEE
 12885                           fsr0h	equ	0xFEA
 12886                           fsr0l	equ	0xFE9
 12887                           wreg	equ	0xFE8
 12888                           postinc1	equ	0xFE6
 12889                           fsr1h	equ	0xFE2
 12890                           fsr1l	equ	0xFE1
 12891                           bsr	equ	0xFE0
 12892                           indf2	equ	0xFDF
 12893                           postinc2	equ	0xFDE
 12894                           postdec2	equ	0xFDD
 12895                           fsr2h	equ	0xFDA
 12896                           fsr2l	equ	0xFD9
 12897                           status	equ	0xFD8
 12898                           
 12899 ;; *************** function i1_ConvertADC *****************
 12900 ;; Defined at:
 12901 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;		None               void
 12908 ;; Registers used:
 12909 ;;		None
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;Total ram usage:        0 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    3
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_isrLP
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text105
 12930  0024DA                     __ptext105:
 12931                           	opt stack 0
 12932  0024DA                     i1_ConvertADC:
 12933                           	opt stack 20
 12934                           
 12935                           ;incstack = 0
 12936  0024DA  82C2               	bsf	4034,1,c	;volatile
 12937  0024DC  0012               	return		;funcret
 12938  0024DE                     __end_ofi1_ConvertADC:
 12939                           	opt stack 0
 12940                           pclatu	equ	0xFFB
 12941                           pclath	equ	0xFFA
 12942                           tblptru	equ	0xFF8
 12943                           tblptrh	equ	0xFF7
 12944                           tblptrl	equ	0xFF6
 12945                           tablat	equ	0xFF5
 12946                           prodh	equ	0xFF4
 12947                           prodl	equ	0xFF3
 12948                           intcon	equ	0xFF2
 12949                           intcon2	equ	0xFF1
 12950                           intcon3	equ	0xFF0
 12951                           postinc0	equ	0xFEE
 12952                           fsr0h	equ	0xFEA
 12953                           fsr0l	equ	0xFE9
 12954                           wreg	equ	0xFE8
 12955                           postinc1	equ	0xFE6
 12956                           fsr1h	equ	0xFE2
 12957                           fsr1l	equ	0xFE1
 12958                           bsr	equ	0xFE0
 12959                           indf2	equ	0xFDF
 12960                           postinc2	equ	0xFDE
 12961                           postdec2	equ	0xFDD
 12962                           fsr2h	equ	0xFDA
 12963                           fsr2l	equ	0xFD9
 12964                           status	equ	0xFD8
 12965                           
 12966 ;; *************** function _WirelessTx_ISR *****************
 12967 ;; Defined at:
 12968 ;;		line 61 in file "Wireless.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;		None               void
 12975 ;; Registers used:
 12976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;Total ram usage:        0 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; Hardware stack levels required when called:    5
 12989 ;; This function calls:
 12990 ;;		_GetCharTxBuf
 12991 ;;		_Write1USART
 12992 ;; This function is called by:
 12993 ;;		_isrLP
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           	psect	text106
 12998  002198                     __ptext106:
 12999                           	opt stack 0
 13000  002198                     _WirelessTx_ISR:
 13001                           	opt stack 18
 13002                           
 13003                           ;Wireless.c: 62: TxCharacter = GetCharTxBuf();
 13004                           
 13005                           ;incstack = 0
 13006  002198  EC32  F00F         	call	_GetCharTxBuf	;wreg free
 13007  00219C  6E19               	movwf	_TxCharacter,c	;volatile
 13008                           
 13009                           ;Wireless.c: 63: if(TxCharacter == 0x0A) {
 13010  00219E  0E0A               	movlw	10
 13011  0021A0  1819               	xorwf	_TxCharacter,w,c	;volatile
 13012  0021A2  A4D8               	btfss	status,2,c
 13013  0021A4  D007               	goto	i1l4593
 13014                           
 13015                           ;Wireless.c: 64: Write1USART(TxCharacter);
 13016  0021A6  5019               	movf	_TxCharacter,w,c	;volatile
 13017  0021A8  EC7E  F011         	call	_Write1USART
 13018                           
 13019                           ;Wireless.c: 65: Tx_complete = 1;
 13020  0021AC  0E01               	movlw	1
 13021  0021AE  6E1A               	movwf	_Tx_complete,c
 13022                           
 13023                           ;Wireless.c: 66: PIE1bits.TX1IE = 0;
 13024  0021B0  989D               	bcf	3997,4,c	;volatile
 13025                           
 13026                           ;Wireless.c: 67: }
 13027  0021B2  D004               	goto	i1l303
 13028  0021B4                     i1l4593:
 13029                           
 13030                           ;Wireless.c: 68: else {
 13031                           ;Wireless.c: 69: Write1USART(TxCharacter);
 13032  0021B4  5019               	movf	_TxCharacter,w,c	;volatile
 13033  0021B6  EC7E  F011         	call	_Write1USART
 13034  0021BA  D000               	goto	i1l303
 13035  0021BC                     i1l303:
 13036  0021BC  0012               	return		;funcret
 13037  0021BE                     __end_of_WirelessTx_ISR:
 13038                           	opt stack 0
 13039                           pclatu	equ	0xFFB
 13040                           pclath	equ	0xFFA
 13041                           tblptru	equ	0xFF8
 13042                           tblptrh	equ	0xFF7
 13043                           tblptrl	equ	0xFF6
 13044                           tablat	equ	0xFF5
 13045                           prodh	equ	0xFF4
 13046                           prodl	equ	0xFF3
 13047                           intcon	equ	0xFF2
 13048                           intcon2	equ	0xFF1
 13049                           intcon3	equ	0xFF0
 13050                           postinc0	equ	0xFEE
 13051                           fsr0h	equ	0xFEA
 13052                           fsr0l	equ	0xFE9
 13053                           wreg	equ	0xFE8
 13054                           postinc1	equ	0xFE6
 13055                           fsr1h	equ	0xFE2
 13056                           fsr1l	equ	0xFE1
 13057                           bsr	equ	0xFE0
 13058                           indf2	equ	0xFDF
 13059                           postinc2	equ	0xFDE
 13060                           postdec2	equ	0xFDD
 13061                           fsr2h	equ	0xFDA
 13062                           fsr2l	equ	0xFD9
 13063                           status	equ	0xFD8
 13064                           
 13065 ;; *************** function _Write1USART *****************
 13066 ;; Defined at:
 13067 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1write.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  data            1    wreg     unsigned char 
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;  data            1    0[COMRAM] unsigned char 
 13072 ;; Return value:  Size  Location     Type
 13073 ;;		None               void
 13074 ;; Registers used:
 13075 ;;		wreg
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;Total ram usage:        1 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:    3
 13088 ;; This function calls:
 13089 ;;		Nothing
 13090 ;; This function is called by:
 13091 ;;		_WirelessTx_ISR
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095                           	psect	text107
 13096  0022FC                     __ptext107:
 13097                           	opt stack 0
 13098  0022FC                     _Write1USART:
 13099                           	opt stack 19
 13100                           
 13101                           ;incstack = 0
 13102                           ;Write1USART@data stored from wreg
 13103  0022FC  6E2B               	movwf	Write1USART@data,c
 13104  0022FE  ACAC               	btfss	4012,6,c	;volatile
 13105  002300  D005               	goto	i1l4201
 13106  002302  90AC               	bcf	4012,0,c	;volatile
 13107  002304  A21B               	btfss	_USART1_Status,1,c
 13108  002306  D002               	goto	i1l4201
 13109  002308  80AC               	bsf	4012,0,c	;volatile
 13110  00230A  D000               	goto	i1l4201
 13111  00230C                     i1l4201:
 13112  00230C  C02B  FFAD         	movff	Write1USART@data,4013	;volatile
 13113  002310  0012               	return		;funcret
 13114  002312                     __end_of_Write1USART:
 13115                           	opt stack 0
 13116                           pclatu	equ	0xFFB
 13117                           pclath	equ	0xFFA
 13118                           tblptru	equ	0xFF8
 13119                           tblptrh	equ	0xFF7
 13120                           tblptrl	equ	0xFF6
 13121                           tablat	equ	0xFF5
 13122                           prodh	equ	0xFF4
 13123                           prodl	equ	0xFF3
 13124                           intcon	equ	0xFF2
 13125                           intcon2	equ	0xFF1
 13126                           intcon3	equ	0xFF0
 13127                           postinc0	equ	0xFEE
 13128                           fsr0h	equ	0xFEA
 13129                           fsr0l	equ	0xFE9
 13130                           wreg	equ	0xFE8
 13131                           postinc1	equ	0xFE6
 13132                           fsr1h	equ	0xFE2
 13133                           fsr1l	equ	0xFE1
 13134                           bsr	equ	0xFE0
 13135                           indf2	equ	0xFDF
 13136                           postinc2	equ	0xFDE
 13137                           postdec2	equ	0xFDD
 13138                           fsr2h	equ	0xFDA
 13139                           fsr2l	equ	0xFD9
 13140                           status	equ	0xFD8
 13141                           
 13142 ;; *************** function _GetCharTxBuf *****************
 13143 ;; Defined at:
 13144 ;;		line 15 in file "Wireless.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  ch              1    7[COMRAM] unsigned char 
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      unsigned char 
 13151 ;; Registers used:
 13152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;Total ram usage:        2 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    4
 13165 ;; This function calls:
 13166 ;;		i1___awmod
 13167 ;; This function is called by:
 13168 ;;		_WirelessTx_ISR
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           	psect	text108
 13173  001E64                     __ptext108:
 13174                           	opt stack 0
 13175  001E64                     _GetCharTxBuf:
 13176                           	opt stack 18
 13177                           
 13178                           ;Wireless.c: 16: unsigned char ch;
 13179                           ;Wireless.c: 18: ch = Tx_buffer[get_Tx_index];
 13180                           
 13181                           ;incstack = 0
 13182  001E64  501E               	movf	_get_Tx_index,w,c
 13183  001E66  0D01               	mullw	1
 13184  001E68  0E79               	movlw	low _Tx_buffer
 13185  001E6A  24F3               	addwf	prodl,w,c
 13186  001E6C  6ED9               	movwf	fsr2l,c
 13187  001E6E  0E00               	movlw	high _Tx_buffer
 13188  001E70  20F4               	addwfc	prodh,w,c
 13189  001E72  6EDA               	movwf	fsr2h,c
 13190  001E74  50DF               	movf	indf2,w,c
 13191  001E76  6E32               	movwf	GetCharTxBuf@ch,c
 13192                           
 13193                           ;Wireless.c: 19: get_Tx_index = (unsigned char)(get_Tx_index + 1) % 25;
 13194  001E78  C01E  F031         	movff	_get_Tx_index,??_GetCharTxBuf
 13195  001E7C  0E01               	movlw	1
 13196  001E7E  2631               	addwf	??_GetCharTxBuf,f,c
 13197  001E80  5031               	movf	??_GetCharTxBuf,w,c
 13198  001E82  6E2B               	movwf	i1___awmod@dividend,c
 13199  001E84  6A2C               	clrf	i1___awmod@dividend+1,c
 13200  001E86  0E00               	movlw	0
 13201  001E88  6E2E               	movwf	i1___awmod@divisor+1,c
 13202  001E8A  0E19               	movlw	25
 13203  001E8C  6E2D               	movwf	i1___awmod@divisor,c
 13204  001E8E  EC42  F00A         	call	i1___awmod	;wreg free
 13205  001E92  502B               	movf	?i1___awmod,w,c
 13206  001E94  6E1E               	movwf	_get_Tx_index,c
 13207                           
 13208                           ;Wireless.c: 21: return(ch);
 13209  001E96  5032               	movf	GetCharTxBuf@ch,w,c
 13210  001E98  D000               	goto	i1l280
 13211  001E9A                     i1l280:
 13212  001E9A  0012               	return		;funcret
 13213  001E9C                     __end_of_GetCharTxBuf:
 13214                           	opt stack 0
 13215                           pclatu	equ	0xFFB
 13216                           pclath	equ	0xFFA
 13217                           tblptru	equ	0xFF8
 13218                           tblptrh	equ	0xFF7
 13219                           tblptrl	equ	0xFF6
 13220                           tablat	equ	0xFF5
 13221                           prodh	equ	0xFF4
 13222                           prodl	equ	0xFF3
 13223                           intcon	equ	0xFF2
 13224                           intcon2	equ	0xFF1
 13225                           intcon3	equ	0xFF0
 13226                           postinc0	equ	0xFEE
 13227                           fsr0h	equ	0xFEA
 13228                           fsr0l	equ	0xFE9
 13229                           wreg	equ	0xFE8
 13230                           postinc1	equ	0xFE6
 13231                           fsr1h	equ	0xFE2
 13232                           fsr1l	equ	0xFE1
 13233                           bsr	equ	0xFE0
 13234                           indf2	equ	0xFDF
 13235                           postinc2	equ	0xFDE
 13236                           postdec2	equ	0xFDD
 13237                           fsr2h	equ	0xFDA
 13238                           fsr2l	equ	0xFD9
 13239                           status	equ	0xFD8
 13240                           
 13241 ;; *************** function i1___awmod *****************
 13242 ;; Defined at:
 13243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 13244 ;; Parameters:    Size  Location     Type
 13245 ;;  dividend        2    0[COMRAM] int 
 13246 ;;  divisor         2    2[COMRAM] int 
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;  __awmod         1    5[COMRAM] unsigned char 
 13249 ;;  __awmod         1    4[COMRAM] unsigned char 
 13250 ;; Return value:  Size  Location     Type
 13251 ;;                  2    0[COMRAM] int 
 13252 ;; Registers used:
 13253 ;;		wreg, status,2, status,0
 13254 ;; Tracked objects:
 13255 ;;		On entry : 0/0
 13256 ;;		On exit  : 0/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;Total ram usage:        6 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    3
 13266 ;; This function calls:
 13267 ;;		Nothing
 13268 ;; This function is called by:
 13269 ;;		_GetCharTxBuf
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text109
 13274  001484                     __ptext109:
 13275                           	opt stack 0
 13276  001484                     i1___awmod:
 13277                           	opt stack 18
 13278                           
 13279                           ;incstack = 0
 13280  001484  0E00               	movlw	0
 13281  001486  6E30               	movwf	i1___awmod@sign,c
 13282  001488  AE2C               	btfss	i1___awmod@dividend+1,7,c
 13283  00148A  D007               	goto	i1l4137
 13284  00148C  6C2B               	negf	i1___awmod@dividend,c
 13285  00148E  1E2C               	comf	i1___awmod@dividend+1,f,c
 13286  001490  B0D8               	btfsc	status,0,c
 13287  001492  2A2C               	incf	i1___awmod@dividend+1,f,c
 13288  001494  0E01               	movlw	1
 13289  001496  6E30               	movwf	i1___awmod@sign,c
 13290  001498  D000               	goto	i1l4137
 13291  00149A                     i1l4137:
 13292  00149A  AE2E               	btfss	i1___awmod@divisor+1,7,c
 13293  00149C  D005               	goto	i1l4141
 13294  00149E  6C2D               	negf	i1___awmod@divisor,c
 13295  0014A0  1E2E               	comf	i1___awmod@divisor+1,f,c
 13296  0014A2  B0D8               	btfsc	status,0,c
 13297  0014A4  2A2E               	incf	i1___awmod@divisor+1,f,c
 13298  0014A6  D000               	goto	i1l4141
 13299  0014A8                     i1l4141:
 13300  0014A8  502D               	movf	i1___awmod@divisor,w,c
 13301  0014AA  102E               	iorwf	i1___awmod@divisor+1,w,c
 13302  0014AC  B4D8               	btfsc	status,2,c
 13303  0014AE  D01D               	goto	i1l4157
 13304  0014B0  0E01               	movlw	1
 13305  0014B2  6E2F               	movwf	i1___awmod@counter,c
 13306  0014B4  D005               	goto	i1l4147
 13307  0014B6                     i1l4145:
 13308  0014B6  90D8               	bcf	status,0,c
 13309  0014B8  362D               	rlcf	i1___awmod@divisor,f,c
 13310  0014BA  362E               	rlcf	i1___awmod@divisor+1,f,c
 13311  0014BC  2A2F               	incf	i1___awmod@counter,f,c
 13312  0014BE  D000               	goto	i1l4147
 13313  0014C0                     i1l4147:
 13314  0014C0  BE2E               	btfsc	i1___awmod@divisor+1,7,c
 13315  0014C2  D002               	goto	i1l4149
 13316  0014C4  D7F8               	goto	i1l4145
 13317  0014C6  D000               	goto	i1l4149
 13318  0014C8                     i1l4149:
 13319  0014C8  502D               	movf	i1___awmod@divisor,w,c
 13320  0014CA  5C2B               	subwf	i1___awmod@dividend,w,c
 13321  0014CC  502E               	movf	i1___awmod@divisor+1,w,c
 13322  0014CE  582C               	subwfb	i1___awmod@dividend+1,w,c
 13323  0014D0  A0D8               	btfss	status,0,c
 13324  0014D2  D005               	goto	i1l4153
 13325  0014D4  502D               	movf	i1___awmod@divisor,w,c
 13326  0014D6  5E2B               	subwf	i1___awmod@dividend,f,c
 13327  0014D8  502E               	movf	i1___awmod@divisor+1,w,c
 13328  0014DA  5A2C               	subwfb	i1___awmod@dividend+1,f,c
 13329  0014DC  D000               	goto	i1l4153
 13330  0014DE                     i1l4153:
 13331  0014DE  90D8               	bcf	status,0,c
 13332  0014E0  322E               	rrcf	i1___awmod@divisor+1,f,c
 13333  0014E2  322D               	rrcf	i1___awmod@divisor,f,c
 13334  0014E4  2E2F               	decfsz	i1___awmod@counter,f,c
 13335  0014E6  D7F0               	goto	i1l4149
 13336  0014E8  D000               	goto	i1l4157
 13337  0014EA                     i1l4157:
 13338  0014EA  5030               	movf	i1___awmod@sign,w,c
 13339  0014EC  B4D8               	btfsc	status,2,c
 13340  0014EE  D005               	goto	i1l4161
 13341  0014F0  6C2B               	negf	i1___awmod@dividend,c
 13342  0014F2  1E2C               	comf	i1___awmod@dividend+1,f,c
 13343  0014F4  B0D8               	btfsc	status,0,c
 13344  0014F6  2A2C               	incf	i1___awmod@dividend+1,f,c
 13345  0014F8  D000               	goto	i1l4161
 13346  0014FA                     i1l4161:
 13347  0014FA  C02B  F02B         	movff	i1___awmod@dividend,?i1___awmod
 13348  0014FE  C02C  F02C         	movff	i1___awmod@dividend+1,?i1___awmod+1
 13349  001502  D000               	goto	i1l1454
 13350  001504                     i1l1454:
 13351  001504  0012               	return		;funcret
 13352  001506                     __end_ofi1___awmod:
 13353                           	opt stack 0
 13354                           pclatu	equ	0xFFB
 13355                           pclath	equ	0xFFA
 13356                           tblptru	equ	0xFF8
 13357                           tblptrh	equ	0xFF7
 13358                           tblptrl	equ	0xFF6
 13359                           tablat	equ	0xFF5
 13360                           prodh	equ	0xFF4
 13361                           prodl	equ	0xFF3
 13362                           intcon	equ	0xFF2
 13363                           intcon2	equ	0xFF1
 13364                           intcon3	equ	0xFF0
 13365                           postinc0	equ	0xFEE
 13366                           fsr0h	equ	0xFEA
 13367                           fsr0l	equ	0xFE9
 13368                           wreg	equ	0xFE8
 13369                           postinc1	equ	0xFE6
 13370                           fsr1h	equ	0xFE2
 13371                           fsr1l	equ	0xFE1
 13372                           bsr	equ	0xFE0
 13373                           indf2	equ	0xFDF
 13374                           postinc2	equ	0xFDE
 13375                           postdec2	equ	0xFDD
 13376                           fsr2h	equ	0xFDA
 13377                           fsr2l	equ	0xFD9
 13378                           status	equ	0xFD8
 13379                           
 13380 ;; *************** function _isrHP *****************
 13381 ;; Defined at:
 13382 ;;		line 640 in file "FastBuggy17_Main_Code_TUNING.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;		None
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;		None
 13387 ;; Return value:  Size  Location     Type
 13388 ;;		None               void
 13389 ;; Registers used:
 13390 ;;		wreg, status,2, status,0, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;Total ram usage:       14 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:    2
 13403 ;; This function calls:
 13404 ;;		_MillisecondTimerISR
 13405 ;;		_UltrasoundISR
 13406 ;; This function is called by:
 13407 ;;		Interrupt level 2
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	intcode
 13412  000008                     __pintcode:
 13413                           	opt stack 0
 13414  000008                     _isrHP:
 13415                           	opt stack 18
 13416                           
 13417                           ;incstack = 0
 13418  000008  CFFA F0C0          	movff	pclath,??_isrHP
 13419  00000C  CFFB F0C1          	movff	pclatu,??_isrHP+1
 13420  000010  CFE9 F0C2          	movff	fsr0l,??_isrHP+2
 13421  000014  ED83  F00A         	call	int_func,f	;refresh shadow registers
 13422                           pclatu	equ	0xFFB
 13423                           pclath	equ	0xFFA
 13424                           tblptru	equ	0xFF8
 13425                           tblptrh	equ	0xFF7
 13426                           tblptrl	equ	0xFF6
 13427                           tablat	equ	0xFF5
 13428                           prodh	equ	0xFF4
 13429                           prodl	equ	0xFF3
 13430                           intcon	equ	0xFF2
 13431                           intcon2	equ	0xFF1
 13432                           intcon3	equ	0xFF0
 13433                           postinc0	equ	0xFEE
 13434                           fsr0h	equ	0xFEA
 13435                           fsr0l	equ	0xFE9
 13436                           wreg	equ	0xFE8
 13437                           postinc1	equ	0xFE6
 13438                           fsr1h	equ	0xFE2
 13439                           fsr1l	equ	0xFE1
 13440                           bsr	equ	0xFE0
 13441                           indf2	equ	0xFDF
 13442                           postinc2	equ	0xFDE
 13443                           postdec2	equ	0xFDD
 13444                           fsr2h	equ	0xFDA
 13445                           fsr2l	equ	0xFD9
 13446                           status	equ	0xFD8
 13447                           
 13448                           	psect	intcode_body
 13449  001506                     __pintcode_body:
 13450                           	opt stack 18
 13451  001506                     int_func:
 13452                           	opt stack 18
 13453  001506  0006               	pop		; remove dummy address from shadow register refresh
 13454  001508  CFEA F0C3          	movff	fsr0h,??_isrHP+3
 13455  00150C  CFE1 F0C4          	movff	fsr1l,??_isrHP+4
 13456  001510  CFE2 F0C5          	movff	fsr1h,??_isrHP+5
 13457  001514  CFD9 F0C6          	movff	fsr2l,??_isrHP+6
 13458  001518  CFDA F0C7          	movff	fsr2h,??_isrHP+7
 13459  00151C  CFF3 F0C8          	movff	prodl,??_isrHP+8
 13460  001520  CFF4 F0C9          	movff	prodh,??_isrHP+9
 13461  001524  CFF6 F0CA          	movff	tblptrl,??_isrHP+10
 13462  001528  CFF7 F0CB          	movff	tblptrh,??_isrHP+11
 13463  00152C  CFF8 F0CC          	movff	tblptru,??_isrHP+12
 13464  001530  CFF5 F0CD          	movff	tablat,??_isrHP+13
 13465                           
 13466                           ;FastBuggy17_Main_Code_TUNING.c: 643: if (INTCONbits.TMR0IF == 1) {
 13467  001534  A4F2               	btfss	intcon,2,c	;volatile
 13468  001536  D004               	goto	i2l946
 13469                           
 13470                           ;FastBuggy17_Main_Code_TUNING.c: 644: INTCONbits.TMR0IF = 0;
 13471  001538  94F2               	bcf	intcon,2,c	;volatile
 13472                           
 13473                           ;FastBuggy17_Main_Code_TUNING.c: 646: MillisecondTimerISR();
 13474  00153A  EC2A  F011         	call	_MillisecondTimerISR	;wreg free
 13475                           
 13476                           ;FastBuggy17_Main_Code_TUNING.c: 650: }
 13477  00153E  D006               	goto	i2l949
 13478  001540                     i2l946:
 13479                           
 13480                           ;FastBuggy17_Main_Code_TUNING.c: 653: else if (INTCON3bits.INT3IF == 1) {
 13481  001540  A4F0               	btfss	intcon3,2,c	;volatile
 13482  001542  D004               	goto	i2l949
 13483                           
 13484                           ;FastBuggy17_Main_Code_TUNING.c: 654: INTCON3bits.INT3IF = 0;
 13485  001544  94F0               	bcf	intcon3,2,c	;volatile
 13486                           
 13487                           ;FastBuggy17_Main_Code_TUNING.c: 656: UltrasoundISR();
 13488  001546  EC9E  F00F         	call	_UltrasoundISR	;wreg free
 13489  00154A  D000               	goto	i2l949
 13490  00154C                     i2l949:
 13491  00154C  C0CD  FFF5         	movff	??_isrHP+13,tablat
 13492  001550  C0CC  FFF8         	movff	??_isrHP+12,tblptru
 13493  001554  C0CB  FFF7         	movff	??_isrHP+11,tblptrh
 13494  001558  C0CA  FFF6         	movff	??_isrHP+10,tblptrl
 13495  00155C  C0C9  FFF4         	movff	??_isrHP+9,prodh
 13496  001560  C0C8  FFF3         	movff	??_isrHP+8,prodl
 13497  001564  C0C7  FFDA         	movff	??_isrHP+7,fsr2h
 13498  001568  C0C6  FFD9         	movff	??_isrHP+6,fsr2l
 13499  00156C  C0C5  FFE2         	movff	??_isrHP+5,fsr1h
 13500  001570  C0C4  FFE1         	movff	??_isrHP+4,fsr1l
 13501  001574  C0C3  FFEA         	movff	??_isrHP+3,fsr0h
 13502  001578  C0C2  FFE9         	movff	??_isrHP+2,fsr0l
 13503  00157C  C0C1  FFFB         	movff	??_isrHP+1,pclatu
 13504  001580  C0C0  FFFA         	movff	??_isrHP,pclath
 13505  001584  0011               	retfie		f
 13506  001586                     __end_of_isrHP:
 13507                           	opt stack 0
 13508                           pclatu	equ	0xFFB
 13509                           pclath	equ	0xFFA
 13510                           tblptru	equ	0xFF8
 13511                           tblptrh	equ	0xFF7
 13512                           tblptrl	equ	0xFF6
 13513                           tablat	equ	0xFF5
 13514                           prodh	equ	0xFF4
 13515                           prodl	equ	0xFF3
 13516                           intcon	equ	0xFF2
 13517                           intcon2	equ	0xFF1
 13518                           intcon3	equ	0xFF0
 13519                           postinc0	equ	0xFEE
 13520                           fsr0h	equ	0xFEA
 13521                           fsr0l	equ	0xFE9
 13522                           wreg	equ	0xFE8
 13523                           postinc1	equ	0xFE6
 13524                           fsr1h	equ	0xFE2
 13525                           fsr1l	equ	0xFE1
 13526                           bsr	equ	0xFE0
 13527                           indf2	equ	0xFDF
 13528                           postinc2	equ	0xFDE
 13529                           postdec2	equ	0xFDD
 13530                           fsr2h	equ	0xFDA
 13531                           fsr2l	equ	0xFD9
 13532                           status	equ	0xFD8
 13533                           
 13534 ;; *************** function _UltrasoundISR *****************
 13535 ;; Defined at:
 13536 ;;		line 17 in file "Ultrasound.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;		None
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;		None
 13541 ;; Return value:  Size  Location     Type
 13542 ;;		None               void
 13543 ;; Registers used:
 13544 ;;		wreg, status,2, cstack
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13554 ;;Total ram usage:        0 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:    1
 13557 ;; This function calls:
 13558 ;;		_ReadTimer1
 13559 ;;		i2_WriteTimer1
 13560 ;; This function is called by:
 13561 ;;		_isrHP
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text111
 13566  001F3C                     __ptext111:
 13567                           	opt stack 0
 13568  001F3C                     _UltrasoundISR:
 13569                           	opt stack 18
 13570                           
 13571                           ;Ultrasound.c: 32: INTCON3bits.INT3IE = 0;
 13572                           
 13573                           ;incstack = 0
 13574  001F3C  9AF0               	bcf	intcon3,5,c	;volatile
 13575                           
 13576                           ;Ultrasound.c: 33: if(T1CONbits.TMR1ON == 0) {
 13577  001F3E  B0CD               	btfsc	4045,0,c	;volatile
 13578  001F40  D00A               	goto	i2l28
 13579                           
 13580                           ;Ultrasound.c: 34: T1CONbits.TMR1ON = 1;
 13581  001F42  80CD               	bsf	4045,0,c	;volatile
 13582                           
 13583                           ;Ultrasound.c: 35: WriteTimer1(0);
 13584  001F44  0E00               	movlw	0
 13585  001F46  6E45               	movwf	i2WriteTimer1@timer1+1,c
 13586  001F48  0E00               	movlw	0
 13587  001F4A  6E44               	movwf	i2WriteTimer1@timer1,c
 13588  001F4C  ECB8  F011         	call	i2_WriteTimer1	;wreg free
 13589                           
 13590                           ;Ultrasound.c: 36: INTCON2bits.INTEDG3 = 0;
 13591  001F50  96F1               	bcf	intcon2,3,c	;volatile
 13592                           
 13593                           ;Ultrasound.c: 37: INTCON3bits.INT3IE = 1;
 13594  001F52  8AF0               	bsf	intcon3,5,c	;volatile
 13595                           
 13596                           ;Ultrasound.c: 38: }
 13597  001F54  D00B               	goto	i2l6263
 13598  001F56                     i2l28:
 13599                           
 13600                           ;Ultrasound.c: 39: else {
 13601                           ;Ultrasound.c: 40: T1CONbits.TMR1ON = 0;
 13602  001F56  90CD               	bcf	4045,0,c	;volatile
 13603                           
 13604                           ;Ultrasound.c: 41: echo_time = ReadTimer1();
 13605  001F58  ECC1  F011         	call	_ReadTimer1	;wreg free
 13606  001F5C  C044  F00B         	movff	?_ReadTimer1,_echo_time	;volatile
 13607  001F60  C045  F00C         	movff	?_ReadTimer1+1,_echo_time+1	;volatile
 13608                           
 13609                           ;Ultrasound.c: 42: echo_acq_done = 1;
 13610  001F64  0E01               	movlw	1
 13611  001F66  6E1C               	movwf	_echo_acq_done,c
 13612                           
 13613                           ;Ultrasound.c: 43: INTCON3bits.INT3IE = 0;
 13614  001F68  9AF0               	bcf	intcon3,5,c	;volatile
 13615  001F6A  D000               	goto	i2l6263
 13616  001F6C                     i2l6263:
 13617                           
 13618                           ;Ultrasound.c: 44: }
 13619                           ;Ultrasound.c: 45: INTCON3bits.INT3IF = 0;
 13620  001F6C  94F0               	bcf	intcon3,2,c	;volatile
 13621  001F6E  0012               	return		;funcret
 13622  001F70                     __end_of_UltrasoundISR:
 13623                           	opt stack 0
 13624                           pclatu	equ	0xFFB
 13625                           pclath	equ	0xFFA
 13626                           tblptru	equ	0xFF8
 13627                           tblptrh	equ	0xFF7
 13628                           tblptrl	equ	0xFF6
 13629                           tablat	equ	0xFF5
 13630                           prodh	equ	0xFF4
 13631                           prodl	equ	0xFF3
 13632                           intcon	equ	0xFF2
 13633                           intcon2	equ	0xFF1
 13634                           intcon3	equ	0xFF0
 13635                           postinc0	equ	0xFEE
 13636                           fsr0h	equ	0xFEA
 13637                           fsr0l	equ	0xFE9
 13638                           wreg	equ	0xFE8
 13639                           postinc1	equ	0xFE6
 13640                           fsr1h	equ	0xFE2
 13641                           fsr1l	equ	0xFE1
 13642                           bsr	equ	0xFE0
 13643                           indf2	equ	0xFDF
 13644                           postinc2	equ	0xFDE
 13645                           postdec2	equ	0xFDD
 13646                           fsr2h	equ	0xFDA
 13647                           fsr2l	equ	0xFD9
 13648                           status	equ	0xFD8
 13649                           
 13650 ;; *************** function i2_WriteTimer1 *****************
 13651 ;; Defined at:
 13652 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;  timer1          2   25[COMRAM] unsigned int 
 13655 ;; Auto vars:     Size  Location     Type
 13656 ;;  WriteTimer1     2    0[BANK0 ] struct Timers
 13657 ;; Return value:  Size  Location     Type
 13658 ;;		None               void
 13659 ;; Registers used:
 13660 ;;		None
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;Total ram usage:        4 bytes
 13671 ;; Hardware stack levels used:    1
 13672 ;; This function calls:
 13673 ;;		Nothing
 13674 ;; This function is called by:
 13675 ;;		_UltrasoundISR
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           	psect	text112
 13680  002370                     __ptext112:
 13681                           	opt stack 0
 13682  002370                     i2_WriteTimer1:
 13683                           	opt stack 18
 13684                           
 13685                           ;incstack = 0
 13686  002370  C044  F0BE         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 13687  002374  C045  F0BF         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 13688  002378  C0BF  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 13689  00237C  C0BE  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 13690  002380  0012               	return		;funcret
 13691  002382                     __end_ofi2_WriteTimer1:
 13692                           	opt stack 0
 13693                           pclatu	equ	0xFFB
 13694                           pclath	equ	0xFFA
 13695                           tblptru	equ	0xFF8
 13696                           tblptrh	equ	0xFF7
 13697                           tblptrl	equ	0xFF6
 13698                           tablat	equ	0xFF5
 13699                           prodh	equ	0xFF4
 13700                           prodl	equ	0xFF3
 13701                           intcon	equ	0xFF2
 13702                           intcon2	equ	0xFF1
 13703                           intcon3	equ	0xFF0
 13704                           postinc0	equ	0xFEE
 13705                           fsr0h	equ	0xFEA
 13706                           fsr0l	equ	0xFE9
 13707                           wreg	equ	0xFE8
 13708                           postinc1	equ	0xFE6
 13709                           fsr1h	equ	0xFE2
 13710                           fsr1l	equ	0xFE1
 13711                           bsr	equ	0xFE0
 13712                           indf2	equ	0xFDF
 13713                           postinc2	equ	0xFDE
 13714                           postdec2	equ	0xFDD
 13715                           fsr2h	equ	0xFDA
 13716                           fsr2l	equ	0xFD9
 13717                           status	equ	0xFD8
 13718                           
 13719 ;; *************** function _ReadTimer1 *****************
 13720 ;; Defined at:
 13721 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1read.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;  timer           2    0[BANK0 ] struct Timers
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  2   25[COMRAM] unsigned int 
 13728 ;; Registers used:
 13729 ;;		None
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13738 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13739 ;;Total ram usage:        4 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_UltrasoundISR
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text113
 13749  002382                     __ptext113:
 13750                           	opt stack 0
 13751  002382                     _ReadTimer1:
 13752                           	opt stack 18
 13753                           
 13754                           ;incstack = 0
 13755  002382  CFCE F0BE          	movff	4046,ReadTimer1@timer	;volatile
 13756  002386  CFCF F0BF          	movff	4047,ReadTimer1@timer+1	;volatile
 13757  00238A  C0BE  F044         	movff	ReadTimer1@timer,?_ReadTimer1
 13758  00238E  C0BF  F045         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
 13759  002392  0012               	return		;funcret
 13760  002394                     __end_of_ReadTimer1:
 13761                           	opt stack 0
 13762                           pclatu	equ	0xFFB
 13763                           pclath	equ	0xFFA
 13764                           tblptru	equ	0xFF8
 13765                           tblptrh	equ	0xFF7
 13766                           tblptrl	equ	0xFF6
 13767                           tablat	equ	0xFF5
 13768                           prodh	equ	0xFF4
 13769                           prodl	equ	0xFF3
 13770                           intcon	equ	0xFF2
 13771                           intcon2	equ	0xFF1
 13772                           intcon3	equ	0xFF0
 13773                           postinc0	equ	0xFEE
 13774                           fsr0h	equ	0xFEA
 13775                           fsr0l	equ	0xFE9
 13776                           wreg	equ	0xFE8
 13777                           postinc1	equ	0xFE6
 13778                           fsr1h	equ	0xFE2
 13779                           fsr1l	equ	0xFE1
 13780                           bsr	equ	0xFE0
 13781                           indf2	equ	0xFDF
 13782                           postinc2	equ	0xFDE
 13783                           postdec2	equ	0xFDD
 13784                           fsr2h	equ	0xFDA
 13785                           fsr2l	equ	0xFD9
 13786                           status	equ	0xFD8
 13787                           
 13788 ;; *************** function _MillisecondTimerISR *****************
 13789 ;; Defined at:
 13790 ;;		line 55 in file "MillisecondTimer.c"
 13791 ;; Parameters:    Size  Location     Type
 13792 ;;		None
 13793 ;; Auto vars:     Size  Location     Type
 13794 ;;		None
 13795 ;; Return value:  Size  Location     Type
 13796 ;;		None               void
 13797 ;; Registers used:
 13798 ;;		wreg, status,2, status,0, cstack
 13799 ;; Tracked objects:
 13800 ;;		On entry : 0/0
 13801 ;;		On exit  : 0/0
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13808 ;;Total ram usage:        0 bytes
 13809 ;; Hardware stack levels used:    1
 13810 ;; Hardware stack levels required when called:    1
 13811 ;; This function calls:
 13812 ;;		i2_WriteTimer0
 13813 ;; This function is called by:
 13814 ;;		_isrHP
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817                           
 13818                           	psect	text114
 13819  002254                     __ptext114:
 13820                           	opt stack 0
 13821  002254                     _MillisecondTimerISR:
 13822                           	opt stack 18
 13823                           
 13824                           ;MillisecondTimer.c: 57: WriteTimer0(63036);
 13825                           
 13826                           ;incstack = 0
 13827  002254  0EF6               	movlw	246
 13828  002256  6E45               	movwf	i2WriteTimer0@timer0+1,c
 13829  002258  0E3C               	movlw	60
 13830  00225A  6E44               	movwf	i2WriteTimer0@timer0,c
 13831  00225C  ECCA  F011         	call	i2_WriteTimer0	;wreg free
 13832                           
 13833                           ;MillisecondTimer.c: 58: millisecond_COUNT0++;
 13834  002260  4A0D               	infsnz	_millisecond_COUNT0,f,c	;volatile
 13835  002262  2A0E               	incf	_millisecond_COUNT0+1,f,c	;volatile
 13836                           
 13837                           ;MillisecondTimer.c: 59: millisecond_COUNT1++;
 13838  002264  4A0F               	infsnz	_millisecond_COUNT1,f,c	;volatile
 13839  002266  2A10               	incf	_millisecond_COUNT1+1,f,c	;volatile
 13840                           
 13841                           ;MillisecondTimer.c: 60: millisecond_COUNT2++;
 13842  002268  4A11               	infsnz	_millisecond_COUNT2,f,c	;volatile
 13843  00226A  2A12               	incf	_millisecond_COUNT2+1,f,c	;volatile
 13844                           
 13845                           ;MillisecondTimer.c: 61: millisecond_COUNT3++;
 13846  00226C  4A13               	infsnz	_millisecond_COUNT3,f,c	;volatile
 13847  00226E  2A14               	incf	_millisecond_COUNT3+1,f,c	;volatile
 13848  002270  0012               	return		;funcret
 13849  002272                     __end_of_MillisecondTimerISR:
 13850                           	opt stack 0
 13851                           pclatu	equ	0xFFB
 13852                           pclath	equ	0xFFA
 13853                           tblptru	equ	0xFF8
 13854                           tblptrh	equ	0xFF7
 13855                           tblptrl	equ	0xFF6
 13856                           tablat	equ	0xFF5
 13857                           prodh	equ	0xFF4
 13858                           prodl	equ	0xFF3
 13859                           intcon	equ	0xFF2
 13860                           intcon2	equ	0xFF1
 13861                           intcon3	equ	0xFF0
 13862                           postinc0	equ	0xFEE
 13863                           fsr0h	equ	0xFEA
 13864                           fsr0l	equ	0xFE9
 13865                           wreg	equ	0xFE8
 13866                           postinc1	equ	0xFE6
 13867                           fsr1h	equ	0xFE2
 13868                           fsr1l	equ	0xFE1
 13869                           bsr	equ	0xFE0
 13870                           indf2	equ	0xFDF
 13871                           postinc2	equ	0xFDE
 13872                           postdec2	equ	0xFDD
 13873                           fsr2h	equ	0xFDA
 13874                           fsr2l	equ	0xFD9
 13875                           status	equ	0xFD8
 13876                           
 13877 ;; *************** function i2_WriteTimer0 *****************
 13878 ;; Defined at:
 13879 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 13880 ;; Parameters:    Size  Location     Type
 13881 ;;  timer0          2   25[COMRAM] unsigned int 
 13882 ;; Auto vars:     Size  Location     Type
 13883 ;;  WriteTimer0     2    0[BANK0 ] struct Timers
 13884 ;; Return value:  Size  Location     Type
 13885 ;;		None               void
 13886 ;; Registers used:
 13887 ;;		None
 13888 ;; Tracked objects:
 13889 ;;		On entry : 0/0
 13890 ;;		On exit  : 0/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13896 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13897 ;;Total ram usage:        4 bytes
 13898 ;; Hardware stack levels used:    1
 13899 ;; This function calls:
 13900 ;;		Nothing
 13901 ;; This function is called by:
 13902 ;;		_MillisecondTimerISR
 13903 ;; This function uses a non-reentrant model
 13904 ;;
 13905                           
 13906                           	psect	text115
 13907  002394                     __ptext115:
 13908                           	opt stack 0
 13909  002394                     i2_WriteTimer0:
 13910                           	opt stack 18
 13911                           
 13912                           ;incstack = 0
 13913  002394  C044  F0BE         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 13914  002398  C045  F0BF         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 13915  00239C  C0BF  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 13916  0023A0  C0BE  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 13917  0023A4  0012               	return		;funcret
 13918  0023A6                     __end_ofi2_WriteTimer0:
 13919                           	opt stack 0
 13920  0000                     pclatu	equ	0xFFB
 13921                           pclath	equ	0xFFA
 13922                           tblptru	equ	0xFF8
 13923                           tblptrh	equ	0xFF7
 13924                           tblptrl	equ	0xFF6
 13925                           tablat	equ	0xFF5
 13926                           prodh	equ	0xFF4
 13927                           prodl	equ	0xFF3
 13928                           intcon	equ	0xFF2
 13929                           intcon2	equ	0xFF1
 13930                           intcon3	equ	0xFF0
 13931                           postinc0	equ	0xFEE
 13932                           fsr0h	equ	0xFEA
 13933                           fsr0l	equ	0xFE9
 13934                           wreg	equ	0xFE8
 13935                           postinc1	equ	0xFE6
 13936                           fsr1h	equ	0xFE2
 13937                           fsr1l	equ	0xFE1
 13938                           bsr	equ	0xFE0
 13939                           indf2	equ	0xFDF
 13940                           postinc2	equ	0xFDE
 13941                           postdec2	equ	0xFDD
 13942                           fsr2h	equ	0xFDA
 13943                           fsr2l	equ	0xFD9
 13944                           status	equ	0xFD8
 13945                           pclatu	equ	0xFFB
 13946                           pclath	equ	0xFFA
 13947                           tblptru	equ	0xFF8
 13948                           tblptrh	equ	0xFF7
 13949                           tblptrl	equ	0xFF6
 13950                           tablat	equ	0xFF5
 13951                           prodh	equ	0xFF4
 13952                           prodl	equ	0xFF3
 13953                           intcon	equ	0xFF2
 13954                           intcon2	equ	0xFF1
 13955                           intcon3	equ	0xFF0
 13956                           postinc0	equ	0xFEE
 13957                           fsr0h	equ	0xFEA
 13958                           fsr0l	equ	0xFE9
 13959                           wreg	equ	0xFE8
 13960                           postinc1	equ	0xFE6
 13961                           fsr1h	equ	0xFE2
 13962                           fsr1l	equ	0xFE1
 13963                           bsr	equ	0xFE0
 13964                           indf2	equ	0xFDF
 13965                           postinc2	equ	0xFDE
 13966                           postdec2	equ	0xFDD
 13967                           fsr2h	equ	0xFDA
 13968                           fsr2l	equ	0xFD9
 13969                           status	equ	0xFD8
 13970                           
 13971                           	psect	rparam
 13972  0000                     pclatu	equ	0xFFB
 13973                           pclath	equ	0xFFA
 13974                           tblptru	equ	0xFF8
 13975                           tblptrh	equ	0xFF7
 13976                           tblptrl	equ	0xFF6
 13977                           tablat	equ	0xFF5
 13978                           prodh	equ	0xFF4
 13979                           prodl	equ	0xFF3
 13980                           intcon	equ	0xFF2
 13981                           intcon2	equ	0xFF1
 13982                           intcon3	equ	0xFF0
 13983                           postinc0	equ	0xFEE
 13984                           fsr0h	equ	0xFEA
 13985                           fsr0l	equ	0xFE9
 13986                           wreg	equ	0xFE8
 13987                           postinc1	equ	0xFE6
 13988                           fsr1h	equ	0xFE2
 13989                           fsr1l	equ	0xFE1
 13990                           bsr	equ	0xFE0
 13991                           indf2	equ	0xFDF
 13992                           postinc2	equ	0xFDE
 13993                           postdec2	equ	0xFDD
 13994                           fsr2h	equ	0xFDA
 13995                           fsr2l	equ	0xFD9
 13996                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         136
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      69
    BANK0           160     40     140
    BANK1           256     43      43
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    main@battery_current_acc_ptr	PTR unsigned long  size(2) Largest target is 4
		 -> main@battery_current_acc(BANK1[4]), 

    main@battery_current_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_current(BANK1[2]), 

    main@battery_voltage_ptr	PTR unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    main@PID_set_point_ptr	PTR int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    main@PID_error_ptr	PTR int  size(2) Largest target is 2
		 -> PID_error(BANK0[2]), 

    main@sensor_sum_ptr	PTR int  size(2) Largest target is 2
		 -> main@sensor_sum(BANK1[2]), 

    main@sensor_threshold_ptr	PTR int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    main@line_mode_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 

    CalibrateThreshold@sensor_threshold_temp_ptr	PTR int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), 

    DisplaySensorStatuses@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSumDiscrete@sensor_statuses	PTR const unsigned char  size(2) Largest target is 5
		 -> sensor_statuses(COMRAM[5]), 

    CalculateSensorSum@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    CalculateSensorStatuses@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> CalibrateThreshold@sensor_threshold_temp(BANK0[2]), sensor_threshold(BANK0[2]), 

    CalculateSensorStatuses@sensor_readings_normalised	PTR const int  size(2) Largest target is 10
		 -> sensor_readings_normalised(BANK0[10]), 

    NormaliseSensorReadings@sensor_offsets	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    NormaliseSensorReadings@sensor_readings_raw	PTR  int  size(2) Largest target is 10
		 -> sensor_readings_raw(BANK0[10]), 

    SendPIDSetPointOnLine@set_point	PTR const int  size(2) Largest target is 2
		 -> PID_set_point(BANK0[2]), 

    SendBattVoltageInitial@reading	PTR const unsigned int  size(2) Largest target is 2
		 -> main@battery_voltage(BANK1[2]), 

    SendThreshold@sensor_threshold	PTR const int  size(2) Largest target is 2
		 -> sensor_threshold(BANK0[2]), 

    SendOffsets@offsets_array	PTR const int  size(2) Largest target is 10
		 -> sensor_offsets(BANK0[10]), 

    SendLineMode@line_mode	PTR const unsigned char  size(2) Largest target is 1
		 -> line_mode(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in COMRAM

    i1_SetADCChannel->i1_SetChanADC
    _WirelessTx_ISR->_GetCharTxBuf
    _GetCharTxBuf->i1___awmod

Critical Paths under _main in BANK0

    _main->_LoadCalibration
    _StopMotors->_SetDCMotorL
    _StopMotors->_SetDCMotorR
    _SetDCMotorPID->_SetDCMotorL
    _SetDCMotorPID->_SetDCMotorR
    _SetDCMotorR->_SetDCPWM4
    _SetDCMotorL->_SetDCPWM5
    _SendThreshold->_PutCharTxBuf
    _SendStoredPIDValues->_PutCharTxBuf
    _SendPIDSetPointOnLine->_PutCharTxBuf
    _SendOffsets->_PutCharTxBuf
    _SendLineMode->_PutCharTxBuf
    _SendDefaultPIDValues->_PutCharTxBuf
    _SendCurrentPIDValues->_PutCharTxBuf
    _SendBattVoltageInitial->_PutCharTxBuf
    _ResetAccumulatedCurrent->_OWWriteByte
    _ReadVoltage->_OWReadByte
    _ReadVoltage->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWReadByte->_OWReadBit
    _LoadPIDValues->_SetPIDValues
    _SetPIDValues->_SendStatus
    _PutCharRxBuf->___awmod
    _GetCharRxBuf->___awmod
    _PB2pressed->_ReadMillis2
    _LoadCalibration->_GenerateCalibration
    _ReadIntEEPROM->_ReadEEPROM
    _ReadCharEEPROM->_ReadEEPROM
    _GenerateCalibration->_CalibrateThreshold
    _WriteIntEEPROM->_WriteEEPROM
    _WriteCharEEPROM->_WriteEEPROM
    _FlashLEDS->_Delay10KTCYx
    _CalibrateThreshold->_CalculateSensorStatuses
    _CalibrateOnLine->_CalculateSensorSum
    _CalculateSensorSum->___wmul
    _CalibrateOffsets->_SendStatus
    _SendStatus->_PutCharTxBuf
    _PutCharTxBuf->___awmod
    _PB1pressed->_ReadMillis2
    _GetCommand->_Read1USART
    _GetSensorReadings->_SetADCChannel
    _SetADCChannel->_SetChanADC
    _GetDistance->_Delay1TCYx
    _ConfigureWireless->_Open1USART
    _ConfigureUltrasound->_WriteTimer1
    _ConfigureTimer2->_OpenTimer3
    _ConfigureTimer1->_WriteTimer1
    _ConfigureTimer0->_WriteTimer0
    _ConfigurePWM->_OpenPWM4
    _ConfigurePWM->_OpenPWM5
    _ConfigureADC->_OpenADC

Critical Paths under _isrHP in BANK0

    _UltrasoundISR->_ReadTimer1
    _UltrasoundISR->i2_WriteTimer1
    _MillisecondTimerISR->i2_WriteTimer0

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   67755
                                             36 BANK0      4     4      0
                                              0 BANK1     43    43      0
                    _BusyDistanceAcq
                      _BusySensorAcq
            _CalculateSensorStatuses
                 _CalculateSensorSum
         _CalculateSensorSumDiscrete
                   _CommandAvailable
                       _ConfigureADC
                   _ConfigureBuggyIO
                _ConfigureInterrupts
                       _ConfigurePWM
                    _ConfigureTimer0
                    _ConfigureTimer1
                    _ConfigureTimer2
                _ConfigureUltrasound
                  _ConfigureWireless
                       _Delay10KTCYx
                      _DisableMotors
              _DisplaySensorStatuses
                       _EnableMotors
                   _EnableSensorLEDS
                          _FlashLEDS
                _GenerateCalibration
                         _GetCommand
                        _GetDistance
                  _GetSensorReadings
                    _LoadCalibration
                      _LoadPIDValues
            _NormaliseSensorReadings
                         _PB1pressed
                         _PB2pressed
                     _ReadEchoLength
                      _ReadIntEEPROM
                        _ReadMillis0
                        _ReadMillis1
                        _ReadMillis2
                        _ReadVoltage
            _ResetAccumulatedCurrent
                       _ResetMillis0
                       _ResetMillis1
                       _ResetMillis2
                       _ResetMillis3
             _SendBattVoltageInitial
               _SendCurrentPIDValues
               _SendDefaultPIDValues
                       _SendLineMode
                        _SendOffsets
              _SendPIDSetPointOnLine
                         _SendStatus
                _SendStoredPIDValues
                      _SendThreshold
                        _SetDCMotorL
                      _SetDCMotorPID
                        _SetDCMotorR
                _SetDirectionForward
                  _SetForwardsMotorR
                       _SetPIDValues
                   _SetReverseMotorL
                        _SetUnipolar
                         _StopMotors
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     575
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _StopMotors                                           0     0      0    1300
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (1) _SetUnipolar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetReverseMotorL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetForwardsMotorR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDirectionForward                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCMotorPID                                        4     2      2    1520
                                             24 BANK0      4     2      2
                        _SetDCMotorL
                        _SetDCMotorR
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorR                                          2     0      2     650
                                             22 BANK0      2     0      2
                          _SetDCPWM4
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM4                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _SetDCMotorL                                          2     0      2     650
                                             22 BANK0      2     0      2
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM5                                            6     4      2     164
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SendThreshold                                        4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendStoredPIDValues                                  6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendPIDSetPointOnLine                                4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendOffsets                                          5     3      2    1270
                                             24 BANK0      5     3      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendLineMode                                         2     0      2    1109
                                             24 BANK0      2     0      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendDefaultPIDValues                                 6     0      6    1394
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendCurrentPIDValues                                 6     0      6    1589
                                             24 BANK0      6     0      6
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _SendBattVoltageInitial                               4     2      2    1140
                                             24 BANK0      4     2      2
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (1) _ResetMillis3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetMillis0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetAccumulatedCurrent                              0     0      0     170
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          7     5      2     352
                                             19 BANK0      7     5      2
                         _OWReadByte
                            _OWReset
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          2     2      0     133
                                             17 BANK0      2     2      0
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReset                                              1     1      0      37
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           2     2      0     142
                                             17 BANK0      2     2      0
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis1                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadMillis0                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadEchoLength                                       2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadPIDValues                                        0     0      0   11417
                         _PB1pressed
                         _PB2pressed
                     _ReadCharEEPROM
                      _ReadIntEEPROM
                         _SendStatus
                       _SetPIDValues
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _SetPIDValues                                         4     4      0    5850
                                             25 BANK0      4     4      0
                         _FlushRxBuf
                       _GetCharRxBuf
                       _PutCharRxBuf
                         _Read1USART
                         _SendStatus
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _PutCharRxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _GetCharRxBuf                                         2     2      0     917
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _PB2pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _LoadCalibration                                      3     3      0   13137
                                             33 BANK0      3     3      0
                _GenerateCalibration
                     _ReadCharEEPROM
                      _ReadIntEEPROM
 ---------------------------------------------------------------------------------
 (1) _ReadIntEEPROM                                        7     5      2    1167
                                             18 BANK0      7     5      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadCharEEPROM                                       2     0      2     514
                                             18 BANK0      2     0      2
                         _ReadEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           2     0      2     288
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GenerateCalibration                                  3     3      0   11326
                                             30 BANK0      3     3      0
                   _CalibrateOffsets
                    _CalibrateOnLine
                 _CalibrateThreshold
                          _FlashLEDS
                    _WriteCharEEPROM
                     _WriteIntEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteIntEEPROM                                       4     0      4    1808
                                             19 BANK0      4     0      4
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (2) _WriteCharEEPROM                                      3     0      3     966
                                             19 BANK0      3     0      3
                        _WriteEEPROM
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM                                          3     0      3     514
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _FlashLEDS                                            0     0      0      31
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _CalibrateThreshold                                   4     4      0    3762
                                             26 BANK0      4     4      0
                            _BusyADC
                      _BusySensorAcq
            _CalculateSensorStatuses
                         _ConvertADC
              _DisplaySensorStatuses
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                            _ReadADC
                         _SendStatus
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _ReadADC                                              4     2      2       0
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _DisplaySensorStatuses                                5     3      2     356
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorStatuses                             10     6      4    1096
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CalibrateOnLine                                      0     0      0    3359
                      _BusySensorAcq
                 _CalculateSensorSum
                  _GetSensorReadings
            _NormaliseSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (1) _NormaliseSensorReadings                              9     5      4    1003
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _CalculateSensorSum                                   6     4      2    1216
                                             22 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     882
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _CalibrateOffsets                                     3     3      0    1270
                                             25 BANK0      3     3      0
                      _BusySensorAcq
                  _GetSensorReadings
                         _PB1pressed
                         _SendStatus
 ---------------------------------------------------------------------------------
 (2) _SendStatus                                           1     1      0    1044
                                             24 BANK0      1     1      0
                             _BusyTx
                         _FlushTxBuf
                       _PutCharTxBuf
                            _StartTx
 ---------------------------------------------------------------------------------
 (3) _StartTx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PutCharTxBuf                                         2     2      0     914
                                             22 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     883
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _BusyTx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PB1pressed                                           0     0      0      34
                   _CommandAvailable
                         _GetCommand
                        _ReadMillis2
                       _ResetMillis2
 ---------------------------------------------------------------------------------
 (1) _ResetMillis2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadMillis2                                          2     0      2       0
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _GetCommand                                           0     0      0      34
                         _Read1USART
 ---------------------------------------------------------------------------------
 (2) _Read1USART                                           1     1      0      34
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CommandAvailable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetSensorReadings                                    0     0      0      62
                         _ConvertADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (4) _SetADCChannel                                        1     1      0      62
                                             18 BANK0      1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (5) _SetChanADC                                           2     2      0      31
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BusySensorAcq                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetDistance                                          0     0      0      31
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableSensorLEDS                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableMotors                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisableMotors                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureWireless                                    0     0      0     573
                         _FlushRxBuf
                         _FlushTxBuf
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     375
                                             16 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FlushTxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FlushRxBuf                                           1     1      0      99
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureUltrasound                                  6     0      6     454
                                             20 BANK0      6     0      6
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer2                                      0     0      0      93
                         _OpenTimer3
 ---------------------------------------------------------------------------------
 (2) _OpenTimer3                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer1                                      0     0      0     355
                         _OpenTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     262
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimer0                                      0     0      0     259
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigurePWM                                         0     0      0     124
                           _OpenPWM4
                           _OpenPWM5
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM4                                             1     1      0      62
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureBuggyIO                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureADC                                         0     0      0     347
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     347
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _CalculateSensorSumDiscrete                           4     2      2     297
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _BusyDistanceAcq                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isrLP                                               17    17      0     437
                                              8 COMRAM    17    17      0
                     _WirelessTx_ISR
                       i1_ConvertADC
                          i1_ReadADC
                    i1_SetADCChannel
 ---------------------------------------------------------------------------------
 (8) i1_SetADCChannel                                      1     1      0      44
                                              2 COMRAM     1     1      0
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (9) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadADC                                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WirelessTx_ISR                                       0     0      0     393
                       _GetCharTxBuf
                        _Write1USART
 ---------------------------------------------------------------------------------
 (9) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _GetCharTxBuf                                         2     2      0     371
                                              6 COMRAM     2     2      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrHP                                              14    14      0     333
                                              2 BANK0     14    14      0
                _MillisecondTimerISR
                      _UltrasoundISR
 ---------------------------------------------------------------------------------
 (12) _UltrasoundISR                                       0     0      0     202
                         _ReadTimer1
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _ReadTimer1                                          4     2      2      71
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (12) _MillisecondTimerISR                                 0     0      0     131
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     131
                                             25 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyDistanceAcq
   _BusySensorAcq
   _CalculateSensorStatuses
   _CalculateSensorSum
     ___wmul
   _CalculateSensorSumDiscrete
   _CommandAvailable
   _ConfigureADC
     _OpenADC
   _ConfigureBuggyIO
   _ConfigureInterrupts
   _ConfigurePWM
     _OpenPWM4
     _OpenPWM5
   _ConfigureTimer0
     _OpenTimer0
     _WriteTimer0
   _ConfigureTimer1
     _OpenTimer1
     _WriteTimer1
   _ConfigureTimer2
     _OpenTimer3
   _ConfigureUltrasound
     _WriteTimer1
   _ConfigureWireless
     _FlushRxBuf
     _FlushTxBuf
     _Open1USART
   _Delay10KTCYx
   _DisableMotors
   _DisplaySensorStatuses
   _EnableMotors
   _EnableSensorLEDS
   _FlashLEDS
     _Delay10KTCYx
   _GenerateCalibration
     _CalibrateOffsets
       _BusySensorAcq
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateOnLine
       _BusySensorAcq
       _CalculateSensorSum
         ___wmul
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
     _CalibrateThreshold
       _BusyADC
       _BusySensorAcq
       _CalculateSensorStatuses
       _ConvertADC
       _DisplaySensorStatuses
       _GetSensorReadings
         _ConvertADC
         _SetADCChannel
           _SetChanADC
       _NormaliseSensorReadings
       _PB1pressed
         _CommandAvailable
         _GetCommand
           _Read1USART
         _ReadMillis2
         _ResetMillis2
       _ReadADC
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _SetADCChannel
         _SetChanADC
     _FlashLEDS
       _Delay10KTCYx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _GetCommand
     _Read1USART
   _GetDistance
     _Delay1TCYx
   _GetSensorReadings
     _ConvertADC
     _SetADCChannel
       _SetChanADC
   _LoadCalibration
     _GenerateCalibration
       _CalibrateOffsets
         _BusySensorAcq
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateOnLine
         _BusySensorAcq
         _CalculateSensorSum
           ___wmul
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
       _CalibrateThreshold
         _BusyADC
         _BusySensorAcq
         _CalculateSensorStatuses
         _ConvertADC
         _DisplaySensorStatuses
         _GetSensorReadings
           _ConvertADC
           _SetADCChannel
             _SetChanADC
         _NormaliseSensorReadings
         _PB1pressed
           _CommandAvailable
           _GetCommand
             _Read1USART
           _ReadMillis2
           _ResetMillis2
         _ReadADC
         _SendStatus
           _BusyTx
           _FlushTxBuf
           _PutCharTxBuf
             ___awmod
           _StartTx
         _SetADCChannel
           _SetChanADC
       _FlashLEDS
         _Delay10KTCYx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
   _LoadPIDValues
     _PB1pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _PB2pressed
       _CommandAvailable
       _GetCommand
         _Read1USART
       _ReadMillis2
       _ResetMillis2
     _ReadCharEEPROM
       _ReadEEPROM
     _ReadIntEEPROM
       _ReadEEPROM
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _SetPIDValues
       _FlushRxBuf
       _GetCharRxBuf
         ___awmod
       _PutCharRxBuf
         ___awmod
       _Read1USART
       _SendStatus
         _BusyTx
         _FlushTxBuf
         _PutCharTxBuf
           ___awmod
         _StartTx
       _WriteCharEEPROM
         _WriteEEPROM
       _WriteIntEEPROM
         _WriteEEPROM
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _NormaliseSensorReadings
   _PB1pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _PB2pressed
     _CommandAvailable
     _GetCommand
       _Read1USART
     _ReadMillis2
     _ResetMillis2
   _ReadEchoLength
   _ReadIntEEPROM
     _ReadEEPROM
   _ReadMillis0
   _ReadMillis1
   _ReadMillis2
   _ReadVoltage
     _OWReadByte
       _OWReadBit
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetAccumulatedCurrent
     _OWReset
     _OWWriteByte
       _OWWriteBit
   _ResetMillis0
   _ResetMillis1
   _ResetMillis2
   _ResetMillis3
   _SendBattVoltageInitial
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendCurrentPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendDefaultPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendLineMode
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendOffsets
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendPIDSetPointOnLine
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStatus
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendStoredPIDValues
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SendThreshold
     _BusyTx
     _FlushTxBuf
     _PutCharTxBuf
       ___awmod
     _StartTx
   _SetDCMotorL
     _SetDCPWM5
   _SetDCMotorPID
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   _SetDCMotorR
     _SetDCPWM4
   _SetDirectionForward
   _SetForwardsMotorR
   _SetPIDValues
     _FlushRxBuf
     _GetCharRxBuf
       ___awmod
     _PutCharRxBuf
       ___awmod
     _Read1USART
     _SendStatus
       _BusyTx
       _FlushTxBuf
       _PutCharTxBuf
         ___awmod
       _StartTx
     _WriteCharEEPROM
       _WriteEEPROM
     _WriteIntEEPROM
       _WriteEEPROM
   _SetReverseMotorL
   _SetUnipolar
   _StopMotors
     _SetDCMotorL
       _SetDCPWM5
     _SetDCMotorR
       _SetDCPWM4
   ___awdiv
   ___wmul

 _isrLP (ROOT)
   _WirelessTx_ISR
     _GetCharTxBuf
       i1___awmod
     _Write1USART
   i1_ConvertADC
   i1_ReadADC
   i1_SetADCChannel
     i1_SetChanADC

 _isrHP (ROOT)
   _MillisecondTimerISR
     i2_WriteTimer0
   _UltrasoundISR
     _ReadTimer1
     i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2B      2B       7       16.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      8C       5       87.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      45       1       72.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC      32        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 28 11:50:38 2017

                             __size_of_WriteEEPROM 0040                                __end_of_OWWriteByte 205C  
                             __end_of_GetCharRxBuf 1B80                               __end_of_GetCharTxBuf 1E9C  
                                               l36 23F4                                       ___awdiv@sign 00D3  
                              WriteCharEEPROM@data 00D3                                                 bsr 000FE0  
                              ___wmul@multiplicand 00D0                                        __CFG_BORV$0 000000  
                       __end_of_CalculateSensorSum 0BC6                                  main@line_end_flag 0109  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                      __CFG_OSC$HS 000000                                       __CFG_CP4$OFF 000000  
                                     __CFG_CP5$OFF 000000                                __end_of_GetDistance 22D0  
                                     __CFG_CP6$OFF 000000                                       __CFG_CP7$OFF 000000  
                             LoadCalibration@index 00E1                                                l213 1C9A  
                                              l214 1CCA                                                l223 206A  
                                              l216 1CBE                                                l224 2086  
                                              l240 23B4                                                l128 122A  
                                              l226 207E                                                l324 23C4  
                                              l237 1A86                                                l461 24AA  
                                              l286 1B7E                                                l552 1D6A  
                                              l458 243C                                                l554 1D80  
                                              l562 205A                                                l475 18FE  
                                              l804 1602                                                l821 0BC4  
                                              l557 2002                                                l549 1DF2  
                                              l831 1B38                                                l567 1E1E  
                                              l487 202E                                                l568 1E2A  
                                              l826 1D0A                                                l818 0ACC  
                                              l843 1AA8                                                l915 101E  
                                              l923 08A2                                                l860 1A28  
                                              l845 1AE4                                                l918 088C  
                                              l863 19F6                                                l943 0CBA  
                                              l848 1AB2                                                l793 0DA8  
                                              l881 13FC                                                l858 19EC  
                                              l799 23D4                                       __CFG_CPB$OFF 000000  
                                              _PR2 000FCB                                                _PR4 000F77  
                                     __CFG_CPD$OFF 000000                      __size_of_SendCurrentPIDValues 006A  
                           __size_of_SetDCMotorPID 00A8                               __size_of_WriteTimer0 0012  
                             __size_of_WriteTimer1 0012                              CalibrateOffsets@index 00D9  
                                       _OWReadByte 1DF4                                      _SetADCChannel 0CBC  
                                     ___awmod@sign 00D3                                                prod 000FF3  
                             ?_SendStoredPIDValues 00D6                                                wreg 000FE8  
                                       _TXSTA1bits 000FAC                                       __CFG_MODE$MC 000000  
                        ??_CalculateSensorStatuses 00D2                                        ?_PB1pressed 002B  
                                  ReadTimer1@timer 00BE                                      main@Kd_stored 0124  
                                main@line_mode_ptr 0111                                        ?_PB2pressed 002B  
                                     __CFG_LVP$OFF 000000                                         _Delay1TCYx 23D6  
                                     __CFG_WDT$OFF 000000                                               l1130 2148  
                                             l1051 167C                                               l1107 2164  
                                             l1212 1434                                               l1221 1482  
                                             l1029 242E                                               l1230 2112  
                                             l1216 1456                                               l1081 218C  
                                             l1129 2146                                               l1153 1F1E  
                                             l1218 1464                                               l1234 2124  
                                             l1083 2196                                               l1155 1F36  
                                             l1219 1466                                               l1059 2324  
                                             l1156 1F38                                               l1248 1E62  
                                             l1441 0F62                                               l1186 1FC2  
                                             l1187 1FC4                                               l1188 1FCE  
                                             l1189 1FD0                                               l1454 10D2  
                                             l1480 23E4                                               l1473 2216  
                                             l1478 23DA                                               l6031 2044  
                                             l6041 1E00                                               l6131 216E  
                                             l6019 1DE4                                               l6027 203A  
                                             l7011 07B2                                               l7003 0792  
                                             l5501 1064                                               l6053 1E24  
                                             l6045 1E0A                                               l5503 1072  
                                             l6215 0896                                               l7023 07EE  
                                             l7015 07C6                                               l5505 107C  
                                             l5513 10B2                                               l6225 08B6  
                                             l7017 07CE                                               l6075 1F22  
                                             l6227 08C4                                               l6403 182E  
                                             l5517 10C8                                               l5509 10A2  
                                             l6501 0FA2                                               l6413 1902  
                                             l6341 1D0E                                               l5535 1EA2  
                                             l6191 10E8                                               l6175 1A1E  
                                             l6167 1A00                                               l6511 0BCE  
                                             l6407 1886                                               l6423 16EE  
                                             l5545 1EC8                                               l5561 0CC2  
                                             l6169 1A18                                               l6417 1958  
                                             l5539 1EAC                                               l5571 0CEA  
                                             l5563 0CCA                                               l5635 1D88  
                                             l5723 1AFA                                               l6187 10DE  
                                             l6507 0FF0                                               l6179 1A24  
                                             l6531 0C74                                               l6355 12F2  
                                             l6427 1748                                               l5581 0D12  
                                             l5573 0CF2                                               l5565 0CD2  
                                             l5493 103E                                               l6197 1132  
                                             l6525 0C50                                               l6437 18D8  
                                             l6365 1354                                               l6349 12D2  
                                             l6373 1682                                               l6293 1200  
                                             l6541 0EB2                                               l5591 0D3A  
                                             l5583 0D1A                                               l5575 0CFA  
                                             l5567 0CDA                                               l5655 158C  
                                             l5719 1AF0                                               l5911 1244  
                                             l6383 17C4                                               l6367 1362  
                                             l6359 12FC                                               l6473 1CD8  
                                             l5825 1ED8                                               l5585 0D22  
                                             l5577 0D02                                               l5569 0CE2  
                                             l5497 1050                                               l5673 09DE  
                                             l5921 126C                                               l5729 21FE  
                                             l6393 175A                                               l6377 16DC  
                                             l6289 11C4                                               l6553 0EE8  
                                             l6483 1D04                                               l5835 1EFE  
                                             l5587 0D2A                                               l5579 0D0A  
                                             l5595 0D42                                               l5763 1ADA  
                                             l5755 1ABC                                               l5659 1596  
                                             l5691 0A60                                               l5683 0A4A  
                                             l5915 1250                                               l6387 181C  
                                             l6555 0EF6                                               l6547 0ECA  
                                             l6803 0224                                               l6477 1CE2  
                                             l5829 1EE2                                               l5589 0D32  
                                             l5757 1AD4                                               l5677 0A2A  
                                             l5669 09D4                                               l6493 0F7E  
                                             l6397 17B2                                               l6573 0F58  
                                             l6565 0F32                                               l6557 0F00  
                                             l5767 1AE0                                               l5695 0AAC  
                                             l5687 0A56                                               l5679 0A42  
                                             l5881 139E                                               l5873 137E  
                                             l5697 0AC4                                               l5929 12BC  
                                             l6497 0F98                                               l6569 0F42  
                                             l6809 023A                                               l5971 1438  
                                             l5963 1420                                               l6827 02F2  
                                             l5885 13A8                                               l5877 138E  
                                             l6853 0354                                               l6845 0326  
                                             l6837 030C                                               l6781 01DC  
                                             l5983 145A                                               l5975 1442  
                                             l5967 142A                                               l5959 1414  
                                             l5895 1974                                               l6863 037C  
                                             l6847 0344                                               l6775 01CC  
                                             l6857 0362                                               l6785 01EE  
                                             l5979 144C                                               l5899 1984  
                                             l6963 067E                                               l6795 020E  
                                             l6965 0684                                               l6973 06D4  
                                             l6957 063E                                               l6893 0404  
                                             l6991 0726                                               l6983 070A  
                                             l6985 0710                                               l6889 03FA  
                                             l6989 0720                                               l6999 077A  
                                             _LATE 000F8D                                               _LATJ 000F91  
                                             u5200 1A14                                               u5310 23F0  
                                             u6110 0584                                               u4520 23D0  
                                             u4460 23C0                                               u5340 11D8  
                                             u4710 1AD0                                               u4480 2438  
                                             u4730 242A                                               u6307 1D78  
                                             u6317 1DC8                                               u4654 1B26  
                                             u4655 1B20                                               u6327 1DD2  
                                             u6337 1DE6                                               u5545 18E6  
                                             u4745 1BCE                                               u6347 1FDA  
                                             u4755 1B8A                                               i2l28 1F56  
                                             u6357 1FE2                                               u6277 1D5C  
                                             u6367 1FF4                                               u6287 1D64  
                                             u6377 2206                                               u6297 1D70  
                                  _BusyDistanceAcq 23E6                                      main@Ki_stored 0126  
                        __size_of_ConfigureBuggyIO 001A                                     Read1USART@data 00CE  
                                             _main 00F0                           __end_of_EnableSensorLEDS 24C6  
                          _NormaliseSensorReadings 1586                             __end_of_WirelessTx_ISR 21BE  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr0l 000FE9                                               fsr2h 000FDA  
                                             fsr1l 000FE1                                               indf2 000FDF  
                                             fsr2l 000FD9                             __size_ofi2_WriteTimer0 0012  
                           __size_ofi2_WriteTimer1 0012                                               pclat 000FFA  
                          ??_SendPIDSetPointOnLine 00D8               DisplaySensorStatuses@sensor_statuses 00CE  
                                             prodh 000FF4                                               prodl 000FF3  
                                   _ReadCharEEPROM 23A6                                               start 00EC  
                                  __end_of_OWReset 1DF4                                         _OWWriteBit 1D48  
                                    __CFG_IESO$OFF 000000                                _ConfigureInterrupts 20D8  
                                    main@Kp_stored 0122                                      _BusySensorAcq 23C6  
                                    _ReadIntEEPROM 1A2A                               __end_of_EnableMotors 24D6  
                                    __CFG_MCLRE$ON 000000                                         _GetCommand 24A4  
                                     ___param_bank 000010                                    __end_of_BusyADC 2430  
                                  __end_of_ReadADC 2326                                      ??_ReadMillis0 00D0  
                                    ??_ReadMillis1 00D0                                      ??_ReadMillis2 00D0  
                                  __end_of_OpenADC 1680                                      ??_SetDCMotorL 00D6  
                                    ??_SetDCMotorR 00D6                              _DisplaySensorStatuses 1AE6  
                                    __CFG_WAIT$OFF 000000                                    __end_of_StartTx 24A4  
                                    ??_ReadVoltage 00D3                                     _ReadEchoLength 247E  
                                            ?_main 002B                                    __end_of___awdiv 0F64  
                                            _EEADR 000FA9                                    __end_of___awmod 10D4  
                                   PutCharRxBuf@ch 00D5                                              _T0CON 000FD5  
                                  ___awdiv@divisor 00D0                                              _T1CON 000FCD  
                                            _T3CON 000FB1                                              i1l303 21BC  
                                            i1l280 1E9A                                     ?_SetADCChannel 002B  
                                            i1l952 009A                                              i1l793 0E92  
                 __size_of_ResetAccumulatedCurrent 002C                                              i1l957 00A6  
                                  _CalibrateOnLine 1968                                              i2l946 1540  
                                  ___awdiv@counter 00D2                                              i2l949 154C  
                                    _UltrasoundISR 1F3C                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR3H 000FB3                                              _TMR1L 000FCE  
                                            _TMR3L 000FB2                                     PutCharTxBuf@ch 00D5  
                            ??_SendStoredPIDValues 00DC                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                            CalculateSensorSum@sum 00D8                                              _TRISG 000F98  
                                            _TRISJ 000F9A                               ?_ConfigureInterrupts 002B  
                            __size_of_Delay10KTCYx 001E                                      __CFG_PWRT$OFF 000000  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                      __CFG_WRT3$OFF 000000  
                                    __CFG_WRT4$OFF 000000                                      __CFG_WRT5$OFF 000000  
                                    __CFG_WRT6$OFF 000000                                      __CFG_WRT7$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                     __CFG_EBTR4$OFF 000000  
                                   __CFG_EBTR5$OFF 000000                                     __CFG_EBTR6$OFF 000000  
                                   __CFG_EBTR7$OFF 000000                             WriteCharEEPROM@address 00D1  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     i1___awmod@sign 0030  
          CalculateSensorStatuses@sensor_threshold 00D0                                     __CFG_EBTRB$OFF 000000  
                               __size_ofi1_ReadADC 0010                                              _isrHP 0008  
                                            _isrLP 0018                                         _Read1USART 2100  
                                       _ConvertADC 24CE                                    ??_LoadPIDValues 00DB  
                                   __CFG_BOREN$OFF 000000                                              tablat 000FF5  
                                       _ReadEEPROM 205C                             __end_of_ReadCharEEPROM 23B6  
                                            status 000FD8                              SendStoredPIDValues@Kd 00D8  
                            SendStoredPIDValues@Ki 00DA                              SendStoredPIDValues@Kp 00D6  
                                  ?_WirelessTx_ISR 002B                                 __size_ofi1___awmod 0082  
                                      _OWWriteByte 2030                                      _SetDCMotorPID 1184  
                                   ?_BusySensorAcq 002B                                     ?_ReadIntEEPROM 00D0  
                                    ?_SetPIDValues 002B                                         _FlushRxBuf 1ED2  
                                  _ConfigureTimer0 22D0                                    _ConfigureTimer1 228C  
                                  _ConfigureTimer2 24AC                                         _FlushTxBuf 1E9C  
                               __size_of_OWReadBit 0030                                    __initialization 21BE  
                                 ?_LoadCalibration 002B                                        _GetDistance 22BA  
                               main@sensor_sum_ptr 0100                                       __end_of_main 0880  
                                       _ReadTimer1 2382                                __size_of_PB1pressed 005E  
                              __size_of_PB2pressed 005E                                       _Delay10KTCYx 21FA  
                                    ??_SendOffsets 00D8                             __end_of_ReadEchoLength 2488  
                          __size_of_WriteIntEEPROM 0032                                   _CommandAvailable 2430  
                                       _Open1USART 13FE                                   __end_of_OpenPWM4 2198  
                                 __end_of_OpenPWM5 2172                                             ??_main 00E2  
                             __end_of_ConfigureADC 233A                                     ?_UltrasoundISR 002B  
                                    i2_WriteTimer0 2394                               __end_of_ConfigurePWM 244C  
                                    i2_WriteTimer1 2370                                      __activetblptr 000003  
                                ReadVoltage@result 00D6                                __end_of_ReadMillis0 247E  
                              __end_of_ReadMillis1 2474                                __end_of_ReadMillis2 249C  
                            ??_ConfigureInterrupts 00CE                                 __size_of_FlashLEDS 0028  
                                       _SetChanADC 2218                                _ConfigureUltrasound 20B0  
                                      ?_OWReadByte 002B                        __size_of_CalibrateThreshold 00A4  
                          __end_of_BusyDistanceAcq 23F6                                __end_of_SetDCMotorL 2422  
                              __end_of_SetDCMotorR 2414                                __end_of_ReadVoltage 1900  
                            __end_of_DisableMotors 24DA                                             _ADCON0 000FC2  
                                           _ADCON1 000FC1                                             _ADCON2 000FC0  
                                ReadEEPROM@address 00CE                                             ?_isrHP 002B  
                                           ?_isrLP 002B                                             _ADRESH 000FC4  
                                           _EEADRH 000FAA                                             _ADRESL 000FC3  
                                           _EEDATA 000FA8                                        ?_Delay1TCYx 002B  
                                    ??_SetUnipolar 00CE                                             _CCPR4L 000F74  
                                           _CCPR5L 000F71                                             _EECON2 000FA7  
                                 ___awdiv@dividend 00CE                                    i1_SetADCChannel 0DAA  
                        ??_NormaliseSensorReadings 00D2                                         _SendStatus 1D82  
                                           i1l1059 2404                                             i1l1454 1504  
                                           i1l4201 230C                                             i1l4141 14A8  
                                           i1l4161 14FA                                             i1l4153 14DE  
                                           i1l4145 14B6                                             i1l4137 149A  
                                           i1l5113 0092                                             i1l4147 14C0  
                                           i1l4149 14C8                                             i1l4157 14EA  
                                        ??_OWReset 00CE                                    __CFG_BBSIZ$BB2K 000000  
                                           i1l4901 0E06                                             i1l4903 0E0E  
                                           i1l4593 21B4                                             i1l4905 0E16  
                                           i1l4913 0E2E                                         _OpenTimer0 2126  
                                       _OpenTimer1 1F08                                             i1l4907 0E1E  
                                       _OpenTimer3 1FA2                                             i1l4909 0E26  
                                           i1l4881 0DB6                                             i1l4891 0DDE  
                                           i1l4883 0DBE                                             i1l4893 0DE6  
                                           i1l4885 0DC6                                             i1l4895 0DEE  
                                           i1l4887 0DCE                                             i1l4879 0DAE  
                                           i1l4897 0DF6                                             i1l4889 0DD6  
                                           i1l4899 0DFE                                             i2l6263 1F6C  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _PID_Kd 0092                                             _PID_Ki 0094  
                                           _PID_Kp 0096                           GenerateCalibration@index 00DE  
                                           _SPBRG1 000FAF                                    ?_ReadCharEEPROM 00D0  
                               __size_of_SetDCPWM4 0044                                 __size_of_SetDCPWM5 0044  
                                 _CalibrateOffsets 1372                                     ?_SetDCMotorPID 00D6  
                                        ??_BusyADC 00CE                                             _TXREG1 000FAD  
                                        ??_ReadADC 00D0                                             _TXSTA1 000FAC  
                             ?_ConfigureUltrasound 00D2                                _SetDirectionForward 24BA  
                                   ??_SetPIDValues 00D7                                        ?_OWWriteBit 002B  
                            __size_of_GetCharRxBuf 0046                                          ??_OpenADC 00D0  
                            __size_of_GetCharTxBuf 0038                         _sensor_readings_normalised 00A4  
                                           _BusyTx 23B6                                     __CFG_XINST$OFF 000000  
                                      ?_GetCommand 002B                                  ?_SetReverseMotorL 002B  
                                        ??_StartTx 00CE                                  __end_ofi1_ReadADC 2406  
                                           ___wmul 1E2C                                _sensor_readings_raw 00AE  
                                        ??___awdiv 00D2                             ?_DisplaySensorStatuses 00CE  
                                        ??___awmod 00D2                            __end_of_CalibrateOnLine 19CC  
                                 OpenTimer0@config 00CE                                 ??_SetReverseMotorL 00CE  
                                 OpenTimer1@config 00CE                                    ?_ReadEchoLength 00CE  
                           SendCurrentPIDValues@Kd 00D8                             SendCurrentPIDValues@Ki 00DA  
                           SendCurrentPIDValues@Kp 00D6                                             clear_0 21C4  
                                           clear_1 21D0                                   ___awdiv@quotient 00D4  
                                  ___awmod@divisor 00D0                                   OpenTimer3@config 00CE  
                                  ??_SetADCChannel 00D0                                     ?i2_WriteTimer0 0044  
                                   ?i2_WriteTimer1 0044                                    ___awmod@counter 00D2  
                            ReadCharEEPROM@address 00D0                                      ?_SendLineMode 00D6  
                         __size_of_WriteCharEEPROM 0012                                  __end_ofi1___awmod 1506  
                             ?_SetDirectionForward 002B                                __end_of_SendOffsets 1372  
                     ??_CalculateSensorSumDiscrete 00D0                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                __end_of_OWReadBit 2004                              WriteIntEEPROM@address 00D1  
                               main@find_line_flag 0108                                        ?_Read1USART 002B  
                                     _GetCharRxBuf 1B3A                                        ?_ConvertADC 002B  
                                     _GetCharTxBuf 1E64                            __end_of_ConfigureTimer0 22E6  
                          __end_of_ConfigureTimer1 22A4                            __end_of_ConfigureTimer2 24B4  
                                    main@stop_flag 011F                                   _ConfigureBuggyIO 2272  
                                      ?_ReadEEPROM 00CE                                         __accesstop 0060  
                          __end_of__initialization 21D6                              __size_of_EnableMotors 0004  
                                  ??_BusySensorAcq 00CE                                 _millisecond_COUNT0 000D  
                               _millisecond_COUNT1 000F                                 _millisecond_COUNT2 0011  
                               _millisecond_COUNT3 0013                                    ??_ReadIntEEPROM 00D2  
                                       _StopMotors 21DC                              ??_ConfigureUltrasound 00D8  
                         ??_SendBattVoltageInitial 00D8                      ConfigureUltrasound@echo_to_cm 00D2  
                    ConfigureUltrasound@echo_to_in 00D5                                      ___rparam_used 000001  
                              __end_of_SetUnipolar 24BA                                  __end_of_FlashLEDS 20B0  
                     __end_of_SendDefaultPIDValues 182C                                        ?_FlushRxBuf 002B  
                                      ?_FlushTxBuf 002B                                __size_of_OWReadByte 0038  
                                   __pcstackCOMRAM 002B                                        ?_ReadTimer1 0044  
                                      _ReadMillis0 2474                                        _ReadMillis1 246A  
                                      _ReadMillis2 2492                                      __end_of_isrHP 1586  
                                    __end_of_isrLP 00EC                                __size_of_Delay1TCYx 0010  
                                  ??_UltrasoundISR 0046                                        _SetDCMotorL 2414  
                                      _SetDCMotorR 2406                                     ??_SendLineMode 00D8  
                                      ?_Open1USART 00CE                            _ResetAccumulatedCurrent 2004  
                                __end_of_SetDCPWM4 1BC4                                  __end_of_SetDCPWM5 1C08  
                                      _ReadVoltage 1896                              ??_SetDirectionForward 00CE  
                                    ?_ResetMillis0 002B                                      ?_ResetMillis1 002B  
                                    ?_ResetMillis2 002B                                      ?_ResetMillis3 002B  
                              i1SetChanADC@channel 002C                                        ?_SetChanADC 002B  
                          __end_ofi1_SetADCChannel 0E94  CalculateSensorStatuses@sensor_readings_normalised 00CE  
                                  _sensor_acq_done 0022                        __end_of_MillisecondTimerISR 2272  
                             ReadIntEEPROM@address 00D0                       CalculateSensorStatuses@index 00D7  
                                 ?_BusyDistanceAcq 002B                                __size_of_OWWriteBit 003A  
                                     _EnableMotors 24D2                                       ??_PB1pressed 00D0  
                                     ??_PB2pressed 00D0                                __size_of_GetCommand 0008  
                                          ??_isrHP 00C0                                            ??_isrLP 0033  
                      __end_of_GenerateCalibration 1184                                 _CalculateSensorSum 0ACE  
                  CalculateSensorSumDiscrete@index 00D1                                        ?_SendStatus 002B  
                                       __pbssBANK0 0060                                    ??_SetDCMotorPID 00D8  
                                      ?_OpenTimer0 002B                                        ?_OpenTimer1 002B  
                                      ?_OpenTimer3 002B                                      ??_Write1USART 002B  
                     __end_of_SendCurrentPIDValues 1896                            main@battery_current_acc 010B  
                           __size_of_SendThreshold 006C                                  ?_EnableSensorLEDS 002B  
                          main@battery_current_ptr 0104                                      ??_WriteEEPROM 00D1  
                                        ?_OpenPWM4 002B                                          ?_OpenPWM5 002B  
                              ?_CalculateSensorSum 00D4                      CalculateSensorSumDiscrete@sum 00D0  
                                          ?_BusyTx 002B                     __size_of_SendPIDSetPointOnLine 006C  
                               ??_EnableSensorLEDS 00CE                      __end_of_SendPIDSetPointOnLine 1758  
                            __size_of_ConfigureADC 0014                                            ?___wmul 00CE  
                                      _RxCharacter 0015                              __size_of_ConfigurePWM 000E  
                                 ?_CalibrateOnLine 002B                                    ??i2_WriteTimer0 0046  
                                  ??i2_WriteTimer1 0046                                 __end_of_PB1pressed 1AE6  
                                   _WriteIntEEPROM 1F70                                  main@PID_error_ptr 0102  
                                          _CCP4CON 000F73                                            _CCP5CON 000F70  
                                 WriteTimer0@timer 00D0                                 __end_of_PB2pressed 1A2A  
                                      _SendOffsets 12D0                                   WriteTimer1@timer 00D0  
                                    ??_WriteTimer0 00D0                                      ??_WriteTimer1 00D0  
                              __size_of_Read1USART 0026                                __size_of_ConvertADC 0004  
                                  _sensor_statuses 0025                                      ?_PutCharRxBuf 002B  
                                 SendOffsets@index 00DA                                      ?_PutCharTxBuf 002B  
                                   ??_ResetMillis0 00CE                                     ??_ResetMillis1 00CE  
                                   ??_ResetMillis2 00CE                                     ??_ResetMillis3 00CE  
                              __size_of_ReadEEPROM 002C                               ??_CalculateSensorSum 00D6  
                                 Open1USART@config 00D0                             SetPIDValues@char_index 00DA  
                             __end_of_SetPIDValues 09C8                                __size_of_FlushRxBuf 0036  
                                          _SPBRGH1 000F7F                                __size_of_FlushTxBuf 0036  
                          main@sensor_sum_discrete 0128                                  ??_WriteCharEEPROM 00D4  
                                      _TxCharacter 0019                                   ??_WirelessTx_ISR 0033  
                                      _SetUnipolar 24B4                                __size_of_ReadTimer1 0012  
                                          _OWReset 1DBC                           __end_of_CommandAvailable 243E  
                           SetDCMotorPID@PIDoutput 00D6                                   ?_ConfigureTimer0 002B  
                                 ?_ConfigureTimer1 002B                                   ?_ConfigureTimer2 002B  
                                       _convert_cm 00E6                                         _convert_in 00E9  
                                      ?_StopMotors 002B                                __size_of_Open1USART 0086  
                                     ?_OWWriteByte 002B                                       _ConfigureADC 2326  
                                          _BusyADC 2422                                            _ReadADC 2312  
                                     _ConfigurePWM 243E                                i2WriteTimer0@timer0 0044  
                                       ??_OpenPWM4 00CE                                         ??_OpenPWM5 00CE  
                  __size_of_SendBattVoltageInitial 0068                                i2WriteTimer1@timer1 0044  
                                          _OpenADC 1604                                            __Hparam 0000  
                              __size_of_SetChanADC 001E                                    __size_of_BusyTx 0010  
                                          __Lparam 0000                                __end_of_Write1USART 2312  
                                     ?_GetDistance 002B                             __end_of_WriteIntEEPROM 1FA2  
                                          _StartTx 249C                                            ___awdiv 0E94  
                                          ___awmod 1020                                    __size_of___wmul 0038  
                        ??_ResetAccumulatedCurrent 00D1                                __end_of_WriteEEPROM 1CCC  
                                    ?i1_ConvertADC 002B          CalculateSensorSumDiscrete@sensor_statuses 00CE  
                                ReadIntEEPROM@data 00D5                        __end_of_SendStoredPIDValues 17C2  
                                   ??_PutCharRxBuf 00D4                                    __CFG_STVREN$OFF 000000  
                                   ??_PutCharTxBuf 00D4                                            __pcinit 21BE  
                               WriteEEPROM@address 00CE                                            __ramtop 1000  
                              __size_of_SendStatus 003A                                __size_of_OpenTimer0 0026  
                              __size_of_OpenTimer1 0034                                __size_of_OpenTimer3 0032  
                                          __ptext0 00F0                                            __ptext1 0E94  
                                          __ptext2 21DC                                            __ptext3 24B4  
                                          __ptext4 24C6                                            __ptext5 24CA  
                                          __ptext6 24BA                                            __ptext7 1184  
                                          __ptext8 2406                                            __ptext9 1B80  
                                     _get_Rx_index 001D                           __end_of_CalibrateOffsets 13FE  
                                    _SendThreshold 1680                                          _T0CONbits 000FD5  
                         ?_CalculateSensorStatuses 00CE                                          _T1CONbits 000FCD  
                                     _get_Tx_index 001E         NormaliseSensorReadings@sensor_readings_raw 00CE  
               __end_of_CalculateSensorSumDiscrete 1D0C                         _CalculateSensorSumDiscrete 1CCC  
                                     ??_OWReadByte 00CF                                          _T2CONbits 000FCA  
                                 ?i1_SetADCChannel 002B                                          _T3CONbits 000FB1  
                                 ___awmod@dividend 00CE                                          _T4CONbits 000F76  
                             _SendDefaultPIDValues 17C2                                __end_of_WriteTimer0 2370  
                              __end_of_WriteTimer1 235E                                   ??_ReadCharEEPROM 00D2  
                                     ??_Delay1TCYx 00CE                                     OpenADC@config2 00CE  
                                   __pintcode_body 1506                                  _GetSensorReadings 22A4  
                             end_of_initialization 21D6                                     main@sensor_sum 0120  
                                  FlushRxBuf@index 00CE                                 ?_GetSensorReadings 002B  
                            __end_of_LoadPIDValues 0CBC                               __end_of_SendLineMode 1D48  
                                          int_func 1506                                main@battery_current 010F  
                                    ?i1_SetChanADC 002B                                       ??_OWWriteBit 00CE  
     CalculateSensorSum@sensor_readings_normalised 00D4                            ??_DisplaySensorStatuses 00D0  
                                 ??_ReadEchoLength 00D0                                        _Rx_complete 0017  
                                     ??_GetCommand 00CF                                ??_GetSensorReadings 00D1  
                               __end_of_OWReadByte 1E2C                                    ?_WriteIntEEPROM 00D1  
                                          postdec2 000FDD                                main@battery_voltage 0119  
                                          postinc0 000FEE                                            postinc1 000FE6  
                                          postinc2 000FDE                                     ??i1_ConvertADC 002B  
                                        _PID_error 00B8                        __end_of_ConfigureInterrupts 2100  
                               __end_of_Delay1TCYx 23E6                                    FlushTxBuf@index 00CE  
                         __end_of_ConfigureBuggyIO 228C                                     ?_SendThreshold 00D6  
                       __end_of_CalibrateThreshold 12D0                                     GetCharRxBuf@ch 00D5  
                                        i1_ReadADC 23F6                                          _PORTBbits 000F81  
                                        _PORTHbits 000F87                           __size_of_LoadCalibration 00BC  
                                   GetCharTxBuf@ch 0032                             _SendBattVoltageInitial 1900  
                                _SetForwardsMotorR 24CA                               _SendCurrentPIDValues 182C  
                              __size_of_StopMotors 001E                              ?_SendDefaultPIDValues 00D6  
                                      _Tx_complete 001A                                          _TRISCbits 000F94  
                               ?_SetForwardsMotorR 002B                          __size_of_SetReverseMotorL 0004  
                                        _TRISGbits 000F98                                          _TRISHbits 000F99  
                                       main@D_temp 011B                                 __end_of_OWWriteBit 1D82  
                        __end_of_GetSensorReadings 22BA                                          i1___awmod 1484  
                                       main@I_temp 011D                             main@wall_detected_flag 0118  
                                     ??_Read1USART 00CE                                 __end_of_GetCommand 24AC  
                                     ??_ConvertADC 00CE                                          _OWReadBit 1FD4  
                              ??_SetForwardsMotorR 00CE                                       ??_ReadEEPROM 00D0  
                                      _Write1USART 22FC                                     ??i1_SetChanADC 002B  
                             __end_of_ResetMillis0 246A                               __end_of_ResetMillis1 2460  
                             __end_of_ResetMillis2 2492                               __end_of_ResetMillis3 2456  
                           i1SetADCChannel@channel 002D                                        _WriteEEPROM 1C8C  
                                     ??_FlushRxBuf 00CE                                       ??_FlushTxBuf 00CE  
            NormaliseSensorReadings@sensor_offsets 00D0                              SetDCMotorL@duty_cycle 00D4  
                                   __end_of_BusyTx 23C6                                  _ConfigureWireless 2236  
                                     ??_ReadTimer1 0046                                          _FlashLEDS 2088  
                                     ?_ReadMillis0 00CE                                       ?_ReadMillis1 00CE  
                                     ?_ReadMillis2 00CE                               _second_rollover_flag 0021  
                           __size_of_DisableMotors 0004                    __end_of_CalculateSensorStatuses 0ACE  
                               ?_ConfigureWireless 002B                                     __end_of___wmul 1E64  
                                     ?_SetDCMotorL 00D4                                       ?_SetDCMotorR 00D4  
                                     ??_Open1USART 00D0                              __size_of_SetPIDValues 0148  
                                      _WriteTimer0 235E                                        _WriteTimer1 234C  
                        __end_of_SetForwardsMotorR 24CE                                 __end_of_Read1USART 2126  
                                       ?i1_ReadADC 002B                                 __end_of_ConvertADC 24D2  
                                     ?_ReadVoltage 00D1                              ?_SendCurrentPIDValues 00D6  
                            __end_of_SetADCChannel 0DAA                                       ??_SetChanADC 00CE  
                               __end_of_ReadEEPROM 2088                            main@battery_voltage_ptr 0115  
                              ??_ConfigureWireless 00D1                                start_initialization 21BE  
                         ?_NormaliseSensorReadings 00CE                           main@sensor_threshold_ptr 0129  
                                        _SetDCPWM4 1B80                                          _SetDCPWM5 1BC4  
                                       ?i1___awmod 002B                                 __end_of_FlushRxBuf 1F08  
                               __end_of_FlushTxBuf 1ED2                                    SetDCPWM4@DCycle 00D2  
                      __end_of_ConfigureUltrasound 20D8                                    SetDCPWM5@DCycle 00D2  
                                     ??_SendStatus 00D6                                       ??_OpenTimer0 00CE  
                                     ??_OpenTimer1 00CE                                       ??_OpenTimer3 00CE  
                                       ?_OWReadBit 002B                                      _echo_acq_done 001C  
                               __end_of_ReadTimer1 2394                                   OWReadByte@result 00CF  
                             __end_of_PutCharRxBuf 1C4A                               __end_of_PutCharTxBuf 1C8C  
                                      _SystemClock 0001                                   _sensor_acq_index 0023  
                               __end_of_Open1USART 1484                              __end_of_BusySensorAcq 23D6  
                             SetADCChannel@channel 00D0                              __end_of_ReadIntEEPROM 1A88  
                        __end_of_ConfigureWireless 2254                                           ??_BusyTx 00CE  
                             __size_of_OWWriteByte 002C                                       _SetPIDValues 0880  
                               __end_of_SetChanADC 2236                                  __size_of_OpenPWM4 0026  
                                __size_of_OpenPWM5 0026                                           ??___wmul 00D2  
                                       ?_FlashLEDS 002B                        __end_of_SetDirectionForward 24C0  
                                  ??_SendThreshold 00D8                                 i1___awmod@dividend 002B  
                                 __CFG_LPT1OSC$OFF 000000                               __size_of_GetDistance 0016  
                                     ?_SendOffsets 00D6                                          _Rx_buffer 0060  
                                  _WriteCharEEPROM 233A                          __size_of_EnableSensorLEDS 0006  
                               __end_of_SendStatus 1DBC                              __end_of_UltrasoundISR 1F70  
                               __end_of_OpenTimer0 214C                                 __end_of_OpenTimer1 1F3C  
                               __end_of_OpenTimer3 1FD4                                       OWWriteByte@i 00D0  
                           ??_SendDefaultPIDValues 00DC                                          _Tx_buffer 0079  
                                      __pbssCOMRAM 0001                                      __pcstackBANK0 00BE  
                                    __pcstackBANK1 0100                                         ?_SetDCPWM4 00CE  
                                       ?_SetDCPWM5 00CE                         __size_of_GetSensorReadings 0016  
                            __size_of_SendLineMode 003C                                  ??_LoadCalibration 00DF  
                                    _PID_set_point 00BA                                      _DisableMotors 24D6  
                                     ?_SetUnipolar 002B                               __end_ofi1_ConvertADC 24DE  
                     __size_of_MillisecondTimerISR 001E                                           ?_OWReset 002B  
                                ?_CommandAvailable 002B                           __size_of_BusyDistanceAcq 0010  
                            __end_of_SetDCMotorPID 122C                                       ??_StopMotors 00D6  
                               WriteIntEEPROM@data 00D3                                           ?_BusyADC 002B  
                                         ?_ReadADC 00CE                                          __pnvBANK0 00E6  
                     __size_of_GenerateCalibration 00B0                                 ??_CommandAvailable 00CE  
                                OpenADC@portconfig 00CF                                           ?_OpenADC 00CE  
                                   _sensor_offsets 009A                                          _echo_time 000B  
                                __CFG_CCP2MX$PORTC 000000                                          __pintcode 0008  
                                  main@command_msg 0117                                           ?_StartTx 002B  
                                         ?___awdiv 00CE                                          __ptext100 23E6  
                                        __ptext102 0DAA                                          __ptext111 1F3C  
                                        __ptext103 22E6                                          __ptext112 2370  
                                        __ptext104 23F6                                          __ptext113 2382  
                                        __ptext105 24DA                                          __ptext114 2254  
                                        __ptext106 2198                                          __ptext115 2394  
                                        __ptext107 22FC                                          __ptext108 1E64  
                                        __ptext109 1484                                           ?___awmod 00CE  
                                      OWReadByte@i 00D0                              _SendPIDSetPointOnLine 16EC  
                                    ?_Delay10KTCYx 002B                        main@battery_current_acc_ptr 0106  
                                      __pintcodelo 0018                                    Open1USART@spbrg 00CE  
                       __size_of_SetForwardsMotorR 0004                             ??_SendCurrentPIDValues 00DC  
                            __end_ofi2_WriteTimer0 23A6                              __end_ofi2_WriteTimer1 2382  
                  __end_of_NormaliseSensorReadings 1604                                        ??i1_ReadADC 002D  
                                 _sensor_threshold 00BC                                       _SendLineMode 1D0C  
                                ?_CalibrateOffsets 002B                              SendLineMode@line_mode 00D6  
                                WriteTimer0@timer0 00CE                               __end_ofi1_SetChanADC 22FC  
                      __size_of_CalculateSensorSum 00F8                                  WriteTimer1@timer1 00CE  
                      ?_CalculateSensorSumDiscrete 00CE                                 i2WriteTimer0@timer 00BE  
                               __end_of_StopMotors 21FA                           __size_of_CalibrateOnLine 0064  
                               i2WriteTimer1@timer 00BE                                 ??_CalibrateOffsets 00D7  
                                 _SetReverseMotorL 24C6        CalibrateThreshold@sensor_threshold_temp_ptr 00D8  
                                      ??i1___awmod 002F                                     ?_DisableMotors 002B  
                                        _line_mode 002A                                     __size_of_isrHP 157E  
                                   __size_of_isrLP 00D4                                    Write1USART@data 002B  
                            __size_of_ResetMillis0 000A                              __size_of_ResetMillis1 000A  
                            __size_of_ResetMillis2 000A                              __size_of_ResetMillis3 000A  
                                  OWReadBit@result 00CE                                        ??_OWReadBit 00CE  
                 __size_of_CalculateSensorStatuses 0106                                     ___wmul@product 00D2  
                                    OpenADC@config 00D2                                           _LATDbits 000F8C  
                                         _LATEbits 000F8D                                           _LATHbits 000F90  
                                 ??_WriteIntEEPROM 00D5                                           _IPR1bits 000F9F  
                                         _PIE1bits 000F9D                                           _PIE2bits 000FA0  
                       __size_of_ConfigureWireless 001E                         DisplaySensorStatuses@index 00D2  
                      main@send_battery_stats_flag 010A                             SendDefaultPIDValues@Kd 00D8  
                           SendDefaultPIDValues@Ki 00DA                             SendDefaultPIDValues@Kp 00D6  
                                         _PIR1bits 000F9E                                           _PIR2bits 000FA1  
                                         _DCmotorL 0007                                           _DCmotorR 0009  
                            __CFG_DATABW$DATA16BIT 000000                            __end_of_WriteCharEEPROM 234C  
                   __size_of_DisplaySensorStatuses 0054                                           _RCONbits 000FD0  
                         __size_of_ConfigureTimer0 0016                           __size_of_ConfigureTimer1 0018  
                         __size_of_ConfigureTimer2 0008                      __end_of_DisplaySensorStatuses 1B3A  
                                 __CFG_WDTPS$32768 000000                                     ??_Delay10KTCYx 00CE  
                            SetDCMotorR@duty_cycle 00D4                                        ??_FlashLEDS 00D0  
                          ?_SendBattVoltageInitial 00D6                               __size_of_ReadMillis0 000A  
                             __size_of_ReadMillis1 000A                               __size_of_ReadMillis2 000A  
                                __CFG_ECCPMX$PORTH 000000                                         _ADCON0bits 000FC2  
                                ?_ConfigureBuggyIO 002B                                  ___wmul@multiplier 00CE  
                             __size_of_SetDCMotorL 000E                               __size_of_SetDCMotorR 000E  
                                     _ResetMillis0 2460                                       _ResetMillis1 2456  
                                     _ResetMillis2 2488                                       _ResetMillis3 244C  
                               ??_ConfigureBuggyIO 00CE                               __size_of_ReadVoltage 006A  
                     __size_of_SendStoredPIDValues 006A                                        ??_SetDCPWM4 00D0  
                                      ??_SetDCPWM5 00D0                                   Delay10KTCYx@unit 00CF  
                            __size_of_PutCharRxBuf 0042                              __size_of_PutCharTxBuf 0042  
                                      _INTCON2bits 000FF1                                      ?_GetCharRxBuf 002B  
                                      _INTCON3bits 000FF0                                      ?_GetCharTxBuf 002B  
                               _CalibrateThreshold 122C                           __size_ofi1_SetADCChannel 00EA  
                                 __size_of_OWReset 0038                                       ?_Write1USART 002B  
                                       _EECON1bits 000FA6                                           _OpenPWM4 2172  
                                         _OpenPWM5 214C                                       ?_WriteEEPROM 00CE  
                              ?_CalibrateThreshold 002B                                   __size_of_BusyADC 000E  
                                 __size_of_ReadADC 0014                                           __Hrparam 0000  
                         ?_ResetAccumulatedCurrent 002B                            __size_of_WirelessTx_ISR 0026  
                                 __size_of_OpenADC 007C                                           __Lrparam 0000  
                    SendThreshold@sensor_threshold 00D6                                  ??_BusyDistanceAcq 00CE  
                           ?_SendPIDSetPointOnLine 00D6                     __end_of_SendBattVoltageInitial 1968  
                                i1___awmod@divisor 002D                                        OWWriteBit@b 00CE  
                                i1___awmod@counter 002F                                   __size_of_StartTx 0008  
                                 __size_of___awdiv 00D0                                   __size_of___awmod 00B4  
                                     ?_WriteTimer0 00CE                                       ?_WriteTimer1 00CE  
                                 _EnableSensorLEDS 24C0                                       _PutCharRxBuf 1C08  
                                     _PutCharTxBuf 1C4A                               __size_of_SendOffsets 00A2  
                           __size_of_LoadPIDValues 00F6                                _system_clock_enable 0024  
                             ??_CalibrateThreshold 00D8                       __size_of_ConfigureInterrupts 0028  
                            __size_ofi1_ConvertADC 0004                                    ??_DisableMotors 00CE  
                                    ?_EnableMotors 002B                                 SetDCPWM4@dutycycle 00CE  
                                   OpenPWM4@period 00CE                                           __ptext10 2414  
                                         __ptext11 1BC4                                           __ptext20 244C  
                                         __ptext12 1680                                           __ptext21 2456  
                                         __ptext13 1758                                           __ptext30 246A  
                                         __ptext22 2460                                           __ptext14 16EC  
                                         __ptext31 2474                                           __ptext23 2004  
                                         __ptext15 12D0                                           __ptext40 23A6  
                                         __ptext32 247E                                           __ptext24 1896  
                                         __ptext16 1D0C                                           __ptext41 205C  
                                         __ptext33 0BC6                                           __ptext25 2030  
                                         __ptext17 17C2                                           __ptext50 1AE6  
                                         __ptext42 10D4                                           __ptext34 0880  
                                         __ptext26 1D48                                           __ptext18 182C  
                                         __ptext51 09C8                                           __ptext43 1F70  
                                         __ptext35 1C08                                           __ptext27 1DBC  
                                         __ptext19 1900                                           __ptext60 1C4A  
                                         __ptext52 2422                                           __ptext44 233A  
                                         __ptext36 1B3A                                           __ptext28 1DF4  
                                         __ptext61 1020                                           __ptext53 1968  
                                         __ptext45 1C8C                                           __ptext37 19CC  
                                         __ptext29 1FD4                                           __ptext70 0CBC  
                                         __ptext62 23B6                                           __ptext54 1586  
                                         __ptext46 2088                                           __ptext38 0F64  
                                         __ptext71 2218                                           __ptext63 1A88  
                                         __ptext55 0ACE                                           __ptext47 21FA  
                                         __ptext39 1A2A                                           __ptext80 13FE  
                                         __ptext72 24CE                                           __ptext64 2488  
                                         __ptext56 1E2C                                           __ptext48 122C  
                                         __ptext81 1E9C                                           __ptext73 23C6  
                                         __ptext65 2492                                           __ptext57 1372  
                                         __ptext49 2312                                           __ptext90 235E  
                                         __ptext82 1ED2                                           __ptext74 22BA  
                                         __ptext66 24A4                                           __ptext58 1D82  
                                         __ptext91 2126                                           __ptext83 20B0  
                                         __ptext75 23D6                                           __ptext67 2100  
                                         __ptext59 249C                                           __ptext92 243E  
                                         __ptext84 24AC                                           __ptext76 24C0  
                                         __ptext68 2430                                           __ptext93 214C  
                                         __ptext85 1FA2                                           __ptext77 24D2  
                                         __ptext69 22A4                                           __ptext94 2172  
                                         __ptext86 228C                                           __ptext78 24D6  
                                         __ptext95 20D8                                           __ptext87 234C  
                                         __ptext79 2236                                           __ptext96 2272  
                                         __ptext88 1F08                                           __ptext97 2326  
                                         __ptext89 22D0                                     OpenPWM5@period 00CE  
                                         __ptext98 1604                                           __ptext99 1CCC  
                                   ??_GetCharRxBuf 00D4                                     ??_GetCharTxBuf 0031  
                                ??_CalibrateOnLine 00DA                                 SetDCPWM5@dutycycle 00CE  
                             __size_of_SetUnipolar 0006                                      __size_of_main 0790  
                                   Delay1TCYx@unit 00CE                   __size_of_NormaliseSensorReadings 007E  
                          __size_of_ReadCharEEPROM 0010                __size_of_CalculateSensorSumDiscrete 0040  
                                 ?_WriteCharEEPROM 00D1            CalibrateThreshold@sensor_threshold_temp 00DA  
                            __size_ofi1_SetChanADC 0016                                       i1_ConvertADC 24DA  
                              _MillisecondTimerISR 2254                                    _LoadCalibration 0F64  
                                    _USART1_Status 001B                                  ??_ConfigureTimer0 00D2  
                                ??_ConfigureTimer1 00D2                                  ??_ConfigureTimer2 00CF  
                          __size_of_ReadEchoLength 000A                              __CFG_ADDRBW$ADDR20BIT 000000  
                     NormaliseSensorReadings@index 00D6                                _GenerateCalibration 10D4  
                                       _INTCONbits 000FF2                                     ??_EnableMotors 00CE  
                                _Rx_chars_received 0016                                         _PB1pressed 1A88  
                                       _PB2pressed 19CC                                      OWReset@result 00CE  
                             __end_of_Delay10KTCYx 2218                               ?_MillisecondTimerISR 002B  
                                         intlevel1 0000                                           intlevel2 0000  
                          _CalculateSensorStatuses 09C8                    __end_of_ResetAccumulatedCurrent 2030  
                                    ??_OWWriteByte 00CF                                      ?_ConfigureADC 002B  
                                    ?_ConfigurePWM 002B                                      _LoadPIDValues 0BC6  
                             ?_GenerateCalibration 002B                                  SetChanADC@channel 00CF  
                                       _RCSTA1bits 000FAB                       __size_of_ConfigureUltrasound 0028  
                                  WriteEEPROM@data 00D0                                       i1_SetChanADC 22E6  
                                    _Rx_msg_length 0018                             __size_of_SetADCChannel 00EE  
                            SendStatus@status_code 00D6                                  ??i1_SetADCChannel 002D  
                         __end_of_SetReverseMotorL 24CA                                      ??_GetDistance 00CF  
                   SendPIDSetPointOnLine@set_point 00D6                              main@PID_set_point_ptr 0113  
                        __size_of_CommandAvailable 000E                      SendBattVoltageInitial@reading 00D6  
                            __end_of_SendThreshold 16EC                                         _PID_output 0098  
                     __size_of_SetDirectionForward 0006                           SendOffsets@offsets_array 00D6  
                           __size_of_BusySensorAcq 0010                      __size_of_SendDefaultPIDValues 006A  
                           __size_of_ReadIntEEPROM 005E                              ??_MillisecondTimerISR 0046  
                                   ??_ConfigureADC 00D3                                     ??_ConfigurePWM 00CF  
                                   ?_LoadPIDValues 002B                                    OWWriteByte@byte 00CF  
                        __size_of_CalibrateOffsets 008C                              ??_GenerateCalibration 00DC  
                           __size_of_UltrasoundISR 0034                               __size_of_Write1USART 0016  
                                     _put_Rx_index 001F                                     _WirelessTx_ISR 2198  
                              _SendStoredPIDValues 1758                            __end_of_LoadCalibration 1020  
                                     _put_Tx_index 0020  
