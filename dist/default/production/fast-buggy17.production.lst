

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Feb 14 16:53:12 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _ADCON0	set	4034
    19  0000                     _ADCON0bits	set	4034
    20  0000                     _ADCON1	set	4033
    21  0000                     _ADCON2	set	4032
    22  0000                     _ADRESH	set	4036
    23  0000                     _ADRESL	set	4035
    24  0000                     _CCP4CON	set	3955
    25  0000                     _CCP4CONbits	set	3955
    26  0000                     _CCP5CON	set	3952
    27  0000                     _CCP5CONbits	set	3952
    28  0000                     _CCPR4L	set	3956
    29  0000                     _CCPR5L	set	3953
    30  0000                     _INTCONbits	set	4082
    31  0000                     _LATAbits	set	3977
    32  0000                     _LATDbits	set	3980
    33  0000                     _LATF	set	3982
    34  0000                     _LATHbits	set	3984
    35  0000                     _PIE1bits	set	3997
    36  0000                     _PIR1bits	set	3998
    37  0000                     _PORTBbits	set	3969
    38  0000                     _PORTC	set	3970
    39  0000                     _PORTCbits	set	3970
    40  0000                     _PORTH	set	3975
    41  0000                     _PORTHbits	set	3975
    42  0000                     _PORTJbits	set	3976
    43  0000                     _PR2	set	4043
    44  0000                     _T2CONbits	set	4042
    45  0000                     _TRISA	set	3986
    46  0000                     _TRISC	set	3988
    47  0000                     _TRISD	set	3989
    48  0000                     _TRISF	set	3991
    49  0000                     _TRISGbits	set	3992
    50  0000                     _TRISH	set	3993
    51  0000                     _TRISJ	set	3994
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  01FD24                     __pcinit:
    57                           	opt stack 0
    58  01FD24                     start_initialization:
    59                           	opt stack 0
    60  01FD24                     __initialization:
    61                           	opt stack 0
    62  01FD24                     end_of_initialization:
    63                           	opt stack 0
    64  01FD24                     __end_of__initialization:
    65                           	opt stack 0
    66  01FD24  0100               	movlb	0
    67  01FD26  EF1B  F0FF         	goto	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMRAM
    70  000001                     __pcstackCOMRAM:
    71                           	opt stack 0
    72  000001                     ?_ReadADC:
    73                           	opt stack 0
    74  000001                     OpenADC@config2:
    75                           	opt stack 0
    76  000001                     SetDCPWM4@dutycycle:
    77                           	opt stack 0
    78  000001                     SetDCPWM5@dutycycle:
    79                           	opt stack 0
    80                           
    81                           ; 2 bytes @ 0x0
    82  000001                     	ds	1
    83  000002                     OpenADC@portconfig:
    84                           	opt stack 0
    85                           
    86                           ; 1 bytes @ 0x1
    87  000002                     	ds	1
    88  000003                     ??_OpenADC:
    89  000003                     ??_SetDCPWM4:
    90  000003                     ??_SetDCPWM5:
    91  000003                     ??_ReadADC:
    92                           
    93                           ; 1 bytes @ 0x2
    94  000003                     	ds	2
    95  000005                     OpenADC@config:
    96                           	opt stack 0
    97  000005                     SetDCPWM4@DCycle:
    98                           	opt stack 0
    99  000005                     SetDCPWM5@DCycle:
   100                           	opt stack 0
   101                           
   102                           ; 2 bytes @ 0x4
   103  000005                     	ds	2
   104  000007                     ??_main:
   105                           
   106                           ; 1 bytes @ 0x6
   107  000007                     	ds	2
   108  000009                     main@ADC_val:
   109                           	opt stack 0
   110                           
   111                           ; 2 bytes @ 0x8
   112  000009                     	ds	2
   113  00000B                     main@duty_cycle:
   114                           	opt stack 0
   115                           
   116                           ; 2 bytes @ 0xA
   117  00000B                     	ds	2
   118  00000D                     main@freq:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0xC
   122  00000D                     	ds	2
   123                           
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 30 in file "PWM_gen_freq.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;  freq            2   12[COMRAM] unsigned int 
   134 ;;  duty_cycle      2   10[COMRAM] unsigned int 
   135 ;;  ADC_val         2    8[COMRAM] unsigned int 
   136 ;;  pr2_val         1    0        unsigned char 
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   147 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   149 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   150 ;;Total ram usage:        8 bytes
   151 ;; Hardware stack levels required when called:    1
   152 ;; This function calls:
   153 ;;		_BusyADC
   154 ;;		_ConfigPWM
   155 ;;		_ConvertADC
   156 ;;		_OpenADC
   157 ;;		_ReadADC
   158 ;;		_SetDCPWM4
   159 ;;		_SetDCPWM5
   160 ;;		_StartTimer2
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167  01FE36                     __ptext0:
   168                           	opt stack 0
   169  01FE36                     _main:
   170                           	opt stack 30
   171                           
   172                           ;PWM_gen_freq.c: 32: unsigned int ADC_val, freq, duty_cycle;
   173                           ;PWM_gen_freq.c: 33: unsigned char pr2_val;
   174                           ;PWM_gen_freq.c: 36: TRISD = 0xE0;
   175                           
   176                           ;incstack = 0
   177  01FE36  0EE0               	movlw	224
   178  01FE38  6E95               	movwf	3989,c	;volatile
   179                           
   180                           ;PWM_gen_freq.c: 37: TRISGbits.RG3 = 0;
   181  01FE3A  9698               	bcf	3992,3,c	;volatile
   182                           
   183                           ;PWM_gen_freq.c: 38: TRISGbits.RG4 = 0;
   184  01FE3C  9898               	bcf	3992,4,c	;volatile
   185                           
   186                           ;PWM_gen_freq.c: 41: TRISF = 0x00;
   187  01FE3E  0E00               	movlw	0
   188  01FE40  6E97               	movwf	3991,c	;volatile
   189                           
   190                           ;PWM_gen_freq.c: 42: TRISA = 0xEF;
   191  01FE42  0EEF               	movlw	239
   192  01FE44  6E92               	movwf	3986,c	;volatile
   193                           
   194                           ;PWM_gen_freq.c: 43: TRISH = 0xFC;
   195  01FE46  0EFC               	movlw	252
   196  01FE48  6E99               	movwf	3993,c	;volatile
   197                           
   198                           ;PWM_gen_freq.c: 44: TRISC = 0xFF;
   199  01FE4A  6894               	setf	3988,c	;volatile
   200                           
   201                           ;PWM_gen_freq.c: 45: TRISJ = 0xBF;
   202  01FE4C  0EBF               	movlw	191
   203  01FE4E  6E9A               	movwf	3994,c	;volatile
   204                           
   205                           ;PWM_gen_freq.c: 47: LATF = 0x00;
   206  01FE50  0E00               	movlw	0
   207  01FE52  6E8E               	movwf	3982,c	;volatile
   208                           
   209                           ;PWM_gen_freq.c: 48: LATAbits.LATA4 = 0;
   210  01FE54  9889               	bcf	3977,4,c	;volatile
   211                           
   212                           ;PWM_gen_freq.c: 49: LATHbits.LATH0 = 1;
   213  01FE56  8090               	bsf	3984,0,c	;volatile
   214                           
   215                           ;PWM_gen_freq.c: 50: LATHbits.LATH1 = 1;
   216  01FE58  8290               	bsf	3984,1,c	;volatile
   217                           
   218                           ;PWM_gen_freq.c: 52: LATDbits.LATD4 = 0;
   219  01FE5A  988C               	bcf	3980,4,c	;volatile
   220                           
   221                           ;PWM_gen_freq.c: 53: LATAbits.LATA4 = 1;
   222  01FE5C  8889               	bsf	3977,4,c	;volatile
   223                           
   224                           ;PWM_gen_freq.c: 56: OpenADC(0b10011111 &
   225                           ;PWM_gen_freq.c: 57: 0b11111111 &
   226                           ;PWM_gen_freq.c: 58: 0b11110001,
   227                           ;PWM_gen_freq.c: 59: 0b10000111 &
   228                           ;PWM_gen_freq.c: 60: 0b01111111 &
   229                           ;PWM_gen_freq.c: 61: 0b11111110,
   230                           ;PWM_gen_freq.c: 62: 14
   231                           ;PWM_gen_freq.c: 63: );
   232  01FE5E  0E06               	movlw	6
   233  01FE60  6E01               	movwf	OpenADC@config2,c
   234  01FE62  0E0E               	movlw	14
   235  01FE64  6E02               	movwf	OpenADC@portconfig,c
   236  01FE66  0E91               	movlw	145
   237  01FE68  ECEC  F0FE         	call	_OpenADC
   238                           
   239                           ;PWM_gen_freq.c: 65: StartTimer2();
   240  01FE6C  ECA2  F0FE         	call	_StartTimer2	;wreg free
   241                           
   242                           ;PWM_gen_freq.c: 66: ConfigPWM();
   243  01FE70  ECA9  F0FE         	call	_ConfigPWM	;wreg free
   244                           
   245                           ;PWM_gen_freq.c: 68: T2CONbits.T2CKPS1 = 1;
   246  01FE74  82CA               	bsf	4042,1,c	;volatile
   247                           
   248                           ;PWM_gen_freq.c: 69: T2CONbits.T2CKPS0 = 1;
   249  01FE76  80CA               	bsf	4042,0,c	;volatile
   250                           
   251                           ;PWM_gen_freq.c: 71: SetDCPWM4(512);
   252  01FE78  0E02               	movlw	2
   253  01FE7A  6E02               	movwf	SetDCPWM4@dutycycle+1,c
   254  01FE7C  0E00               	movlw	0
   255  01FE7E  6E01               	movwf	SetDCPWM4@dutycycle,c
   256  01FE80  ECB2  F0FE         	call	_SetDCPWM4	;wreg free
   257                           
   258                           ;PWM_gen_freq.c: 72: SetDCPWM5(512);
   259  01FE84  0E02               	movlw	2
   260  01FE86  6E02               	movwf	SetDCPWM5@dutycycle+1,c
   261  01FE88  0E00               	movlw	0
   262  01FE8A  6E01               	movwf	SetDCPWM5@dutycycle,c
   263  01FE8C  ECCF  F0FE         	call	_SetDCPWM5	;wreg free
   264                           
   265                           ;PWM_gen_freq.c: 74: freq = 800;
   266  01FE90  0E03               	movlw	3
   267  01FE92  6E0E               	movwf	main@freq+1,c
   268  01FE94  0E20               	movlw	32
   269  01FE96  6E0D               	movwf	main@freq,c
   270  01FE98                     l972:
   271                           
   272                           ;PWM_gen_freq.c: 79: LATDbits.LATD4 = PORTHbits.RH7;
   273  01FE98  AE87               	btfss	3975,7,c	;volatile
   274  01FE9A  D002               	bra	u165
   275  01FE9C  888C               	bsf	3980,4,c	;volatile
   276  01FE9E  D001               	bra	u167
   277  01FEA0                     u165:
   278  01FEA0  988C               	bcf	3980,4,c	;volatile
   279  01FEA2                     u167:
   280                           
   281                           ;PWM_gen_freq.c: 80: LATDbits.LATD0 = 1;
   282  01FEA2  808C               	bsf	3980,0,c	;volatile
   283                           
   284                           ;PWM_gen_freq.c: 81: LATDbits.LATD1 = PORTCbits.RC3;
   285  01FEA4  A682               	btfss	3970,3,c	;volatile
   286  01FEA6  D002               	bra	u175
   287  01FEA8  828C               	bsf	3980,1,c	;volatile
   288  01FEAA  D001               	bra	u177
   289  01FEAC                     u175:
   290  01FEAC  928C               	bcf	3980,1,c	;volatile
   291  01FEAE                     u177:
   292                           
   293                           ;PWM_gen_freq.c: 82: LATDbits.LATD2 = 1;
   294  01FEAE  848C               	bsf	3980,2,c	;volatile
   295                           
   296                           ;PWM_gen_freq.c: 83: LATDbits.LATD3 = PORTHbits.RH4;
   297  01FEB0  A887               	btfss	3975,4,c	;volatile
   298  01FEB2  D002               	bra	u185
   299  01FEB4  868C               	bsf	3980,3,c	;volatile
   300  01FEB6  D001               	bra	u187
   301  01FEB8                     u185:
   302  01FEB8  968C               	bcf	3980,3,c	;volatile
   303  01FEBA                     u187:
   304                           
   305                           ;PWM_gen_freq.c: 85: LATF = (PORTH & 0xF0) | ((PORTC >> 2) & 0x0F);
   306  01FEBA  CF82 F007          	movff	3970,??_main	;volatile
   307  01FEBE  90D8               	bcf	status,0,c
   308  01FEC0  3207               	rrcf	??_main,f,c
   309  01FEC2  90D8               	bcf	status,0,c
   310  01FEC4  3207               	rrcf	??_main,f,c
   311  01FEC6  0E0F               	movlw	15
   312  01FEC8  1607               	andwf	??_main,f,c
   313  01FECA  5087               	movf	3975,w,c	;volatile
   314  01FECC  0BF0               	andlw	240
   315  01FECE  1007               	iorwf	??_main,w,c
   316  01FED0  6E8E               	movwf	3982,c	;volatile
   317                           
   318                           ;PWM_gen_freq.c: 87: if(PORTBbits.RB0 == 0) {
   319  01FED2  B081               	btfsc	3969,0,c	;volatile
   320  01FED4  D00B               	goto	l64
   321                           
   322                           ;PWM_gen_freq.c: 88: if(freq < 2400) {
   323  01FED6  0E60               	movlw	96
   324  01FED8  5C0D               	subwf	main@freq,w,c
   325  01FEDA  0E09               	movlw	9
   326  01FEDC  580E               	subwfb	main@freq+1,w,c
   327  01FEDE  B0D8               	btfsc	status,0,c
   328  01FEE0  D025               	goto	l1014
   329                           
   330                           ;PWM_gen_freq.c: 89: freq += 200;
   331  01FEE2  0EC8               	movlw	200
   332  01FEE4  260D               	addwf	main@freq,f,c
   333  01FEE6  0E00               	movlw	0
   334  01FEE8  220E               	addwfc	main@freq+1,f,c
   335                           
   336                           ;PWM_gen_freq.c: 93: }
   337                           ;PWM_gen_freq.c: 94: }
   338                           
   339                           ;PWM_gen_freq.c: 91: else {
   340                           
   341                           ;PWM_gen_freq.c: 90: }
   342  01FEEA  D020               	goto	l1014
   343  01FEEC                     l64:
   344                           
   345                           ;PWM_gen_freq.c: 95: else if(PORTJbits.RJ5 == 0) {
   346  01FEEC  BA88               	btfsc	3976,5,c	;volatile
   347  01FEEE  D01E               	goto	l1014
   348                           
   349                           ;PWM_gen_freq.c: 96: if(freq > 800) {
   350  01FEF0  0E21               	movlw	33
   351  01FEF2  5C0D               	subwf	main@freq,w,c
   352  01FEF4  0E03               	movlw	3
   353  01FEF6  580E               	subwfb	main@freq+1,w,c
   354  01FEF8  A0D8               	btfss	status,0,c
   355  01FEFA  D018               	goto	l1014
   356                           
   357                           ;PWM_gen_freq.c: 97: freq -= 200;
   358  01FEFC  0EC8               	movlw	200
   359  01FEFE  5E0D               	subwf	main@freq,f,c
   360  01FF00  0E00               	movlw	0
   361  01FF02  5A0E               	subwfb	main@freq+1,f,c
   362                           
   363                           ;PWM_gen_freq.c: 101: }
   364                           ;PWM_gen_freq.c: 102: }
   365                           ;PWM_gen_freq.c: 104: switch(freq) {
   366                           
   367                           ;PWM_gen_freq.c: 99: else {
   368                           
   369                           ;PWM_gen_freq.c: 98: }
   370  01FF04  D013               	goto	l1014
   371  01FF06                     l994:
   372                           
   373                           ;PWM_gen_freq.c: 106: PR2 = 194;
   374  01FF06  0EC2               	movlw	194
   375  01FF08  D00F               	goto	L8
   376  01FF0A                     l996:
   377                           
   378                           ;PWM_gen_freq.c: 109: PR2 = 155;
   379  01FF0A  0E9B               	movlw	155
   380  01FF0C  D00D               	goto	L8
   381  01FF0E                     l998:
   382                           
   383                           ;PWM_gen_freq.c: 112: PR2 = 129;
   384  01FF0E  0E81               	movlw	129
   385  01FF10  D00B               	goto	L8
   386  01FF12                     l1000:
   387                           
   388                           ;PWM_gen_freq.c: 115: PR2 = 110;
   389  01FF12  0E6E               	movlw	110
   390  01FF14  D009               	goto	L8
   391  01FF16                     l1002:
   392                           
   393                           ;PWM_gen_freq.c: 118: PR2 = 97;
   394  01FF16  0E61               	movlw	97
   395  01FF18  D007               	goto	L8
   396  01FF1A                     l1004:
   397                           
   398                           ;PWM_gen_freq.c: 121: PR2 = 86;
   399  01FF1A  0E56               	movlw	86
   400  01FF1C  D005               	goto	L8
   401  01FF1E                     l1006:
   402                           
   403                           ;PWM_gen_freq.c: 124: PR2 = 77;
   404  01FF1E  0E4D               	movlw	77
   405  01FF20  D003               	goto	L8
   406  01FF22                     l1008:
   407                           
   408                           ;PWM_gen_freq.c: 127: PR2 = 70;
   409  01FF22  0E46               	movlw	70
   410  01FF24  D001               	goto	L8
   411  01FF26                     l1010:
   412                           
   413                           ;PWM_gen_freq.c: 130: PR2 = 64;
   414  01FF26  0E40               	movlw	64
   415  01FF28                     L8:
   416  01FF28  6ECB               	movwf	4043,c	;volatile
   417                           
   418                           ;PWM_gen_freq.c: 132: }
   419                           
   420                           ;PWM_gen_freq.c: 131: break;
   421  01FF2A  D043               	goto	l1016
   422  01FF2C                     l1014:
   423  01FF2C  C00D  F007         	movff	main@freq,??_main
   424  01FF30  C00E  F008         	movff	main@freq+1,??_main+1
   425                           
   426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 7 sub-sw
      +                          itches
   427                           ; Switch size 1, requested type "space"
   428                           ; Number of cases is 7, Range of values is 3 to 9
   429                           ; switch strategies available:
   430                           ; Name         Instructions Cycles
   431                           ; simple_byte           22    12 (average)
   432                           ;	Chosen strategy is simple_byte
   433  01FF34  5008               	movf	??_main+1,w,c
   434  01FF36  0A03               	xorlw	3	; case 3
   435  01FF38  B4D8               	btfsc	status,2,c
   436  01FF3A  D013               	goto	l1084
   437  01FF3C  0A07               	xorlw	7	; case 4
   438  01FF3E  B4D8               	btfsc	status,2,c
   439  01FF40  D018               	goto	l1086
   440  01FF42  0A01               	xorlw	1	; case 5
   441  01FF44  B4D8               	btfsc	status,2,c
   442  01FF46  D01A               	goto	l1088
   443  01FF48  0A03               	xorlw	3	; case 6
   444  01FF4A  B4D8               	btfsc	status,2,c
   445  01FF4C  D01C               	goto	l1090
   446  01FF4E  0A01               	xorlw	1	; case 7
   447  01FF50  B4D8               	btfsc	status,2,c
   448  01FF52  D01E               	goto	l1092
   449  01FF54  0A0F               	xorlw	15	; case 8
   450  01FF56  B4D8               	btfsc	status,2,c
   451  01FF58  D023               	goto	l1094
   452  01FF5A  0A01               	xorlw	1	; case 9
   453  01FF5C  B4D8               	btfsc	status,2,c
   454  01FF5E  D025               	goto	l1096
   455  01FF60  D028               	goto	l1016
   456  01FF62                     l1084:
   457                           
   458                           ; Switch size 1, requested type "space"
   459                           ; Number of cases is 2, Range of values is 32 to 232
   460                           ; switch strategies available:
   461                           ; Name         Instructions Cycles
   462                           ; simple_byte            7     4 (average)
   463                           ;	Chosen strategy is simple_byte
   464  01FF62  5007               	movf	??_main,w,c
   465  01FF64  0A20               	xorlw	32	; case 32
   466  01FF66  B4D8               	btfsc	status,2,c
   467  01FF68  D7CE               	goto	l994
   468  01FF6A  0AC8               	xorlw	200	; case 232
   469  01FF6C  B4D8               	btfsc	status,2,c
   470  01FF6E  D7CD               	goto	l996
   471  01FF70  D020               	goto	l1016
   472  01FF72                     l1086:
   473                           
   474                           ; Switch size 1, requested type "space"
   475                           ; Number of cases is 1, Range of values is 176 to 176
   476                           ; switch strategies available:
   477                           ; Name         Instructions Cycles
   478                           ; simple_byte            4     3 (average)
   479                           ;	Chosen strategy is simple_byte
   480  01FF72  5007               	movf	??_main,w,c
   481  01FF74  0AB0               	xorlw	176	; case 176
   482  01FF76  B4D8               	btfsc	status,2,c
   483  01FF78  D7CA               	goto	l998
   484  01FF7A  D01B               	goto	l1016
   485  01FF7C                     l1088:
   486                           
   487                           ; Switch size 1, requested type "space"
   488                           ; Number of cases is 1, Range of values is 120 to 120
   489                           ; switch strategies available:
   490                           ; Name         Instructions Cycles
   491                           ; simple_byte            4     3 (average)
   492                           ;	Chosen strategy is simple_byte
   493  01FF7C  5007               	movf	??_main,w,c
   494  01FF7E  0A78               	xorlw	120	; case 120
   495  01FF80  B4D8               	btfsc	status,2,c
   496  01FF82  D7C7               	goto	l1000
   497  01FF84  D016               	goto	l1016
   498  01FF86                     l1090:
   499                           
   500                           ; Switch size 1, requested type "space"
   501                           ; Number of cases is 1, Range of values is 64 to 64
   502                           ; switch strategies available:
   503                           ; Name         Instructions Cycles
   504                           ; simple_byte            4     3 (average)
   505                           ;	Chosen strategy is simple_byte
   506  01FF86  5007               	movf	??_main,w,c
   507  01FF88  0A40               	xorlw	64	; case 64
   508  01FF8A  B4D8               	btfsc	status,2,c
   509  01FF8C  D7C4               	goto	l1002
   510  01FF8E  D011               	goto	l1016
   511  01FF90                     l1092:
   512                           
   513                           ; Switch size 1, requested type "space"
   514                           ; Number of cases is 2, Range of values is 8 to 208
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte            7     4 (average)
   518                           ;	Chosen strategy is simple_byte
   519  01FF90  5007               	movf	??_main,w,c
   520  01FF92  0A08               	xorlw	8	; case 8
   521  01FF94  B4D8               	btfsc	status,2,c
   522  01FF96  D7C1               	goto	l1004
   523  01FF98  0AD8               	xorlw	216	; case 208
   524  01FF9A  B4D8               	btfsc	status,2,c
   525  01FF9C  D7C0               	goto	l1006
   526  01FF9E  D009               	goto	l1016
   527  01FFA0                     l1094:
   528                           
   529                           ; Switch size 1, requested type "space"
   530                           ; Number of cases is 1, Range of values is 152 to 152
   531                           ; switch strategies available:
   532                           ; Name         Instructions Cycles
   533                           ; simple_byte            4     3 (average)
   534                           ;	Chosen strategy is simple_byte
   535  01FFA0  5007               	movf	??_main,w,c
   536  01FFA2  0A98               	xorlw	152	; case 152
   537  01FFA4  B4D8               	btfsc	status,2,c
   538  01FFA6  D7BD               	goto	l1008
   539  01FFA8  D004               	goto	l1016
   540  01FFAA                     l1096:
   541                           
   542                           ; Switch size 1, requested type "space"
   543                           ; Number of cases is 1, Range of values is 96 to 96
   544                           ; switch strategies available:
   545                           ; Name         Instructions Cycles
   546                           ; simple_byte            4     3 (average)
   547                           ;	Chosen strategy is simple_byte
   548  01FFAA  5007               	movf	??_main,w,c
   549  01FFAC  0A60               	xorlw	96	; case 96
   550  01FFAE  B4D8               	btfsc	status,2,c
   551  01FFB0  D7BA               	goto	l1010
   552  01FFB2                     l1016:
   553                           
   554                           ;PWM_gen_freq.c: 134: ConvertADC();
   555  01FFB2  EC90  F0FE         	call	_ConvertADC	;wreg free
   556  01FFB6                     l1018:
   557  01FFB6  EC95  F0FE         	call	_BusyADC	;wreg free
   558  01FFBA  0900               	iorlw	0
   559  01FFBC  A4D8               	btfss	status,2,c
   560  01FFBE  D7FB               	goto	l1018
   561                           
   562                           ;PWM_gen_freq.c: 138: ADC_val = ReadADC() & 0x03FF;
   563  01FFC0  EC9B  F0FE         	call	_ReadADC	;wreg free
   564  01FFC4  0EFF               	movlw	255
   565  01FFC6  1401               	andwf	?_ReadADC,w,c
   566  01FFC8  6E09               	movwf	main@ADC_val,c
   567  01FFCA  0E03               	movlw	3
   568  01FFCC  1402               	andwf	?_ReadADC+1,w,c
   569  01FFCE  6E0A               	movwf	main@ADC_val+1,c
   570                           
   571                           ;PWM_gen_freq.c: 139: duty_cycle = ((ADC_val * 2) >> 2) & 0x03FF;
   572  01FFD0  90D8               	bcf	status,0,c
   573  01FFD2  300A               	rrcf	main@ADC_val+1,w,c
   574  01FFD4  6E08               	movwf	(??_main+1)& (0+255),c
   575  01FFD6  3009               	rrcf	main@ADC_val,w,c
   576  01FFD8  6E07               	movwf	??_main& (0+255),c
   577  01FFDA  0EFF               	movlw	255
   578  01FFDC  1407               	andwf	??_main,w,c
   579  01FFDE  6E0B               	movwf	main@duty_cycle,c
   580  01FFE0  0E03               	movlw	3
   581  01FFE2  1408               	andwf	??_main+1,w,c
   582  01FFE4  6E0C               	movwf	main@duty_cycle+1,c
   583                           
   584                           ;PWM_gen_freq.c: 142: SetDCPWM4(duty_cycle);
   585  01FFE6  C00B  F001         	movff	main@duty_cycle,SetDCPWM4@dutycycle
   586  01FFEA  C00C  F002         	movff	main@duty_cycle+1,SetDCPWM4@dutycycle+1
   587  01FFEE  ECB2  F0FE         	call	_SetDCPWM4	;wreg free
   588                           
   589                           ;PWM_gen_freq.c: 143: SetDCPWM5(duty_cycle);
   590  01FFF2  C00B  F001         	movff	main@duty_cycle,SetDCPWM5@dutycycle
   591  01FFF6  C00C  F002         	movff	main@duty_cycle+1,SetDCPWM5@dutycycle+1
   592  01FFFA  ECCF  F0FE         	call	_SetDCPWM5	;wreg free
   593  01FFFE  D74C               	goto	l972
   594  020000                     __end_of_main:
   595                           	opt stack 0
   596                           status	equ	0xFD8
   597                           
   598 ;; *************** function _StartTimer2 *****************
   599 ;; Defined at:
   600 ;;		line 147 in file "PWM_gen_freq.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text1
   628  01FD44                     __ptext1:
   629                           	opt stack 0
   630  01FD44                     _StartTimer2:
   631                           	opt stack 30
   632                           
   633                           ;PWM_gen_freq.c: 148: PIE1bits.TMR2IE = 0;
   634                           
   635                           ;incstack = 0
   636  01FD44  929D               	bcf	3997,1,c	;volatile
   637                           
   638                           ;PWM_gen_freq.c: 149: T2CONbits.T2CKPS1 = 0;
   639  01FD46  92CA               	bcf	4042,1,c	;volatile
   640                           
   641                           ;PWM_gen_freq.c: 150: T2CONbits.T2CKPS0 = 0;
   642  01FD48  90CA               	bcf	4042,0,c	;volatile
   643                           
   644                           ;PWM_gen_freq.c: 151: T2CONbits.TMR2ON = 1;
   645  01FD4A  84CA               	bsf	4042,2,c	;volatile
   646                           
   647                           ;PWM_gen_freq.c: 152: PR2 = 130;
   648  01FD4C  0E82               	movlw	130
   649  01FD4E  6ECB               	movwf	4043,c	;volatile
   650  01FD50  0012               	return		;funcret
   651  01FD52                     __end_of_StartTimer2:
   652                           	opt stack 0
   653                           status	equ	0xFD8
   654                           
   655 ;; *************** function _SetDCPWM5 *****************
   656 ;; Defined at:
   657 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\PWM\pw5setdc.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  dutycycle       2    0[COMRAM] unsigned int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  DCycle          2    4[COMRAM] struct PWMDC
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        6 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text2
   685  01FD9E                     __ptext2:
   686                           	opt stack 0
   687  01FD9E                     _SetDCPWM5:
   688                           	opt stack 30
   689                           
   690                           ;incstack = 0
   691  01FD9E  C001  F003         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
   692  01FDA2  C002  F004         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
   693  01FDA6  0E06               	movlw	6
   694  01FDA8                     u155:
   695  01FDA8  90D8               	bcf	status,0,c
   696  01FDAA  3603               	rlcf	??_SetDCPWM5,f,c
   697  01FDAC  3604               	rlcf	??_SetDCPWM5+1,f,c
   698  01FDAE  2EE8               	decfsz	wreg,f,c
   699  01FDB0  D7FB               	goto	u155
   700  01FDB2  C003  F005         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
   701  01FDB6  C004  F006         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
   702  01FDBA  C006  FF71         	movff	SetDCPWM5@DCycle+1,3953	;volatile
   703  01FDBE  C005  F003         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
   704  01FDC2  90D8               	bcf	status,0,c
   705  01FDC4  3203               	rrcf	??_SetDCPWM5,f,c
   706  01FDC6  90D8               	bcf	status,0,c
   707  01FDC8  3203               	rrcf	??_SetDCPWM5,f,c
   708  01FDCA  0E30               	movlw	48
   709  01FDCC  1603               	andwf	??_SetDCPWM5,f,c
   710  01FDCE  5070               	movf	3952,w,c	;volatile
   711  01FDD0  0BCF               	andlw	207
   712  01FDD2  1003               	iorwf	??_SetDCPWM5,w,c
   713  01FDD4  6E70               	movwf	3952,c	;volatile
   714  01FDD6  0012               	return		;funcret
   715  01FDD8                     __end_of_SetDCPWM5:
   716                           	opt stack 0
   717                           wreg	equ	0xFE8
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _SetDCPWM4 *****************
   721 ;; Defined at:
   722 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\PWM\pw4setdc.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  dutycycle       2    0[COMRAM] unsigned int 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  DCycle          2    4[COMRAM] struct PWMDC
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        6 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text3
   750  01FD64                     __ptext3:
   751                           	opt stack 0
   752  01FD64                     _SetDCPWM4:
   753                           	opt stack 30
   754                           
   755                           ;incstack = 0
   756  01FD64  C001  F003         	movff	SetDCPWM4@dutycycle,??_SetDCPWM4
   757  01FD68  C002  F004         	movff	SetDCPWM4@dutycycle+1,??_SetDCPWM4+1
   758  01FD6C  0E06               	movlw	6
   759  01FD6E                     u145:
   760  01FD6E  90D8               	bcf	status,0,c
   761  01FD70  3603               	rlcf	??_SetDCPWM4,f,c
   762  01FD72  3604               	rlcf	??_SetDCPWM4+1,f,c
   763  01FD74  2EE8               	decfsz	wreg,f,c
   764  01FD76  D7FB               	goto	u145
   765  01FD78  C003  F005         	movff	??_SetDCPWM4,SetDCPWM4@DCycle
   766  01FD7C  C004  F006         	movff	??_SetDCPWM4+1,SetDCPWM4@DCycle+1
   767  01FD80  C006  FF74         	movff	SetDCPWM4@DCycle+1,3956	;volatile
   768  01FD84  C005  F003         	movff	SetDCPWM4@DCycle,??_SetDCPWM4
   769  01FD88  90D8               	bcf	status,0,c
   770  01FD8A  3203               	rrcf	??_SetDCPWM4,f,c
   771  01FD8C  90D8               	bcf	status,0,c
   772  01FD8E  3203               	rrcf	??_SetDCPWM4,f,c
   773  01FD90  0E30               	movlw	48
   774  01FD92  1603               	andwf	??_SetDCPWM4,f,c
   775  01FD94  5073               	movf	3955,w,c	;volatile
   776  01FD96  0BCF               	andlw	207
   777  01FD98  1003               	iorwf	??_SetDCPWM4,w,c
   778  01FD9A  6E73               	movwf	3955,c	;volatile
   779  01FD9C  0012               	return		;funcret
   780  01FD9E                     __end_of_SetDCPWM4:
   781                           	opt stack 0
   782                           wreg	equ	0xFE8
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function _ReadADC *****************
   786 ;; Defined at:
   787 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcread.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  2    0[COMRAM] int 
   794 ;; Registers used:
   795 ;;		wreg, status,2
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        4 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text4
   815  01FD36                     __ptext4:
   816                           	opt stack 0
   817  01FD36                     _ReadADC:
   818                           	opt stack 30
   819                           
   820                           ;incstack = 0
   821  01FD36  50C4               	movf	4036,w,c	;volatile
   822  01FD38  6E03               	movwf	??_ReadADC& (0+255),c
   823  01FD3A  50C3               	movf	4035,w,c	;volatile
   824  01FD3C  6E01               	movwf	?_ReadADC,c
   825  01FD3E  C003  F002         	movff	??_ReadADC,?_ReadADC+1
   826  01FD42  0012               	return	
   827  01FD44                     __end_of_ReadADC:
   828                           	opt stack 0
   829                           wreg	equ	0xFE8
   830                           status	equ	0xFD8
   831                           
   832 ;; *************** function _OpenADC *****************
   833 ;; Defined at:
   834 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcopen.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  config          1    wreg     unsigned char 
   837 ;;  config2         1    0[COMRAM] unsigned char 
   838 ;;  portconfig      1    1[COMRAM] unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  config          1    4[COMRAM] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;Total ram usage:        5 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text5
   864  01FDD8                     __ptext5:
   865                           	opt stack 0
   866  01FDD8                     _OpenADC:
   867                           	opt stack 30
   868                           
   869                           ;incstack = 0
   870                           ;OpenADC@config stored from wreg
   871  01FDD8  6E05               	movwf	OpenADC@config,c
   872  01FDDA  0E00               	movlw	0
   873  01FDDC  6EC2               	movwf	4034,c	;volatile
   874  01FDDE  0E00               	movlw	0
   875  01FDE0  6EC0               	movwf	4032,c	;volatile
   876  01FDE2  90D8               	bcf	status,0,c
   877  01FDE4  3001               	rrcf	OpenADC@config2,w,c
   878  01FDE6  0B3C               	andlw	60
   879  01FDE8  6EC2               	movwf	4034,c	;volatile
   880  01FDEA  C001  F003         	movff	OpenADC@config2,??_OpenADC
   881  01FDEE  3A03               	swapf	??_OpenADC,f,c
   882  01FDF0  0EF0               	movlw	240
   883  01FDF2  1603               	andwf	??_OpenADC,f,c
   884  01FDF4  0E30               	movlw	48
   885  01FDF6  1603               	andwf	??_OpenADC,f,c
   886  01FDF8  5002               	movf	OpenADC@portconfig,w,c
   887  01FDFA  0B0F               	andlw	15
   888  01FDFC  1003               	iorwf	??_OpenADC,w,c
   889  01FDFE  6EC1               	movwf	4033,c	;volatile
   890  01FE00  C005  F003         	movff	OpenADC@config,??_OpenADC
   891  01FE04  90D8               	bcf	status,0,c
   892  01FE06  3603               	rlcf	??_OpenADC,f,c
   893  01FE08  90D8               	bcf	status,0,c
   894  01FE0A  3603               	rlcf	??_OpenADC,f,c
   895  01FE0C  0E38               	movlw	56
   896  01FE0E  1603               	andwf	??_OpenADC,f,c
   897  01FE10  C005  F004         	movff	OpenADC@config,??_OpenADC+1
   898  01FE14  3A04               	swapf	??_OpenADC+1,f,c
   899  01FE16  0E0F               	movlw	15
   900  01FE18  1604               	andwf	??_OpenADC+1,f,c
   901  01FE1A  0E07               	movlw	7
   902  01FE1C  1604               	andwf	??_OpenADC+1,f,c
   903  01FE1E  5005               	movf	OpenADC@config,w,c
   904  01FE20  0B80               	andlw	128
   905  01FE22  1004               	iorwf	??_OpenADC+1,w,c
   906  01FE24  1003               	iorwf	??_OpenADC,w,c
   907  01FE26  6EC0               	movwf	4032,c	;volatile
   908  01FE28  AE01               	btfss	OpenADC@config2,7,c
   909  01FE2A  D003               	goto	l120
   910  01FE2C  9C9E               	bcf	3998,6,c	;volatile
   911  01FE2E  8C9D               	bsf	3997,6,c	;volatile
   912  01FE30  8CF2               	bsf	intcon,6,c	;volatile
   913  01FE32                     l120:
   914  01FE32  80C2               	bsf	4034,0,c	;volatile
   915  01FE34  0012               	return		;funcret
   916  01FE36                     __end_of_OpenADC:
   917                           	opt stack 0
   918                           intcon	equ	0xFF2
   919                           wreg	equ	0xFE8
   920                           status	equ	0xFD8
   921                           
   922 ;; *************** function _ConvertADC *****************
   923 ;; Defined at:
   924 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcconv.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		None
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text6
   952  01FD20                     __ptext6:
   953                           	opt stack 0
   954  01FD20                     _ConvertADC:
   955                           	opt stack 30
   956                           
   957                           ;incstack = 0
   958  01FD20  82C2               	bsf	4034,1,c	;volatile
   959  01FD22  0012               	return		;funcret
   960  01FD24                     __end_of_ConvertADC:
   961                           	opt stack 0
   962                           intcon	equ	0xFF2
   963                           wreg	equ	0xFE8
   964                           status	equ	0xFD8
   965                           
   966 ;; *************** function _ConfigPWM *****************
   967 ;; Defined at:
   968 ;;		line 155 in file "PWM_gen_freq.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text7
   996  01FD52                     __ptext7:
   997                           	opt stack 0
   998  01FD52                     _ConfigPWM:
   999                           	opt stack 30
  1000                           
  1001                           ;PWM_gen_freq.c: 156: CCP4CONbits.CCP4M3 = 1;
  1002                           
  1003                           ;incstack = 0
  1004  01FD52  8673               	bsf	3955,3,c	;volatile
  1005                           
  1006                           ;PWM_gen_freq.c: 157: CCP4CONbits.CCP4M2 = 1;
  1007  01FD54  8473               	bsf	3955,2,c	;volatile
  1008                           
  1009                           ;PWM_gen_freq.c: 158: CCP4CONbits.CCP4M1 = 0;
  1010  01FD56  9273               	bcf	3955,1,c	;volatile
  1011                           
  1012                           ;PWM_gen_freq.c: 159: CCP4CONbits.CCP4M0 = 0;
  1013  01FD58  9073               	bcf	3955,0,c	;volatile
  1014                           
  1015                           ;PWM_gen_freq.c: 161: CCP5CONbits.CCP5M3 = 1;
  1016  01FD5A  8670               	bsf	3952,3,c	;volatile
  1017                           
  1018                           ;PWM_gen_freq.c: 162: CCP5CONbits.CCP5M2 = 1;
  1019  01FD5C  8470               	bsf	3952,2,c	;volatile
  1020                           
  1021                           ;PWM_gen_freq.c: 163: CCP5CONbits.CCP5M1 = 0;
  1022  01FD5E  9270               	bcf	3952,1,c	;volatile
  1023                           
  1024                           ;PWM_gen_freq.c: 164: CCP5CONbits.CCP5M0 = 0;
  1025  01FD60  9070               	bcf	3952,0,c	;volatile
  1026  01FD62  0012               	return		;funcret
  1027  01FD64                     __end_of_ConfigPWM:
  1028                           	opt stack 0
  1029                           intcon	equ	0xFF2
  1030                           wreg	equ	0xFE8
  1031                           status	equ	0xFD8
  1032                           
  1033 ;; *************** function _BusyADC *****************
  1034 ;; Defined at:
  1035 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcbusy.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      unsigned char 
  1042 ;; Registers used:
  1043 ;;		wreg
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text8
  1063  01FD2A                     __ptext8:
  1064                           	opt stack 0
  1065  01FD2A                     _BusyADC:
  1066                           	opt stack 30
  1067                           
  1068                           ;incstack = 0
  1069  01FD2A  A2C2               	btfss	4034,1,c	;volatile
  1070  01FD2C  D002               	goto	u40
  1071  01FD2E  0E01               	movlw	1
  1072  01FD30  0012               	return	
  1073  01FD32                     u40:
  1074  01FD32  0E00               	movlw	0
  1075  01FD34  0012               	return	
  1076  01FD36                     __end_of_BusyADC:
  1077                           	opt stack 0
  1078  0000                     intcon	equ	0xFF2
  1079                           wreg	equ	0xFE8
  1080                           status	equ	0xFD8
  1081                           intcon	equ	0xFF2
  1082                           wreg	equ	0xFE8
  1083                           status	equ	0xFD8
  1084                           
  1085                           	psect	rparam
  1086  0000                     intcon	equ	0xFF2
  1087                           wreg	equ	0xFE8
  1088                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SetDCPWM4
    _main->_SetDCPWM5

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     685
                                              6 COMRAM     8     8      0
                            _BusyADC
                          _ConfigPWM
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                          _SetDCPWM4
                          _SetDCPWM5
                        _StartTimer2
 ---------------------------------------------------------------------------------
 (1) _StartTimer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetDCPWM5                                            6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _SetDCPWM4                                            6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     240
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConfigPWM
   _ConvertADC
   _OpenADC
   _ReadADC
   _SetDCPWM4
   _SetDCPWM5
   _StartTimer2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
ABS                  0      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM             F5F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Feb 14 16:53:12 2017

                     l64 FEEC                       u40 FD32              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000             __CFG_CP4$OFF 000000  
           __CFG_CP5$OFF 000000             __CFG_CP6$OFF 000000             __CFG_CP7$OFF 000000  
                    l120 FE32                      l972 FE98                      l994 FF06  
                    l996 FF0A                      l998 FF0E             __CFG_CPB$OFF 000000  
                    u145 FD6E                      u155 FDA8                      u165 FEA0  
                    _PR2 000FCB                      u175 FEAC                      u167 FEA2  
                    u185 FEB8                      u177 FEAE             __CFG_CPD$OFF 000000  
                    u187 FEBA                      wreg 000FE8             __CFG_MODE$MC 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1000 FF12  
                   l1010 FF26                     l1002 FF16                     l1004 FF1A  
                   l1006 FF1E                     l1014 FF2C                     l1008 FF22  
                   l1016 FFB2                     l1018 FFB6                     l1090 FF86  
                   l1092 FF90                     l1084 FF62                     l1094 FFA0  
                   l1086 FF72                     l1096 FFAA                     l1088 FF7C  
                   _LATF 000F8E                     _main FE36                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000010  
        __end_of_BusyADC FD36          __end_of_ReadADC FD44          __end_of_OpenADC FE36  
          __CFG_WAIT$OFF 000000                    ?_main 0001                    _PORTC 000F82  
                  _PORTH 000F87                    _TRISA 000F92                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISF 000F97                    _TRISH 000F99  
                  _TRISJ 000F9A            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
          __CFG_WRT4$OFF 000000            __CFG_WRT5$OFF 000000            __CFG_WRT6$OFF 000000  
          __CFG_WRT7$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
         __CFG_EBTR4$OFF 000000           __CFG_EBTR5$OFF 000000           __CFG_EBTR6$OFF 000000  
         __CFG_EBTR7$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000               _ConvertADC FD20  
         __CFG_BOREN$OFF 000000                    status 000FD8          __initialization FD24  
           __end_of_main 0000                   ??_main 0007            __activetblptr 000003  
     __size_of_ConfigPWM 0012                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR4L 000F74                   _CCPR5L 000F71          __CFG_BBSIZ$BB2K 000000  
     __size_of_SetDCPWM4 003A       __size_of_SetDCPWM5 003A                ??_BusyADC 0001  
              ??_ReadADC 0003                ??_OpenADC 0003           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization FD24            ___rparam_used 000001        __end_of_ConfigPWM FD64  
         __pcstackCOMRAM 0001            ??_StartTimer2 0001        __end_of_SetDCPWM4 FD9E  
      __end_of_SetDCPWM5 FDD8       __CFG_CCP2MX$PORTBE 000000                  _CCP4CON 000F73  
                _CCP5CON 000F70      __size_of_ConvertADC 0004      __end_of_StartTimer2 FD52  
                _BusyADC FD2A                  _ReadADC FD36                  _OpenADC FDD8  
         main@duty_cycle 000B                  __Hparam 0000                  __Lparam 0000  
                __pcinit FD24                  __ramtop 1000                  __ptext0 FE36  
                __ptext1 FD44                  __ptext2 FD9E                  __ptext3 FD64  
                __ptext4 FD36                  __ptext5 FDD8                  __ptext6 FD20  
                __ptext7 FD52                  __ptext8 FD2A                _T2CONbits 000FCA  
         OpenADC@config2 0001     end_of_initialization FD24              _StartTimer2 FD44  
              _PORTBbits 000F81                _PORTCbits 000F82                _PORTHbits 000F87  
              _PORTJbits 000F88                _TRISGbits 000F98             ??_ConvertADC 0001  
            _CCP4CONbits 000F73              _CCP5CONbits 000F70                _ConfigPWM FD52  
     __end_of_ConvertADC FD24      start_initialization FD24                _SetDCPWM4 FD64  
              _SetDCPWM5 FD9E          SetDCPWM4@DCycle 0005          SetDCPWM5@DCycle 0005  
             ?_ConfigPWM 0001         __CFG_LPT1OSC$OFF 000000               ?_SetDCPWM4 0001  
             ?_SetDCPWM5 0001                 ?_BusyADC 0001                 ?_ReadADC 0001  
      OpenADC@portconfig 0002                 ?_OpenADC 0001            OpenADC@config 0005  
               _LATAbits 000F89                 _LATDbits 000F8C                 _LATHbits 000F90  
               _PIE1bits 000F9D                 _PIR1bits 000F9E    __CFG_DATABW$DATA16BIT 000000  
       __CFG_WDTPS$32768 000000             ?_StartTimer2 0001              ??_ConfigPWM 0001  
      __CFG_ECCPMX$PORTE 000000               _ADCON0bits 000FC2              ??_SetDCPWM4 0003  
            ??_SetDCPWM5 0003         __size_of_BusyADC 000C         __size_of_ReadADC 000E  
               __Hrparam 0000         __size_of_OpenADC 005E                 __Lrparam 0000  
     SetDCPWM4@dutycycle 0001       SetDCPWM5@dutycycle 0001            __size_of_main 01CA  
               main@freq 000D    __CFG_ADDRBW$ADDR20BIT 000000               _INTCONbits 000FF2  
   __size_of_StartTimer2 000E              main@ADC_val 0009  
