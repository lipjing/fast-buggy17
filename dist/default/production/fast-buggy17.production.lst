

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Mar 19 20:37:09 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	nvCOMRAM
    24  000039                     __pnvCOMRAM:
    25                           	opt stack 0
    26  000039                     _sensor_readings_ptr:
    27                           	opt stack 0
    28  000039                     	ds	2
    29  0000                     _ADCON0	set	4034
    30  0000                     _ADCON0bits	set	4034
    31  0000                     _ADRESH	set	4036
    32  0000                     _ADRESL	set	4035
    33  0000                     _INTCON2bits	set	4081
    34  0000                     _INTCON3bits	set	4080
    35  0000                     _INTCONbits	set	4082
    36  0000                     _IPR1bits	set	3999
    37  0000                     _LATEbits	set	3981
    38  0000                     _PIE1bits	set	3997
    39  0000                     _PIR1bits	set	3998
    40  0000                     _PORTBbits	set	3969
    41  0000                     _RCONbits	set	4048
    42  0000                     _T1CONbits	set	4045
    43  0000                     _TMR0H	set	4055
    44  0000                     _TMR0L	set	4054
    45  0000                     _TMR1H	set	4047
    46  0000                     _TMR1L	set	4046
    47  0000                     _TRISA	set	3986
    48  0000                     _TRISB	set	3987
    49  0000                     _TRISC	set	3988
    50  0000                     _TRISD	set	3989
    51  0000                     _TRISE	set	3990
    52  0000                     _TRISG	set	3992
    53  0000                     _TRISJ	set	3994
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  000298                     __pcinit:
    59                           	opt stack 0
    60  000298                     start_initialization:
    61                           	opt stack 0
    62  000298                     __initialization:
    63                           	opt stack 0
    64                           
    65                           ; Clear objects allocated to COMRAM (17 bytes)
    66  000298  EE00  F028         	lfsr	0,__pbssCOMRAM
    67  00029C  0E11               	movlw	17
    68  00029E                     clear_0:
    69  00029E  6AEE               	clrf	postinc0,c
    70  0002A0  06E8               	decf	wreg,f,c
    71  0002A2  E1FD               	bnz	clear_0
    72  0002A4                     end_of_initialization:
    73                           	opt stack 0
    74  0002A4                     __end_of__initialization:
    75                           	opt stack 0
    76  0002A4  0100               	movlb	0
    77  0002A6  EF6F  F001         	goto	_main	;jump to C main() function
    78                           postinc0	equ	0xFEE
    79                           wreg	equ	0xFE8
    80                           
    81                           	psect	bssCOMRAM
    82  000028                     __pbssCOMRAM:
    83                           	opt stack 0
    84  000028                     _echo_time:
    85                           	opt stack 0
    86  000028                     	ds	2
    87  00002A                     _ms_count:
    88                           	opt stack 0
    89  00002A                     	ds	2
    90  00002C                     _echo_acq_done:
    91                           	opt stack 0
    92  00002C                     	ds	1
    93  00002D                     _sensor_acq_done:
    94                           	opt stack 0
    95  00002D                     	ds	1
    96  00002E                     _sensor_acq_index:
    97                           	opt stack 0
    98  00002E                     	ds	1
    99  00002F                     _sensor_readings:
   100                           	opt stack 0
   101  00002F                     	ds	10
   102                           postinc0	equ	0xFEE
   103                           wreg	equ	0xFE8
   104                           
   105                           	psect	cstackBANK0
   106  000000                     __pcstackBANK0:
   107                           	opt stack 0
   108  000000                     postinc0	equ	0xFEE
   109                           wreg	equ	0xFE8
   110                           
   111                           ; 0 bytes @ 0x0
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	opt stack 0
   116  000001                     ??_SetChanADC:
   117  000001                     ?_ReadADC:
   118                           	opt stack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121  000001                     	ds	1
   122  000002                     SetChanADC@channel:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x1
   126  000002                     	ds	1
   127  000003                     ??_ReadADC:
   128  000003                     SetADCChannel@channel:
   129                           	opt stack 0
   130                           
   131                           ; 1 bytes @ 0x2
   132  000003                     	ds	2
   133  000005                     ??_isrLP:
   134                           
   135                           ; 0 bytes @ 0x4
   136  000005                     	ds	17
   137  000016                     WriteTimer0@timer0:
   138                           	opt stack 0
   139  000016                     WriteTimer1@timer1:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x15
   143  000016                     	ds	2
   144  000018                     WriteTimer0@timer:
   145                           	opt stack 0
   146  000018                     WriteTimer1@timer:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x17
   150  000018                     	ds	2
   151  00001A                     ??_isrHP:
   152                           
   153                           ; 0 bytes @ 0x19
   154  00001A                     	ds	14
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 374 in file "task_scheduler.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;		None               void
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels required when called:    5
   183 ;; This function calls:
   184 ;;		Nothing
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           	psect	text0
   191  0002DE                     __ptext0:
   192                           	opt stack 0
   193  0002DE                     _main:
   194                           	opt stack 26
   195                           
   196                           ;task_scheduler.c: 377: sensor_readings_ptr = sensor_readings;
   197                           
   198                           ;incstack = 0
   199  0002DE  0E2F               	movlw	low _sensor_readings
   200  0002E0  6E39               	movwf	_sensor_readings_ptr,c
   201  0002E2  0E00               	movlw	high _sensor_readings
   202  0002E4  6E3A               	movwf	_sensor_readings_ptr+1,c
   203  0002E6  EF74  F000         	goto	start
   204  0002EA                     __end_of_main:
   205                           	opt stack 0
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209 ;; *************** function _isrLP *****************
   210 ;; Defined at:
   211 ;;		line 342 in file "task_scheduler.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;		None               void
   218 ;; Registers used:
   219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   227 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   228 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;Total ram usage:       17 bytes
   230 ;; Hardware stack levels used:    1
   231 ;; Hardware stack levels required when called:    4
   232 ;; This function calls:
   233 ;;		_ConvertADC
   234 ;;		_ReadADC
   235 ;;		_SetADCChannel
   236 ;; This function is called by:
   237 ;;		Interrupt level 1
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	intcodelo
   242  000018                     __pintcodelo:
   243                           	opt stack 0
   244  000018                     _isrLP:
   245                           	opt stack 26
   246                           
   247                           ;incstack = 0
   248  000018  CFD8 F005          	movff	status,??_isrLP
   249  00001C  CFE8 F006          	movff	wreg,??_isrLP+1
   250  000020  CFE0 F007          	movff	bsr,??_isrLP+2
   251  000024  CFFA F008          	movff	pclath,??_isrLP+3
   252  000028  CFFB F009          	movff	pclatu,??_isrLP+4
   253  00002C  CFE9 F00A          	movff	fsr0l,??_isrLP+5
   254  000030  CFEA F00B          	movff	fsr0h,??_isrLP+6
   255  000034  CFE1 F00C          	movff	fsr1l,??_isrLP+7
   256  000038  CFE2 F00D          	movff	fsr1h,??_isrLP+8
   257  00003C  CFD9 F00E          	movff	fsr2l,??_isrLP+9
   258  000040  CFDA F00F          	movff	fsr2h,??_isrLP+10
   259  000044  CFF3 F010          	movff	prodl,??_isrLP+11
   260  000048  CFF4 F011          	movff	prodh,??_isrLP+12
   261  00004C  CFF6 F012          	movff	tblptrl,??_isrLP+13
   262  000050  CFF7 F013          	movff	tblptrh,??_isrLP+14
   263  000054  CFF8 F014          	movff	tblptru,??_isrLP+15
   264  000058  CFF5 F015          	movff	tablat,??_isrLP+16
   265                           
   266                           ;task_scheduler.c: 345: if(INTCON3bits.INT1IF == 1) {
   267  00005C  B0F0               	btfsc	intcon3,0,c	;volatile
   268                           
   269                           ;task_scheduler.c: 347: INTCON3bits.INT1IF = 0;
   270  00005E  90F0               	bcf	intcon3,0,c	;volatile
   271                           
   272                           ;task_scheduler.c: 348: }
   273                           ;task_scheduler.c: 351: if(INTCON3bits.INT2IF == 1) {
   274  000060  B2F0               	btfsc	intcon3,1,c	;volatile
   275                           
   276                           ;task_scheduler.c: 353: INTCON3bits.INT2IF = 0;
   277  000062  92F0               	bcf	intcon3,1,c	;volatile
   278                           
   279                           ;task_scheduler.c: 354: }
   280                           ;task_scheduler.c: 357: if(PIR1bits.ADIF == 1) {
   281  000064  AC9E               	btfss	3998,6,c	;volatile
   282  000066  D01D               	goto	i1l158
   283                           
   284                           ;task_scheduler.c: 358: PIR1bits.ADIF = 0;
   285  000068  9C9E               	bcf	3998,6,c	;volatile
   286                           
   287                           ;task_scheduler.c: 359: if(sensor_acq_index < 5) {
   288  00006A  0E05               	movlw	5
   289  00006C  602E               	cpfslt	_sensor_acq_index,c	;volatile
   290  00006E  D015               	goto	i1l1154
   291                           
   292                           ;task_scheduler.c: 360: *(sensor_readings_ptr + sensor_acq_index) = ReadADC();
   293  000070  EC67  F001         	call	_ReadADC	;wreg free
   294  000074  502E               	movf	_sensor_acq_index,w,c	;volatile
   295  000076  0D02               	mullw	2
   296  000078  50F3               	movf	prodl,w,c
   297  00007A  2439               	addwf	_sensor_readings_ptr,w,c
   298  00007C  6ED9               	movwf	fsr2l,c
   299  00007E  50F4               	movf	prodh,w,c
   300  000080  203A               	addwfc	_sensor_readings_ptr+1,w,c
   301  000082  6EDA               	movwf	fsr2h,c
   302  000084  C001  FFDE         	movff	?_ReadADC,postinc2
   303  000088  C002  FFDD         	movff	?_ReadADC+1,postdec2
   304                           
   305                           ;task_scheduler.c: 361: sensor_acq_index++;
   306  00008C  2A2E               	incf	_sensor_acq_index,f,c	;volatile
   307                           
   308                           ;task_scheduler.c: 362: SetADCChannel(sensor_acq_index);
   309  00008E  502E               	movf	_sensor_acq_index,w,c	;volatile
   310  000090  EC76  F000         	call	_SetADCChannel
   311                           
   312                           ;task_scheduler.c: 363: ConvertADC();
   313  000094  EC75  F001         	call	_ConvertADC	;wreg free
   314                           
   315                           ;task_scheduler.c: 364: }
   316  000098  D004               	goto	i1l158
   317  00009A                     i1l1154:
   318                           
   319                           ;task_scheduler.c: 365: else {
   320                           ;task_scheduler.c: 366: sensor_acq_done = 1;
   321  00009A  0E01               	movlw	1
   322  00009C  6E2D               	movwf	_sensor_acq_done,c	;volatile
   323                           
   324                           ;task_scheduler.c: 367: PIE1bits.ADIE = 0;
   325  00009E  9C9D               	bcf	3997,6,c	;volatile
   326  0000A0  D000               	goto	i1l158
   327  0000A2                     i1l158:
   328  0000A2  C015  FFF5         	movff	??_isrLP+16,tablat
   329  0000A6  C014  FFF8         	movff	??_isrLP+15,tblptru
   330  0000AA  C013  FFF7         	movff	??_isrLP+14,tblptrh
   331  0000AE  C012  FFF6         	movff	??_isrLP+13,tblptrl
   332  0000B2  C011  FFF4         	movff	??_isrLP+12,prodh
   333  0000B6  C010  FFF3         	movff	??_isrLP+11,prodl
   334  0000BA  C00F  FFDA         	movff	??_isrLP+10,fsr2h
   335  0000BE  C00E  FFD9         	movff	??_isrLP+9,fsr2l
   336  0000C2  C00D  FFE2         	movff	??_isrLP+8,fsr1h
   337  0000C6  C00C  FFE1         	movff	??_isrLP+7,fsr1l
   338  0000CA  C00B  FFEA         	movff	??_isrLP+6,fsr0h
   339  0000CE  C00A  FFE9         	movff	??_isrLP+5,fsr0l
   340  0000D2  C009  FFFB         	movff	??_isrLP+4,pclatu
   341  0000D6  C008  FFFA         	movff	??_isrLP+3,pclath
   342  0000DA  C007  FFE0         	movff	??_isrLP+2,bsr
   343  0000DE  C006  FFE8         	movff	??_isrLP+1,wreg
   344  0000E2  C005  FFD8         	movff	??_isrLP,status
   345  0000E6  0010               	retfie	
   346  0000E8                     __end_of_isrLP:
   347                           	opt stack 0
   348                           pclatu	equ	0xFFB
   349                           pclath	equ	0xFFA
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           prodh	equ	0xFF4
   355                           prodl	equ	0xFF3
   356                           intcon3	equ	0xFF0
   357                           postinc0	equ	0xFEE
   358                           fsr0h	equ	0xFEA
   359                           fsr0l	equ	0xFE9
   360                           wreg	equ	0xFE8
   361                           fsr1h	equ	0xFE2
   362                           fsr1l	equ	0xFE1
   363                           bsr	equ	0xFE0
   364                           postinc2	equ	0xFDE
   365                           postdec2	equ	0xFDD
   366                           fsr2h	equ	0xFDA
   367                           fsr2l	equ	0xFD9
   368                           status	equ	0xFD8
   369                           
   370 ;; *************** function _SetADCChannel *****************
   371 ;; Defined at:
   372 ;;		line 238 in file "task_scheduler.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  channel         1    wreg     unsigned char 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  channel         1    2[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;		None               void
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;Total ram usage:        1 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    3
   393 ;; This function calls:
   394 ;;		_SetChanADC
   395 ;; This function is called by:
   396 ;;		_isrLP
   397 ;;		_GetSensorReadings
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text2
   402  0000EC                     __ptext2:
   403                           	opt stack 0
   404  0000EC                     _SetADCChannel:
   405                           	opt stack 26
   406                           
   407                           ;incstack = 0
   408                           ;SetADCChannel@channel stored from wreg
   409  0000EC  6E03               	movwf	SetADCChannel@channel,c
   410                           
   411                           ;task_scheduler.c: 240: switch (channel) {
   412  0000EE  D040               	goto	i1l974
   413  0000F0                     i1l940:
   414                           
   415                           ;task_scheduler.c: 242: SetChanADC(0b10000111);
   416  0000F0  0E87               	movlw	135
   417  0000F2  EC41  F001         	call	_SetChanADC
   418                           
   419                           ;task_scheduler.c: 243: break;
   420  0000F6  D06E               	goto	i1l137
   421  0000F8                     i1l942:
   422                           
   423                           ;task_scheduler.c: 245: SetChanADC(0b10001111);
   424  0000F8  0E8F               	movlw	143
   425  0000FA  EC41  F001         	call	_SetChanADC
   426                           
   427                           ;task_scheduler.c: 246: break;
   428  0000FE  D06A               	goto	i1l137
   429  000100                     i1l944:
   430                           
   431                           ;task_scheduler.c: 248: SetChanADC(0b10010111);
   432  000100  0E97               	movlw	151
   433  000102  EC41  F001         	call	_SetChanADC
   434                           
   435                           ;task_scheduler.c: 249: break;
   436  000106  D066               	goto	i1l137
   437  000108                     i1l946:
   438                           
   439                           ;task_scheduler.c: 251: SetChanADC(0b10011111);
   440  000108  0E9F               	movlw	159
   441  00010A  EC41  F001         	call	_SetChanADC
   442                           
   443                           ;task_scheduler.c: 252: break;
   444  00010E  D062               	goto	i1l137
   445  000110                     i1l948:
   446                           
   447                           ;task_scheduler.c: 254: SetChanADC(0b10100111);
   448  000110  0EA7               	movlw	167
   449  000112  EC41  F001         	call	_SetChanADC
   450                           
   451                           ;task_scheduler.c: 255: break;
   452  000116  D05E               	goto	i1l137
   453  000118                     i1l950:
   454                           
   455                           ;task_scheduler.c: 257: SetChanADC(0b10101111);
   456  000118  0EAF               	movlw	175
   457  00011A  EC41  F001         	call	_SetChanADC
   458                           
   459                           ;task_scheduler.c: 258: break;
   460  00011E  D05A               	goto	i1l137
   461  000120                     i1l952:
   462                           
   463                           ;task_scheduler.c: 260: SetChanADC(0b10110111);
   464  000120  0EB7               	movlw	183
   465  000122  EC41  F001         	call	_SetChanADC
   466                           
   467                           ;task_scheduler.c: 261: break;
   468  000126  D056               	goto	i1l137
   469  000128                     i1l954:
   470                           
   471                           ;task_scheduler.c: 263: SetChanADC(0b10111111);
   472  000128  0EBF               	movlw	191
   473  00012A  EC41  F001         	call	_SetChanADC
   474                           
   475                           ;task_scheduler.c: 264: break;
   476  00012E  D052               	goto	i1l137
   477  000130                     i1l956:
   478                           
   479                           ;task_scheduler.c: 266: SetChanADC(0b11000111);
   480  000130  0EC7               	movlw	199
   481  000132  EC41  F001         	call	_SetChanADC
   482                           
   483                           ;task_scheduler.c: 267: break;
   484  000136  D04E               	goto	i1l137
   485  000138                     i1l958:
   486                           
   487                           ;task_scheduler.c: 269: SetChanADC(0b11001111);
   488  000138  0ECF               	movlw	207
   489  00013A  EC41  F001         	call	_SetChanADC
   490                           
   491                           ;task_scheduler.c: 270: break;
   492  00013E  D04A               	goto	i1l137
   493  000140                     i1l960:
   494                           
   495                           ;task_scheduler.c: 272: SetChanADC(0b11010111);
   496  000140  0ED7               	movlw	215
   497  000142  EC41  F001         	call	_SetChanADC
   498                           
   499                           ;task_scheduler.c: 273: break;
   500  000146  D046               	goto	i1l137
   501  000148                     i1l962:
   502                           
   503                           ;task_scheduler.c: 275: SetChanADC(0b11011111);
   504  000148  0EDF               	movlw	223
   505  00014A  EC41  F001         	call	_SetChanADC
   506                           
   507                           ;task_scheduler.c: 276: break;
   508  00014E  D042               	goto	i1l137
   509  000150                     i1l964:
   510                           
   511                           ;task_scheduler.c: 278: SetChanADC(0b11100111);
   512  000150  0EE7               	movlw	231
   513  000152  EC41  F001         	call	_SetChanADC
   514                           
   515                           ;task_scheduler.c: 279: break;
   516  000156  D03E               	goto	i1l137
   517  000158                     i1l966:
   518                           
   519                           ;task_scheduler.c: 281: SetChanADC(0b11101111);
   520  000158  0EEF               	movlw	239
   521  00015A  EC41  F001         	call	_SetChanADC
   522                           
   523                           ;task_scheduler.c: 282: break;
   524  00015E  D03A               	goto	i1l137
   525  000160                     i1l968:
   526                           
   527                           ;task_scheduler.c: 284: SetChanADC(0b11110111);
   528  000160  0EF7               	movlw	247
   529  000162  EC41  F001         	call	_SetChanADC
   530                           
   531                           ;task_scheduler.c: 285: break;
   532  000166  D036               	goto	i1l137
   533  000168                     i1l970:
   534                           
   535                           ;task_scheduler.c: 287: SetChanADC(0b11111111);
   536  000168  0EFF               	movlw	255
   537  00016A  EC41  F001         	call	_SetChanADC
   538                           
   539                           ;task_scheduler.c: 291: }
   540                           
   541                           ;task_scheduler.c: 290: break;
   542                           
   543                           ;task_scheduler.c: 289: default:
   544                           
   545                           ;task_scheduler.c: 288: break;
   546  00016E  D032               	goto	i1l137
   547  000170                     i1l974:
   548  000170  5003               	movf	SetADCChannel@channel,w,c
   549                           
   550                           ; Switch size 1, requested type "space"
   551                           ; Number of cases is 16, Range of values is 0 to 15
   552                           ; switch strategies available:
   553                           ; Name         Instructions Cycles
   554                           ; simple_byte           49    25 (average)
   555                           ;	Chosen strategy is simple_byte
   556  000172  0A00               	xorlw	0	; case 0
   557  000174  B4D8               	btfsc	status,2,c
   558  000176  D7BC               	goto	i1l940
   559  000178  0A01               	xorlw	1	; case 1
   560  00017A  B4D8               	btfsc	status,2,c
   561  00017C  D7BD               	goto	i1l942
   562  00017E  0A03               	xorlw	3	; case 2
   563  000180  B4D8               	btfsc	status,2,c
   564  000182  D7BE               	goto	i1l944
   565  000184  0A01               	xorlw	1	; case 3
   566  000186  B4D8               	btfsc	status,2,c
   567  000188  D7BF               	goto	i1l946
   568  00018A  0A07               	xorlw	7	; case 4
   569  00018C  B4D8               	btfsc	status,2,c
   570  00018E  D7C0               	goto	i1l948
   571  000190  0A01               	xorlw	1	; case 5
   572  000192  B4D8               	btfsc	status,2,c
   573  000194  D7C1               	goto	i1l950
   574  000196  0A03               	xorlw	3	; case 6
   575  000198  B4D8               	btfsc	status,2,c
   576  00019A  D7C2               	goto	i1l952
   577  00019C  0A01               	xorlw	1	; case 7
   578  00019E  B4D8               	btfsc	status,2,c
   579  0001A0  D7C3               	goto	i1l954
   580  0001A2  0A0F               	xorlw	15	; case 8
   581  0001A4  B4D8               	btfsc	status,2,c
   582  0001A6  D7C4               	goto	i1l956
   583  0001A8  0A01               	xorlw	1	; case 9
   584  0001AA  B4D8               	btfsc	status,2,c
   585  0001AC  D7C5               	goto	i1l958
   586  0001AE  0A03               	xorlw	3	; case 10
   587  0001B0  B4D8               	btfsc	status,2,c
   588  0001B2  D7C6               	goto	i1l960
   589  0001B4  0A01               	xorlw	1	; case 11
   590  0001B6  B4D8               	btfsc	status,2,c
   591  0001B8  D7C7               	goto	i1l962
   592  0001BA  0A07               	xorlw	7	; case 12
   593  0001BC  B4D8               	btfsc	status,2,c
   594  0001BE  D7C8               	goto	i1l964
   595  0001C0  0A01               	xorlw	1	; case 13
   596  0001C2  B4D8               	btfsc	status,2,c
   597  0001C4  D7C9               	goto	i1l966
   598  0001C6  0A03               	xorlw	3	; case 14
   599  0001C8  B4D8               	btfsc	status,2,c
   600  0001CA  D7CA               	goto	i1l968
   601  0001CC  0A01               	xorlw	1	; case 15
   602  0001CE  B4D8               	btfsc	status,2,c
   603  0001D0  D7CB               	goto	i1l970
   604  0001D2  D000               	goto	i1l137
   605  0001D4                     i1l137:
   606  0001D4  0012               	return		;funcret
   607  0001D6                     __end_of_SetADCChannel:
   608                           	opt stack 0
   609                           pclatu	equ	0xFFB
   610                           pclath	equ	0xFFA
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           prodh	equ	0xFF4
   616                           prodl	equ	0xFF3
   617                           intcon3	equ	0xFF0
   618                           postinc0	equ	0xFEE
   619                           fsr0h	equ	0xFEA
   620                           fsr0l	equ	0xFE9
   621                           wreg	equ	0xFE8
   622                           fsr1h	equ	0xFE2
   623                           fsr1l	equ	0xFE1
   624                           bsr	equ	0xFE0
   625                           postinc2	equ	0xFDE
   626                           postdec2	equ	0xFDD
   627                           fsr2h	equ	0xFDA
   628                           fsr2l	equ	0xFD9
   629                           status	equ	0xFD8
   630                           
   631 ;; *************** function _SetChanADC *****************
   632 ;; Defined at:
   633 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  channel         1    wreg     unsigned char 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  channel         1    1[COMRAM] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;		None               void
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    2
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_SetADCChannel
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  000282                     __ptext3:
   663                           	opt stack 0
   664  000282                     _SetChanADC:
   665                           	opt stack 26
   666                           
   667                           ;incstack = 0
   668                           ;SetChanADC@channel stored from wreg
   669  000282  6E02               	movwf	SetChanADC@channel,c
   670  000284  CFC2 F001          	movff	4034,??_SetChanADC	;volatile
   671  000288  0EC3               	movlw	195
   672  00028A  1601               	andwf	??_SetChanADC,f,c
   673  00028C  90D8               	bcf	status,0,c
   674  00028E  3002               	rrcf	SetChanADC@channel,w,c
   675  000290  0B3C               	andlw	60
   676  000292  1001               	iorwf	??_SetChanADC,w,c
   677  000294  6EC2               	movwf	4034,c	;volatile
   678  000296  0012               	return		;funcret
   679  000298                     __end_of_SetChanADC:
   680                           	opt stack 0
   681                           pclatu	equ	0xFFB
   682                           pclath	equ	0xFFA
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           prodh	equ	0xFF4
   688                           prodl	equ	0xFF3
   689                           intcon3	equ	0xFF0
   690                           postinc0	equ	0xFEE
   691                           fsr0h	equ	0xFEA
   692                           fsr0l	equ	0xFE9
   693                           wreg	equ	0xFE8
   694                           fsr1h	equ	0xFE2
   695                           fsr1l	equ	0xFE1
   696                           bsr	equ	0xFE0
   697                           postinc2	equ	0xFDE
   698                           postdec2	equ	0xFDD
   699                           fsr2h	equ	0xFDA
   700                           fsr2l	equ	0xFD9
   701                           status	equ	0xFD8
   702                           
   703 ;; *************** function _ReadADC *****************
   704 ;; Defined at:
   705 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  2    0[COMRAM] int 
   712 ;; Registers used:
   713 ;;		wreg, status,2
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;Total ram usage:        4 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    2
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_isrLP
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text4
   734  0002CE                     __ptext4:
   735                           	opt stack 0
   736  0002CE                     _ReadADC:
   737                           	opt stack 27
   738                           
   739                           ;incstack = 0
   740  0002CE  50C4               	movf	4036,w,c	;volatile
   741  0002D0  6E03               	movwf	??_ReadADC& (0+255),c
   742  0002D2  50C3               	movf	4035,w,c	;volatile
   743  0002D4  6E01               	movwf	?_ReadADC,c
   744  0002D6  C003  F002         	movff	??_ReadADC,?_ReadADC+1
   745  0002DA  D000               	goto	i1l191
   746  0002DC                     i1l191:
   747  0002DC  0012               	return		;funcret
   748  0002DE                     __end_of_ReadADC:
   749                           	opt stack 0
   750                           pclatu	equ	0xFFB
   751                           pclath	equ	0xFFA
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           prodh	equ	0xFF4
   757                           prodl	equ	0xFF3
   758                           intcon3	equ	0xFF0
   759                           postinc0	equ	0xFEE
   760                           fsr0h	equ	0xFEA
   761                           fsr0l	equ	0xFE9
   762                           wreg	equ	0xFE8
   763                           fsr1h	equ	0xFE2
   764                           fsr1l	equ	0xFE1
   765                           bsr	equ	0xFE0
   766                           postinc2	equ	0xFDE
   767                           postdec2	equ	0xFDD
   768                           fsr2h	equ	0xFDA
   769                           fsr2l	equ	0xFD9
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _ConvertADC *****************
   773 ;; Defined at:
   774 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		None
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    2
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_isrLP
   799 ;;		_GetSensorReadings
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text5
   804  0002EA                     __ptext5:
   805                           	opt stack 0
   806  0002EA                     _ConvertADC:
   807                           	opt stack 27
   808                           
   809                           ;incstack = 0
   810  0002EA  82C2               	bsf	4034,1,c	;volatile
   811  0002EC  0012               	return		;funcret
   812  0002EE                     __end_of_ConvertADC:
   813                           	opt stack 0
   814                           pclatu	equ	0xFFB
   815                           pclath	equ	0xFFA
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           prodh	equ	0xFF4
   821                           prodl	equ	0xFF3
   822                           intcon3	equ	0xFF0
   823                           postinc0	equ	0xFEE
   824                           fsr0h	equ	0xFEA
   825                           fsr0l	equ	0xFE9
   826                           wreg	equ	0xFE8
   827                           fsr1h	equ	0xFE2
   828                           fsr1l	equ	0xFE1
   829                           bsr	equ	0xFE0
   830                           postinc2	equ	0xFDE
   831                           postdec2	equ	0xFDD
   832                           fsr2h	equ	0xFDA
   833                           fsr2l	equ	0xFD9
   834                           status	equ	0xFD8
   835                           
   836 ;; *************** function _isrHP *****************
   837 ;; Defined at:
   838 ;;		line 314 in file "task_scheduler.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;		None               void
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:       14 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    1
   859 ;; This function calls:
   860 ;;		_WriteTimer0
   861 ;;		_WriteTimer1
   862 ;; This function is called by:
   863 ;;		Interrupt level 2
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	intcode
   868  000008                     __pintcode:
   869                           	opt stack 0
   870  000008                     _isrHP:
   871                           	opt stack 26
   872                           
   873                           ;incstack = 0
   874  000008  CFFA F01A          	movff	pclath,??_isrHP
   875  00000C  CFFB F01B          	movff	pclatu,??_isrHP+1
   876  000010  CFE9 F01C          	movff	fsr0l,??_isrHP+2
   877  000014  EDEB  F000         	call	int_func,f	;refresh shadow registers
   878                           pclatu	equ	0xFFB
   879                           pclath	equ	0xFFA
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           prodh	equ	0xFF4
   885                           prodl	equ	0xFF3
   886                           intcon3	equ	0xFF0
   887                           postinc0	equ	0xFEE
   888                           fsr0h	equ	0xFEA
   889                           fsr0l	equ	0xFE9
   890                           wreg	equ	0xFE8
   891                           fsr1h	equ	0xFE2
   892                           fsr1l	equ	0xFE1
   893                           bsr	equ	0xFE0
   894                           postinc2	equ	0xFDE
   895                           postdec2	equ	0xFDD
   896                           fsr2h	equ	0xFDA
   897                           fsr2l	equ	0xFD9
   898                           status	equ	0xFD8
   899                           
   900                           	psect	intcode_body
   901  0001D6                     __pintcode_body:
   902                           	opt stack 26
   903  0001D6                     int_func:
   904                           	opt stack 26
   905  0001D6  0006               	pop		; remove dummy address from shadow register refresh
   906  0001D8  CFEA F01D          	movff	fsr0h,??_isrHP+3
   907  0001DC  CFE1 F01E          	movff	fsr1l,??_isrHP+4
   908  0001E0  CFE2 F01F          	movff	fsr1h,??_isrHP+5
   909  0001E4  CFD9 F020          	movff	fsr2l,??_isrHP+6
   910  0001E8  CFDA F021          	movff	fsr2h,??_isrHP+7
   911  0001EC  CFF3 F022          	movff	prodl,??_isrHP+8
   912  0001F0  CFF4 F023          	movff	prodh,??_isrHP+9
   913  0001F4  CFF6 F024          	movff	tblptrl,??_isrHP+10
   914  0001F8  CFF7 F025          	movff	tblptrh,??_isrHP+11
   915  0001FC  CFF8 F026          	movff	tblptru,??_isrHP+12
   916  000200  CFF5 F027          	movff	tablat,??_isrHP+13
   917                           
   918                           ;task_scheduler.c: 317: if(INTCONbits.TMR0IF == 1) {
   919  000204  A4F2               	btfss	intcon,2,c	;volatile
   920  000206  D00A               	goto	i2l1118
   921                           
   922                           ;task_scheduler.c: 318: INTCONbits.TMR0IF = 0;
   923  000208  94F2               	bcf	intcon,2,c	;volatile
   924                           
   925                           ;task_scheduler.c: 319: ms_count++;
   926  00020A  4A2A               	infsnz	_ms_count,f,c	;volatile
   927  00020C  2A2B               	incf	_ms_count+1,f,c	;volatile
   928                           
   929                           ;task_scheduler.c: 320: WriteTimer0(63036);
   930  00020E  0EF6               	movlw	246
   931  000210  6E17               	movwf	WriteTimer0@timer0+1,c
   932  000212  0E3C               	movlw	60
   933  000214  6E16               	movwf	WriteTimer0@timer0,c
   934  000216  EC5E  F001         	call	_WriteTimer0	;wreg free
   935  00021A  D000               	goto	i2l1118
   936  00021C                     i2l1118:
   937                           
   938                           ;task_scheduler.c: 321: }
   939                           ;task_scheduler.c: 324: if(INTCONbits.RBIF == 1) {
   940  00021C  A0F2               	btfss	intcon,0,c	;volatile
   941  00021E  D014               	goto	i2l150
   942                           
   943                           ;task_scheduler.c: 325: INTCONbits.RBIE = 0;
   944  000220  96F2               	bcf	intcon,3,c	;volatile
   945                           
   946                           ;task_scheduler.c: 326: if(PORTBbits.RB4 == 1) {
   947  000222  A881               	btfss	3969,4,c	;volatile
   948  000224  D008               	goto	i2l1126
   949                           
   950                           ;task_scheduler.c: 327: T1CONbits.TMR1ON = 1;
   951  000226  80CD               	bsf	4045,0,c	;volatile
   952                           
   953                           ;task_scheduler.c: 328: WriteTimer1(0);
   954  000228  0E00               	movlw	0
   955  00022A  6E17               	movwf	WriteTimer1@timer1+1,c
   956  00022C  0E00               	movlw	0
   957  00022E  6E16               	movwf	WriteTimer1@timer1,c
   958  000230  EC55  F001         	call	_WriteTimer1	;wreg free
   959  000234  D000               	goto	i2l1126
   960  000236                     i2l1126:
   961                           
   962                           ;task_scheduler.c: 329: }
   963                           ;task_scheduler.c: 330: if(PORTBbits.RB4 == 0) {
   964  000236  B881               	btfsc	3969,4,c	;volatile
   965  000238  D004               	goto	i2l1132
   966                           
   967                           ;task_scheduler.c: 331: T1CONbits.TMR1ON = 0;
   968  00023A  90CD               	bcf	4045,0,c	;volatile
   969                           
   970                           ;task_scheduler.c: 332: echo_acq_done = 1;
   971  00023C  0E01               	movlw	1
   972  00023E  6E2C               	movwf	_echo_acq_done,c	;volatile
   973  000240  D000               	goto	i2l1132
   974  000242                     i2l1132:
   975                           
   976                           ;task_scheduler.c: 333: }
   977                           ;task_scheduler.c: 334: INTCONbits.RBIE = 1;
   978  000242  86F2               	bsf	intcon,3,c	;volatile
   979                           
   980                           ;task_scheduler.c: 335: INTCONbits.RBIF = 0;
   981  000244  90F2               	bcf	intcon,0,c	;volatile
   982  000246  D000               	goto	i2l150
   983  000248                     i2l150:
   984  000248  C027  FFF5         	movff	??_isrHP+13,tablat
   985  00024C  C026  FFF8         	movff	??_isrHP+12,tblptru
   986  000250  C025  FFF7         	movff	??_isrHP+11,tblptrh
   987  000254  C024  FFF6         	movff	??_isrHP+10,tblptrl
   988  000258  C023  FFF4         	movff	??_isrHP+9,prodh
   989  00025C  C022  FFF3         	movff	??_isrHP+8,prodl
   990  000260  C021  FFDA         	movff	??_isrHP+7,fsr2h
   991  000264  C020  FFD9         	movff	??_isrHP+6,fsr2l
   992  000268  C01F  FFE2         	movff	??_isrHP+5,fsr1h
   993  00026C  C01E  FFE1         	movff	??_isrHP+4,fsr1l
   994  000270  C01D  FFEA         	movff	??_isrHP+3,fsr0h
   995  000274  C01C  FFE9         	movff	??_isrHP+2,fsr0l
   996  000278  C01B  FFFB         	movff	??_isrHP+1,pclatu
   997  00027C  C01A  FFFA         	movff	??_isrHP,pclath
   998  000280  0011               	retfie		f
   999  000282                     __end_of_isrHP:
  1000                           	opt stack 0
  1001                           pclatu	equ	0xFFB
  1002                           pclath	equ	0xFFA
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           prodh	equ	0xFF4
  1008                           prodl	equ	0xFF3
  1009                           intcon	equ	0xFF2
  1010                           intcon3	equ	0xFF0
  1011                           postinc0	equ	0xFEE
  1012                           fsr0h	equ	0xFEA
  1013                           fsr0l	equ	0xFE9
  1014                           wreg	equ	0xFE8
  1015                           fsr1h	equ	0xFE2
  1016                           fsr1l	equ	0xFE1
  1017                           bsr	equ	0xFE0
  1018                           postinc2	equ	0xFDE
  1019                           postdec2	equ	0xFDD
  1020                           fsr2h	equ	0xFDA
  1021                           fsr2l	equ	0xFD9
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _WriteTimer1 *****************
  1025 ;; Defined at:
  1026 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  timer1          2   21[COMRAM] unsigned int 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  timer           2   23[COMRAM] struct Timers
  1031 ;; Return value:  Size  Location     Type
  1032 ;;		None               void
  1033 ;; Registers used:
  1034 ;;		None
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:        4 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_isrHP
  1050 ;;		_ConfigureTimer1
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text7
  1055  0002AA                     __ptext7:
  1056                           	opt stack 0
  1057  0002AA                     _WriteTimer1:
  1058                           	opt stack 26
  1059                           
  1060                           ;incstack = 0
  1061  0002AA  C016  F018         	movff	WriteTimer1@timer1,WriteTimer1@timer
  1062  0002AE  C017  F019         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  1063  0002B2  C019  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  1064  0002B6  C018  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  1065  0002BA  0012               	return		;funcret
  1066  0002BC                     __end_of_WriteTimer1:
  1067                           	opt stack 0
  1068                           pclatu	equ	0xFFB
  1069                           pclath	equ	0xFFA
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           prodh	equ	0xFF4
  1075                           prodl	equ	0xFF3
  1076                           intcon	equ	0xFF2
  1077                           intcon3	equ	0xFF0
  1078                           postinc0	equ	0xFEE
  1079                           fsr0h	equ	0xFEA
  1080                           fsr0l	equ	0xFE9
  1081                           wreg	equ	0xFE8
  1082                           fsr1h	equ	0xFE2
  1083                           fsr1l	equ	0xFE1
  1084                           bsr	equ	0xFE0
  1085                           postinc2	equ	0xFDE
  1086                           postdec2	equ	0xFDD
  1087                           fsr2h	equ	0xFDA
  1088                           fsr2l	equ	0xFD9
  1089                           status	equ	0xFD8
  1090                           
  1091 ;; *************** function _WriteTimer0 *****************
  1092 ;; Defined at:
  1093 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  timer0          2   21[COMRAM] unsigned int 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  timer           2   23[COMRAM] struct Timers
  1098 ;; Return value:  Size  Location     Type
  1099 ;;		None               void
  1100 ;; Registers used:
  1101 ;;		None
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;Total ram usage:        4 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_isrHP
  1117 ;;		_ConfigureTimer0
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text8
  1122  0002BC                     __ptext8:
  1123                           	opt stack 0
  1124  0002BC                     _WriteTimer0:
  1125                           	opt stack 26
  1126                           
  1127                           ;incstack = 0
  1128  0002BC  C016  F018         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1129  0002C0  C017  F019         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1130  0002C4  C019  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1131  0002C8  C018  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1132  0002CC  0012               	return		;funcret
  1133  0002CE                     __end_of_WriteTimer0:
  1134                           	opt stack 0
  1135  0000                     pclatu	equ	0xFFB
  1136                           pclath	equ	0xFFA
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           prodh	equ	0xFF4
  1142                           prodl	equ	0xFF3
  1143                           intcon	equ	0xFF2
  1144                           intcon3	equ	0xFF0
  1145                           postinc0	equ	0xFEE
  1146                           fsr0h	equ	0xFEA
  1147                           fsr0l	equ	0xFE9
  1148                           wreg	equ	0xFE8
  1149                           fsr1h	equ	0xFE2
  1150                           fsr1l	equ	0xFE1
  1151                           bsr	equ	0xFE0
  1152                           postinc2	equ	0xFDE
  1153                           postdec2	equ	0xFDD
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           status	equ	0xFD8
  1157                           pclatu	equ	0xFFB
  1158                           pclath	equ	0xFFA
  1159                           tblptru	equ	0xFF8
  1160                           tblptrh	equ	0xFF7
  1161                           tblptrl	equ	0xFF6
  1162                           tablat	equ	0xFF5
  1163                           prodh	equ	0xFF4
  1164                           prodl	equ	0xFF3
  1165                           intcon	equ	0xFF2
  1166                           intcon3	equ	0xFF0
  1167                           postinc0	equ	0xFEE
  1168                           fsr0h	equ	0xFEA
  1169                           fsr0l	equ	0xFE9
  1170                           wreg	equ	0xFE8
  1171                           fsr1h	equ	0xFE2
  1172                           fsr1l	equ	0xFE1
  1173                           bsr	equ	0xFE0
  1174                           postinc2	equ	0xFDE
  1175                           postdec2	equ	0xFDD
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           
  1180                           	psect	rparam
  1181  0000                     pclatu	equ	0xFFB
  1182                           pclath	equ	0xFFA
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           prodh	equ	0xFF4
  1188                           prodl	equ	0xFF3
  1189                           intcon	equ	0xFF2
  1190                           intcon3	equ	0xFF0
  1191                           postinc0	equ	0xFEE
  1192                           fsr0h	equ	0xFEA
  1193                           fsr0l	equ	0xFE9
  1194                           wreg	equ	0xFE8
  1195                           fsr1h	equ	0xFE2
  1196                           fsr1l	equ	0xFE1
  1197                           bsr	equ	0xFE0
  1198                           postinc2	equ	0xFDE
  1199                           postdec2	equ	0xFDD
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sensor_readings_ptr	PTR int  size(2) Largest target is 10
		 -> NULL(NULL[0]), sensor_readings(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrHP in COMRAM

    _isrHP->_WriteTimer0
    _isrHP->_WriteTimer1

Critical Paths under _isrLP in COMRAM

    _isrLP->_ReadADC
    _SetADCChannel->_SetChanADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _isrHP in BANK0

    None.

Critical Paths under _isrLP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrHP in BANK1

    None.

Critical Paths under _isrLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrHP in BANK2

    None.

Critical Paths under _isrLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrHP in BANK3

    None.

Critical Paths under _isrLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrHP in BANK4

    None.

Critical Paths under _isrLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrHP in BANK5

    None.

Critical Paths under _isrLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrHP in BANK6

    None.

Critical Paths under _isrLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrHP in BANK7

    None.

Critical Paths under _isrLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrHP in BANK8

    None.

Critical Paths under _isrLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrHP in BANK9

    None.

Critical Paths under _isrLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrHP in BANK10

    None.

Critical Paths under _isrLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrHP in BANK11

    None.

Critical Paths under _isrLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrHP in BANK12

    None.

Critical Paths under _isrLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrHP in BANK13

    None.

Critical Paths under _isrLP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrHP in BANK14

    None.

Critical Paths under _isrLP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrHP in BANK15

    None.

Critical Paths under _isrLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isrLP                                               17    17      0      30
                                              4 COMRAM    17    17      0
                         _ConvertADC
                            _ReadADC
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (2) _SetADCChannel                                        1     1      0      30
                                              2 COMRAM     1     1      0
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (3) _SetChanADC                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isrHP                                               14    14      0     348
                                             25 COMRAM    14    14      0
                        _WriteTimer0
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (5) _WriteTimer1                                          4     2      2     174
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _WriteTimer0                                          4     2      2     174
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isrLP (ROOT)
   _ConvertADC
   _ReadADC
   _SetADCChannel
     _SetChanADC

 _isrHP (ROOT)
   _WriteTimer0
   _WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      3A       1       61.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      32        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Mar 19 20:37:09 2017

                     bsr 000FE0              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000             __CFG_CP4$OFF 000000             __CFG_CP5$OFF 000000  
           __CFG_CP6$OFF 000000             __CFG_CP7$OFF 000000             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000     __size_of_WriteTimer0 0012     __size_of_WriteTimer1 0012  
          _SetADCChannel 00EC                      wreg 000FE8             __CFG_MODE$MC 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main 02DE  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 00E8            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000010          __end_of_ReadADC 02DE            __CFG_WAIT$OFF 000000  
                  ?_main 0001                    i1l137 01D4                    i1l158 00A2  
                  i1l191 02DC                    i2l150 0248                    i1l940 00F0  
         ?_SetADCChannel 0001                    i1l950 0118                    i1l942 00F8  
                  i1l960 0140                    i1l952 0120                    i1l944 0100  
                  i1l970 0168                    i1l962 0148                    i1l954 0128  
                  i1l946 0108                    i1l964 0150                    i1l956 0130  
                  i1l948 0110                    i1l966 0158                    i1l958 0138  
                  i1l974 0170                    i1l968 0160                    _TMR0H 000FD7  
                  _TMR1H 000FCF                    _TMR0L 000FD6                    _TMR1L 000FCE  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TRISG 000F98  
                  _TRISJ 000F9A            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
          __CFG_WRT4$OFF 000000            __CFG_WRT5$OFF 000000            __CFG_WRT6$OFF 000000  
          __CFG_WRT7$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
         __CFG_EBTR4$OFF 000000           __CFG_EBTR5$OFF 000000           __CFG_EBTR6$OFF 000000  
         __CFG_EBTR7$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _isrHP 0008  
                  _isrLP 0018               _ConvertADC 02EA           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 0298  
           __end_of_main 02EA                   ??_main 0000            __activetblptr 000003  
             _SetChanADC 0282                   _ADCON0 000FC2                   ?_isrHP 0001  
                 ?_isrLP 0001                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 i1l1154 009A                   i2l1132 0242                   i2l1126 0236  
                 i2l1118 021C          __CFG_BBSIZ$BB2K 000000                ??_ReadADC 0003  
         __CFG_XINST$OFF 000000      _sensor_readings_ptr 0039                   clear_0 029E  
        ??_SetADCChannel 0003                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization 02A4            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_isrHP 0282            __end_of_isrLP 00E8              ?_SetChanADC 0001  
        _sensor_acq_done 002D                  ??_isrHP 001A                  ??_isrLP 0005  
             __pnvCOMRAM 0039          _sensor_readings 002F         WriteTimer0@timer 0018  
       WriteTimer1@timer 0018            ??_WriteTimer0 0018            ??_WriteTimer1 0018  
    __size_of_ConvertADC 0004                  _ReadADC 02CE                  __Hparam 0000  
    __size_of_SetChanADC 0016                  __Lparam 0000          __CFG_STVREN$OFF 000000  
                __pcinit 0298                  __ramtop 1000                  __ptext0 02DE  
                __ptext2 00EC                  __ptext3 0282                  __ptext4 02CE  
                __ptext5 02EA                  __ptext7 02AA                  __ptext8 02BC  
              _T1CONbits 000FCD      __end_of_WriteTimer0 02CE      __end_of_WriteTimer1 02BC  
         __pintcode_body 01D6     end_of_initialization 02A4                  int_func 01D6  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTBbits 000F81             ??_ConvertADC 0001              _WriteTimer0 02BC  
            _WriteTimer1 02AA       __end_of_ConvertADC 02EE    __end_of_SetADCChannel 01D6  
           ??_SetChanADC 0001      start_initialization 0298            _echo_acq_done 002C  
       _sensor_acq_index 002E     SetADCChannel@channel 0003       __end_of_SetChanADC 0298  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0028            __pcstackBANK0 0000  
               ?_ReadADC 0001                _echo_time 0028        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008              __pintcodelo 0018        WriteTimer0@timer0 0016  
      WriteTimer1@timer1 0016           __size_of_isrHP 027A           __size_of_isrLP 00D0  
               _LATEbits 000F8D                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E    __CFG_DATABW$DATA16BIT 000000                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000        __CFG_ECCPMX$PORTH 000000               _ADCON0bits 000FC2  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0         __size_of_ReadADC 0010  
               __Hrparam 0000                 __Lrparam 0000             ?_WriteTimer0 0016  
           ?_WriteTimer1 0016            __size_of_main 000C                 _ms_count 002A  
  __CFG_ADDRBW$ADDR20BIT 000000               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000        SetChanADC@channel 0002   __size_of_SetADCChannel 00EA  
